{"version":3,"sources":["./src/app/modules/comercial/cadastros/tipos-comissionamento/tipo-comissionamento-routing.module.ts","./src/app/modules/comercial/cadastros/tipos-comissionamento/formulario/formulario-resolver.guard.ts","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/cadastros/tipos-comissionamento/formulario/formulario.component.scss","./src/app/modules/comercial/cadastros/tipos-comissionamento/formulario/formulario.component.ts","./src/app/modules/comercial/cadastros/tipos-comissionamento/lista/lista.component.html","./src/app/modules/comercial/comercial.service.ts","./src/app/modules/comercial/cadastros/tipos-comissionamento/tipo-comissionamento.module.ts","./src/app/modules/comercial/cadastros/tipos-comissionamento/formulario/formulario.component.html","./src/app/guards/form-deactivate.guard.ts","./src/app/modules/comercial/cadastros/tipos-comissionamento/lista/lista.component.ts","./src/app/modules/comercial/cadastros/tipos-comissionamento/lista/lista.component.scss"],"names":[],"mappings":"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","file":"tipos-comissionamento-tipo-comissionamento-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosTipoComissionamentoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosTipoComissionamentoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosTipoComissionamentoFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialCadastrosTipoComissionamentoListaComponent },\n  {\n    path: 'novo',\n    component: ComercialCadastrosTipoComissionamentoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosTipoComissionamentoFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosTipoComissionamentoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosTipoComissionamentoFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialCadastrosTipoComissionamentoModuleRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosTipoComissionamentoService } from '../tipo-comissionamento.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosTipoComissionamentoFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private tipoComissionamentoService: ComercialCadastrosTipoComissionamentoService,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.tipoComissionamentoService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of(\n      {\n        success: true,\n        data: [{\n          codTipoComissionamento: null,\n          dsTipoComissionamento: null,\n          qtdeRegistros: null,\n          codSituacao: null,\n          codLinha: null,\n          nomeLinha: null,\n          codClasse: null,\n          nomeClasse: null,\n          percentual: []\n        }]\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy90aXBvcy1jb21pc3Npb25hbWVudG8vZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ComercialCadastrosMateriaisGrupoMateriaisAssociadosService } from './../../materiais/grupos-materiais-associados/grupos-materiais-associados.service';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n  FormControl,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\n\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\n\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { ComercialCadastrosTipoComissionamentoService } from '../tipo-comissionamento.service';\n\n@Component({\n  selector: 'comercial-cadastros-tipo-comissionamento-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class ComercialCadastrosTipoComissionamentoFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar: boolean;\n  loaderFullScreen = true;\n\n  appTitle: string;\n  breadCrumbTree: Array<any> = [];\n  dadosPercentual: Array<any> = [];\n  show: boolean = false;\n\n  form: FormGroup;\n  formPercentual: FormGroup;\n  formLinhas: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n  codTiposComissionamento: number;\n  formPercentualIndex: number = null;\n  dadosPerc: boolean = false;\n  index: number;\n\n  linhasMaterial: Array<any> = [];\n  classesMaterial: Array<any> = [];\n  // filteredClasses: Array<any> = [];\n  filteredClasses = {};\n  formMateriais: FormGroup;\n\n  firstAccess: boolean = false;\n  codLinha: number = 0;\n  situacao: string;\n\n  tableConfigPercentual: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private tipoComissionamentoService: ComercialCadastrosTipoComissionamentoService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.getFilterValues();\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    // this.getFormFields();\n\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar Tipo de comissionamento';\n      } else {\n        this.appTitle = 'Novo Tipo de comissionamento';\n      }\n\n      this.titleService.setTitle(this.appTitle);\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`\n        },\n        {\n          descricao: 'Lista',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/tipos-comissionamento/lista`\n        },\n        {\n          descricao: this.appTitle\n        }\n      ];\n    });\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes = this.activatedRoute.snapshot.data.detalhes.data;\n\n      if (detalhes[0].codSituacao != null) {\n        this.situacao = detalhes[0].codSituacao.toString();\n      }\n\n\n      this.form = this.formBuilder.group({\n        codTipoComissionamento: [detalhes[0].codTipoComissionamento],\n        dsTipoComissionamento: [detalhes[0].dsTipoComissionamento, [Validators.required]],\n        codSituacao: [this.situacao ? detalhes[0].codSituacao : 1, [Validators.required]],\n        linhas: this.formBuilder.array([]),\n      });\n\n      this.onAddLinha(null, detalhes);\n\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n\n  }\n\n\n  get linhas(): FormArray {\n    return this.form.get('linhas') as FormArray;\n  }\n\n  onAddLinha(index?: number, data?: any ) {\n    let indexLinhas = 1;\n\n\n    if (data) {indexLinhas = data.length;};\n\n    for (let i = 0; i < indexLinhas; i++) {\n      this.linhas.push(\n        this.formBuilder.group({\n          codLinha: [ data ? data[i].codLinha : '', [Validators.required]],\n          codClasse: [data ? data[i].codClasse : '', [Validators.required]],\n          classes: [[]],\n          percentual: this.formBuilder.array([]),\n      }));\n\n\n      if (data) {\n        for (let indice = 0; indice < data[i].percentual.length; indice++) {\n          this.onAddPercentual(index, data[i].percentual[indice], i);\n        }\n      }\n    }\n  }\n\n  onAssociarPercentual(data): void {\n    const percentualAdd = data.percentual;\n    this.percentualAssociado(percentualAdd);\n  }\n\n  percentualAssociado(data): void {\n    this.onAddPercentual(null, data);\n  }\n\n  getPercentual(index: number) {\n    return this.linhas.at(index).get(\"percentual\") as FormArray;\n  }\n\n  onAddPercentual(index?: number, data?: any, indexLinhas?: number): void {\n    let indexData = 0;\n\n    !data ? indexData = index : indexData = indexLinhas;\n      this.getPercentual(indexData).push(\n        this.formBuilder.group({\n          codFaixa: data ? data.codFaixa : null,\n          percDescontoDe: [data ? data.percDescontoDe : null, [Validators.required]],\n          percDescontoAte: [data ? data.percDescontoAte : null, [Validators.required]],\n          percPago: [data ? data.percPago : null, [Validators.required]],\n      }));\n    }\n\n\n  onDeleteValor(index?: number, item?: any, indexPercentual?: number, action?) {\n    this.loaderNavbar = true;\n\n    let dados = [];\n    let valida = [];\n\n    if (action == 'one') {\n      dados.push(item);\n      valida.push(item);\n    } else {\n      dados = item;\n      valida = item;\n    }\n\n    console.log()\n\n    console.log(dados);\n\n    this.confirmDelete().subscribe((response: boolean) => {\n      if (response) {\n        if (dados[0].codFaixa != null) {\n          this.tipoComissionamentoService\n            .deleteFaixa(dados)\n            .pipe(\n              finalize(() => {\n                this.loaderNavbar = false;\n              })\n            )\n            .subscribe({\n              next: (response: JsonResponse) => {\n                if (response.success) {\n                  // this.form.get('linhas')['controls'][index].get('percentual').clear();\n                  // this.form.get('linhas')['controls'][index].splice(0, 1);\n                  // this.form.get('linhas')['controls'].splice(index, 1);\n                  if (action == 'all') {\n                    this.form.get('linhas')['controls'][index].get('percentual').clear();\n                    this.form.get('linhas')['controls'].splice(index, 1);\n                  } else {\n                    this.form.get('linhas')['controls'][index].get('percentual')['controls'].splice(indexPercentual, 1);\n                  }\n                  \n                  if (this.form.get('linhas')['controls'].length < 1) {\n                    this.onAddLinha(index,);\n                  }\n\n                } else {\n                  this.pnotifyService.error();\n                }\n              },\n              error: (error: any) => {\n                if (\n                  error.error.hasOwnProperty('mensagem') &&\n                  (error.mensagem !== null || error.mensagem !== '')\n                ) {\n                  this.pnotifyService.error(error.error.mensagem);\n                } else {\n                  this.pnotifyService.error();\n                }\n              }\n            });\n          } else {\n            // this.form.get('linhas')['controls'][index].get('percentual').clear();\n            // this.form.get('linhas')['controls'].splice(index, 1);\n            if (action == 'all') {\n              this.form.get('linhas')['controls'][index].get('percentual').clear();\n              this.form.get('linhas')['controls'].splice(index, 1);\n            } else {\n              this.form.get('linhas')['controls'][index].get('percentual')['controls'].splice(indexPercentual, 1);\n            }\n            \n          }\n          this.loaderNavbar = false;\n        }\n      });\n    }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  setFormMateriais(): void {\n    this.formMateriais = this.formBuilder.group({\n      codLinha: [null, [Validators.required]],\n      codClasse: [null, [Validators.required]],\n      codMaterial: [null, [Validators.required]],\n      checked: [false]\n    });\n  }\n\n  getFilterValues(): void {\n    this.tipoComissionamentoService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].success === true) {\n          this.linhasMaterial = response[0].data;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].success === true) {\n          this.classesMaterial = response[1].data;\n          const linhas = this.form.controls['linhas'].value;\n\n          linhas.forEach((linha, index) => {\n            this.onChangeLinha(linha.codLinha, index);\n          });\n\n\n          // this.onChangeLinha();\n\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  onChangeLinha(codLinha: number, index: number) {\n    const classes = this.classesMaterial.filter(classe => {\n      return classe.idLinha == codLinha;\n    })\n    this.filteredClasses[index] = classes;\n\n    this.filteredClasses[index].unshift({\n      idClasse: 0,\n      nomeClasse: 'TODOS',\n    });\n  }\n\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n\n        this.tipoComissionamentoService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe({\n            next: (response: any) => {\n              if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                this.form.reset();\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  if (params.hasOwnProperty('id')) {\n                    this.location.back();\n                  } else {\n                    this.router.navigate(['../lista'], {\n                      relativeTo: this.activatedRoute\n                    });\n                  }\n                });\n              } else if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === false\n              ) {\n                this.pnotifyService.notice(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              this.pnotifyService.error();\n            }\n          });\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onMoreNestedFieldError(formGroup: string, index: number, formArray: string, indexNested: number, field: string) {\n    if (this.onMoreNestedFieldInvalid(formGroup, index, formArray, indexNested, field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onMoreNestedFieldInvalid(formGroup: string, index: number, formArray: string, indexNested: number, field: any) {\n    let linhaNestedForm: any = this.form.controls[formGroup];\n    let percentualNestedForm: any = linhaNestedForm.controls[index].controls[formArray];\n    field = percentualNestedForm.controls[indexNested].get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onMoreNestedFieldRequired(formGroup: string, index: number, formArray: string, indexNested: number, field: string) {\n    let required = false;\n    let formControl = new FormControl();\n    let linhaNestedForm: any = this.form.controls[formGroup];\n    let percentualNestedForm: any = linhaNestedForm.controls[index].controls[formArray];\n\n    if (percentualNestedForm.controls[indexNested].get(field).validator) {\n      let validationResult = percentualNestedForm.controls[indexNested]\n        .get(field)\n        .validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onNestedFieldError(formGroup: string, index: number, field: string) {\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\n    let nestedForm: any = this.form.controls[formGroup];\n    field = nestedForm.controls[index].get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\n    let required = false;\n    let formControl = new FormControl();\n    let nestedForm: any = this.form.controls[formGroup];\n\n    if (nestedForm.controls[index].get(field).validator) {\n      let validationResult = nestedForm.controls[index]\n        .get(field)\n        .validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Tipo de Comissionamento\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n    <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-7\\\">\\n              <label for=\\\"dsTiposComissionamento\\\">Tipo de Comissionamento</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"dsTiposComissionamento\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n                <option value=\\\"0\\\">Inativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-8 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Descrição</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let tipoComissionamento of dadosPagination; let i = index\\\"\\n          [class.table-active]=\\\"tipoComissionamento.codTipoComissionamento == codigo\\\">\\n            <td\\n              class=\\\"hover\\\"\\n              [ngClass]=\\\"classStatusBorder(tipoComissionamento)\\\"\\n              (click)=\\\"onDetails(tipoComissionamento)\\\">\\n              {{ tipoComissionamento.dsTipoComissionamento }}\\n            </td>\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n              <!-- <span *ngIf=\\\"tipoComissionamento.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, tipoComissionamento)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"tipoComissionamento.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, tipoComissionamento)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span> -->\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(tipoComissionamento)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"dadosEmpty && dadosPagination.length < 1\\\">\\n      </empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-4 mb-2\\\" [hidden]=\\\"!showDetailPanel\\\" >\\n      <detail-panel panelTitle=\\\"Faixa de valores\\\" #scrollToFilter>\\n        <div class=\\\"mtc-title\\\"*ngIf=\\\"faixaPerc.length > 0\\\">{{ faixaPerc[0].dsTipoComissionamento }}</div>\\n        <div class=\\\"col-12 mb-4\\\" *ngFor=\\\"let dados of faixaPerc\\\">\\n          <custom-table *ngIf=\\\"faixaPerc.length > 0\\\">\\n            <ng-template #thead let-thead  >\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 50%\\\">Linha</th>\\n                <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 50%\\\">Classe</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr>\\n                <td class=\\\"text-center\\\">{{ dados.nomeLinha }}</td>\\n                <td class=\\\"text-center\\\" *ngIf=\\\"dados.codClasse === 0\\\" >TODOS</td>\\n                <td class=\\\"text-center\\\" *ngIf=\\\"dados.codClasse != 0\\\">{{ dados.nomeClasse }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n\\n        <custom-table *ngIf=\\\"faixaPerc.length > 0\\\" [config]=\\\"tableConfigDetail\\\">\\n          <ng-template #thead let-thead  >\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 55%\\\">Percentual de desconto da tabela de vendas de materiais (%) </th>\\n              <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 45%\\\">Percentual a ser pago de comissão sobre o título (%) </th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let item of dados.percentual\\\">\\n              <td class=\\\"text-center\\\">{{ item.percDescontoDe }} a {{ item.percDescontoAte }} %</td>\\n              <td class=\\\"text-center\\\">{{ item.percPago }} %</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </div>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosTipoComissionamentoModuleRoutingModule } from './tipo-comissionamento-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosTipoComissionamentoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosTipoComissionamentoFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosTipoComissionamentoListaComponent,\n    ComercialCadastrosTipoComissionamentoFormularioComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    CurrencyMaskModule,\n    NgBrazil,\n    ComercialCadastrosTipoComissionamentoModuleRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialCadastrosTipoComissionamentoModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm \\\">\\n    Salvar\\n  </button>\\n  <!-- || submittingForm -->\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n<form [formGroup]=\\\"form\\\">\\n  <div class=\\\"col-12 mt-3\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-lg-6\\\">\\n\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-9\\\">\\n              <label for=\\\"dsTipoComissionamento\\\">Tipo de Recebimento</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"dsTipoComissionamento\\\"\\n                formControlName=\\\"dsTipoComissionamento\\\"\\n\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('dsTipoComissionamento') + ' ' + onFieldRequired(form.controls.dsTipoComissionamento)\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('dsTipoComissionamento')\\\" message=\\\"Tipo de recebimento é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\"\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n                <option value=\\\"0\\\">Inativo</option>\\n                <option value=\\\"1\\\">Ativo</option>\\n              </select>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Qtde. parcelas é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-12 mt-3\\\" formArrayName=\\\"linhas\\\">\\n\\n    <div class=\\\"col-12\\\" *ngFor=\\\"let item of linhas.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n    <div class=\\\"form-row justify-content-center\\\" >\\n        <div class=\\\"col-lg-6 border mb-3\\\" >\\n          <!-- <hr> -->\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-5\\\" >\\n              <label for=\\\"codLinha\\\">Linha</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"linhasMaterial\\\"\\n                formControlName=\\\"codLinha\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codLinha\\\"\\n                bindLabel=\\\"descricao\\\"\\n                bindValue=\\\"id\\\"\\n                (change)=\\\"onChangeLinha($event.id, i)\\\"\\n                [ngClass]=\\\"onNestedFieldError('linhas', i, 'codLinha') + ' ' + onNestedFieldRequired('linhas', i, 'codLinha')\\\">\\n            </ng-select>\\n\\n            </div>\\n            <div class=\\\"form-group col-lg-5\\\">\\n              <label for=\\\"codSituacao\\\">Classe</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"filteredClasses[i]\\\"\\n                formControlName=\\\"codClasse\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codClasse\\\"\\n                bindLabel=\\\"nomeClasse\\\"\\n                bindValue=\\\"idClasse\\\"\\n                [ngClass]=\\\"onNestedFieldError('linhas', i, 'codClasse') + ' ' + onNestedFieldRequired('linhas', i, 'codClasse')\\\">\\n            </ng-select>\\n\\n            </div>\\n            <div class=\\\"form-group col-lg-1\\\"></div>\\n            <div class=\\\"form-group col-lg-1 pt-3\\\">\\n              <btn-icon\\n                  icon=\\\"fas fa-plus-square\\\"\\n                  class=\\\"justify-content-center pt-2\\\"\\n                  size=\\\"medium\\\"\\n                  color=\\\"primary\\\"\\n                  tooltip=\\\"Novo Percentual\\\"\\n                  (click)=\\\"onAddPercentual(i)\\\">\\n              </btn-icon>\\n              <!-- onDeleteValor(i, item.value, 'change'); -->\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-row mb-2\\\" *ngIf=\\\"getPercentual(i).controls.length > 0\\\">\\n            <div class=\\\"col-lg-12 mb-2\\\">\\n            <custom-table [config]=\\\"tableConfigPercentual\\\" formArrayName=\\\"percentual\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 55%\\\">Percentual de desconto da tabela de vendas de materiais (%) </th>\\n                  <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 45%\\\">Percentual a ser pago de comissão sobre o título (%) </th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody >\\n                <tr  *ngFor=\\\"let percentual of getPercentual(i).controls; let j = index\\\"  class=\\\"colorBody\\\" [formGroupName]=\\\"j\\\">\\n\\n                  <td class=\\\"border\\\">\\n                    <div class=\\\"form-row\\\">\\n\\n                      <div class=\\\"col-5\\\">\\n                          <input\\n                            style=\\\"text-align: center;\\\"\\n                            class=\\\"form-control\\\"\\n                            id=\\\"percDescontoDe\\\"\\n                            type=\\\"text\\\"\\n                            formControlName=\\\"percDescontoDe\\\"\\n                            (input)=\\\"onInput()\\\"\\n                            currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 2, suffix: '%' }\\\"\\n                            [ngClass]=\\\"onMoreNestedFieldError('linhas', i, 'percentual', j, 'percDescontoDe') + ' '\\n                            + onMoreNestedFieldRequired('linhas', i, 'percentual', j, 'percDescontoDe')\\\">\\n\\n\\n                      </div>\\n                      <div class=\\\"col-2\\\"> a </div>\\n                      <div class=\\\"col-5\\\">\\n                          <input\\n                            style=\\\"text-align: center;\\\"\\n                            class=\\\"form-control\\\"\\n                            id=\\\"percDescontoAte\\\"\\n                            type=\\\"text\\\"\\n                            formControlName=\\\"percDescontoAte\\\"\\n                            (input)=\\\"onInput()\\\"\\n                            currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 2, suffix: '%' }\\\"\\n                            [ngClass]=\\\"onMoreNestedFieldError('linhas', i, 'percentual', j, 'percDescontoAte') + ' '\\n                            + onMoreNestedFieldRequired('linhas', i, 'percentual', j, 'percDescontoAte')\\\">\\n                      </div>\\n                      </div>\\n                  </td>\\n\\n                  <td class=\\\"border\\\">\\n                    <div class=\\\"form-row\\\">\\n                      <div class=\\\"col-2\\\"></div>\\n                      <div class=\\\"col-8\\\">\\n                        <input\\n                          style=\\\"text-align: center;\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"percPago\\\"\\n                          type=\\\"text\\\"\\n                          formControlName=\\\"percPago\\\"\\n                          (input)=\\\"onInput()\\\"\\n                          currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 2, suffix: '%' }\\\"\\n                          [ngClass]=\\\"onMoreNestedFieldError('linhas', i, 'percentual', j, 'percPago') + ' '\\n                            + onMoreNestedFieldRequired('linhas', i, 'percentual', j, 'percPago')\\\">\\n                      </div>\\n                      <div class=\\\"col-2\\\">\\n                        <div class=\\\"form-row justify-content-end\\\">\\n                          <div class=\\\"col-lg-12 mb-2\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn-icon-sm float-right\\\" (click)=\\\"onDeleteValor(i, item.value.percentual[j], j, 'one')\\\" tooltip=\\\"Limpar Registro\\\" >\\n                              <i class=\\\"fas fa-trash\\\"></i>\\n                            </button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </td>\\n\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n          </div>\\n          <div class=\\\"form-row justify-content-end\\\" *ngIf=\\\"getPercentual(i).controls.length > 0\\\">\\n            <div class=\\\"col-lg-12 mb-2\\\">\\n              <btn-icon\\n                  icon=\\\"fas fa-trash\\\"\\n                  class=\\\"float-right\\\"\\n                  size=\\\"medium\\\"\\n                  color=\\\"danger\\\"\\n                  tooltip=\\\"Limpar Tudo\\\"\\n                  (click)=\\\"onDeleteValor(i, item.value.percentual, j, 'all')\\\">\\n              </btn-icon>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-6 mx-auto\\\" *ngIf=\\\"getPercentual(i).controls.length > 0\\\">\\n      <div class=\\\"form-row\\\" >\\n        <div class=\\\"col-lg-12 mb-3 justify-content-center\\\">\\n          <btn-icon\\n            icon=\\\"fas fa-plus\\\"\\n            size=\\\"small\\\"\\n            class=\\\"float-right\\\"\\n            tooltip=\\\"Nova faixa de valores\\\"\\n            (click)=\\\"onAddLinha(i)\\\">\\n          </btn-icon>\\n        </div>\\n      </div>\\n    </div>\\n    </div>\\n  </div>\\n  </form>\\n</app-body>\\n\\n\\n\";","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { TipoLinhas } from './../models/tipo-linhas';\nimport { EquipeVenda } from './../../equipe-venda/models/equipe-venda';\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\n\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\nimport { ComercialService } from '../../../comercial.service';\n\n// Interfaces\n\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { TipoComissionamento } from '../models/tipo-comissionamento';\nimport { ComercialCadastrosTipoComissionamentoService } from '../tipo-comissionamento.service';\n\n@Component({\n  selector: 'comercial-cadastros-tipos-comissionamento-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class ComercialCadastrosTipoComissionamentoListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green'\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red'\n    }\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  orderBy;\n  orderType = 'ASC';\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<TipoComissionamento> = [];\n  dadosPagination: Array<TipoComissionamento> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n  codigo: number = 0;\n\n  tipoComissionamentoSelecionado: TipoComissionamento;\n  faixaPerc: Array<any> = [];\n\n  tableConfigDetail: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private tipoComissionamentoService: ComercialCadastrosTipoComissionamentoService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService,\n    private comercialService: ComercialService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Tipo de Comissionamento');\n    this.onDetailPanelEmitter();\n    this.setTipoComissionamentoSelecionado();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`\n        },\n        {\n          descricao: 'Lista'\n        }\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      dsTiposComissionamento: [formValue.dsTiposComissionamento],\n      codTiposComissionamento: [formValue.codTiposComissionamento],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required]\n    });\n\n    this.checkOrder();\n    this.loaderFullScreen = false;\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      dsTiposComissionamento: null,\n      codSituacao: 1,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach(formKey => {\n            Object.keys(params).forEach(paramKey => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setTipoComissionamentoSelecionado(): void {\n    this.tipoComissionamentoSelecionado = {\n      codTipoComissionamento: null,\n      dsTiposComissionamento: null,\n      codSituacao: null,\n      qtdeRegistros: null,\n      situacao: null,\n      codUsuario: null,\n      nomeUsuario: null,\n      dataCadastro: null,\n      linhas: []\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) }\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.dsTiposComissionamento) {\n      params.dsTiposComissionamento = this.form.value.dsTiposComissionamento;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    this.tipoComissionamentoService\n      .getTipoComissionamento(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(equipeVenda: EquipeVenda): string {\n    let borderClass: string;\n\n    if (equipeVenda.codSituacao === 1) {\n      borderClass = 'border-success';\n    } else if (equipeVenda.codSituacao === 0) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant'\n    });\n  }\n\n  onDetails(tipoComissionamento: TipoComissionamento): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.faixaPerc = [];\n\n    this.tipoComissionamentoService\n      .getDetailTipoComissionamento(tipoComissionamento.codTipoComissionamento)\n      .pipe(\n        finalize(() => {\n\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.detailPanelService.loadedFinished(false);\n            this.faixaPerc = response.data;\n            this.codigo = this.faixaPerc[0].codTipoComissionamento;\n\n          } else {\n            this.detailPanelService.loadedFinished(true);\n            this.pnotifyService.error();\n\n          }\n        },\n        error: (error: any) => {\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      }\n\n      );\n  }\n\n  onEdit(tipoComissionamento: TipoComissionamento): void {\n    this.router.navigate(['../editar', tipoComissionamento.codTipoComissionamento], {\n      relativeTo: this.activatedRoute\n    });\n  }\n\n  onActivate(index: number, tipoComissionamento: TipoComissionamento): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap(result =>\n          result ? this.activateTipoComissionamento(index, tipoComissionamento) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(tipoComissionamento);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateTipoComissionamento(\n    index: number,\n    tipoComissionamento: TipoComissionamento\n  ): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.tipoComissionamentoService.activateTipoComissionamento(\n      tipoComissionamento.codTipoComissionamento\n    );\n  }\n\n  onInactivate(index: number, tipoComissionamento: TipoComissionamento): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap(result =>\n          result ? this.inactivateTipoComissionamento(index, tipoComissionamento) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(tipoComissionamento);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateTipoComissionamento(\n    index: number,\n    tipoComissionamento: TipoComissionamento\n  ): Observable<any> {\n    this.loaderNavbar = true;\n\n    this.dadosPagination[index].codSituacao = 2;\n\n    return this.tipoComissionamentoService.inactivateTipoComissionamento(\n      tipoComissionamento.codTipoComissionamento\n    );\n  }\n\n  refreshMainData(tipoComissionamento: TipoComissionamento): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (tipoComissionamento.codTipoComissionamento === this.dados[i].codTipoComissionamento) {\n        this.dados[i].codSituacao = tipoComissionamento.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy90aXBvcy1jb21pc3Npb25hbWVudG8vbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";"],"sourceRoot":"webpack:///"}