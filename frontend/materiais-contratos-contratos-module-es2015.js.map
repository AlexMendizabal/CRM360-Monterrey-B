{"version":3,"sources":["./src/app/modules/comercial/cadastros/materiais/contratos/formulario/formulario.component.ts","./src/app/modules/comercial/services/clientes.service.ts","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/cadastros/materiais/contratos/contratos.module.ts","./src/app/modules/comercial/cadastros/materiais/contratos/formulario/formulario.component.scss","./src/app/modules/comercial/cadastros/materiais/contratos/formulario/formulario.component.html","./src/app/modules/comercial/cadastros/materiais/contratos/formulario/formulario-resolver.guard.ts","./src/app/modules/comercial/cadastros/materiais/contratos/contratos-routing.module.ts","./src/app/guards/form-deactivate.guard.ts","./src/app/modules/comercial/cadastros/materiais/contratos/lista/lista.component.ts","./src/app/modules/comercial/cadastros/materiais/contratos/contratos.service.ts","./src/app/modules/comercial/cadastros/materiais/contratos/lista/lista.component.scss","./src/app/modules/comercial/cadastros/materiais/contratos/lista/lista.component.html","./src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":[],"mappings":"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","file":"materiais-contratos-contratos-module-es2015.js","sourcesContent":["import { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// ng-brazil\nimport { MASKS } from 'ng-brazil';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosMateriaisContratoService } from '../contratos.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { IContrato, IMateriaisContrato } from '../models/contrato';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-contratos-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosMateriaisContratoFormularioComponent\n  implements OnInit, IFormCanDeactivate\n{\n  public MASKS = MASKS;\n\n  loaderFullScreen = true;\n  loaderNavbar: boolean;\n\n  appTitle: string;\n  action: string;\n  compararData = null;\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm = false;\n  bsConfig: Partial<BsDatepickerConfig>;\n  showMateriais = true;\n\n  clientes = [];\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n\n  limparMaterialPrincipal: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private clientesService: ComercialClientesService,\n    private formBuilder: FormBuilder,\n    private materiaisContratoService: ComercialCadastrosMateriaisContratoService,\n    private pnotifyService: PNotifyService,\n    private localeService: BsLocaleService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private comercialService: ComercialService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.pnotifyService.getPNotify();\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.getClientes();\n    this.setFormBuilder();\n    this.titleService.setTitle('Cadastro de contrato de materiais');\n  }\n\n  getClientes() {\n    this.loaderFullScreen = true;\n    this.clientesService\n      .getClientes({ situacao: 'Ativo' })\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.responseCode === 200) {\n            this.clientes = response.result.analitico;\n            return;\n          } else {\n            this.clientes = [];\n          }\n        },\n        (error) => {\n          this.pnotifyService.error('Erro ao carregar modelos');\n          this.clientes = [];\n        }\n      );\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar contrato';\n        this.action = 'update';\n      } else {\n        this.appTitle = 'Novo contrato';\n        this.action = 'create';\n      }\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Contratos',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/contratos/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  getFilterValues(): void {\n    this.materiaisContratoService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].responseCode === 200) {\n          this.classes = response[1].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormBuilder(): void {\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\n\n    if (resolver.success === true) {\n      const detalhes: IContrato = resolver.data;\n\n      this.form = this.formBuilder.group({\n        codContrato: [detalhes.codContrato],\n        nomeContrato: [detalhes.nomeContrato, [Validators.required]],\n        codCliente: [detalhes.codCliente, [Validators.required]],\n        dataInicial: [detalhes.dataInicial, [Validators.required]],\n        dataFinal: [detalhes.dataFinal, [Validators.required]],\n        motivo: [{ value: detalhes.motivo, disabled: true }],\n        quantidade: [detalhes.quantidade, [Validators.required]],\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\n        codStatus: [\n          { value: detalhes.codStatus, disabled: true },\n          [Validators.required],\n        ],\n        assocMateriais: this.formBuilder.array([]),\n      });\n\n      this.setMateriais(detalhes.materiais);\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n  comparaData() {\n    if (!this.form.get('dataFinal').value) {\n      return false;\n    } else if (\n      this.form.get('dataInicial').value > this.form.get('dataFinal').value\n    ) {\n      this.compararData = true;\n      return this.compararData;\n    }\n  }\n\n  setMateriais(materiais: IMateriaisContrato[]): void {\n    if (materiais.length > 0) {\n      for (let i = 0; i < materiais.length; i++) {\n        this.onAddMaterial(materiais[i], false, 'application');\n      }\n    }\n  }\n\n  get assocMateriais(): FormArray {\n    return this.form.get('assocMateriais') as FormArray;\n  }\n\n  /**\n   * @source = 'application' || 'user'\n   */\n  onAddMaterial(\n    material: IMateriaisContrato,\n    manipulateForm: boolean,\n    source: string\n  ): void {\n    if (this.checkMaterialExists(material) === false) {\n      this.assocMateriais.push(\n        this.formBuilder.group({\n          codAssociacao: [material.codAssociacao],\n          codMaterial: [material.codMaterial],\n          nomeMaterial: [material.nomeMaterial],\n          quantidade: [source === 'user' ? 0 : material.quantidade],\n          valor: [source === 'user' ? 0 : material.valor],\n          source: [source],\n        })\n      );\n\n      if (this.form.value.assocMateriais.length > 9) {\n        if (this.tableConfigAssocMateriais.fixedHeader === false) {\n          this.showMateriais = false;\n          this.tableConfigAssocMateriais.fixedHeader = true;\n\n          setTimeout(() => {\n            this.showMateriais = true;\n          }, 1);\n        }\n      }\n\n      if (manipulateForm) {\n        this.form.markAsTouched();\n        this.form.markAsDirty();\n      }\n    }\n  }\n\n  checkMaterialExists(material: IMateriaisContrato): boolean {\n    return this.form.value.assocMateriais.some((el: any) => {\n      return el.codMaterial === material.codMaterial;\n    });\n  }\n\n  onLimparMaterialPrincipal(): void {\n    this.limparMaterialPrincipal = true;\n    this.onInput();\n\n    this.form.controls.codMaterial.setValue(null);\n    this.form.controls.nomeMaterial.setValue(null);\n\n    setTimeout(() => {\n      this.limparMaterialPrincipal = false;\n    }, 100);\n  }\n\n  onDeleteMaterial(index: number): void {\n    if (this.submittingForm === false) {\n      this.confirmDelete().subscribe((response: boolean) =>\n        response ? this.deleteMaterial(index) : null\n      );\n    }\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  deleteMaterial(index: number) {\n    if (this.form.value.assocMateriais[index].source === 'user') {\n      this.assocMateriais.removeAt(index);\n    } else if (this.form.value.assocMateriais[index].source === 'application') {\n      this.loaderNavbar = true;\n\n      this.activatedRoute.params.subscribe((params: any) => {\n        this.materiaisContratoService\n          .deleteAssociacao(\n            params.id,\n            this.form.value.assocMateriais[index].codAssociacao\n          )\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n            })\n          )\n          .subscribe(\n            (response: JsonResponse) => {\n              if (response.success) {\n                this.assocMateriais.removeAt(index);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            (error: any) => {\n              if (\n                error.error.hasOwnProperty('mensagem') &&\n                (error.mensagem !== null || error.mensagem !== '')\n              ) {\n                this.pnotifyService.error(error.error.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            }\n          );\n      });\n    }\n\n    this.form.markAsTouched();\n    this.form.markAsDirty();\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.action === 'update' && this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.checkFormValidation() && this.form.valid) {\n        if (this.form.value.assocMateriais.length > 0) {\n          this.loaderNavbar = true;\n          this.submittingForm = true;\n\n          this.materiaisContratoService\n            .save(this.form.getRawValue(), this.action)\n            .pipe(\n              finalize(() => {\n                this.loaderNavbar = false;\n                this.submittingForm = false;\n              })\n            )\n            .subscribe(\n              (response: any) => {\n                if (\n                  response.hasOwnProperty('success') &&\n                  response.success === true\n                ) {\n                  this.form.reset();\n                  this.formChanged = false;\n                  this.pnotifyService.success(response.mensagem);\n\n                  this.activatedRoute.params.subscribe((params: any) => {\n                    let navigateTo: string;\n\n                    if (params.hasOwnProperty('id')) {\n                      navigateTo = '../../lista';\n                    } else {\n                      navigateTo = '../lista';\n                    }\n\n                    this.router.navigate([navigateTo], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  });\n                } else if (\n                  response.hasOwnProperty('success') &&\n                  response.success === false\n                ) {\n                  this.pnotifyService.error(response.mensagem);\n                } else {\n                  this.pnotifyService.error();\n                }\n              },\n              (error: any) => {\n                this.pnotifyService.error();\n              }\n            );\n        } else {\n          this.pnotifyService.notice('Associe pelo menos um material.');\n        }\n      } else {\n        this.pnotifyService.notice('Selecione um material.');\n      }\n    }\n  }\n\n  checkFormValidation(): boolean {\n    let isValid = true;\n\n    if (this.form.getRawValue().codMaterial === null) {\n      isValid = false;\n    }\n\n    return isValid;\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onLoaderNavbar(event: boolean): void {\n    this.loaderNavbar = event;\n  }\n\n  materialPrincipal(material: any): void {\n    this.onInput();\n\n    this.form.controls.codLinha.setValue(material.codLinha);\n    this.form.controls.codClasse.setValue(material.codClasse);\n    this.form.controls.codMaterial.setValue(material.codigoMaterial);\n    this.form.controls.nomeMaterial.setValue(material.descricao);\n  }\n\n  materialAssociado(material: any): void {\n    this.onAddMaterial(material, true, 'user');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialClientesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes`;\n\n  constructor(protected http: HttpClient) {}\n\n  getStatus(): Observable<Object> {\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1), retry(2));\n  }\n\n  getClientes(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/pesquisa/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getClientesGrupoEconomico(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/grupo-economico/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getPermissaoAcesso(id: any): Observable<Object> {\n    return this.http\n      .get(`${this.API}/permissao-acesso/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/pesquisa/detalhes/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatosResumido(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getExisteCpfCnpj(\n    documento: any,\n    getDadosCliente: boolean\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/verificar-cpf-cnpj/${documento}?getDadosCliente=${\n          getDadosCliente === true ? 1 : 0\n        }`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  postCliente(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/pre-cadastro`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPropostaAnaliseCredito(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/proposta-analise-credito/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosFaturamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-faturamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosFaturamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-faturamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteAtividadeSecundaria(\n    codCliente: number,\n    id: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/atividade-secundaria/${codCliente}/${id}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getEnderecos(\n    codCliente: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/cadastro/carregar/enderecos/${codCliente}`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getEndereco(\n    codCliente: number,\n    idEndereco: number,\n    idSituacao: number\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/endereco/${codCliente}/${idEndereco}/${idSituacao}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  updateEndereco(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/endereco`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteEndereco(codCliente: number, id: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/endereco/${codCliente}/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatos(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContato(\n    codCliente: number,\n    idContato: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contato/${codCliente}/${idContato}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateContato(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/contato`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteMeioContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/meio-contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteFilho(idFilho: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/filho/${idFilho}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosRelacionamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-relacionamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosRelacionamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-relacionamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPotencialCompra(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/potencial-compra/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updatePotencialCompra(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/potencial-compra`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getAnexos(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/anexos/${codCliente}`)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  uploadAnexo(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/cadastro/upload/anexo`, data)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  deleteAnexo(idAnexo: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/anexo/${idAnexo}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getFilial(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/filial/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getTravas(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/travas/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesFinanceiras(codCliente: number): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/informacoes-financeiras/${codCliente}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesComerciais(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/informacoes-comerciais/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getListaEmails(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/emails/lista/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport ptBr from '@angular/common/locales/pt';\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosMateriaisContratoRoutingModule } from './contratos-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialCadastrosMateriaisTemplatesModule } from '../templates/templates.module';\n\n// Components\nimport { ComercialCadastrosMateriaisContratoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisContratoFormularioComponent } from './formulario/formulario.component';\n\n// Services\nimport { ComercialCadastrosMateriaisContratoService } from './contratos.service';\n\nregisterLocaleData(ptBr);\ndefineLocale('pt-br', ptBrLocale);\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosMateriaisContratoListaComponent,\n    ComercialCadastrosMateriaisContratoFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    TooltipModule,\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialCadastrosMateriaisContratoRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    ComercialCadastrosMateriaisTemplatesModule,\n  ],\n  providers: [PNotifyService, ComercialCadastrosMateriaisContratoService],\n})\nexport class ComercialCadastrosMateriaisContratoModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY29udHJhdG9zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div >\\n          <div class=\\\"row mb-3\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Dados do Contrato</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-12\\\">\\n              <label for=\\\"nomeContrato\\\">Nome Contrato</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"Digite...\\\"\\n                id=\\\"nomeContrato\\\"\\n                formControlName=\\\"nomeContrato\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('nomeContrato') + ' ' + onFieldRequired(form.controls.nomeContrato)\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('nomeContrato')\\\" message=\\\"Nome do contrato é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-12\\\">\\n              <label for=\\\"clientes\\\">Clientes</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"clientes\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [hideSelected]=\\\"true\\\"\\n                [multiple]=\\\"true\\\"\\n                [closeOnSelect]=\\\"false\\\"\\n                bindLabel=\\\"razaoSocial\\\"\\n                bindValue=\\\"codCliente\\\"\\n                id=\\\"codCliente\\\"\\n                formControlName=\\\"codCliente\\\" \\n                [ngClass]=\\\"onFieldError('codCliente') + ' ' + onFieldRequired(form.controls.codCliente)\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('codCliente')\\\" message=\\\"Cliente é obrigatório.\\\"></invalid-form-control>\\n              </ng-select>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label for=\\\"dataInicial\\\">Data Inicial</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataInicial\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                placeholder=\\\"Selecione...\\\"\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataInicial\\\"\\n                [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired(form.controls.dataInicial)\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial')\\\" message=\\\"Data Inicial obrigatório.\\\"></invalid-form-control>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label for=\\\"dataFinal\\\">Data Final</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataFinal\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                placeholder=\\\"Selecione...\\\"\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataFinal\\\"\\n                [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired(form.controls.dataFinal)\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal')\\\" message=\\\"Data Final é obrigatório.\\\"></invalid-form-control>\\n              </div>\\n              <invalid-form-control\\n                [show]=\\\"comparaData()\\\"\\n                message=\\\"A data inicial está maior que a data final\\\">\\n              </invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codStatus\\\">Status</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codStatus\\\"\\n                formControlName=\\\"codStatus\\\"\\n                [ngClass]=\\\"onFieldError('codStatus') + ' ' + onFieldRequired(form.controls.codStatus)\\\">\\n                <option value=\\\"0\\\">Reprovado</option>\\n                <option value=\\\"1\\\">Aprovado</option>\\n                <option value=\\\"2\\\">Aguardando Aprovação</option>\\n              </select>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codStatus')\\\" message=\\\"Status é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-8\\\">\\n              <label for=\\\"quantidade\\\">Qtde.</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"quantidade\\\"\\n                placeholder=\\\"Digite...\\\"\\n                formControlName=\\\"quantidade\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\"\\n                [ngClass]=\\\"onFieldError('quantidade') + ' ' + onFieldRequired(form.controls.quantidade)\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('quantidade')\\\" message=\\\"Quantidade é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\"\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n                <option value=\\\"0\\\">Inativo</option>\\n                <option value=\\\"1\\\">Ativo</option>\\n              </select>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\" [hidden]=\\\"form.get('codStatus').value != 0\\\">\\n            <div class=\\\"form-group col-lg-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"motivo\\\" >Motivo:</label>\\n                <textarea class=\\\"form-control\\\" id=\\\"motivo\\\" formControlName=\\\"motivo\\\" rows=\\\"3\\\"></textarea>\\n              </div>\\n            </div>\\n          </div>\\n          <hr>\\n        </div>\\n\\n        <div formArrayName=\\\"assocMateriais\\\">\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length > 0\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"mtc-title\\\">Materiais associados ao Contrato</div>\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" style=\\\"width: 55%\\\">Material</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 20%\\\">Valor Un.</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 20%\\\">Qtde.</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let material of assocMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                    <td style=\\\"width: 55%\\\">\\n                      {{ form.value.assocMateriais[i].codMaterial }} - {{ form.value.assocMateriais[i].nomeMaterial | uppercase }}\\n                    </td>\\n                    <td style=\\\"width: 20%\\\">\\n                      <input\\n                        type=\\\"text\\\"\\n                        id=\\\"valor\\\"\\n                        class=\\\"form-control text-center\\\"\\n                        formControlName=\\\"valor\\\"\\n                        currencyMask [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: 'R$ ' }\\\">\\n                    </td>\\n                    <td style=\\\"width: 20%\\\">\\n                      <input\\n                        type=\\\"text\\\"\\n                        id=\\\"quantidade\\\"\\n                        class=\\\"form-control text-center\\\"\\n                        formControlName=\\\"quantidade\\\"\\n                        currencyMask [options]=\\\"{ align: 'left', prefix: 'ton  ', thousands: '.', decimal: ',', precision: 3 }\\\">\\n                    </td>\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        icon=\\\"fas fa-trash\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"onDeleteMaterial(i)\\\">\\n                      </btn-icon>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length === 0\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-exchange-alt\\\"\\n                text=\\\"Nenhuma associação encontrada\\\">\\n              </message>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n      <!-- <div [hidden]=\\\"form.getRawValue().codMaterial != null\\\">\\n        <comercial-cadastros-materiais-templates-material-principal\\n          [linhas]=\\\"linhas\\\"\\n          [classes]=\\\"classes\\\"\\n          [limparMaterialSelecionado]=\\\"limparMaterialPrincipal\\\"\\n          (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\n          (materialPrincipal)=\\\"materialPrincipal($event)\\\">\\n        </comercial-cadastros-materiais-templates-material-principal>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <hr>\\n          </div>\\n        </div>\\n      </div> -->\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <comercial-cadastros-materiais-templates-associacoes\\n        [linhas]=\\\"linhas\\\"\\n        [classes]=\\\"classes\\\"\\n        [linhaSelecionada]=\\\"form.value.codLinha\\\"\\n        [classeSelecionada]=\\\"form.value.codClasse\\\"\\n        (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\n        (materialAssociado)=\\\"materialAssociado($event)\\\">\\n      </comercial-cadastros-materiais-templates-associacoes>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosMateriaisContratoService } from '../contratos.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisContratoFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private materiaisContratosService: ComercialCadastrosMateriaisContratoService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.materiaisContratosService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      mensagem: null,\n      data: {\n        codContrato: null,\n        codLinha: null,\n        codClasse: null,\n        codMaterial: null,\n        codSituacao: 1,\n        codStatus: 2,\n        dataInicial: null,\n        dataFinal: null,\n        nomeContrato: null,\n        motivo: null,\n        quantidade: null,\n        materiais: [],\n      },\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosMateriaisContratoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosMateriaisContratoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisContratoFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialCadastrosMateriaisContratoListaComponent },\n  {\n    path: 'novo',\n    component: ComercialCadastrosMateriaisContratoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMateriaisContratoFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosMateriaisContratoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMateriaisContratoFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosMateriaisContratoRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription, Observable, EMPTY } from 'rxjs';\nimport { finalize, take, switchMap } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ComercialCadastrosMateriaisContratoService } from '../contratos.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { IContrato, IMateriaisContrato } from '../models/contrato';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-contratos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosMateriaisContratoListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    hover: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  detailPanelTitle: string;\n\n  form: FormGroup;\n  orderBy = 'codContrato';\n  orderType = 'ASC';\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n  filteredClasses: Array<any> = [];\n  materiais: Array<any> = [];\n  materiaisLoader: boolean;\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n  compararData = null;\n  dados: IContrato[] = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  contratoSelecionado: IContrato;\n  materiaisAssociados: IMateriaisContrato[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private detailPanelService: DetailPanelService,\n    private comercialService: ComercialService,\n    private materiaisContratoService: ComercialCadastrosMateriaisContratoService,\n    private confirmModalService: ConfirmModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.setFormFilter();\n    this.titleService.setTitle('Contratos de materiais');\n    this.onDetailPanelEmitter();\n    this.setContratoSelecionado();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Contratos',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  getFilterValues(): void {\n    this.materiaisContratoService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n\n          this.checkValuesLinhaClasse();\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n\n          this.linhas.unshift({\n            id: 0,\n            descricao: 'EXIBIR TODOS',\n          });\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].responseCode === 200) {\n          this.classes = response[1].result;\n\n          this.filteredClasses.unshift({\n            idClasse: 0,\n            nomeClasse: 'EXIBIR TODOS',\n          });\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  onChangeLinha(codLinha: number, reset: boolean) {\n    if (reset) {\n      if (this.form.value.codLinha !== 0) {\n        this.form.controls.codClasse.enable();\n        this.form.controls.codClasse.setValue(0);\n      } else {\n        this.form.controls.codClasse.disable();\n        this.form.controls.codClasse.setValue(null);\n      }\n\n      this.form.controls.codClasse.updateValueAndValidity();\n\n      this.materiais = [];\n      this.form.controls.codContrato.reset();\n      this.form.controls.codContrato.disable();\n      this.form.controls.codContrato.setValue(null);\n      this.form.controls.codContrato.updateValueAndValidity();\n    }\n\n    this.filteredClasses = this.classes.filter(\n      (value: any) => value.idLinha == codLinha\n    );\n\n    this.filteredClasses.unshift({\n      idClasse: 0,\n      nomeClasse: 'EXIBIR TODOS',\n    });\n  }\n\n  onChangeClasse(codClasse: number, reset: boolean, src: string) {\n    if (reset) {\n      this.form.controls.codContrato.reset();\n      this.form.controls.codContrato.enable();\n      this.form.controls.codContrato.setValue(0);\n      this.form.controls.codContrato.updateValueAndValidity();\n    }\n\n    this.getMateriais(codClasse, src);\n  }\n\n  getMateriais(codClasse: number, src: string): void {\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\n      if (src === 'application') {\n        this.loaderNavbar = true;\n      }\n      this.materiaisLoader = true;\n      this.materiais = [];\n\n      const params = {\n        codClasse: codClasse,\n        tipoMaterial: 'Distribuidora',\n        comercializa: 0,\n      };\n\n      this.comercialService\n        .getMateriais(params)\n        .pipe(\n          finalize(() => {\n            if (src === 'application') {\n              this.loaderNavbar = false;\n            }\n            this.materiaisLoader = false;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.materiais = response.data;\n\n              this.materiais.unshift({\n                codigoMaterial: 0,\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\n              });\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      nomeContrato: [formValue.codSituacao],\n      codContrato: [formValue.codSituacao],\n      codSituacao: [formValue.codSituacao],\n      codStatus: [formValue.codStatus],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n  }\n\n  comparaData() {\n    if (!this.form.get('dataFinal').value) {\n      return false;\n    } else if (\n      this.form.get('dataInicial').value >\n      this.form.get('dataFinal').value\n      ) {\n        this.compararData = true;\n        return this.compararData;\n      }\n    }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      nomeContrato:null,\n      codContrato: 0,\n      codSituacao: '',\n      codStatus: '',\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  checkValuesLinhaClasse(): void {\n    if (this.form.value.codLinha !== 0) {\n      this.onChangeLinha(this.form.value.codLinha, false);\n    }\n\n    if (this.form.value.codClasse !== 0) {\n      this.onChangeClasse(this.form.value.codClasse, false, 'verify');\n    } else {\n      this.form.controls.codClasse.disable();\n      this.form.controls.codContrato.disable();\n\n      this.form.controls.codClasse.updateValueAndValidity();\n      this.form.controls.codContrato.updateValueAndValidity();\n    }\n  }\n\n  setContratoSelecionado(): void {\n    this.contratoSelecionado = {\n      codContrato: null,\n      codLinha: null,\n      codClasse: null,\n      codSituacao: null,\n      codStatus: null,\n      nomeContrato: null,\n      motivo: null,\n      codCliente: null,\n      dataInicial: null,\n      dataFinal: null,\n      quantidade: null,\n      nomeUsuario: null,\n    };\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n\n    if (this.form.value.nomeContrato) {\n      params.nomeContrato = this.form.value.nomeContrato;\n    }\n\n    if (this.form.value.codContrato) {\n      params.codContrato = this.form.value.codContrato;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    if (this.form.value.codStatus) {\n      params.codStatus = this.form.value.codStatus;\n    }\n\n    params.pagina = this.form.value.pagina;\n    params.registros = this.form.value.registros;\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    this.dados = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.materiaisContratoService\n      .getListaContratos(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe(\n        (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.totalItems = this.dados[0]['total'];\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  classStatusBorder(contrato: IContrato): string {\n    let borderClass: string;\n\n    if (contrato.codSituacao === 0) {\n      borderClass = 'border-danger';\n    } else if (contrato.codSituacao === 1) {\n      borderClass = 'border-success';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent) {\n    if (this.form.value.pagina != event.page) {\n      this.detailPanelService.hide();\n      this.setContratoSelecionado();\n      this.form.value.pagina = event.page;\n      this.onFilter();\n\n      this.scrollToFilter.nativeElement.scrollIntoView({\n        behavior: 'instant',\n      });\n    }\n  }\n\n  onDetails(contrato: IContrato): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.detailPanelTitle = `Materiais associados ao contrato ${contrato.nomeContrato}`;\n    this.setContratoSelecionado();\n    this.contratoSelecionado = contrato;\n    this.materiaisAssociados = [];\n\n    this.materiaisContratoService\n      .getAssociacoesMateriais(contrato.codContrato)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.materiaisAssociados = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  onEdit(contrato: IContrato): void {\n    this.router.navigate(['../editar', contrato.codContrato], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, contrato: IContrato): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateContrato(index, contrato) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(contrato);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dados[index].codSituacao = 0;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateContrato(index: number, contrato: IContrato): Observable<any> {\n    this.loaderNavbar = true;\n    this.dados[index].codSituacao = 1;\n\n    return this.materiaisContratoService.activateContrato(contrato.codContrato);\n  }\n\n  onInactivate(index: number, contrato: IContrato): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateContrato(index, contrato) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(contrato);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dados[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateContrato(index: number, contrato: IContrato): Observable<any> {\n    this.loaderNavbar = true;\n    this.dados[index].codSituacao = 0;\n\n    return this.materiaisContratoService.inactivateContrato(contrato.codContrato);\n  }\n\n  refreshMainData(contrato: IContrato): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (contrato.codContrato === this.dados[i].codContrato) {\n        this.dados[i].codSituacao = contrato.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\n\n// Interfaces\nimport { IContrato } from './models/contrato';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { constants } from 'crypto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisContratoService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/materiais/contratos`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getListaContratos(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getAssociacoesMateriais(\n    codContrato: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/associacoes/${codContrato}`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codContrato: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/detalhes/${codContrato}`)\n      .pipe(take(1), retry(2));\n  }\n\n  private saveContrato(record: IContrato): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1), retry(2));\n  }\n\n  private updateContrato(record: IContrato): Observable<Object | JsonResponse> {\n    return this.http\n      .put(`${this.API}/atualizar`, record)\n      .pipe(take(1), retry(2));\n  }\n\n  save(record: IContrato, action: string): Observable<Object | JsonResponse> {\n    if (action === 'update') {\n      return this.updateContrato(record);\n    }\n\n    return this.saveContrato(record);\n  }\n\n  deleteAssociacao(\n    codContrato: number,\n    codAssociacao: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .delete(`${this.API}/associacao/remover/${codContrato}/${codAssociacao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  activateContrato(codContrato: number): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/ativar`, codContrato)\n      .pipe(take(1), retry(2));\n  }\n\n  inactivateContrato(codContrato: number): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/inativar`, codContrato).pipe(take(1));\n  }\n\n  getFilterValues(): Observable<Object | JsonResponse> {\n    const linhas = this.tidSoftwareService.getLinhas();\n    const classes = this.comercialService.getClasses(null);\n    return forkJoin([linhas, classes]);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY29udHJhdG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Contratos\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <!-- <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codLinha\\\">Linha</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"linhas\\\"\\n                formControlName=\\\"codLinha\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codLinha\\\"\\n                bindLabel=\\\"descricao\\\"\\n                bindValue=\\\"id\\\"\\n                (change)=\\\"onChangeLinha($event.id, true)\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codClasse\\\">Classe</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"filteredClasses\\\"\\n                formControlName=\\\"codClasse\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codClasse\\\"\\n                bindLabel=\\\"nomeClasse\\\"\\n                bindValue=\\\"idClasse\\\"\\n                (change)=\\\"onChangeClasse($event.idClasse, true, 'application')\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codMaterial\\\">Material</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"materiais\\\"\\n                formControlName=\\\"codMaterial\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codMaterial\\\"\\n                bindLabel=\\\"codigoDescricaoMaterial\\\"\\n                bindValue=\\\"codigoMaterial\\\"\\n                [loading]=\\\"materiaisLoader\\\"\\n                loadingText=\\\"Carregando...\\\">\\n              </ng-select>\\n            </div> -->\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codContrato\\\">Cód. Contrato</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"Digite...\\\"\\n                id=\\\"codContrato\\\"\\n                formControlName=\\\"codContrato\\\"\\n                autocomplete=\\\"new-password\\\"\\n              >\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"nomeContrato\\\">Nome Contrato</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"Digite...\\\"\\n                id=\\\"nomeContrato\\\"\\n                formControlName=\\\"nomeContrato\\\"\\n                autocomplete=\\\"new-password\\\"\\n              >\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codStatus\\\">Status</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codStatus\\\"\\n                formControlName=\\\"codStatus\\\"\\n                >\\n                <option value=\\\"\\\" >Todos</option>\\n                <option value=\\\"0\\\">Reprovado</option>\\n                <option value=\\\"1\\\">Aprovado</option>\\n                <option value=\\\"2\\\">Aguardando Aprovação</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"0\\\">Inativos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-1\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\n              <thead-sorter\\n                value=\\\"Código\\\"\\n                [active]=\\\"orderBy == 'codContrato'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('codContrato')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Nome Contrato\\\"\\n                [active]=\\\"orderBy == 'nomeContrato'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeContrato')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Quantidade</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr\\n            *ngFor=\\\"let contrato of dados; let i = index;\\\"\\n            [class.table-active]=\\\"contrato.codContrato == contratoSelecionado.codContrato && showDetailPanel\\\">\\n            <td\\n              class=\\\"text-center hover\\\"\\n              [ngClass]=\\\"classStatusBorder(contrato)\\\"\\n              (click)=\\\"onDetails(contrato)\\\">\\n              {{ contrato.codContrato }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(contrato)\\\">\\n              {{ contrato.nomeContrato | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"onDetails(contrato)\\\">\\n              {{ contrato.quantidade | number:'1.3-3' }} TON\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(contrato)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"contrato.nomeUsuario === null\\\">NÃO INFORMADO</span>\\n              <span *ngIf=\\\"contrato.nomeUsuario !== null\\\">\\n                {{ contrato.nomeUsuario | uppercase }}\\n              </span>\\n            </td>\\n            <td class=\\\"text-right\\\">\\n              <span *ngIf=\\\"contrato.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, contrato)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"contrato.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, contrato)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(contrato)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiaisAssociados.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\n              <th scope=\\\"col\\\">Material</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Qtde.</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiaisAssociados\\\">\\n              <td class=\\\"text-center\\\">{{ material.codContrato }}</td>\\n              <td>{{ material.nomeContrato | uppercase }}</td>\\n              <td class=\\\"text-center\\\">{{ material.quantidade | number:'1.3-3' }} {{ material.unidade | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"],"sourceRoot":"webpack:///"}