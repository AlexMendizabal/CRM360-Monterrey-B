{"version":3,"sources":["webpack:///src/app/modules/logistica/cadastros/turnos/turnos-routing.module.ts","webpack:///src/app/modules/logistica/cadastros/turnos/services/turnos.service.ts","webpack:///src/app/modules/logistica/cadastros/turnos/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/cadastros/turnos/lista/lista.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/logistica/cadastros/turnos/turnos.module.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/logistica/cadastros/turnos/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/cadastros/turnos/lista/lista.component.ts","webpack:///src/app/modules/logistica/cadastros/turnos/lista/lista.component.scss","webpack:///src/app/modules/logistica/cadastros/turnos/cadastro/cadastro.component.ts"],"names":["routes","path","component","LogisticaTurnosRoutingModule","imports","forChild","exports","LogisticaTurnosService","http","API","params","get","observe","id","turno","post","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","LogisticaTurnosModule","declarations","forRoot","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","currentDate","startOfWeek","setDate","setHours","endOfWeek","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","LogisticaTurnosListaComponent","route","pnotify","formBuilder","xlsxService","dateService","routerService","activatedRoute","detailPanelService","confirmModalService","turnosService","showDetailPanel","loading","loadingNavBar","totalItens","tableConfig","subtitleBorder","tipos","cod","nome","subtitles","text","color","itemsPerPage","totalItems","currentPage","buildForm","setBreadCrumb","onActivatedRoute","onDetailPanelEmitter","getFilterTurnos","$activatedRouteSubscription","unsubscribe","queryParams","subscribe","response","_response","getBase64UrlParams","form","patchValue","hasOwnProperty","TT_REGI_PAGI","getTurnos","getParams","showDetailPanelSubscription","config","event","showing","reset","PAGI","TIME","getTime","group","UUID_LOGI_TURN","DS_TURN","IN_STAT","DS_OBSE","NR_MATR","NM_USUA","DT_INCL","DT_ATUA","IN_SEGU","IN_TERC","IN_QUAR","IN_QUIN","IN_SEXT","IN_SABA","IN_DOMI","onFilter","snapshot","idSubModulo","breadCrumbTree","descricao","routerLink","hide","setValue","navigate","relativeTo","setBase64UrlParams","turnoSelecionado","loadedFinished","convertMysqlTime","pipe","status","turnos","body","noResult","error","loadingTurnos","IN_PAGI","filterTurnos","notice","page","_params","_obj","value","prop","convertToUrlDate","borderClass","stat","confirmChange","asObservable","result","postTurnos","success","showConfirm","data","toLocaleDateString","dataExport","listagemExport","concat","exportFile","selector","template","LogisticaTurnosCadastroComponent","router","localeService","titleService","atividadesService","formData","disabledForm","MASKS","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setFormBuilder","getTurno","console","log","appTitle","setTitle","HR_INIC","required","HR_FINA","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","convert2PhpDate","dia","valor"],"mappings":"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","file":"turnos-turnos-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\nimport { LogisticaTurnosCadastroComponent } from './cadastro/cadastro.component';\r\nimport { LogisticaTurnosListaComponent } from './lista/lista.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaTurnosListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: LogisticaTurnosCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: LogisticaTurnosCadastroComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LogisticaTurnosRoutingModule {}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaTurnos } from '../models/turnos';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaTurnosService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getTurnos(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/turnos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getTurno(id: string) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/turnos/${id}`,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postTurnos(turno: ILogisticaTurnos) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/turnos`,\r\n      turno,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy90dXJub3MvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Turnos\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onExport()\\\"\\r\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n              <label for=\\\"filterTurnos\\\">Turno</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"filterTurnos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingTurnos\\\"\\r\\n                labelForId=\\\"filterTurnos\\\"\\r\\n                bindLabel=\\\"DS_TURN\\\"\\r\\n                bindValue=\\\"UUID_LOGI_TURN\\\"\\r\\n                id=\\\"filterTurnos\\\"\\r\\n                formControlName=\\\"UUID_LOGI_TURN\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              (keydown.enter)=\\\"onFilter()\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" >Descrição</th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let turno of turnos\\\"  [class.table-active]=\\\"turno?.UUID_LOGI_TURN == turnoSelecionado?.UUID_LOGI_TURN && showDetailPanel\\\">\\r\\n              <td  [ngClass]=\\\"turno.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n              {{ turno.DS_TURN | uppercase}}\\r\\n              </td>\\r\\n              <td class=\\\"align-middle\\\" >\\r\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"turno.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(turno)\\\">\\r\\n                    <i [ngClass]=\\\"turno.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', turno.UUID_LOGI_TURN]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(turno)\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Detalhes\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label>ID</label>\\r\\n            <div>{{ turnoSelecionado?.UUID_LOGI_TURN }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label>Turno</label>\\r\\n            <div>{{ turnoSelecionado?.DS_TURN | uppercase}}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label>Horário Inicial</label>\\r\\n            <div>{{ convertMysqlTime(turnoSelecionado?.HR_INIC) | date: 'HH:mm'}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label>Horário Final</label>\\r\\n            <div>{{ convertMysqlTime(turnoSelecionado?.HR_FINA) | date: 'HH:mm'}}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-12\\\">\\r\\n            <label>Dias da Semana</label>\\r\\n            <div class=\\\"d-flex mr-1\\\">\\r\\n              <div class=\\\"mr-1\\\">\\r\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_SEGU ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\r\\n              </div>\\r\\n              <span>Segunda-feira</span>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex mr-1\\\">\\r\\n              <div class=\\\"mr-1\\\">\\r\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_TERC ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\r\\n              </div>\\r\\n              <span>Terça-feira</span>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex mr-1\\\">\\r\\n              <div class=\\\"mr-1\\\">\\r\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_QUAR ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\r\\n              </div>\\r\\n              <span>Quarta-feira</span>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex mr-1\\\">\\r\\n              <div class=\\\"mr-1\\\">\\r\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_QUIN ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\r\\n              </div>\\r\\n              <span>Quinta-feira</span>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex mr-1\\\">\\r\\n              <div class=\\\"mr-1\\\">\\r\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_SEXT ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\r\\n              </div>\\r\\n              <span>Sexta-feira</span>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex mr-1\\\">\\r\\n              <div class=\\\"mr-1\\\">\\r\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_SABA ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\r\\n              </div>\\r\\n              <span>Sábado</span>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex mr-1\\\">\\r\\n              <div class=\\\"mr-1\\\">\\r\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_DOMI ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\r\\n              </div>\\r\\n              <span>Domingo</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label *ngIf=\\\"!turnoSelecionado?.DT_ATUA\\\">Data de Cadastro</label>\\r\\n            <label *ngIf=\\\"turnoSelecionado?.DT_ATUA\\\">Data da Atualização</label>\\r\\n            <div>{{(turnoSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (turnoSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label *ngIf=\\\"!turnoSelecionado?.DT_ATUA\\\">Usuário Responsável pelo Cadastro</label>\\r\\n            <label *ngIf=\\\"turnoSelecionado?.DT_ATUA\\\">Usuário Responsável pela Atualização</label>\\r\\n            <div>{{ turnoSelecionado?.NM_USUA | uppercase }}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- <custom-table>\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr>\\r\\n              <td class=\\\"text-center\\\">{{(turnoSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (turnoSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</td>\\r\\n              <td>{{ turnoSelecionado?.NM_USUA | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table> -->\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  PaginationModule,\r\n  TooltipModule,\r\n  TabsModule,\r\n  TimepickerModule,\r\n  BsDatepickerModule,\r\n  ModalModule,\r\n} from 'ngx-bootstrap';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n\r\nimport { LogisticaTurnosListaComponent } from './lista/lista.component';\r\nimport { LogisticaTurnosCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nimport { LogisticaTurnosRoutingModule } from './turnos-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogisticaTurnosListaComponent,\r\n    LogisticaTurnosCadastroComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    LogisticaTurnosRoutingModule\r\n  ]\r\n})\r\nexport class LogisticaTurnosModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Turnos\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postTurnos()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-10 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Turno</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\r\\n            <label for=\\\"DS_TURN\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"DS_TURN\\\"\\r\\n              formControlName=\\\"DS_TURN\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('DS_TURN') + ' ' + onFieldRequired('DS_TURN')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('DS_TURN')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-12\\\">\\r\\n            <div class=\\\"form-row justify-content-center\\\">\\r\\n              <div class=\\\"col-auto d-flex pr-4\\\">\\r\\n                <label class=\\\"my-auto mr-2\\\">Horário mínimo</label>\\r\\n                <timepicker\\r\\n                  [showMeridian]=\\\"false\\\"\\r\\n                  [showSpinners]=\\\"false\\\"\\r\\n                  [mousewheel]=\\\"true\\\"\\r\\n                  formControlName=\\\"HR_INIC\\\"\\r\\n                  [ngClass]=\\\"onFieldError('HR_INIC') + ' ' + onFieldRequired('HR_INIC')\\\"\\r\\n                  required\\r\\n                  >\\r\\n                </timepicker>\\r\\n              </div>\\r\\n              <div class=\\\"col-auto d-flex\\\">\\r\\n                <label class=\\\"my-auto mr-2\\\">Horário máximo</label>\\r\\n                <timepicker\\r\\n                  [showMeridian]=\\\"false\\\"\\r\\n                  [showSpinners]=\\\"false\\\"\\r\\n                  [mousewheel]=\\\"true\\\"\\r\\n                  formControlName=\\\"HR_FINA\\\"\\r\\n                  [ngClass]=\\\"onFieldError('HR_FINA') + ' ' + onFieldRequired('HR_FINA')\\\"\\r\\n                  >\\r\\n                </timepicker>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group mx-4\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\r\\n              <input\\r\\n                type=\\\"checkbox\\\"\\r\\n                class=\\\"custom-control-input\\\"\\r\\n                id=\\\"IN_SEGU\\\"\\r\\n                formControlName=\\\"IN_SEGU\\\"\\r\\n                (change)=\\\"onDias('IN_SEGU')\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_SEGU\\\"><strong>Segunda-feira</strong></label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group mx-4\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\r\\n              <input\\r\\n                type=\\\"checkbox\\\"\\r\\n                class=\\\"custom-control-input\\\"\\r\\n                id=\\\"IN_TERC\\\"\\r\\n                formControlName=\\\"IN_TERC\\\"\\r\\n                (change)=\\\"onDias('IN_TERC')\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_TERC\\\"><strong>Terça-feira</strong></label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group mx-4\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\r\\n              <input\\r\\n                type=\\\"checkbox\\\"\\r\\n                class=\\\"custom-control-input\\\"\\r\\n                id=\\\"IN_QUAR\\\"\\r\\n                formControlName=\\\"IN_QUAR\\\"\\r\\n                (change)=\\\"onDias('IN_QUAR')\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_QUAR\\\"><strong>Quarta-feira</strong></label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group mx-4\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\r\\n              <input\\r\\n                type=\\\"checkbox\\\"\\r\\n                class=\\\"custom-control-input\\\"\\r\\n                id=\\\"IN_QUIN\\\"\\r\\n                formControlName=\\\"IN_QUIN\\\"\\r\\n                (change)=\\\"onDias('IN_QUIN')\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_QUIN\\\"><strong>Quinta-feira</strong></label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group mx-4\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\r\\n              <input\\r\\n                type=\\\"checkbox\\\"\\r\\n                class=\\\"custom-control-input\\\"\\r\\n                id=\\\"IN_SEXT\\\"\\r\\n                formControlName=\\\"IN_SEXT\\\"\\r\\n                (change)=\\\"onDias('IN_SEXT')\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_SEXT\\\"><strong>Sexta-feira</strong></label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group mx-4\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\r\\n              <input\\r\\n                type=\\\"checkbox\\\"\\r\\n                class=\\\"custom-control-input\\\"\\r\\n                id=\\\"IN_SABA\\\"\\r\\n                formControlName=\\\"IN_SABA\\\"\\r\\n                (change)=\\\"onDias('IN_SABA')\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_SABA\\\"><strong>Sábado</strong></label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group mx-4\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\r\\n              <input\\r\\n                type=\\\"checkbox\\\"\\r\\n                class=\\\"custom-control-input\\\"\\r\\n                id=\\\"IN_DOMI\\\"\\r\\n                formControlName=\\\"IN_DOMI\\\"\\r\\n                (change)=\\\"onDias('IN_DOMI')\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_DOMI\\\"><strong>Domingo</strong></label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-10 pt-2 mx-auto\\\">\\r\\n        <legend>Observação</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";","//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { LogisticaTurnosService } from '../services/turnos.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaTurnos } from './../models/turnos';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-turnos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaTurnosListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  loadingTurnos: boolean;\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false; \r\n\r\n  //VARIAVEIS\r\n  totalItens: any = [];\r\n  filterTurnos: Array<ILogisticaTurnos>;\r\n  turnos: Array<ILogisticaTurnos>;\r\n  turnoSelecionado: ILogisticaTurnos;\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  // Tipos de Situação dos turnos (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private dateService: DateService,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private detailPanelService: DetailPanelService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private turnosService: LogisticaTurnosService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.onDetailPanelEmitter();\r\n    this.getFilterTurnos();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n          this.getTurnos(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_TURN: [null],\r\n      DS_TURN: [null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      NR_MATR: [null],\r\n      NM_USUA: [null],\r\n      DT_INCL: [null],\r\n      DT_ATUA: [null],\r\n      IN_SEGU: [false],\r\n      IN_TERC: [false],\r\n      IN_QUAR: [false],\r\n      IN_QUIN: [false],\r\n      IN_SEXT: [false],\r\n      IN_SABA: [false],\r\n      IN_DOMI: [false],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'Cadastro',\r\n        routerLink: `/logistica/cadastros/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Turnos',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onDetails(tipos: ILogisticaTurnos): void {\r\n    this.detailPanelService.show();\r\n    this.turnoSelecionado = tipos;\r\n    this.detailPanelService.loadedFinished(false);\r\n  }\r\n\r\n  convertMysqlTime(time: string) {\r\n    return this.dateService.convertMysqlTime(time);\r\n  }\r\n\r\n  getTurnos(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.turnosService\r\n      .getTurnos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.turnos = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.turnos = [];\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.noResult = true;\r\n          const message = error.error.message\r\n          message ? this.pnotify.error(message): this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getFilterTurnos() {\r\n    this.loadingTurnos = true;\r\n    this.turnosService\r\n      .getTurnos({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTurnos = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.filterTurnos = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      }),\r\n      (error: any) => {\r\n        const message = error.error.message\r\n        message ? this.pnotify.error(message): this.pnotify.error();\r\n      }\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(tipos: ILogisticaTurnos): string {\r\n    let borderClass: string;\r\n\r\n    if (tipos.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (tipos.IN_STAT == 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(params: ILogisticaTurnos) {\r\n    const stat = params.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          params.IN_STAT = stat;\r\n          return this.turnosService.postTurnos(params);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.turnos.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Tipos_Setor${dataExport}`);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy90dXJub3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","import { DateService } from 'src/app/shared/services/core/date.service';\r\n//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LogisticaTurnosService } from '../services/turnos.service';\r\n//interfaces\r\nimport { ILogisticaTurnos } from '../models/turnos';\r\nimport { isNull } from 'util';\r\n\r\n@Component({\r\n  selector: 'logistica--turnos-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaTurnosCadastroComponent\r\n  implements OnInit {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  //loading\r\n  disabledForm = false;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n\r\n\r\n  constructor(\r\n    private dateService: DateService,\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private localeService: BsLocaleService,\r\n    private turnosService: LogisticaTurnosService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id')){\r\n      this.getTurno(_params['id']);\r\n      return\r\n    }\r\n  }\r\n\r\n\r\n  getTurno(id?: string) {\r\n    this.loading = true;\r\n    this.turnosService\r\n      .getTurno(id)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.form.patchValue(response.body['data'])\r\n            console.log(this.form.value)\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.noResult=true;\r\n          const message = error.error.message\r\n          message ? this.pnotify.error(message): this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'Cadastro',\r\n        routerLink: `/logistica/cadastros/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Turnos',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_TURN: [null],\r\n      HR_INIC: [null, [Validators.required]],\r\n      HR_FINA: [null, [Validators.required]],\r\n      DS_TURN: [null, [Validators.required]],\r\n      IN_STAT: [null],\r\n      IN_SEGU: [false],\r\n      IN_TERC: [false],\r\n      IN_QUAR: [false],\r\n      IN_QUIN: [false],\r\n      IN_SEXT: [false],\r\n      IN_SABA: [false],\r\n      IN_DOMI: [false],\r\n      DS_OBSE: [null],\r\n    });\r\n  }\r\n\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postTurnos() {\r\n    const _params = this.form.value;\r\n    _params.HR_INIC = this.dateService.convert2PhpDate(this.form.get('HR_INIC').value)\r\n    _params.HR_FINA = this.dateService.convert2PhpDate(this.form.get('HR_FINA').value)\r\n    console.log(_params)\r\n    this.loadingNavBar = true;\r\n    this.turnosService\r\n      .postTurnos(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          const message = error.error.message\r\n          message ? this.pnotify.error(message): this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDias(dia){\r\n    const valor = this.form.get(dia).value;\r\n    valor == true ? false : true;\r\n    this.form.get(dia).setValue(valor)\r\n  }\r\n\r\n\r\n  \r\n}\r\n"]}