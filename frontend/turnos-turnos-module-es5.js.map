{"version":3,"sources":["webpack:///src/app/modules/logistica/cadastros/turnos/turnos-routing.module.ts","webpack:///src/app/modules/logistica/cadastros/turnos/services/turnos.service.ts","webpack:///src/app/modules/logistica/cadastros/turnos/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/cadastros/turnos/lista/lista.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/logistica/cadastros/turnos/turnos.module.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/logistica/cadastros/turnos/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/cadastros/turnos/lista/lista.component.ts","webpack:///src/app/modules/logistica/cadastros/turnos/lista/lista.component.scss","webpack:///src/app/modules/logistica/cadastros/turnos/cadastro/cadastro.component.ts"],"names":["routes","path","component","LogisticaTurnosRoutingModule","imports","forChild","exports","LogisticaTurnosService","http","API","params","get","observe","id","turno","post","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","LogisticaTurnosModule","declarations","forRoot","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","LogisticaTurnosListaComponent","route","pnotify","formBuilder","xlsxService","dateService","routerService","activatedRoute","detailPanelService","confirmModalService","turnosService","showDetailPanel","loading","loadingNavBar","totalItens","tableConfig","subtitleBorder","tipos","cod","nome","subtitles","text","color","itemsPerPage","totalItems","currentPage","buildForm","setBreadCrumb","onActivatedRoute","onDetailPanelEmitter","getFilterTurnos","$activatedRouteSubscription","unsubscribe","queryParams","subscribe","response","_response","getBase64UrlParams","form","patchValue","hasOwnProperty","TT_REGI_PAGI","getTurnos","getParams","showDetailPanelSubscription","config","event","showing","reset","PAGI","TIME","getTime","group","UUID_LOGI_TURN","DS_TURN","IN_STAT","DS_OBSE","NR_MATR","NM_USUA","DT_INCL","DT_ATUA","IN_SEGU","IN_TERC","IN_QUAR","IN_QUIN","IN_SEXT","IN_SABA","IN_DOMI","onFilter","snapshot","idSubModulo","breadCrumbTree","descricao","routerLink","hide","setValue","navigate","relativeTo","setBase64UrlParams","turnoSelecionado","loadedFinished","convertMysqlTime","pipe","status","turnos","body","noResult","error","loadingTurnos","IN_PAGI","filterTurnos","notice","page","_params","_obj","value","prop","convertToUrlDate","borderClass","stat","confirmChange","asObservable","result","postTurnos","success","showConfirm","data","toLocaleDateString","dataExport","listagemExport","concat","exportFile","selector","template","LogisticaTurnosCadastroComponent","router","localeService","titleService","atividadesService","formData","disabledForm","MASKS","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setFormBuilder","getTurno","console","log","appTitle","setTitle","HR_INIC","required","HR_FINA","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","convert2PhpDate","dia","valor"],"mappings":"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","file":"turnos-turnos-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\nimport { LogisticaTurnosCadastroComponent } from './cadastro/cadastro.component';\nimport { LogisticaTurnosListaComponent } from './lista/lista.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaTurnosListaComponent,\n  },\n  {\n    path: 'novo',\n    component: LogisticaTurnosCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: LogisticaTurnosCadastroComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LogisticaTurnosRoutingModule {}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ILogisticaTurnos } from '../models/turnos';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaTurnosService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n\n  getTurnos(params?) {\n    return this.http.get(\n      `${this.API}/logistica/turnos`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getTurno(id: string) {\n    return this.http.get(\n      `${this.API}/logistica/turnos/${id}`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  postTurnos(turno: ILogisticaTurnos) {\n    return this.http.post(\n      `${this.API}/logistica/turnos`,\n      turno,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy90dXJub3MvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Turnos\\\">\\n  <button\\n  type=\\\"button\\\"\\n  (click)=\\\"onExport()\\\"\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\n  Exportar\\n</button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onReset()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\n              <label for=\\\"filterTurnos\\\">Turno</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"filterTurnos\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingTurnos\\\"\\n                labelForId=\\\"filterTurnos\\\"\\n                bindLabel=\\\"DS_TURN\\\"\\n                bindValue=\\\"UUID_LOGI_TURN\\\"\\n                id=\\\"filterTurnos\\\"\\n                formControlName=\\\"UUID_LOGI_TURN\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              (keydown.enter)=\\\"onFilter()\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n            </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\n                (keydown.enter)=\\\"onFilter()\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\n      <div class=\\\"w-100\\\">\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" >Descrição</th>\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let turno of turnos\\\"  [class.table-active]=\\\"turno?.UUID_LOGI_TURN == turnoSelecionado?.UUID_LOGI_TURN && showDetailPanel\\\">\\n              <td  [ngClass]=\\\"turno.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n              {{ turno.DS_TURN | uppercase}}\\n              </td>\\n              <td class=\\\"align-middle\\\" >\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"turno.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(turno)\\\">\\n                    <i [ngClass]=\\\"turno.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', turno.UUID_LOGI_TURN]\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(turno)\\\">\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </div>\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel panelTitle=\\\"Detalhes\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label>ID</label>\\n            <div>{{ turnoSelecionado?.UUID_LOGI_TURN }}</div>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label>Turno</label>\\n            <div>{{ turnoSelecionado?.DS_TURN | uppercase}}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label>Horário Inicial</label>\\n            <div>{{ convertMysqlTime(turnoSelecionado?.HR_INIC) | date: 'HH:mm'}}</div>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label>Horário Final</label>\\n            <div>{{ convertMysqlTime(turnoSelecionado?.HR_FINA) | date: 'HH:mm'}}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-12\\\">\\n            <label>Dias da Semana</label>\\n            <div class=\\\"d-flex mr-1\\\">\\n              <div class=\\\"mr-1\\\">\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_SEGU ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\n              </div>\\n              <span>Segunda-feira</span>\\n            </div>\\n            <div class=\\\"d-flex mr-1\\\">\\n              <div class=\\\"mr-1\\\">\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_TERC ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\n              </div>\\n              <span>Terça-feira</span>\\n            </div>\\n            <div class=\\\"d-flex mr-1\\\">\\n              <div class=\\\"mr-1\\\">\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_QUAR ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\n              </div>\\n              <span>Quarta-feira</span>\\n            </div>\\n            <div class=\\\"d-flex mr-1\\\">\\n              <div class=\\\"mr-1\\\">\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_QUIN ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\n              </div>\\n              <span>Quinta-feira</span>\\n            </div>\\n            <div class=\\\"d-flex mr-1\\\">\\n              <div class=\\\"mr-1\\\">\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_SEXT ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\n              </div>\\n              <span>Sexta-feira</span>\\n            </div>\\n            <div class=\\\"d-flex mr-1\\\">\\n              <div class=\\\"mr-1\\\">\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_SABA ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\n              </div>\\n              <span>Sábado</span>\\n            </div>\\n            <div class=\\\"d-flex mr-1\\\">\\n              <div class=\\\"mr-1\\\">\\n                <i [ngClass]=\\\"turnoSelecionado?.IN_DOMI ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger'\\\"></i>\\n              </div>\\n              <span>Domingo</span>\\n            </div>\\n          </div>\\n        </div>\\n        <hr>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label *ngIf=\\\"!turnoSelecionado?.DT_ATUA\\\">Data de Cadastro</label>\\n            <label *ngIf=\\\"turnoSelecionado?.DT_ATUA\\\">Data da Atualização</label>\\n            <div>{{(turnoSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (turnoSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</div>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label *ngIf=\\\"!turnoSelecionado?.DT_ATUA\\\">Usuário Responsável pelo Cadastro</label>\\n            <label *ngIf=\\\"turnoSelecionado?.DT_ATUA\\\">Usuário Responsável pela Atualização</label>\\n            <div>{{ turnoSelecionado?.NM_USUA | uppercase }}</div>\\n          </div>\\n        </div>\\n        <!-- <custom-table>\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n              <th scope=\\\"col\\\">Usuário</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr>\\n              <td class=\\\"text-center\\\">{{(turnoSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (turnoSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</td>\\n              <td>{{ turnoSelecionado?.NM_USUA | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table> -->\\n      </detail-panel>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  PaginationModule,\n  TooltipModule,\n  TabsModule,\n  TimepickerModule,\n  BsDatepickerModule,\n  ModalModule,\n} from 'ngx-bootstrap';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n\nimport { LogisticaTurnosListaComponent } from './lista/lista.component';\nimport { LogisticaTurnosCadastroComponent } from './cadastro/cadastro.component';\n\nimport { LogisticaTurnosRoutingModule } from './turnos-routing.module';\n\n@NgModule({\n  declarations: [\n    LogisticaTurnosListaComponent,\n    LogisticaTurnosCadastroComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    LogisticaTurnosRoutingModule\n  ]\n})\nexport class LogisticaTurnosModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Turnos\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\n    (click)=\\\"postTurnos()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-10 pt-2 mx-auto\\\">\\n        <legend>Dados do Turno</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\n            <label for=\\\"DS_TURN\\\">Descrição</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"DS_TURN\\\"\\n              formControlName=\\\"DS_TURN\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('DS_TURN') + ' ' + onFieldRequired('DS_TURN')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('DS_TURN')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-12\\\">\\n            <div class=\\\"form-row justify-content-center\\\">\\n              <div class=\\\"col-auto d-flex pr-4\\\">\\n                <label class=\\\"my-auto mr-2\\\">Horário mínimo</label>\\n                <timepicker\\n                  [showMeridian]=\\\"false\\\"\\n                  [showSpinners]=\\\"false\\\"\\n                  [mousewheel]=\\\"true\\\"\\n                  formControlName=\\\"HR_INIC\\\"\\n                  [ngClass]=\\\"onFieldError('HR_INIC') + ' ' + onFieldRequired('HR_INIC')\\\"\\n                  required\\n                  >\\n                </timepicker>\\n              </div>\\n              <div class=\\\"col-auto d-flex\\\">\\n                <label class=\\\"my-auto mr-2\\\">Horário máximo</label>\\n                <timepicker\\n                  [showMeridian]=\\\"false\\\"\\n                  [showSpinners]=\\\"false\\\"\\n                  [mousewheel]=\\\"true\\\"\\n                  formControlName=\\\"HR_FINA\\\"\\n                  [ngClass]=\\\"onFieldError('HR_FINA') + ' ' + onFieldRequired('HR_FINA')\\\"\\n                  >\\n                </timepicker>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group mx-4\\\">\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                class=\\\"custom-control-input\\\"\\n                id=\\\"IN_SEGU\\\"\\n                formControlName=\\\"IN_SEGU\\\"\\n                (change)=\\\"onDias('IN_SEGU')\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_SEGU\\\"><strong>Segunda-feira</strong></label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mx-4\\\">\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                class=\\\"custom-control-input\\\"\\n                id=\\\"IN_TERC\\\"\\n                formControlName=\\\"IN_TERC\\\"\\n                (change)=\\\"onDias('IN_TERC')\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_TERC\\\"><strong>Terça-feira</strong></label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mx-4\\\">\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                class=\\\"custom-control-input\\\"\\n                id=\\\"IN_QUAR\\\"\\n                formControlName=\\\"IN_QUAR\\\"\\n                (change)=\\\"onDias('IN_QUAR')\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_QUAR\\\"><strong>Quarta-feira</strong></label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mx-4\\\">\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                class=\\\"custom-control-input\\\"\\n                id=\\\"IN_QUIN\\\"\\n                formControlName=\\\"IN_QUIN\\\"\\n                (change)=\\\"onDias('IN_QUIN')\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_QUIN\\\"><strong>Quinta-feira</strong></label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mx-4\\\">\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                class=\\\"custom-control-input\\\"\\n                id=\\\"IN_SEXT\\\"\\n                formControlName=\\\"IN_SEXT\\\"\\n                (change)=\\\"onDias('IN_SEXT')\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_SEXT\\\"><strong>Sexta-feira</strong></label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mx-4\\\">\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                class=\\\"custom-control-input\\\"\\n                id=\\\"IN_SABA\\\"\\n                formControlName=\\\"IN_SABA\\\"\\n                (change)=\\\"onDias('IN_SABA')\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_SABA\\\"><strong>Sábado</strong></label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mx-4\\\">\\n            <div class=\\\"custom-control custom-checkbox my-auto\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                class=\\\"custom-control-input\\\"\\n                id=\\\"IN_DOMI\\\"\\n                formControlName=\\\"IN_DOMI\\\"\\n                (change)=\\\"onDias('IN_DOMI')\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_DOMI\\\"><strong>Domingo</strong></label>\\n            </div>\\n          </div>\\n        </div>\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-10 pt-2 mx-auto\\\">\\n        <legend>Observação</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n          </div>\\n        </div>\\n        <br>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n</app-body>\";","//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\nimport { LogisticaTurnosService } from '../services/turnos.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//modelos\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\n\n//Interfaces\nimport { ILogisticaTurnos } from './../models/turnos';\n\n\n@Component({\n  selector: 'logistica-turnos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class LogisticaTurnosListaComponent\n  implements OnInit, OnDestroy {\n    \n  breadCrumbTree: Array<Breadcrumb>;\n  idSubModulo: number;\n  noResult: boolean;\n  loadingTurnos: boolean;\n  modalRef: BsModalRef;\n  form: FormGroup;\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  $activatedRouteSubscription: Subscription;\n\n  //LOADINGS\n  loading = true; \n  loadingNavBar = false; \n\n  //VARIAVEIS\n  totalItens: any = [];\n  filterTurnos: Array<ILogisticaTurnos>;\n  turnos: Array<ILogisticaTurnos>;\n  turnoSelecionado: ILogisticaTurnos;\n\n  // CUSTOM TABLE\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  // Tipos de Situação dos turnos (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '2',\n      nome: 'Inativos',\n    },\n  ];\n\n  // Subtitles (Ativo/Inativo)\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private formBuilder: FormBuilder,\n    private xlsxService: XlsxService,\n    private dateService: DateService,\n    private routerService: RouterService,\n    private activatedRoute: ActivatedRoute,\n    private detailPanelService: DetailPanelService,\n    private confirmModalService: ConfirmModalService,\n    private turnosService: LogisticaTurnosService,\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n    this.onDetailPanelEmitter();\n    this.getFilterTurnos();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n          this.getTurnos(this.getParams());\n      }\n    );\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.patchValue({\n      PAGI: 1,\n      TT_REGI_PAGI: 100,\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      UUID_LOGI_TURN: [null],\n      DS_TURN: [null],\n      IN_STAT: [null],\n      DS_OBSE: [null],\n      NR_MATR: [null],\n      NM_USUA: [null],\n      DT_INCL: [null],\n      DT_ATUA: [null],\n      IN_SEGU: [false],\n      IN_TERC: [false],\n      IN_QUAR: [false],\n      IN_QUIN: [false],\n      IN_SEXT: [false],\n      IN_SABA: [false],\n      IN_DOMI: [false],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/logistica/home`,\n      },\n      {\n        descricao: 'Cadastro',\n        routerLink: `/logistica/cadastros/${id}`,\n      },\n      {\n        descricao: 'Turnos',\n      },\n    ];\n  }\n\n  onFilter() {\n    this.detailPanelService.hide();\n    this.form.get('PAGI').setValue(1);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  onDetails(tipos: ILogisticaTurnos): void {\n    this.detailPanelService.show();\n    this.turnoSelecionado = tipos;\n    this.detailPanelService.loadedFinished(false);\n  }\n\n  convertMysqlTime(time: string) {\n    return this.dateService.convertMysqlTime(time);\n  }\n\n  getTurnos(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n    this.turnosService\n      .getTurnos(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.turnos = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.turnos = [];\n          }\n        },\n        (error: any) => {\n          this.noResult = true;\n          const message = error.error.message\n          message ? this.pnotify.error(message): this.pnotify.error();\n        }\n      );\n  }\n\n  getFilterTurnos() {\n    this.loadingTurnos = true;\n    this.turnosService\n      .getTurnos({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTurnos = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filterTurnos = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      }),\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n  }\n\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  classStatusBorder(tipos: ILogisticaTurnos): string {\n    let borderClass: string;\n\n    if (tipos.IN_STAT == 1) {\n      borderClass = 'border-success';\n    } else if (tipos.IN_STAT == 2) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  changeType(params: ILogisticaTurnos) {\n    const stat = params.IN_STAT == 1 ? 0 : 1;\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loadingNavBar = true;\n          params.IN_STAT = stat;\n          return this.turnosService.postTurnos(params);\n        }),\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotify.success();\n        },\n        (error: any) => {\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\n          this.pnotify.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == 1)\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Deseja realmente prosseguir com a ativação do registro?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onExport(): void {\n    let data = new Date().toLocaleDateString().split('/'),\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\n\n    let listagemExport: any = [];\n    listagemExport = this.turnos.concat(this.totalItens);\n\n    this.xlsxService.exportFile(listagemExport, `Tipos_Setor${dataExport}`);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy90dXJub3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","import { DateService } from 'src/app/shared/services/core/date.service';\n//Services\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//Bootstrap\nimport { utilsBr } from 'js-brasil';\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\n//Angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\n//rxjs\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LogisticaTurnosService } from '../services/turnos.service';\n//interfaces\nimport { ILogisticaTurnos } from '../models/turnos';\nimport { isNull } from 'util';\n\n@Component({\n  selector: 'logistica--turnos-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class LogisticaTurnosCadastroComponent\n  implements OnInit {\n  noResult: boolean;\n  $activatedRouteSubscription: Subscription;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  modalRef: BsModalRef;\n  formData: Array<FormData> = [];\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  //loading\n  disabledForm = false;\n  loading = false;\n  loadingNavBar = false;\n\n\n  constructor(\n    private dateService: DateService,\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private localeService: BsLocaleService,\n    private turnosService: LogisticaTurnosService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n  public MASKS = utilsBr.MASKS;\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onActivatedRoute() {\n    const _params = this.activatedRoute.snapshot.params;\n    if (_params.hasOwnProperty('id')){\n      this.getTurno(_params['id']);\n      return\n    }\n  }\n\n\n  getTurno(id?: string) {\n    this.loading = true;\n    this.turnosService\n      .getTurno(id)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.form.patchValue(response.body['data'])\n            console.log(this.form.value)\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n          }\n        },\n        (error: any) => {\n          this.noResult=true;\n          const message = error.error.message\n          message ? this.pnotify.error(message): this.pnotify.error();\n        }\n      );\n  }\n\n  setBreadCrumb(): void {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.appTitle = 'Cadastro';\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'Cadastro',\n        routerLink: `/logistica/cadastros/${id}`,\n      },\n      {\n        descricao: 'Turnos',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //formulario\n  setFormBuilder(): void {\n\n    this.form = this.formBuilder.group({\n      UUID_LOGI_TURN: [null],\n      HR_INIC: [null, [Validators.required]],\n      HR_FINA: [null, [Validators.required]],\n      DS_TURN: [null, [Validators.required]],\n      IN_STAT: [null],\n      IN_SEGU: [false],\n      IN_TERC: [false],\n      IN_QUAR: [false],\n      IN_QUIN: [false],\n      IN_SEXT: [false],\n      IN_SABA: [false],\n      IN_DOMI: [false],\n      DS_OBSE: [null],\n    });\n  }\n\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  postTurnos() {\n    const _params = this.form.value;\n    _params.HR_INIC = this.dateService.convert2PhpDate(this.form.get('HR_INIC').value)\n    _params.HR_FINA = this.dateService.convert2PhpDate(this.form.get('HR_FINA').value)\n    console.log(_params)\n    this.loadingNavBar = true;\n    this.turnosService\n      .postTurnos(_params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          const message = error.error.message\n          message ? this.pnotify.error(message): this.pnotify.error();\n        }\n      );\n  }\n\n  onDias(dia){\n    const valor = this.form.get(dia).value;\n    valor == true ? false : true;\n    this.form.get(dia).setValue(valor)\n  }\n\n\n  \n}\n"]}