{"version":3,"sources":["webpack:///src/app/modules/controladoria/saldos-bancos/cadastros/saldos-bancos/saldos-bancos.component.scss","webpack:///src/app/modules/controladoria/saldos-bancos/listas/saldos-bancos/saldos-bancos.component.html","webpack:///src/app/modules/controladoria/saldos-bancos/modals/log/log.component.html","webpack:///src/app/modules/controladoria/saldos-bancos/cadastros/tipos-saldos-bancos/tipos-saldos-bancos.component.ts","webpack:///src/app/modules/controladoria/saldos-bancos/services/tipos-saldos-bancos.service.ts","webpack:///src/app/modules/controladoria/saldos-bancos/listas/tipos-saldos-bancos/tipos-saldos-bancos.component.html","webpack:///src/app/modules/controladoria/saldos-bancos/saldos-bancos.component.scss","webpack:///src/app/modules/controladoria/saldos-bancos/saldos-bancos.component.ts","webpack:///src/app/modules/controladoria/saldos-bancos/cadastros/saldos-bancos/saldos-bancos.component.html","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/controladoria/saldos-bancos/saldos-bancos.module.ts","webpack:///src/app/modules/controladoria/saldos-bancos/cadastros/saldos-bancos/saldos-bancos.component.ts","webpack:///src/app/modules/controladoria/saldos-bancos/listas/saldos-bancos/saldos-bancos.component.scss","webpack:///src/app/modules/controladoria/saldos-bancos/saldos-bancos.component.html","webpack:///src/app/modules/controladoria/saldos-bancos/services/saldos-bancos.service.ts","webpack:///src/app/modules/controladoria/saldos-bancos/modals/log/log.component.ts","webpack:///src/app/modules/controladoria/saldos-bancos/listas/tipos-saldos-bancos/tipos-saldos-bancos.component.ts","webpack:///src/app/modules/controladoria/saldos-bancos/listas/tipos-saldos-bancos/tipos-saldos-bancos.component.scss","webpack:///src/app/modules/controladoria/saldos-bancos/cadastros/tipos-saldos-bancos/tipos-saldos-bancos.component.scss","webpack:///src/app/modules/controladoria/saldos-bancos/saldos-bancos-routing.module.ts","webpack:///src/app/modules/controladoria/saldos-bancos/listas/saldos-bancos/saldos-bancos.component.ts","webpack:///src/app/modules/controladoria/saldos-bancos/cadastros/tipos-saldos-bancos/tipos-saldos-bancos.component.html","webpack:///src/app/modules/controladoria/saldos-bancos/modals/log/log.component.scss"],"names":["ControladoriaCadastroTiposSaldosBancosComponent","activatedRoute","formBuilder","tipoSaldosBancosService","notice","route","location","routerService","dateService","breadCrumbTree","spinnerFullScreen","loaderNavbar","appTitle","tiposLancamentos","form","group","DS_BANC_TIPO","required","ID_BANC_TIPO","time","Date","getTime","setBreadCrumb","onActivatedRoute","descricao","routerLink","field","onFieldInvalid","get","status","touched","formControl","controls","validator","validationResult","param","getTipos","subscribe","response","patchValue","body","putTiposLancamentos","getParams","success","back","error","params","snapshot","hasOwnProperty","id","_params","_obj","value","prop","convertToBrazilianDate","substring","selector","template","ControladoriaTiposSaldosBancosService","http","BASE_URL","observe","undefined","put","post","providedIn","ControladoriaSaldosBancosComponent","atividadesService","navigate","registrarAcesso","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","currentDate","startOfWeek","setDate","setHours","endOfWeek","y","m","d","h","i","toString","padStart","s","getSeconds","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","ControladoriaSaldosBancosModule","declarations","imports","forRoot","providers","provide","useValue","ControladoriaCadastroSaldosBancosComponent","localeService","saldosBancosService","modalService","data","empresas","bancos","listas","ativaBotao","config","animated","ignoreBackdropClick","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","DATA_SALD","ID_LANC_BANC","VL_LANC","ID_LANC_EMPR","DS_LANC_OBSE","ID_BANC_SALD","JUSTIFICATIVA","minLength","getEmpresas","getBancos","postCadastrar","getLista","queryParams","decoded","getBase64UrlParams","setValue","modalRef","show","ControladoriaSaldosBancosService","modalEmitter","detailPanelEmitter","state","emit","ControladoriaSaldosBancosLogComponent","detailPanelService","items","noResult","dadosEmpty","log","showDetailPanel","detailPanel","tableLogConfig","hover","itemsPerPage","currentPage","begin","end","openModal","onDetailPanel","$saldosBancosSubscription","unsubscribe","$saldosBancosServiceSubscription","getStateModal","getLog","totalItems","length","event","page","$showDetailPanelSubscription","showing","map","item","selected","getDetailPanel","loadedFinished","setDetailPanel","forEach","element","INDICE","STATUS","ControladoriaListaTiposSaldosBancosComponent","routes","path","children","component","ControladoriaSaldosBancosRoutingModule","forChild","exports","ControladoriaListaSaldosBancosComponent","xlsxService","idLanc","listaSelecionada","tableConfig","subtitleBorder","COD","NOME","subtitles","text","color","DT_INIC","getFirstDayMonth","DT_FINA","IN_STAT","getActiveRoute","$activateRoutedSubscription","exportFile","relativeTo","setBase64UrlParams","showAdvancedFilter","keys","_response","pipe","lista","reset","_saldo","JSON","parse","stringify","setStateModal"],"mappings":"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","file":"saldos-bancos-saldos-bancos-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9zYWxkb3MtYmFuY29zL2NhZGFzdHJvcy9zYWxkb3MtYmFuY29zL3NhbGRvcy1iYW5jb3MuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"exportarExcel()\\\"\\r\\n    [disabled]=\\\"!noResult\\\"\\r\\n    >\\r\\n    Exportar\\r\\n  </button>\\r\\n  <button\\r\\n    [routerLink]=\\\"['./tipos-saldos-bancos']\\\"\\r\\n    >\\r\\n    Cadastrar Tipos Lançamentos\\r\\n  </button>\\r\\n  <button\\r\\n    [routerLink]=\\\"['../novo']\\\"\\r\\n    >\\r\\n    Inserir\\r\\n  </button>\\r\\n  <button\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    >\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- Início dos Filtros -->\\r\\n  <advanced-filter #scrollToFilter>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row justify-content-center\\\">\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"tipo\\\"> Tipos de lancamentos </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tiposLancamentos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipo\\\"\\r\\n            bindLabel=\\\"DS_BANC_TIPO\\\"\\r\\n            bindValue=\\\"ID_BANC_TIPO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"ID_BANC_TIPO\\\"\\r\\n            [ngClass]=\\\"onFieldError('ID_BANC_TIPO') + ' ' + onFieldRequired('ID_BANC_TIPO')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('ID_BANC_TIPO')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"tipoLancamentos\\\"> Bancos/Fundos </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"bancos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipoLancamentos\\\"\\r\\n            bindLabel=\\\"DESC_BANCO\\\"\\r\\n            bindValue=\\\"COD_BANCO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"ID_LANC_BANC\\\"\\r\\n            [ngClass]=\\\"onFieldError('ID_LANC_BANC') + ' ' + onFieldRequired('ID_LANC_BANC')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('ID_LANC_BANC')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"empresa\\\"> Empresas </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"empresas\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipoDocumento\\\"\\r\\n            bindLabel=\\\"DESC_EMPR\\\"\\r\\n            bindValue=\\\"COD_EMPR\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"ID_LANC_EMPR\\\"\\r\\n            [ngClass]=\\\"onFieldError('ID_LANC_EMPR') + ' ' + onFieldRequired('ID_LANC_EMPR')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('ID_LANC_EMPR')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"dt_inic\\\"> Data inicial </label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">\\r\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dt_inic\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_INIC\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_INIC') + ' ' + onFieldRequired('DT_INIC')\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('DT_INIC')\\\"\\r\\n            message=\\\"Data inicial é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"dt_fina\\\"> Data final </label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">\\r\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dt_fina\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_FINA\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_FINA') + ' ' + onFieldRequired('DT_FINA')\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('DT_FINA')\\\"\\r\\n            message=\\\"Data final é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"status\\\"> Status </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"status\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipo\\\"\\r\\n            bindLabel=\\\"NOME\\\"\\r\\n            bindValue=\\\"COD\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"IN_STAT\\\"\\r\\n            [ngClass]=\\\"onFieldError('IN_STAT') + ' ' + onFieldRequired('IN_STAT')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('IN_STAT')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Início da Lista -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-8 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" [hidden] = \\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Nr. Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Tipo Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Banco/Fundo </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\"> Empresa </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Data de Saldo </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\" [hidden]=\\\"showDetailPanel\\\"> Valor </th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">Status</th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">Log</th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let lista of listas | slice : begin : end; let i = index\\\"\\r\\n              [ngClass]=\\\"{'item-selected':lista.selected}\\\" class=\\\"hover text-center\\\">\\r\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"{\\r\\n              'border-success'    : lista.IN_STAT == '1',\\r\\n              'border-danger'     : lista.IN_STAT == '0'\\r\\n            }\\\" (click)=\\\"openTab(lista); clickEvent(lista)\\\">{{ lista.ID_BANC_SALD }}</td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"openTab(lista); clickEvent(lista)\\\">{{ lista.DS_BANC_TIPO | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"openTab(lista); clickEvent(lista)\\\">{{ lista.DS_LANC_BANC | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"openTab(lista); clickEvent(lista)\\\">{{ lista.DS_LANC_EMPR | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"openTab(lista); clickEvent(lista)\\\">{{ lista.DATA_SALD }}</td>\\r\\n            <td class=\\\"text-end\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"openTab(lista); clickEvent(lista)\\\">{{ lista.VL_LANC | currency:'BRL' }}</td>\\r\\n            \\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span class=\\\"\\\" [tooltip]=\\\"lista.IN_STAT == '1' ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openJustificativa(template, lista)\\\">\\r\\n                  <i [ngClass]=\\\"lista.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span tooltip=\\\"Histórico\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\"  (click)=\\\"openLog(lista)\\\">\\r\\n                  <i class=\\\"fas fa-list-ul\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\">\\r\\n              <span tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', lista.ID_BANC_SALD]\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span tooltip=\\\"Duplicar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" (click)=\\\"onDuplicate(lista)\\\">\\r\\n                  <i class=\\\"fas fa-copy\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n    <!-- Início da tabela de informações -->\\r\\n    <div class=\\\"col-4\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"appTitle\\\">\\r\\n        <div class=\\\"d-flex\\\">\\r\\n          <div class=\\\"col-6 pl-0\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Data saldo </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item?.DATA_SALD }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Valor </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item?.VL_LANC | currency:'BRL' }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>  \\r\\n          <div class=\\\"col-6\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Data de inclusão </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item?.DATA_INCL }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Observação </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item?.DS_LANC_OBSE }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-template #template>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h6 for=\\\"JUSTIFICATIVA\\\"> Justifique sua alteração! </h6>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"75\\\" rows=\\\"10\\\" formControlName=\\\"JUSTIFICATIVA\\\" #JUSTIFICATIVA minlength=\\\"10\\\"></textarea>\\r\\n        <div class=\\\"text-right\\\">\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-secondary mr-1\\\" (click)=\\\"modalRef.hide()\\\"\\r\\n            >\\r\\n            Cancelar \\r\\n          </button>\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"changeType(); modalRef.hide()\\\"\\r\\n            [disabled]=\\\"form.get('JUSTIFICATIVA').status == 'INVALID' || !form.get('JUSTIFICATIVA').value\\\"\\r\\n            >\\r\\n            Salvar \\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n  <controladoria-lanc-saldos-logs></controladoria-lanc-saldos-logs>\\r\\n</app-body>\\r\\n\\r\\n\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <h5>Log de lançamentos e alterações de fluxo de caixa</h5>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div [ngClass]=\\\"{'col-12': !showDetailPanel, 'col-7 pr-0': showDetailPanel}\\\">\\r\\n        <custom-table [config]=\\\"tableLogConfig\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Nr. Lançamento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Tipo Lançamento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Banco/Fundo </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Empresa </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Cod. Usuário de Alteração </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Nome Usuário de Alteração </th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody >\\r\\n            <tr class=\\\"text-center text-white\\\" (click)=\\\"openTab(data); clickEvent(data)\\\">\\r\\n              <td class=\\\"text-center bg-primary\\\">{{ data.ID_BANC_SALD }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\">{{ data.DS_BANC_TIPO | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\">{{ data.DS_LANC_BANC | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ data.DS_LANC_EMPR | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ data.COD_USUARIO }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ data.NM_USUARIO }}</td>\\r\\n            </tr>\\r\\n            <tr class=\\\"text-center\\\" *ngFor=\\\"let item of items | slice : begin : end; let i = index\\\" (click)=\\\"openTab(item); clickEvent(item)\\\">\\r\\n              <td class=\\\"text-center\\\">{{ item?.ID_BANC_SALD }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item?.DS_BANC_TIPO | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item?.DS_LANC_BANC | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.DS_LANC_EMPR | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.COD_USUARIO }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.NM_USUARIO }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n        <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n          Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n          <div class=\\\"row justify-content-between\\\">\\r\\n            <div class=\\\"ml-3\\\">\\r\\n              <pagination\\r\\n                [maxSize]=\\\"10\\\"\\r\\n                [totalItems]=\\\"totalItems\\\"\\r\\n                [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n                (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n                [boundaryLinks]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"currentPage\\\"\\r\\n                previousText=\\\"&lsaquo;\\\"\\r\\n                nextText=\\\"&rsaquo;\\\"\\r\\n                firstText=\\\"&laquo;\\\"\\r\\n                lastText=\\\"&raquo;\\\">\\r\\n              </pagination>\\r\\n            </div>\\r\\n            <div class=\\\"mr-2 pr-1\\\">\\r\\n              <button  \\r\\n                type=\\\"button\\\" class=\\\"btn btn-secondary mr-1\\\" (click)=\\\"modalRef.hide()\\\"\\r\\n                >\\r\\n                Fechar \\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <empty-result\\r\\n          message=\\\"Nenhuma informação encontrada\\\"\\r\\n          class=\\\"my-3\\\"\\r\\n          *ngIf=\\\"dadosEmpty\\\">\\r\\n        </empty-result>\\r\\n      </div>\\r\\n      <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n        <detail-panel [panelTitle]=\\\"appTitle\\\">\\r\\n          <div class=\\\"d-flex\\\">\\r\\n            <div class=\\\"col-6 pl-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Cod. Usuário de Alteração </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.COD_USUARIO }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Empresa de lançamento </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DS_LANC_EMPR | uppercase }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Data de lançamento </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DATA_INCL }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Observação </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DS_LANC_OBSE }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>  \\r\\n            <div class=\\\"col-6\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Nome Usuário de Alteração </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.NM_USUARIO | uppercase }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Data Saldo </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DATA_SALD }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Valor </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.VL_LANC | currency:'BRL' }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col p-0\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Justificativa da alteração </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ log.JUSTIFICATIVA | uppercase }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\";","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { Location } from '@angular/common';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ControladoriaTiposSaldosBancosService } from '../../services/tipos-saldos-bancos.service';\r\n\r\n@Component({\r\n  selector: 'cadastro-tipos-saldos-bancos',\r\n  templateUrl: './tipos-saldos-bancos.component.html',\r\n  styleUrls: ['./tipos-saldos-bancos.component.scss']\r\n})\r\nexport class ControladoriaCadastroTiposSaldosBancosComponent implements OnInit {\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  appTitle = 'Cadastro de tipos de lançamentos';\r\n  form: FormGroup;\r\n  tiposLancamentos = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private tipoSaldosBancosService: ControladoriaTiposSaldosBancosService,\r\n    private notice: PNotifyService,\r\n    private route: Router,\r\n    private location: Location,\r\n    private routerService: RouterService,\r\n    private dateService: DateService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      DS_BANC_TIPO: [null, Validators.required],\r\n      ID_BANC_TIPO: [null],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/saldos-bancos',\r\n      },\r\n      {\r\n        descricao: 'Tipos de lançamentos',\r\n        routerLink: '/controladoria/saldos-bancos/tipos-saldos-bancos',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getTipos(param) {\r\n    this.spinnerFullScreen = true;\r\n    this.tipoSaldosBancosService.getTipos(param).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe tipos de lançamentos cadastrados.');\r\n        this.spinnerFullScreen = false;\r\n      }\r\n      this.form.patchValue(response.body['data'][0]);\r\n      this.spinnerFullScreen = false;\r\n    });\r\n  }\r\n\r\n  putTiposLancamentos() {\r\n    this.spinnerFullScreen = true;\r\n    this.tipoSaldosBancosService\r\n      .putTiposLancamentos(this.getParams())\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200)\r\n            this.notice.success(response.body['mensagem']);\r\n          this.location.back();\r\n        },\r\n        (error) => this.notice.error()\r\n      );\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    if (params.hasOwnProperty('id')) {\r\n      this.getTipos({ ID_BANC_TIPO: params.id });\r\n    }\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControladoriaTiposSaldosBancosService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTipos(params) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos/lancamentos-bancos-saldos/tipos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  putTiposLancamentos(params) {\r\n    if (params.ID_BANC_TIPO != undefined) {\r\n      return this.http.put(\r\n        `${this.BASE_URL}/controladoria/lancamentos/lancamentos-bancos-saldos/tipos`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    } else {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/controladoria/lancamentos/lancamentos-bancos-saldos/tipos`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    [routerLink]=\\\"['./novo']\\\"\\r\\n    >\\r\\n    Inserir\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- <advanced-filter #scrollToFilter></advanced-filter> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [hidden] = \\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Código </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Tipo de Lançamento </th>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let tiposLancamento of tiposLancamentos | slice : begin : end; let i = index\\\" class=\\\"text-center\\\">\\r\\n            <td class=\\\"text-center\\\">{{ tiposLancamento.ID_BANC_TIPO }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ tiposLancamento.DS_BANC_TIPO | uppercase }}</td>\\r\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n              <span tooltip=\\\"Visualizar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', tiposLancamento.ID_BANC_TIPO]\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9zYWxkb3MtYmFuY29zL3NhbGRvcy1iYW5jb3MuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n@Component({\r\n  selector: 'saldos-bancos',\r\n  templateUrl: './saldos-bancos.component.html',\r\n  styleUrls: ['./saldos-bancos.component.scss']\r\n})\r\nexport class ControladoriaSaldosBancosComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private atividadesService: AtividadesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.navigate(['/controladoria/saldos-bancos']);\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n  }\r\n\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"validaSalvar(template)\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- Início dos Filtros -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"row col-6\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"tipoLancamento\\\"> Tipo Lançamento </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"tiposLancamentos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"tipoLancamento\\\"\\r\\n                bindLabel=\\\"DS_BANC_TIPO\\\"\\r\\n                bindValue=\\\"ID_BANC_TIPO\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"ID_BANC_TIPO\\\"\\r\\n                [ngClass]=\\\"onFieldError('ID_BANC_TIPO') + ' ' + onFieldRequired('ID_BANC_TIPO')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('ID_BANC_TIPO')\\\"\\r\\n                message=\\\"Tipo é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"banco\\\"> Banco </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"bancos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"banco\\\"\\r\\n                bindLabel=\\\"DESC_BANCO\\\"\\r\\n                bindValue=\\\"COD_BANCO\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"ID_LANC_BANC\\\"\\r\\n                [ngClass]=\\\"onFieldError('ID_LANC_BANC') + ' ' + onFieldRequired('ID_LANC_BANC')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('ID_LANC_BANC')\\\"\\r\\n                message=\\\"Tipo de lançamento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"dt_sald\\\"> Data saldo </label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">\\r\\n                    <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dt_sald\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"DATA_SALD\\\"\\r\\n                [ngClass]=\\\"onFieldError('DATA_SALD') + ' ' + onFieldRequired('DATA_SALD')\\\"\\r\\n                >\\r\\n              </div>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('DATA_SALD')\\\"\\r\\n                message=\\\"Data final é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"empresa\\\"> Empresa </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"empresas\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"empresa\\\"\\r\\n                bindLabel=\\\"DESC_EMPR\\\"\\r\\n                bindValue=\\\"COD_EMPR\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"ID_LANC_EMPR\\\"\\r\\n                [ngClass]=\\\"onFieldError('ID_LANC_EMPR') + ' ' + onFieldRequired('ID_LANC_EMPR')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('ID_LANC_EMPR')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label for=\\\"vl_sald\\\"> Valor </label>\\r\\n              <input\\r\\n                currencyMask\\r\\n                [options] = \\\" {align: 'left', prefix: 'R$', thousands: '.', decimal: ','} \\\"\\r\\n                id=\\\"vl_sald\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"VL_LANC\\\"\\r\\n                [ngClass]=\\\"onFieldError('VL_LANC') + ' ' + onFieldRequired('VL_LANC')\\\"\\r\\n              >\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('VL_LANC')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-9\\\">\\r\\n              <label for=\\\"valor\\\"> Observação </label>\\r\\n              <input\\r\\n                id=\\\"observacao\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"DS_LANC_OBSE\\\"\\r\\n                [ngClass]=\\\"onFieldError('DS_LANC_OBSE') + ' ' + onFieldRequired('DS_LANC_OBSE')\\\"\\r\\n              >\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('DS_LANC_OBSE')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-template #template>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h6 for=\\\"JUSTIFICATIVA\\\"> Justifique sua alteração! </h6>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"75\\\" rows=\\\"10\\\" formControlName=\\\"JUSTIFICATIVA\\\" #JUSTIFICATIVA minlength=\\\"10\\\"></textarea>\\r\\n        <div class=\\\"text-right\\\">\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-secondary mr-1\\\" (click)=\\\"modalRef.hide()\\\"\\r\\n            >\\r\\n            Cancelar \\r\\n          </button>\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"postCadastrar(); modalRef.hide()\\\"\\r\\n            [disabled]=\\\"form.get('JUSTIFICATIVA').status == 'INVALID' || !form.get('JUSTIFICATIVA').value\\\"\\r\\n            >\\r\\n            Salvar \\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { SharedModule } from './../../../shared/modules/shared.module';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\n\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { \r\n  TooltipModule, \r\n  TimepickerModule,\r\n  ptBrLocale,\r\n  BsDatepickerModule,\r\n  PaginationModule,\r\n  TabsModule, \r\n  defineLocale } from 'ngx-bootstrap';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport ptBr from '@angular/common/locales/pt';\r\n\r\nimport { ControladoriaSaldosBancosRoutingModule } from './saldos-bancos-routing.module';\r\nimport { ControladoriaSaldosBancosComponent } from './saldos-bancos.component';\r\nimport { ControladoriaListaSaldosBancosComponent } from './listas/saldos-bancos/saldos-bancos.component';\r\nimport { ControladoriaCadastroSaldosBancosComponent } from './cadastros/saldos-bancos/saldos-bancos.component';\r\nimport { ControladoriaCadastroTiposSaldosBancosComponent } from './cadastros/tipos-saldos-bancos/tipos-saldos-bancos.component';\r\nimport { ControladoriaSaldosBancosLogComponent } from './modals/log/log.component';\r\nimport { ControladoriaListaTiposSaldosBancosComponent } from './listas/tipos-saldos-bancos/tipos-saldos-bancos.component';\r\n\r\nregisterLocaleData(ptBr);\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ControladoriaSaldosBancosComponent,\r\n    ControladoriaListaSaldosBancosComponent,\r\n    ControladoriaCadastroSaldosBancosComponent,\r\n    ControladoriaListaTiposSaldosBancosComponent,\r\n    ControladoriaCadastroTiposSaldosBancosComponent,\r\n    ControladoriaSaldosBancosLogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ControladoriaSaldosBancosRoutingModule,\r\n    ModuleWrapperModule,\r\n    TemplatesModule.forRoot(),\r\n    FormsModule,\r\n    NgSelectModule,\r\n    SharedModule,\r\n    TooltipModule,\r\n    NotFoundModule,\r\n    PipesModule,\r\n    CurrencyMaskModule,\r\n    ReactiveFormsModule,\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-PT' }],\r\n})\r\nexport class ControladoriaSaldosBancosModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { Location } from '@angular/common';\r\nimport { exit } from 'process';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { ControladoriaSaldosBancosService } from '../../services/saldos-bancos.service';\r\nimport { ControladoriaTiposSaldosBancosService } from '../../services/tipos-saldos-bancos.service';\r\n\r\n@Component({\r\n  selector: 'cadastro-saldos-bancos',\r\n  templateUrl: './saldos-bancos.component.html',\r\n  styleUrls: ['./saldos-bancos.component.scss']\r\n})\r\nexport class ControladoriaCadastroSaldosBancosComponent implements OnInit {\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  breadCrumbTree: any = [];\r\n  data: Date = new Date();\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  form: FormGroup;\r\n  empresas = [];\r\n  bancos = [];\r\n  tiposLancamentos = [];\r\n  listas = [];\r\n  ativaBotao: boolean = false;\r\n\r\n  appTitle = 'Cadastro de Lançamentos';\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: false,\r\n    ignoreBackdropClick: true,\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private formBuilder: FormBuilder,\r\n    private saldosBancosService: ControladoriaSaldosBancosService,\r\n    private tipoSaldosBancosService: ControladoriaTiposSaldosBancosService,\r\n    private notice: PNotifyService,\r\n    private dateService: DateService,\r\n    private route: Router,\r\n    private location: Location,\r\n    private routerService: RouterService,\r\n    private modalService: BsModalService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n\r\n    this.form = this.formBuilder.group({\r\n      DATA_SALD: [null, Validators.required],\r\n      ID_BANC_TIPO: [null, Validators.required],\r\n      ID_LANC_BANC: [null, Validators.required],\r\n      VL_LANC: [null, Validators.required],\r\n      ID_LANC_EMPR: [null],\r\n      DS_LANC_OBSE: [null],\r\n      ID_BANC_SALD: [null],\r\n      JUSTIFICATIVA: [null, Validators.minLength(10)],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getEmpresas();\r\n    this.getBancos();\r\n    this.getTipos();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento saldos bancos',\r\n        routerLink: '/controladoria/saldos-bancos',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getEmpresas() {\r\n    this.saldosBancosService.getEmpresas(this.getParams()).subscribe((response) => {\r\n      this.empresas = response.body['data'];\r\n    });\r\n  }\r\n\r\n  getBancos() {\r\n    this.saldosBancosService.getBancos().subscribe((response) => {\r\n      this.bancos = response.body['data'];\r\n    });\r\n  }\r\n\r\n  getTipos() {\r\n    this.tipoSaldosBancosService.getTipos(this.getParams()).subscribe((response) => {\r\n      this.tiposLancamentos = response.body['data'];\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  postCadastrar() {\r\n    this.spinnerFullScreen = true;\r\n    this.saldosBancosService.postCadastrar(this.getParams()).subscribe(\r\n      (response) => {\r\n        if (response.status === 200)\r\n          this.notice.success(response.body['mensagem']);\r\n        this.location.back();\r\n      },\r\n      (error) => this.notice.error()\r\n    );\r\n  }\r\n\r\n  getLista(params) {\r\n    this.spinnerFullScreen = true;\r\n    this.saldosBancosService.getLista(params).subscribe((response) => {\r\n      this.form.patchValue(response.body['data'][0]);\r\n      this.spinnerFullScreen = false;\r\n    });\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    const queryParams = this.activatedRoute.snapshot.queryParams;\r\n    if (params.hasOwnProperty('id')) {\r\n      this.getLista({ ID_BANC_SALD: params.id });\r\n    } else if (queryParams.hasOwnProperty('q')) {\r\n      const decoded = this.routerService.getBase64UrlParams(queryParams);\r\n\r\n      this.form.patchValue(decoded);\r\n      this.form.get('ID_BANC_SALD').setValue(undefined);\r\n    }\r\n  }\r\n\r\n  validaSalvar(template) {\r\n    if (!this.form.get('ID_BANC_SALD').value) {\r\n      this.postCadastrar();\r\n    } else {\r\n      this.modalRef = this.modalService.show(template, this.config);\r\n    }\r\n  }\r\n}\r\n","export default \"tr.item-selected td {\\n  background-color: #8fb9ef !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb250cm9sYWRvcmlhL3NhbGRvcy1iYW5jb3MvbGlzdGFzL3NhbGRvcy1iYW5jb3Mvc2FsZG9zLWJhbmNvcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG9DQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbnRyb2xhZG9yaWEvc2FsZG9zLWJhbmNvcy9saXN0YXMvc2FsZG9zLWJhbmNvcy9zYWxkb3MtYmFuY29zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidHIuaXRlbS1zZWxlY3RlZCB0ZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOGZiOWVmICFpbXBvcnRhbnQ7XHJcbiAgfSJdfQ== */\";","export default \"<p>saldos-bancos works!</p>\\r\\n\";","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControladoriaSaldosBancosService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  private modalEmitter: EventEmitter<any> = new EventEmitter();\r\n  private detailPanelEmitter: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getEmpresas(param) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/empresas`,\r\n      {\r\n        params: param,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getBancos() {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/bancos`,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getLista(params) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos/lancamentos-bancos-saldos/saldo-bancos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postCadastrar(param) {\r\n    if (param.ID_BANC_SALD == undefined) {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/controladoria/lancamentos/lancamentos-bancos-saldos/lancamentos`,\r\n        param,\r\n        { observe: 'response' }\r\n      );\r\n    } else {\r\n      return this.http.put(\r\n        `${this.BASE_URL}/controladoria/lancamentos/lancamentos-bancos-saldos/lancamentos`,\r\n        param,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n  }\r\n\r\n  getLog(params) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-bancos-saldos/logs`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  setStateModal(params = { state: true, template: undefined, data: [] }): void {\r\n    return this.modalEmitter.emit(params);\r\n  }\r\n\r\n  getStateModal() {\r\n    return this.modalEmitter;\r\n  }\r\n\r\n  setDetailPanel(value: string) {\r\n    return this.detailPanelEmitter.emit(value);\r\n  }\r\n\r\n  getDetailPanel() {\r\n    return this.detailPanelEmitter;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ControladoriaSaldosBancosService } from '../../services/saldos-bancos.service';\r\n\r\n@Component({\r\n  selector: 'controladoria-lanc-saldos-logs',\r\n  templateUrl: './log.component.html',\r\n  styleUrls: ['./log.component.scss']\r\n})\r\nexport class ControladoriaSaldosBancosLogComponent implements OnInit, OnDestroy {\r\n  @ViewChild('template', { static: false }) template: ElementRef;\r\n  spinnerFullScreen: boolean = false;\r\n  data: Array<any> = [];\r\n  items: Array<any> = [];\r\n  noResult = false;\r\n  dadosEmpty = false;\r\n  log: any = {};\r\n  $saldosBancosSubscription: Subscription;\r\n  $saldosBancosServiceSubscription: Subscription;\r\n\r\n  appTitle = 'Detalhes';\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: false,\r\n    ignoreBackdropClick: true,\r\n    class: 'modal-xxl',\r\n  };\r\n\r\n  /* Painel de detalhes */\r\n  $showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanel = undefined;\r\n\r\n  tableLogConfig: Partial<CustomTableConfig> = {\r\n    hover: true,\r\n  };\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private saldosBancosService: ControladoriaSaldosBancosService,\r\n    private notice: PNotifyService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.openModal();\r\n    this.onDetailPanel();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$saldosBancosSubscription.unsubscribe();\r\n    this.$saldosBancosServiceSubscription.unsubscribe();\r\n  }\r\n\r\n  openModal(): void {\r\n    this.$saldosBancosServiceSubscription = this.saldosBancosService\r\n      .getStateModal()\r\n      .subscribe((response) => {\r\n        this.data = response;\r\n        this.modalRef = this.modalService.show(this.template, this.config);\r\n        this.showDetailPanel = false;\r\n        this.getLog();\r\n      });\r\n  }\r\n\r\n  getLog() {\r\n    this.items = [];\r\n    this.spinnerFullScreen = true;\r\n    let ID_BANC_SALD = this.data['ID_BANC_SALD'];\r\n\r\n    this.saldosBancosService.getLog(ID_BANC_SALD).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe log registrado.');\r\n        this.spinnerFullScreen = false;\r\n      } else {\r\n        this.items = response.body['data'];\r\n        this.totalItems = response.body['data'].length;\r\n        this.dadosEmpty = false;\r\n        this.noResult = true;\r\n        this.spinnerFullScreen = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  onDetailPanel(): void {\r\n    this.$showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        if (this.detailPanel !== 'modal') return;\r\n\r\n        this.showDetailPanel = event.showing;\r\n        if (!this.showDetailPanel)\r\n          this.items.map((item) => (item.selected = false));\r\n      }\r\n    );\r\n\r\n    this.$saldosBancosSubscription = this.saldosBancosService\r\n      .getDetailPanel()\r\n      .subscribe((event) => {\r\n        this.detailPanel = event;\r\n        this.detailPanelService.loadedFinished(false);\r\n      });\r\n  }\r\n\r\n  openTab(log) {\r\n    this.items.map((item) => (item.selected = false));\r\n    this.log = log;\r\n    this.log.selected = true;\r\n  }\r\n\r\n  clickEvent(item) {\r\n    this.saldosBancosService.setDetailPanel('modal');\r\n    this.items.forEach((element) => {\r\n      if (element.INDICE != item.INDICE) {\r\n        element.STATUS = false;\r\n      } else if (item.STATUS == true) {\r\n        item.STATUS = true;\r\n      } else {\r\n        item.STATUS = !item.STATUS;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ControladoriaTiposSaldosBancosService } from '../../services/tipos-saldos-bancos.service';\r\n\r\n@Component({\r\n  selector: 'lista-tipos-saldos-bancos',\r\n  templateUrl: './tipos-saldos-bancos.component.html',\r\n  styleUrls: ['./tipos-saldos-bancos.component.scss']\r\n})\r\nexport class ControladoriaListaTiposSaldosBancosComponent implements OnInit {\r\n  appTitle = 'Tipos de lançamentos';\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  noResult = false;\r\n  tiposLancamentos = [];\r\n  dadosEmpty = false;\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private tipoSaldosBancosService: ControladoriaTiposSaldosBancosService,\r\n    private route: Router,\r\n    private notice: PNotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getTipos();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento saldos bancos',\r\n        routerLink: '/controladoria/saldos-bancos',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  getTipos() {\r\n    let param = 0;\r\n    this.spinnerFullScreen = true;\r\n    this.tipoSaldosBancosService.getTipos(param).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe tipos de lançamentos cadastrados.');\r\n        this.spinnerFullScreen = false;\r\n      } else {\r\n        this.tiposLancamentos = response.body['data'];\r\n        this.totalItems = response.body['data'].length;\r\n        this.spinnerFullScreen = false;\r\n        this.noResult = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9zYWxkb3MtYmFuY29zL2xpc3Rhcy90aXBvcy1zYWxkb3MtYmFuY29zL3RpcG9zLXNhbGRvcy1iYW5jb3MuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9zYWxkb3MtYmFuY29zL2NhZGFzdHJvcy90aXBvcy1zYWxkb3MtYmFuY29zL3RpcG9zLXNhbGRvcy1iYW5jb3MuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\n\r\nimport { ControladoriaListaSaldosBancosComponent } from './listas/saldos-bancos/saldos-bancos.component';\r\nimport { ControladoriaCadastroSaldosBancosComponent } from './cadastros/saldos-bancos/saldos-bancos.component';\r\nimport { ControladoriaListaTiposSaldosBancosComponent } from './listas/tipos-saldos-bancos/tipos-saldos-bancos.component';\r\nimport { ControladoriaCadastroTiposSaldosBancosComponent } from './cadastros/tipos-saldos-bancos/tipos-saldos-bancos.component';\r\n\r\nconst routes: Routes = [\r\n  \r\n  {\r\n    path: 'tipos-saldos-bancos',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ControladoriaListaTiposSaldosBancosComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: ControladoriaCadastroTiposSaldosBancosComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: ControladoriaCadastroTiposSaldosBancosComponent,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    component: ControladoriaListaSaldosBancosComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ControladoriaCadastroSaldosBancosComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: ControladoriaCadastroSaldosBancosComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ControladoriaSaldosBancosRoutingModule { }\r\n","import { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  FormBuilder,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  BsModalService,\r\n  BsModalRef,\r\n  ModalDirective,\r\n} from 'ngx-bootstrap/modal';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { ControladoriaSaldosBancosService } from '../../services/saldos-bancos.service';\r\nimport { ControladoriaTiposSaldosBancosService } from '../../services/tipos-saldos-bancos.service';\r\n\r\n@Component({\r\n  selector: 'lista-saldos-bancos',\r\n  templateUrl: './saldos-bancos.component.html',\r\n  styleUrls: ['./saldos-bancos.component.scss']\r\n})\r\nexport class ControladoriaListaSaldosBancosComponent implements OnInit, OnDestroy {\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  breadCrumbTree: any = [];\r\n  data: Date = new Date();\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  form: FormGroup;\r\n  listas: any = [];\r\n  item: any = {};\r\n  empresas = [];\r\n  bancos = [];\r\n  tiposLancamentos = [];\r\n  noResult = false;\r\n  dadosEmpty = false;\r\n  $activateRoutedSubscription: Subscription;\r\n  $saldosBancosSubscription: Subscription;\r\n  showAdvancedFilter: boolean;\r\n  idLanc = 0;\r\n  listaSelecionada: any = [];\r\n\r\n  appTitle = 'Lançamento Saldos Bancos';\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  /* Painel de detalhes */\r\n  $showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanel = 'principal';\r\n\r\n  /* Config Table */\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  status = [\r\n    {\r\n      COD: '1',\r\n      NOME: 'Ativos',\r\n    },\r\n    {\r\n      COD: '0',\r\n      NOME: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: true,\r\n    ignoreBackdropClick: true,\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private formBuilder: FormBuilder,\r\n    private dateService: DateService,\r\n    private xlsxService: XlsxService,\r\n    private saldosBancosService: ControladoriaSaldosBancosService,\r\n    private tipoSaldosBancosService: ControladoriaTiposSaldosBancosService,\r\n    private notice: PNotifyService,\r\n    private routerService: RouterService,\r\n    private route: Router,\r\n    private modalService: BsModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n\r\n    this.form = this.formBuilder.group({\r\n      DT_INIC: [this.dateService.getFirstDayMonth(), Validators.required],\r\n      DT_FINA: [this.data, Validators.required],\r\n      ID_BANC_SALD: [this.idLanc],\r\n      ID_BANC_TIPO: [null],\r\n      ID_LANC_BANC: [null],\r\n      ID_LANC_EMPR: [null],\r\n      IN_STAT: [null],\r\n      JUSTIFICATIVA: [null, Validators.minLength(10)],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getEmpresas();\r\n    this.getBancos();\r\n    this.getTipos();\r\n    this.getActiveRoute();\r\n    this.onDetailPanel();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$showDetailPanelSubscription.unsubscribe();\r\n    this.$activateRoutedSubscription.unsubscribe();\r\n    this.$saldosBancosSubscription.unsubscribe();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.activatedRoute.params.subscribe((form: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/controladoria/home',\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  exportarExcel() {\r\n    this.xlsxService.exportFile(this.listas, 'lançamentos');\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('time').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onShowFilter() {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  getEmpresas() {\r\n    this.saldosBancosService\r\n      .getEmpresas(this.getParams())\r\n      .subscribe((response) => {\r\n        if (response.status === 204) {\r\n          this.notice.notice('Não há empresa cadastrada.');\r\n        } else this.empresas = response.body['data'];\r\n      });\r\n  }\r\n\r\n  getBancos() {\r\n    this.saldosBancosService.getBancos().subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não há bancos cadastrados.');\r\n      } else this.bancos = response.body['data'];\r\n    });\r\n  }\r\n\r\n  getTipos() {\r\n    this.tipoSaldosBancosService\r\n      .getTipos(this.getParams())\r\n      .subscribe((response) => {\r\n        if (response.status === 204) {\r\n          this.notice.notice('Não há tipos de lançamentos cadastrados.');\r\n        } else this.tiposLancamentos = response.body['data'];\r\n      });\r\n  }\r\n\r\n  getActiveRoute() {\r\n    this.$activateRoutedSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        if (Object.keys(response).length > 0) {\r\n          const _response = this.routerService.getBase64UrlParams(response);\r\n          this.form.patchValue(_response);\r\n        }\r\n        this.getLista(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  getLista(params) {\r\n    this.spinnerFullScreen = true;\r\n\r\n    if (this.form.status === 'VALID') {\r\n      this.saldosBancosService\r\n        .getLista(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.spinnerFullScreen = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response) => {\r\n            if (response.status === 204) {\r\n              this.notice.notice('Não há informações para esse período.');\r\n              this.showAdvancedFilter = true;\r\n              this.dadosEmpty = true;\r\n              this.noResult = false;\r\n            } else {\r\n              this.listas = response.body['data'];\r\n              this.listas.forEach((element, i) => {\r\n                element.INDICE = i + 1;\r\n              });\r\n              this.totalItems = response.body['data'].length;\r\n              this.dadosEmpty = false;\r\n              this.noResult = true;\r\n              this.showAdvancedFilter = true;\r\n            }\r\n          },\r\n          (error) => this.notice.error()\r\n        );\r\n    }\r\n  }\r\n\r\n  onDetailPanel(): void {\r\n    this.$showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        if (this.detailPanel !== 'principal') return;\r\n        this.showDetailPanel = event.showing;\r\n\r\n        if (!this.showDetailPanel)\r\n          this.listas.map((lista) => (lista.selected = false));\r\n      }\r\n    );\r\n\r\n    this.$saldosBancosSubscription = this.saldosBancosService\r\n      .getDetailPanel()\r\n      .subscribe((event) => {\r\n        this.detailPanel = event;\r\n        this.detailPanelService.loadedFinished(false);\r\n      });\r\n  }\r\n\r\n  openTab(item) {\r\n    this.listas.map((lista) => (lista.selected = false));\r\n    this.item = item;\r\n    this.item.selected = true;\r\n  }\r\n\r\n  clickEvent(lista) {\r\n    this.saldosBancosService.setDetailPanel('principal');\r\n    this.listas.forEach((element) => {\r\n      if (element.INDICE != lista.INDICE) {\r\n        element.STATUS = false;\r\n      } else if (lista.STATUS == true) {\r\n        lista.STATUS = true;\r\n      } else {\r\n        lista.STATUS = !lista.STATUS;\r\n      }\r\n    });\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  openJustificativa(template, data) {\r\n    this.form.get('JUSTIFICATIVA').reset();\r\n    this.listaSelecionada = data;\r\n    this.modalRef = this.modalService.show(template, this.config);\r\n  }\r\n\r\n  changeType() {\r\n    this.spinnerFullScreen = true;\r\n    let _saldo = JSON.parse(JSON.stringify(this.listaSelecionada));\r\n\r\n    _saldo.IN_STAT = _saldo['IN_STAT'] == '1' ? '0' : '1';\r\n    _saldo.JUSTIFICATIVA = this.form.value['JUSTIFICATIVA'];\r\n\r\n    this.saldosBancosService\r\n      .postCadastrar(_saldo)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.notice.success(response.body['mensagem']);\r\n            this.listaSelecionada.IN_STAT = _saldo.IN_STAT;\r\n          }\r\n        },\r\n        (error) => this.notice.error()\r\n      );\r\n  }\r\n\r\n  openLog(data) {\r\n    this.saldosBancosService.setStateModal(data);\r\n  }\r\n\r\n  onDuplicate(item) {\r\n    this.route.navigate(['./novo'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(item),\r\n    });\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"putTiposLancamentos()\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <div class=\\\"form-group col-md-12 p-0\\\">\\r\\n              <label for=\\\"tipoLancamento\\\"> Descrição TIpo de Lançamento </label>\\r\\n              <input\\r\\n                id=\\\"tipoLancamento\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"DS_BANC_TIPO\\\"\\r\\n                [ngClass]=\\\"onFieldError('DS_BANC_TIPO') + ' ' + onFieldRequired('DS_BANC_TIPO')\\\">\\r\\n            </div>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('DS_BANC_TIPO')\\\"\\r\\n              message=\\\"Informar tipo de lançamento é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9zYWxkb3MtYmFuY29zL21vZGFscy9sb2cvbG9nLmNvbXBvbmVudC5zY3NzIn0= */\";"]}