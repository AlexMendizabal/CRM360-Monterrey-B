{"version":3,"sources":["webpack:///src/app/modules/comercial/relatorios/posicao-diaria/posicao-diaria.component.scss","webpack:///src/app/modules/comercial/relatorios/posicao-diaria/posicao-diaria.service.ts","webpack:///src/app/modules/comercial/relatorios/posicao-diaria/posicao-diaria.component.html","webpack:///src/app/modules/comercial/relatorios/posicao-diaria/posicao-diaria.component.ts","webpack:///src/app/modules/comercial/relatorios/posicao-diaria/posicao-diaria-routing.module.ts","webpack:///src/app/modules/comercial/relatorios/posicao-diaria/posicao-diaria.module.ts"],"names":["ComercialRelatoriosPosicaoDiariaService","http","API","get","pipe","data","params","ordem","post","providedIn","ComercialRelatoriosPosicaoDiariaComponent","router","location","formBuilder","activatedRoute","dateService","modalService","pnotifyService","localeService","xlsxService","posicaoDiariaService","atividadesService","titleService","loaderNavbar","loaderFullScreen","breadCrumbTree","tableConfig","hover","small","currentUser","JSON","parse","localStorage","getItem","matriculaUser","info","matricula","adminProfile","acessoDBAs","listagem","listagemLoaded","listagemEmpty","tooltipRitmo","totalGeral","listagemDBA","totaisDBA","detalhesClasseEmpty","detalhesClasseLoaded","detalhesClasse","detalhesTotais","listagemExport","formEdit","toneladaEditado","valorEditado","toneladaMeta","valorMeta","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getPNotify","registrarAcesso","setBreadCrumb","getPerfil","setTitle","subscribe","descricao","routerLink","idSubModulo","getPerfis","setFormFilter","next","response","success","acessoAdmin","error","back","formValue","checkRouterParams","form","group","required","Date","activatedRouteSubscription","queryParams","keys","length","atob","q","search","onLoadRitmoDBA","forEach","formKey","paramKey","convertStringToDate","isNaN","Number","convertToUrlDate","unsubscribe","valid","setRouterParams","verificaParams","value","navigate","relativeTo","btoa","stringify","getListaManetoni","setDateFormValues","analitico","i","linha","dias","ateHoje","uteisMes","total","podeEditar","listagemDBALoaded","listagemDBAEmpty","getListaDBA","dia","getDate","mes","getMonth","dtPesquisa","getFullYear","mesAtual","getFullMonth","detalhes","getDetalhesManetoni","detalhesTitulo","setTimeout","openModal","console","log","modalRef","show","ignoreBackdropClick","hide","formObj","push","dados","periodo","postRitmoEditado","reponse","notice","toLocaleDateString","split","dataExport","concat","item","key","Linha","ToneladaHoje","toneladaHoje","ValorHoje","valorHoje","ToneladaMesAtual","toneladaMesAtual","ValorMesAtual","valorMesAtual","ToneladaRitmo","toneladaRitmo","ValorRitmo","valorRitmo","ToneladaEditado","ValorEditado","ToneladaMeta","ValorMeta","ToneladaMetaEditado","toneladaMetaEditado","ValorMetaEditado","valorMetaEditado","exportFile","textClass","field","onFieldInvalid","status","touched","formControl","controls","validator","validationResult","selector","template","routes","path","component","ComercialRelatoriosPosicaoDiariaRoutingModule","imports","forChild","exports","ComercialRelatoriosPosicaoDiariaModule","declarations","forRoot"],"mappings":"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","file":"posicao-diaria-posicao-diaria-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL3JlbGF0b3Jpb3MvcG9zaWNhby1kaWFyaWEvcG9zaWNhby1kaWFyaWEuY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { take, retry } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialRelatoriosPosicaoDiariaService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/relatorios/posicao-diaria`;\n\n  constructor(protected http: HttpClient) {}\n\n  getPerfis(): Observable<Object | JsonResponse> {\n    return this.http.get(`${this.API}/perfis`).pipe(take(1), retry(2));\n  }\n\n  getListaManetoni(data: any): Observable<Object | JsonResponse> {\n    return this.http.get(`${this.API}/lista/${data}`).pipe(take(1), retry(2));\n  }\n\n  getListaDBA(data: any): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/lista-dba/${data}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhesManetoni(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/detalhes/${params.data}/${params.ordem}`)\n      .pipe(take(1), retry(2));\n  }\n\n  postRitmoEditado(params: any): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/salvar`, params).pipe(take(1), retry(2));\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Posição diária\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onExport()\\\"\\n    *ngIf=\\\"listagemLoaded && adminProfile\\\">\\n    Exportar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    *ngIf=\\\"listagemLoaded && adminProfile\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <advanced-filter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\n          <label for=\\\"data\\\">Data</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"data\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"data\\\"\\n            [ngClass]=\\\"onFieldError('data') + ' ' + onFieldRequired('data')\\\">\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row\\\" *ngIf=\\\"listagemLoaded\\\">\\n    <div class=\\\"col\\\">\\n      <tabset>\\n        <tab heading=\\\"Manetoni\\\" class=\\\"border-right border-left border-bottom\\\">\\n          <ng-template #templateRitmo><div [innerHtml]=\\\"tooltipRitmo\\\"></div></ng-template>\\n          <custom-table *ngIf=\\\"listagemLoaded && !listagemEmpty\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th class=\\\"align-middle text-center\\\" rowspan=\\\"2\\\" scope=\\\"col\\\"></th>\\n                <th class=\\\"align-middle text-center\\\" rowspan=\\\"2\\\" scope=\\\"col\\\">Linha</th>\\n                <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">{{ dtPesquisa }}</th>\\n                <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">{{ mesAtual }}</th>\\n                <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">Ritmo <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"templateRitmo\\\"></i></th>\\n                <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">Editado</th>\\n                <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">Metas</th>\\n                <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">Metas/Editado</th>\\n              </tr>\\n              <tr>\\n                <!-- Dia Atual -->\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\n                <!-- Mes Atual -->\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\n                <!-- Ritmo -->\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\n                <!-- Editado -->\\n                <th cope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\n                <!-- Metas -->\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\n                <!-- Metas/Editado -->\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Peso</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let item of listagem; let i = index\\\" [class.table-active]=\\\"i == linha\\\">\\n                <td>\\n                  <span tooltip=\\\"Mais informações\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn-icon-sm ml-3\\\" *ngIf=\\\"onExibir(item.podeEditar)\\\" (click)=\\\"onDetalhesFilter(detalhes, item.linha, i + 1)\\\">\\n                      <i class=\\\"fas fa-plus\\\"></i>\\n                    </button>\\n                  </span>\\n                </td>\\n                <td class=\\\"text-center\\\">{{ item.linha }}</td>\\n                <td class=\\\"text-center\\\">{{ item.toneladaHoje | number:'1.0-0' }}</td>\\n                <td class=\\\"text-center\\\">{{ item.valorHoje | number:'1.0-0' }}</td>\\n                <td class=\\\"text-center\\\">{{ item.toneladaMesAtual | number:'1.0-0' }}</td>\\n                <td class=\\\"text-center\\\">{{ item.valorMesAtual | number:'1.0-0' }}</td>\\n                <td class=\\\"text-center\\\">{{ item.toneladaRitmo | number:'1.0-0' }}</td>\\n                <td class=\\\"text-center\\\">{{ item.valorRitmo | number:'1.0-0' }}</td>\\n                <!-- Campos Editaveis -->\\n                <td class=\\\"text-center bg-white\\\">\\n                  <span *ngIf=\\\"!adminProfile || !onExibir(item.podeEditar)\\\" >{{ item.toneladaEditado | number:'1.0-0' }}</span>\\n                  <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"adminProfile && onExibir(item.podeEditar)\\\">\\n                    <input\\n                      style=\\\"max-width: 80px;\\\"\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control form-control-sm\\\"\\n                      [(ngModel)]=\\\"formEdit.toneladaEditado[i]\\\"\\n                      name=\\\"toneladaEditado_{{i}}\\\"\\n                      currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',' }\\\">\\n                  </div>\\n                </td>\\n                <td class=\\\"text-center bg-white\\\">\\n                  <span *ngIf=\\\"!adminProfile || !onExibir(item.podeEditar)\\\">{{ item.valorEditado | number:'1.0-0' }}</span>\\n                  <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"adminProfile && onExibir(item.podeEditar)\\\">\\n                    <input\\n                      style=\\\"max-width: 80px;\\\"\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control form-control-sm\\\"\\n                      [(ngModel)]=\\\"formEdit.valorEditado[i]\\\"\\n                      name=\\\"valorEditado{{i}}\\\"\\n                      currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 0 }\\\">\\n                  </div>\\n                </td>\\n                <td class=\\\"text-center bg-white\\\">\\n                  <span *ngIf=\\\"!adminProfile || !onExibir(item.podeEditar)\\\">{{ item.toneladaMeta | number:'1.0-0' }}</span>\\n                  <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"adminProfile && onExibir(item.podeEditar)\\\">\\n                    <input\\n                      style=\\\"max-width: 80px;\\\"\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control form-control-sm\\\"\\n                      [(ngModel)]=\\\"formEdit.toneladaMeta[i]\\\"\\n                      name=\\\"toneladaMeta{{i}}\\\"\\n                      currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',' }\\\">\\n                  </div>\\n                </td>\\n                <td class=\\\"text-center bg-white\\\">\\n                  <span *ngIf=\\\"!adminProfile || !onExibir(item.podeEditar)\\\">{{ item.valorMeta | number:'1.0-0' }}</span>\\n                  <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"adminProfile && onExibir(item.podeEditar)\\\">\\n                    <input\\n                      style=\\\"max-width: 80px;\\\"\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control form-control-sm\\\"\\n                      [(ngModel)]=\\\"formEdit.valorMeta[i]\\\"\\n                      name=\\\"valorMeta{{i}}\\\"\\n                      currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 0 }\\\">\\n                  </div>\\n                </td>\\n                <td class=\\\"text-center bg-white\\\" [ngClass]=\\\"classComparativo(item.toneladaMetaEditado)\\\">{{ item.toneladaMetaEditado | number:'1.2-2' }}%</td>\\n                <td class=\\\"text-center bg-white\\\" [ngClass]=\\\"classComparativo(item.valorMetaEditado)\\\">{{ item.valorMetaEditado | number:'1.2-2' }}%</td>\\n              </tr>\\n              <!-- Totais -->\\n              <tr>\\n                <td class=\\\"bg-dark text-white text-center\\\" colspan=\\\"2\\\"><strong>Total</strong></td>\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.toneladaHoje | number:'1.0-0' }}</strong></td>\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.valorHoje | number:'1.0-0' }}</strong></td>\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.toneladaMesAtual | number:'1.0-0' }}</strong></td>\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.valorMesAtual | number:'1.0-0' }}</strong></td>\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.toneladaRitmo | number:'1.3-3' }}</strong></td>\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.valorRitmo | number:'1.0-0' }}</strong></td>\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.toneladaEditado | number:'1.0-0' }}</strong></td>\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.valorEditado | number:'1.0-0' }}</strong></td>\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.toneladaMeta | number:'1.0-0' }}</strong></td>\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.valorMeta | number:'1.0-0' }}</strong></td>\\n                <td class=\\\"bg-dark text-white text-center\\\" [ngClass]=\\\"classComparativo(totalGeral.toneladaMetaEditado)\\\"><strong>{{ totalGeral.toneladaMetaEditado | number:'1.2-2' }}%</strong></td>\\n                <td class=\\\"bg-dark text-white text-center\\\" [ngClass]=\\\"classComparativo(totalGeral.valorMetaEditado)\\\"><strong>{{ totalGeral.valorMetaEditado | number:'1.2-2' }}%</strong></td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n          <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"py-3\\\" *ngIf=\\\"listagemEmpty\\\"></empty-result>\\n        </tab>\\n        <tab heading=\\\"DBA's\\\" class=\\\"border-right border-left border-bottom\\\" *ngIf=\\\"acessoDBAs === true\\\">\\n            <ng-template #templateRitmo><div [innerHtml]=\\\"tooltipRitmo\\\"></div></ng-template>\\n            <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"listagemDBALoaded && !listagemDBAEmpty\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th class=\\\"align-middle\\\" scope=\\\"col\\\">Unidade</th>\\n                  <th class=\\\"align-middle text-center\\\" scope=\\\"col\\\">{{ dtPesquisa }}</th>\\n                  <th class=\\\"align-middle text-center\\\" scope=\\\"col\\\">Total {{ mesAtual }}</th>\\n                  <th class=\\\"align-middle text-center\\\" scope=\\\"col\\\">Ritmo {{ mesAtual }}</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of listagemDBA; let i = index\\\">\\n                  <td>{{ item.nomeEscritorio | uppercase }}</td>\\n                  <td class=\\\"text-center\\\">{{ item.toneladasDiaAnterior | number:'1.3-3' }} Ton</td>\\n                  <td class=\\\"text-center\\\">{{ item.toneladasMesAtual | number:'1.3-3' }} Ton</td>\\n                  <td class=\\\"text-center\\\">{{ item.ritmo | number:'1.0-0' }} Ton</td>\\n                </tr>\\n                <tr>\\n                  <td class=\\\"bg-dark text-white\\\"><strong>{{ totaisDBA.nomeEscritorio | uppercase }}</strong></td>\\n                  <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totaisDBA.toneladasDiaAnterior | number:'1.3-3' }} Ton</strong></td>\\n                  <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totaisDBA.toneladasMesAtual | number:'1.3-3' }} Ton</strong></td>\\n                  <td class=\\\"bg-dark text-white text-center\\\" [ngClass]=\\\"classComparativo(totaisDBA.ritmo)\\\"><strong>{{ totaisDBA.ritmo | number:'1.0-0' }} Ton</strong></td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n            <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"py-3\\\" *ngIf=\\\"listagemDBAEmpty\\\"></empty-result>\\n        </tab>\\n      </tabset>\\n    </div>\\n  </div>\\n</app-body>\\n<ng-template #detalhes>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">{{ detalhesTitulo }}</h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onModalClose()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <custom-table *ngIf=\\\"detalhesClasseLoaded && !detalhesClasseEmpty\\\">\\n      <ng-template #thead let-thead>\\n        <tr>\\n          <th class=\\\"text-center\\\" rowspan=\\\"2\\\" scope=\\\"col\\\">Classe</th>\\n          <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">{{ dtPesquisa }}</th>\\n          <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">{{ mesAtual }}</th>\\n          <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">Ritmo</th>\\n        </tr>\\n        <tr>\\n          <!-- Dia Atual -->\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\n          <!-- Mes Atual -->\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\n          <!-- Ritmo -->\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody>\\n        <tr *ngFor=\\\"let item of detalhesClasse\\\">\\n          <td class=\\\"text-center\\\">{{ item.classe }}</td>\\n          <td class=\\\"text-center\\\">{{ item.toneladaHoje | number:'1.0-0' }}</td>\\n          <td class=\\\"text-center\\\">{{ item.valorHoje | number:'1.0-0' }}</td>\\n          <td class=\\\"text-center\\\">{{ item.toneladaMesAtual | number:'1.0-0' }}</td>\\n          <td class=\\\"text-center\\\">{{ item.valorMesAtual | number:'1.0-0' }}</td>\\n          <td class=\\\"text-center\\\">{{ item.toneladaRitmo | number:'1.0-0' }}</td>\\n          <td class=\\\"text-center\\\">{{ item.valorRitmo | number:'1.0-0' }}</td>\\n        </tr>\\n        <tr>\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>Total</strong></td>\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ detalhesTotais.toneladaHoje | number:'1.0-0' }}</strong></td>\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ detalhesTotais.valorHoje | number:'1.0-0' }}</strong></td>\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ detalhesTotais.toneladaMesAtual | number:'1.0-0' }}</strong></td>\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ detalhesTotais.valorMesAtual | number:'1.0-0' }}</strong></td>\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ detalhesTotais.toneladaRitmo | number:'1.0-0' }}</strong></td>\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ detalhesTotais.valorRitmo | number:'1.0-0' }}</strong></td>\\n        </tr>\\n      </ng-template>\\n    </custom-table>\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"detalhesClasseEmpty\\\"></empty-result>\\n  </div>\\n</ng-template>\\n\";","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormBuilder,\n  Validators,\n  FormGroup,\n  FormControl,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { ComercialRelatoriosPosicaoDiariaService } from './posicao-diaria.service';\nimport { Subscription } from 'rxjs';\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-relatorios-posicao-diaria',\n  templateUrl: './posicao-diaria.component.html',\n  styleUrls: ['./posicao-diaria.component.scss'],\n})\nexport class ComercialRelatoriosPosicaoDiariaComponent implements OnInit {\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    hover: false,\n    small: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  matriculaUser = this.currentUser.info.matricula;\n\n  dtPesquisa: string;\n  mesAtual: string;\n  adminProfile = false;\n  acessoDBAs = false;\n\n  listagem: any = [];\n  listagemLoaded = false;\n  listagemEmpty = false;\n  tooltipRitmo: any = {};\n  totalGeral: any = {};\n\n  listagemDBA: any = [];\n  totaisDBA: any = [];\n  listagemDBALoaded: boolean;\n  listagemDBAEmpty: boolean;\n\n  detalhesClasseEmpty = false;\n  detalhesClasseLoaded = false;\n  linha: number;\n\n  detalhesTitulo: string;\n  detalhesClasse: any = [];\n  detalhesTotais: any = {};\n\n  listagemExport: any = [];\n\n  formEdit: any = {\n    toneladaEditado: [0, 0, 0, 0, 0, 0, 0, 0],\n    valorEditado: [0, 0, 0, 0, 0, 0, 0, 0],\n    toneladaMeta: [0, 0, 0, 0, 0, 0, 0, 0],\n    valorMeta: [0, 0, 0, 0, 0, 0, 0, 0],\n  };\n\n  modalRef: BsModalRef;\n\n  constructor(\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private dateService: DateService,\n    private modalService: BsModalService,\n    private pnotifyService: PNotifyService,\n    private localeService: BsLocaleService,\n    private xlsxService: XlsxService,\n    private posicaoDiariaService: ComercialRelatoriosPosicaoDiariaService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getPerfil();\n    this.titleService.setTitle('Posição diária');\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb() {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Relatórios',\n          routerLink: `/comercial/relatorios/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Posição diária',\n        },\n      ];\n    });\n  }\n\n  getPerfil() {\n    this.posicaoDiariaService\n      .getPerfis()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n          this.setFormFilter();\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.success === true) {\n            this.adminProfile = response.data.acessoAdmin;\n            this.acessoDBAs = response.data.acessoDBAs;\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormFilter() {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      data: [formValue.data, [Validators.required]],\n    });\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      data: new Date(),\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams.q);\n          params = JSON.parse(params);\n\n          this.search(params);\n          this.onLoadRitmoDBA(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (formKey === 'data') {\n                  formValue[formKey] = this.dateService.convertStringToDate(\n                    params[paramKey],\n                    'pt-br'\n                  );\n                } else {\n                  if (!isNaN(Number(params[paramKey]))) {\n                    formValue[formKey] = Number(params[paramKey]);\n                  } else {\n                    formValue[formKey] = params[paramKey];\n                  }\n                }\n              }\n            });\n          });\n        } else {\n          const params = {\n            data: this.dateService.convertToUrlDate(new Date(formValue.data)),\n          };\n\n          this.search(params);\n          this.onLoadRitmoDBA(params);\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  onFilter() {\n    if (this.form.valid) {\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    params.data = this.dateService.convertToUrlDate(\n      new Date(this.form.value.data)\n    );\n\n    return params;\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n    this.onLoadRitmoDBA(params);\n  }\n\n  search(params: any) {\n    this.loaderNavbar = true;\n    this.listagemEmpty = false;\n    this.listagemLoaded = false;\n\n    this.posicaoDiariaService\n      .getListaManetoni(params.data)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.listagemLoaded = true;\n          this.setDateFormValues();\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.success === true) {\n            if (response.data.analitico && response.data.analitico.length > 0) {\n              this.listagem = response.data.analitico;\n              this.listagemExport = response.data;\n\n              this.formEdit = {\n                toneladaEditado: [],\n                valorEditado: [],\n                toneladaMeta: [],\n                valorMeta: [],\n              };\n\n              for (let i = 0; i < this.listagem.length; i++) {\n                if (this.listagem[i].linha != 'TOTAL LONGOS') {\n                  this.formEdit.toneladaEditado[i] = this.listagem[i][\n                    'toneladaEditado'\n                  ];\n                  this.formEdit.valorEditado[i] = this.listagem[i][\n                    'valorEditado'\n                  ];\n                  this.formEdit.toneladaMeta[i] = this.listagem[i][\n                    'toneladaMeta'\n                  ];\n                  this.formEdit.valorMeta[i] = this.listagem[i].valorMeta;\n                }\n              }\n\n              this.tooltipRitmo = `Dias úteis até hoje: ${response.data.dias.ateHoje}. Dias úteis no mês: ${response.data.dias.uteisMes}`;\n              this.tooltipRitmo = `<p class=\"mb-0\">Dias úteis até hoje: ${response.data.dias.ateHoje}.</p><p class=\"mb-0\">Dias úteis no mês: ${response.data.dias.uteisMes}.</p>`;\n              this.totalGeral = response.data.total;\n            } else {\n              this.listagemEmpty = true;\n            }\n          } else {\n            this.listagemEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.listagemEmpty = true;\n          this.pnotifyService.error();\n        }\n      });\n  }\n\n  onExibir(podeEditar: number) {\n    return podeEditar === 1 ? true : false;\n  }\n\n  onLoadRitmoDBA(params: any) {\n    if (this.acessoDBAs === true) {\n      this.listagemDBALoaded = false;\n      this.listagemDBAEmpty = false;\n\n      this.posicaoDiariaService.getListaDBA(params.data).subscribe({\n        next: (response: JsonResponse) => {\n          if (response.success === true) {\n            this.listagemDBA = response.data.analitico;\n            this.totaisDBA = response.data.total;\n\n            this.listagemDBALoaded = true;\n          } else {\n            this.listagemDBAEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n        }\n      });\n    }\n  }\n\n  setDateFormValues(): void {\n    const dia =\n      this.form.value.data.getDate() < 10\n        ? `0${this.form.value.data.getDate()}`\n        : this.form.value.data.getDate();\n\n    const mes =\n      this.form.value.data.getMonth() + 1 < 10\n        ? `0${this.form.value.data.getMonth() + 1}`\n        : this.form.value.data.getMonth() + 1;\n\n    this.dtPesquisa = `${dia}/${mes}/${this.form.value['data'].getFullYear()}`;\n\n    this.mesAtual = `${this.dateService.getFullMonth(\n      this.form.value.data\n    )}/${this.form.value.data.getFullYear()}`;\n  }\n\n  onDetalhesFilter(detalhes: TemplateRef<any>, linha: string, ordem: number) {\n    this.loaderNavbar = true;\n    this.detalhesClasseLoaded = false;\n    this.detalhesClasseEmpty = false;\n    this.linha = ordem - 1;\n\n    this.posicaoDiariaService\n      .getDetalhesManetoni({\n        data: this.dateService.convertToUrlDate(new Date(this.form.value.data)),\n        ordem: ordem,\n      })\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.success === true) {\n            if (response.data.analitico && response.data.analitico.length > 0) {\n              this.detalhesTitulo = linha;\n              this.detalhesClasse = response.data.analitico;\n              this.detalhesTotais = response.data.total;\n              this.detalhesClasseLoaded = true;\n\n              setTimeout(() => {\n                this.openModal(detalhes);\n              }, 500);\n            } else {\n              this.detalhesClasseEmpty = true;\n            }\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  openModal(detalhes: TemplateRef<any>) {\n    console.log(detalhes);\n    this.modalRef = this.modalService.show(\n      detalhes,\n      Object.assign(\n        {\n          ignoreBackdropClick: true,\n        },\n        { class: 'modal-lg' }\n      )\n    );\n  }\n\n  onModalClose() {\n    this.modalRef.hide();\n    this.linha = -1;\n  }\n\n  onSubmit() {\n    this.loaderNavbar = true;\n\n    let i: number = 0,\n      formObj: any = [];\n\n    while (i < 9) {\n      if (i != 6 && i != 8) {\n        formObj.push({\n          toneladaEditado: this.formEdit.toneladaEditado[i],\n          valorEditado: this.formEdit.valorEditado[i],\n          toneladaMeta: this.formEdit.toneladaMeta[i],\n          valorMeta: this.formEdit.valorMeta[i],\n        });\n      }\n\n      i++;\n    }\n\n    let params: any = {\n      dados: formObj,\n      periodo: this.dateService.convertToUrlDate(\n        new Date(this.form.value.data)\n      ),\n    };\n\n    if (params.dados.length > 0) {\n      this.posicaoDiariaService\n        .postRitmoEditado(params)\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n            this.setFormFilter();\n          })\n        )\n        .subscribe(\n          (reponse: JsonResponse) => {\n            if (reponse.success === true) {\n              this.pnotifyService.success('Dados salvos com sucesso.');\n            } else {\n              this.pnotifyService.notice(\n                'Dados não foram salvos, favor tentar novamente.'\n              );\n            }\n          },\n          (error: any) => {\n            this.pnotifyService.notice(\n              'Dados não foram salvos, favor tentar novamente.'\n            );\n          }\n        );\n    } else {\n      this.pnotifyService.notice('Favor verificar dados.');\n    }\n  }\n\n  onExport() {\n    let data = new Date().toLocaleDateString().split('/'),\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\n\n    let dados: any = [],\n      listagemExport: any = [];\n\n    dados = this.listagem.concat(this.totalGeral);\n\n    dados.forEach((item, key) => {\n      listagemExport[key] = {\n        Linha: item.linha,\n        ToneladaHoje: item.toneladaHoje,\n        ValorHoje: item.valorHoje,\n        ToneladaMesAtual: item.toneladaMesAtual,\n        ValorMesAtual: item.valorMesAtual,\n        ToneladaRitmo: item.toneladaRitmo,\n        ValorRitmo: item.valorRitmo,\n        ToneladaEditado: item.toneladaEditado,\n        ValorEditado: item.valorEditado,\n        ToneladaMeta: item.toneladaMeta,\n        ValorMeta: item.valorMeta,\n        ToneladaMetaEditado: item.toneladaMetaEditado,\n        ValorMetaEditado: item.valorMetaEditado,\n      };\n    });\n\n    this.xlsxService.exportFile(listagemExport, `PosicaoDiaria_${dataExport}`);\n  }\n\n  classComparativo(value: number) {\n    let textClass = '';\n\n    if (value > 0) {\n      textClass = 'text-success';\n    } else if (value < 0) {\n      textClass = 'text-danger';\n    }\n\n    return textClass;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string): string {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { ComercialRelatoriosPosicaoDiariaComponent } from './posicao-diaria.component';\n\nconst routes: Routes = [\n  { path: '', component: ComercialRelatoriosPosicaoDiariaComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialRelatoriosPosicaoDiariaRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { registerLocaleData } from '@angular/common';\nimport localePt from '@angular/common/locales/pt';\n\nregisterLocaleData(localePt, 'pt-BR');\n\n// ngx-bootstrap\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// Modules\nimport { ComercialRelatoriosPosicaoDiariaRoutingModule } from './posicao-diaria-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialRelatoriosPosicaoDiariaComponent } from './posicao-diaria.component';\n\n@NgModule({\n  declarations: [ComercialRelatoriosPosicaoDiariaComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    CurrencyMaskModule,\n    ComercialRelatoriosPosicaoDiariaRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ]\n})\nexport class ComercialRelatoriosPosicaoDiariaModule {}\n"]}