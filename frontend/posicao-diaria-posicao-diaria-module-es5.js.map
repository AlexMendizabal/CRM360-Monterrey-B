{"version":3,"sources":["webpack:///src/app/modules/comercial/relatorios/posicao-diaria/posicao-diaria.component.scss","webpack:///src/app/modules/comercial/relatorios/posicao-diaria/posicao-diaria.service.ts","webpack:///src/app/modules/comercial/relatorios/posicao-diaria/posicao-diaria.component.html","webpack:///src/app/modules/comercial/relatorios/posicao-diaria/posicao-diaria.component.ts","webpack:///src/app/modules/comercial/relatorios/posicao-diaria/posicao-diaria-routing.module.ts","webpack:///src/app/modules/comercial/relatorios/posicao-diaria/posicao-diaria.module.ts"],"names":["ComercialRelatoriosPosicaoDiariaService","http","API","get","pipe","data","params","ordem","post","providedIn","ComercialRelatoriosPosicaoDiariaComponent","router","location","formBuilder","activatedRoute","dateService","modalService","pnotifyService","localeService","xlsxService","posicaoDiariaService","atividadesService","titleService","loaderNavbar","loaderFullScreen","breadCrumbTree","tableConfig","hover","small","currentUser","JSON","parse","localStorage","getItem","matriculaUser","info","matricula","adminProfile","acessoDBAs","listagem","listagemLoaded","listagemEmpty","tooltipRitmo","totalGeral","listagemDBA","totaisDBA","detalhesClasseEmpty","detalhesClasseLoaded","detalhesClasse","detalhesTotais","listagemExport","formEdit","toneladaEditado","valorEditado","toneladaMeta","valorMeta","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getPNotify","registrarAcesso","setBreadCrumb","getPerfil","setTitle","subscribe","descricao","routerLink","idSubModulo","getPerfis","setFormFilter","next","response","success","acessoAdmin","error","back","formValue","checkRouterParams","form","group","required","Date","activatedRouteSubscription","queryParams","keys","length","atob","q","search","onLoadRitmoDBA","forEach","formKey","paramKey","convertStringToDate","isNaN","Number","convertToUrlDate","unsubscribe","valid","setRouterParams","verificaParams","value","navigate","relativeTo","btoa","stringify","getListaManetoni","setDateFormValues","analitico","i","linha","dias","ateHoje","uteisMes","total","podeEditar","listagemDBALoaded","listagemDBAEmpty","getListaDBA","dia","getDate","mes","getMonth","dtPesquisa","getFullYear","mesAtual","getFullMonth","detalhes","getDetalhesManetoni","detalhesTitulo","setTimeout","openModal","console","log","modalRef","show","ignoreBackdropClick","hide","formObj","push","dados","periodo","postRitmoEditado","reponse","notice","toLocaleDateString","split","dataExport","concat","item","key","Linha","ToneladaHoje","toneladaHoje","ValorHoje","valorHoje","ToneladaMesAtual","toneladaMesAtual","ValorMesAtual","valorMesAtual","ToneladaRitmo","toneladaRitmo","ValorRitmo","valorRitmo","ToneladaEditado","ValorEditado","ToneladaMeta","ValorMeta","ToneladaMetaEditado","toneladaMetaEditado","ValorMetaEditado","valorMetaEditado","exportFile","textClass","field","onFieldInvalid","status","touched","formControl","controls","validator","validationResult","selector","template","routes","path","component","ComercialRelatoriosPosicaoDiariaRoutingModule","imports","forChild","exports","ComercialRelatoriosPosicaoDiariaModule","declarations","forRoot"],"mappings":"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","file":"posicao-diaria-posicao-diaria-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL3JlbGF0b3Jpb3MvcG9zaWNhby1kaWFyaWEvcG9zaWNhby1kaWFyaWEuY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialRelatoriosPosicaoDiariaService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/relatorios/posicao-diaria`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getPerfis(): Observable<Object | JsonResponse> {\r\n    return this.http.get(`${this.API}/perfis`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getListaManetoni(data: any): Observable<Object | JsonResponse> {\r\n    return this.http.get(`${this.API}/lista/${data}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getListaDBA(data: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/lista-dba/${data}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhesManetoni(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${params.data}/${params.ordem}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postRitmoEditado(params: any): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, params).pipe(take(1), retry(2));\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Posição diária\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onExport()\\\"\\r\\n    *ngIf=\\\"listagemLoaded && adminProfile\\\">\\r\\n    Exportar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    *ngIf=\\\"listagemLoaded && adminProfile\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <advanced-filter>\\r\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\r\\n          <label for=\\\"data\\\">Data</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"data\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"data\\\"\\r\\n            [ngClass]=\\\"onFieldError('data') + ' ' + onFieldRequired('data')\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"listagemLoaded\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <tabset>\\r\\n        <tab heading=\\\"Manetoni\\\" class=\\\"border-right border-left border-bottom\\\">\\r\\n          <ng-template #templateRitmo><div [innerHtml]=\\\"tooltipRitmo\\\"></div></ng-template>\\r\\n          <custom-table *ngIf=\\\"listagemLoaded && !listagemEmpty\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th class=\\\"align-middle text-center\\\" rowspan=\\\"2\\\" scope=\\\"col\\\"></th>\\r\\n                <th class=\\\"align-middle text-center\\\" rowspan=\\\"2\\\" scope=\\\"col\\\">Linha</th>\\r\\n                <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">{{ dtPesquisa }}</th>\\r\\n                <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">{{ mesAtual }}</th>\\r\\n                <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">Ritmo <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"templateRitmo\\\"></i></th>\\r\\n                <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">Editado</th>\\r\\n                <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">Metas</th>\\r\\n                <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">Metas/Editado</th>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <!-- Dia Atual -->\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\r\\n                <!-- Mes Atual -->\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\r\\n                <!-- Ritmo -->\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\r\\n                <!-- Editado -->\\r\\n                <th cope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\r\\n                <!-- Metas -->\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\r\\n                <!-- Metas/Editado -->\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Peso</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let item of listagem; let i = index\\\" [class.table-active]=\\\"i == linha\\\">\\r\\n                <td>\\r\\n                  <span tooltip=\\\"Mais informações\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn-icon-sm ml-3\\\" *ngIf=\\\"onExibir(item.podeEditar)\\\" (click)=\\\"onDetalhesFilter(detalhes, item.linha, i + 1)\\\">\\r\\n                      <i class=\\\"fas fa-plus\\\"></i>\\r\\n                    </button>\\r\\n                  </span>\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">{{ item.linha }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.toneladaHoje | number:'1.0-0' }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.valorHoje | number:'1.0-0' }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.toneladaMesAtual | number:'1.0-0' }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.valorMesAtual | number:'1.0-0' }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.toneladaRitmo | number:'1.0-0' }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.valorRitmo | number:'1.0-0' }}</td>\\r\\n                <!-- Campos Editaveis -->\\r\\n                <td class=\\\"text-center bg-white\\\">\\r\\n                  <span *ngIf=\\\"!adminProfile || !onExibir(item.podeEditar)\\\" >{{ item.toneladaEditado | number:'1.0-0' }}</span>\\r\\n                  <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"adminProfile && onExibir(item.podeEditar)\\\">\\r\\n                    <input\\r\\n                      style=\\\"max-width: 80px;\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control form-control-sm\\\"\\r\\n                      [(ngModel)]=\\\"formEdit.toneladaEditado[i]\\\"\\r\\n                      name=\\\"toneladaEditado_{{i}}\\\"\\r\\n                      currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',' }\\\">\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td class=\\\"text-center bg-white\\\">\\r\\n                  <span *ngIf=\\\"!adminProfile || !onExibir(item.podeEditar)\\\">{{ item.valorEditado | number:'1.0-0' }}</span>\\r\\n                  <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"adminProfile && onExibir(item.podeEditar)\\\">\\r\\n                    <input\\r\\n                      style=\\\"max-width: 80px;\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control form-control-sm\\\"\\r\\n                      [(ngModel)]=\\\"formEdit.valorEditado[i]\\\"\\r\\n                      name=\\\"valorEditado{{i}}\\\"\\r\\n                      currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 0 }\\\">\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td class=\\\"text-center bg-white\\\">\\r\\n                  <span *ngIf=\\\"!adminProfile || !onExibir(item.podeEditar)\\\">{{ item.toneladaMeta | number:'1.0-0' }}</span>\\r\\n                  <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"adminProfile && onExibir(item.podeEditar)\\\">\\r\\n                    <input\\r\\n                      style=\\\"max-width: 80px;\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control form-control-sm\\\"\\r\\n                      [(ngModel)]=\\\"formEdit.toneladaMeta[i]\\\"\\r\\n                      name=\\\"toneladaMeta{{i}}\\\"\\r\\n                      currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',' }\\\">\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td class=\\\"text-center bg-white\\\">\\r\\n                  <span *ngIf=\\\"!adminProfile || !onExibir(item.podeEditar)\\\">{{ item.valorMeta | number:'1.0-0' }}</span>\\r\\n                  <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"adminProfile && onExibir(item.podeEditar)\\\">\\r\\n                    <input\\r\\n                      style=\\\"max-width: 80px;\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control form-control-sm\\\"\\r\\n                      [(ngModel)]=\\\"formEdit.valorMeta[i]\\\"\\r\\n                      name=\\\"valorMeta{{i}}\\\"\\r\\n                      currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 0 }\\\">\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td class=\\\"text-center bg-white\\\" [ngClass]=\\\"classComparativo(item.toneladaMetaEditado)\\\">{{ item.toneladaMetaEditado | number:'1.2-2' }}%</td>\\r\\n                <td class=\\\"text-center bg-white\\\" [ngClass]=\\\"classComparativo(item.valorMetaEditado)\\\">{{ item.valorMetaEditado | number:'1.2-2' }}%</td>\\r\\n              </tr>\\r\\n              <!-- Totais -->\\r\\n              <tr>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\" colspan=\\\"2\\\"><strong>Total</strong></td>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.toneladaHoje | number:'1.0-0' }}</strong></td>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.valorHoje | number:'1.0-0' }}</strong></td>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.toneladaMesAtual | number:'1.0-0' }}</strong></td>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.valorMesAtual | number:'1.0-0' }}</strong></td>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.toneladaRitmo | number:'1.3-3' }}</strong></td>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.valorRitmo | number:'1.0-0' }}</strong></td>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.toneladaEditado | number:'1.0-0' }}</strong></td>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.valorEditado | number:'1.0-0' }}</strong></td>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.toneladaMeta | number:'1.0-0' }}</strong></td>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totalGeral.valorMeta | number:'1.0-0' }}</strong></td>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\" [ngClass]=\\\"classComparativo(totalGeral.toneladaMetaEditado)\\\"><strong>{{ totalGeral.toneladaMetaEditado | number:'1.2-2' }}%</strong></td>\\r\\n                <td class=\\\"bg-dark text-white text-center\\\" [ngClass]=\\\"classComparativo(totalGeral.valorMetaEditado)\\\"><strong>{{ totalGeral.valorMetaEditado | number:'1.2-2' }}%</strong></td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n          <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"py-3\\\" *ngIf=\\\"listagemEmpty\\\"></empty-result>\\r\\n        </tab>\\r\\n        <tab heading=\\\"DBA's\\\" class=\\\"border-right border-left border-bottom\\\" *ngIf=\\\"acessoDBAs === true\\\">\\r\\n            <ng-template #templateRitmo><div [innerHtml]=\\\"tooltipRitmo\\\"></div></ng-template>\\r\\n            <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"listagemDBALoaded && !listagemDBAEmpty\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th class=\\\"align-middle\\\" scope=\\\"col\\\">Unidade</th>\\r\\n                  <th class=\\\"align-middle text-center\\\" scope=\\\"col\\\">{{ dtPesquisa }}</th>\\r\\n                  <th class=\\\"align-middle text-center\\\" scope=\\\"col\\\">Total {{ mesAtual }}</th>\\r\\n                  <th class=\\\"align-middle text-center\\\" scope=\\\"col\\\">Ritmo {{ mesAtual }}</th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let item of listagemDBA; let i = index\\\">\\r\\n                  <td>{{ item.nomeEscritorio | uppercase }}</td>\\r\\n                  <td class=\\\"text-center\\\">{{ item.toneladasDiaAnterior | number:'1.3-3' }} Ton</td>\\r\\n                  <td class=\\\"text-center\\\">{{ item.toneladasMesAtual | number:'1.3-3' }} Ton</td>\\r\\n                  <td class=\\\"text-center\\\">{{ item.ritmo | number:'1.0-0' }} Ton</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td class=\\\"bg-dark text-white\\\"><strong>{{ totaisDBA.nomeEscritorio | uppercase }}</strong></td>\\r\\n                  <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totaisDBA.toneladasDiaAnterior | number:'1.3-3' }} Ton</strong></td>\\r\\n                  <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ totaisDBA.toneladasMesAtual | number:'1.3-3' }} Ton</strong></td>\\r\\n                  <td class=\\\"bg-dark text-white text-center\\\" [ngClass]=\\\"classComparativo(totaisDBA.ritmo)\\\"><strong>{{ totaisDBA.ritmo | number:'1.0-0' }} Ton</strong></td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n            <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"py-3\\\" *ngIf=\\\"listagemDBAEmpty\\\"></empty-result>\\r\\n        </tab>\\r\\n      </tabset>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n<ng-template #detalhes>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">{{ detalhesTitulo }}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onModalClose()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <custom-table *ngIf=\\\"detalhesClasseLoaded && !detalhesClasseEmpty\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th class=\\\"text-center\\\" rowspan=\\\"2\\\" scope=\\\"col\\\">Classe</th>\\r\\n          <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">{{ dtPesquisa }}</th>\\r\\n          <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">{{ mesAtual }}</th>\\r\\n          <th class=\\\"text-center\\\" colspan=\\\"2\\\" scope=\\\"col\\\">Ritmo</th>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <!-- Dia Atual -->\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\r\\n          <!-- Mes Atual -->\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\r\\n          <!-- Ritmo -->\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Ton</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">R$</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of detalhesClasse\\\">\\r\\n          <td class=\\\"text-center\\\">{{ item.classe }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.toneladaHoje | number:'1.0-0' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.valorHoje | number:'1.0-0' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.toneladaMesAtual | number:'1.0-0' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.valorMesAtual | number:'1.0-0' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.toneladaRitmo | number:'1.0-0' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.valorRitmo | number:'1.0-0' }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>Total</strong></td>\\r\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ detalhesTotais.toneladaHoje | number:'1.0-0' }}</strong></td>\\r\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ detalhesTotais.valorHoje | number:'1.0-0' }}</strong></td>\\r\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ detalhesTotais.toneladaMesAtual | number:'1.0-0' }}</strong></td>\\r\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ detalhesTotais.valorMesAtual | number:'1.0-0' }}</strong></td>\\r\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ detalhesTotais.toneladaRitmo | number:'1.0-0' }}</strong></td>\\r\\n          <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ detalhesTotais.valorRitmo | number:'1.0-0' }}</strong></td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"detalhesClasseEmpty\\\"></empty-result>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormBuilder,\r\n  Validators,\r\n  FormGroup,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ComercialRelatoriosPosicaoDiariaService } from './posicao-diaria.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-relatorios-posicao-diaria',\r\n  templateUrl: './posicao-diaria.component.html',\r\n  styleUrls: ['./posicao-diaria.component.scss'],\r\n})\r\nexport class ComercialRelatoriosPosicaoDiariaComponent implements OnInit {\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n    small: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  matriculaUser = this.currentUser.info.matricula;\r\n\r\n  dtPesquisa: string;\r\n  mesAtual: string;\r\n  adminProfile = false;\r\n  acessoDBAs = false;\r\n\r\n  listagem: any = [];\r\n  listagemLoaded = false;\r\n  listagemEmpty = false;\r\n  tooltipRitmo: any = {};\r\n  totalGeral: any = {};\r\n\r\n  listagemDBA: any = [];\r\n  totaisDBA: any = [];\r\n  listagemDBALoaded: boolean;\r\n  listagemDBAEmpty: boolean;\r\n\r\n  detalhesClasseEmpty = false;\r\n  detalhesClasseLoaded = false;\r\n  linha: number;\r\n\r\n  detalhesTitulo: string;\r\n  detalhesClasse: any = [];\r\n  detalhesTotais: any = {};\r\n\r\n  listagemExport: any = [];\r\n\r\n  formEdit: any = {\r\n    toneladaEditado: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    valorEditado: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    toneladaMeta: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    valorMeta: [0, 0, 0, 0, 0, 0, 0, 0],\r\n  };\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private dateService: DateService,\r\n    private modalService: BsModalService,\r\n    private pnotifyService: PNotifyService,\r\n    private localeService: BsLocaleService,\r\n    private xlsxService: XlsxService,\r\n    private posicaoDiariaService: ComercialRelatoriosPosicaoDiariaService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getPerfil();\r\n    this.titleService.setTitle('Posição diária');\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Relatórios',\r\n          routerLink: `/comercial/relatorios/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Posição diária',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getPerfil() {\r\n    this.posicaoDiariaService\r\n      .getPerfis()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n          this.setFormFilter();\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.success === true) {\r\n            this.adminProfile = response.data.acessoAdmin;\r\n            this.acessoDBAs = response.data.acessoDBAs;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormFilter() {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      data: [formValue.data, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      data: new Date(),\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams.q);\r\n          params = JSON.parse(params);\r\n\r\n          this.search(params);\r\n          this.onLoadRitmoDBA(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (formKey === 'data') {\r\n                  formValue[formKey] = this.dateService.convertStringToDate(\r\n                    params[paramKey],\r\n                    'pt-br'\r\n                  );\r\n                } else {\r\n                  if (!isNaN(Number(params[paramKey]))) {\r\n                    formValue[formKey] = Number(params[paramKey]);\r\n                  } else {\r\n                    formValue[formKey] = params[paramKey];\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          const params = {\r\n            data: this.dateService.convertToUrlDate(new Date(formValue.data)),\r\n          };\r\n\r\n          this.search(params);\r\n          this.onLoadRitmoDBA(params);\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  onFilter() {\r\n    if (this.form.valid) {\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    params.data = this.dateService.convertToUrlDate(\r\n      new Date(this.form.value.data)\r\n    );\r\n\r\n    return params;\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n    this.onLoadRitmoDBA(params);\r\n  }\r\n\r\n  search(params: any) {\r\n    this.loaderNavbar = true;\r\n    this.listagemEmpty = false;\r\n    this.listagemLoaded = false;\r\n\r\n    this.posicaoDiariaService\r\n      .getListaManetoni(params.data)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.listagemLoaded = true;\r\n          this.setDateFormValues();\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.success === true) {\r\n            if (response.data.analitico && response.data.analitico.length > 0) {\r\n              this.listagem = response.data.analitico;\r\n              this.listagemExport = response.data;\r\n\r\n              this.formEdit = {\r\n                toneladaEditado: [],\r\n                valorEditado: [],\r\n                toneladaMeta: [],\r\n                valorMeta: [],\r\n              };\r\n\r\n              for (let i = 0; i < this.listagem.length; i++) {\r\n                if (this.listagem[i].linha != 'TOTAL LONGOS') {\r\n                  this.formEdit.toneladaEditado[i] = this.listagem[i][\r\n                    'toneladaEditado'\r\n                  ];\r\n                  this.formEdit.valorEditado[i] = this.listagem[i][\r\n                    'valorEditado'\r\n                  ];\r\n                  this.formEdit.toneladaMeta[i] = this.listagem[i][\r\n                    'toneladaMeta'\r\n                  ];\r\n                  this.formEdit.valorMeta[i] = this.listagem[i].valorMeta;\r\n                }\r\n              }\r\n\r\n              this.tooltipRitmo = `Dias úteis até hoje: ${response.data.dias.ateHoje}. Dias úteis no mês: ${response.data.dias.uteisMes}`;\r\n              this.tooltipRitmo = `<p class=\"mb-0\">Dias úteis até hoje: ${response.data.dias.ateHoje}.</p><p class=\"mb-0\">Dias úteis no mês: ${response.data.dias.uteisMes}.</p>`;\r\n              this.totalGeral = response.data.total;\r\n            } else {\r\n              this.listagemEmpty = true;\r\n            }\r\n          } else {\r\n            this.listagemEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.listagemEmpty = true;\r\n          this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  onExibir(podeEditar: number) {\r\n    return podeEditar === 1 ? true : false;\r\n  }\r\n\r\n  onLoadRitmoDBA(params: any) {\r\n    if (this.acessoDBAs === true) {\r\n      this.listagemDBALoaded = false;\r\n      this.listagemDBAEmpty = false;\r\n\r\n      this.posicaoDiariaService.getListaDBA(params.data).subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.success === true) {\r\n            this.listagemDBA = response.data.analitico;\r\n            this.totaisDBA = response.data.total;\r\n\r\n            this.listagemDBALoaded = true;\r\n          } else {\r\n            this.listagemDBAEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setDateFormValues(): void {\r\n    const dia =\r\n      this.form.value.data.getDate() < 10\r\n        ? `0${this.form.value.data.getDate()}`\r\n        : this.form.value.data.getDate();\r\n\r\n    const mes =\r\n      this.form.value.data.getMonth() + 1 < 10\r\n        ? `0${this.form.value.data.getMonth() + 1}`\r\n        : this.form.value.data.getMonth() + 1;\r\n\r\n    this.dtPesquisa = `${dia}/${mes}/${this.form.value['data'].getFullYear()}`;\r\n\r\n    this.mesAtual = `${this.dateService.getFullMonth(\r\n      this.form.value.data\r\n    )}/${this.form.value.data.getFullYear()}`;\r\n  }\r\n\r\n  onDetalhesFilter(detalhes: TemplateRef<any>, linha: string, ordem: number) {\r\n    this.loaderNavbar = true;\r\n    this.detalhesClasseLoaded = false;\r\n    this.detalhesClasseEmpty = false;\r\n    this.linha = ordem - 1;\r\n\r\n    this.posicaoDiariaService\r\n      .getDetalhesManetoni({\r\n        data: this.dateService.convertToUrlDate(new Date(this.form.value.data)),\r\n        ordem: ordem,\r\n      })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.success === true) {\r\n            if (response.data.analitico && response.data.analitico.length > 0) {\r\n              this.detalhesTitulo = linha;\r\n              this.detalhesClasse = response.data.analitico;\r\n              this.detalhesTotais = response.data.total;\r\n              this.detalhesClasseLoaded = true;\r\n\r\n              setTimeout(() => {\r\n                this.openModal(detalhes);\r\n              }, 500);\r\n            } else {\r\n              this.detalhesClasseEmpty = true;\r\n            }\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  openModal(detalhes: TemplateRef<any>) {\r\n    console.log(detalhes);\r\n    this.modalRef = this.modalService.show(\r\n      detalhes,\r\n      Object.assign(\r\n        {\r\n          ignoreBackdropClick: true,\r\n        },\r\n        { class: 'modal-lg' }\r\n      )\r\n    );\r\n  }\r\n\r\n  onModalClose() {\r\n    this.modalRef.hide();\r\n    this.linha = -1;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loaderNavbar = true;\r\n\r\n    let i: number = 0,\r\n      formObj: any = [];\r\n\r\n    while (i < 9) {\r\n      if (i != 6 && i != 8) {\r\n        formObj.push({\r\n          toneladaEditado: this.formEdit.toneladaEditado[i],\r\n          valorEditado: this.formEdit.valorEditado[i],\r\n          toneladaMeta: this.formEdit.toneladaMeta[i],\r\n          valorMeta: this.formEdit.valorMeta[i],\r\n        });\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    let params: any = {\r\n      dados: formObj,\r\n      periodo: this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.data)\r\n      ),\r\n    };\r\n\r\n    if (params.dados.length > 0) {\r\n      this.posicaoDiariaService\r\n        .postRitmoEditado(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderNavbar = false;\r\n            this.setFormFilter();\r\n          })\r\n        )\r\n        .subscribe(\r\n          (reponse: JsonResponse) => {\r\n            if (reponse.success === true) {\r\n              this.pnotifyService.success('Dados salvos com sucesso.');\r\n            } else {\r\n              this.pnotifyService.notice(\r\n                'Dados não foram salvos, favor tentar novamente.'\r\n              );\r\n            }\r\n          },\r\n          (error: any) => {\r\n            this.pnotifyService.notice(\r\n              'Dados não foram salvos, favor tentar novamente.'\r\n            );\r\n          }\r\n        );\r\n    } else {\r\n      this.pnotifyService.notice('Favor verificar dados.');\r\n    }\r\n  }\r\n\r\n  onExport() {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let dados: any = [],\r\n      listagemExport: any = [];\r\n\r\n    dados = this.listagem.concat(this.totalGeral);\r\n\r\n    dados.forEach((item, key) => {\r\n      listagemExport[key] = {\r\n        Linha: item.linha,\r\n        ToneladaHoje: item.toneladaHoje,\r\n        ValorHoje: item.valorHoje,\r\n        ToneladaMesAtual: item.toneladaMesAtual,\r\n        ValorMesAtual: item.valorMesAtual,\r\n        ToneladaRitmo: item.toneladaRitmo,\r\n        ValorRitmo: item.valorRitmo,\r\n        ToneladaEditado: item.toneladaEditado,\r\n        ValorEditado: item.valorEditado,\r\n        ToneladaMeta: item.toneladaMeta,\r\n        ValorMeta: item.valorMeta,\r\n        ToneladaMetaEditado: item.toneladaMetaEditado,\r\n        ValorMetaEditado: item.valorMetaEditado,\r\n      };\r\n    });\r\n\r\n    this.xlsxService.exportFile(listagemExport, `PosicaoDiaria_${dataExport}`);\r\n  }\r\n\r\n  classComparativo(value: number) {\r\n    let textClass = '';\r\n\r\n    if (value > 0) {\r\n      textClass = 'text-success';\r\n    } else if (value < 0) {\r\n      textClass = 'text-danger';\r\n    }\r\n\r\n    return textClass;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string): string {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Components\r\nimport { ComercialRelatoriosPosicaoDiariaComponent } from './posicao-diaria.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ComercialRelatoriosPosicaoDiariaComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialRelatoriosPosicaoDiariaRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localePt from '@angular/common/locales/pt';\r\n\r\nregisterLocaleData(localePt, 'pt-BR');\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// Modules\r\nimport { ComercialRelatoriosPosicaoDiariaRoutingModule } from './posicao-diaria-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialRelatoriosPosicaoDiariaComponent } from './posicao-diaria.component';\r\n\r\n@NgModule({\r\n  declarations: [ComercialRelatoriosPosicaoDiariaComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    CurrencyMaskModule,\r\n    ComercialRelatoriosPosicaoDiariaRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule\r\n  ]\r\n})\r\nexport class ComercialRelatoriosPosicaoDiariaModule {}\r\n"]}