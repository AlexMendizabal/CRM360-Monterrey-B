{"version":3,"sources":["webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/formulario/formulario.component.html","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/formulario/formulario-resolver.guard.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/vendedores.service.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/vendedores.module.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/lista/lista.component.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/vendedores-routing.module.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/lista/lista.component.scss","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/lista/lista.component.html"],"names":["ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard","vendedoresService","route","responseCode","result","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialIntegracoesArcelorMittalVendedoresService","http","API","params","httpParams","param","append","get","pipe","idArcelorMittal","data","put","ComercialIntegracoesArcelorMittalVendedoresModule","declarations","imports","providers","ComercialIntegracoesArcelorMittalVendedoresFormularioComponent","activatedRoute","router","formBuilder","location","pnotifyService","confirmModalService","comercialService","loaderFullScreen","loadingNavBar","formChanged","submittingForm","breadCrumbTree","vendedores","escritorios","getPNotify","setBreadCrumb","getFormFields","setFormBuilder","subscribe","descricao","routerLink","getVendedores","next","response","hasOwnProperty","success","handleGetFormFields","error","mensagem","getEscritorios","detalhes","snapshot","form","group","required","dsArcelorMittal","value","nomeArcelorMittal","disabled","vendManetoni","idManetoni","escritorio","idEscritorio","updateAssociacao","reset","navigateTo","navigate","relativeTo","back","confirm","selector","template","ComercialService","ComercialIntegracoesArcelorMittalVendedoresListaComponent","atividadesService","titleService","detailPanelService","loaderNavbar","subtitles","id","text","color","tableConfig","subtitleBorder","tableConfigVendedores","hover","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","registrarAcesso","setFormFilter","setTitle","onDetailPanelEmitter","setVendedorSelecionado","unshift","nome","showDetailPanelSubscription","config","event","showing","formValue","checkRouterParams","codVendArcelor","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","vendedorSelecionado","nomeManetoni","associado","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","q","btoa","stringify","hide","getLista","slice","vendedor","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","setTimeout","loadedFinished","FormDeactivateGuard","component","state","formCanDeactivate","routes","path","resolve","canDeactivate","redirectTo","pathMatch","ComercialIntegracoesArcelorMittalVendedoresRoutingModule","forChild","exports"],"mappings":"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","file":"vendedores-vendedores-module-es5.js","sourcesContent":["export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Cadastro de Vendedor\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    *ngIf=\\\"form\\\"\\n    type=\\\"button\\\"\\n    (click)=\\\"onSave()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" >\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <form *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"dsArcelorMittal\\\">Vendedor (Arcelor Mittal)</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"dsArcelorMittal\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"vendManetoni\\\">Vendedor (Manetoni)</label>\\n            <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"vendedores\\\"\\n                formControlName=\\\"vendManetoni\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"vendManetoni\\\"\\n                bindLabel=\\\"nome\\\"\\n                bindValue=\\\"id\\\">\\n              </ng-select>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"escritorio\\\">Escritórios</label>\\n            <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"escritorios\\\"\\n                formControlName=\\\"escritorio\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"escritorio\\\"\\n                bindLabel=\\\"nome\\\"\\n                bindValue=\\\"id\\\">\\n              </ng-select>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialIntegracoesArcelorMittalVendedoresService } from '../vendedores.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private vendedoresService: ComercialIntegracoesArcelorMittalVendedoresService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    // console.log(route);\n    // if (route.params && route.params['id']) {\n    //   return this.vendedoresService.getAssociacoes(route.params['id']);\n    // }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      responseCode: 200,\n      result: [],\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IVendedor } from './models/vendedor';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialIntegracoesArcelorMittalVendedoresService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/integracoes/arcelor-mittal/vendedores`;\n\n  constructor(protected http: HttpClient) {}\n\n  /* getLista() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1));\n  } */\n\n  getLista(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getAssociacoes(idArcelorMittal: string) {\n    return this.http\n      .get(`${this.API}/associacoes/${idArcelorMittal}`)\n      .pipe(take(1));\n  }\n\n  getVendedores() {\n    return this.http.get(`${this.API}/vendedores`).pipe(take(1));\n  }\n\n  updateAssociacao(data: any) {\n    return this.http.put(`${this.API}/salvar`, data).pipe(take(1));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialIntegracoesArcelorMittalVendedoresRoutingModule } from './vendedores-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialIntegracoesArcelorMittalVendedoresListaComponent } from './lista/lista.component';\nimport { ComercialIntegracoesArcelorMittalVendedoresFormularioComponent } from './formulario/formulario.component';\n\n// Services\nimport { ComercialIntegracoesArcelorMittalVendedoresService } from './vendedores.service';\n\n@NgModule({\n  declarations: [\n    ComercialIntegracoesArcelorMittalVendedoresListaComponent,\n    ComercialIntegracoesArcelorMittalVendedoresFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule,\n    TooltipModule,\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialIntegracoesArcelorMittalVendedoresRoutingModule,\n    SharedModule,\n    TemplatesModule,\n  ],\n  providers: [\n    PNotifyService,\n    ComercialIntegracoesArcelorMittalVendedoresService,\n  ],\n})\nexport class ComercialIntegracoesArcelorMittalVendedoresModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { finalize } from 'rxjs/operators';\n\n// Services\nimport { ComercialIntegracoesArcelorMittalVendedoresService } from './../vendedores.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { ComercialService } from '../../../../comercial.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-integracoes-arcelor-mittal-vendedores-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialIntegracoesArcelorMittalVendedoresFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderFullScreen = true;\n  loadingNavBar = false;\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  vendedores: any = [];\n  escritorios: Array<any> = [];\n\n  constructor(\n    private vendedoresService: ComercialIntegracoesArcelorMittalVendedoresService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private location: Location,\n    private pnotifyService: PNotifyService,\n    private confirmModalService: ConfirmModalService,\n    private comercialService: ComercialService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.setBreadCrumb();\n    this.getFormFields();\n    this.setFormBuilder();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Integração com Arcelor Mittal',\n          routerLink: `/comercial/integracoes/arcelor-mittal/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Vendedores',\n          routerLink: `/comercial/integracoes/arcelor-mittal/${params['idSubModulo']}/vendedores`,\n        },\n        {\n          descricao: 'Cadastro',\n        },\n      ];\n    });\n  }\n\n  getFormFields(): void {\n    this.vendedoresService\n      .getVendedores()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.vendedores = response.data;\n          } else {\n            this.handleGetFormFields();\n          }\n        },\n        error: (error: any) => {\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.handleGetFormFields();\n          }\n        }\n      });\n\n    this.comercialService\n      .getEscritorios()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response['responseCode'] === 200) {\n            this.escritorios = response['result'];\n          } else {\n            this.handleGetFormFields();\n          }\n        },\n        error: (error: any) => {\n          this.handleGetFormFields();\n        }\n      });\n  }\n\n  handleGetFormFields(): void {\n    this.pnotifyService.error();\n    //this.location.back();\n  }\n\n  setFormBuilder(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      const detalhes = this.activatedRoute.snapshot.data;\n      \n      this.form = this.formBuilder.group({\n        idArcelorMittal: [detalhes.idArcelorMittal, Validators.required],\n        dsArcelorMittal: [\n          {\n            value: detalhes.nomeArcelorMittal,\n            disabled: true,\n          },\n        ],\n        vendManetoni: [detalhes.idManetoni],\n        escritorio: [detalhes.idEscritorio],\n      });\n    });\n  }\n\n  onSave() {\n    this.loadingNavBar = true;\n\n    this.vendedoresService\n      .updateAssociacao(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.form.reset();\n            this.formChanged = false;\n            this.pnotifyService.success(response.mensagem);\n\n            this.activatedRoute.params.subscribe((params: any) => {\n              let navigateTo: string;\n\n              if (params.hasOwnProperty('id')) {\n                navigateTo = '../../lista';\n              } else {\n                navigateTo = '../lista';\n              }\n\n              this.router.navigate([navigateTo], {\n                relativeTo: this.activatedRoute,\n              });\n            });\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.pnotifyService.error(response.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialIntegracoesArcelorMittalVendedoresService } from '../vendedores.service';\nimport { ComercialService } from '../../../../comercial.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { IVendedor } from '../models/vendedor';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-cross-sell-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialIntegracoesArcelorMittalVendedoresListaComponent\n  implements OnInit\n{\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Associado',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Não Associado',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigVendedores: Partial<CustomTableConfig> = {\n    hover: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  detailPanelTitle: string;\n\n  form: FormGroup;\n  orderBy = 'idArcelorMittal';\n  orderType = 'ASC';\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<IVendedor> = [];\n  dadosPagination: Array<IVendedor> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  vendedorSelecionado: IVendedor;\n  vendedores: Array<any> = [];\n  escritorios: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private vendedoresService: ComercialIntegracoesArcelorMittalVendedoresService,\n    private comercialService: ComercialService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Vendedores');\n    this.getEscritorios();\n    this.onDetailPanelEmitter();\n    this.setVendedorSelecionado();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Integração com Arcelor Mittal',\n          routerLink: `/comercial/integracoes/arcelor-mittal/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Vendedores',\n        },\n      ];\n    });\n  }\n\n  getEscritorios(): void {\n    this.loaderNavbar = true;\n    this.comercialService\n      .getEscritorios()\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response['responseCode'] == 200) {\n            this.escritorios = response['result'];\n            this.escritorios.unshift({\n              id: 0,\n              nome: 'EXIBIR TODOS',\n            });\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      vendManetoni: [formValue.vendManetoni],\n      codVendArcelor: [formValue.codVendArcelor],\n      escritorio: [formValue.escritorio],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      vendManetoni: null,\n      codVendArcelor: null,\n      escritorio: 0,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setVendedorSelecionado(): void {\n    this.vendedorSelecionado = {\n      idArcelorMittal: null,\n      nomeArcelorMittal: null,\n      idManetoni: null,\n      nomeManetoni: null,\n      associado: null,\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.vendManetoni) {\n      params.vendManetoni = this.form.value.vendManetoni;\n    }\n\n    if (this.form.value.codVendArcelor) {\n      params.codVendArcelor = this.form.value.codVendArcelor;\n    }\n\n    if (this.form.value.escritorio) {\n      params.escritorio = this.form.value.escritorio;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n    params.registros = this.form.value.registros;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.vendedoresService\n      .getLista(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(vendedor: IVendedor): string {\n    let borderClass: string;\n\n    if (vendedor.associado === 1) {\n      borderClass = 'border-success';\n    } else if (vendedor.associado === 0) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  onDetails(vendedor: IVendedor): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.detailPanelTitle = `Associação (${vendedor.nomeArcelorMittal})`;\n    this.vendedorSelecionado = vendedor;\n\n    if (vendedor.idManetoni != null) {\n      this.setVendedorSelecionado;\n      this.vendedores[0] = this.vendedorSelecionado;\n\n      setTimeout(() => {\n        this.loaderNavbar = false;\n        this.detailPanelService.loadedFinished(false);\n      }, 700);\n    } else {\n      setTimeout(() => {\n        this.loaderNavbar = false;\n        this.detailPanelService.loadedFinished(true);\n      }, 700);\n    }\n  }\n\n  onEdit(vendedor: IVendedor): void {\n    this.router.navigate(['../editar', vendedor.nomeArcelorMittal], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  /* onActivate(index: number, crossSell: ICrossSell): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateGrupo(index, crossSell) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(crossSell);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  } */\n\n  /* confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateGrupo(index: number, crossSell: ICrossSell): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.materiaisCrossSellService.ac(\n      crossSell.codSimilaridade\n    );\n  } */\n\n  /* onInactivate(index: number, crossSell: ICrossSell): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateGrupo(index, similaridade) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(similaridade);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  } */\n\n  /* confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  } */\n\n  /* inactivateGrupo(index: number, similaridade: ISimilaridade): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 0;\n\n    return this.materiaisSimilaridadeService.inactivateGrupo(\n      similaridade.codSimilaridade\n    );\n  } */\n\n  /* refreshMainData(similaridade: ICrossSell): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (similaridade.codSimilaridade === this.dados[i].codSimilaridade) {\n        this.dados[i].codSituacao = similaridade.codSituacao;\n        return;\n      }\n    }\n  } */\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialIntegracoesArcelorMittalVendedoresListaComponent } from './lista/lista.component';\nimport { ComercialIntegracoesArcelorMittalVendedoresFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialIntegracoesArcelorMittalVendedoresListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialIntegracoesArcelorMittalVendedoresFormularioComponent,\n    resolve: {\n      detalhes: ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialIntegracoesArcelorMittalVendedoresFormularioComponent,\n    resolve: {\n      detalhes: ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialIntegracoesArcelorMittalVendedoresRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2FyY2Vsb3ItbWl0dGFsL3ZlbmRlZG9yZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2FyY2Vsb3ItbWl0dGFsL3ZlbmRlZG9yZXMvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Vendedores\\\">\\n  <!-- <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button> -->\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label for=\\\"vendManetoni\\\">\\n                <span class=\\\"mr-1\\\">Vendedor Manetoni</span>\\n                <ng-template #tooltipLabelVendManetoniTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou Nome</p>\\n                  <p class=\\\"text-nowrap mb-0\\\">do Vendedor</p>\\n                  <p class=\\\"text-nowrap mb-0\\\">Manetoni</p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelVendManetoniTemplate\\\" container=\\\"body\\\"></i>\\n              </label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"vendManetoni\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label for=\\\"codVendArcelor\\\">\\n                <span class=\\\"mr-1\\\">Vendedor Arcelor</span>\\n                <ng-template #tooltipLabelVendArcelorTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Código do</p>\\n                  <p class=\\\"text-nowrap mb-0\\\">Vendedor Arcelor</p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelVendArcelorTemplate\\\" container=\\\"body\\\"></i>\\n              </label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"codVendArcelor\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3 mb-2 mb-md-0\\\">\\n              <label for=\\\"escritorio\\\">Escritórios</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"escritorios\\\"\\n                formControlName=\\\"escritorio\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"escritorio\\\"\\n                bindLabel=\\\"nome\\\"\\n                bindValue=\\\"id\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Vendedor (Arcelor Mittal) \\\"\\n                [active]=\\\"orderBy == 'idArcelorMittal'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('idArcelorMittal')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Vendedor Manetoni\\\"\\n                [active]=\\\"orderBy == 'idManetoni'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('idManetoni')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Escritório</th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let vendedor of dadosPagination; let i = index;\\\" [class.table-active]=\\\"vendedor.idArcelorMittal == vendedorSelecionado.idArcelorMittal && showDetailPanel\\\">\\n            <td\\n              class=\\\"hover\\\"\\n              [ngClass]=\\\"classStatusBorder(vendedor)\\\"\\n              (click)=\\\"onDetails(vendedor)\\\">\\n              {{ vendedor.nomeArcelorMittal }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(vendedor)\\\">\\n              <span *ngIf=\\\"vendedor.nomeManetoni === null\\\">NÃO INFORMADO</span>\\n              <span *ngIf=\\\"vendedor.nomeManetoni !== null\\\">\\n                {{ vendedor.nomeManetoni | uppercase }}\\n              </span>\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(vendedor)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"vendedor.nomeEscritorio === null\\\">NÃO INFORMADO</span>\\n              <span *ngIf=\\\"vendedor.nomeEscritorio !== null\\\">\\n                {{ vendedor.nomeEscritorio | uppercase }}\\n              </span>\\n            </td>\\n            <td class=\\\"text-right\\\">\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(vendedor)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && !dadosLoaded\\\"></empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\n        <custom-table [config]=\\\"tableConfigVendedores\\\" *ngIf=\\\"vendedores.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\n              <th scope=\\\"col\\\">Vendedor</th>\\n              <th scope=\\\"col\\\">Escritório</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let vendedor of vendedores\\\">\\n              <td class=\\\"text-center\\\">{{ vendedor.idManetoni }}</td>\\n              <td>{{ vendedor.nomeManetoni | uppercase }}</td>\\n              <td>\\n                <span *ngIf=\\\"vendedor.nomeEscritorio === null\\\">NÃO INFORMADO</span>\\n                <span *ngIf=\\\"vendedor.nomeEscritorio != null\\\">\\n                  {{ vendedor.nomeEscritorio | uppercase }}\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";"]}