{"version":3,"sources":["webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/formulario/formulario.component.html","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/formulario/formulario-resolver.guard.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/vendedores.service.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/vendedores.module.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/lista/lista.component.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/vendedores-routing.module.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/lista/lista.component.scss","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/lista/lista.component.html"],"names":["ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard","vendedoresService","route","responseCode","result","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialIntegracoesArcelorMittalVendedoresService","http","API","params","httpParams","param","append","get","pipe","idArcelorMittal","data","put","ComercialIntegracoesArcelorMittalVendedoresModule","declarations","imports","providers","ComercialIntegracoesArcelorMittalVendedoresFormularioComponent","activatedRoute","router","formBuilder","location","pnotifyService","confirmModalService","comercialService","loaderFullScreen","loadingNavBar","formChanged","submittingForm","breadCrumbTree","vendedores","escritorios","getPNotify","setBreadCrumb","getFormFields","setFormBuilder","subscribe","descricao","routerLink","getVendedores","next","response","hasOwnProperty","success","handleGetFormFields","error","mensagem","getEscritorios","detalhes","snapshot","form","group","required","dsArcelorMittal","value","nomeArcelorMittal","disabled","vendManetoni","idManetoni","escritorio","idEscritorio","updateAssociacao","reset","navigateTo","navigate","relativeTo","back","confirm","selector","template","ComercialService","id","codCliente","ComercialIntegracoesArcelorMittalVendedoresListaComponent","atividadesService","titleService","detailPanelService","loaderNavbar","subtitles","text","color","tableConfig","subtitleBorder","tableConfigVendedores","hover","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","registrarAcesso","setFormFilter","setTitle","onDetailPanelEmitter","setVendedorSelecionado","unshift","nome","showDetailPanelSubscription","config","event","showing","formValue","checkRouterParams","codVendArcelor","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","vendedorSelecionado","nomeManetoni","associado","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","q","btoa","stringify","hide","getLista","slice","vendedor","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","setTimeout","loadedFinished","FormDeactivateGuard","component","state","formCanDeactivate","routes","path","resolve","canDeactivate","redirectTo","pathMatch","ComercialIntegracoesArcelorMittalVendedoresRoutingModule","forChild","exports"],"mappings":"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","file":"vendedores-vendedores-module-es5.js","sourcesContent":["export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Cadastro de Vendedor\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    *ngIf=\\\"form\\\"\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSave()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" >\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <form *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"dsArcelorMittal\\\">Vendedor (Arcelor Mittal)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"dsArcelorMittal\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"vendManetoni\\\">Vendedor (Manetoni)</label>\\r\\n            <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"vendedores\\\"\\r\\n                formControlName=\\\"vendManetoni\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"vendManetoni\\\"\\r\\n                bindLabel=\\\"nome\\\"\\r\\n                bindValue=\\\"id\\\">\\r\\n              </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"escritorio\\\">Escritórios</label>\\r\\n            <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"escritorios\\\"\\r\\n                formControlName=\\\"escritorio\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"escritorio\\\"\\r\\n                bindLabel=\\\"nome\\\"\\r\\n                bindValue=\\\"id\\\">\\r\\n              </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialIntegracoesArcelorMittalVendedoresService } from '../vendedores.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private vendedoresService: ComercialIntegracoesArcelorMittalVendedoresService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    // console.log(route);\r\n    // if (route.params && route.params['id']) {\r\n    //   return this.vendedoresService.getAssociacoes(route.params['id']);\r\n    // }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      responseCode: 200,\r\n      result: [],\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IVendedor } from './models/vendedor';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialIntegracoesArcelorMittalVendedoresService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/integracoes/arcelor-mittal/vendedores`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  /* getLista() {\r\n    return this.http.get(`${this.API}/lista`).pipe(take(1));\r\n  } */\r\n\r\n  getLista(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAssociacoes(idArcelorMittal: string) {\r\n    return this.http\r\n      .get(`${this.API}/associacoes/${idArcelorMittal}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getVendedores() {\r\n    return this.http.get(`${this.API}/vendedores`).pipe(take(1));\r\n  }\r\n\r\n  updateAssociacao(data: any) {\r\n    return this.http.put(`${this.API}/salvar`, data).pipe(take(1));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialIntegracoesArcelorMittalVendedoresRoutingModule } from './vendedores-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialIntegracoesArcelorMittalVendedoresListaComponent } from './lista/lista.component';\r\nimport { ComercialIntegracoesArcelorMittalVendedoresFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialIntegracoesArcelorMittalVendedoresService } from './vendedores.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialIntegracoesArcelorMittalVendedoresListaComponent,\r\n    ComercialIntegracoesArcelorMittalVendedoresFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule,\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialIntegracoesArcelorMittalVendedoresRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n  ],\r\n  providers: [\r\n    PNotifyService,\r\n    ComercialIntegracoesArcelorMittalVendedoresService,\r\n  ],\r\n})\r\nexport class ComercialIntegracoesArcelorMittalVendedoresModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Services\r\nimport { ComercialIntegracoesArcelorMittalVendedoresService } from './../vendedores.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { ComercialService } from '../../../../comercial.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-integracoes-arcelor-mittal-vendedores-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialIntegracoesArcelorMittalVendedoresFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderFullScreen = true;\r\n  loadingNavBar = false;\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  vendedores: any = [];\r\n  escritorios: Array<any> = [];\r\n\r\n  constructor(\r\n    private vendedoresService: ComercialIntegracoesArcelorMittalVendedoresService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private location: Location,\r\n    private pnotifyService: PNotifyService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getFormFields();\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Integração com Arcelor Mittal',\r\n          routerLink: `/comercial/integracoes/arcelor-mittal/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Vendedores',\r\n          routerLink: `/comercial/integracoes/arcelor-mittal/${params['idSubModulo']}/vendedores`,\r\n        },\r\n        {\r\n          descricao: 'Cadastro',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFormFields(): void {\r\n    this.vendedoresService\r\n      .getVendedores()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.vendedores = response.data;\r\n          } else {\r\n            this.handleGetFormFields();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.handleGetFormFields();\r\n          }\r\n        }\r\n      });\r\n\r\n    this.comercialService\r\n      .getEscritorios()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response['responseCode'] === 200) {\r\n            this.escritorios = response['result'];\r\n          } else {\r\n            this.handleGetFormFields();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.handleGetFormFields();\r\n        }\r\n      });\r\n  }\r\n\r\n  handleGetFormFields(): void {\r\n    this.pnotifyService.error();\r\n    //this.location.back();\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      const detalhes = this.activatedRoute.snapshot.data;\r\n      \r\n      this.form = this.formBuilder.group({\r\n        idArcelorMittal: [detalhes.idArcelorMittal, Validators.required],\r\n        dsArcelorMittal: [\r\n          {\r\n            value: detalhes.nomeArcelorMittal,\r\n            disabled: true,\r\n          },\r\n        ],\r\n        vendManetoni: [detalhes.idManetoni],\r\n        escritorio: [detalhes.idEscritorio],\r\n      });\r\n    });\r\n  }\r\n\r\n  onSave() {\r\n    this.loadingNavBar = true;\r\n\r\n    this.vendedoresService\r\n      .updateAssociacao(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.form.reset();\r\n            this.formChanged = false;\r\n            this.pnotifyService.success(response.mensagem);\r\n\r\n            this.activatedRoute.params.subscribe((params: any) => {\r\n              let navigateTo: string;\r\n\r\n              if (params.hasOwnProperty('id')) {\r\n                navigateTo = '../../lista';\r\n              } else {\r\n                navigateTo = '../lista';\r\n              }\r\n\r\n              this.router.navigate([navigateTo], {\r\n                relativeTo: this.activatedRoute,\r\n              });\r\n            });\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.pnotifyService.error(response.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`,  {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getUpSellService(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_suplementarios`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos() {\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialIntegracoesArcelorMittalVendedoresService } from '../vendedores.service';\r\nimport { ComercialService } from '../../../../comercial.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { IVendedor } from '../models/vendedor';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-cross-sell-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialIntegracoesArcelorMittalVendedoresListaComponent\r\n  implements OnInit\r\n{\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Associado',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Não Associado',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigVendedores: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'idArcelorMittal';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<IVendedor> = [];\r\n  dadosPagination: Array<IVendedor> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  vendedorSelecionado: IVendedor;\r\n  vendedores: Array<any> = [];\r\n  escritorios: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private vendedoresService: ComercialIntegracoesArcelorMittalVendedoresService,\r\n    private comercialService: ComercialService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Vendedores');\r\n    this.getEscritorios();\r\n    this.onDetailPanelEmitter();\r\n    this.setVendedorSelecionado();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Integração com Arcelor Mittal',\r\n          routerLink: `/comercial/integracoes/arcelor-mittal/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Vendedores',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getEscritorios(): void {\r\n    this.loaderNavbar = true;\r\n    this.comercialService\r\n      .getEscritorios()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response['responseCode'] == 200) {\r\n            this.escritorios = response['result'];\r\n            this.escritorios.unshift({\r\n              id: 0,\r\n              nome: 'EXIBIR TODOS',\r\n            });\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      vendManetoni: [formValue.vendManetoni],\r\n      codVendArcelor: [formValue.codVendArcelor],\r\n      escritorio: [formValue.escritorio],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      vendManetoni: null,\r\n      codVendArcelor: null,\r\n      escritorio: 0,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setVendedorSelecionado(): void {\r\n    this.vendedorSelecionado = {\r\n      idArcelorMittal: null,\r\n      nomeArcelorMittal: null,\r\n      idManetoni: null,\r\n      nomeManetoni: null,\r\n      associado: null,\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.vendManetoni) {\r\n      params.vendManetoni = this.form.value.vendManetoni;\r\n    }\r\n\r\n    if (this.form.value.codVendArcelor) {\r\n      params.codVendArcelor = this.form.value.codVendArcelor;\r\n    }\r\n\r\n    if (this.form.value.escritorio) {\r\n      params.escritorio = this.form.value.escritorio;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n    params.registros = this.form.value.registros;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.vendedoresService\r\n      .getLista(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(vendedor: IVendedor): string {\r\n    let borderClass: string;\r\n\r\n    if (vendedor.associado === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (vendedor.associado === 0) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(vendedor: IVendedor): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Associação (${vendedor.nomeArcelorMittal})`;\r\n    this.vendedorSelecionado = vendedor;\r\n\r\n    if (vendedor.idManetoni != null) {\r\n      this.setVendedorSelecionado;\r\n      this.vendedores[0] = this.vendedorSelecionado;\r\n\r\n      setTimeout(() => {\r\n        this.loaderNavbar = false;\r\n        this.detailPanelService.loadedFinished(false);\r\n      }, 700);\r\n    } else {\r\n      setTimeout(() => {\r\n        this.loaderNavbar = false;\r\n        this.detailPanelService.loadedFinished(true);\r\n      }, 700);\r\n    }\r\n  }\r\n\r\n  onEdit(vendedor: IVendedor): void {\r\n    this.router.navigate(['../editar', vendedor.nomeArcelorMittal], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  /* onActivate(index: number, crossSell: ICrossSell): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateGrupo(index, crossSell) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(crossSell);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  } */\r\n\r\n  /* confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateGrupo(index: number, crossSell: ICrossSell): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.materiaisCrossSellService.ac(\r\n      crossSell.codSimilaridade\r\n    );\r\n  } */\r\n\r\n  /* onInactivate(index: number, crossSell: ICrossSell): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateGrupo(index, similaridade) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(similaridade);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  } */\r\n\r\n  /* confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  } */\r\n\r\n  /* inactivateGrupo(index: number, similaridade: ISimilaridade): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 0;\r\n\r\n    return this.materiaisSimilaridadeService.inactivateGrupo(\r\n      similaridade.codSimilaridade\r\n    );\r\n  } */\r\n\r\n  /* refreshMainData(similaridade: ICrossSell): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (similaridade.codSimilaridade === this.dados[i].codSimilaridade) {\r\n        this.dados[i].codSituacao = similaridade.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  } */\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialIntegracoesArcelorMittalVendedoresListaComponent } from './lista/lista.component';\r\nimport { ComercialIntegracoesArcelorMittalVendedoresFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialIntegracoesArcelorMittalVendedoresListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialIntegracoesArcelorMittalVendedoresFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialIntegracoesArcelorMittalVendedoresFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialIntegracoesArcelorMittalVendedoresRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2FyY2Vsb3ItbWl0dGFsL3ZlbmRlZG9yZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2FyY2Vsb3ItbWl0dGFsL3ZlbmRlZG9yZXMvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Vendedores\\\">\\r\\n  <!-- <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button> -->\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label for=\\\"vendManetoni\\\">\\r\\n                <span class=\\\"mr-1\\\">Vendedor Manetoni</span>\\r\\n                <ng-template #tooltipLabelVendManetoniTemplate>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou Nome</p>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">do Vendedor</p>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Manetoni</p>\\r\\n                </ng-template>\\r\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelVendManetoniTemplate\\\" container=\\\"body\\\"></i>\\r\\n              </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"vendManetoni\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label for=\\\"codVendArcelor\\\">\\r\\n                <span class=\\\"mr-1\\\">Vendedor Arcelor</span>\\r\\n                <ng-template #tooltipLabelVendArcelorTemplate>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Código do</p>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Vendedor Arcelor</p>\\r\\n                </ng-template>\\r\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelVendArcelorTemplate\\\" container=\\\"body\\\"></i>\\r\\n              </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"codVendArcelor\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3 mb-2 mb-md-0\\\">\\r\\n              <label for=\\\"escritorio\\\">Escritórios</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"escritorios\\\"\\r\\n                formControlName=\\\"escritorio\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"escritorio\\\"\\r\\n                bindLabel=\\\"nome\\\"\\r\\n                bindValue=\\\"id\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Vendedor (Arcelor Mittal) \\\"\\r\\n                [active]=\\\"orderBy == 'idArcelorMittal'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('idArcelorMittal')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Vendedor Manetoni\\\"\\r\\n                [active]=\\\"orderBy == 'idManetoni'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('idManetoni')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Escritório</th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let vendedor of dadosPagination; let i = index;\\\" [class.table-active]=\\\"vendedor.idArcelorMittal == vendedorSelecionado.idArcelorMittal && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(vendedor)\\\"\\r\\n              (click)=\\\"onDetails(vendedor)\\\">\\r\\n              {{ vendedor.nomeArcelorMittal }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(vendedor)\\\">\\r\\n              <span *ngIf=\\\"vendedor.nomeManetoni === null\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"vendedor.nomeManetoni !== null\\\">\\r\\n                {{ vendedor.nomeManetoni | uppercase }}\\r\\n              </span>\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(vendedor)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"vendedor.nomeEscritorio === null\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"vendedor.nomeEscritorio !== null\\\">\\r\\n                {{ vendedor.nomeEscritorio | uppercase }}\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(vendedor)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && !dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table [config]=\\\"tableConfigVendedores\\\" *ngIf=\\\"vendedores.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n              <th scope=\\\"col\\\">Vendedor</th>\\r\\n              <th scope=\\\"col\\\">Escritório</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let vendedor of vendedores\\\">\\r\\n              <td class=\\\"text-center\\\">{{ vendedor.idManetoni }}</td>\\r\\n              <td>{{ vendedor.nomeManetoni | uppercase }}</td>\\r\\n              <td>\\r\\n                <span *ngIf=\\\"vendedor.nomeEscritorio === null\\\">NÃO INFORMADO</span>\\r\\n                <span *ngIf=\\\"vendedor.nomeEscritorio != null\\\">\\r\\n                  {{ vendedor.nomeEscritorio | uppercase }}\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";"]}