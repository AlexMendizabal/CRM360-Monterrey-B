{"version":3,"sources":["webpack:///src/app/modules/comercial/ciclo-vendas/cotacoes/formulario/formulario.service.ts","webpack:///src/app/modules/comercial/cadastros/situacao-proposta/situacao-proposta.service.ts","webpack:///src/app/modules/comercial/services/clientes.service.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/agenda/formulario/formulario.service.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/origem-contato.service.ts","webpack:///src/app/modules/comercial/cadastros/contato/formas-contato/formas-contato.service.ts","webpack:///src/app/modules/comercial/cadastros/transportadoras/transportadoras.service.ts","webpack:///src/app/modules/comercial/cadastros/formas-pagamento/formas-pagamento.service.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/titulos-agenda.service.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialCicloVendasCotacoesFormularioService","http","comercialService","vendedoresService","clientesService","tidService","transportadorasService","agendaService","situacoesService","formasPagamentoService","formasContatoService","origensContatoService","API","notifySubmit","notifySubmitObservable$","asObservable","materiaisSubject","limparCarrinhoSubject","calculoSubject","descontoSubject","loteSubject","codCliente","data","next","situacoes","getListaSituacaoProposta","empresas","getEmpresas","depositos","getDepositos","formasPagamento","getListaFormasPagamento","tipoConsulta","formasContato","getListaFormasContato","origensContato","getListaOrigemContato","transportadoras","getListaTransportadoras","carteiraClientes","carteiraClientesSubject","carteiraClientesLoaded","_carteiraClientes","value","getCarteiraClientes","termoPesquisa","pipe","getEnderecos","localEntrega","codCotacao","get","params","post","codAnexo","put","providedIn","ComercialCadastrosSituacaoPropostaService","httpParams","param","append","codSituacaoProposta","situacaoProposta","updateSituacaoProposta","saveSituacaoProposta","codigo","ComercialClientesService","id","documento","getDadosCliente","idEndereco","idSituacao","idContato","idSeqTid","idFilho","idAnexo","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialAgendaFormularioService","titulosAgendaService","clientes","vendedores","getVendedores","getFormasContato","getOrigensContato","motivosReagendamento","getMotivosReagendamento","listarTitulosAgenda","getListaTitulosAgenda","codSituacao","ComercialCadastrosContatoOrigemContatoService","codOrigemContato","record","updateOrigemContato","saveOrigemContato","ComercialCadastrosContatoFormasContatoService","codFormaContato","updateFormaContato","saveFormaContato","ComercialCadastrosTransportadoraService","transportadora","codTransportadoraTid","codTransportdora","ComercialCadastrosFormasPagamentoService","codFormaPagamento","formaPagamento","updateFormasPagamento","saveFormasPagamento","ComercialCadastrosTitulosAgendaService","codTitulo","titulosAgenda","updateTitulosAgenda","saveTitulosAgenda","ComercialTidSoftwareService","linhas","getLinhas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAQA;;;UAqBaA,6CAA6C;AAmBxD,+DACYC,IADZ,EAEUC,gBAFV,EAGUC,iBAHV,EAIUC,eAJV,EAKUC,UALV,EAMUC,sBANV,EAOUC,aAPV,EAQUC,gBARV,EASUC,sBATV,EAUUC,oBAVV,EAWUC,qBAXV,EAW8E;AAAA;;AAVlE,eAAAV,IAAA,GAAAA,IAAA;AACF,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAC,sBAAA,GAAAA,sBAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,sBAAA,GAAAA,sBAAA;AACA,eAAAC,oBAAA,GAAAA,oBAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AA7BO,eAAAC,GAAA;AAET,eAAAC,YAAA,GAAe,IAAI,4CAAJ,EAAf;AAER,eAAAC,uBAAA,GAA0B,KAAKD,YAAL,CAAkBE,YAAlB,EAA1B;AAEA,eAAAC,gBAAA,GAAwC,IAAI,4CAAJ,EAAxC;AACA,eAAAC,qBAAA,GAA0C,IAAI,4CAAJ,EAA1C;AACA,eAAAC,cAAA,GAAyC,IAAI,4CAAJ,EAAzC;AACA,eAAAC,eAAA,GAA2C,IAAI,4CAAJ,EAA3C;AACA,eAAAC,WAAA,GAAmC,IAAI,4CAAJ,EAAnC;AAMA,eAAAC,UAAA,GAAmC,IAAI,0DAAJ,EAAnC;AAcI;;AA/BoD;AAAA;AAAA,iBAiCjD,wBAAeC,IAAf,EAA8B;AACnC,iBAAKT,YAAL,CAAkBU,IAAlB,CAAuBD,IAAvB;AACD;AAnCuD;AAAA;AAAA,iBAqCxD,4BAAgB;AACd,gBAAME,SAAS,GAAG,KAAKhB,gBAAL,CAAsBiB,wBAAtB,CAA+C,IAA/C,CAAlB,CADc,CAEd;AACA;;AACA,gBAAMC,QAAQ,GAAG,KAAKrB,UAAL,CAAgBsB,WAAhB,CAA4B,QAA5B,CAAjB;AACA,gBAAMC,SAAS,GAAG,KAAK1B,gBAAL,CAAsB2B,YAAtB,CAAmC,IAAnC,CAAlB;AACA,gBAAMC,eAAe,GAAG,KAAKrB,sBAAL,CAA4BsB,uBAA5B,CACtB;AAAEC,0BAAY,EAAE;AAAhB,aADsB,CAAxB;AAGA,gBAAMC,aAAa,GAAG,KAAKvB,oBAAL,CAA0BwB,qBAA1B,CAAgD,IAAhD,CAAtB;AACA,gBAAMC,cAAc,GAAG,KAAKxB,qBAAL,CAA2ByB,qBAA3B,CACrB,IADqB,CAAvB;AAGA,gBAAMC,eAAe,GAAG,KAAK/B,sBAAL,CAA4BgC,uBAA5B,CACtB;AAAEN,0BAAY,EAAE;AAAhB,aADsB,CAAxB;AAIA,mBAAO,sDAAS,CACdR,SADc,EAEdE,QAFc,EAGdE,SAHc,EAIdE,eAJc,EAKdG,aALc,EAMdE,cANc,EAOdE,eAPc,CAAT,CAAP;AASD;AA/DuD;AAAA;AAAA,iBAiExD,gCAAuBE,gBAAvB,EAAmD;AACjD,iBAAKC,uBAAL,GAA+B,IAAI,oDAAJ,CAAyBD,gBAAzB,CAA/B;AACA,iBAAKA,gBAAL,GAAwB,KAAKC,uBAAL,CAA6BzB,YAA7B,EAAxB;AACA,iBAAKyB,uBAAL,CAA6BjB,IAA7B,CAAkCgB,gBAAlC;AACA,iBAAKE,sBAAL,GAA8B,IAA9B;AACD;AAtEuD;AAAA;AAAA,iBAwExD,sCAA0B;AACxB,gBAAIC,iBAAiB,GAAG,EAAxB;;AAEA,gBAAI,KAAKD,sBAAL,KAAgC,IAApC,EAA0C;AACxCC,+BAAiB,GAAG,KAAKF,uBAAL,CAA6BG,KAAjD;AACD;;AAED,mBAAOD,iBAAP;AACD;AAhFuD;AAAA;AAAA,iBAkFxD,+BAAmB;AACjB,mBAAO,KAAKvC,iBAAL,CAAuByC,mBAAvB,EAAP;AACD;AApFuD;AAAA;AAAA,iBAsFxD,iCAAqB;AACnB,gBAAI,OAAO,KAAKJ,uBAAZ,KAAwC,WAA5C,EAAyD;AACvD,mBAAKA,uBAAL,CAA6BjB,IAA7B,CAAkC,EAAlC;AACD;AACF;AA1FuD;AAAA;AAAA,iBA4FxD,4BAAmBsB,aAAnB,EAAwC;AACtC,mBAAO,gDAAG,CACR;AACA;AACA;AACA;AAJQ,aAAH,EAKJC,IALI,CAKC,6DAAM,IAAN,CALD,CAAP;AAMD;AAnGuD;AAAA;AAAA,iBAqGxD,0BAAiBzB,UAAjB,EAAmC;AACjC,mBAAO,KAAKjB,eAAL,CAAqB2C,YAArB,CAAkC1B,UAAlC,EAA8C;AAAE2B,0BAAY,EAAE;AAAhB,aAA9C,CAAP;AACD;AAvGuD;AAAA;AAAA,iBAyGxD,mBAAUC,UAAV,EAA4B;AAC1B,mBAAO,KAAKhD,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,+BACgCqC,UADhC,GAEJH,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AA7GuD;AAAA;AAAA,iBA+GxD,oBAAWK,MAAX,EAAmBF,UAAnB,EAAqC;AACnC,mBAAO,KAAKhD,IAAL,CAAUmD,IAAV,WACF,KAAKxC,GADH,iDAC6CqC,UAD7C,GAELE,MAFK,CAAP;AAID;AApHuD;AAAA;AAAA,iBAsHxD,qBAAYE,QAAZ,EAA4B;AAC1B,gBAAIF,MAAM,GAAG;AACXE,sBAAQ,EAAEA;AADC,aAAb;AAIA,mBAAO,KAAKpD,IAAL,CACJqD,GADI,WACG,KAAK1C,GADR,gCACwCuC,MADxC,EAEJL,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AA9HuD;AAAA;AAAA,iBAgIxD,oBAAWzB,UAAX,EAAqB;AACnB,mBAAO,KAAKpB,IAAL,CAAUiD,GAAV,2EAAiF7B,UAAjF,GAA+FyB,IAA/F,CAAoG,4DAAK,CAAL,CAApG,CAAP;AACD;AAlIuD;;AAAA;AAAA,S;;;;gBA3BjD;;gBAOA;;gBACA;;gBACA;;gBAaA;;gBAZA;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;;;AAYI9C,mDAA6C,6DAHzD,iEAAW;AACVuD,kBAAU,EAAE;AADF,OAAX,CAGyD,E,+EAoBtC,+D,EACU,mE,EACC,uF,EACF,mF,EACL,+F,EACY,0H,EACT,sG,EACG,iI,EACM,8H,EACF,uI,EACC,uI,EA9BuB,GAA7CvD,6CAA6C,CAA7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UChBAwD,yCAAyC;AAGpD,2DAAsBvD,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAW,GAAA;AAEyB;;AAHU;AAAA;AAAA,iBAKpD,kCAAyBuC,MAAzB,EAAqC;AACnC,gBAAIM,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBP,MAAlB,EAA0B;AACxBM,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBP,MAAM,CAACO,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKzD,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,aACqB;AAAEuC,oBAAM,EAAEM;AAAV,aADrB,EAEJX,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAfmD;AAAA;AAAA,iBAiBpD,uCAA2B;AACzB,mBAAO,KAAK7C,IAAL,CAAUiD,GAAV,WAAiB,KAAKtC,GAAtB,iBAAuCkC,IAAvC,CAA4C,4DAAK,CAAL,CAA5C,CAAP;AACD;AAnBmD;AAAA;AAAA,iBAqBpD,uBAAcc,mBAAd,EAAyC;AACvC,mBAAO,KAAK3D,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,yBAC0BgD,mBAD1B,GAEJd,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAzBmD;AAAA;AAAA,iBA2BpD,qBAAYc,mBAAZ,EAAuC;AACrC,mBAAO,KAAK3D,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,uBACwBgD,mBADxB,GAEJd,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AA/BmD;AAAA;AAAA,iBAiC5C,8BAAqBe,gBAArB,EAAyD;AAC/D,mBAAO,KAAK5D,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,cAAqCiD,gBAArC,EAAuDf,IAAvD,CAA4D,4DAAK,CAAL,CAA5D,CAAP;AACD;AAnCmD;AAAA;AAAA,iBAqC5C,gCAAuBe,gBAAvB,EAA2D;AACjE,mBAAO,KAAK5D,IAAL,CACJqD,GADI,WACG,KAAK1C,GADR,iBACyBiD,gBADzB,EAEJf,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAzCmD;AAAA;AAAA,iBA2CpD,cAAKe,gBAAL,EAAuC;AACrC,gBAAIA,gBAAgB,CAACD,mBAAjB,KAAyC,IAA7C,EAAmD;AACjD,qBAAO,KAAKE,sBAAL,CAA4BD,gBAA5B,CAAP;AACD;;AAED,mBAAO,KAAKE,oBAAL,CAA0BF,gBAA1B,CAAP;AACD;AAjDmD;AAAA;AAAA,iBAmDpD,kCAAyBG,MAAzB,EAAuC;AACrC,mBAAO,KAAK/D,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,cAAqCoD,MAArC,EAA6ClB,IAA7C,CAAkD,4DAAK,CAAL,CAAlD,CAAP;AACD;AArDmD;AAAA;AAAA,iBAuDpD,oCAA2BkB,MAA3B,EAAyC;AACvC,mBAAO,KAAK/D,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,gBAAuCoD,MAAvC,EAA+ClB,IAA/C,CAAoD,4DAAK,CAAL,CAApD,CAAP;AACD;AAzDmD;;AAAA;AAAA,S;;;;gBAZ7C;;;;AAYIU,+CAAyC,6DAHrD,iEAAW;AACVD,kBAAU,EAAE;AADF,OAAX,CAGqD,E,+EAGxB,+D,EAHwB,GAAzCC,yCAAyC,CAAzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAS,wBAAwB;AAGnC,0CAAsBhE,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAW,GAAA;AAEyB;;AAHP;AAAA;AAAA,iBAKnC,qBAAS;AACP,mBAAO,KAAKX,IAAL,CAAUiD,GAAV,WAAiB,KAAKtC,GAAtB,uBAA6CkC,IAA7C,CAAkD,4DAAK,CAAL,CAAlD,EAA2D,6DAAM,CAAN,CAA3D,CAAP;AACD;AAPkC;AAAA;AAAA,iBASnC,qBAAYK,MAAZ,EAAuB;AACrB,gBAAIM,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBP,MAAlB,EAA0B;AACxBM,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBP,MAAM,CAACO,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKzD,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,sBAC8B;AAAEuC,oBAAM,EAAEM;AAAV,aAD9B,EAEJX,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAnBkC;AAAA;AAAA,iBAqBnC,mCAA0BzB,UAA1B,EAA4C;AAC1C,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,uCACwCS,UADxC,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAzBkC;AAAA;AAAA,iBA2BnC,4BAAmBoB,EAAnB,EAA0B;AACxB,mBAAO,KAAKjE,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,+BACgCsD,EADhC,GAEJpB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA/BkC;AAAA;AAAA,iBAiCnC,qBAAYzB,UAAZ,EAA8B;AAC5B,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,gCACiCS,UADjC,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AArCkC;AAAA;AAAA,iBAuCnC,6BAAoBzB,UAApB,EAAsC;AACpC,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,gCACiCS,UADjC,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA3CkC;AAAA;AAAA,iBA6CnC,0BACEqB,SADF,EAEEC,eAFF,EAE0B;AAExB,mBAAO,KAAKnE,IAAL,CACJiD,GADI,WAEA,KAAKtC,GAFL,iCAE+BuD,SAF/B,8BAGDC,eAAe,KAAK,IAApB,GAA2B,CAA3B,GAA+B,CAH9B,GAMJtB,IANI,CAMC,4DAAK,CAAL,CAND,EAMU,6DAAM,CAAN,CANV,CAAP;AAOD;AAxDkC;AAAA;AAAA,iBA0DnC,qBAAYxB,IAAZ,EAAqB;AACnB,mBAAO,KAAKrB,IAAL,CACJmD,IADI,WACI,KAAKxC,GADT,oBAC6BU,IAD7B,EAEJwB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA9DkC;AAAA;AAAA,iBAgEnC,mCAA0BzB,UAA1B,EAA4C;AAC1C,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,uCACwCS,UADxC,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AApEkC;AAAA;AAAA,iBAsEnC,6BAAoBzB,UAApB,EAAsC;AACpC,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,kDACmDS,UADnD,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA1EkC;AAAA;AAAA,iBA4EnC,gCAAuBxB,IAAvB,EAAgC;AAC9B,mBAAO,KAAKrB,IAAL,CACJqD,GADI,WACG,KAAK1C,GADR,yCACiDU,IADjD,EAEJwB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAhFkC;AAAA;AAAA,iBAkFnC,mCACEzB,UADF,EAEE6C,EAFF,EAEY;AAEV,mBAAO,KAAKjE,IAAL,qBAEA,KAAKW,GAFL,oDAEkDS,UAFlD,cAEgE6C,EAFhE,GAIJpB,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AA3FkC;AAAA;AAAA,iBA6FnC,sBACEzB,UADF,EAEE8B,MAFF,EAEc;AAEZ,gBAAIM,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBP,MAAlB,EAA0B;AACxBM,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBP,MAAM,CAACO,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKzD,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,0CAC2CS,UAD3C,GACyD;AAC5D8B,oBAAM,EAAEM;AADoD,aADzD,EAIJX,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AA5GkC;AAAA;AAAA,iBA8GnC,qBACEzB,UADF,EAEEgD,UAFF,EAGEC,UAHF,EAGoB;AAElB,mBAAO,KAAKrE,IAAL,CACJiD,GADI,WAEA,KAAKtC,GAFL,yCAEuCS,UAFvC,cAEqDgD,UAFrD,cAEmEC,UAFnE,GAIJxB,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AAxHkC;AAAA;AAAA,iBA0HnC,wBAAexB,IAAf,EAAwB;AACtB,mBAAO,KAAKrB,IAAL,CACJqD,GADI,WACG,KAAK1C,GADR,gCACwCU,IADxC,EAEJwB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA9HkC;AAAA;AAAA,iBAgInC,wBAAezB,UAAf,EAAmC6C,EAAnC,EAA6C;AAC3C,mBAAO,KAAKjE,IAAL,qBACM,KAAKW,GADX,wCAC4CS,UAD5C,cAC0D6C,EAD1D,GAEJpB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AApIkC;AAAA;AAAA,iBAsInC,qBAAYzB,UAAZ,EAA8B;AAC5B,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,yCAC0CS,UAD1C,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA1IkC;AAAA;AAAA,iBA4InC,oBACEzB,UADF,EAEEkD,SAFF,EAEmB;AAEjB,mBAAO,KAAKtE,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,wCACyCS,UADzC,cACuDkD,SADvD,GAEJzB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAnJkC;AAAA;AAAA,iBAqJnC,uBAAcxB,IAAd,EAAuB;AACrB,mBAAO,KAAKrB,IAAL,CACJqD,GADI,WACG,KAAK1C,GADR,+BACuCU,IADvC,EAEJwB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAzJkC;AAAA;AAAA,iBA2JnC,uBACEzB,UADF,EAEE6C,EAFF,EAGEM,QAHF,EAGkB;AAEhB,mBAAO,KAAKvE,IAAL,qBAEA,KAAKW,GAFL,uCAEqCS,UAFrC,cAEmD6C,EAFnD,cAEyDM,QAFzD,GAIJ1B,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AArKkC;AAAA;AAAA,iBAuKnC,2BACEzB,UADF,EAEE6C,EAFF,EAGEM,QAHF,EAGkB;AAEhB,mBAAO,KAAKvE,IAAL,qBAEA,KAAKW,GAFL,4CAE0CS,UAF1C,cAEwD6C,EAFxD,cAE8DM,QAF9D,GAIJ1B,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AAjLkC;AAAA;AAAA,iBAmLnC,qBAAY2B,OAAZ,EAA2B;AACzB,mBAAO,KAAKxE,IAAL,qBACM,KAAKW,GADX,qCACyC6D,OADzC,GAEJ3B,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAvLkC;AAAA;AAAA,iBAyLnC,gCAAuBzB,UAAvB,EAAyC;AACvC,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,qDACsDS,UADtD,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA7LkC;AAAA;AAAA,iBA+LnC,mCAA0BxB,IAA1B,EAAmC;AACjC,mBAAO,KAAKrB,IAAL,CACJqD,GADI,WACG,KAAK1C,GADR,4CACoDU,IADpD,EAEJwB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAnMkC;AAAA;AAAA,iBAqMnC,4BAAmBzB,UAAnB,EAAqC;AACnC,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,iDACkDS,UADlD,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAzMkC;AAAA;AAAA,iBA2MnC,+BAAsBxB,IAAtB,EAA+B;AAC7B,mBAAO,KAAKrB,IAAL,CACJqD,GADI,WACG,KAAK1C,GADR,wCACgDU,IADhD,EAEJwB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA/MkC;AAAA;AAAA,iBAiNnC,mBAAUzB,UAAV,EAA4B;AAC1B,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,uCACwCS,UADxC,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,CAGL;AAHK,aAAP;AAKD;AAvNkC;AAAA;AAAA,iBAyNnC,qBAAYxB,IAAZ,EAAqB;AACnB,mBAAO,KAAKrB,IAAL,CACJmD,IADI,WACI,KAAKxC,GADT,6BACsCU,IADtC,EAEJwB,IAFI,CAEC,4DAAK,CAAL,CAFD,CAGL;AAHK,aAAP;AAKD;AA/NkC;AAAA;AAAA,iBAiOnC,qBAAY4B,OAAZ,EAA2B;AACzB,mBAAO,KAAKzE,IAAL,qBACM,KAAKW,GADX,qCACyC8D,OADzC,GAEJ5B,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AArOkC;AAAA;AAAA,iBAuOnC,mBAAUzB,UAAV,EAA4B;AAC1B,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,uCACwCS,UADxC,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA3OkC;AAAA;AAAA,iBA6OnC,mBAAUzB,UAAV,EAA4B;AAC1B,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,uCACwCS,UADxC,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAjPkC;AAAA;AAAA,iBAmPnC,mCAA0BzB,UAA1B,EAA4C;AAC1C,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WAEA,KAAKtC,GAFL,wDAEsDS,UAFtD,GAIJyB,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AAzPkC;AAAA;AAAA,iBA2PnC,kCAAyBzB,UAAzB,EAA2C;AACzC,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,uDACwDS,UADxD,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA/PkC;AAAA;AAAA,iBAiQnC,wBAAezB,UAAf,EAAiC;AAC/B,mBAAO,KAAKpB,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,2BAC4BS,UAD5B,GAEJyB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AArQkC;;AAAA;AAAA,S;;;;gBAZ5B;;;;AAYImB,8BAAwB,6DAHpC,iEAAW;AACVV,kBAAU,EAAE;AADF,OAAX,CAGoC,E,+EAGP,+D,EAHO,GAAxBU,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCVb;;;UAMaU,mBAAmB;AAC9B,qCAAoBC,YAApB,EAAkD;AAAA;;AAA9B,eAAAA,YAAA,GAAAA,YAAA;AAAgC;;AADtB;AAAA;AAAA,iBAG9B,qBACEC,IADF,EAEEC,KAFF,EAGEC,OAHF,EAIEC,SAJF,EAKEC,KALF,EAKgB;AAEd,gBAAMC,QAAQ,GAAG,KAAKN,YAAL,CAAkBO,IAAlB,CAAuB,8EAAvB,EAA8C;AAC7DC,sBAAQ,EAAE,KADmD;AAE7DC,iCAAmB,EAAE,IAFwC;AAG7DC,sBAAQ,EAAE,KAHmD;AAI7D,uBAAO;AAJsD,aAA9C,CAAjB;AAOAJ,oBAAQ,CAACK,OAAT,CAAiBV,IAAjB,GAAwBA,IAAxB;AACAK,oBAAQ,CAACK,OAAT,CAAiBT,KAAjB,GAAyBA,KAAzB;AACAI,oBAAQ,CAACK,OAAT,CAAiBR,OAAjB,GAA2BA,OAA3B;;AAEA,gBAAIF,IAAI,KAAK,QAAb,EAAuB;AACrBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,+CAD+B,EAE/B,mCAF+B,CAAjC;AAID;;AAED,gBAAIX,IAAI,KAAK,YAAb,EAA2B;AACzBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,oCAD+B,CAAjC;AAGD;;AAED,gBAAIR,SAAJ,EAAe;AACbE,sBAAQ,CAACK,OAAT,CAAiBP,SAAjB,GAA6BA,SAA7B;AACD;;AAED,gBAAIC,KAAJ,EAAW;AACTC,sBAAQ,CAACK,OAAT,CAAiBN,KAAjB,GAAyBA,KAAzB;AACD,aAhCa,CAkCd;AACA;;;AACA,mBAA+BC,QAAQ,CAACK,OAAT,CAAkBE,aAAjD;AACD;AA7C6B;;AAAA;AAAA,S;;;;gBARvB;;;;AAQId,yBAAmB,6DAH/B,iEAAW;AACVpB,kBAAU,EAAE;AADF,OAAX,CAG+B,E,+EACI,kE,EADJ,GAAnBoB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCFb;;;UAUae,gCAAgC;AAG3C,kDACYzF,IADZ,EAEUE,iBAFV,EAGUwF,oBAHV,EAGsE;AAAA;;AAF1D,eAAA1F,IAAA,GAAAA,IAAA;AACF,eAAAE,iBAAA,GAAAA,iBAAA;AACA,eAAAwF,oBAAA,GAAAA,oBAAA;AALO,eAAA/E,GAAA;AAMb;;AAPuC;AAAA;AAAA,iBAS3C,4BAAgB;AACd,gBAAIgF,QAAQ,GAAG,KAAKzF,iBAAL,CAAuByC,mBAAvB,EAAf;AACA,gBAAIiD,UAAU,GAAG,KAAK1F,iBAAL,CAAuB2F,aAAvB,EAAjB;AACA,gBAAI7D,aAAa,GAAG,KAAK8D,gBAAL,EAApB;AACA,gBAAI5D,cAAc,GAAG,KAAK6D,iBAAL,EAArB;AACA,gBAAIC,oBAAoB,GAAG,KAAKC,uBAAL,EAA3B;AAEA,gBAAIC,mBAAmB,GAAG,KAAKR,oBAAL,CAA0BS,qBAA1B,CAAgD;AACxEC,yBAAW,EAAE;AAD2D,aAAhD,CAA1B;AAIA,mBAAO,sDAAS,CACdT,QADc,EAEd3D,aAFc,EAGdE,cAHc,EAId8D,oBAJc,EAKdE,mBALc,EAMdN,UANc,CAAT,CAAP;AAQD;AA5B0C;AAAA;AAAA,iBA8B3C,4BAAgB;AACd,mBAAO,KAAK5F,IAAL,CAAUiD,GAAV,WAAiB,KAAKtC,GAAtB,sBAA4CkC,IAA5C,CAAiD,4DAAK,CAAL,CAAjD,EAA0D,6DAAM,CAAN,CAA1D,CAAP;AACD;AAhC0C;AAAA;AAAA,iBAkC3C,6BAAiB;AACf,mBAAO,KAAK7C,IAAL,CAAUiD,GAAV,WAAiB,KAAKtC,GAAtB,uBAA6CkC,IAA7C,CAAkD,4DAAK,CAAL,CAAlD,EAA2D,6DAAM,CAAN,CAA3D,CAAP;AACD;AApC0C;AAAA;AAAA,iBAsC3C,mCAAuB;AACrB,mBAAO,KAAK7C,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,6BAEJkC,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA1C0C;;AAAA;AAAA,S;;;;gBAhBpC;;gBAQA;;gBADA;;;;AASI4C,sCAAgC,6DAH5C,iEAAW;AACVnC,kBAAU,EAAE;AADF,OAAX,CAG4C,E,+EAIzB,+D,EACW,uF,EACG,uH,EANW,GAAhCmC,gCAAgC,CAAhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCJAY,6CAA6C;AAGxD,+DAAsBrG,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAW,GAAA;AAEyB;;AAHc;AAAA;AAAA,iBAKxD,+BAAsBuC,MAAtB,EAAiC;AAC/B,gBAAIM,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBP,MAAlB,EAA0B;AACxBM,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBP,MAAM,CAACO,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKzD,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,aACqB;AAAEuC,oBAAM,EAAEM;AAAV,aADrB,EAEJX,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAfuD;AAAA;AAAA,iBAiBxD,uBAAcyD,gBAAd,EAAsC;AACpC,mBAAO,KAAKtG,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,yBAC0B2F,gBAD1B,GAEJzD,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AArBuD;AAAA;AAAA,iBAuBxD,0BAAiByD,gBAAjB,EAAyC;AACvC,mBAAO,KAAKtG,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,uBACwB2F,gBADxB,GAEJzD,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AA3BuD;AAAA;AAAA,iBA6BhD,2BAAkB0D,MAAlB,EAA+B;AACrC,mBAAO,KAAKvG,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,cAAqC4F,MAArC,EAA6C1D,IAA7C,CAAkD,4DAAK,CAAL,CAAlD,CAAP;AACD;AA/BuD;AAAA;AAAA,iBAiChD,6BAAoB0D,MAApB,EAAiC;AACvC,mBAAO,KAAKvG,IAAL,CAAUqD,GAAV,WAAiB,KAAK1C,GAAtB,iBAAuC4F,MAAvC,EAA+C1D,IAA/C,CAAoD,4DAAK,CAAL,CAApD,CAAP;AACD;AAnCuD;AAAA;AAAA,iBAqCxD,cAAK0D,MAAL,EAA0B;AACxB,gBAAIA,MAAM,CAACD,gBAAP,KAA4B,IAAhC,EAAsC;AACpC,qBAAO,KAAKE,mBAAL,CAAyBD,MAAzB,CAAP;AACD;;AAED,mBAAO,KAAKE,iBAAL,CAAuBF,MAAvB,CAAP;AACD;AA3CuD;AAAA;AAAA,iBA6CxD,6BAAoBD,gBAApB,EAA4C;AAC1C,mBAAO,KAAKtG,IAAL,qBACM,KAAKW,GADX,sBAC0B2F,gBAD1B,GAEJzD,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAjDuD;AAAA;AAAA,iBAmDxD,+BAAsByD,gBAAtB,EAA8C;AAC5C,mBAAO,KAAKtG,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,cAAqC2F,gBAArC,EAAuDzD,IAAvD,CAA4D,4DAAK,CAAL,CAA5D,CAAP;AACD;AArDuD;AAAA;AAAA,iBAuDxD,iCAAwByD,gBAAxB,EAAgD;AAC9C,mBAAO,KAAKtG,IAAL,CACJmD,IADI,WACI,KAAKxC,GADT,gBACyB2F,gBADzB,EAEJzD,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AA3DuD;AAAA;AAAA,iBA6DxD,6BAAiB;AACf,mBAAO,KAAK7C,IAAL,CAAUiD,GAAV,WAAiB,KAAKtC,GAAtB,iBAAuCkC,IAAvC,CAA4C,4DAAK,CAAL,CAA5C,CAAP;AACD;AA/DuD;;AAAA;AAAA,S;;;;gBAZjD;;;;AAYIwD,mDAA6C,6DAHzD,iEAAW;AACV/C,kBAAU,EAAE;AADF,OAAX,CAGyD,E,+EAG5B,+D,EAH4B,GAA7C+C,6CAA6C,CAA7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAK,6CAA6C;AAGxD,+DAAsB1G,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAW,GAAA;AAEyB;;AAHc;AAAA;AAAA,iBAKxD,+BAAsBuC,MAAtB,EAAiC;AAC/B,gBAAIM,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBP,MAAlB,EAA0B;AACxBM,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBP,MAAM,CAACO,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKzD,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,aACqB;AAAEuC,oBAAM,EAAEM;AAAV,aADrB,EAEJX,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAfuD;AAAA;AAAA,iBAiBxD,uBAAc8D,eAAd,EAAqC;AACnC,mBAAO,KAAK3G,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,yBAC0BgG,eAD1B,GAEJ9D,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AArBuD;AAAA;AAAA,iBAuBxD,yBAAgB8D,eAAhB,EAAuC;AACrC,mBAAO,KAAK3G,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,uBACwBgG,eADxB,GAEJ9D,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AA3BuD;AAAA;AAAA,iBA6BhD,0BAAiB0D,MAAjB,EAA8B;AACpC,mBAAO,KAAKvG,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,cAAqC4F,MAArC,EAA6C1D,IAA7C,CAAkD,4DAAK,CAAL,CAAlD,CAAP;AACD;AA/BuD;AAAA;AAAA,iBAiChD,4BAAmB0D,MAAnB,EAAgC;AACtC,mBAAO,KAAKvG,IAAL,CAAUqD,GAAV,WAAiB,KAAK1C,GAAtB,iBAAuC4F,MAAvC,EAA+C1D,IAA/C,CAAoD,4DAAK,CAAL,CAApD,CAAP;AACD;AAnCuD;AAAA;AAAA,iBAqCxD,cAAK0D,MAAL,EAAyB;AACvB,gBAAIA,MAAM,CAACI,eAAP,KAA2B,IAA/B,EAAqC;AACnC,qBAAO,KAAKC,kBAAL,CAAwBL,MAAxB,CAAP;AACD;;AAED,mBAAO,KAAKM,gBAAL,CAAsBN,MAAtB,CAAP;AACD;AA3CuD;AAAA;AAAA,iBA6CxD,4BAAmBI,eAAnB,EAA0C;AACxC,mBAAO,KAAK3G,IAAL,qBACM,KAAKW,GADX,sBAC0BgG,eAD1B,GAEJ9D,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAjDuD;AAAA;AAAA,iBAmDxD,8BAAqB8D,eAArB,EAA4C;AAC1C,mBAAO,KAAK3G,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,cAAqCgG,eAArC,EAAsD9D,IAAtD,CAA2D,4DAAK,CAAL,CAA3D,CAAP;AACD;AArDuD;AAAA;AAAA,iBAuDxD,gCAAuB8D,eAAvB,EAA8C;AAC5C,mBAAO,KAAK3G,IAAL,CACJmD,IADI,WACI,KAAKxC,GADT,gBACyBgG,eADzB,EAEJ9D,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AA3DuD;AAAA;AAAA,iBA6DxD,6BAAiB;AACf,mBAAO,KAAK7C,IAAL,CAAUiD,GAAV,WAAiB,KAAKtC,GAAtB,iBAAuCkC,IAAvC,CAA4C,4DAAK,CAAL,CAA5C,CAAP;AACD;AA/DuD;;AAAA;AAAA,S;;;;gBAZjD;;;;AAYI6D,mDAA6C,6DAHzD,iEAAW;AACVpD,kBAAU,EAAE;AADF,OAAX,CAGyD,E,+EAG5B,+D,EAH4B,GAA7CoD,6CAA6C,CAA7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAI,uCAAuC;AAGlD,yDAAsB9G,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAW,GAAA;AAEyB;;AAHQ;AAAA;AAAA,iBAKlD,iCAAwBuC,MAAxB,EAAmC;AACjC,gBAAIM,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBP,MAAlB,EAA0B;AACxBM,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBP,MAAM,CAACO,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKzD,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,aACqB;AAAEuC,oBAAM,EAAEM;AAAV,aADrB,EAEJX,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAfiD;AAAA;AAAA,iBAiBlD,2BAAkBoB,EAAlB,EAA4B;AAC1B,mBAAO,KAAKjE,IAAL,CAAUiD,GAAV,WAAiB,KAAKtC,GAAtB,qBAAoCsD,EAApC,GAA0CpB,IAA1C,CAA+C,4DAAK,CAAL,CAA/C,CAAP;AACD;AAnBiD;AAAA;AAAA,iBAqBlD,4BAAmB0D,MAAnB,EAA8B;AAC5B,mBAAO,KAAKvG,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,cAAqC4F,MAArC,EAA6C1D,IAA7C,CAAkD,4DAAK,CAAL,CAAlD,CAAP;AACD;AAvBiD;AAAA;AAAA,iBAyBlD,8BAAqBkE,cAArB,EAAmD;AACjD,mBAAO,KAAK/G,IAAL,qBACM,KAAKW,GADX,sBAC0BoG,cAAc,CAACC,oBADzC,GAEJnE,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AA7BiD;AAAA;AAAA,iBA+BlD,uBAAcoE,gBAAd,EAAwChD,EAAxC,EAAkD;AAChD,mBAAO,KAAKjE,IAAL,qBACM,KAAKW,GADX,8BACkCsG,gBADlC,cACsDhD,EADtD,GAEJpB,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAnCiD;;AAAA;AAAA,S;;;;gBAZ3C;;;;AAYIiE,6CAAuC,6DAHnD,iEAAW;AACVxD,kBAAU,EAAE;AADF,OAAX,CAGmD,E,+EAGtB,+D,EAHsB,GAAvCwD,uCAAuC,CAAvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAI,wCAAwC;AAGnD,0DAAsBlH,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAW,GAAA;AAEyB;;AAHS;AAAA;AAAA,iBAKnD,iCAAwBuC,MAAxB,EAAoC;AAClC,gBAAIM,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBP,MAAlB,EAA0B;AACxBM,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBP,MAAM,CAACO,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKzD,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,aACqB;AAAEuC,oBAAM,EAAEM;AAAV,aADrB,EAEJX,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAfkD;AAAA;AAAA,iBAiBnD,uBAAcsE,iBAAd,EAAuC;AACrC,mBAAO,KAAKnH,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,yBAC0BwG,iBAD1B,GAEJtE,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AArBkD;AAAA;AAAA,iBAuBnD,qBAAYsE,iBAAZ,EAAqC;AACnC,mBAAO,KAAKnH,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,uBACwBwG,iBADxB,GAEJtE,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AA3BkD;AAAA;AAAA,iBA6B3C,6BAAoBuE,cAApB,EAAqD;AAC3D,mBAAO,KAAKpH,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,cAAqCyG,cAArC,EAAqDvE,IAArD,CAA0D,4DAAK,CAAL,CAA1D,CAAP;AACD;AA/BkD;AAAA;AAAA,iBAiC3C,+BAAsBuE,cAAtB,EAAuD;AAC7D,mBAAO,KAAKpH,IAAL,CAAUqD,GAAV,WAAiB,KAAK1C,GAAtB,iBAAuCyG,cAAvC,EAAuDvE,IAAvD,CAA4D,4DAAK,CAAL,CAA5D,CAAP;AACD;AAnCkD;AAAA;AAAA,iBAqCnD,cAAKuE,cAAL,EAAoC;AAClC,gBAAIA,cAAc,CAACD,iBAAf,KAAqC,IAAzC,EAA+C;AAC7C,qBAAO,KAAKE,qBAAL,CAA2BD,cAA3B,CAAP;AACD;;AAED,mBAAO,KAAKE,mBAAL,CAAyBF,cAAzB,CAAP;AACD;AA3CkD;AAAA;AAAA,iBA6CnD,iCAAwBrD,MAAxB,EAAsC;AACpC,mBAAO,KAAK/D,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,cAAqCoD,MAArC,EAA6ClB,IAA7C,CAAkD,4DAAK,CAAL,CAAlD,CAAP;AACD;AA/CkD;AAAA;AAAA,iBAiDnD,mCAA0BkB,MAA1B,EAAwC;AACtC,mBAAO,KAAK/D,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,gBAAuCoD,MAAvC,EAA+ClB,IAA/C,CAAoD,4DAAK,CAAL,CAApD,CAAP;AACD;AAnDkD;AAAA;AAAA,iBAqDnD,6BAAiB;AACf,mBAAO,KAAK7C,IAAL,CAAUiD,GAAV,WAAiB,KAAKtC,GAAtB,iBAAuCkC,IAAvC,CAA4C,4DAAK,CAAL,CAA5C,CAAP;AACD;AAvDkD;;AAAA;AAAA,S;;;;gBAZ5C;;;;AAYIqE,8CAAwC,6DAHpD,iEAAW;AACV5D,kBAAU,EAAE;AADF,OAAX,CAGoD,E,+EAGvB,+D,EAHuB,GAAxC4D,wCAAwC,CAAxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAK,sCAAsC;AAGjD,wDAAsBvH,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAW,GAAA;AAEyB;;AAHO;AAAA;AAAA,iBAKjD,+BAAsBuC,MAAtB,EAAiC;AAC/B,gBAAIM,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBP,MAAlB,EAA0B;AACxBM,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBP,MAAM,CAACO,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKzD,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,aACqB;AAAEuC,oBAAM,EAAEM;AAAV,aADrB,EAEJX,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAfgD;AAAA;AAAA,iBAkBjD,qBAAY2E,SAAZ,EAA6B;AAC3B,mBAAO,KAAKxH,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,uBACwB6G,SADxB,GAEJ3E,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAtBgD;AAAA;AAAA,iBAwBzC,2BAAkB4E,aAAlB,EAAgD;AACtD,mBAAO,KAAKzH,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,cAAqC8G,aAArC,EAAoD5E,IAApD,CAAyD,4DAAK,CAAL,CAAzD,CAAP;AACD;AA1BgD;AAAA;AAAA,iBA4BzC,6BAAoB4E,aAApB,EAAkD;AACxD,mBAAO,KAAKzH,IAAL,CAAUqD,GAAV,WAAiB,KAAK1C,GAAtB,iBAAuC8G,aAAvC,EAAsD5E,IAAtD,CAA2D,4DAAK,CAAL,CAA3D,CAAP;AACD;AA9BgD;AAAA;AAAA,iBAgCjD,cAAK4E,aAAL,EAAiC;AAC/B,gBAAIA,aAAa,CAACD,SAAd,KAA4B,IAAhC,EAAsC;AACpC,qBAAO,KAAKE,mBAAL,CAAyBD,aAAzB,CAAP;AACD;;AAED,mBAAO,KAAKE,iBAAL,CAAuBF,aAAvB,CAAP;AACD;AAtCgD;AAAA;AAAA,iBAwCjD,+BAAsB1D,MAAtB,EAAoC;AAClC,mBAAO,KAAK/D,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,cAAqCoD,MAArC,EAA6ClB,IAA7C,CAAkD,4DAAK,CAAL,CAAlD,CAAP;AACD;AA1CgD;AAAA;AAAA,iBA4CjD,iCAAwBkB,MAAxB,EAAsC;AACpC,mBAAO,KAAK/D,IAAL,CAAUmD,IAAV,WAAkB,KAAKxC,GAAvB,gBAAuCoD,MAAvC,EAA+ClB,IAA/C,CAAoD,4DAAK,CAAL,CAApD,CAAP;AACD;AA9CgD;;AAAA;AAAA,S;;;;gBAZ1C;;;;AAYI0E,4CAAsC,6DAHlD,iEAAW;AACVjE,kBAAU,EAAE;AADF,OAAX,CAGkD,E,+EAGrB,+D,EAHqB,GAAtCiE,sCAAsC,CAAtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCHAK,2BAA2B;AAGtC,6CAAsB5H,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAW,GAAA;AAEyB;;AAHJ;AAAA;AAAA,iBAKtC,4BAAmB;AACjB,gBAAIc,QAAQ,GAAG,KAAKC,WAAL,CAAiB,QAAjB,CAAf;AACA,gBAAImG,MAAM,GAAG,KAAKC,SAAL,EAAb;AACA,gBAAIC,aAAa,GAAG,KAAKC,gBAAL,EAApB;AACA,gBAAIC,mBAAmB,GAAG,KAAKC,sBAAL,EAA1B;AAEA,mBAAO,sDAAS,CACdzG,QADc,EAEdoG,MAFc,EAGdE,aAHc,EAIdE,mBAJc,CAAT,EAKJpF,IALI,CAKC,4DAAK,CAAL,CALD,EAKU,6DAAM,CAAN,CALV,CAAP;AAMD;AAjBqC;AAAA;AAAA,iBAmBtC,qBAAYsF,IAAZ,EAAuB;AACrB,mBAAO,KAAKnI,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,uBACwBwH,IADxB,GAEJtF,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAvBqC;AAAA;AAAA,iBAyBtC,qBAAY;AACV,mBAAO,KAAK7C,IAAL,CAAUiD,GAAV,WAAiB,KAAKtC,GAAtB,cAAoCkC,IAApC,CAAyC,4DAAK,CAAL,CAAzC,EAAkD,6DAAM,CAAN,CAAlD,CAAP;AACD;AA3BqC;AAAA;AAAA,iBA6BtC,4BAAmB;AACjB,mBAAO,KAAK7C,IAAL,CAAUiD,GAAV,WAAiB,KAAKtC,GAAtB,sBAA4CkC,IAA5C,CAAiD,4DAAK,CAAL,CAAjD,EAA0D,6DAAM,CAAN,CAA1D,CAAP;AACD;AA/BqC;AAAA;AAAA,iBAiCtC,kCAAyB;AACvB,mBAAO,KAAK7C,IAAL,CACJiD,GADI,WACG,KAAKtC,GADR,6BAEJkC,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AArCqC;AAAA;AAAA,iBAuCtC,yBAAgBxB,IAAhB,EAA2B;AACzB,mBAAO,KAAKrB,IAAL,CACJmD,IADI,WACI,KAAKxC,GADT,oBAC6BU,IAD7B,EAEJwB,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA3CqC;;AAAA;AAAA,S;;;;gBAT/B;;;;AASI+E,iCAA2B,6DAHvC,iEAAW;AACVtE,kBAAU,EAAE;AADF,OAAX,CAGuC,E,+EAGV,+D,EAHU,GAA3BsE,2BAA2B,CAA3B","file":"default~contratos-comerciais-contratos-comerciais-module~cotacoes-cotacoes-module~liberacoes-liberac~88eadb97-es5.js","sourcesContent":["\r\nimport { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject, Observable, forkJoin, BehaviorSubject, of } from 'rxjs';\r\nimport { take, retry, delay } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../../../comercial.service';\r\nimport { ComercialVendedoresService } from '../../../services/vendedores.service';\r\nimport { ComercialClientesService } from '../../../services/clientes.service';\r\nimport { ComercialCadastrosTransportadoraService } from '../../../cadastros/transportadoras/transportadoras.service';\r\nimport { ComercialAgendaFormularioService } from '../../../agenda/formulario/formulario.service';\r\nimport { ComercialCadastrosSituacaoPropostaService } from '../../../cadastros/situacao-proposta/situacao-proposta.service';\r\nimport { ComercialCadastrosFormasPagamentoService } from '../../../cadastros/formas-pagamento/formas-pagamento.service';\r\nimport { ComercialCadastrosContatoFormasContatoService } from '../../../cadastros/contato/formas-contato/formas-contato.service';\r\nimport { ComercialCadastrosContatoOrigemContatoService } from '../../../cadastros/contato/origem-contato/origem-contato.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { ICalculoModel } from './models/calculo';\r\nimport { IDescontoModel } from './models/descontos';\r\nimport { ILoteModel } from './models/lote';\r\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCicloVendasCotacoesFormularioService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/ciclo-vendas/cotacoes`;\r\n\r\n  private notifySubmit = new Subject<any>();\r\n\r\n  notifySubmitObservable$ = this.notifySubmit.asObservable();\r\n\r\n  materiaisSubject: Subject<Array<any>> = new Subject<Array<any>>();\r\n  limparCarrinhoSubject: Subject<boolean> = new Subject<boolean>();\r\n  calculoSubject: Subject<ICalculoModel> = new Subject<ICalculoModel>();\r\n  descontoSubject: Subject<IDescontoModel> = new Subject<IDescontoModel>();\r\n  loteSubject: Subject<ILoteModel> = new Subject<ILoteModel>();\r\n\r\n  carteiraClientesSubject: BehaviorSubject<any>;\r\n  carteiraClientes: Observable<any>;\r\n  carteiraClientesLoaded: boolean;\r\n\r\n  codCliente: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private clientesService: ComercialClientesService,\r\n    private tidService: ComercialTidSoftwareService,\r\n    private transportadorasService: ComercialCadastrosTransportadoraService,\r\n    private agendaService: ComercialAgendaFormularioService,\r\n    private situacoesService: ComercialCadastrosSituacaoPropostaService,\r\n    private formasPagamentoService: ComercialCadastrosFormasPagamentoService,\r\n    private formasContatoService: ComercialCadastrosContatoFormasContatoService,\r\n    private origensContatoService: ComercialCadastrosContatoOrigemContatoService\r\n  ) {}\r\n\r\n  public onNotifySubmit(data: boolean) {\r\n    this.notifySubmit.next(data);\r\n  }\r\n\r\n  loadDependencies(): Observable<Array<Object | JsonResponse>> {\r\n    const situacoes = this.situacoesService.getListaSituacaoProposta(null);\r\n    // const depositos = this.comercialService.getDepositos({ idDeposito: [1,18,60,79,/*77*/], tipo: 'ssv' });\r\n    // const empresas = this.comercialService.getEmpresas({ idEmpresa: [4,18,55,79,77], tipo: 'search' });\r\n    const empresas = this.tidService.getEmpresas('vendas');\r\n    const depositos = this.comercialService.getDepositos(null);\r\n    const formasPagamento = this.formasPagamentoService.getListaFormasPagamento(\r\n      { tipoConsulta: 2 }\r\n    );\r\n    const formasContato = this.formasContatoService.getListaFormasContato(null);\r\n    const origensContato = this.origensContatoService.getListaOrigemContato(\r\n      null\r\n    );\r\n    const transportadoras = this.transportadorasService.getListaTransportadoras(\r\n      { tipoConsulta: 2 }\r\n    );\r\n\r\n    return forkJoin([\r\n      situacoes,\r\n      empresas,\r\n      depositos,\r\n      formasPagamento,\r\n      formasContato,\r\n      origensContato,\r\n      transportadoras\r\n    ]);\r\n  }\r\n\r\n  createCarteiraClientes(carteiraClientes: Array<any>): void {\r\n    this.carteiraClientesSubject = new BehaviorSubject<any>(carteiraClientes);\r\n    this.carteiraClientes = this.carteiraClientesSubject.asObservable();\r\n    this.carteiraClientesSubject.next(carteiraClientes);\r\n    this.carteiraClientesLoaded = true;\r\n  }\r\n\r\n  getCurrentCarteiraClientes(): Array<any> {\r\n    let _carteiraClientes = [];\r\n\r\n    if (this.carteiraClientesLoaded === true) {\r\n      _carteiraClientes = this.carteiraClientesSubject.value;\r\n    }\r\n\r\n    return _carteiraClientes;\r\n  }\r\n\r\n  getCarteiraClientes(): Observable<Object | JsonResponse> {\r\n    return this.vendedoresService.getCarteiraClientes();\r\n  }\r\n\r\n  clearCarteiraClientes(): void {\r\n    if (typeof this.carteiraClientesSubject !== 'undefined') {\r\n      this.carteiraClientesSubject.next([]);\r\n    }\r\n  }\r\n\r\n  getPesquisaCliente(termoPesquisa: string): Observable<Object | JsonResponse> {\r\n    return of([\r\n      // {\r\n      //   codCliente: 78919,\r\n      //   razaoSocial: 'LINDSAY',\r\n      // },\r\n    ]).pipe(delay(1000));\r\n  }\r\n\r\n  getLocaisEntrega(codCliente: number): Observable<Object | JsonResponse> {\r\n    return this.clientesService.getEnderecos(codCliente, { localEntrega: 1 });\r\n  }\r\n\r\n  getAnexos(codCotacao: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/anexo/documentos/${codCotacao}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  postAnexos(params, codCotacao: number): Observable<any> {\r\n    return this.http.post(\r\n      `${this.API}/anexo/documentos/salvar?codCotacao=${codCotacao}`,\r\n      params\r\n    );\r\n  }\r\n\r\n  deleteAnexo(codAnexo: number): Observable<any> {\r\n    let params = {\r\n      codAnexo: codAnexo,\r\n    };\r\n\r\n    return this.http\r\n      .put(`${this.API}/anexo/documentos/excluir`, params)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getCliente(codCliente){\r\n    return this.http.get(`https://crm360.monterrey.com.bo/api/comercial/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { SituacaoProposta } from './models/situacao-proposta';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosSituacaoPropostaService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/situacao-proposta`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaSituacaoProposta(params?: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getListaSituacaoPropostaTid(): Observable<any> {\r\n    return this.http.get(`${this.API}/tid/lista`).pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codSituacaoProposta: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codSituacaoProposta}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codSituacaoProposta: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codSituacaoProposta}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveSituacaoProposta(situacaoProposta: SituacaoProposta) {\r\n    return this.http.post(`${this.API}/salvar`, situacaoProposta).pipe(take(1));\r\n  }\r\n\r\n  private updateSituacaoProposta(situacaoProposta: SituacaoProposta) {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, situacaoProposta)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  save(situacaoProposta: SituacaoProposta): Observable<any> {\r\n    if (situacaoProposta.codSituacaoProposta !== null) {\r\n      return this.updateSituacaoProposta(situacaoProposta);\r\n    }\r\n\r\n    return this.saveSituacaoProposta(situacaoProposta);\r\n  }\r\n\r\n  activateSituacaoProposta(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  inactivateSituacaoProposta(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialClientesService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getStatus(): Observable<Object> {\r\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClientes(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClientesGrupoEconomico(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/grupo-economico/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPermissaoAcesso(id: any): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/permissao-acesso/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhes(codCliente: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/detalhes/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getContatosResumido(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/contatos/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getExisteCpfCnpj(\r\n    documento: any,\r\n    getDadosCliente: boolean\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/verificar-cpf-cnpj/${documento}?getDadosCliente=${\r\n          getDadosCliente === true ? 1 : 0\r\n        }`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCliente(data: any): Observable<Object> {\r\n    return this.http\r\n      .post(`${this.API}/pre-cadastro`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPropostaAnaliseCredito(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/proposta-analise-credito/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDadosFaturamento(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/dados-faturamento/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateDadosFaturamento(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/dados-faturamento`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteAtividadeSecundaria(\r\n    codCliente: number,\r\n    id: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/cadastro/excluir/atividade-secundaria/${codCliente}/${id}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEnderecos(\r\n    codCliente: number,\r\n    params?: any\r\n  ): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/enderecos/${codCliente}`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEndereco(\r\n    codCliente: number,\r\n    idEndereco: number,\r\n    idSituacao: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/cadastro/carregar/endereco/${codCliente}/${idEndereco}/${idSituacao}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateEndereco(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/endereco`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteEndereco(codCliente: number, id: number): Observable<Object> {\r\n    return this.http\r\n      .delete(`${this.API}/cadastro/excluir/endereco/${codCliente}/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getContatos(codCliente: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/contatos/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getContato(\r\n    codCliente: number,\r\n    idContato: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/contato/${codCliente}/${idContato}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateContato(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/contato`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteContato(\r\n    codCliente: number,\r\n    id: number,\r\n    idSeqTid: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/cadastro/excluir/contato/${codCliente}/${id}/${idSeqTid}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteMeioContato(\r\n    codCliente: number,\r\n    id: number,\r\n    idSeqTid: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/cadastro/excluir/meio-contato/${codCliente}/${id}/${idSeqTid}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteFilho(idFilho: number): Observable<Object> {\r\n    return this.http\r\n      .delete(`${this.API}/cadastro/excluir/filho/${idFilho}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDadosRelacionamento(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/dados-relacionamento/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateDadosRelacionamento(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/dados-relacionamento`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPotencialCompra(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/potencial-compra/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updatePotencialCompra(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/potencial-compra`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAnexos(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/anexos/${codCliente}`)\r\n      .pipe(take(1)\r\n      // , retry(2)\r\n      );\r\n  }\r\n\r\n  uploadAnexo(data: any): Observable<Object> {\r\n    return this.http\r\n      .post(`${this.API}/cadastro/upload/anexo`, data)\r\n      .pipe(take(1)\r\n      // , retry(2)\r\n      );\r\n  }\r\n\r\n  deleteAnexo(idAnexo: number): Observable<Object> {\r\n    return this.http\r\n      .delete(`${this.API}/cadastro/excluir/anexo/${idAnexo}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getFilial(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/filial/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTravas(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/travas/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getInformacoesFinanceiras(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/cadastro/carregar/informacoes-financeiras/${codCliente}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getInformacoesComerciais(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/informacoes-comerciais/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getListaEmails(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/emails/lista/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin, Observable } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialCadastrosTitulosAgendaService } from './../../cadastros/titulos-agenda/titulos-agenda.service';\r\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialAgendaFormularioService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/agenda/formulario`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private titulosAgendaService: ComercialCadastrosTitulosAgendaService\r\n  ) {}\r\n\r\n  loadDependencies(): Observable<Object | JsonResponse> {\r\n    let clientes = this.vendedoresService.getCarteiraClientes();\r\n    let vendedores = this.vendedoresService.getVendedores();\r\n    let formasContato = this.getFormasContato();\r\n    let origensContato = this.getOrigensContato();\r\n    let motivosReagendamento = this.getMotivosReagendamento();\r\n\r\n    let listarTitulosAgenda = this.titulosAgendaService.getListaTitulosAgenda({\r\n      codSituacao: '1',\r\n    });\r\n\r\n    return forkJoin([\r\n      clientes,\r\n      formasContato,\r\n      origensContato,\r\n      motivosReagendamento,\r\n      listarTitulosAgenda,\r\n      vendedores,\r\n    ]);\r\n  }\r\n\r\n  getFormasContato(): Observable<Object | JsonResponse> {\r\n    return this.http.get(`${this.API}/formas-contato`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getOrigensContato(): Observable<Object | JsonResponse> {\r\n    return this.http.get(`${this.API}/origens-contato`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMotivosReagendamento(): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/motivos-reagendamento`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { OrigemContato } from './models/origem-contato';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosContatoOrigemContatoService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/contato/origem-contato`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaOrigemContato(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codOrigemContato: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codOrigemContato}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getOrigemContato(codOrigemContato: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codOrigemContato}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveOrigemContato(record: any) {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\r\n  }\r\n\r\n  private updateOrigemContato(record: any) {\r\n    return this.http.put(`${this.API}/atualizar`, record).pipe(take(1));\r\n  }\r\n\r\n  save(record: OrigemContato): Observable<any> {\r\n    if (record.codOrigemContato !== null) {\r\n      return this.updateOrigemContato(record);\r\n    }\r\n\r\n    return this.saveOrigemContato(record);\r\n  }\r\n\r\n  deleteOrigemContato(codOrigemContato: number): Observable<any> {\r\n    return this.http\r\n      .delete(`${this.API}/excluir/${codOrigemContato}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  activateOrigemContato(codOrigemContato: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codOrigemContato).pipe(take(1));\r\n  }\r\n\r\n  inactivateOrigemContato(codOrigemContato: number): Observable<any> {\r\n    return this.http\r\n      .post(`${this.API}/inativar`, codOrigemContato)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getListaOrigemERP(): Observable<any> {\r\n    return this.http.get(`${this.API}/erp/lista`).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { FormaContato } from './models/formas-contato';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosContatoFormasContatoService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/contato/forma-contato`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaFormasContato(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codFormaContato: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codFormaContato}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getFormaContato(codFormaContato: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codFormaContato}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveFormaContato(record: any) {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\r\n  }\r\n\r\n  private updateFormaContato(record: any) {\r\n    return this.http.put(`${this.API}/atualizar`, record).pipe(take(1));\r\n  }\r\n\r\n  save(record: FormaContato): Observable<any> {\r\n    if (record.codFormaContato !== null) {\r\n      return this.updateFormaContato(record);\r\n    }\r\n\r\n    return this.saveFormaContato(record);\r\n  }\r\n\r\n  deleteFormaContato(codFormaContato: number): Observable<any> {\r\n    return this.http\r\n      .delete(`${this.API}/excluir/${codFormaContato}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  activateFormaContato(codFormaContato: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codFormaContato).pipe(take(1));\r\n  }\r\n\r\n  inactivateFormaContato(codFormaContato: number): Observable<any> {\r\n    return this.http\r\n      .post(`${this.API}/inativar`, codFormaContato)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getListaFormasERP(): Observable<any> {\r\n    return this.http.get(`${this.API}/erp/lista`).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { Transportadora } from './models/transportadora';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosTransportadoraService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/transportadora`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaTransportadoras(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getTransportadora(id: number): Observable<any> {\r\n    return this.http.get(`${this.API}/editar/${id}`).pipe(take(1));\r\n  }\r\n\r\n  postTransportadora(record: any): Observable<any> {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\r\n  }\r\n\r\n  deleteTransportadora(transportadora: Transportadora): Observable<any> {\r\n    return this.http\r\n      .delete(`${this.API}/excluir/${transportadora.codTransportadoraTid}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  deleteContato(codTransportdora: number, id: number): Observable<any> {\r\n    return this.http\r\n      .delete(`${this.API}/contato/excluir/${codTransportdora}/${id}`)\r\n      .pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { FormasPagamento } from './models/formas-pagamento';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosFormasPagamentoService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/formas-pagamento`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaFormasPagamento(params?: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codFormaPagamento: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codFormaPagamento}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codFormaPagamento: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codFormaPagamento}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveFormasPagamento(formaPagamento: FormasPagamento) {\r\n    return this.http.post(`${this.API}/salvar`, formaPagamento).pipe(take(1));\r\n  }\r\n\r\n  private updateFormasPagamento(formaPagamento: FormasPagamento) {\r\n    return this.http.put(`${this.API}/atualizar`, formaPagamento).pipe(take(1));\r\n  }\r\n\r\n  save(formaPagamento: FormasPagamento): Observable<any> {\r\n    if (formaPagamento.codFormaPagamento !== null) {\r\n      return this.updateFormasPagamento(formaPagamento);\r\n    }\r\n\r\n    return this.saveFormasPagamento(formaPagamento);\r\n  }\r\n\r\n  activateFormasPagamento(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  inactivateFormasPagamento(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  getListaFormasERP(): Observable<any> {\r\n    return this.http.get(`${this.API}/erp/lista`).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { TitulosAgenda } from './models/titulos-agenda';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosTitulosAgendaService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/titulos-agenda`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaTitulosAgenda(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n\r\n  getDetalhes(codTitulo: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codTitulo}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveTitulosAgenda(titulosAgenda: TitulosAgenda) {\r\n    return this.http.post(`${this.API}/salvar`, titulosAgenda).pipe(take(1));\r\n  }\r\n\r\n  private updateTitulosAgenda(titulosAgenda: TitulosAgenda) {\r\n    return this.http.put(`${this.API}/atualizar`, titulosAgenda).pipe(take(1));\r\n  }\r\n\r\n  save(titulosAgenda: TitulosAgenda): Observable<any> {\r\n    if (titulosAgenda.codTitulo !== null) {\r\n      return this.updateTitulosAgenda(titulosAgenda);\r\n    }\r\n\r\n    return this.saveTitulosAgenda(titulosAgenda);\r\n  }\r\n\r\n  activateTitulosAgenda(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  inactivateTitulosAgenda(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}