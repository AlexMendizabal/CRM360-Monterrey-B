{"version":3,"sources":["webpack:///src/app/modules/comercial/ciclo-vendas/cotacoes/formulario/formulario.service.ts","webpack:///src/app/modules/comercial/cadastros/situacao-proposta/situacao-proposta.service.ts","webpack:///src/app/modules/comercial/services/clientes.service.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/agenda/formulario/formulario.service.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/origem-contato.service.ts","webpack:///src/app/modules/comercial/cadastros/contato/formas-contato/formas-contato.service.ts","webpack:///src/app/modules/comercial/cadastros/transportadoras/transportadoras.service.ts","webpack:///src/app/modules/comercial/cadastros/formas-pagamento/formas-pagamento.service.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/titulos-agenda.service.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialCicloVendasCotacoesFormularioService","http","comercialService","vendedoresService","clientesService","tidService","transportadorasService","agendaService","situacoesService","formasPagamentoService","formasContatoService","origensContatoService","API","notifySubmit","notifySubmitObservable$","asObservable","materiaisSubject","limparCarrinhoSubject","calculoSubject","descontoSubject","loteSubject","codCliente","data","next","situacoes","getListaSituacaoProposta","empresas","getEmpresas","depositos","getDepositos","formasPagamento","getListaFormasPagamento","tipoConsulta","formasContato","getListaFormasContato","origensContato","getListaOrigemContato","transportadoras","getListaTransportadoras","carteiraClientes","carteiraClientesSubject","carteiraClientesLoaded","_carteiraClientes","value","getCarteiraClientes","termoPesquisa","pipe","getEnderecos","localEntrega","codCotacao","get","params","post","codAnexo","put","providedIn","ComercialCadastrosSituacaoPropostaService","httpParams","param","append","codSituacaoProposta","situacaoProposta","updateSituacaoProposta","saveSituacaoProposta","codigo","ComercialClientesService","id","documento","getDadosCliente","idEndereco","idSituacao","idContato","idSeqTid","idFilho","idAnexo","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialAgendaFormularioService","titulosAgendaService","clientes","vendedores","getVendedores","getFormasContato","getOrigensContato","motivosReagendamento","getMotivosReagendamento","listarTitulosAgenda","getListaTitulosAgenda","codSituacao","ComercialCadastrosContatoOrigemContatoService","codOrigemContato","record","updateOrigemContato","saveOrigemContato","ComercialCadastrosContatoFormasContatoService","codFormaContato","updateFormaContato","saveFormaContato","ComercialCadastrosTransportadoraService","transportadora","codTransportadoraTid","codTransportdora","ComercialCadastrosFormasPagamentoService","codFormaPagamento","formaPagamento","updateFormasPagamento","saveFormasPagamento","ComercialCadastrosTitulosAgendaService","codTitulo","titulosAgenda","updateTitulosAgenda","saveTitulosAgenda","ComercialTidSoftwareService","linhas","getLinhas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"default~contratos-comerciais-contratos-comerciais-module~cotacoes-cotacoes-module~liberacoes-liberac~88eadb97-es5.js","sourcesContent":["\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, Observable, forkJoin, BehaviorSubject, of } from 'rxjs';\nimport { take, retry, delay } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialVendedoresService } from '../../../services/vendedores.service';\nimport { ComercialClientesService } from '../../../services/clientes.service';\nimport { ComercialCadastrosTransportadoraService } from '../../../cadastros/transportadoras/transportadoras.service';\nimport { ComercialAgendaFormularioService } from '../../../agenda/formulario/formulario.service';\nimport { ComercialCadastrosSituacaoPropostaService } from '../../../cadastros/situacao-proposta/situacao-proposta.service';\nimport { ComercialCadastrosFormasPagamentoService } from '../../../cadastros/formas-pagamento/formas-pagamento.service';\nimport { ComercialCadastrosContatoFormasContatoService } from '../../../cadastros/contato/formas-contato/formas-contato.service';\nimport { ComercialCadastrosContatoOrigemContatoService } from '../../../cadastros/contato/origem-contato/origem-contato.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { ICalculoModel } from './models/calculo';\nimport { IDescontoModel } from './models/descontos';\nimport { ILoteModel } from './models/lote';\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCicloVendasCotacoesFormularioService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/ciclo-vendas/cotacoes`;\n\n  private notifySubmit = new Subject<any>();\n\n  notifySubmitObservable$ = this.notifySubmit.asObservable();\n\n  materiaisSubject: Subject<Array<any>> = new Subject<Array<any>>();\n  limparCarrinhoSubject: Subject<boolean> = new Subject<boolean>();\n  calculoSubject: Subject<ICalculoModel> = new Subject<ICalculoModel>();\n  descontoSubject: Subject<IDescontoModel> = new Subject<IDescontoModel>();\n  loteSubject: Subject<ILoteModel> = new Subject<ILoteModel>();\n\n  carteiraClientesSubject: BehaviorSubject<any>;\n  carteiraClientes: Observable<any>;\n  carteiraClientesLoaded: boolean;\n\n  codCliente: EventEmitter<number> = new EventEmitter();\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private vendedoresService: ComercialVendedoresService,\n    private clientesService: ComercialClientesService,\n    private tidService: ComercialTidSoftwareService,\n    private transportadorasService: ComercialCadastrosTransportadoraService,\n    private agendaService: ComercialAgendaFormularioService,\n    private situacoesService: ComercialCadastrosSituacaoPropostaService,\n    private formasPagamentoService: ComercialCadastrosFormasPagamentoService,\n    private formasContatoService: ComercialCadastrosContatoFormasContatoService,\n    private origensContatoService: ComercialCadastrosContatoOrigemContatoService\n  ) {}\n\n  public onNotifySubmit(data: boolean) {\n    this.notifySubmit.next(data);\n  }\n\n  loadDependencies(): Observable<Array<Object | JsonResponse>> {\n    const situacoes = this.situacoesService.getListaSituacaoProposta(null);\n    // const depositos = this.comercialService.getDepositos({ idDeposito: [1,18,60,79,/*77*/], tipo: 'ssv' }); \n    // const empresas = this.comercialService.getEmpresas({ idEmpresa: [4,18,55,79,77], tipo: 'search' });\n    const empresas = this.tidService.getEmpresas('vendas'); \n    const depositos = this.comercialService.getDepositos(null); \n    const formasPagamento = this.formasPagamentoService.getListaFormasPagamento(\n      { tipoConsulta: 2 }\n    );\n    const formasContato = this.formasContatoService.getListaFormasContato(null);\n    const origensContato = this.origensContatoService.getListaOrigemContato(\n      null\n    );\n    const transportadoras = this.transportadorasService.getListaTransportadoras(\n      { tipoConsulta: 2 }\n    );\n\n    return forkJoin([\n      situacoes,\n      empresas,\n      depositos,\n      formasPagamento,\n      formasContato,\n      origensContato,\n      transportadoras\n    ]);\n  }\n\n  createCarteiraClientes(carteiraClientes: Array<any>): void {\n    this.carteiraClientesSubject = new BehaviorSubject<any>(carteiraClientes);\n    this.carteiraClientes = this.carteiraClientesSubject.asObservable();\n    this.carteiraClientesSubject.next(carteiraClientes);\n    this.carteiraClientesLoaded = true;\n  }\n\n  getCurrentCarteiraClientes(): Array<any> {\n    let _carteiraClientes = [];\n\n    if (this.carteiraClientesLoaded === true) {\n      _carteiraClientes = this.carteiraClientesSubject.value;\n    }\n\n    return _carteiraClientes;\n  }\n\n  getCarteiraClientes(): Observable<Object | JsonResponse> {\n    return this.vendedoresService.getCarteiraClientes();\n  }\n\n  clearCarteiraClientes(): void {\n    if (typeof this.carteiraClientesSubject !== 'undefined') {\n      this.carteiraClientesSubject.next([]);\n    }\n  }\n\n  getPesquisaCliente(termoPesquisa: string): Observable<Object | JsonResponse> {\n    return of([\n      // {\n      //   codCliente: 78919,\n      //   razaoSocial: 'LINDSAY',\n      // },\n    ]).pipe(delay(1000));\n  }\n\n  getLocaisEntrega(codCliente: number): Observable<Object | JsonResponse> {\n    return this.clientesService.getEnderecos(codCliente, { localEntrega: 1 });\n  }\n\n  getAnexos(codCotacao: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/anexo/documentos/${codCotacao}`)\n      .pipe(take(1));\n  }\n\n  postAnexos(params, codCotacao: number): Observable<any> {\n    return this.http.post(\n      `${this.API}/anexo/documentos/salvar?codCotacao=${codCotacao}`,\n      params\n    );\n  }\n\n  deleteAnexo(codAnexo: number): Observable<any> {\n    let params = {\n      codAnexo: codAnexo,\n    };\n\n    return this.http\n      .put(`${this.API}/anexo/documentos/excluir`, params)\n      .pipe(take(1));\n  }\n\n  getCliente(codCliente){\n    return this.http.get(`https://crm360.monterrey.com.bo/api/comercial/clientes/detalhes/${codCliente}`).pipe(take(1));\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { SituacaoProposta } from './models/situacao-proposta';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosSituacaoPropostaService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/situacao-proposta`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaSituacaoProposta(params?: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getListaSituacaoPropostaTid(): Observable<any> {\n    return this.http.get(`${this.API}/tid/lista`).pipe(take(1));\n  }\n\n  getAlteracoes(codSituacaoProposta: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codSituacaoProposta}`)\n      .pipe(take(1));\n  }\n\n  getDetalhes(codSituacaoProposta: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codSituacaoProposta}`)\n      .pipe(take(1));\n  }\n\n  private saveSituacaoProposta(situacaoProposta: SituacaoProposta) {\n    return this.http.post(`${this.API}/salvar`, situacaoProposta).pipe(take(1));\n  }\n\n  private updateSituacaoProposta(situacaoProposta: SituacaoProposta) {\n    return this.http\n      .put(`${this.API}/atualizar`, situacaoProposta)\n      .pipe(take(1));\n  }\n\n  save(situacaoProposta: SituacaoProposta): Observable<any> {\n    if (situacaoProposta.codSituacaoProposta !== null) {\n      return this.updateSituacaoProposta(situacaoProposta);\n    }\n\n    return this.saveSituacaoProposta(situacaoProposta);\n  }\n\n  activateSituacaoProposta(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n  }\n\n  inactivateSituacaoProposta(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialClientesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes`;\n\n  constructor(protected http: HttpClient) {}\n\n  getStatus(): Observable<Object> {\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1), retry(2));\n  }\n\n  getClientes(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/pesquisa/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getClientesGrupoEconomico(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/grupo-economico/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getPermissaoAcesso(id: any): Observable<Object> {\n    return this.http\n      .get(`${this.API}/permissao-acesso/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/pesquisa/detalhes/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatosResumido(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getExisteCpfCnpj(\n    documento: any,\n    getDadosCliente: boolean\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/verificar-cpf-cnpj/${documento}?getDadosCliente=${\n          getDadosCliente === true ? 1 : 0\n        }`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  postCliente(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/pre-cadastro`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPropostaAnaliseCredito(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/proposta-analise-credito/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosFaturamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-faturamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosFaturamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-faturamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteAtividadeSecundaria(\n    codCliente: number,\n    id: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/atividade-secundaria/${codCliente}/${id}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getEnderecos(\n    codCliente: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/cadastro/carregar/enderecos/${codCliente}`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getEndereco(\n    codCliente: number,\n    idEndereco: number,\n    idSituacao: number\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/endereco/${codCliente}/${idEndereco}/${idSituacao}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  updateEndereco(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/endereco`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteEndereco(codCliente: number, id: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/endereco/${codCliente}/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatos(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContato(\n    codCliente: number,\n    idContato: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contato/${codCliente}/${idContato}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateContato(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/contato`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteMeioContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/meio-contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteFilho(idFilho: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/filho/${idFilho}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosRelacionamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-relacionamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosRelacionamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-relacionamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPotencialCompra(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/potencial-compra/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updatePotencialCompra(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/potencial-compra`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getAnexos(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/anexos/${codCliente}`)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  uploadAnexo(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/cadastro/upload/anexo`, data)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  deleteAnexo(idAnexo: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/anexo/${idAnexo}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getFilial(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/filial/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getTravas(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/travas/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesFinanceiras(codCliente: number): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/informacoes-financeiras/${codCliente}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesComerciais(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/informacoes-comerciais/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getListaEmails(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/emails/lista/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin, Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialCadastrosTitulosAgendaService } from './../../cadastros/titulos-agenda/titulos-agenda.service';\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialAgendaFormularioService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/agenda/formulario`;\n\n  constructor(\n    protected http: HttpClient,\n    private vendedoresService: ComercialVendedoresService,\n    private titulosAgendaService: ComercialCadastrosTitulosAgendaService\n  ) {}\n\n  loadDependencies(): Observable<Object | JsonResponse> {\n    let clientes = this.vendedoresService.getCarteiraClientes();\n    let vendedores = this.vendedoresService.getVendedores();\n    let formasContato = this.getFormasContato();\n    let origensContato = this.getOrigensContato();\n    let motivosReagendamento = this.getMotivosReagendamento();\n    let listarTitulosAgenda = this.titulosAgendaService.getListaTitulosAgenda({\n      codSituacao: '1',\n    });\n\n    return forkJoin([\n      clientes,\n      formasContato,\n      origensContato,\n      motivosReagendamento,\n      listarTitulosAgenda,\n      vendedores,\n    ]);\n  }\n\n  getFormasContato(): Observable<Object | JsonResponse> {\n    return this.http.get(`${this.API}/formas-contato`).pipe(take(1), retry(2));\n  }\n\n  getOrigensContato(): Observable<Object | JsonResponse> {\n    return this.http.get(`${this.API}/origens-contato`).pipe(take(1), retry(2));\n  }\n\n  getMotivosReagendamento(): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/motivos-reagendamento`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { OrigemContato } from './models/origem-contato';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosContatoOrigemContatoService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/contato/origem-contato`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaOrigemContato(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codOrigemContato: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codOrigemContato}`)\n      .pipe(take(1));\n  }\n\n  getOrigemContato(codOrigemContato: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codOrigemContato}`)\n      .pipe(take(1));\n  }\n\n  private saveOrigemContato(record: any) {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\n  }\n\n  private updateOrigemContato(record: any) {\n    return this.http.put(`${this.API}/atualizar`, record).pipe(take(1));\n  }\n\n  save(record: OrigemContato): Observable<any> {\n    if (record.codOrigemContato !== null) {\n      return this.updateOrigemContato(record);\n    }\n\n    return this.saveOrigemContato(record);\n  }\n\n  deleteOrigemContato(codOrigemContato: number): Observable<any> {\n    return this.http\n      .delete(`${this.API}/excluir/${codOrigemContato}`)\n      .pipe(take(1));\n  }\n\n  activateOrigemContato(codOrigemContato: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codOrigemContato).pipe(take(1));\n  }\n\n  inactivateOrigemContato(codOrigemContato: number): Observable<any> {\n    return this.http\n      .post(`${this.API}/inativar`, codOrigemContato)\n      .pipe(take(1));\n  }\n\n  getListaOrigemERP(): Observable<any> {\n    return this.http.get(`${this.API}/erp/lista`).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { FormaContato } from './models/formas-contato';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosContatoFormasContatoService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/contato/forma-contato`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaFormasContato(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codFormaContato: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codFormaContato}`)\n      .pipe(take(1));\n  }\n\n  getFormaContato(codFormaContato: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codFormaContato}`)\n      .pipe(take(1));\n  }\n\n  private saveFormaContato(record: any) {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\n  }\n\n  private updateFormaContato(record: any) {\n    return this.http.put(`${this.API}/atualizar`, record).pipe(take(1));\n  }\n\n  save(record: FormaContato): Observable<any> {\n    if (record.codFormaContato !== null) {\n      return this.updateFormaContato(record);\n    }\n\n    return this.saveFormaContato(record);\n  }\n\n  deleteFormaContato(codFormaContato: number): Observable<any> {\n    return this.http\n      .delete(`${this.API}/excluir/${codFormaContato}`)\n      .pipe(take(1));\n  }\n\n  activateFormaContato(codFormaContato: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codFormaContato).pipe(take(1));\n  }\n\n  inactivateFormaContato(codFormaContato: number): Observable<any> {\n    return this.http\n      .post(`${this.API}/inativar`, codFormaContato)\n      .pipe(take(1));\n  }\n\n  getListaFormasERP(): Observable<any> {\n    return this.http.get(`${this.API}/erp/lista`).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { Transportadora } from './models/transportadora';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosTransportadoraService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/transportadora`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaTransportadoras(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getTransportadora(id: number): Observable<any> {\n    return this.http.get(`${this.API}/editar/${id}`).pipe(take(1));\n  }\n\n  postTransportadora(record: any): Observable<any> {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\n  }\n\n  deleteTransportadora(transportadora: Transportadora): Observable<any> {\n    return this.http\n      .delete(`${this.API}/excluir/${transportadora.codTransportadoraTid}`)\n      .pipe(take(1));\n  }\n\n  deleteContato(codTransportdora: number, id: number): Observable<any> {\n    return this.http\n      .delete(`${this.API}/contato/excluir/${codTransportdora}/${id}`)\n      .pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { FormasPagamento } from './models/formas-pagamento';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosFormasPagamentoService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/formas-pagamento`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaFormasPagamento(params?: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codFormaPagamento: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codFormaPagamento}`)\n      .pipe(take(1));\n  }\n\n  getDetalhes(codFormaPagamento: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codFormaPagamento}`)\n      .pipe(take(1));\n  }\n\n  private saveFormasPagamento(formaPagamento: FormasPagamento) {\n    return this.http.post(`${this.API}/salvar`, formaPagamento).pipe(take(1));\n  }\n\n  private updateFormasPagamento(formaPagamento: FormasPagamento) {\n    return this.http.put(`${this.API}/atualizar`, formaPagamento).pipe(take(1));\n  }\n\n  save(formaPagamento: FormasPagamento): Observable<any> {\n    if (formaPagamento.codFormaPagamento !== null) {\n      return this.updateFormasPagamento(formaPagamento);\n    }\n\n    return this.saveFormasPagamento(formaPagamento);\n  }\n\n  activateFormasPagamento(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n  }\n\n  inactivateFormasPagamento(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n  }\n\n  getListaFormasERP(): Observable<any> {\n    return this.http.get(`${this.API}/erp/lista`).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { TitulosAgenda } from './models/titulos-agenda';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosTitulosAgendaService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/titulos-agenda`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaTitulosAgenda(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n\n  getDetalhes(codTitulo: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codTitulo}`)\n      .pipe(take(1));\n  }\n\n  private saveTitulosAgenda(titulosAgenda: TitulosAgenda) {\n    return this.http.post(`${this.API}/salvar`, titulosAgenda).pipe(take(1));\n  }\n\n  private updateTitulosAgenda(titulosAgenda: TitulosAgenda) {\n    return this.http.put(`${this.API}/atualizar`, titulosAgenda).pipe(take(1));\n  }\n\n  save(titulosAgenda: TitulosAgenda): Observable<any> {\n    if (titulosAgenda.codTitulo !== null) {\n      return this.updateTitulosAgenda(titulosAgenda);\n    }\n\n    return this.saveTitulosAgenda(titulosAgenda);\n  }\n\n  activateTitulosAgenda(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n  }\n\n  inactivateTitulosAgenda(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}