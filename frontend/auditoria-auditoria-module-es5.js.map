{"version":3,"sources":["webpack:///src/app/modules/comercial/services/vendedores.service.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/auditoria/auditoria.component.ts","webpack:///src/app/modules/comercial/auditoria/enderecos-entrega/enderecos-entrega.component.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/auditoria/auditoria-routing.module.ts","webpack:///src/app/modules/comercial/auditoria/auditoria.component.html","webpack:///src/app/modules/comercial/auditoria/enderecos-entrega/enderecos-entrega.component.scss","webpack:///src/app/modules/comercial/auditoria/enderecos-entrega/enderecos-entrega.component.html","webpack:///src/app/modules/comercial/auditoria/auditoria.module.ts","webpack:///src/app/modules/comercial/auditoria/auditoria.service.ts","webpack:///src/app/modules/comercial/auditoria/auditoria.component.scss"],"names":["ComercialVendedoresService","http","API","get","pipe","params","codCliente","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialAuditoriaComponent","activatedRoute","router","atividadesService","_atividadesService","pnotifyService","titleService","loaderFullScreen","breadCrumbTree","descricao","routerLink","atividades","getPNotify","setTitle","subscribe","registrarAcesso","getAtividadesInternas","idSubModulo","matricula","JSON","parse","localStorage","getItem","info","submoduloId","exibeSidebar","getAtividades","response","status","handleAtividadesInternasError","body","error","navigate","selector","template","ComercialAuditoriaEnderecosEntregaComponent","localeService","location","formBuilder","auditoriaService","dateService","vendedoresService","confirmModalService","loaderNavbar","subtitles","id","text","color","tableConfig","subtitleBorder","tableConfigAnexos","fixedHeader","bodyHeight","hover","showDetailPanel","orderBy","orderType","enderecos","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","vendedores","empresas","situacoes","situacao","situacoesFiltered","situacaoLoaded","excecoes","validaExcecao","anexos","anexosMarketing","showAnexos","showAnexosAprovacao","showAnexosMarketing","formData","clienteTerceiro","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getFiltros","setBreadCrumb","setFormFilter","setEnderecoSelecionado","setFormLatLong","setFormExcessao","getExcecao","getVendedores","next","responseCode","result","unshift","nome","back","success","data","formValue","checkRouterParams","form","group","tipoData","required","dataInicial","dataFinal","idCliente","dsCliente","vendedor","registros","formLatLong","latitude","longitude","getFirstDayMonth","getLastDayMonth","activatedRouteSubscription","queryParams","keys","length","atob","search","forEach","formKey","paramKey","convertStringToDate","isNaN","Number","unsubscribe","value","field","onFieldInvalid","errors","hasOwnProperty","touched","formControl","controls","validator","validationResult","onFieldInvalidLatLong","validation","confirm","checkValidatorsData","notice","valid","setRouterParams","verificaParams","relativeTo","q","btoa","stringify","convertToUrlDate","Date","parseInt","getListaEnderecosEntrega","slice","mensagem","enderecoEntrega","borderClass","event","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","enderecoSelecionado","codEndereco","razaoSocial","codSituacao","codUsuario","nomeUsuario","dataCadastro","detalhes","getCliente","COD_CLIE_TERC","getAnexosAprovacao","getAnexos","getUltimaCompra","openModal","ultimaCompra","ULTIMA_COMPRA","ultimaCompraGrupo","time","convertMysqlTime","detalhesModalRef","modal","hide","submitModalRef","formExcecao","excecao","acao","msgModal","anexosAprovacao","array","idEndereco","cliente","emailVendedor","justificativa","onPostAnexosAprovacao","onModalClose","aprovaReprovaEndereco","endereco","link","bairro","cidade","uf","linkCorreto","replace","setAnexosAprovacao","i","onAddAnexosAprovacao","anexo","manipulateForm","checkAnexoExists","push","codAnexo","nomeAnexo","linkAnexo","urlAnexo","markAsTouched","markAsDirty","some","el","files","fd","FormData","append","element","index","postAnexosAprovacao","console","log","confirmDelete","r","deleteAnexoAprovacao","deleteDocumento","splice","removeAt","showConfirm","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","toString","padStart","s","getSeconds","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","substr","days","setDate","routes","path","children","component","ComercialAuditoriaRoutingModule","imports","forChild","exports","ComercialAuditoriaModule","declarations","forRoot","providers","ComercialAuditoriaService","httpParams","param","record","put","post"],"mappings":"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","file":"auditoria-auditoria-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialVendedoresService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\n\n  constructor(protected http: HttpClient) {}\n\n  getDetalhesCadastro() {\n    return this.http\n      .get(`${this.API}/detalhes-cadastro`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVendedores() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\n  }\n\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/carteira-clientes`,\n      {\n        params: params\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getValidaClienteCarteira(\n    codCliente: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVinculoOperadores() {\n    return this.http\n      .get(`${this.API}/vinculo-operadores`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { AdminAtividadesService } from '../../admin/atividades/services/atividades.service';\n\n@Component({\n  selector: 'auditoria',\n  templateUrl: './auditoria.component.html',\n  styleUrls: ['./auditoria.component.scss']\n})\nexport class ComercialAuditoriaComponent implements OnInit {\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home'\n    },\n    {\n      descricao: 'Auditorias'\n    }\n  ];\n\n  atividades: any = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private atividadesService: AtividadesService,\n    private _atividadesService: AdminAtividadesService,\n    private pnotifyService: PNotifyService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle('Auditorias');\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.registrarAcesso();\n      this.getAtividadesInternas(params['idSubModulo']);\n    });\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getAtividadesInternas(idSubModulo: number) {\n\n    let matricula = (JSON.parse(localStorage.getItem('currentUser')))?.info?.matricula;\n\n    let params = {\n      submoduloId: idSubModulo,\n      matricula: matricula,\n      exibeSidebar: 0\n    }\n\n    this._atividadesService\n      .getAtividades(params)\n      .subscribe(\n        response => {\n          if(response.status !== 200){\n            this.handleAtividadesInternasError();\n            return\n          }\n\n          this.atividades = response.body[\"data\"];\n          this.loaderFullScreen = false;\n\n        },\n        (error: any) => {\n          this.handleAtividadesInternasError();\n        }\n      )\n  }\n\n  // getAtividadesInternas(idSubModulo: number) {\n  //   this.atividadesService.getAtividadesInternas(idSubModulo).subscribe({\n  //     next: (response: any) => {\n  //       if (response['responseCode'] === 200) {\n  //         this.atividades = response['result'];\n  //         this.loaderFullScreen = false;\n  //       } else {\n  //         this.handleAtividadesInternasError();\n  //       }\n  //     },\n  //     error: (error: any) => {\n  //       this.handleAtividadesInternasError();\n  //     }\n  //   });\n  // }\n\n  handleAtividadesInternasError() {\n    this.pnotifyService.error();\n    this.router.navigate(['/comercial/home']);\n  }\n}\n","import { ConfirmModalService } from './../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  TemplateRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormArray,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { ComercialAuditoriaService } from '../auditoria.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { nullSafeIsEquivalent } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'enderecos-entrega',\n  templateUrl: './enderecos-entrega.component.html',\n  styleUrls: ['./enderecos-entrega.component.scss'],\n})\nexport class ComercialAuditoriaEnderecosEntregaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Aprovado',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Reprovado',\n      color: 'red',\n    },\n    {\n      id: 3,\n      text: 'Aguardando Aprovação',\n      color: 'blue',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigAnexos: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  formLatLong: FormGroup;\n  formExcecao: FormGroup;\n\n  orderBy = 'id';\n  orderType = 'ASC';\n\n  enderecos: Array<any> = [];\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<any> = [];\n  dadosPagination: Array<any> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  vendedores: any = [];\n  empresas: any = [];\n  situacoes: any = [\n    {\n      id: 0,\n      situacao: 'EXIBIR TODOS',\n    },\n    {\n      id: 1,\n      situacao: 'APROVADOS',\n    },\n    {\n      id: 4,\n      situacao: 'REPROVADOS',\n    },\n    {\n      id: 3,\n      situacao: 'AGUARDANDO APROVAÇÃO',\n    },\n  ];\n  situacoesFiltered: any = this.situacoes;\n  situacaoLoaded: boolean = false;\n\n  excecoes: any = [];\n  validaExcecao: boolean = false;\n\n  enderecoSelecionado: any;\n  msgModal: string;\n  valorModal: number;\n\n  detalhesModalRef: BsModalRef;\n  submitModalRef: BsModalRef;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  anexos: Array<any> = [];\n  anexosMarketing: Array<any> = [];\n  showAnexos: boolean = false;\n  showAnexosAprovacao: boolean = false;\n  showAnexosMarketing: boolean = false;\n  ultimaCompra: any;\n  acao: string;\n\n  formData: Array<FormData> = [];\n\n  clienteTerceiro = [];\n  constructor(\n    private localeService: BsLocaleService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private auditoriaService: ComercialAuditoriaService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private modalService: BsModalService,\n    private dateService: DateService,\n    private vendedoresService: ComercialVendedoresService,\n    private confirmModalService: ConfirmModalService,\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.getFiltros();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Endereço de Entrega');\n    this.setEnderecoSelecionado();\n    this.setFormLatLong();\n    this.setFormExcessao();\n    this.getExcecao();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getFiltros() {\n    this.vendedoresService\n      .getVendedores()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.responseCode === 200) {\n            this.vendedores = response.result;\n\n            this.vendedores.unshift({\n              id: 0,\n              nome: 'EXIBIR TODOS',\n            });\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Auditoria',\n          routerLink: `/comercial/auditoria/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Endereços de Entregas',\n        },\n      ];\n    });\n  }\n\n  getExcecao() {\n    this.auditoriaService\n      .getExcecao()\n      .subscribe({\n        next: (response: any) => {\n          if (response.success === true) {\n            this.excecoes = response.data;\n\n            // this.excecoes.unshift({\n            //   id: 0,\n            //   excecao: 'SELECIONE UMA EXCEÇÃO...',\n            // });\n\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n\n  setFormFilter() {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      tipoData: [formValue.tipoData, [Validators.required]],\n      dataInicial: [formValue.dataInicial, [Validators.required]],\n      dataFinal: [formValue.dataFinal, [Validators.required]],\n      idCliente: [formValue.idCliente],\n      dsCliente: [formValue.dsCliente],\n      vendedor: [formValue.vendedor],\n      situacao: [formValue.situacao],\n      registros: [formValue.registros],\n    });\n\n  }\n\n  setFormLatLong(): void {\n    this.formLatLong = this.formBuilder.group({\n      latitude: ['', Validators.required],\n      longitude: ['', Validators.required],\n    });\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      tipoData: 1,\n      dataInicial: this.dateService.getFirstDayMonth(),\n      dataFinal: this.dateService.getLastDayMonth(),\n      idCliente: null,\n      dsCliente: null,\n      vendedor: 0,\n      situacao: 3,\n      registros: 300,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\n                  formValue[formKey] = this.dateService.convertStringToDate(\n                    params[paramKey],\n                    'pt-br'\n                  );\n                } else {\n                  if (!isNaN(Number(params[paramKey]))) {\n                    formValue[formKey] = Number(params[paramKey]);\n                  } else {\n                    formValue[formKey] = params[paramKey];\n                  }\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onFieldErrorLatLong(field: string): string {\n    if (this.onFieldInvalidLatLong(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalidLatLong(field: any) {\n    field = this.formLatLong.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequiredLatLong(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.formLatLong.controls[field].validator) {\n      let validationResult = this.formLatLong.controls[field].validator(\n        formControl\n      );\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  checkValidatorsData() {\n    let validation = true;\n    let dataInicial: Date = this.form.value.dataInicial;\n    let dataFinal: Date = this.form.value.dataFinal;\n\n    if (dataInicial > dataFinal) {\n      validation = false;\n    }\n\n    return validation;\n  }\n\n  onFilter(): void {\n    let confirm: boolean = false;\n\n    if (!this.checkValidatorsData()) {\n      this.pnotifyService.notice(\n        'Data Inicial não pode ser maior que Data Final'\n      );\n    } else {\n      confirm = true;\n    }\n\n    if (this.form.valid && confirm == true) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams() {\n    let params: any = {};\n\n    if (this.form.value.tipoData) {\n      params.tipoData = this.form.value.tipoData;\n    }\n\n    if (this.form.value.dataInicial) {\n      params.dataInicial = this.dateService.convertToUrlDate(\n        new Date(this.form.value.dataInicial)\n      );\n    }\n\n    if (this.form.value.dataFinal) {\n      params.dataFinal = this.dateService.convertToUrlDate(\n        new Date(this.form.value.dataFinal)\n      );\n    }\n\n    if (this.form.value.idCliente) {\n      params.idCliente = this.form.value.idCliente;\n    }\n\n    if (this.form.value.dsCliente) {\n      params.dsCliente = this.form.value.dsCliente;\n    }\n\n    if (this.form.value.situacao) {\n      params.situacao = this.form.value.situacao;\n    }\n\n    if (this.form.value.vendedor) {\n      params.vendedor = parseInt(this.form.value.vendedor);\n    }\n\n    if (this.form.value.registros) {\n      params.registros = this.form.value.registros;\n    }\n\n    params.orderBy = this.orderBy;\n    params.orderType = this.orderType;\n\n    return params;\n  }\n\n  onCheckExcecao(): void {\n    this.validaExcecao = !this.validaExcecao;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.auditoriaService\n      .getListaEnderecosEntrega(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(enderecoEntrega: any): string {\n    let borderClass: string;\n\n    if (enderecoEntrega.situacao === 1) {\n      borderClass = 'border-success';\n    } else if (enderecoEntrega.situacao === 4) {\n      borderClass = 'border-danger';\n    } else if (enderecoEntrega.situacao === 3) {\n      borderClass = 'border-primary';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  setEnderecoSelecionado(): void {\n    this.enderecoSelecionado = {\n      idCliente: -1,\n      codEndereco: null,\n      razaoSocial: null,\n      codSituacao: null,\n      situacao: null,\n      codUsuario: null,\n      nomeUsuario: null,\n      dataCadastro: null,\n    };\n  }\n\n  onDetails(detalhes: TemplateRef<any>, enderecoEntrega: any): void {\n    this.loaderNavbar = true;\n    this.setEnderecoSelecionado();\n    this.enderecoSelecionado = enderecoEntrega;\n    this.anexos = [];\n    this.anexosMarketing = [];\n    \n    this.auditoriaService.getCliente(this.enderecoSelecionado.COD_CLIE_TERC)\n    .pipe(\n      finalize(() => {\n      this.loaderFullScreen = false;\n    }))\n    .subscribe({\n      next: (response: JsonResponse) => {\n        this.clienteTerceiro[0] = response;\n      }\n    });\n\n    this.auditoriaService\n      .getAnexosAprovacao(this.enderecoSelecionado.codEndereco)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.showAnexosMarketing = true;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.anexosMarketing = response.data;\n          }\n        },\n        error: (error: any) => {}\n      });\n\n    this.auditoriaService\n      .getAnexos(this.enderecoSelecionado.codEndereco)\n      .pipe(\n        finalize(() => {\n          if (this.enderecoSelecionado.idCliente > 0) {\n            this.getUltimaCompra(this.enderecoSelecionado.idCliente, detalhes);\n\n            /* this.loaderNavbar = false; */\n          } else {\n            this.pnotifyService.error('Erro ao abrir Endereço');\n            this.loaderNavbar = false;\n          }\n          /* this.loaderNavbar = false; */\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.anexos = response.data;\n            this.showAnexos = true;\n          }\n        },\n        error: (error: any) => {\n          if (error['error'].hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  getUltimaCompra(codCliente: number, detalhes: TemplateRef<any>) {\n    this.auditoriaService\n      .getUltimaCompra(codCliente)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.openModal(detalhes);\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.enderecoSelecionado.ultimaCompra =\n              response.data[0].ULTIMA_COMPRA;\n            this.enderecoSelecionado.ultimaCompraGrupo =\n              response.data[0].ultimaCompraGrupo;\n          }\n        },\n        error: (error: any) => {\n          if (error['error'].hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  convertMysqlTime(time: string) {\n    return this.dateService.convertMysqlTime(time);\n  }\n\n  openModal(detalhes: TemplateRef<any>) {\n    this.detalhesModalRef = this.modalService.show(\n      detalhes,\n      Object.assign(\n        {\n          ignoreBackdropClick: true,\n        },\n        { class: 'modal-xl' }\n      )\n    );\n  }\n\n  onModalClose(modal) {\n    if (modal == 'detalhes') {\n      this.detalhesModalRef.hide();\n    } else if (modal == 'confirm') {\n      this.submitModalRef.hide();\n    }\n    this.formExcecao.value.excecao = null;\n    this.validaExcecao = false;\n  }\n\n  /* onReject(confirm: TemplateRef<any>) {\n    this.msgReject = '';\n    this.submitModalRef = this.modalService.show(\n      confirm,\n      Object.assign(\n        {\n          ignoreBackdropClick: true,\n        },\n        { class: 'modal-lg' }\n      )\n    );\n  } */\n\n  onAction(confirm: TemplateRef<any>, acao: string) {\n    this.msgModal = '';\n    this.setFormExcessao();\n    this.form.value.anexosAprovacao = [];\n    this.acao = acao;\n    if ((this.formLatLong.value.latitude != '' && this.formLatLong.value.longitude != '') ||\n    (this.enderecoSelecionado.latitude != null &&  this.enderecoSelecionado.longitude != null)) {\n      this.submitModalRef = this.modalService.show(\n        confirm,\n        Object.assign(\n          {\n            ignoreBackdropClick: true,\n          },\n          { class: 'modal-lg' }\n        )\n      );\n    } else {\n      this.pnotifyService.notice(\"Verifique os campos de latitude e longitude.\")\n    }\n\n  }\n\n  setFormExcessao(): void {\n    this.formExcecao = this.formBuilder.group({\n      excecao: null,\n      anexosAprovacao: this.formBuilder.array([]),\n    });\n  }\n\n  onSubmitModal() {\n    if (this.validaExcecao &&\n      ( this.formExcecao.value.excecao == 0 || this.formExcecao.value.excecao == null)) {\n      this.pnotifyService.notice(\"Selecione uma exceção.\")\n      return;\n    }\n\n    if (this.msgModal != '' || this.acao == 'Aprovação') {\n      let params = {\n        idEndereco: this.enderecoSelecionado['id'],\n        idCliente: this.enderecoSelecionado['idCliente'],\n        cliente: this.enderecoSelecionado['nome'],\n        emailVendedor: this.enderecoSelecionado['emailVendedor'],\n        excecao: this.validaExcecao\n        ? this.formExcecao.value.excecao\n        : this.formExcecao.value.excecao = 0,\n        justificativa: this.msgModal,\n        anexos: this.formExcecao.value.anexosAprovacao,\n        latitude:\n        this.enderecoSelecionado.latitude != null\n            ? this.enderecoSelecionado.latitude\n            : this.formLatLong.value.latitude,\n        longitude:\n        this.enderecoSelecionado.longitude != null\n            ? this.enderecoSelecionado.longitude\n            : this.formLatLong.value.longitude,\n        situacao: this.acao == 'Aprovação' ? 1 : 4,\n      };\n\n      this.onPostAnexosAprovacao(params.idEndereco);\n\n      this.onModalClose('confirm');\n      this.onModalClose('detalhes');\n      this.aprovaReprovaEndereco(params);\n    }\n\n  }\n\n  /* onAccept() {\n    let paramsAccept = {\n      idEndereco: this.enderecoSelecionado['id'],\n      idCliente: this.enderecoSelecionado['idCliente'],\n      cliente: this.enderecoSelecionado['nome'],\n      emailVendedor: this.enderecoSelecionado['emailVendedor'],\n      justificativa: '',\n      situacao: 1,\n    };\n\n    this.onModalClose('detalhes');\n    this.aprovaReprovaEndereco(paramsAccept);\n  } */\n\n  /* onSubmitReject() {\n    if (this.msgReject != '') {\n      let paramsReject = {\n        idEndereco: this.enderecoSelecionado['id'],\n        idCliente: this.enderecoSelecionado['idCliente'],\n        cliente: this.enderecoSelecionado['nome'],\n        emailVendedor: this.enderecoSelecionado['emailVendedor'],\n        justificativa: this.msgReject,\n        situacao: 4,\n      };\n\n      this.onModalClose('confirm');\n      this.onModalClose('detalhes');\n      this.aprovaReprovaEndereco(paramsReject);\n    }\n  } */\n\n  aprovaReprovaEndereco(params: any) {\n    this.loaderFullScreen = true;\n\n    this.auditoriaService\n      .aprovaReprovaEndereco(params)\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n\n          this.setRouterParams(this.verificaParams());\n        })\n      )\n      .subscribe({\n        next: ( response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.pnotifyService.success();\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  enviarEndereco(endereco: any) {\n    let link: string = `https://www.google.com.br/maps/place/${endereco.endereco}-${endereco.bairro},${endereco.cidade}-${endereco.uf}`;\n    const linkCorreto = link.replace(/ /g, '+');\n\n    return linkCorreto;\n  }\n\n  getAnexosAprovacao(codEndereco: number) {\n    this.loaderNavbar = true;\n    this.showAnexosAprovacao = false;\n    this.anexosMarketing = [];\n\n    this.auditoriaService\n      .getAnexosAprovacao(codEndereco)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.showAnexosAprovacao = true;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.setAnexosAprovacao(response.data);\n            this.anexosMarketing = response.data;\n            this.showAnexosAprovacao = true;\n          }\n        },\n        error: (error: any) => {\n        }\n      });\n  }\n\n  setAnexosAprovacao(anexos: any): void {\n    if (anexos.length > 0) {\n      for (let i = 0; i < anexos.length; i++) {\n        this.onAddAnexosAprovacao(anexos[i], true);\n      }\n    }\n  }\n\n  get anexosAprovacao(): FormArray {\n    return this.formExcecao.get('anexosAprovacao') as FormArray;\n  }\n\n  onAddAnexosAprovacao(anexo: any, manipulateForm?: boolean): void {\n    if (this.checkAnexoExists(anexo) === false) {\n      this.anexosAprovacao.push(\n        this.formBuilder.group({\n          codAnexo: [anexo.codAnexo],\n          nomeAnexo: [anexo.nomeAnexo],\n          linkAnexo: [anexo.linkAnexo],\n          urlAnexo: [anexo.urlAnexo],\n        })\n      );\n\n      if (manipulateForm) {\n        this.form.markAsTouched();\n        this.form.markAsDirty();\n      }\n    }\n  }\n\n  checkAnexoExists(anexo: any): boolean {\n    return this.form.value.anexos.some((el: any) => {\n      return el.codAnexo === anexo.codAnexo || el.nomeAnexo == anexo.nomeAnexo;\n    });\n  }\n\n  appendFileAprovacao(files: FileList): any {\n    if (files.length === 0) return;\n    const fd = new FormData();\n    fd.append('file', files[0]);\n    this.formData.push(fd);\n\n    this.anexosAprovacao.push(\n      this.formBuilder.group({\n        nomeAnexo: [files[0]['name']],\n      })\n    );\n    if (this.showAnexos === false) {\n      this.showAnexos = true;\n    }\n  }\n\n  onPostAnexosAprovacao(codEndereco: number): void {\n    if (this.formData.length === 0) {\n      /* this.pnotifyService.notice('Erro'); */\n      return;\n    }\n\n    /* const id = this.form.value.codMaterial; */\n\n    this.formData.forEach((element, index) => {\n      this.auditoriaService\n        .postAnexosAprovacao(element, codEndereco)\n        .subscribe();\n    });\n  }\n\n  onDeleteAnexoAprovacao(codAnexo: number, index: number): void {\n    console.log(index)\n    this.confirmDelete().subscribe((r: boolean) => {\n      if (codAnexo) {\n        console.log(\"codAnexo\");\n        this.loaderNavbar = true;\n        this.auditoriaService\n          .deleteAnexoAprovacao(codAnexo)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n            })\n          )\n          .subscribe({\n            next: (response: JsonResponse) => {\n              if (\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                r ? this.deleteDocumento(index) : null;\n              } else if (\n                response.hasOwnProperty('success') &&\n                response.success === false &&\n                response.hasOwnProperty('mensagem')\n              ) {\n                this.pnotifyService.error(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              if (error['error'].hasOwnProperty('mensagem')) {\n                this.pnotifyService.error(error.error.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            }\n          });\n      } else {\n        console.log(\"i\")\n        r ? this.deleteDocumento(index) : null;\n        this.formData.splice(index, 1);\n      }\n    });\n  }\n\n  deleteDocumento(index: number): void {\n    this.anexosAprovacao.removeAt(index);\n    this.form.markAsTouched();\n    this.form.markAsDirty();\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { ComercialAuditoriaComponent } from './auditoria.component';\nimport { ComercialAuditoriaEnderecosEntregaComponent } from './enderecos-entrega/enderecos-entrega.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        component: ComercialAuditoriaComponent\n      },\n      {\n        path: 'endereco-entrega',\n        children: [\n          {\n            path: '',\n            component: ComercialAuditoriaEnderecosEntregaComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialAuditoriaRoutingModule {}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Auditorias\\\"></app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <h5 class=\\\"pt-2 mb-4 text-center\\\">Selecione uma Auditoria</h5>\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-10\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\" *ngFor=\\\"let atividade of atividades\\\">\\n          <card-button\\n            [icon]=\\\"atividade.iconeAtividade\\\"\\n            [text]=\\\"atividade.nomeAtividade\\\"\\n            [routerLink]=\\\"[atividade.rotaAtividade]\\\">\\n          </card-button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2F1ZGl0b3JpYS9lbmRlcmVjb3MtZW50cmVnYS9lbmRlcmVjb3MtZW50cmVnYS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Auditoria de Endereços\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter #scrollToFilter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"tipoData\\\">Buscar por</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"tipoData\\\"\\n                formControlName=\\\"tipoData\\\"\\n                [ngClass]=\\\"onFieldError('tipoData') + ' ' + onFieldRequired('tipoData')\\\">\\n                <option value=\\\"1\\\">Data de alteração</option>\\n                <option value=\\\"2\\\">Data de aprovação/reprovação</option>\\n                <invalid-form-control [show]=\\\"onFieldInvalid('tipoData') == 'required'\\\" message=\\\"'Buscar por' é obrigatório.\\\"></invalid-form-control>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"dataInicial\\\">Data inicial</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataInicial\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataInicial\\\"\\n                [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired('dataInicial')\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial') == 'required'\\\" message=\\\"Data Inicial é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"dataFinal\\\">Data final</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataFinal\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataFinal\\\"\\n                [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired('dataFinal')\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal') == 'required'\\\" message=\\\"Data Final é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"idCliente\\\">Cód. Cliente</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"idCliente\\\"\\n                formControlName=\\\"idCliente\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"dsCliente\\\">Razão Social</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"dsCliente\\\"\\n                formControlName=\\\"dsCliente\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-3 mb-2 mb-md-0\\\">\\n              <label for=\\\"situacoes\\\">Situação</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"situacoesFiltered\\\"\\n                formControlName=\\\"situacao\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                [loading]=\\\"situacaoLoaded\\\"\\n                labelForId=\\\"situacoes\\\"\\n                bindLabel=\\\"situacao\\\"\\n                bindValue=\\\"id\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3 mb-2 mb-md-0\\\">\\n              <label for=\\\"vendedores\\\">Vendedor</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"vendedores\\\"\\n                formControlName=\\\"vendedor\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"vendedores\\\"\\n                bindLabel=\\\"nome\\\"\\n                bindValue=\\\"id\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-1 mb-2 mb-md-0\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col-1\\\">Dt. Atualização</th>\\n            <th scope=\\\"col-4\\\">(Cod. Cliente) Razão Social</th>\\n            <th scope=\\\"col-2\\\">Vendedor</th>\\n            <th scope=\\\"col-2\\\">Usuário Cadastro</th>\\n            <th scope=\\\"col-1\\\">Dt. Aprovação/Reprovação</th>\\n            <th scope=\\\"col-2\\\">Quem Aprovou</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let enderecoEntrega of dadosPagination; let i = index\\\" [class.table-active]=\\\"enderecoEntrega.id == enderecoSelecionado.id\\\">\\n            <td\\n              class=\\\"hover\\\"\\n              [ngClass]=\\\"classStatusBorder(enderecoEntrega)\\\"\\n              (click)=\\\"onDetails(detalhes, enderecoEntrega)\\\">\\n              {{ enderecoEntrega.dataAtualizacao | date: 'dd/MM/yyyy - hh:mm' }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(detalhes, enderecoEntrega)\\\">\\n              ({{enderecoEntrega.idCliente}}) {{ enderecoEntrega.nome | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(detalhes, enderecoEntrega)\\\">\\n              {{ enderecoEntrega.vendedor | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(detalhes, enderecoEntrega)\\\">\\n              {{ enderecoEntrega.usuarioCadastro | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(detalhes, enderecoEntrega)\\\">\\n              {{ enderecoEntrega.dataAprovacaoReprovacao | date: 'dd/MM/yyyy - hh:mm' }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(detalhes, enderecoEntrega)\\\">\\n              {{ enderecoEntrega.usuarioAprovacaoReprovacao | uppercase }}\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"dadosEmpty\\\">\\n      </empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n<ng-template #detalhes>\\n  <div class=\\\"modal-header\\\">\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n      {{ enderecoSelecionado.nome }} / {{ enderecoSelecionado.vendedor }}\\n    </h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"onModalClose('detalhes')\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"container-xl\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Ult. Compra</label>\\n              <div *ngIf=\\\"enderecoSelecionado.ultimaCompra == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.ultimaCompra != null\\\">{{ enderecoSelecionado.ultimaCompra }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label>Ult. Compra Grupo</label>\\n              <div *ngIf=\\\"enderecoSelecionado.ultimaCompraGrupo == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.ultimaCompraGrupo != null\\\">{{ enderecoSelecionado.ultimaCompraGrupo }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-2 align-items-center\\\">\\n              <a\\n                [routerLink]=\\\"['/comercial/clientes/detalhes', enderecoSelecionado.idCliente]\\\"\\n                target=\\\"_blank\\\"\\n                class=\\\"btn btn-primary\\\"\\n                tooltip=\\\"Visualizar cadastro do cliente\\\">\\n                Visualizar Cad. Completo\\n              </a>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\" *ngIf=\\\"enderecoSelecionado.COD_CLIE_TERC\\\">\\n            <div class=\\\"col\\\"><hr></div>\\n          </div>\\n          <div class=\\\"mtc-title\\\" *ngIf=\\\"enderecoSelecionado.COD_CLIE_TERC\\\">Cliente Terceiro da Entrega</div>\\n          <div class=\\\"form-row\\\" *ngIf=\\\"enderecoSelecionado.COD_CLIE_TERC\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Codigo</label>\\n              <div>{{ enderecoSelecionado.COD_CLIE_TERC }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>CPF ou CNPJ</label>\\n              <div *ngIf=\\\"clienteTerceiro[0].result.cpf != 0\\\">{{ clienteTerceiro[0].result.cpf }}</div>\\n              <div *ngIf=\\\"clienteTerceiro[0].result.cnpj != 0\\\">{{ clienteTerceiro[0].result.cnpj }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Nome ou Razão Social</label>\\n              <div>{{ clienteTerceiro[0].result.razaoSocial }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Tipo do Endereço de Entrega</label>\\n              <div>{{ enderecoSelecionado.TP_ACAO }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"col\\\"><hr></div>\\n          </div>\\n          <div class=\\\"mtc-title\\\" >Endereço de Entrega</div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>CEP</label>\\n              <div *ngIf=\\\"enderecoSelecionado.cep == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.cep != null\\\">{{ enderecoSelecionado.cep | cep }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Endereço</label>\\n              <div *ngIf=\\\"enderecoSelecionado.endereco == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.endereco != null\\\">{{ enderecoSelecionado.endereco }}\\n              <a *ngIf=\\\"enderecoSelecionado.endereco != null\\\" class=\\\"btn-icon-sm ml-2\\\"\\n                [href]=\\\"enviarEndereco(enderecoSelecionado)\\\"\\n                target=\\\"_blank\\\">\\n                <ng-template #tooltipAutoScrollTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Visualizar no</p>\\n                  <p class=\\\"text-nowrap mb-0\\\">Google Maps</p>\\n                </ng-template>\\n                <i class=\\\"fas fa-map-marker-alt\\\" [tooltip]=\\\"tooltipAutoScrollTemplate\\\"></i></a>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Complemento</label>\\n              <div *ngIf=\\\"enderecoSelecionado.complemento == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.complemento != null\\\">{{ enderecoSelecionado.complemento }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Referência</label>\\n              <div *ngIf=\\\"enderecoSelecionado.referencia == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.referencia != null\\\">{{ enderecoSelecionado.referencia }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Bairro</label>\\n              <div *ngIf=\\\"enderecoSelecionado.bairro == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.bairro != null\\\">{{ enderecoSelecionado.bairro }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6 mb-0\\\">\\n              <label>Cidade</label>\\n              <div *ngIf=\\\"enderecoSelecionado.cidade == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.cidade != null\\\">\\n                {{ enderecoSelecionado.cidade }}<span *ngIf=\\\"enderecoSelecionado.uf != null\\\"> / {{ enderecoSelecionado.uf }}</span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <form [formGroup]=\\\"formLatLong\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-row\\\">\\n\\n              <div class=\\\"form-group col-md-6 mb-0\\\">\\n                <label>Latitude</label>\\n                <div *ngIf=\\\"enderecoSelecionado.latitude == null\\\">\\n                  <input\\n                      class=\\\"form-control col-6\\\"\\n                      id=\\\"latitude\\\"\\n                      type=\\\"text\\\"\\n                      formControlName=\\\"latitude\\\"\\n                      [ngClass]=\\\"onFieldErrorLatLong('latitude') + ' ' + onFieldRequiredLatLong('latitude')\\\"\\n                      >\\n\\n                      <invalid-form-control [show]=\\\"onFieldInvalidLatLong('latitude')\\\" message=\\\"Latitude é obrigatório.\\\"></invalid-form-control>\\n                </div>\\n                <div *ngIf=\\\"enderecoSelecionado.latitude != null\\\">{{ enderecoSelecionado.latitude }}</div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-6\\\">\\n                <label>Longitude</label>\\n                <div *ngIf=\\\"enderecoSelecionado.longitude == null\\\">\\n                  <input\\n                      class=\\\"form-control col-6\\\"\\n                      id=\\\"longitude\\\"\\n                      type=\\\"text\\\"\\n                      formControlName=\\\"longitude\\\"\\n                      [ngClass]=\\\"onFieldErrorLatLong('longitude') + ' ' + onFieldRequiredLatLong('longitude')\\\"\\n                      >\\n                      <invalid-form-control [show]=\\\"onFieldInvalidLatLong('longitude')\\\" message=\\\"Longitude é obrigatório.\\\"></invalid-form-control>\\n                </div>\\n                <div *ngIf=\\\"enderecoSelecionado.longitude != null\\\">{{ enderecoSelecionado.longitude }}</div>\\n              </div>\\n            </div>\\n        </form>\\n\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"col\\\"><hr></div>\\n          </div>\\n          <div class=\\\"mtc-title\\\">Dados de entrega</div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Título do local de entrega</label>\\n              <div *ngIf=\\\"enderecoSelecionado.titulo == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.titulo != null\\\">{{ enderecoSelecionado.titulo }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Região de entrega</label>\\n              <div *ngIf=\\\"enderecoSelecionado.descRegiaoEntrega == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.descRegiaoEntrega != null\\\">{{ enderecoSelecionado.descRegiaoEntrega }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\">\\n              <label>Dias para realizar entregas</label>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.segunda.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.segunda.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Segunda-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"enderecoSelecionado.diasEntrega.segunda.checked == 1\\\">\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.segunda.minimo !== null && enderecoSelecionado.diasEntrega.segunda.maximo !== null\\\">\\n                      das {{ convertMysqlTime(enderecoSelecionado.diasEntrega.segunda.minimo) }} às {{ convertMysqlTime(enderecoSelecionado.diasEntrega.segunda.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.segunda.minimo == null || enderecoSelecionado.diasEntrega.segunda.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"enderecoSelecionado.diasEntrega.segunda.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.terca.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.terca.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Terça-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"enderecoSelecionado.diasEntrega.terca.checked == 1\\\">\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.terca.minimo !== null && enderecoSelecionado.diasEntrega.terca.maximo !== null\\\">\\n                      das {{ convertMysqlTime(enderecoSelecionado.diasEntrega.terca.minimo) }} às {{ convertMysqlTime(enderecoSelecionado.diasEntrega.terca.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.terca.minimo == null || enderecoSelecionado.diasEntrega.terca.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"enderecoSelecionado.diasEntrega.terca.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.quarta.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.quarta.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Quarta-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"enderecoSelecionado.diasEntrega.quarta.checked == 1\\\">\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.quarta.minimo !== null && enderecoSelecionado.diasEntrega.quarta.maximo !== null\\\">\\n                      das {{ convertMysqlTime(enderecoSelecionado.diasEntrega.quarta.minimo) }} às {{ convertMysqlTime(enderecoSelecionado.diasEntrega.quarta.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.quarta.minimo == null || enderecoSelecionado.diasEntrega.quarta.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"enderecoSelecionado.diasEntrega.quarta.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.quinta.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.quinta.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Quinta-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"enderecoSelecionado.diasEntrega.quinta.checked == 1\\\">\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.quinta.minimo !== null && enderecoSelecionado.diasEntrega.quinta.maximo !== null\\\">\\n                      das {{ convertMysqlTime(enderecoSelecionado.diasEntrega.quinta.minimo) }} às {{ convertMysqlTime(enderecoSelecionado.diasEntrega.quinta.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.quinta.minimo == null || enderecoSelecionado.diasEntrega.quinta.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"enderecoSelecionado.diasEntrega.quinta.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.sexta.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.sexta.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Sexta-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"enderecoSelecionado.diasEntrega.sexta.checked == 1\\\">\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.sexta.minimo !== null && enderecoSelecionado.diasEntrega.sexta.maximo !== null\\\">\\n                      das {{ convertMysqlTime(enderecoSelecionado.diasEntrega.sexta.minimo) }} às {{ convertMysqlTime(enderecoSelecionado.diasEntrega.sexta.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.sexta.minimo == null || enderecoSelecionado.diasEntrega.sexta.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"enderecoSelecionado.diasEntrega.sexta.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.sabado.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.sabado.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Sábado:</span>\\n                  </div>\\n                  <div *ngIf=\\\"enderecoSelecionado.diasEntrega.sabado.checked == 1\\\">\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.sabado.minimo !== null && enderecoSelecionado.diasEntrega.sabado.maximo !== null\\\">\\n                      das {{ convertMysqlTime(enderecoSelecionado.diasEntrega.sabado.minimo) }} às {{ convertMysqlTime(enderecoSelecionado.diasEntrega.sabado.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.sabado.minimo == null || enderecoSelecionado.diasEntrega.sabado.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"enderecoSelecionado.diasEntrega.sabado.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.domingo.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"enderecoSelecionado.diasEntrega.domingo.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Domingo:</span>\\n                  </div>\\n                  <div *ngIf=\\\"enderecoSelecionado.diasEntrega.domingo.checked == 1\\\">\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.domingo.minimo !== null && enderecoSelecionado.diasEntrega.domingo.maximo !== null\\\">\\n                      das {{ convertMysqlTime(enderecoSelecionado.diasEntrega.domingo.minimo) }} às {{ convertMysqlTime(enderecoSelecionado.diasEntrega.domingo.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"enderecoSelecionado.diasEntrega.domingo.minimo == null || enderecoSelecionado.diasEntrega.domingo.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"enderecoSelecionado.diasEntrega.domingo.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Tipo de material</label>\\n              <div *ngIf=\\\"enderecoSelecionado.dsTipoMaterial == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.dsTipoMaterial != null\\\">{{ enderecoSelecionado.dsTipoMaterial | uppercase }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Tipo de descarga</label>\\n              <div *ngIf=\\\"enderecoSelecionado.dsTipoDescarga == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.dsTipoDescarga != null\\\">{{ enderecoSelecionado.dsTipoDescarga | uppercase }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Modo de descarga</label>\\n              <div *ngIf=\\\"enderecoSelecionado.dsModoDescarga == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.dsModoDescarga != null\\\">{{ enderecoSelecionado.dsModoDescarga | uppercase }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Tipos de veículo</label>\\n              <div *ngIf=\\\"enderecoSelecionado.tiposVeiculosDesc == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.tiposVeiculosDesc != null\\\">{{ enderecoSelecionado.tiposVeiculosDesc | uppercase }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6 mb-0\\\">\\n              <label>Dados especiais</label>\\n              <div *ngIf=\\\"enderecoSelecionado.dadosEspeciaisDesc == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.dadosEspeciaisDesc != null\\\">{{ enderecoSelecionado.dadosEspeciaisDesc | uppercase }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6 mb-0\\\">\\n              <label>Observação</label>\\n              <div *ngIf=\\\"enderecoSelecionado.observacaoLib == null || enderecoSelecionado.observacaoLib == '' \\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"enderecoSelecionado.observacaoLib != null\\\">{{ enderecoSelecionado.observacaoLib | uppercase }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <hr>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-row\\\" *ngIf=\\\"(showAnexos && anexos.length > 0 || showAnexosMarketing && anexosMarketing.length > 0)\\\">\\n\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-6\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"mtc-title mb-0\\\">Anexos do Vendedor</div>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <custom-table [config]=\\\"tableConfigAnexos\\\" *ngIf=\\\"showAnexos && anexos.length > 0\\\">\\n                      <ng-template #tbody let-tbody>\\n                        <tr *ngFor=\\\"let anexo of anexos\\\">\\n                          <td style=\\\"width: 95%\\\">\\n                            {{ anexo.codAnexo }} - {{ anexo.nomeAnexo | uppercase }}\\n                          </td>\\n                          <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                            <a\\n                              [href]=\\\"anexo.linkAnexo\\\"\\n                              *ngIf=\\\"anexo.linkAnexo != null\\\"\\n                              target=\\\"_blank\\\"\\n                              class=\\\"btn-icon-sm mx-2 text-black\\\"\\n                              tooltip=\\\"visualizar\\\">\\n                              <i class=\\\"far fa-eye\\\"></i>\\n                            </a>\\n                          </td>\\n                        </tr>\\n                      </ng-template>\\n                    </custom-table>\\n                    <message\\n                    icon=\\\"fas fa-exchange-alt\\\"\\n                    text=\\\"Nenhum documento encontrado\\\"\\n                    *ngIf=\\\"showAnexos && anexos.length === 0\\\">\\n                  </message>\\n                </div>\\n              </div>\\n              <div class=\\\"col-6\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"mtc-title mb-0\\\">Anexos do Marketing</div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <custom-table [config]=\\\"tableConfigAnexos\\\" *ngIf=\\\"showAnexosMarketing && anexosMarketing.length > 0\\\">\\n                    <ng-template #tbody let-tbody>\\n                      <tr *ngFor=\\\"let anexo of anexosMarketing\\\">\\n                        <td style=\\\"width: 95%\\\">\\n                          {{ anexo.codAnexo }} - {{ anexo.nomeAnexo | uppercase }}\\n                        </td>\\n                        <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                          <a\\n                            [href]=\\\"anexo.linkAnexo\\\"\\n                            *ngIf=\\\"anexo.linkAnexo != null\\\"\\n                            target=\\\"_blank\\\"\\n                            class=\\\"btn-icon-sm mx-2 text-black\\\"\\n                            tooltip=\\\"visualizar\\\">\\n                            <i class=\\\"far fa-eye\\\"></i>\\n                          </a>\\n                        </td>\\n                      </tr>\\n                    </ng-template>\\n                  </custom-table>\\n                  <message\\n                    icon=\\\"fas fa-exchange-alt\\\"\\n                    text=\\\"Nenhum documento encontrado\\\"\\n                    *ngIf=\\\"showAnexosMarketing && anexosMarketing.length === 0\\\">\\n                  </message>\\n                </div>\\n              </div>\\n            </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"modal-footer\\\" *ngIf=\\\"enderecoSelecionado.situacao === 3\\\">\\n          <button class=\\\"btn btn-primary\\\"(click)=\\\"onAction(confirm, 'Aprovação')\\\">Aprovar</button>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"onAction(confirm, 'Reprovação')\\\">Reprovar</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n<ng-template #confirm>\\n  <div class=\\\"modal-header\\\">\\n\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title\\\">\\n      Justificativa de {{ acao }}\\n    </h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"onModalClose('confirm')\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"modal-container\\\">\\n\\n    <form [formGroup]=\\\"formExcecao\\\" autocomplete=\\\"off\\\">\\n    <div class=\\\"col-lg-12 mt-2\\\" formArrayName=\\\"anexosAprovacao\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12 d-flex align-items-start\\\">\\n          <div class=\\\"mtc-title mb-0\\\">Anexos</div>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <label\\n            for=\\\"novoAnexo\\\"\\n            class=\\\"d-flex justify-content-start align-items-center\\\"\\n            style=\\\"cursor: pointer\\\"\\n            [hidden]=\\\"visualizar\\\"\\n          >\\n            <p class=\\\"btn btn-sm btn-outline-primary m-0\\\">\\n              <i class=\\\"fas fa-plus\\\"></i>\\n              <span>Anexo</span>\\n            </p>\\n          </label>\\n          <input\\n            id=\\\"novoAnexo\\\"\\n            type=\\\"file\\\"\\n            (change)=\\\"appendFileAprovacao($event.target.files)\\\"\\n            class=\\\"d-none\\\"\\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"formExcecao.value.anexosAprovacao.length > 0\\\">\\n        <div class=\\\"col\\\">\\n          <custom-table [config]=\\\"tableConfigAnexos\\\">\\n            <ng-template #tbody let-tbody>\\n              <tr\\n                *ngFor=\\\"let anexo of anexosAprovacao.controls; let i = index\\\"\\n                [formGroupName]=\\\"i\\\"\\n              >\\n                <td style=\\\"width: 90%\\\">\\n                  {{ formExcecao.value.anexosAprovacao[i].codAnexo }} -\\n                  {{ formExcecao.value.anexosAprovacao[i].nomeAnexo | uppercase }}\\n                </td>\\n                <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                  <a\\n                    (click)=\\\"navegarAnexo(anexo)\\\"\\n                    *ngIf=\\\"formExcecao.value.anexosAprovacao[i].codAnexo != null\\\"\\n                    target=\\\"_blank\\\"\\n                    class=\\\"btn-icon-sm mx-2 text-black\\\"\\n                    tooltip=\\\"visualizar\\\"\\n                  >\\n                    <i class=\\\"far fa-eye\\\"></i>\\n                  </a>\\n                </td>\\n                <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                  <btn-icon\\n                    icon=\\\"fas fa-trash\\\"\\n                    size=\\\"small\\\"\\n                    tooltip=\\\"Excluir\\\"\\n                    (click)=\\\"\\n                      onDeleteAnexoAprovacao(formExcecao.value.anexosAprovacao[i].codAnexo, i)\\n                    \\\"\\n                    [hidden]=\\\"visualizar\\\"\\n                  >\\n                  </btn-icon>\\n                </td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </div>\\n      </div>\\n      </div>\\n    </form>\\n  </div>\\n\\n  <div class=\\\"modal-container ml-3 mt-3 modal-title\\\" *ngIf=\\\"acao === 'Aprovação'\\\">\\n\\n    <btn-icon\\n        [icon]=\\\"validaExcecao ? 'fas fa-check-square' : 'far fa-square'\\\"\\n        size=\\\"small\\\"\\n        (click)=\\\"onCheckExcecao()\\\">\\n    </btn-icon>\\n\\n      <label class=\\\"ml-1\\\" for=\\\"situacoes\\\" style=\\\"font-weight: bold; font-size: 0.7rem;\\\">ADICIONAR EXCEÇÃO</label>\\n  </div>\\n\\n  <div class=\\\"modal-container\\\" *ngIf=\\\"acao === 'Aprovação'\\\">\\n    <form [formGroup]=\\\"formExcecao\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"col-lg-12 mb-2 mb-md-0\\\"\\n      *ngIf=\\\"validaExcecao\\\">\\n        <ng-select\\n          placeholder=\\\"SELECIONE...\\\"\\n          [searchable]=\\\"false\\\"\\n          [clearable]=\\\"false\\\"\\n          [items]=\\\"excecoes\\\"\\n          [virtualScroll]=\\\"false\\\"\\n          bindLabel=\\\"excecao\\\"\\n          bindValue=\\\"id\\\"\\n          formControlName=\\\"excecao\\\">\\n        </ng-select>\\n      </div>\\n    </form>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\">\\n    <label class=\\\"ml-1\\\" for=\\\"motivo\\\" style=\\\"font-weight: bold; font-size: 0.7rem;\\\">MOTIVO</label>\\n    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"msgModal\\\"></textarea>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"modal-footer\\\">\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"onSubmitModal()\\\">Confirmar</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialAuditoriaRoutingModule } from './auditoria-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\nimport { ComercialAuditoriaComponent } from './auditoria.component';\nimport { ComercialAuditoriaEnderecosEntregaComponent } from './enderecos-entrega/enderecos-entrega.component';\n\n@NgModule({\n  declarations: [\n    ComercialAuditoriaComponent,\n    ComercialAuditoriaEnderecosEntregaComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialAuditoriaRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    CurrencyMaskModule,\n  ],\n  providers: [PNotifyService],\n})\nexport class ComercialAuditoriaModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialAuditoriaService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/auditoria/enderecos-entrega`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaEnderecosEntrega(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  aprovaReprovaEndereco(record: any) {\n    return this.http\n      .put(`${this.API}/aprova-reprova-endereco`, record)\n      .pipe(take(1));\n  }\n\n  getAnexos(codEndereco: number): Observable<Object | JsonResponse> {\n    return this.http.get(`${this.API}/anexos/${codEndereco}`).pipe(take(1));\n  }\n\n  getUltimaCompra(codCliente: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/ultima-compra/${codCliente}`)\n      .pipe(take(1));\n  }\n\n  getExcecao(): Observable<any> {\n    return this.http.get(`${this.API}/excecoes`)\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getAnexosAprovacao(codEndereco: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/anexo/documentos/${codEndereco}`)\n      .pipe(take(1));\n  }\n\n  postAnexosAprovacao(params, codEndereco: number): Observable<any> {\n    return this.http.post(\n      `${this.API}/anexo/documentos/salvar?codEndereco=${codEndereco}`,\n      params\n    ).pipe(take(1));\n  }\n\n  deleteAnexoAprovacao(codAnexo: number): Observable<any> {\n    let params = {\n      codAnexo: codAnexo,\n    };\n\n    return this.http\n      .put(`${this.API}/anexo/documentos/excluir`, params)\n      .pipe(take(1));\n  }\n\n  getCliente(codCliente){\n    return this.http.get(`https://crm360.monterrey.com.bo/api/comercial/clientes/detalhes/${codCliente}`).pipe(take(1));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2F1ZGl0b3JpYS9hdWRpdG9yaWEuY29tcG9uZW50LnNjc3MifQ== */\";"]}