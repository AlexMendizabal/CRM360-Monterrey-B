{"version":3,"sources":["webpack:///src/app/modules/comercial/gestao/ranking-clientes/lista/lista.component.scss","webpack:///src/app/modules/comercial/gestao/ranking-clientes/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/gestao/ranking-clientes/lista/lista.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/gestao/ranking-clientes/formulario/formulario.component.html","webpack:///src/app/modules/comercial/gestao/ranking-clientes/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/gestao/ranking-clientes/ranking-clientes.service.ts","webpack:///src/app/modules/comercial/gestao/ranking-clientes/lista/lista.component.html","webpack:///src/app/modules/comercial/gestao/ranking-clientes/ranking-clientes-routing.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/gestao/ranking-clientes/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/gestao/ranking-clientes/ranking-clientes.module.ts"],"names":["ComercialGestaoRankingClientesListaComponent","activatedRoute","router","location","formBuilder","rankingClientesService","pnotifyService","atividadesService","titleService","confirmModalService","detailPanelService","loaderNavbar","loaderFullScreen","breadCrumbTree","subtitles","id","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","getPNotify","registrarAcesso","setBreadCrumb","setFormFilter","setTitle","onDetailPanelEmitter","setRankingSelecionado","showDetailPanelSubscription","unsubscribe","subscribe","params","descricao","routerLink","config","event","showing","formValue","checkRouterParams","form","group","nomeClassificacao","situacao","pagina","registros","required","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","value","rankingSelecionado","codClassificacao","peso","nota1Fim","nota2Inicio","nota2Fim","nota3Inicio","nota3Fim","nota4Inicio","nota4Fim","nota5Inicio","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","hide","getListaRanking","pipe","next","response","hasOwnProperty","success","data","slice","error","mensagem","ranking","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","show","getAlteracoes","setTimeout","loadedFinished","index","confirmActivate","asObservable","result","activateRanking","refreshMainData","showConfirm","confirmInactive","inactivateRanking","i","selector","template","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialGestaoRankingClientesFormularioComponent","formChanged","setFormBuilder","appTitle","idSubModulo","snapshot","detalhes","back","pristine","submittingForm","save","reset","notice","confirm","ComercialGestaoRankingClientesService","http","API","httpParams","param","append","codRanking","post","put","updateRanking","saveRanking","codigo","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialGestaoRankingClientesRoutingModule","imports","forChild","exports","FormDeactivateGuard","route","state","formCanDeactivate","ComercialGestaoRankingClientesFormularioResolverGuard","getDetalhes","ComercialGestaoRankingClientesModule","declarations","forRoot","providers"],"mappings":"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","file":"ranking-clientes-ranking-clientes-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby9yYW5raW5nLWNsaWVudGVzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby9yYW5raW5nLWNsaWVudGVzL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialGestaoRankingClientesService } from '../ranking-clientes.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { IRanking } from './../models/ranking';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n\n@Component({\n  selector: 'comercial-gestao-ranking-clientes-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class ComercialGestaoRankingClientesListaComponent implements OnInit {\n\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 0,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  orderBy = 'codClassificacao';\n  orderType = 'ASC';\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<IRanking> = [];\n  dadosPagination: Array<IRanking> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  rankingSelecionado: IRanking;\n  alteracoes: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private rankingClientesService: ComercialGestaoRankingClientesService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n    ) { \n      this.pnotifyService.getPNotify(); \n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Ranking de  Clientes');\n    this.onDetailPanelEmitter();\n    this.setRankingSelecionado();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Gestão',\n          routerLink: `/comercial/gestao/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Ranking de Clientes',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      nomeClassificacao: [formValue.nomeClassificacao],\n      situacao: [formValue.situacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n    this.loaderFullScreen = false;\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      nomeClassificacao: null,\n      situacao: 1,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setRankingSelecionado(): void {\n    this.rankingSelecionado = {\n      codClassificacao: null,\n      nomeClassificacao: null,\n      peso: null,\n      nota1Fim: null,\n      nota2Inicio: null,\n      nota2Fim: null,\n      nota3Inicio: null,\n      nota3Fim: null,\n      nota4Inicio: null,\n      nota4Fim: null,\n      nota5Inicio: null,\n      situacao: 1\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.nomeClassificacao) {\n      params.nomeClassificacao = this.form.value.nomeClassificacao;\n    }\n\n    if (this.form.value.situacao) {\n      params.situacao = this.form.value.situacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n    \n    this.rankingClientesService\n      .getListaRanking(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n  \n\n  classStatusBorder(ranking: IRanking): string {\n    let borderClass: string;\n\n    if (ranking.situacao === 1) {\n      borderClass = 'border-success';\n    } else if (ranking.situacao === 0) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n\n  onDetails(ranking: IRanking): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.setRankingSelecionado();\n    this.rankingSelecionado = ranking;\n    this.alteracoes = [];\n\n    this.rankingClientesService\n      .getAlteracoes(ranking.codClassificacao)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.alteracoes = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        error: (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onEdit(ranking: IRanking): void {\n\n    this.router.navigate(['../editar', ranking.codClassificacao], {\n      relativeTo: this.activatedRoute,\n    });\n\n  }\n\n  onActivate(index: number, ranking: IRanking): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateRanking(index, ranking) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(ranking);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].situacao = 0;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateRanking(index: number, ranking: IRanking): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].situacao = 1;\n\n    return this.rankingClientesService.activateRanking(ranking.codClassificacao);\n  }\n\n  onInactivate(index: number, ranking: IRanking): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateRanking(index, ranking) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(ranking);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].situacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateRanking(index: number, ranking: IRanking): Observable<any> {\n    this.loaderNavbar = true;\n\n    this.dadosPagination[index].situacao = 0;\n\n    return this.rankingClientesService.inactivateRanking(ranking.codClassificacao);\n  }\n\n  refreshMainData(ranking: IRanking): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (ranking.codClassificacao === this.dados[i].codClassificacao) {\n        this.dados[i].situacao = ranking.situacao;\n        return;\n      }\n    }\n  }\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-6\\\">\\n                <label for=\\\"nomeClassificacao\\\">Parâmetro</label>\\n                <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"nomeClassificacao\\\"\\n                formControlName=\\\"nomeClassificacao\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('nomeClassificacao') + ' ' + onFieldRequired(form.controls.nomeClassificacao)\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('nomeClassificacao')\\\" message=\\\"Parâmetro é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-3\\\">\\n                <label for=\\\"peso\\\">Peso</label>\\n                <input type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"peso\\\"\\n                formControlName=\\\"peso\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('peso') + ' ' + onFieldRequired(form.controls.peso)\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('peso')\\\" message=\\\"Peso é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n                <label for=\\\"situacao\\\">Situação</label>\\n                <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"situacao\\\"\\n                formControlName=\\\"situacao\\\"\\n                [ngClass]=\\\"onFieldError('situacao') + ' ' + onFieldRequired(form.controls.situacao)\\\">\\n                <option value=\\\"1\\\">Ativo</option>\\n                <option value=\\\"0\\\">Inativo</option>\\n                </select>\\n                <invalid-form-control [show]=\\\"onFieldInvalid('situacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control> \\n            </div>\\n        </div>\\n        <br>\\n        <div class=\\\"container\\\">\\n            <div class=\\\"form-row text-center justify-content-md-center\\\">\\n                <div class=\\\"form-group col-4\\\">\\n                    <label>Nota</label>\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                    <label>De</label>\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                    <label>Até</label>\\n                </div>\\n            </div>\\n            <!-- nota1 -->\\n            <div class=\\\"form-row text-center justify-content-md-center\\\">\\n                <div class=\\\"form-group col-4\\\">\\n                    <label>1</label>\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                    <input type=\\\"text\\\" readonly\\n                    class=\\\"form-control\\\"\\n                    value=\\\"0.01\\\">\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                    <input type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nota1Fim\\\"\\n                    formControlName=\\\"nota1Fim\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    autocomplete=\\\"new-password\\\"\\n                    [ngClass]=\\\"onFieldError('nota1Fim') + ' ' + onFieldRequired(form.controls.nota1Fim)\\\">\\n                    <invalid-form-control [show]=\\\"onFieldInvalid('nota1Fim')\\\" message=\\\"Nota é obrigatório.\\\"></invalid-form-control>\\n                </div>\\n              </div>\\n              <!-- nota2 -->\\n              <div class=\\\"form-row text-center justify-content-md-center\\\">\\n                <div class=\\\"form-group col-4\\\">\\n                    <label>2</label>\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                    <input type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nota2Inicio\\\"\\n                    formControlName=\\\"nota2Inicio\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    autocomplete=\\\"new-password\\\"\\n                    [ngClass]=\\\"onFieldError('nota2Inicio') + ' ' + onFieldRequired(form.controls.nota2Inicio)\\\">\\n                    <invalid-form-control [show]=\\\"onFieldInvalid('nota2Inicio')\\\" message=\\\"Nota é obrigatório.\\\"></invalid-form-control>\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                    <input type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nota2Fim\\\"\\n                    formControlName=\\\"nota2Fim\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    autocomplete=\\\"new-password\\\"\\n                    [ngClass]=\\\"onFieldError('nota2Fim') + ' ' + onFieldRequired(form.controls.nota2Fim)\\\">\\n                    <invalid-form-control [show]=\\\"onFieldInvalid('nota2Fim')\\\" message=\\\"Nota é obrigatório.\\\"></invalid-form-control>\\n                </div>\\n              </div>\\n              <!-- nota3 -->\\n              <div class=\\\"form-row text-center justify-content-md-center\\\">\\n                <div class=\\\"form-group col-4\\\">\\n                    <label>3</label>\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                    <input type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nota3Inicio\\\"\\n                    formControlName=\\\"nota3Inicio\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    autocomplete=\\\"new-password\\\"\\n                    [ngClass]=\\\"onFieldError('nota3Inicio') + ' ' + onFieldRequired(form.controls.nota3Inicio)\\\">\\n                    <invalid-form-control [show]=\\\"onFieldInvalid('nota3Inicio')\\\" message=\\\"Nota é obrigatório.\\\"></invalid-form-control>\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                    <input type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nota3Fim\\\"\\n                    formControlName=\\\"nota3Fim\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    autocomplete=\\\"new-password\\\"\\n                    [ngClass]=\\\"onFieldError('nota3Fim') + ' ' + onFieldRequired(form.controls.nota3Fim)\\\">\\n                    <invalid-form-control [show]=\\\"onFieldInvalid('nota3Fim')\\\" message=\\\"Nota é obrigatório.\\\"></invalid-form-control>\\n                </div>\\n              </div>\\n              <!-- nota4 -->\\n              <div class=\\\"form-row text-center justify-content-md-center\\\">\\n                <div class=\\\"form-group col-4\\\">\\n                    <label>4</label>\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                    <input type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nota4Inicio\\\"\\n                    formControlName=\\\"nota4Inicio\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    autocomplete=\\\"new-password\\\"\\n                    [ngClass]=\\\"onFieldError('nota4Inicio') + ' ' + onFieldRequired(form.controls.nota4Inicio)\\\">\\n                    <invalid-form-control [show]=\\\"onFieldInvalid('nota4Inicio')\\\" message=\\\"Nota é obrigatório.\\\"></invalid-form-control>\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                    <input type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nota4Fim\\\"\\n                    formControlName=\\\"nota4Fim\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    autocomplete=\\\"new-password\\\"\\n                    [ngClass]=\\\"onFieldError('nota4Fim') + ' ' + onFieldRequired(form.controls.nota4Fim)\\\">\\n                    <invalid-form-control [show]=\\\"onFieldInvalid('nota4Fim')\\\" message=\\\"Nota é obrigatório.\\\"></invalid-form-control>\\n                </div>\\n              </div>\\n              <!-- nota5 -->\\n              <div class=\\\"form-row text-center justify-content-md-center\\\">\\n                <div class=\\\"form-group col-4\\\">\\n                    <label>5</label>\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                    <input type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nota5Inicio\\\"\\n                    formControlName=\\\"nota5Inicio\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    autocomplete=\\\"new-password\\\"\\n                    [ngClass]=\\\"onFieldError('nota5Inicio') + ' ' + onFieldRequired(form.controls.nota5Inicio)\\\">\\n                    <invalid-form-control [show]=\\\"onFieldInvalid('nota5Inicio')\\\" message=\\\"Nota é obrigatório.\\\"></invalid-form-control>\\n                </div>\\n                <!-- <div class=\\\"form-group col-4\\\">\\n                    <input type=\\\"text\\\" readonly\\n                    class=\\\"form-control\\\"\\n                    value=\\\"999999\\\">\\n                </div> -->\\n                <div class=\\\"form-group col-4\\\">\\n                    <label> </label>\\n                </div>\\n              </div>\\n              \\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\";","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\nimport { IRanking } from './../models/ranking';\n\n// Services\nimport { ComercialGestaoRankingClientesService } from '../ranking-clientes.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n@Component({\n  selector: 'comercial-gestao-ranking-clientes-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class ComercialGestaoRankingClientesFormularioComponent implements OnInit , IFormCanDeactivate {\n  loaderNavbar: boolean;\n  loaderFullScreen = true;\n\n  appTitle: string;\n  breadCrumbTree: Array<any> = [];\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private rankingClientesService: ComercialGestaoRankingClientesService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) { \n    this.pnotifyService.getPNotify();\n  }\n  \n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar parâmetro';\n      /* } else {\n        this.appTitle = 'Novo parâmetro'; */\n      }\n\n      this.titleService.setTitle(this.appTitle);\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Gestão',\n          routerLink: `/comercial/gestao/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Ranking de Clientes',\n          routerLink: `/comercial/gestao/${params.idSubModulo}/ranking-clientes/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes: IRanking = this.activatedRoute.snapshot.data.detalhes.data;\n\n      this.form = this.formBuilder.group({\n        codClassificacao: [detalhes.codClassificacao],\n        nomeClassificacao: [detalhes.nomeClassificacao, [Validators.required]],\n        peso: [detalhes.peso, [Validators.required]],\n        nota1Fim: [detalhes.nota1Fim, [Validators.required]],\n        nota2Inicio: [detalhes.nota2Inicio, [Validators.required]],\n        nota2Fim: [detalhes.nota2Fim, [Validators.required]],\n        nota3Inicio: [detalhes.nota3Inicio, [Validators.required]],\n        nota3Fim: [detalhes.nota3Fim, [Validators.required]],\n        nota4Inicio: [detalhes.nota4Inicio, [Validators.required]],\n        nota4Fim: [detalhes.nota4Fim, [Validators.required]],\n        nota5Inicio: [detalhes.nota5Inicio, [Validators.required]],\n\n        situacao: [\n          detalhes.situacao ? detalhes.situacao : 1,\n          [Validators.required]], \n      });\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n\n    this.loaderFullScreen = false;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n      \n        this.rankingClientesService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe({\n            next: (response: any) => {\n              if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                this.form.reset();\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  if (params.hasOwnProperty('id')) {\n                    this.location.back();\n                  } else {\n                    this.router.navigate(['../lista'], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  }\n                });\n              } else if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === false\n              ) {\n                this.pnotifyService.notice(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              this.pnotifyService.error();\n            }\n          });\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n//interfaces\nimport { IRanking } from './models/ranking';\n\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ComercialGestaoRankingClientesService{\n\n    private readonly API = `https://crm360.monterrey.com.bo/api/comercial/gestao/ranking-clientes`;\n\n    constructor(protected http: HttpClient) {}\n\n    getListaRanking(params: any): Observable<any> {\n        let httpParams = new HttpParams();\n\n        for (let param in params) {\n        httpParams = httpParams.append(param, params[param]);\n        }\n\n        return this.http\n        .get(`${this.API}/lista`, { params: httpParams })\n        .pipe(take(1));\n    }\n\n    getAlteracoes(codRanking: number): Observable<any> {\n        return this.http.get(`${this.API}/alteracoes/${codRanking}`).pipe(take(1));\n    }\n\n    getDetalhes(codRanking: number): Observable<any> {\n        return this.http.get(`${this.API}/detalhes/${codRanking}`).pipe(take(1));\n    }\n\n    private saveRanking(ranking: IRanking) {\n        return this.http.post(`${this.API}/salvar`, ranking).pipe(take(1));\n    }\n\n    private updateRanking(ranking: IRanking) {\n        return this.http.put(`${this.API}/atualizar`, ranking).pipe(take(1));\n    }\n\n    save(ranking: IRanking): Observable<any> {\n        if (ranking.codClassificacao !== null) {\n        return this.updateRanking(ranking);\n        }\n\n        return this.saveRanking(ranking);\n    }\n\n    activateRanking(codigo: number): Observable<any> {\n        return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n    }\n\n    inactivateRanking(codigo: number): Observable<any> {\n        return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n    }\n\n  \n}","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Ranking de Clientes\\\">\\n  <!-- <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button> -->\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n     <div class=\\\"row\\\" #scrollToFilter>\\n      <div class=\\\"col\\\">\\n        <advanced-filter>\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-lg-3\\\">\\n                <label for=\\\"nomeClassificacao\\\">\\n                  <span class=\\\"mr-1\\\">Parâmetro</span>\\n                </label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"nomeClassificacao\\\"\\n                  (keydown.enter)=\\\"onFilter()\\\">\\n              </div>\\n              <div class=\\\"form-group col-lg-1\\\">\\n                <label for=\\\"situacao\\\">Situação</label>\\n                <select\\n                  class=\\\"form-control custom-select\\\"\\n                  id=\\\"situacao\\\"\\n                  formControlName=\\\"situacao\\\">\\n                  <option value=\\\"\\\">Todos</option>\\n                  <option value=\\\"1\\\">Ativos</option>\\n                  <option value=\\\"0\\\">Inativos</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group col-lg-1\\\">\\n                <label for=\\\"registros\\\">Registros</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"registros\\\"\\n                  formControlName=\\\"registros\\\">\\n                  <option>25</option>\\n                  <option>50</option>\\n                  <option>100</option>\\n                  <option>200</option>\\n                  <option>300</option>\\n                </select>\\n              </div>\\n            </div>\\n          </form>\\n        </advanced-filter>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <subtitles\\n          [data]=\\\"subtitles\\\"\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        </subtitles>\\n      </div>\\n    </div>\\n    <div class=\\\"row text-center justify-content-center\\\">\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col-4\\\">Parâmetro</th>\\n              <th scope=\\\"col-2\\\">Peso</th>\\n              <th scope=\\\"col-2\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let lista of dadosPagination; let i = index\\\" [class.table-active]=\\\"lista.codClassificacao == rankingSelecionado.codClassificacao\\\">\\n              <td [ngClass]=\\\"classStatusBorder(lista)\\\">\\n                {{ lista.nomeClassificacao | uppercase}}\\n              </td>\\n              <td>\\n                {{ lista.peso }}\\n              </td>\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span *ngIf=\\\"lista.situacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, lista)\\\">\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\n                  </button>\\n                </span>\\n                <span *ngIf=\\\"lista.situacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, lista)\\\">\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(lista)\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <empty-result\\n          message=\\\"Nenhuma informação encontrada\\\"\\n          class=\\\"my-3\\\"\\n          *ngIf=\\\"dadosEmpty\\\">\\n        </empty-result>\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n          <pagination\\n            [maxSize]=\\\"maxSize\\\"\\n            [(totalItems)]=\\\"totalItems\\\"\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n            [boundaryLinks]=\\\"true\\\"\\n            [(ngModel)]=\\\"currentPage\\\"\\n            previousText=\\\"&lsaquo;\\\"\\n            nextText=\\\"&rsaquo;\\\"\\n            firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\">\\n          </pagination>\\n        </div>\\n      </div>\\n      <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n        <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\n          <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n                <th scope=\\\"col\\\">Usuário</th>\\n                <th scope=\\\"col\\\">Alteração</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\n                <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\n                <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\n                <td>{{ alteracao.mensagem | uppercase }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </detail-panel>\\n      </div>\\n    </div>\\n  </app-body>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialGestaoRankingClientesFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialGestaoRankingClientesListaComponent } from './lista/lista.component';\nimport { ComercialGestaoRankingClientesFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialGestaoRankingClientesListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialGestaoRankingClientesFormularioComponent,\n    resolve: {\n      detalhes: ComercialGestaoRankingClientesFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialGestaoRankingClientesFormularioComponent,\n    resolve: {\n      detalhes: ComercialGestaoRankingClientesFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialGestaoRankingClientesRoutingModule {}","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialGestaoRankingClientesService } from '../ranking-clientes.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialGestaoRankingClientesFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(private rankingClientesService: ComercialGestaoRankingClientesService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.rankingClientesService.getDetalhes(route.params.id);\n    }\n    \n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codClassificacao: null,\n        nomeClassificacao: null,\n        peso: null,\n        nota1Fim: null,\n        nota2Inicio: null,\n        nota2Fim: null,\n        nota3Inicio: null,\n        nota3Fim: null,\n        nota4Inicio: null,\n        nota4Fim: null,\n        nota5Inicio: null,\n        situacao: null\n      },\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialGestaoRankingClientesRoutingModule } from './ranking-clientes-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialGestaoRankingClientesListaComponent } from './lista/lista.component';\nimport { ComercialGestaoRankingClientesFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialGestaoRankingClientesListaComponent,\n    ComercialGestaoRankingClientesFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialGestaoRankingClientesRoutingModule,\n    SharedModule,\n    TemplatesModule,\n  ],\n  providers: [PNotifyService],\n})\nexport class ComercialGestaoRankingClientesModule {}"]}