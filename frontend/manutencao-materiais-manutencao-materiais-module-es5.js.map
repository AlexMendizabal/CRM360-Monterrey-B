{"version":3,"sources":["webpack:///src/app/modules/abastecimento/cadastros/manutencao-materiais/modal-logs/modal-logs.component.scss","webpack:///src/app/modules/abastecimento/cadastros/manutencao-materiais/manutencao-materiais.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/abastecimento/cadastros/manutencao-materiais/manutencao-materiais-routing.module.ts","webpack:///src/app/modules/abastecimento/cadastros/manutencao-materiais/manutencao-materiais.component.html","webpack:///src/app/modules/abastecimento/cadastros/manutencao-materiais/modal-logs/modal-logs.component.ts","webpack:///src/app/modules/abastecimento/cadastros/manutencao-materiais/manutencao-materiais.service.ts","webpack:///src/app/modules/abastecimento/cadastros/manutencao-materiais/manutencao-materiais.module.ts","webpack:///src/app/modules/abastecimento/cadastros/manutencao-materiais/modal-logs/modal-logs.component.html","webpack:///src/app/modules/abastecimento/cadastros/manutencao-materiais/manutencao-materiais.component.scss"],"names":["AbastecimentoCadastrosManutencaoMateriaisComponent","activatedRoute","router","formBuilder","pnotifyService","confirmModalService","activityService","routerService","titleService","modalService","service","loaderFullScreen","loaderNavbar","loading","noResult","modalMaterialBool","modalLogsBool","compressedTable","noResultDetalhes","currentUser","JSON","parse","localStorage","getItem","idUser","data","ID","DS_TIPO_MATE","DS_MATE","DS_STAT","CODE_MATE","IN_STAT","NM_CLAS","NM_LINH","NM_SUB_LINH","VOL_VENDA","TT_CART","ESTO_ATUAL","TT_PLAN_CORT","DS_PERF_INAT","ID_PERF_INAT","dataDetail","NM_EMPR","NM_DEPO","VOLU_VEND","VOLU_CART","PLAN_CORT","modal","itemMaterial","situations","NM_SITU","unactivatedPerfil","NM_PERFI_INAT","reverse","key","reverseA","keyA","itemsPerPage","totalItems","currentPage","begin","end","currentPageA","beginA","endA","tableConfig","subtitleBorder","subtitles","text","color","form","group","ID_TIPO_MATE","ID_LINH","ID_SUB_LINH","ID_CLAS","required","ID_PERFI_INAT","formCheck","ITEM_MASS","setTimeout","setTitle","setDisabledItemsForm","getTiposMateriais","getLinhas","recordAccess","setBreadCrumb","checkRouterParams","get","disable","$event","reset","setValidators","nullValidator","enable","registrarAcesso","subscribe","params","breadCrumbTree","descricao","routerLink","$activatedRouteSubscription","queryParams","Object","keys","length","_response","getBase64UrlParams","search","setFormValues","unsubscribe","paramsClasse","getClasses","pipe","res","status","classes","error","paramsSubLinha","IN_START","getSubLinhas","subLinhas","patchValue","_params","_obj","value","prop","tiposMateriais","linhas","notice","navigate","relativeTo","setBase64UrlParams","getParams","confirmChange","itemMassaBool","forEach","e","item","icon","select","stat","setValue","showConfirm","title","event","page","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","selector","template","ConfirmModalService","type","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","routes","path","children","component","AbastecimentoCadastrosManutencaoMateriaisRoutingModule","imports","forChild","exports","AbastecimentoCadastrosManutencaoMateriaisModalLogsComponent","loadingLogs","noResultLogs","dataLogs","AbastecimentoCadastrosManutencaoMateriaisService","httpClient","BASE_URL","API","observe","toString","IN_GERA_RELA_EXCE","ID_USUA","AbastecimentoCadastrosManutencaoMateriaisModule","declarations","forRoot","providers","provide","useValue"],"mappings":"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","file":"manutencao-materiais-manutencao-materiais-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWJhc3RlY2ltZW50by9jYWRhc3Ryb3MvbWFudXRlbmNhby1tYXRlcmlhaXMvbW9kYWwtbG9ncy9tb2RhbC1sb2dzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { BsModalService, PageChangedEvent } from 'ngx-bootstrap';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\nimport { AbastecimentoCadastrosManutencaoMateriaisService } from './manutencao-materiais.service';\r\n\r\n@Component({\r\n  selector: 'manutencao-materiais',\r\n  templateUrl: './manutencao-materiais.component.html',\r\n  styleUrls: ['./manutencao-materiais.component.scss']\r\n})\r\nexport class AbastecimentoCadastrosManutencaoMateriaisComponent implements OnInit {\r\n  loaderFullScreen: boolean = true;\r\n  loaderNavbar: boolean = false;\r\n  loading: boolean = false;\r\n  noResult: boolean = false;\r\n  modalMaterialBool: boolean = false;\r\n  modalLogsBool: boolean = false;\r\n  compressedTable: boolean = false;\r\n  noResultDetalhes: boolean = false;\r\n\r\n  breadCrumbTree: any;\r\n\r\n  form: FormGroup;\r\n  formCheck: FormGroup;\r\n\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  idUser: any = this.currentUser['info']['id'];\r\n\r\n  tiposMateriais: Array<any>;\r\n  linhas: Array<any>;\r\n  subLinhas: Array<any>;\r\n  classes: Array<any>;\r\n  data: any = [\r\n    { ID: 1, DS_TIPO_MATE: \"DISTRIBUIDORA\", DS_MATE: \"CA-50 10,00MM\" ,DS_STAT: \"Ativa\", CODE_MATE: 15125, IN_STAT: 0, NM_CLAS: \"CA-50\", NM_LINH: \"CIVIL\", NM_SUB_LINH: null, VOL_VENDA: 300, TT_CART: 120, ESTO_ATUAL: 30, TT_PLAN_CORT:0, DS_PERF_INAT: 'Inativação potencial' , ID_PERF_INAT: 1},\r\n    { ID: 2, DS_TIPO_MATE: \"DISTRIBUIDORA\", DS_MATE: \"CA-50 10,00MM\" ,DS_STAT: \"Ativa\", CODE_MATE: 15125, IN_STAT: 1, NM_CLAS: \"CA-50\", NM_LINH: \"CIVIL\", NM_SUB_LINH: null, VOL_VENDA: 300, TT_CART: 120, ESTO_ATUAL: 30, TT_PLAN_CORT:0, DS_PERF_INAT: 'Inativação imediata' , ID_PERF_INAT: 0},\r\n    { ID: 3, DS_TIPO_MATE: \"DISTRIBUIDORA\", DS_MATE: \"CA-50 10,00MM\" ,DS_STAT: \"Ativa\", CODE_MATE: 15125, IN_STAT: 1, NM_CLAS: \"CA-50\", NM_LINH: \"CIVIL\", NM_SUB_LINH: null, VOL_VENDA: 300, TT_CART: 120, ESTO_ATUAL: 30, TT_PLAN_CORT:0, DS_PERF_INAT: 'Em atividade', ID_PERF_INAT: 2},\r\n  ];\r\n  dataDetail: any = [\r\n    {NM_EMPR:\"MANETONI - TIETE\", NM_DEPO:\"TIETE\", VOLU_VEND: 125.58, VOLU_CART:125.58, PLAN_CORT:526.58},\r\n    {NM_EMPR:\"MANETONI - TAIPAS\", NM_DEPO:\"TAIPAS\", VOLU_VEND: 125.58, VOLU_CART:125.58, PLAN_CORT:526.58},\r\n  ];\r\n  modal: any = [];\r\n  itemMaterial: any = [];\r\n\r\n  situations: Array<any> = [\r\n    {ID:'0', NM_SITU: 'Inativo'},\r\n    {ID:'1', NM_SITU: 'Ativo'}\r\n  ];\r\n\r\n  unactivatedPerfil: Array<any> = [\r\n    {ID:'0', NM_PERFI_INAT: 'Inativação imediata'},\r\n    {ID:'1', NM_PERFI_INAT: 'Inativação potencial'},\r\n    {ID:'2', NM_PERFI_INAT: 'Em atividade'}\r\n  ];\r\n\r\n  /* Ordenação principal*/\r\n  reverse: boolean = false;\r\n  key: string = 'NM_CLAS';\r\n  /* Ordenação principal*/\r\n\r\n  /* Ordenação modal */\r\n  reverseA: boolean = false;\r\n  keyA: string = 'NM_CLAS';\r\n  /* Ordenação modal */\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 15;\r\n  totalItems: number = 15;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 15;\r\n  /* Paginação */\r\n\r\n  /* Paginação Modal*/\r\n  currentPageA: number = 1;\r\n  beginA: number = 0;\r\n  endA: number = 15;\r\n  /* Paginação Modal*/\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      text: 'Em atividade',\r\n      color: 'blue'\r\n    },\r\n    {\r\n      text: 'Inativação potencial',\r\n      color: 'yellow'\r\n    },\r\n    {\r\n      text: 'Inativação imediata',\r\n      color: 'red'\r\n    }\r\n\r\n  ];\r\n  \r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private activityService: AtividadesService,\r\n    private routerService: RouterService,\r\n    private titleService: TitleService,\r\n    private modalService: BsModalService,\r\n    private service: AbastecimentoCadastrosManutencaoMateriaisService\r\n  ) { \r\n    this.form = this.formBuilder.group({\r\n      ID_TIPO_MATE: [null],\r\n      ID_LINH: [null],\r\n      ID_SUB_LINH: [null],\r\n      ID_CLAS: [null],\r\n      IN_STAT: [null, Validators.required],\r\n      ID_PERFI_INAT: [null],\r\n    });\r\n    this.formCheck = this.formBuilder.group({\r\n      ITEM_MASS: [null],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.loaderFullScreen = false;\r\n    }, 1000);\r\n    this.titleService.setTitle('Manutenção de Materiais');\r\n    this.setDisabledItemsForm();\r\n    this.getTiposMateriais();\r\n    this.getLinhas();\r\n    this.recordAccess();\r\n    this.setBreadCrumb();\r\n    this.checkRouterParams();\r\n  }\r\n\r\n  setDisabledItemsForm(): void {\r\n    this.form.get('ID_SUB_LINH').disable();\r\n    this.form.get('ID_CLAS').disable();\r\n    this.form.get('ID_PERFI_INAT').disable();\r\n  }\r\n\r\n  setActivedPerfil($event): void {\r\n    if($event.ID == 0) {\r\n      this.form.get('ID_PERFI_INAT').reset();\r\n      this.form.get('ID_PERFI_INAT').disable();\r\n      this.form.get('ID_PERFI_INAT').setValidators(Validators.nullValidator);\r\n    } else {\r\n      this.form.get('ID_PERFI_INAT').setValidators(Validators.required);\r\n      this.form.get('ID_PERFI_INAT').reset();\r\n      this.form.get('ID_PERFI_INAT').enable();\r\n    }\r\n  } \r\n\r\n  recordAccess(): void {\r\n    this.activityService.registrarAcesso().subscribe();\r\n  }\r\n  \r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/abastecimento/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/abastecimento/cadastros/${params['idSubModulo']}`\r\n        },\r\n        {\r\n          descricao: 'Manutenção de Materiais'\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  checkRouterParams(): void {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          const _response = this.routerService.getBase64UrlParams(queryParams);\r\n          this.search(_response);\r\n          this.setFormValues(_response);\r\n        }\r\n      }\r\n    );\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  setFormValues(queryParams?: any): void {  \r\n    const ID_LINH = queryParams['ID_LINH'] ?? '';\r\n      \r\n    /* classes */\r\n    if (Object.keys(ID_LINH).length > 0) {\r\n      const paramsClasse = {\r\n        ID_LINH: queryParams['ID_LINH'],\r\n        ID_SUB_LINH: queryParams['ID_SUB_LINH'] ?? \"\",\r\n        IN_STAT: 1,\r\n      };\r\n\r\n      this.loaderNavbar = true;\r\n\r\n      this.service\r\n        .getClasses(paramsClasse)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          res => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status === 200) {\r\n                if (res['body']['responseCode'] === 200) {\r\n                  this.classes = res['body']['result'];\r\n                  this.form.get('ID_CLAS').enable();\r\n                }\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar Classes');\r\n          }\r\n        );\r\n    } else {\r\n      this.form.get('ID_CLAS').disable();\r\n    }\r\n\r\n    /* sublinhas */\r\n    if (Object.keys(ID_LINH).length > 0) {\r\n      const paramsSubLinha = {\r\n        ID_LINH: queryParams['ID_LINH'],\r\n        IN_START: 1,\r\n      };\r\n\r\n      this.loaderNavbar = true;\r\n\r\n      this.service\r\n        .getSubLinhas(paramsSubLinha)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          res => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status == 200) {\r\n                if (res['body']['responseCode'] === 200) {\r\n                  this.subLinhas = res['body']['result'];\r\n                  this.form.get('ID_SUB_LINH').enable();\r\n                }\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar subLinha');\r\n          }\r\n        );\r\n    } else {\r\n      this.form.get('ID_SUB_LINH').disable();\r\n    }\r\n\r\n    this.form.patchValue(queryParams);\r\n  }\r\n\r\n  getParams(): any {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if(_obj[prop]) {\r\n        _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  getTiposMateriais(): void  {\r\n    const params = {\r\n      IN_STAT: 1\r\n    };\r\n    this.loaderNavbar = true;\r\n    this.tiposMateriais = [];\r\n\r\n    this.service\r\n      .getTiposMateriais(params)\r\n      .pipe(finalize(() => (this.loaderNavbar = false)))\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (Object.keys(res).length > 0) {\r\n            if (res.status === 200) {\r\n              this.tiposMateriais = res['body']['result'];\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          this.pnotifyService.error('Erro ao carregar Linhas');\r\n        }\r\n      );\r\n  }\r\n\r\n  getLinhas(): void  {\r\n    const params = {\r\n      IN_STAT: 1\r\n    };\r\n    this.loaderNavbar = true;\r\n    this.linhas = [];\r\n\r\n    this.service\r\n      .getLinhas(params)\r\n      .pipe(finalize(() => (this.loaderNavbar = false)))\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (Object.keys(res).length > 0) {\r\n            if (res.status === 200) {\r\n              this.linhas = res['body']['result'];\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          this.pnotifyService.error('Erro ao carregar Linhas');\r\n        }\r\n      );\r\n  }\r\n\r\n  getSubLinhas(): void  {\r\n    this.loaderNavbar = true;\r\n    this.subLinhas = [];\r\n\r\n    if (\r\n      this.form.value['ID_LINH'] != null &&\r\n      this.form.value['ID_LINH'].length > 0\r\n    ) {\r\n      let ID_LINH = this.form.get('ID_LINH').value;\r\n      let IN_STAT = 1;\r\n      let params = {\r\n        ID_LINH: ID_LINH,\r\n        IN_STAT: IN_STAT\r\n      };\r\n\r\n      this.service\r\n        .getSubLinhas(params)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          res => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status === 200) {\r\n                if (res['body']['responseCode'] === 200) {\r\n                  this.subLinhas = res['body']['result'];\r\n                  this.form.get('ID_SUB_LINH').reset();\r\n                  this.form.get('ID_SUB_LINH').enable();\r\n                } else if (res['body']['responseCode'] === 404) {\r\n                  this.form.get('ID_SUB_LINH').reset();\r\n                  this.form.get('ID_SUB_LINH').disable();\r\n                  this.pnotifyService.notice('Não há sublinha cadastrada');\r\n                }\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar sublinhas');\r\n          }\r\n        );\r\n    } else {\r\n      this.loaderNavbar = false;\r\n      this.form.get('ID_SUB_LINH').reset();\r\n      this.form.get('ID_SUB_LINH').disable();\r\n    }\r\n  }\r\n\r\n  getClasses(): void  {\r\n    this.classes = [];\r\n    this.loaderNavbar = true;\r\n\r\n    if (\r\n      this.form.value['ID_LINH'] != null &&\r\n      this.form.value['ID_LINH'].length > 0\r\n    ) {\r\n      let ID_LINH = this.form.get('ID_LINH').value;\r\n      let ID_SUB_LINH = this.form.get('ID_SUB_LINH').value;\r\n      let IN_STAT = 1;\r\n      let params = {\r\n        ID_LINH,\r\n        ID_SUB_LINH : ID_SUB_LINH ?? \"\",\r\n        IN_STAT\r\n      }\r\n\r\n      this.service\r\n        .getClasses(params)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          res => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status === 200) {\r\n                if (res['body']['responseCode'] === 200) {\r\n                  this.classes = res['body']['result'];\r\n                  this.form.get('ID_CLAS').reset();\r\n                  this.form.get('ID_CLAS').enable();\r\n                } else if (res['body']['responseCode'] === 404) {\r\n                  this.form.get('ID_CLAS').reset();\r\n                  this.form.get('ID_CLAS').disable();\r\n                }\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar Classes');\r\n          }\r\n        );\r\n    } else {\r\n      this.loaderNavbar = false;\r\n      this.form.get('ID_CLAS').reset();\r\n      this.form.get('ID_CLAS').disable();\r\n    }\r\n  }\r\n\r\n  onFilter(): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\r\n    });\r\n    this.search(this.getParams());\r\n  }\r\n\r\n  onSave(): void {\r\n    this.confirmChange();\r\n  }\r\n\r\n  onEditMass(): void {\r\n\r\n    const itemMassaBool = this.formCheck.get('ITEM_MASS').value;\r\n  \r\n    if(itemMassaBool) {\r\n      this.data.forEach(e => {\r\n        e.IN_STAT = 1;\r\n      });\r\n    } else {\r\n      this.data.forEach(e => {\r\n        e.IN_STAT = 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  OnExcel(): void {\r\n    let params = this.getParams();\r\n\r\n    params['IN_GERA_RELA_EXCE'] = 1;\r\n    params['ID_USUA'] = this.idUser;\r\n\r\n    //this.getSearchExcel(params);\r\n  }\r\n\r\n  search(params: any): void {    \r\n    this.loaderNavbar = true;\r\n    this.loading = false;\r\n    \r\n    this.loading = true;\r\n    this.noResult = false;\r\n    this.loaderNavbar = false;\r\n\r\n  }\r\n\r\n  setIconUnabled(item: any) {\r\n    let icon: string;\r\n\r\n    if(item.ID_PERF_INAT == 0) {\r\n      icon = 'fas fa-circle text-danger';\r\n    }\r\n\r\n    if(item.ID_PERF_INAT == 1) {\r\n      icon = 'fas fa-circle text-warning';\r\n    }\r\n\r\n    if(item.ID_PERF_INAT == 2) {\r\n      icon = 'fas fa-circle text-info';\r\n    }\r\n\r\n    return icon;\r\n  }\r\n\r\n  onDetail(item: any): void {\r\n    item.select = !item.select;\r\n    this.compressedTable = !this.compressedTable;\r\n  }\r\n\r\n  onEdit(item): void {\r\n    const stat = item.IN_STAT == 0 ? 1 : 0;\r\n\r\n    // item.ID_USUA = parseInt(this.idUsuario);\r\n\r\n    // item.ID_CLAS = item.ID;\r\n\r\n    item.IN_STAT = stat;\r\n\r\n    this.formCheck.get('ITEM_MASS').setValue(false);\r\n    //   .asObservable()\r\n    //   .pipe(\r\n    //     take(1),\r\n    //     switchMap((result) => {\r\n    //       if (!result) return EMPTY;\r\n\r\n    //       this.loaderNavbar = true;\r\n    //       return this.service.postClasses(item);\r\n    //     }),\r\n    //     finalize(() => {\r\n    //       this.loaderNavbar = false;\r\n    //     })\r\n    //   )\r\n    //   .subscribe(\r\n    //     (success: any) => {\r\n    //       this.pnotifyService.success();\r\n    //     },\r\n    //     (error: any) => {\r\n    //       item.IN_STAT = item.IN_STAT == 1 ? 0 : 1;\r\n    //       this.pnotifyService.error();\r\n    //     }\r\n    //   );\r\n  }\r\n\r\n  confirmChange(): any {\r\n    // if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a alteração dos registros?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    // return this.confirmModalService.showConfirm(\r\n    //   'inactivate',\r\n    //   'Confirmar inativação',\r\n    //   'Deseja realmente prosseguir com a inativação do Material?',\r\n    //   'Cancelar',\r\n    //   'Confirmar'\r\n    // );\r\n  }\r\n\r\n  onCloseDetail(): void {\r\n    this.data.forEach(e => {\r\n      e.select = false;\r\n    });\r\n    this.compressedTable = false;\r\n  }\r\n\r\n  getLogsModal(item: any): void {\r\n    this.itemMaterial = item;\r\n    this.modal.title = \"LOGS\";\r\n    this.modalLogsBool = true;\r\n  }\r\n\r\n  /* Ordenação */\r\n  sort(key: string): void {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  /* Ordenação */\r\n  \r\n  /* Paginação Tabela Principal*/\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): any {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string): any {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AbastecimentoCadastrosManutencaoMateriaisComponent } from './manutencao-materiais.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: AbastecimentoCadastrosManutencaoMateriaisComponent\r\n      }\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AbastecimentoCadastrosManutencaoMateriaisRoutingModule { }\r\n","export default \"<loader-spinner-full-screen\\r\\n  *ngIf=\\\"loaderFullScreen\\\"\\r\\n></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"MANUTENÇÃO DE Materiais\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n  >\\r\\n    Filtrar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"OnExcel()\\\"\\r\\n    [disabled]=\\\"true\\\"\\r\\n  >\\r\\n    Exportar Excel\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSave()\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID' || !loading\\\"\\r\\n  >\\r\\n    Guardar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <advanced-filter>\\r\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"ID_TIPO_MATE\\\">Tipo Material</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            [items]=\\\"tiposMateriais\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_APOI_TIPO_MATE\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"ID_TIPO_MATE\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"linhas\\\">Linha</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            [items]=\\\"linhas\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            (change)=\\\"getSubLinhas() + '' + getClasses()\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_LINH\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"ID_LINH\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"subLinhas\\\">Sublinha</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            [items]=\\\"subLinhas\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            (change)=\\\"getClasses()\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_SUB_LINH\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"ID_SUB_LINH\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"classes\\\">Classe</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            [items]=\\\"classes\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_CLAS\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"ID_CLAS\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"situacoes\\\">Situação</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"situations\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_SITU\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"IN_STAT\\\"\\r\\n            (change)=\\\"setActivedPerfil($event)\\\"\\r\\n            [ngClass]=\\\"\\r\\n              onFieldError('IN_STAT') + ' ' + onFieldRequired('IN_STAT')\\r\\n            \\\"\\r\\n            >\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('IN_STAT')\\\"\\r\\n              message=\\\"Situação é obrigatório.\\\"\\r\\n            >\\r\\n            </invalid-form-control>\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"ID_PERFI_INAT\\\">Perfil de Inativação</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"unactivatedPerfil\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_PERFI_INAT\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"ID_PERFI_INAT\\\"\\r\\n            [ngClass]=\\\"\\r\\n              onFieldError('ID_PERFI_INAT') + ' ' + onFieldRequired('ID_PERFI_INAT')\\r\\n            \\\"\\r\\n            >\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('ID_PERFI_INAT')\\\"\\r\\n              message=\\\"Perfil de inativação é obrigatório.\\\"\\r\\n            >\\r\\n            </invalid-form-control>\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <subtitles [data]=\\\"subtitles\\\" [show]=\\\"loading\\\"> </subtitles>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div\\r\\n      [ngClass]=\\\"{ 'col-12': !compressedTable, 'col-6 pr-0': compressedTable }\\\"\\r\\n    >\\r\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"loading\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template let-thead #thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" width=\\\"4%\\\" *ngIf=\\\"!compressedTable\\\">\\r\\n              <div [formGroup]=\\\"formCheck\\\"\\r\\n                class=\\\"custom-control custom-checkbox mr-sm-2 hover\\\"\\r\\n                >\\r\\n                <input\\r\\n                  type=\\\"checkbox\\\"\\r\\n                  class=\\\"custom-control-input hover\\\"\\r\\n                  id=\\\"itemMass\\\"\\r\\n                  formControlName=\\\"ITEM_MASS\\\"\\r\\n                  [checked]=\\\"false\\\"\\r\\n                  (change)=\\\"onEditMass()\\\"\\r\\n                >\\r\\n                <label class=\\\"custom-control-label hover\\\" for=\\\"itemMass\\\"></label>\\r\\n              </div>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('DS_TIPO_MATE')\\\">\\r\\n              Tipo Material\\r\\n              <span *ngIf=\\\"key == 'DS_TIPO_MATE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DS_TIPO_MATE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_LINH')\\\">\\r\\n              Linha\\r\\n              <span *ngIf=\\\"key == 'NM_LINH'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'NM_LINH'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_SUB_LINH')\\\">\\r\\n              Sublinha\\r\\n              <span *ngIf=\\\"key == 'NM_SUB_LINH'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'NM_SUB_LINH'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_CLAS')\\\">\\r\\n              Classe\\r\\n              <span *ngIf=\\\"key == 'NM_CLAS'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'NM_CLAS'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('CODE_MATE')\\\">\\r\\n              Cod. Material\\r\\n              <span *ngIf=\\\"key == 'CODE_MATE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'CODE_MATE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('DS_MATE')\\\">\\r\\n              Material\\r\\n              <span *ngIf=\\\"key == 'DS_MATE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DS_MATE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('VOL_VENDA')\\\" *ngIf=\\\"!compressedTable\\\">\\r\\n              Volume Vendas\\r\\n              <span *ngIf=\\\"key == 'VOL_VENDA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'VOL_VENDA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('ESTO_ATUAL')\\\" *ngIf=\\\"!compressedTable\\\">\\r\\n              Est. Atual\\r\\n              <span *ngIf=\\\"key == 'ESTO_ATUAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'ESTO_ATUAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('TT_CART')\\\" *ngIf=\\\"!compressedTable\\\">\\r\\n              Carteira\\r\\n              <span *ngIf=\\\"key == 'TT_CART'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'TT_CART'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('TT_PLAN_CORT')\\\" *ngIf=\\\"!compressedTable\\\">\\r\\n              Plano de Corte\\r\\n              <span *ngIf=\\\"key == 'TT_PLAN_CORT'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'TT_PLAN_CORT'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" width=\\\"4%\\\" *ngIf=\\\"!compressedTable\\\"></th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" width=\\\"4%\\\" *ngIf=\\\"!compressedTable\\\"></th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" width=\\\"4%\\\" *ngIf=\\\"!compressedTable\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template let-tbody #tbody>\\r\\n          <tr *ngFor=\\\"let item of data | orderBy: key:reverse | slice: begin:end\\\">\\r\\n            <td nowrap class=\\\"text-center\\\" [ngClass]=\\\"[item.IN_STAT == 0 ? 'border-danger' : 'border-success', item.select ? 'bg-row-selected' : '']\\\">\\r\\n              <div\\r\\n                class=\\\"custom-control custom-checkbox mr-sm-2 hover\\\">\\r\\n                <input\\r\\n                  type=\\\"checkbox\\\"\\r\\n                  class=\\\"custom-control-input hover\\\"\\r\\n                  [id]=\\\"'item' + item.ID\\\"\\r\\n                  [checked]=\\\"item.IN_STAT\\\"\\r\\n                  (change)=\\\"onEdit(item)\\\"\\r\\n                >\\r\\n                <label class=\\\"custom-control-label hover\\\" [for]=\\\"'item' + item.ID\\\"></label>\\r\\n              </div>\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" [ngClass]=\\\"item.select ? 'bg-row-selected' : ''\\\">{{ item.DS_TIPO_MATE }}</td>\\r\\n            <td nowrap class=\\\"text-center\\\" [ngClass]=\\\"item.select ? 'bg-row-selected' : ''\\\">{{ item.NM_LINH }}</td>\\r\\n            <td nowrap class=\\\"text-center\\\" [ngClass]=\\\"item.select ? 'bg-row-selected' : ''\\\">{{ item.NM_SUB_LINH ? item.NM_SUB_LINH : \\\"-\\\" }}</td>\\r\\n            <td nowrap class=\\\"text-center\\\" [ngClass]=\\\"item.select ? 'bg-row-selected' : ''\\\">{{ item.NM_CLAS }}</td>\\r\\n            <td nowrap class=\\\"text-center\\\" [ngClass]=\\\"item.select ? 'bg-row-selected' : ''\\\">{{ item.CODE_MATE | number: '0.0' }}</td>\\r\\n            <td nowrap class=\\\"text-center\\\" [ngClass]=\\\"item.select ? 'bg-row-selected' : ''\\\">{{ item.DS_MATE }}</td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"!compressedTable\\\">{{ item.VOL_VENDA | number: '0.3'}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"!compressedTable\\\">{{ item.ESTO_ATUAL | number: '0.3'}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"!compressedTable\\\">{{ item.TT_CART | number: '0.3'}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"!compressedTable\\\">{{ item.TT_PLAN_CORT | number: '0.0'}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\" width=\\\"4%\\\" *ngIf=\\\"!compressedTable\\\">\\r\\n              <span><i [ngClass]=\\\"setIconUnabled(item)\\\" [tooltip]=\\\"item.DS_PERF_INAT\\\" ></i></span>\\r\\n            </td>\\r\\n            <!-- <td nowrap class=\\\"text-center\\\" width=\\\"4%\\\" *ngIf=\\\"!compressedTable\\\"> -->\\r\\n\\r\\n              <!-- <div>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn-icon-sm\\\"\\r\\n                  [tooltip]=\\\"item.IN_STAT == 0 ? 'Ativar' : 'Desativar'\\\"\\r\\n                  (click)=\\\"onEdit(item)\\\"\\r\\n                  >\\r\\n                  <i [ngClass]=\\\"item.IN_STAT == 0 ? 'fas fa-toggle-off' : 'fas fa-toggle-on text-success'\\\"></i>\\r\\n                </button>\\r\\n              </div> -->\\r\\n            <!-- </td>        -->\\r\\n            <td nowrap  class=\\\"text-center\\\" width=\\\"4%\\\" *ngIf=\\\"!compressedTable\\\">\\r\\n              <div>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn-icon-sm\\\"\\r\\n                  tooltip=\\\"Logs\\\"\\r\\n                  (click)=\\\"getLogsModal(item) + ' ' + lgModal.show()\\\"\\r\\n                  >\\r\\n                  <i class=\\\"fas fa-external-link-alt text-primary\\\"></i>\\r\\n                </button>\\r\\n              </div>\\r\\n            </td>\\r\\n            <td nowrap  class=\\\"text-center\\\" width=\\\"4%\\\" *ngIf=\\\"!compressedTable\\\">\\r\\n              <div>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn-icon-sm\\\"\\r\\n                  tooltip=\\\"Detalles\\\"\\r\\n                  (click)=\\\"onDetail(item)\\\"\\r\\n                  >\\r\\n                  <i class=\\\"fas fa-search\\\"></i>\\r\\n                </button>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n  </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <tabset [hidden]=\\\"!compressedTable\\\">\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn-icon close position-absolute\\\"\\r\\n          (click)=\\\"onCloseDetail()\\\"\\r\\n        >\\r\\n          <i class=\\\"fas fa-times\\\"></i>\\r\\n        </button>\\r\\n        <tab heading=\\\"Detalles\\\">\\r\\n          <div\\r\\n            class=\\\"border-right border-left border-bottom px-3 pt-3\\\"\\r\\n            style=\\\"overflow: auto; height: 338px;\\\"\\r\\n          >\\r\\n            <custom-table>\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr class=\\\"text-center\\\">\\r\\n                  <th scope=\\\"col\\\">Empresa</th>\\r\\n                  <th scope=\\\"col\\\">Depósito</th>\\r\\n                  <th scope=\\\"col\\\">Vol. Vendas</th>\\r\\n                  <th scope=\\\"col\\\">Carteira</th>\\r\\n                  <th scope=\\\"col\\\">Plano de Corte</th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let item of dataDetail\\\">\\r\\n                  <td nowrap class=\\\"text-center\\\">{{ item.NM_EMPR }}</td>\\r\\n                  <td nowrap class=\\\"text-center\\\">{{ item.NM_DEPO }}</td>\\r\\n                  <td nowrap class=\\\"text-center\\\">{{ item.VOLU_VEND | number: '0.3' }}</td>\\r\\n                  <td nowrap class=\\\"text-center\\\">{{ item.VOLU_CART | number: '0.3' }}</td>\\r\\n                  <td nowrap class=\\\"text-center\\\">{{ item.PLAN_CORT | number: '0.3' }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td nowrap class=\\\"text-center bg-dark text-white\\\">TOTAL</td>\\r\\n                  <td nowrap class=\\\"text-center bg-dark text-white\\\"></td>\\r\\n                  <td nowrap class=\\\"text-center bg-dark text-white\\\">120,00</td>\\r\\n                  <td nowrap class=\\\"text-center bg-dark text-white\\\">300,00</td>\\r\\n                  <td nowrap class=\\\"text-center bg-dark text-white\\\">400,00</td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n            <div\\r\\n              *ngIf=\\\"noResultDetalhes\\\"\\r\\n              class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\r\\n              style=\\\"height: 80%;\\\"\\r\\n            >\\r\\n              <empty-result\\r\\n                message=\\\"Nenhuma informação encontrada\\\"\\r\\n              ></empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </tab>\\r\\n      </tabset>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 mt-2\\\" *ngIf=\\\"data.length > itemsPerPage && loading\\\">\\r\\n    Exibindo {{ begin + 1 }} a {{ end }} de {{ data?.length }}\\r\\n    <div class=\\\"d-flex\\\">\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"data?.length\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div\\r\\n    *ngIf=\\\"noResult\\\"\\r\\n    class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\r\\n    style=\\\"height: 80%;\\\"\\r\\n  >\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\\r\\n<div\\r\\n  bsModal\\r\\n  #lgModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"dialog-sizes-name1\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-xl\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\r\\n          {{ modal.title }}\\r\\n        </h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close pull-right\\\"\\r\\n          (click)=\\\"lgModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"container\\\" *ngIf=\\\"modalLogsBool\\\">\\r\\n          <abastecimento-cadastro-manutencao-materiais-modal-logs [item]=itemMaterial>\\r\\n          </abastecimento-cadastro-manutencao-materiais-modal-logs>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { PageChangedEvent } from 'ngx-bootstrap';\r\n\r\n@Component({\r\n  selector: 'abastecimento-cadastro-manutencao-materiais-modal-logs',\r\n  templateUrl: './modal-logs.component.html',\r\n  styleUrls: ['./modal-logs.component.scss']\r\n})\r\nexport class AbastecimentoCadastrosManutencaoMateriaisModalLogsComponent implements OnInit {\r\n  @Input() item: any;\r\n\r\n  modal: any = [];\r\n\r\n  loadingLogs: boolean = false;\r\n  noResultLogs: boolean = true;\r\n\r\n  dataLogs: any = [];\r\n\r\n  /* Ordenação principal*/\r\n  reverse: boolean = false;\r\n  key: string = 'NM_CLAS';\r\n  /* Ordenação principal*/\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 15;\r\n  totalItems: number = 15;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 15;\r\n  /* Paginação */\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.modal.DS_TIPO_MATE = this.item.DS_TIPO_MATE;\r\n    this.modal.NM_CLAS = this.item.NM_CLAS;\r\n    this.modal.NM_SUB_LINH = this.item.NM_SUB_LINH;\r\n    this.modal.NM_LINH = this.item.NM_LINH;\r\n    this.modal.CODE_MATE = this.item.CODE_MATE;\r\n    this.modal.DS_MATE = this.item.DS_MATE;\r\n  }\r\n\r\n  /* Ordenação */\r\n  sort(key: string): void {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  /* Ordenação */\r\n  \r\n  /* Paginação Tabela Principal*/\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AbastecimentoCadastrosManutencaoMateriaisService {\r\n  \r\n  private readonly BASE_URL = environment.API;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) { }\r\n\r\n  getTiposMateriais(params: any) : Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/tipos-material`, {\r\n      params: {\r\n        IN_STAT: params['IN_STAT']\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getLinhas(params: any): Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/linhas`, {\r\n      params: {\r\n        IN_STAT: params['IN_STAT']\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getSubLinhas(params: any): Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/sub-linhas`,{\r\n      params: {\r\n        ID_LINH: params['ID_LINH'].toString(),\r\n        IN_STAT:params['IN_STAT']\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getClasses(params): Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/classes`, {\r\n      params: {\r\n        ID_LINH: params['ID_LINH'].toString(),\r\n        ID_SUB_LINH: params['ID_SUB_LINH'].toString(),\r\n        IN_STAT: params['IN_STAT']\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getClassesMateriais(_params): Observable<any> {\r\n    const params = {\r\n      ID_LINH: _params['ID_LINH'] ? _params['ID_LINH'].toString() : '',\r\n      ID_SUB_LINH: _params['ID_SUB_LINH'] ? _params['ID_SUB_LINH'].toString() : '',\r\n      ID_CLAS: _params['ID_CLAS'] ? _params['ID_CLAS'].toString() : '',\r\n      IN_STAT: _params['IN_STAT'] ?? '',\r\n      IN_GERA_RELA_EXCE: _params['IN_GERA_RELA_EXCE'] ?? '',\r\n      ID_USUA: _params['ID_USUA'] ?? ''\r\n    }\r\n\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/classes`, {\r\n      params,\r\n      observe: \"response\"\r\n    });\r\n  }\r\n}\r\n","import { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport ptBr from '@angular/common/locales/pt';\r\nregisterLocaleData(ptBr);\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { TooltipModule, TabsModule, PaginationModule, BsDatepickerModule, ModalModule } from 'ngx-bootstrap';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\n\r\n\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\n\r\nimport { AbastecimentoCadastrosManutencaoMateriaisRoutingModule } from './manutencao-materiais-routing.module';\r\nimport { AbastecimentoCadastrosManutencaoMateriaisComponent } from './manutencao-materiais.component';\r\nimport { AbastecimentoCadastrosManutencaoMateriaisModalLogsComponent } from './modal-logs/modal-logs.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AbastecimentoCadastrosManutencaoMateriaisComponent,\r\n    AbastecimentoCadastrosManutencaoMateriaisModalLogsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AbastecimentoCadastrosManutencaoMateriaisRoutingModule,\r\n    NotFoundModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    NgSelectModule,\r\n    TemplatesModule,\r\n    OrderModule\r\n  ],\r\n  providers: [{ provide: LOCALE_ID, useValue: 'pt-PT' }],\r\n})\r\nexport class AbastecimentoCadastrosManutencaoMateriaisModule { }\r\n","export default \"<div class=\\\"row mb-2 mt-2\\\">\\r\\n  <div class=\\\"col-2\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> TIPO MATERIAL: </strong><br /> {{ modal.DS_TIPO_MATE }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-2\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> LINHA: </strong><br /> {{ modal.NM_LINH }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-2\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> SUBLINHA: </strong><br /> {{ modal.NM_SUB_LINH ? modal.NM_SUB_LINH : '-' }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-2\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> CLASSE: </strong><br /> {{ modal.NM_CLAS }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-2\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> COD. MATERIAL: </strong><br /> {{ modal.CODE_MATE }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-2\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> MATERIAL: </strong><br /> {{ modal.DS_MATE }}\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"table-responsive\\\">\\r\\n  <custom-table *ngIf=\\\"loadingLogs\\\">\\r\\n    <ng-template #thead let-thead>\\r\\n      <tr class=\\\"text-center\\\">\\r\\n        <th scope=\\\"col\\\" (click)=\\\"sort('ID_REFE_ERP')\\\">\\r\\n          Código\\r\\n          <span *ngIf=\\\"key == 'ID_REFE_ERP'\\\"><i [ngClass]=\\\"\\r\\n                reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"></i></span>\\r\\n          <span *ngIf=\\\"key != 'ID_REFE_ERP'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n        </th>\\r\\n        <th scope=\\\"col\\\" (click)=\\\"sort('NM_CLAS')\\\">\\r\\n          Classe\\r\\n          <span *ngIf=\\\"key == 'NM_CLAS'\\\"><i [ngClass]=\\\"\\r\\n                reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"></i></span>\\r\\n          <span *ngIf=\\\"key != 'NM_CLAS'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n        </th>\\r\\n        <th scope=\\\"col\\\" (click)=\\\"sort('NM_SUB_LINH')\\\">\\r\\n          Sub Linha\\r\\n          <span *ngIf=\\\"key == 'NM_SUB_LINH'\\\"><i [ngClass]=\\\"\\r\\n                reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"></i></span>\\r\\n          <span *ngIf=\\\"key != 'NM_SUB_LINH'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n        </th>\\r\\n        <th scope=\\\"col\\\" (click)=\\\"sort('NM_LINH')\\\">\\r\\n          Linha\\r\\n          <span *ngIf=\\\"key == 'NM_LINH'\\\"><i [ngClass]=\\\"\\r\\n                reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"></i></span>\\r\\n          <span *ngIf=\\\"key != 'NM_LINH'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n        </th>\\r\\n        <th scope=\\\"col\\\" (click)=\\\"sort('DS_STAT')\\\">\\r\\n          Situação\\r\\n          <span *ngIf=\\\"key == 'DS_STAT'\\\"><i [ngClass]=\\\"\\r\\n                reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"></i></span>\\r\\n          <span *ngIf=\\\"key != 'DS_STAT'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n        </th>\\r\\n        <th scope=\\\"col\\\" (click)=\\\"sort('DT_ACAO')\\\">\\r\\n          Data Ação\\r\\n          <span *ngIf=\\\"key == 'DT_ACAO'\\\"><i [ngClass]=\\\"\\r\\n                reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"></i></span>\\r\\n          <span *ngIf=\\\"key != 'DT_ACAO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n        </th>\\r\\n        <th scope=\\\"col\\\" (click)=\\\"sort('NM_ACAO')\\\">\\r\\n          Ação\\r\\n          <span *ngIf=\\\"key == 'NM_ACAO'\\\"><i [ngClass]=\\\"\\r\\n                reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"></i></span>\\r\\n          <span *ngIf=\\\"key != 'NM_ACAO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n        </th>\\r\\n        <th scope=\\\"col\\\" (click)=\\\"sort('NM_USUA')\\\">\\r\\n          Usuário\\r\\n          <span *ngIf=\\\"key == 'NM_USUA'\\\"><i [ngClass]=\\\"\\r\\n                reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"></i></span>\\r\\n          <span *ngIf=\\\"key != 'NM_USUA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n        </th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template #tbody let-tbody>\\r\\n      <tr *ngFor=\\\"let item of dataLogs | orderBy: key:reverse | slice: begin:end; let i = index\\\">\\r\\n        <td class=\\\"text-center\\\">{{ item.ID_REFE_ERP }}</td>\\r\\n        <td class=\\\"text-center\\\">{{ item.NM_CLAS }}</td>\\r\\n        <td class=\\\"text-center\\\">{{ item.ID_SUB_LINH ? item.ID_SUB_LINH : '-' }}</td>\\r\\n        <td class=\\\"text-center\\\">{{ item.NM_LINH }}</td>\\r\\n        <td class=\\\"text-center\\\">{{ item.DS_STAT }}</td>\\r\\n        <td class=\\\"text-center\\\">\\r\\n          {{ item.DT_ACAO | date: 'dd/MM/yyyy HH:mm' }}\\r\\n        </td>\\r\\n        <td class=\\\"text-center\\\">{{ item.NM_ACAO }}</td>\\r\\n        <td class=\\\"text-center\\\">{{ item.NM_USUA }}</td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </custom-table>\\r\\n</div>\\r\\n<div class=\\\"col-12 mt-2\\\" *ngIf=\\\"dataLogs.length > itemsPerPage && loadingLogs\\\">\\r\\n  Exibindo {{ begin + 1 }} a {{ end }} de {{ dataLogs?.length }}\\r\\n  <pagination [maxSize]=\\\"10\\\" [totalItems]=\\\"dataLogs?.length\\\" (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n    [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\" [(ngModel)]=\\\"currentPage\\\" previousText=\\\"&lsaquo;\\\"\\r\\n    nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n  </pagination>\\r\\n</div>\\r\\n<div *ngIf=\\\"noResultLogs\\\" class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\" style=\\\"height: 80%;\\\">\\r\\n  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n</div>\";","export default \".bg-row-selected {\\n  background-color: #91b8f0 !important;\\n}\\n\\n.custom-control-input:checked ~ .custom-control-label::before {\\n  background-color: #4dcc71;\\n  border-color: #4dcc71;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hYmFzdGVjaW1lbnRvL2NhZGFzdHJvcy9tYW51dGVuY2FvLW1hdGVyaWFpcy9tYW51dGVuY2FvLW1hdGVyaWFpcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9DQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtFQUNBLHFCQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2FiYXN0ZWNpbWVudG8vY2FkYXN0cm9zL21hbnV0ZW5jYW8tbWF0ZXJpYWlzL21hbnV0ZW5jYW8tbWF0ZXJpYWlzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJnLXJvdy1zZWxlY3RlZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzkxYjhmMCFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5jdXN0b20tY29udHJvbC1pbnB1dDpjaGVja2Vkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGRjYzcxO1xyXG4gIGJvcmRlci1jb2xvcjogIzRkY2M3MTtcclxufSJdfQ== */\";"]}