{"version":3,"sources":["webpack:///src/app/modules/admin/modulos/cadastro/cadastro.component.scss","webpack:///src/app/modules/admin/modulos/modulos.module.ts","webpack:///src/app/modules/admin/modulos/lista/lista.component.scss","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/admin/modulos/cadastro/cadastro.component.ts","webpack:///src/app/modules/admin/modulos/lista/lista.component.ts","webpack:///src/app/modules/admin/modulos/modulos-routing.module.ts","webpack:///src/app/modules/admin/modulos/cadastro/cadastro.component.html","webpack:///src/app/modules/admin/modulos/lista/lista.component.html"],"names":["ModulosModule","declarations","imports","forRoot","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","currentDate","startOfWeek","setDate","setHours","endOfWeek","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","providedIn","AdminModulosCadastroComponent","activatedRoute","formBuilder","service","pnotify","foawService","router","atividadesService","routerService","appTitle","loading","loadingNavBar","registrarAcesso","setBreadCrumb","setFormBuilder","onActivatedRoute","getIcones","subscribe","breadCrumbTree","descricao","routerLink","form","group","id","nome","required","rota","icone","situacao","snapshot","params","undefined","getModulo","field","onFieldInvalid","get","status","touched","formControl","controls","validator","validationResult","value","postModulo","pipe","response","success","navigate","relativeTo","error","message","icones","body","console","log","getModulos","data","patchValue","selector","template","AdminModulosListaComponent","moduloService","route","dateService","itemsPerPage","totalItems","currentPage","buildForm","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","registrosPorPagina","getParams","setValue","getTime","setBase64UrlParams","pagina","t","onFilter","_params","_obj","prop","convertToUrlDate","noResult","notice","event","page","reset","routes","path","component","AdminModulosRoutingModule","forChild","exports"],"mappings":"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","file":"modulos-modulos-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vbW9kdWxvcy9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { AdminModulosListaComponent } from './lista/lista.component';\r\nimport { AdminModulosCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nimport { AdminModulosRoutingModule } from './modulos-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule, ModalModule, PaginationModule, TabsModule, TimepickerModule, TooltipModule } from 'ngx-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminModulosListaComponent,\r\n    AdminModulosCadastroComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminModulosRoutingModule,\r\n    FormsModule,\r\n    ModalModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    ModuleWrapperModule,\r\n    NotFoundModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    PipesModule,\r\n  ]\r\n})\r\nexport class ModulosModule { }\r\n","export default \".fa-check {\\n  color: green;\\n}\\n\\n.fa-ban {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hZG1pbi9tb2R1bG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQUNGOztBQUVBO0VBQ0UsVUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hZG1pbi9tb2R1bG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZhLWNoZWNrIHtcclxuICBjb2xvcjogZ3JlZW47XHJcbn1cclxuXHJcbi5mYS1iYW4ge1xyXG4gIGNvbG9yOiByZWQ7XHJcbn1cclxuIl19 */\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","//angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n\r\n//rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription, forkJoin } from 'rxjs';\r\n\r\n//ngx-bootstrap\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\n\r\n//services\r\nimport { AdminModulosService } from '../services/modulos.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { IconesFontAwesomeService } from 'src/app/shared/services/core/icons-fonts-awesome.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\n//interfaces\r\nimport { IAdminModulo } from '../models/modulo';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n@Component({\r\n  selector: 'admin-modulos-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss']\r\n})\r\nexport class AdminModulosCadastroComponent implements OnInit {\r\n\r\n  @ViewChild('childModal', { static: false }) childModal: ModalDirective;\r\n\r\n  appTitle = \"Cadastro\";\r\n\r\n  form: FormGroup;\r\n  idModulo: number;\r\n  icone: string;\r\n  modulo: IAdminModulo;\r\n  loading = true;\r\n  loadingNavBar = false;\r\n  icones: Array<any>;\r\n  idSubModulo: number;\r\n\r\n  $subscription: Subscription;\r\n\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private service: AdminModulosService,\r\n    private pnotify: PNotifyService,\r\n    private foawService: IconesFontAwesomeService,\r\n    private router: Router,\r\n    private atividadesService: AtividadesService,\r\n    private routerService: RouterService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n    this.getIcones();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/admin/home`,\r\n      },\r\n      {\r\n        descricao: 'Lista de módulos',\r\n        routerLink: `/admin/modulos`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  setFormBuilder(){\r\n    this.form = this.formBuilder.group({\r\n      id: [null],\r\n      nome: [null, Validators.required],\r\n      rota: [null, Validators.required],\r\n      icone: [null, Validators.required],\r\n      situacao: [1]\r\n    });\r\n  }\r\n\r\n  onActivatedRoute(){\r\n\r\n    let id = this.activatedRoute.snapshot.params?.id;\r\n\r\n    if(id == undefined){\r\n      this.loading = false;\r\n      return;\r\n    }\r\n\r\n    this.getModulo(id);\r\n\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n\r\n    this.loadingNavBar = true;\r\n\r\n    let params = this.form.value;\r\n\r\n    this.service\r\n      .postModulo(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          this.pnotify.success();\r\n          this.router.navigate([\"./../\"], {\r\n            relativeTo: this.activatedRoute\r\n          });\r\n        },\r\n        error => {\r\n          let message = error.error?.message;\r\n          message ? this.pnotify.error(message) : this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getIcones() {\r\n    this.foawService\r\n      .getIcones()\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe(response => {\r\n        if (response.status === 200) {\r\n          this.icones = response.body['icones'];\r\n        }\r\n      });\r\n      console.log()\r\n      console.log(this.getIcones)\r\n  }\r\n\r\n  getModulo(id){\r\n\r\n    this.loading = true;\r\n\r\n    this.service\r\n      .getModulos({id: id})\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if(response.status !== 200){\r\n            return\r\n          }\r\n          let data = response.body[\"data\"][0];\r\n          this.form.patchValue(data)\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n}\r\n\r\n","//angualr\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//rxjs\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n//services\r\nimport { AdminModulosService } from '../services/modulos.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\n//interfaces\r\nimport { IAdminModulo } from '../models/modulo';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subscription } from 'rxjs';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n@Component({\r\n  selector: 'admin-modulos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class AdminModulosListaComponent implements OnInit {\r\n  \r\n  data: IAdminModulo[];\r\n  \r\n  loading = true;\r\n  loadingNavBar = false;\r\n  noResult: boolean;\r\n  \r\n  appTitle = \"Lista de módulos\";\r\n\r\n  form: FormGroup;\r\n\r\n  idSubModulo: number;\r\n\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n\r\n  $activatedRouteSubscription: Subscription;\r\n  \r\n  /* Pagination */\r\n  itemsPerPage = 10;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private moduloService: AdminModulosService,\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private atividadesService: AtividadesService,\r\n    private routerService: RouterService,\r\n    private formBuilder: FormBuilder,\r\n    private dateService: DateService\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription?.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        \r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        \r\n        if(_response?.registrosPorPagina){\r\n          this.itemsPerPage = _response?.registrosPorPagina;\r\n        }\r\n        \r\n        this.form.patchValue(_response);\r\n        this.getModulos(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('t').setValue(new Date().getTime());\r\n    this.form.get('pagina').setValue(1);\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      id: [null],\r\n      nome: [null],\r\n      rota: [null],\r\n      pagina: [1],\r\n      registrosPorPagina: [100],\r\n      t:[null]\r\n    })\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/admin/home`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  getModulos(params?) {\r\n\r\n    if (!this.loading) {\r\n      this.loadingNavBar = true;\r\n    }\r\n\r\n    this.moduloService\r\n      .getModulos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if (response.status !== 200) {\r\n            this.data = [];\r\n            this.noResult = true;\r\n            this.pnotify.notice('Não houve retorno para sua consulta');\r\n            return\r\n          }\r\n          this.noResult = false;\r\n          this.data = response.body['data'];\r\n          this.totalItems = response.body['total'];\r\n        },\r\n        error => {\r\n          this.data = [];\r\n          this.noResult = true;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('pagina').setValue(event.page);\r\n    this.form.get('t').setValue((new Date).getTime());\r\n    this.route.navigate([], {\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\r\n    })\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AdminModulosCadastroComponent } from './cadastro/cadastro.component';\r\nimport { AdminModulosListaComponent } from './lista/lista.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminModulosListaComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: AdminModulosCadastroComponent\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: AdminModulosCadastroComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminModulosRoutingModule { }\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Cadastro de módulo\\\">\\r\\n  <button \\r\\n    (click)=\\\"onSave()\\\"\\r\\n    [disabled] = \\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Guardar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"col-12 p-0\\\">\\r\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden]=\\\"loading\\\">\\r\\n      <div class=\\\"form-row justify-content-center\\\">\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"icone\\\">Icones</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"icones\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            labelForId=\\\"classe\\\"\\r\\n            bindLabel=\\\"classe\\\"\\r\\n            bindValue=\\\"classe\\\"\\r\\n            id=\\\"classe\\\"\\r\\n            formControlName=\\\"icone\\\"\\r\\n            >\\r\\n            <ng-template ng-label-tmp let-item=\\\"item\\\" let-clear=\\\"clear\\\">\\r\\n                <div class=\\\"d-flex align-items-center\\\">\\r\\n                  <div [class]=\\\"item.classe\\\" style=\\\"min-width: 25px;\\\"></div>\\r\\n                  <div>{{item.classe}}</div>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n            <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div [class]=\\\"item.classe\\\" style=\\\"min-width: 25px;\\\"></div>\\r\\n                <div>{{item.classe}}</div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"nome\\\">Nome</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"nome\\\"\\r\\n            formControlName=\\\"nome\\\"\\r\\n            placeholder=\\\"Digite...\\\"\\r\\n            [ngClass]=\\\"onFieldRequired('nome')\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row justify-content-center\\\">\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"rota\\\">Rota</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control text-lowercase\\\"\\r\\n            id=\\\"rota\\\"\\r\\n            formControlName=\\\"rota\\\"\\r\\n            placeholder=\\\"Digite...\\\"\\r\\n            [ngClass]=\\\"onFieldRequired('rota')\\\"\\r\\n          />\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"situacao\\\">Situação</label>\\r\\n          <select\\r\\n            name=\\\"situacao\\\"\\r\\n            id=\\\"situacao\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            formControlName=\\\"situacao\\\"  \\r\\n          >\\r\\n            <option value=\\\"1\\\">Ativo</option>\\r\\n            <option value=\\\"0\\\">Inativo</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</app-body>\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button type=\\\"button\\\" (click)=\\\"onReset()\\\">Limpar</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n  >\\r\\n    Filtrar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['./novo']\\\"\\r\\n  >\\r\\n    Adicionar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <advanced-filter>\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-3\\\">\\r\\n            <label for=\\\"id\\\">Id</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"id\\\"\\r\\n              (keyup.enter)=\\\"onFilter()\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-3\\\">\\r\\n            <label for=\\\"nome\\\">Nome</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"nome\\\"\\r\\n              (keyup.enter)=\\\"onFilter()\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-3\\\">\\r\\n            <label for=\\\"rota\\\">Rota</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"rota\\\"\\r\\n              (keyup.enter)=\\\"onFilter()\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-3\\\">\\r\\n            <label for=\\\"registrosPorPagina\\\">Registros</label>\\r\\n            <select\\r\\n              name=\\\"registrosPorPagina\\\"\\r\\n              id=\\\"registrosPorPagina\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"registrosPorPagina\\\"\\r\\n              >\\r\\n                <option value=\\\"1\\\">1</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </advanced-filter>\\r\\n    <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n      <thead class=\\\"thead-light\\\">\\r\\n        <tr>\\r\\n          <th>Id</th>\\r\\n          <th>Nome</th>\\r\\n          <th>Rota</th>\\r\\n          <th>Icone</th>\\r\\n          <th style=\\\"width:40px\\\"></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of data\\\">\\r\\n          <td [ngClass]=\\\"item.situacao == 1 ? 'border-success' : 'border-danger'\\\"> {{ item.id }} </td>\\r\\n          <td > {{ item.nome }} </td>\\r\\n          <td> {{ item.rota }} </td>\\r\\n          <td><div [class]=\\\"item.icone\\\"></div></td>\\r\\n          <td class=\\\"align-middle\\\">\\r\\n            <button\\r\\n              class=\\\"btn-icon-sm\\\"\\r\\n              tooltip=\\\"Editar\\\"\\r\\n              container=\\\"body\\\"\\r\\n            >\\r\\n              <a [routerLink]=\\\"['./', item.id]\\\">\\r\\n                <i class=\\\"fas fa-edit\\\"></i>\\r\\n              </a>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <div>\\r\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";"]}