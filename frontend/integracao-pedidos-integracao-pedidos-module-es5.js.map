{"version":3,"sources":["webpack:///src/app/modules/comercial/integracoes/dagda/integracao-pedidos/lista/lista.component.scss","webpack:///src/app/modules/abastecimento/monitores/integracao-pedidos/integracao-pedidos.module.ts","webpack:///src/app/modules/abastecimento/monitores/integracao-pedidos/integracao-pedidos.service.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/abastecimento/monitores/integracao-pedidos/integracao-pedidos-routing.module.ts","webpack:///src/app/modules/comercial/integracoes/dagda/integracao-pedidos/lista/lista.component.ts","webpack:///src/app/modules/abastecimento/monitores/integracao-pedidos/integracao-pedidos.component.scss","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/integracoes/dagda/integracao-pedidos/integracao-pedidos-routing.module.ts","webpack:///src/app/modules/abastecimento/monitores/integracao-pedidos/integracao-pedidos.component.ts","webpack:///src/app/modules/abastecimento/monitores/integracao-pedidos/integracao-pedidos.component.html","webpack:///src/app/modules/comercial/integracoes/dagda/integracao-pedidos/lista/lista.component.html","webpack:///src/app/modules/comercial/integracoes/dagda/services/integracao-pedidos.service.ts","webpack:///src/app/modules/comercial/integracoes/dagda/integracao-pedidos/integracao-pedidos.module.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["AbastecimentoMonitoresIntegracaoPedidosModule","declarations","imports","forRoot","AbastecimentoMonitoresIntegracaoPedidosService","httpClient","BASE_URL","API","params","get","IN_STAT","observe","ID_APOI_INTE_PEDI","pipe","idSituacao","descricaoLinhas","ID_LINH","toString","idSubLinha","ID_SUB_LINH","idClasses","idTipoMaterial","ID_CLAS","ID_APOI_TIPO_MATE","DT_INIC_ENVI","DT_FINA_ENVI","ID_DEPO","ID_MATE","ID_STAT_PEDI","IN_INCL_ITEM_PEDI","IN_GERA_RELA_EXCE","ID_USUA","NR_PAGE_INIC","TT_REGI_PAGI","ORDE_BY","ORDE_TYPE","ID_INTE_PEDI_COMP","ID_STAT_ITEM_PEDI","ID_INTE_PEDI_COMP_ITEM","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","routes","path","component","AbastecimentoMonitoresIntegracaoPedidosRoutingModule","forChild","exports","ComercialIntegracoesDagdaIntegracaoPedidosListaComponent","activatedRoute","router","location","localeService","formBuilder","pnotifyService","integracaoPedidosService","atividadesService","titleService","confirmModalService","detailPanelService","bsModalService","loaderNavbar","loaderFullScreen","loaderModalFullScreen","breadCrumbTree","subtitles","id","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","status","logs","dados","dadosPagination","dadosLoaded","dadosEmpty","enviado","appTitle","use","getPNotify","getStatus","registrarAcesso","setBreadCrumb","setFormFilter","setTitle","subscribe","snapshot","idSubModulo","descricao","routerLink","formValue","checkRouterParams","form","group","idEmpresa","nomeEmpresa","pedidoTid","pedidoDagda","dataAcao","pagina","registros","required","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","value","column","onFilter","template","index","hide","valid","setRouterParams","verificaParams","getIntegracaoStatus","next","response","success","data","unshift","nomeStatus","error","item","getIntegracaoLogs","body","dsIntegracao","push","postIntegracaoPedidos","navigate","relativeTo","q","btoa","stringify","getIntegracaoPedidos","slice","notice","hasOwnProperty","mensagem","borderClass","event","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","selector","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","y","m","d","h","i","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","ComercialService","http","httpParams","param","append","ComercialIntegracoesDagdaIntegracaoPedidosRoutingModule","AbastecimentoMonitoresIntegracaoPedidosComponent","routerService","dateService","service","loading","loadingDetalhes","loadingLogs","noResult","noResultDetalhes","noResultLogs","visibleEtapas","dadosDetalhes","dadosLogs","dadosExcel","integradores","depositos","name","linhas","subLinhas","classes","materiais","situacoes","reverse","key","reverseA","keyA","reverseB","keyB","begin","end","currentPageA","beginA","endA","currentPageB","beginB","endB","currentUser","localStorage","getItem","idUsuario","modal","bsConfig","assign","containerClass","adaptivePosition","showWeekNumbers","dataInicial","dataFinal","integrador","linha","subLinha","classe","material","situacao","setTimeout","getLinhas","getSituacoes","getIntegradoresPedidos","_response","getBase64UrlParams","setFormValues","getDadosForm","patchValue","_params","getIntegradorDepositos","res","setFormEnable","setFormDisable","campos","getSubLinhas","getClasses","getMateriais","responseCode","result","setFormReset","setDateValid","setBase64UrlParams","getPedidosIntegracao","getPedidosIntegracaoExcel","codFornecedor","ID_FORN_REFE_ERP","descFornecedor","NM_FORN","nPedido","NR_PEDI","linhaPedido","NM_LINH","condPagamento","DS_COND_PAGA","dataEnvio","DT_ULTI_ENVI_PEDI","ID","getPedidosIntegracaoItens","ID_ITEM_PEDI","getPedidosIntegracaoLogs","convertToUrlDate","selects","element","disable","enable","reset","idStatus","icone","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","ComercialIntegracoesDagdaIntegracaoPedidosService","comercialService","tidSoftwareService","post","ComercialIntegracoesDagdaIntegracaoPedidosModule","providers","provide","useValue","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"integracao-pedidos-integracao-pedidos-module-es5.js","sourcesContent":["export default \".border-secondary {\\n  border-color: #929090 !important;\\n}\\n\\ninput[type=number] {\\n  -moz-appearance: textfield;\\n}\\n\\ninput::-webkit-outer-spin-button,\\ninput::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvaW50ZWdyYWNvZXMvZGFnZGEvaW50ZWdyYWNhby1wZWRpZG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0NBQUE7QUFDRjs7QUFFQTtFQUNFLDBCQUFBO0FBQ0Y7O0FBRUE7O0VBRUUsd0JBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2RhZ2RhL2ludGVncmFjYW8tcGVkaWRvcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib3JkZXItc2Vjb25kYXJ5IHtcbiAgYm9yZGVyLWNvbG9yOiByZ2IoMTQ2LCAxNDQsIDE0NCkgIWltcG9ydGFudDtcbn1cblxuaW5wdXRbdHlwZT0nbnVtYmVyJ10ge1xuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbn1cblxuaW5wdXQ6Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24sXG5pbnB1dDo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuIl19 */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { TooltipModule, ModalModule, PaginationModule, BsDatepickerModule, TabsModule } from 'ngx-bootstrap';\nimport { OrderModule } from 'ngx-order-pipe';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\nimport { AbastecimentoMonitoresIntegracaoPedidosRoutingModule } from './integracao-pedidos-routing.module';\nimport { AbastecimentoMonitoresIntegracaoPedidosComponent } from './integracao-pedidos.component';\n\n\n@NgModule({\n  declarations: [AbastecimentoMonitoresIntegracaoPedidosComponent],\n  imports: [\n    CommonModule,\n    AbastecimentoMonitoresIntegracaoPedidosRoutingModule,\n    NotFoundModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    PaginationModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    TabsModule.forRoot(),\n    OrderModule,\n    NgSelectModule,\n    TemplatesModule\n  ]\n})\nexport class AbastecimentoMonitoresIntegracaoPedidosModule { }\n","import { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AbastecimentoMonitoresIntegracaoPedidosService {\n\n  private readonly BASE_URL = environment.API;\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  getIntegradoresPedidos(params) : Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/integradores-pedidos`, {\n      params: {\n        IN_STAT: params\n      },\n      observe: \"response\"\n    });\n  }\n\n  getIntegradorDepositos(params) : Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/cadastros/associacao-integrador-pedidos-depositos`,\n    {\n      params: {\n        ID_APOI_INTE_PEDI: params['ID_APOI_INTE_PEDI']\n      },\n      observe: \"response\"\n    })\n    .pipe(take(1))\n  }\n\n  getLinhas(idSituacao) : Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/linhas`,{\n      params: {\n        IN_STAT: idSituacao\n      },\n      observe: \"response\"\n    });\n  }\n\n  getSubLinhas(descricaoLinhas,idSituacao) {\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/sub-linhas`,{\n      params: {\n        ID_LINH: descricaoLinhas.toString(),\n        IN_STAT:idSituacao\n      },\n      observe: \"response\"\n    });\n  }\n\n  getClasses(descricaoLinhas, idSubLinha, idSituacao) : Observable<any> {\n    if (!idSubLinha)\n      idSubLinha = \"\";\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/classes`, {\n      params: {\n        ID_LINH: descricaoLinhas.toString(),\n        ID_SUB_LINH: idSubLinha,\n        IN_STAT: idSituacao\n      },\n      observe: \"response\"\n    });\n  }  \n\n  getMateriais(idClasses, idTipoMaterial, idSituacao) : Observable<any> {\n    if (!idClasses)\n      idClasses = \"\";\n    if (!idTipoMaterial)\n      idTipoMaterial = \"\";\n\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/materiais`, {\n      params: {\n        ID_CLAS: idClasses.toString(),\n        ID_APOI_TIPO_MATE: idTipoMaterial.toString(),\n        IN_STAT: idSituacao\n      },\n       observe: \"response\"\n    });\n  }\n\n  getSituacoes() : Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/cadastros/situacao-integracao-pedido`, {\n      observe: \"response\"\n    });\n  }\n\n  getPedidosIntegracao(params) : Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/cadastros/pedidos-integracao`, {\n      params: {\n        DT_INIC_ENVI: params['DT_INIC_ENVI'],\n        DT_FINA_ENVI: params['DT_FINA_ENVI'],\n        ID_APOI_INTE_PEDI: params['ID_APOI_INTE_PEDI'].toString(),\n        //ID_EMPR: params['ID_EMPR'],\n        ID_DEPO: params['ID_DEPO'].toString(),\n        //ID_FORN: params['ID_FORN'],\n        ID_LINH: params['ID_LINH'],\n        ID_SUB_LINH: params['ID_SUB_LINH'],\n        ID_CLAS: params['ID_CLAS'],\n        ID_MATE: params['ID_MATE'].toString(),\n        //NR_PEDI: params['NR_PEDI'],\n        ID_STAT_PEDI: params['ID_STAT_PEDI'].toString(),\n        IN_INCL_ITEM_PEDI: params['IN_INCL_ITEM_PEDI'],\n        IN_GERA_RELA_EXCE: params['IN_GERA_RELA_EXCE'],\n        ID_USUA: params['ID_USUA'],\n        NR_PAGE_INIC: params['NR_PAGE_INIC'],\n        TT_REGI_PAGI: params['TT_REGI_PAGI'],\n        ORDE_BY: params['ORDE_BY'],\n        ORDE_TYPE: params['ORDE_TYPE']\n      },\n       observe: \"response\"\n    });\n  }\n\n  getPedidosIntegracaoItens(params) : Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/cadastros/pedido-integracao-itens`, {\n      params: {\n        ID_INTE_PEDI_COMP: params['ID_INTE_PEDI_COMP'],\n        ID_STAT_ITEM_PEDI: \"\",\n        NR_PAGE_INIC: \"\",\n        TT_REGI_PAGI: \"\",\n        ORDE_BY: \"\",\n        ORDE_TYPE: \"\"\n      },\n       observe: \"response\"\n    });\n  }\n\n  getPedidosIntegracaoLogs(params) : Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/cadastros/pedido-integracao-itens-auditoria`, {\n      params: {\n        ID_INTE_PEDI_COMP: params['ID_INTE_PEDI_COMP'],\n        ID_INTE_PEDI_COMP_ITEM: params['ID_INTE_PEDI_COMP_ITEM'],\n        NR_PAGE_INIC: \"\",\n        TT_REGI_PAGI: \"\",\n        ORDE_BY: \"\",\n        ORDE_TYPE: \"\"\n      },\n       observe: \"response\"\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AbastecimentoMonitoresIntegracaoPedidosComponent } from './integracao-pedidos.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AbastecimentoMonitoresIntegracaoPedidosComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AbastecimentoMonitoresIntegracaoPedidosRoutingModule { }\n","import { BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { AtividadesService } from './../../../../../../shared/services/requests/atividades.service';\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialIntegracoesDagdaIntegracaoPedidosService } from '../../services/integracao-pedidos.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { IPedido } from './../models/pedido';\n\ndefineLocale('pt-br', ptBrLocale);\n\n@Component({\n  selector: 'comercial-cadastros-linha-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialIntegracoesDagdaIntegracaoPedidosListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n  loaderModalFullScreen = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Integrado',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Ag.Integração',\n      color: 'gray',\n    },\n    {\n      id: 3,\n      text: 'Erro',\n      color: 'red',\n    },\n  ];\n\n tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  orderBy = 'codigo';\n  orderType = 'ASC';\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n\n  status: Array<any> = [];\n  logs: Array<any> = [];\n\n  dados: Array<IPedido> = [];\n  dadosPagination: Array<IPedido> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n  enviado: Array<any> = [];\n\n  appTitle = 'Integração de Pedidos';\n  modalRef: BsModalRef;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private localeService: BsLocaleService,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private integracaoPedidosService: ComercialIntegracoesDagdaIntegracaoPedidosService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService,\n    private bsModalService: BsModalService,\n  ) {\n    this.localeService.use('pt-br');\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.getStatus();\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Pedidos');\n\n  }\n\n  ngOnDestroy(): void {\n    //this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/comercial/home`,\n      },\n      {\n        descricao: 'Integração Dagda',\n        routerLink: `/comercial/integracoes/dagda/${id}`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n\n  /*Formulario */\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      idEmpresa: [formValue.idEmpresa],\n      nomeEmpresa: [formValue.nomeEmpresa],\n      pedidoTid: [formValue.pedidoTid],\n      pedidoDagda: [formValue.pedidoDagda],\n      status: [formValue.status],\n      dataAcao:[formValue.dataAcao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n\n    });\n\n    this.checkOrder();\n    this.loaderFullScreen = false;\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      idEmpresa:'',\n      nomeEmpresa: '',\n      pedidoTid:'',\n      pedidoDagda: '',\n      status: 0,\n      dataAcao:'',\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  /*Modal*/\n  openModal(template: TemplateRef<any>, index) {\n    this.modalRef = this.bsModalService.show(template,{\n      class: 'modal-xl',\n    });\n  }\n\n  closeModal(modalRef: TemplateRef<any>) {\n    this.modalRef.hide();\n  }\n\n  /*Filtrar*/\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n\n  }\n\n  /*Select */\n  getStatus() {\n    this.loaderFullScreen = true;\n    this.integracaoPedidosService\n      .getIntegracaoStatus()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.success === true) {\n            this.status = response.data\n            this.status.unshift({\n              id: 0,\n              nomeStatus: 'EXIBIR TODOS',\n            });\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n\n  /*Log /histórico */\n  onLogs(item) {\n    this.loaderModalFullScreen = true;\n    this.integracaoPedidosService\n      .getIntegracaoLogs(item)\n      .pipe(\n        finalize(() => {\n          this.loaderModalFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.body['success'] === true) {\n            this.logs = response.body['data'];\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n\n   /*Processar */\n  postProcessamento(item, index) {\n    item.dsIntegracao = 'Solicitação de Processamento'\n    this.enviado.push(index)\n    this.loaderNavbar = true;\n    this.integracaoPedidosService\n      . postIntegracaoPedidos(item)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.body['success'] === true) {\n            this.pnotifyService.success();\n            this.onFilter();\n          }\n        },\n        error: (error: any) => {\n          this.enviado = [];\n          this.pnotifyService.error();\n        }\n      });\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.pedidoTid) {\n      params.pedidoTid = this.form.value.pedidoTid;\n    }\n\n    if (this.form.value.pedidoDagda) {\n      params.pedidoDagda = this.form.value.pedidoDagda;\n    }\n\n    if (this.form.value.status) {\n      params.status = this.form.value.status;\n    }\n\n    if (this.form.value.dataAcao) {\n      params.dataAcao = this.form.value.dataAcao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.integracaoPedidosService\n    .getIntegracaoPedidos(params)\n    .pipe(\n      finalize(() => {\n        this.loaderNavbar = false;\n        this.dadosLoaded = true;\n      })\n    )\n    .subscribe({\n      next: (response:any ) => {\n        if (response.status === 200) {\n          this.dados = response.body['data'];\n          this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n          this.totalItems = this.dados.length;\n          this.dadosLoaded = true;\n        } else {\n          this.pnotifyService.notice('Nenhuma informação encontrada');\n          this.dadosEmpty = true;\n        }\n      },\n      error: (error: any) => {\n        this.dadosEmpty = true;\n        if (error.error.hasOwnProperty('mensagem')) {\n          this.pnotifyService.error(error.error.mensagem);\n        } else {\n          this.pnotifyService.error();\n        }\n      }\n    });\n  }\n\n /* Borda lateral da tabela */\n\n  classStatusBorder(item): string {\n    let borderClass: string;\n\n    if (item.status === '1') {\n    borderClass = 'border-success';\n  } else if (item.status === '2') {\n    borderClass = 'border-secondary'\n  } else if (item.status === '3') {\n    borderClass = 'border-danger';\n  }\n  return borderClass;\n }\n\n/*Paginação */\n onPageChanged(event: PageChangedEvent): void {\n  const startItem = (event.page - 1) * event.itemsPerPage;\n  const endItem = event.page * event.itemsPerPage;\n  this.dadosPagination = this.dados.slice(startItem, endItem);\n\n  this.scrollToFilter.nativeElement.scrollIntoView({\n    behavior: 'instant',\n  });\n }\n}\n","export default \".text-purple {\\n  color: purple;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hYmFzdGVjaW1lbnRvL21vbml0b3Jlcy9pbnRlZ3JhY2FvLXBlZGlkb3MvaW50ZWdyYWNhby1wZWRpZG9zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hYmFzdGVjaW1lbnRvL21vbml0b3Jlcy9pbnRlZ3JhY2FvLXBlZGlkb3MvaW50ZWdyYWNhby1wZWRpZG9zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRleHQtcHVycGxlIHtcbiAgY29sb3I6IHB1cnBsZTtcbn0iXX0= */\";","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotFoundComponent } from '../../../../../core/not-found/not-found.component';\n\nimport { ComercialIntegracoesDagdaIntegracaoPedidosListaComponent } from './lista/lista.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ComercialIntegracoesDagdaIntegracaoPedidosListaComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialIntegracoesDagdaIntegracaoPedidosRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination/ngx-bootstrap-pagination';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\ndefineLocale('pt-br', ptBrLocale);\n\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\nimport { AbastecimentoMonitoresIntegracaoPedidosService } from './integracao-pedidos.service';\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'integracao-pedidos',\n  templateUrl: './integracao-pedidos.component.html',\n  styleUrls: ['./integracao-pedidos.component.scss']\n})\nexport class AbastecimentoMonitoresIntegracaoPedidosComponent implements OnInit {\n  loaderFullScreen: boolean = true;\n  loaderNavbar: boolean;\n  loading: boolean = false;\n  loadingDetalhes: boolean = false;\n  loadingLogs: boolean = false;\n  noResult: boolean = false;\n  noResultDetalhes: boolean = false;\n  noResultLogs: boolean = false;\n  visibleEtapas: boolean = false;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  form: FormGroup;\n\n  breadCrumbTree: any = [];\n  dados: any = [];\n  dadosDetalhes: any = [];\n  dadosLogs: any = [];\n  dadosExcel: any = [];\n  integradores: any = [];\n  depositos: any = [\n    { id: 1, name: \"Tiete\" },\n    { id: 2, name: \"RDP\" },\n    { id: 3, name: \"Osasco\" },\n    { id: 4, name: \"MT COGI\" }\n  ];\n  linhas: any = [];\n  subLinhas: any = [];\n  classes: any = [];\n  materiais: any = [];\n  situacoes: any = [];\n\n  /* Ordenação */\n  reverse: boolean = false;\n  key: string = 'NM_EMPR';\n  /* Ordenação */\n\n  /* Ordenação modal */\n  reverseA: boolean = false;\n  keyA: string = 'NR_ITEM_PEDI';\n\n  reverseB: boolean = false;\n  keyB: string = 'NR_ITEM_PEDI';\n\n  /* Paginação */\n  itemsPerPage: number = 15;\n  totalItems: number = 15;\n  currentPage: number = 1;\n  begin: number = 0;\n  end: number = 15;\n  /* Paginação */\n\n  /* PaginationModal*/\n  currentPageA: number = 1;\n  beginA: number = 0;\n  endA: number = 15;\n\n  currentPageB: number = 1;\n  beginB: number = 0;\n  endB: number = 15;\n\n  activatedRouteSubscription: Subscription;\n\n  /* dados do usuário */\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\n  idUsuario: any = this.currentUser['info']['id'];\n  /* dados do usuário */\n\n  modal: any = [];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private localeService: BsLocaleService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private routerService: RouterService,\n    private titleService: TitleService,\n    private dateService: DateService,\n    private service: AbastecimentoMonitoresIntegracaoPedidosService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.form = this.formBuilder.group({\n      dataInicial: [null],\n      dataFinal: [null],\n      integrador: [null, Validators.required],\n      depositos: [null],\n      linha: [null],\n      subLinha: [null],\n      classe: [null],\n      material: [null],\n      situacao: [null],\n      // qtItensPagina: [this.itemsPerPageParam],\n      // pagina: [this.currentPage],\n      // orderBy: [null],\n      // orderType: [null]\n    });\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.loaderFullScreen = false;\n    }, 1000);\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.titleService.setTitle('Integração de Pedidos');\n    this.checkRouterParams();\n    this.getLinhas();\n    this.getSituacoes();\n    this.getIntegradoresPedidos();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/abastecimento/home'\n        },\n        {\n          descricao: 'Monitores',\n          routerLink: `/abastecimento/monitores/${params['idSubModulo']}`\n        },\n        {\n          descricao: 'Integração de Pedidos'\n        }\n      ];\n    });\n  }\n\n  checkRouterParams(): void {\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let _response = this.routerService.getBase64UrlParams(queryParams);\n          //busca de dados\n          this.search(_response);\n          this.setFormValues(_response);\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n  }\n\n  setFormValues(queryParams) {\n    let dataInicial = queryParams['DT_INIC_ENVI']\n      ? queryParams['DT_INIC_ENVI']\n      : null;\n    let dataFinal = queryParams['DT_FINA_ENVI'] ? queryParams['DT_FINA_ENVI'] : null;\n    let integrador = [];\n    integrador = queryParams['ID_APOI_INTE_PEDI'] ? queryParams['ID_APOI_INTE_PEDI'] : null;\n    let depositos = queryParams['ID_DEPO'] ? queryParams['ID_DEPO'] : null;\n    let situacao = queryParams['ID_STAT_PEDI'] ? queryParams['ID_STAT_PEDI'] : null;\n    let linha = queryParams['ID_LINH'] ? queryParams['ID_LINH'] : null;\n    let subLinha = queryParams['ID_SUB_LINH'] ? queryParams['ID_SUB_LINH'] : null;\n    let classe = queryParams['ID_CLAS'] ? queryParams['ID_CLAS'] : [];\n    let material = queryParams['ID_MATE'] ? queryParams['ID_MATE'] : null;\n\n    //consulta para recarregamento dos dados no form\n    this.getDadosForm({ linha, subLinha, classe, integrador });\n\n    this.form.patchValue({\n      dataInicial: dataInicial,\n      dataFinal: dataFinal,\n      integrador: integrador,\n      depositos: depositos,\n      linha: linha,\n      subLinha: subLinha,\n      classe: classe,\n      material: material,\n      situacao: situacao,\n      // qtItensPagina: this.itemsPerPageParam,\n      // pagina: this.currentPage,\n      // orderBy: orderBy,\n      // orderType: orderType\n    });\n\n  }\n\n  getDadosForm(params) {\n    /* Alimenta select depositos */\n    if (params['integrador'] !== null) {\n      let _params = {\n        ID_APOI_INTE_PEDI: params['integrador']\n      };\n\n      this.service\n        .getIntegradorDepositos(_params)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          res => {\n            if (Object.keys(res).length > 0) {\n              if (res.status === 200) {\n                this.depositos = res['body']['result'];\n                this.setFormEnable(['depositos']);\n              }\n            }\n          },\n          error => {\n            this.pnotifyService.error('Erro ao carregar Integradores');\n          }\n        );\n    } else {\n      this.loaderNavbar = false;\n      this.setFormDisable(['depositos']);\n    }\n\n    /* Alimenta select Sublinha */\n    if (params['linha'] !== null) {\n      let campos = ['subLinha'];\n\n      this.service\n        .getSubLinhas(params['linha'], 1)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          (res: any) => {\n            if (Object.keys(res).length > 0) {\n              if (res.status === 200) {\n                if (res['body']['responseCode'] === 200) {\n                  this.subLinhas = res['body']['result'];\n                  this.setFormEnable(campos);\n                } else if (res['body']['responseCode'] === 404) {\n                  this.setFormDisable(campos);\n                }\n              }\n            }\n          },\n          error => {\n            this.pnotifyService.error('Erro ao carregar Sublinhas');\n          }\n        );\n    } else {\n      this.setFormDisable(['subLinha']);\n    }\n\n    /* Alimenta select Classes */\n    if (params['linha'] !== null) {\n      let campos = ['classe'];\n\n      this.service\n        .getClasses(params['linha'], params['subLinha'], 1)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          (res: any) => {\n            if (Object.keys(res).length > 0) {\n              if (res.status === 200) {\n                this.classes = res['body']['result'];\n                this.setFormEnable(campos);\n              }\n            }\n          },\n          error => {\n            this.pnotifyService.error('Erro ao carregar Classes');\n          }\n        );\n    }\n\n    /* Alimenta select Materiais */\n    if (Object.keys(params['classe']).length > 0) {\n      let campos = ['material'];\n\n      this.service\n        .getMateriais(\n          params['classe'],\n          \"\",\n          1\n        )\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          (res: any) => {\n            if (Object.keys(res).length > 0) {\n              if (res['body'].responseCode === 200) {\n                this.materiais = res['body'].result;\n                this.setFormEnable(campos);\n              } else if (\n                res['body']['responseCode'] === 204 ||\n                res['body']['responseCode'] === 404\n              ) {\n                this.setFormDisable(campos);\n                this.pnotifyService.notice(\n                  'Não há materiais cadastrados para essa classe'\n                );\n              }\n            }\n            this.loaderNavbar = false;\n          },\n          error => {\n            this.pnotifyService.error('Erro ao carregar filtro Materias');\n          }\n        );\n    } else {\n      this.loaderNavbar = false;\n      this.setFormDisable(['material']);\n    }\n  }\n\n  getIntegradoresPedidos(): void {\n    this.loaderNavbar = true;\n    this.integradores = [];\n\n    let idSituacao = 1;\n\n    this.service\n      .getIntegradoresPedidos(idSituacao)\n      .pipe(finalize(() => (this.loaderNavbar = false)))\n      .subscribe(\n        res => {\n          if (Object.keys(res).length > 0) {\n            if (res.status === 200) {\n              this.integradores = res['body']['result'];\n            }\n          }\n        },\n        error => {\n          this.pnotifyService.error('Erro ao carregar Integradores');\n        }\n      );\n  }\n\n  getIntegradorDepositos(): void {\n    this.loaderNavbar = true;\n    this.depositos = [];\n\n    if (this.form.get('integrador').status === 'VALID') {\n      let params = {\n        ID_APOI_INTE_PEDI: this.form.value['integrador']\n      };\n\n      this.service\n        .getIntegradorDepositos(params)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          res => {\n            if (Object.keys(res).length > 0) {\n              if (res.status === 200) {\n                this.depositos = res['body']['result'];\n                this.setFormEnable(['depositos']);\n              }\n            }\n          },\n          error => {\n            this.pnotifyService.error('Erro ao carregar Integradores');\n          }\n        );\n    } else {\n      this.loaderNavbar = false;\n      this.setFormDisable(['depositos']);\n      this.setFormReset(['depositos']);\n    }\n  }\n\n  getLinhas(): void {\n    this.loaderNavbar = true;\n    this.linhas = [];\n\n    let campos = ['classe', 'subLinha', 'material', 'depositos'];\n    this.setFormDisable(campos);\n\n    let idSituacao = 1;\n\n    this.service\n      .getLinhas(idSituacao)\n      .pipe(finalize(() => (this.loaderNavbar = false)))\n      .subscribe(\n        res => {\n          if (Object.keys(res).length > 0) {\n            if (res.status === 200) {\n              this.linhas = res['body']['result'];\n            }\n          }\n        },\n        error => {\n          this.pnotifyService.error('Erro ao carregar Linhas');\n        }\n      );\n  }\n\n  getSituacoes(): void {\n    this.loaderNavbar = true;\n    this.situacoes = [];\n\n    this.service\n      .getSituacoes()\n      .pipe(finalize(() => (this.loaderNavbar = false)))\n      .subscribe(\n        res => {\n          if (Object.keys(res).length > 0) {\n            if (res.status === 200) {\n              this.situacoes = res['body']['result'];\n            }\n          }\n        },\n        error => {\n          this.pnotifyService.error('Erro ao carregar Situações');\n        }\n      );\n  }\n\n  getSubLinhas(): void {\n    this.loaderNavbar = true;\n    let campos = ['subLinha', 'classe', 'material'];\n    this.setFormReset(campos);\n    this.setFormDisable(campos);\n\n    this.subLinhas = [];\n\n    if (this.form.get('linha').status === 'VALID') {\n      let descricaoLinhas = this.form.get('linha').value;\n      let idSituacao = 1;\n      this.service\n        .getSubLinhas(descricaoLinhas, idSituacao)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          res => {\n            if (Object.keys(res).length > 0) {\n              if (res.status === 200) {\n                if (res['body']['responseCode'] === 200) {\n                  this.subLinhas = res['body']['result'];\n                  this.setFormEnable(['subLinha']);\n                } else if (res['body']['responseCode'] === 404) {\n                  this.pnotifyService.notice('Não há sublinha cadastrada');\n                }\n              }\n            }\n          },\n          error => {\n            this.pnotifyService.error('Erro ao carregar sublinhas');\n          }\n        );\n    } else {\n      this.loaderNavbar = false;\n      this.setFormDisable(['subLinha']);\n    }\n  }\n\n  getClasses(): void {\n    this.classes = [];\n    this.loaderNavbar = true;\n\n    let campos = ['classe'];\n    this.setFormReset(campos);\n\n    if (\n      this.form.value['linha'] != null &&\n      this.form.value['linha'].length > 0\n    ) {\n      let descricaoLinhas = this.form.get('linha').value;\n      let idSubLinha = this.form.get('subLinha').value;\n      let idSituacao = 1;\n\n      this.service\n        .getClasses(descricaoLinhas, idSubLinha, idSituacao)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          res => {\n            if (Object.keys(res).length > 0) {\n              if (res.status === 200) {\n                this.classes = res['body']['result'];\n                this.setFormEnable(campos);\n              }\n            }\n          },\n          error => {\n            this.pnotifyService.error('Erro ao carregar Classes');\n          }\n        );\n    } else {\n      this.loaderNavbar = false;\n      this.setFormDisable(campos);\n    }\n  }\n\n  getMateriais(): void {\n    this.materiais = [];\n    this.loaderNavbar = true;\n    let campos = ['material'];\n    this.setFormReset(campos);\n\n    let idClasses = this.form.get('classe').value;\n    let idTipoMaterial = \"\";\n    let idSituacao = 1;\n    if (\n      this.form.value['classe'] != null &&\n      this.form.value['classe'].length > 0\n    ) {\n      this.service\n        .getMateriais(idClasses, idTipoMaterial, idSituacao)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          (res: any) => {\n            if (Object.keys(res).length > 0) {\n              if (res['body'].responseCode === 200) {\n                this.materiais = res['body'].result;\n                this.setFormEnable(campos);\n              } else if (\n                res['body']['responseCode'] === 204 ||\n                res['body']['responseCode'] === 404\n              ) {\n                this.materiais = [];\n                this.setFormDisable(campos);\n                this.pnotifyService.notice(\n                  'Não há materiais cadastrados para essa classe'\n                );\n              }\n            }\n            this.loaderNavbar = false;\n          },\n          error => {\n            this.pnotifyService.error('Erro ao carregar filtro Materias');\n          }\n        );\n    } else {\n      this.loaderNavbar = false;\n      this.setFormDisable(campos);\n    }\n  }\n\n  onFilter() {\n    let dataInicial = this.setDateValid(this.form.value['dataInicial']);\n    let dataFinal = this.setDateValid(this.form.value['dataFinal']);\n\n    this.setRouterParams({\n      DT_INIC_ENVI: dataInicial ? dataInicial : \"\",\n      DT_FINA_ENVI: dataFinal ? dataFinal : \"\",\n      ID_APOI_INTE_PEDI: this.form.value['integrador'] ? this.form.value['integrador'] : \"\",\n      ID_DEPO: this.form.value['depositos'] ? this.form.value['depositos'] : \"\",\n      ID_LINH: this.form.value['linha'] ? this.form.value['linha'] : \"\",\n      ID_SUB_LINH: this.form.value['subLinha'] ? this.form.value['subLinha'] : \"\",\n      ID_CLAS: this.form.value['classe'] ? this.form.value['classe'] : \"\",\n      ID_MATE: this.form.value['material'] ? this.form.value['material'] : \"\",\n      ID_STAT_PEDI: this.form.value['situacao'] ? this.form.value['situacao'] : \"\",\n      IN_INCL_ITEM_PEDI: \"\",\n      IN_GERA_RELA_EXCE: \"\",\n      ID_USUA: \"\",\n      TT_REGI_PAGI: \"\",\n      NR_PAGE_INIC: \"\",\n      ORDE_BY: \"\",\n      ORDE_TYPE: \"\"\n    });\n  }\n\n  setRouterParams(params) {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(params)\n    });\n    //busca dados\n    this.search(params);\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.loading = false;\n\n    this.service\n      .getPedidosIntegracao(params)\n      .pipe(finalize(() => (this.loaderNavbar = false)))\n      .subscribe(\n        (res: any) => {\n          if (res.status === 200) {\n            if (res['body']['responseCode'] === 200) {\n              this.dados = res['body']['result'];\n              this.loading = true;\n              this.noResult = false;\n            } else if (res['body']['responseCode'] === 404) {\n              this.noResult = true;\n              this.pnotifyService.notice('Não há dados');\n            }\n          }\n        },\n        error => {\n          this.pnotifyService.error('Erro ao carregar dados');\n          this.noResult = true;\n        }\n      );\n  }\n\n  excelExport() {\n    let dataInicial = this.setDateValid(this.form.value['dataInicial']);\n    let dataFinal = this.setDateValid(this.form.value['dataFinal']);\n\n    let params = {\n      DT_INIC_ENVI: dataInicial ? dataInicial : \"\",\n      DT_FINA_ENVI: dataFinal ? dataFinal : \"\",\n      ID_APOI_INTE_PEDI: this.form.value['integrador'] ? this.form.value['integrador'] : \"\",\n      ID_DEPO: this.form.value['depositos'] ? this.form.value['depositos'] : \"\",\n      ID_LINH: this.form.value['linha'] ? this.form.value['linha'] : \"\",\n      ID_SUB_LINH: this.form.value['subLinha'] ? this.form.value['subLinha'] : \"\",\n      ID_CLAS: this.form.value['classe'] ? this.form.value['classe'] : \"\",\n      ID_MATE: this.form.value['material'] ? this.form.value['material'] : \"\",\n      ID_STAT_PEDI: this.form.value['situacao'] ? this.form.value['situacao'] : \"\",\n      IN_INCL_ITEM_PEDI: 1,\n      IN_GERA_RELA_EXCE: 1,\n      ID_USUA: parseInt(this.idUsuario),\n      TT_REGI_PAGI: \"\",\n      NR_PAGE_INIC: \"\",\n      ORDE_BY: \"\",\n      ORDE_TYPE: \"\"\n    };\n\n    this.getPedidosIntegracaoExcel(params);\n  }\n\n  getPedidosIntegracaoExcel(params) {\n    this.loaderNavbar = true;\n    this.dadosExcel = [];\n\n    this.service\n      .getPedidosIntegracao(params)\n      .pipe(finalize(() => (this.loaderNavbar = false)))\n      .subscribe(\n        (res: any) => {\n          if (Object.keys(res).length > 0) {\n            if (res['body']['responseCode'] === 200) {\n              this.dadosExcel = res['body']['result'];\n              this.pnotifyService.success(this.dadosExcel);\n            } else if (\n              res['body']['responseCode'] === 404\n            ) {\n              this.pnotifyService.notice('Nenhuma informação encontrada');\n            }\n          }\n        },\n        error => {\n          this.pnotifyService.error('Erro ao carregar para excel dados');\n        }\n      );\n  }\n\n  onDetalhes(item) {\n    this.modal.codFornecedor = item.ID_FORN_REFE_ERP;\n    this.modal.descFornecedor = item.NM_FORN;\n    this.modal.nPedido = item.NR_PEDI;\n    this.modal.linhaPedido = item.NM_LINH;\n    this.modal.condPagamento = item.DS_COND_PAGA;\n    this.modal.dataEnvio = item.DT_ULTI_ENVI_PEDI;\n\n    let params = {\n      ID_INTE_PEDI_COMP: item.ID\n    }\n\n    this.getPedidosIntegracaoItens(params);\n  }\n\n  onLogs(item) {\n    let params = {\n      ID_INTE_PEDI_COMP: item.ID ? item.ID : \"\",\n      ID_INTE_PEDI_COMP_ITEM: item.ID_ITEM_PEDI ? item.ID_ITEM_PEDI : \"\",\n    }\n\n    this.getPedidosIntegracaoLogs(params)\n  }\n\n  getPedidosIntegracaoLogs(params) {\n    this.loaderNavbar = true;\n    this.loadingLogs = false;\n\n    this.service\n      .getPedidosIntegracaoLogs(params)\n      .pipe(finalize(() => (this.loaderNavbar = false)))\n      .subscribe(\n        (res: any) => {\n          if (res.status === 200) {\n            if (res['body']['responseCode'] === 200) {\n              this.dadosLogs = res['body']['result'];\n              this.loadingLogs = true;\n              this.noResultLogs = false;\n            } else if (res['body']['responseCode'] === 404) {\n              this.loadingLogs = true;\n              this.noResultLogs = true;\n              this.pnotifyService.notice('Não há dados');\n            }\n          }\n        },\n        error => {\n          this.pnotifyService.error('Erro ao carregar dados');\n          this.noResultLogs = true;\n        }\n      );\n  }\n\n  getPedidosIntegracaoItens(params) {\n    this.loaderNavbar = true;\n    this.loadingDetalhes = false;\n\n    this.service\n      .getPedidosIntegracaoItens(params)\n      .pipe(finalize(() => (this.loaderNavbar = false)))\n      .subscribe(\n        (res: any) => {\n          if (res.status === 200) {\n            if (res['body']['responseCode'] === 200) {\n              this.dadosDetalhes = res['body']['result'];\n              this.loadingDetalhes = true;\n              this.noResultDetalhes = false;\n            } else if (res['body']['responseCode'] === 404) {\n              this.loadingDetalhes = true;\n              this.noResultDetalhes = true;\n              this.pnotifyService.notice('Não há dados');\n            }\n          }\n        },\n        error => {\n          this.pnotifyService.error('Erro ao carregar dados');\n          this.noResultDetalhes = true;\n          this.loadingDetalhes = true;\n        }\n      );\n  }\n\n  setDateValid(date) {\n    if (date instanceof Date) {\n      date = this.dateService.convertToUrlDate(date);\n    }\n    return date;\n  }\n\n  setFormDisable(selects) {\n    selects.forEach(element => {\n      return this.form.get(element).disable();\n    });\n  }\n\n  setFormEnable(selects) {\n    selects.forEach(element => {\n      return this.form.get(element).enable();\n    });\n  }\n\n  setFormReset(selects) {\n    selects.forEach(element => {\n      return this.form.get(element).reset();\n    });\n  }\n\n  setIconeStatus(idStatus) {\n    let icone: string;\n\n    //Aguardando integração\n    if (idStatus == 'AB3E3D41-9D81-4C68-8549-6A48E4AAC4D1') {\n      icone = 'fas fa-hourglass-half';\n    }\n    //Pronto para integrar\n    if (idStatus == '8955B81D-2B64-4839-B9F5-ACC768C9A499') {\n      icone = 'far fa-paper-plane text-secondary';\n    }\n    //Aguardando processamento do unica\n    if (idStatus == 'F8820F49-AD30-4571-A595-C7EE9AC42E5F') {\n      icone = 'fas fa-exchange-alt text-info';\n    }\n    //Erro de processamento da unica\n    if (idStatus == '8065F50C-8AF9-42E8-8AC1-8BAB9B455DB4') {\n      icone = 'fas fa-window-close text-danger';\n    }\n    //Aguardando criação de ov\n    if (idStatus == '8C812241-00BD-4809-9D0D-B13F08358796') {\n      icone = 'fas fa-cogs text-purple';\n    }\n    //Erro de criação de ov\n    if (idStatus == '69881918-9C82-4683-86B9-F822C132178F') {\n      icone = 'fas fa-exclamation-triangle text-warning';\n    }\n    //Ov gerada com sucesso\n    if (idStatus == '55DFED4D-172C-4D6C-BC5E-4BC1B007C30E') {\n      icone = 'fas fa-check text-success';\n    }\n\n    return icone;\n  }\n\n  setVisibleEtapas(): void {\n    this.visibleEtapas = !this.visibleEtapas;\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n  /* Ordenação */\n  sort(key) {\n    this.key = key;\n    this.reverse = !this.reverse;\n  }\n  /* Ordenação */\n\n  /* Ordenaçao modal */\n  sortA(keyA) {\n    this.keyA = keyA;\n    this.reverseA = !this.reverseA;\n  }\n\n  sortB(keyB) {\n    this.keyB = keyB;\n    this.reverseB = !this.reverseB;\n  }\n\n\n  /* Paginação Tabela Principal*/\n  onPageChanged(event: PageChangedEvent): void {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n  /* Paginação */\n\n  /* Paginação Modal*/\n  onPageChangedA(event: PageChangedEvent): void {\n    this.beginA = (event.page - 1) * event.itemsPerPage;\n    this.endA = event.page * event.itemsPerPage;\n  }\n\n  onPageChangedB(event: PageChangedEvent): void {\n    this.beginB = (event.page - 1) * event.itemsPerPage;\n    this.endB = event.page * event.itemsPerPage;\n  }\n\n}\n","export default \"<loader-spinner-full-screen\\n  *ngIf=\\\"loaderFullScreen\\\"\\n></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Integração de Pedidos\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\"\\n    [disabled]= \\\"form.status == 'INVALID'\\\"\\n    >\\n    Filtrar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"excelExport()\\\"\\n    [disabled]= \\\"form.status == 'INVALID'\\\"\\n    >\\n    Exportar Excel\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <advanced-filter>\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-2\\\">\\n            <label for=\\\"dataInicial\\\">Data Inicial</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"dataInicial\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataInicial\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group col-lg-2\\\">\\n            <label for=\\\"dataFinal\\\">Data Final</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"dataFinal\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataFinal\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group col-lg-2\\\">\\n            <label for=\\\"Integrador\\\">Integrador</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"integradores\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              [multiple]=\\\"true\\\"\\n              [hideSelected]=\\\"true\\\"\\n              [closeOnSelect]=\\\"false\\\"\\n              maxSelectedItems=\\\"6\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              bindLabel=\\\"NM_APOI_INTE_PEDI\\\"\\n              bindValue=\\\"ID\\\"\\n              formControlName=\\\"integrador\\\"\\n              (change)=\\\"getIntegradorDepositos()\\\"\\n              [ngClass]=\\\"onFieldRequired('integrador')\\\"\\n              >\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('integrador')\\\" message=\\\"Integrador é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-2\\\">\\n            <label for=\\\"depositos\\\">Depositos</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"depositos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              [hideSelected]=\\\"true\\\"\\n              [closeOnSelect]=\\\"false\\\"\\n              [multiple]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              bindLabel=\\\"NM_DEPO\\\"\\n              bindValue=\\\"ID_DEPO\\\"\\n              formControlName=\\\"depositos\\\"\\n            >\\n            </ng-select>\\n          </div>\\n          <div class=\\\"form-group col-lg-2\\\">\\n            <label for=\\\"linha\\\">Linha</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"linhas\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              [hideSelected]=\\\"true\\\"\\n              [closeOnSelect]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              bindLabel=\\\"NM_LINH\\\"\\n              bindValue=\\\"ID\\\"\\n              formControlName=\\\"linha\\\"\\n              (change)=\\\"\\n                getSubLinhas() +\\n                  ' ' +\\n                  getClasses()\\n              \\\"\\n            >\\n            </ng-select>\\n          </div>\\n          <div class=\\\"form-group col-lg-2\\\">\\n            <label for=\\\"subLinha\\\">Sublinha</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"subLinhas\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              [hideSelected]=\\\"true\\\"\\n              [closeOnSelect]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              bindLabel=\\\"NM_SUB_LINH\\\"\\n              bindValue=\\\"ID\\\"\\n              (change)=\\\"getClasses()\\\"\\n              formControlName=\\\"subLinha\\\"\\n            >\\n            </ng-select>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-2\\\">\\n            <label for=\\\"classe\\\">Classe</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"classes\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              [hideSelected]=\\\"true\\\"\\n              [closeOnSelect]=\\\"false\\\"\\n              maxSelectedItems=\\\"6\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              bindLabel=\\\"NM_CLAS\\\"\\n              bindValue=\\\"ID\\\"\\n              formControlName=\\\"classe\\\"\\n              (change)=\\\"getMateriais()\\\"\\n            >\\n            </ng-select>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"material\\\">Material</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"materiais\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              [hideSelected]=\\\"true\\\"\\n              [closeOnSelect]=\\\"false\\\"\\n              [multiple]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              bindLabel=\\\"ID_REFE_ERP_NM_MATE\\\"\\n              bindValue=\\\"ID\\\"\\n              formControlName=\\\"material\\\"\\n            >\\n            </ng-select>\\n          </div>        \\n          <div class=\\\"form-group col-lg-2\\\">\\n            <label for=\\\"situacao\\\">Situação</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"situacoes\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              [hideSelected]=\\\"true\\\"\\n              [closeOnSelect]=\\\"false\\\"\\n              [multiple]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              bindLabel=\\\"NM_APOI_SITU_INTE_PEDI\\\"\\n              bindValue=\\\"ID\\\"\\n              formControlName=\\\"situacao\\\"\\n            >\\n            </ng-select>\\n          </div>        \\n        </div>\\n      </form>\\n  </advanced-filter>\\n  <div class=\\\"mt-3\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"text-primary d-flex align-items-center justify-content-end\\\">\\n      <span (click)=\\\"setVisibleEtapas()\\\">\\n        <p *ngIf=\\\"visibleEtapas\\\"><strong>MOSTRAR ETAPAS</strong></p>\\n        <p *ngIf=\\\"!visibleEtapas\\\"><strong>OCULTAR ETAPAS</strong></p>\\n      </span>\\n    </div>\\n    <div class=\\\"card-deck\\\" [hidden]=\\\"visibleEtapas\\\">\\n      <div class=\\\"card border rounded bg-white shadow-sm\\\">\\n        <div class=\\\"card-body\\\">\\n          <h6 class=\\\"card-title\\\">ETAPA 1</h6>\\n          <div class=\\\"border rounded bg-white shadow-sm w-100 p-3 mb-2\\\">\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"bg-gray rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-hourglass-half\\\"></i></div>\\n              <div class=\\\"text-right\\\">\\n                <h5\\n                class=\\\"font-weight-bolder mb-1\\\">\\n                  {{dados[0].TT_AGUA_INTE}}\\n                </h5>\\n                <div class=\\\"text-muted small font-weight-bold\\\">AGUARDANDO INTEGRAÇÃO</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"border rounded bg-white shadow-sm w-100 p-3 mb-2\\\">\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"bg-secondary rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-paper-plane\\\"></i></div>\\n              <div class=\\\"text-right\\\">\\n                <h5\\n                class=\\\"font-weight-bolder mb-1\\\">\\n                  {{dados[0].TT_PRON_INTE}}\\n                </h5>\\n                <div class=\\\"text-muted small font-weight-bold\\\">PRONTO PARA INTEGRAR</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"border rounded bg-white shadow-sm w-100 p-3\\\">\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"bg-blue rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-exchange-alt\\\"></i></div>\\n              <div class=\\\"text-right\\\">\\n                <h5\\n                class=\\\"font-weight-bolder mb-1\\\">\\n                  {{dados[0].TT_AGUA_PROC_UNIC}}\\n                </h5>\\n                <div class=\\\"text-muted small font-weight-bold\\\">AGUARDANDO PROCESSAMENTO ÚNICA</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card border rounded bg-white shadow-sm\\\">\\n        <div class=\\\"card-body\\\">\\n          <h6 class=\\\"card-title\\\">ETAPA 2</h6>\\n          <div class=\\\"border rounded bg-white shadow-sm w-100 p-3 mb-2\\\">\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"bg-red rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-window-close\\\"></i></div>\\n              <div class=\\\"text-right\\\">\\n                <h5\\n                class=\\\"font-weight-bolder mb-1\\\">\\n                  {{dados[0].TT_PROC_UNIC_ERRO}}\\n                </h5>\\n                <div class=\\\"text-muted small font-weight-bold\\\">ERRO DE PROCESSAMENTO ÚNICA</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"border rounded bg-white shadow-sm w-100 p-3\\\">\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"bg-purple rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-cogs\\\"></i></div>\\n              <div class=\\\"text-right\\\">\\n                <h5\\n                class=\\\"font-weight-bolder mb-1\\\">\\n                {{dados[0].TT_AGUA_ORDE_VEND}}\\n                </h5>\\n                <div class=\\\"text-muted small font-weight-bold\\\">AGUARDANDO CRIAÇÃO DE OV</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card border rounded bg-white shadow-sm\\\">\\n        <div class=\\\"card-body\\\">\\n          <h6 class=\\\"card-title\\\">ETAPA 3</h6>\\n          <div class=\\\"border rounded bg-white shadow-sm w-100 p-3 mb-2\\\">\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"bg-yellow rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-exclamation-triangle\\\"></i></div>\\n              <div class=\\\"text-right\\\">\\n                <h5\\n                class=\\\"font-weight-bolder mb-1\\\">\\n                  {{dados[0].TT_ORDE_VEND_ERRO}}\\n                </h5>\\n                <div class=\\\"text-muted small font-weight-bold\\\">ERRO DE CRIAÇÃO DE OV</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"border rounded bg-white shadow-sm w-100 p-3\\\">\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"bg-green rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-check\\\"></i></div>\\n              <div class=\\\"text-right\\\">\\n                <h5\\n                class=\\\"font-weight-bolder mb-1\\\">\\n                  {{dados[0].TT_ORDE_VEND_SUCE}}\\n                </h5>\\n                <div class=\\\"text-muted small font-weight-bold\\\">OV GERADA COM SUCESSO</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"table-responsive mt-3\\\">\\n      <custom-table>\\n        <ng-template #thead let-thead>\\n          <tr class=\\\"text-center\\\">\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_EMPR')\\\">Empresa\\n              <span *ngIf=\\\"key == 'NM_EMPR'\\\"\\n                ><i\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                ></i\\n              ></span>\\n              <span *ngIf=\\\"key != 'NM_EMPR'\\\"\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n              ></span>  \\n            </th>\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_DEPO')\\\">Depósito\\n              <span *ngIf=\\\"key == 'NM_DEPO'\\\"\\n                ><i\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                ></i\\n              ></span>\\n              <span *ngIf=\\\"key != 'NM_DEPO'\\\"\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n              ></span>  \\n            </th>\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NR_PEDI')\\\">Nº pedido\\n              <span *ngIf=\\\"key == 'NR_PEDI'\\\"\\n                ><i\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                ></i\\n              ></span>\\n              <span *ngIf=\\\"key != 'NR_PEDI'\\\"\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n              ></span>  \\n            </th>\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('DT_PEDI')\\\">Data pedido\\n              <span *ngIf=\\\"key == 'DT_PEDI'\\\"\\n                ><i\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                ></i\\n              ></span>\\n              <span *ngIf=\\\"key != 'DT_PEDI'\\\"\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n              ></span>  \\n            </th>\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_APOI_INTE_PEDI')\\\">Linha do pedido\\n              <span *ngIf=\\\"key == 'NM_APOI_INTE_PEDI'\\\"\\n                ><i\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                ></i\\n              ></span>\\n              <span *ngIf=\\\"key != 'NM_APOI_INTE_PEDI'\\\"\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n              ></span>  \\n            </th>\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_GRUP_FORN')\\\">Grupo do fornecedor\\n              <span *ngIf=\\\"key == 'NM_GRUP_FORN'\\\"\\n                ><i\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                ></i\\n              ></span>\\n              <span *ngIf=\\\"key != 'NM_GRUP_FORN'\\\"\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n              ></span>  \\n            </th>\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('VL_TOTA_PEDI')\\\">Valor total\\n              <span *ngIf=\\\"key == 'VL_TOTA_PEDI'\\\"\\n                ><i\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                ></i\\n              ></span>\\n              <span *ngIf=\\\"key != 'VL_TOTA_PEDI'\\\"\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n              ></span>  \\n            </th>\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('QT_TOTA_PEDI')\\\">Peso (ton)\\n              <span *ngIf=\\\"key == 'QT_TOTA_PEDI'\\\"\\n                ><i\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                ></i\\n              ></span>\\n              <span *ngIf=\\\"key != 'QT_TOTA_PEDI'\\\"\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n              ></span>  \\n            </th>\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('DT_ENTR')\\\">Data desejada\\n              <span *ngIf=\\\"key == 'DT_ENTR'\\\"\\n                ><i\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                ></i\\n              ></span>\\n              <span *ngIf=\\\"key != 'DT_ENTR'\\\"\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n              ></span>  \\n            </th>\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NR_ORDE_VEND_PEDI')\\\">Ordem de Venda\\n              <span *ngIf=\\\"key == 'NR_ORDE_VEND_PEDI'\\\"\\n                ><i\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                ></i\\n              ></span>\\n              <span *ngIf=\\\"key != 'NR_ORDE_VEND_PEDI'\\\"\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n              ></span>  \\n            </th>\\n            <th nowrap scope=\\\"col\\\" width=\\\"5%\\\"></th>\\n            <th nowrap scope=\\\"col\\\" width=\\\"5%\\\"></th>\\n            <th nowrap scope=\\\"col\\\" width=\\\"5%\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of dados | orderBy: key:reverse | slice: begin:end\\\">\\n            <td nowrap>{{item.NM_EMPR}}</td>\\n            <td nowrap>{{item.NM_DEPO}}</td>\\n            <td nowrap class=\\\"text-right\\\">{{item.NR_PEDI | number}}</td>\\n            <td nowrap class=\\\"text-center\\\">{{item.DT_PEDI | date:'dd/MM/yyyy'}}</td>\\n            <td nowrap>{{item.NM_LINH}}</td>\\n            <td nowrap>{{item.NM_GRUP_FORN}}</td>\\n            <td nowrap class=\\\"text-right\\\">{{item.VL_TOTA_PEDI | currency:'BRL'}}</td>\\n            <td nowrap class=\\\"text-right\\\">{{item.QT_TOTA_PEDI_TONE | number:'0.3'}}</td>\\n            <td nowrap class=\\\"text-center\\\">{{item.DT_ENTR ? (item.DT_ENTR | date:'dd/MM/yyyy') : \\\"-\\\"}}</td>\\n            <td nowrap class=\\\"text-center\\\">{{item.NR_ORDE_VEND_PEDI ? (item.NR_ORDE_VEND_PEDI | number:'0.0') : '-' }}</td>\\n            <td nowrap width=\\\"5%\\\" class=\\\"text-center\\\">\\n              <span>\\n                <i [ngClass]=\\\"setIconeStatus(item.ID_STAT_PEDI)\\\" tooltip=\\\"{{item.DS_STAT_PEDI}}\\\"></i>\\n              </span>\\n            </td>\\n            <td width=\\\"5%\\\" class=\\\"text-center\\\">\\n              <span>\\n                <i class=\\\"fas fa-external-link-alt text-info\\\" (click)=\\\"lgModalA.show() + '' +  onLogs(item)\\\" tooltip=\\\"Logs\\\"></i>\\n              </span>\\n            </td>\\n            <td nowrap width=\\\"5%\\\" class=\\\"text-center\\\">\\n              <span>\\n                <i class=\\\"fas fa-search\\\" (click)=\\\"lgModal.show() + ' ' +  onDetalhes(item)\\\" tooltip=\\\"Detalhes\\\"></i>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n    <div\\n    class=\\\"col-12 mb-2 ml-2\\\"\\n    *ngIf=\\\"!noResult && dados?.length > itemsPerPage\\\"\\n  >\\n    Exibindo {{ begin + 1 }} a {{ end }} de {{ dados?.length }}\\n    <div class=\\\"d-flex\\\">\\n      <pagination\\n        [maxSize]=\\\"10\\\"\\n        [totalItems]=\\\"dados?.length\\\"\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        [(ngModel)]=\\\"currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\"\\n        nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\"\\n      >\\n      </pagination>\\n    </div>\\n  </div>\\n  </div>\\n  <div\\n    *ngIf=\\\"noResult\\\"\\n    class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\n    style=\\\"height: 80%;\\\"\\n  >\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\\n<div\\n  bsModal\\n  #lgModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\"\\n  [hidden]=\\\"!loadingDetalhes\\\"\\n>\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Detalhes\\n        </h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right\\\"\\n          (click)=\\\"lgModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"mt-3\\\">\\n          <div class=\\\"row mb-2 mt-2\\\">\\n            <div class=\\\"col-3\\\">\\n              <p style=\\\"font-size: 14px;\\\">\\n                <strong> CÓD. FORNECEDOR: </strong> {{ modal.codFornecedor | number}}\\n              </p>\\n            </div>\\n            <div class=\\\"col-3\\\">\\n              <p style=\\\"font-size: 14px;\\\">\\n                <strong> FORNECEDOR: </strong> {{ modal.descFornecedor }}\\n              </p>\\n            </div>\\n            <div class=\\\"col-3\\\">\\n              <p style=\\\"font-size: 14px;\\\">\\n                <strong> Nº PEDIDO: </strong> {{ modal.nPedido | number }}\\n              </p>\\n            </div>\\n            <div class=\\\"col-3\\\">\\n              <p style=\\\"font-size: 14px;\\\">\\n                <strong> LINHA PEDIDO: </strong> {{ modal.linhaPedido }}\\n              </p>\\n            </div>\\n          </div>\\n          <div class=\\\"row mb-2 mt-2\\\">\\n            <div class=\\\"col-4\\\">\\n              <p style=\\\"font-size: 14px;\\\">\\n                <strong> COND. PAGAMENTO: </strong> {{ modal.condPagamento }}\\n              </p>\\n            </div>\\n            <div class=\\\"col-4\\\">\\n              <p style=\\\"font-size: 14px;\\\">\\n                <strong> DATA ENVIO: </strong> {{ modal.dataEnvio ? (modal.dataEnvio | date:'dd/MM/yyyy') : '-' }}\\n              </p>\\n            </div>\\n          </div>\\n          <div class=\\\"table-responsive\\\" *ngIf=\\\"!noResultDetalhes && loadingDetalhes\\\">\\n            <custom-table>\\n              <ng-template #thead let-thead>\\n                <tr class=\\\"text-center\\\">\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortA('NR_ITEM_PEDI')\\\">Item\\n                    <span *ngIf=\\\"keyA == 'NR_ITEM_PEDI'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyA != 'NR_ITEM_PEDI'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortA('ID_MATE_REFE_ERP')\\\">Cód. material\\n                    <span *ngIf=\\\"keyA == 'ID_MATE_REFE_ERP'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyA != 'ID_MATE_REFE_ERP'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortA('NM_MATE')\\\">Material\\n                    <span *ngIf=\\\"keyA == 'NM_MATE'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyA != 'NM_MATE'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortA('NM_LINH')\\\">Linha\\n                    <span *ngIf=\\\"keyA == 'NM_LINH'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyA != 'NM_LINH'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortA('NM_SUB_LINH')\\\">Sublinha\\n                    <span *ngIf=\\\"keyA == 'NM_SUB_LINH'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyA != 'NM_SUB_LINH'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortA('NM_CLAS')\\\">Classe\\n                    <span *ngIf=\\\"keyA == 'NM_CLAS'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyA != 'NM_CLAS'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortA('DS_UNID')\\\">Un. Medida\\n                    <span *ngIf=\\\"keyA == 'DS_UNID'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyA != 'DS_UNID'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortA('CD_MATE_FORN')\\\">Cód. Mat. Fornecedor\\n                    <span *ngIf=\\\"keyA == 'CD_MATE_FORN'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyA != 'CD_MATE_FORN'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortA('VL_UNIT_ITEM')\\\">Valor Unitário\\n                    <span *ngIf=\\\"keyA == 'VL_UNIT_ITEM'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyA != 'VL_UNIT_ITEM'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortA('QT_ITEM')\\\">Peso (TON)\\n                    <span *ngIf=\\\"keyA == 'QT_ITEM'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyA != 'QT_ITEM'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortA('VL_TOTA_ITEM')\\\">Valor Total\\n                    <span *ngIf=\\\"keyA == 'VL_TOTA_ITEM'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyA != 'VL_TOTA_ITEM'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortA('NR_ORDE_VEND_ITEM_PEDI')\\\">Ordem de Venda\\n                    <span *ngIf=\\\"keyA == 'NR_ORDE_VEND_ITEM_PEDI'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyA != 'NR_ORDE_VEND_ITEM_PEDI'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th scope=\\\"col\\\" width=\\\"5%\\\"></th>\\n                  <th scope=\\\"col\\\" width=\\\"5%\\\"></th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of dadosDetalhes | orderBy: keyA:reverseA | slice: beginA:endA\\\">\\n                  <td nowrap class=\\\"text-right\\\">{{ item.NR_ITEM_PEDI | number}}</td>\\n                  <td nowrap class=\\\"text-right\\\">{{ item.ID_MATE_REFE_ERP | number}}</td>\\n                  <td nowrap>{{ item.NM_MATE}}</td>\\n                  <td nowrap>{{ item.NM_LINH}}</td>\\n                  <td nowrap class=\\\"text-center\\\">{{ item.NM_SUB_LINH ? item.NM_SUB_LINH : '-' }}</td>\\n                  <td nowrap>{{ item.NM_CLAS}}</td>\\n                  <td nowrap class=\\\"text-center\\\">{{ item.DS_UNID}}</td>\\n                  <td nowrap class=\\\"text-center\\\">{{ item.CD_MATE_FORN ? item.CD_MATE_FORN : '-' }} </td>\\n                  <td nowrap class=\\\"text-right\\\">{{ item.VL_UNIT_ITEM | currency:'BRL'}}</td>\\n                  <td nowrap class=\\\"text-right\\\">{{ item.QT_ITEM_TONE | number: '0.3'}}</td>\\n                  <td nowrap class=\\\"text-right\\\">{{ item.VL_TOTA_ITEM | currency:'BRL'}}</td>\\n                  <td nowrap class=\\\"text-center\\\">{{item.NR_ORDE_VEND_ITEM_PEDI? (item.NR_ORDE_VEND_ITEM_PEDI | number:'0.0' ) : '-'}}</td>\\n                  <td width=\\\"5%\\\" class=\\\"text-center\\\">\\n                    <span>\\n                      <i [ngClass]=\\\"setIconeStatus(item.ID_STAT_ITEM_PEDI)\\\" tooltip=\\\"{{item.DS_STAT_ITEM_PEDI}}\\\"></i>\\n                    </span>\\n                  </td>\\n                  <td width=\\\"5%\\\" class=\\\"text-center\\\">\\n                    <span>\\n                      <i class=\\\"fas fa-external-link-alt text-info\\\" (click)=\\\"lgModalA.show() + '' +  onLogs(item)\\\" tooltip=\\\"Logs\\\"></i>\\n                    </span>\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n          <div\\n          class=\\\"col-12 mb-2 ml-2\\\"\\n          *ngIf=\\\"!noResultDetalhes && dadosDetalhes?.length > itemsPerPage\\\"\\n        >\\n          Exibindo {{ beginA + 1 }} a {{ endA }} de {{ dadosDetalhes?.length }}\\n          <div class=\\\"d-flex\\\">\\n            <pagination\\n              [maxSize]=\\\"10\\\"\\n              [totalItems]=\\\"dadosDetalhes?.length\\\"\\n              (pageChanged)=\\\"onPageChangedA($event)\\\"\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n              [boundaryLinks]=\\\"true\\\"\\n              [(ngModel)]=\\\"currentPageA\\\"\\n              previousText=\\\"&lsaquo;\\\"\\n              nextText=\\\"&rsaquo;\\\"\\n              firstText=\\\"&laquo;\\\"\\n              lastText=\\\"&raquo;\\\"\\n            >\\n            </pagination>\\n          </div>\\n        </div>\\n        </div>\\n        <div\\n          *ngIf=\\\"noResultDetalhes\\\"\\n          class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\n          style=\\\"height: 80%;\\\"\\n        >\\n          <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #lgModalA=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\"\\n  [hidden]=\\\"!loadingLogs\\\"\\n  >\\n  <div class=\\\"modal-dialog modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          Logs\\n        </h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right\\\"\\n          (click)=\\\"lgModalA.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\" style=\\\"height:550px\\\">\\n        <div class=\\\"mt-3\\\">\\n          <div class=\\\"table-responsive\\\" *ngIf=\\\"!noResultLogs && loadingLogs\\\">\\n            <custom-table>\\n              <ng-template #thead let-thead>\\n                <tr class=\\\"text-center\\\">\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortB('NR_ITEM_PEDI')\\\">Item\\n                    <span *ngIf=\\\"keyB == 'NR_ITEM_PEDI'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyB != 'NR_ITEM_PEDI'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortB('ID_MATE_REFE_ERP')\\\">Cód. Requisição\\n                    <span *ngIf=\\\"keyB == 'ID_MATE_REFE_ERP'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyB != 'ID_MATE_REFE_ERP'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortB('NM_MATE')\\\">Descrição envio\\n                    <span *ngIf=\\\"keyB == 'NM_MATE'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyB != 'NM_MATE'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortB('NM_LINH')\\\">Data envio\\n                    <span *ngIf=\\\"keyB == 'NM_LINH'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyB != 'NM_LINH'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                  <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sortB('NM_SUB_LINH')\\\">Usuário\\n                    <span *ngIf=\\\"keyB == 'NM_SUB_LINH'\\\"\\n                      ><i\\n                        [ngClass]=\\\"reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                      ></i\\n                    ></span>\\n                    <span *ngIf=\\\"keyB != 'NM_SUB_LINH'\\\"\\n                      ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                    ></span>  \\n                  </th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr class=\\\"text-center\\\" *ngFor=\\\"let item of dadosLogs | orderBy: keyB:reverseB | slice: beginB:endB\\\">\\n                  <td nowrap>{{ item.NR_ITEM_PEDI }}</td>\\n                  <td nowrap>{{ item.CD_STAT_RETO_REQU }}</td>\\n                  <td nowrap>{{ item.DS_STAT_RETO_REQU }}</td>\\n                  <td nowrap>{{ item.DT_ACAO | date:'dd/MM/yyyy HH:mm' }}</td>\\n                  <td nowrap>{{ item.NM_USUA }}</td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n          <div\\n          class=\\\"col-12 mb-2 ml-2\\\"\\n          *ngIf=\\\"!noResultLogs && dadosLogs?.length > itemsPerPage\\\"\\n        >\\n          Exibindo {{ beginB + 1 }} a {{ endB }} de {{ dadosLogs?.length }}\\n          <div class=\\\"d-flex\\\">\\n            <pagination\\n              [maxSize]=\\\"10\\\"\\n              [totalItems]=\\\"dadosLogs?.length\\\"\\n              (pageChanged)=\\\"onPageChangedB($event)\\\"\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n              [boundaryLinks]=\\\"true\\\"\\n              [(ngModel)]=\\\"currentPageB\\\"\\n              previousText=\\\"&lsaquo;\\\"\\n              nextText=\\\"&rsaquo;\\\"\\n              firstText=\\\"&laquo;\\\"\\n              lastText=\\\"&raquo;\\\"\\n            >\\n            </pagination>\\n          </div>\\n        </div>\\n        </div>\\n        <div\\n          *ngIf=\\\"noResultLogs\\\"\\n          class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\n          style=\\\"height: 80%;\\\"\\n        >\\n          <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\" Integração DAGDA\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n     <div class=\\\"row\\\" #scrollToFilter>\\n      <div class=\\\"col\\\">\\n        <advanced-filter>\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-lg-3\\\">\\n                <label for=\\\"pedidoTid\\\">\\n                  <span class=\\\"mr-1\\\">Pedido TID</span>\\n                <ng-template #tooltipLabelDeTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Código do Pedido TID</p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelDeTemplate\\\" container=\\\"body\\\"></i>\\n                </label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"pedidoTid\\\"\\n                  (keydown.enter)=\\\"onFilter()\\\">\\n              </div>\\n              <div class=\\\"form-group col-lg-3\\\">\\n                <label for=\\\"pedidoDagda\\\">\\n                  <span class=\\\"mr-1\\\">Pedido Dagda</span>\\n                <ng-template #tooltipLabelParaTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Código do Pedido Dagda </p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelParaTemplate\\\" container=\\\"body\\\"></i> </label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"pedidoDagda\\\"\\n                  (keydown.enter)=\\\"onFilter()\\\">\\n              </div>\\n              <div class=\\\"form-group col-lg-3\\\">\\n                <label for=\\\"status\\\">Status</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  [clearable]=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  [items]=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  [virtualScroll]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  labelForId=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  bindLabel=\\\"nomeStatus\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  bindValue=\\\"id\\\"\\n                  formControlName=\\\"status\\\"\\n                  >\\n                </ng-select>\\n              </div>\\n            </div>\\n          </form>\\n        </advanced-filter>\\n      </div>\\n    </div>\\n    <!-- *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty -->\\n    <div class=\\\"row\\\" >\\n      <div class=\\\"col\\\">\\n        <subtitles\\n          [data]=\\\"subtitles\\\"\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty \\\">\\n        </subtitles>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\"   class=\\\"table\\\">\\n          <ng-template  #thead let-thead >\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código Empresa</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Nome da Empresa</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Pedido TID</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Pedido Dagda</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Status</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Dt.Integração</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody >\\n            <tr *ngFor=\\\"let item of dadosPagination; let i = index;\\\">\\n              <td\\n                class=\\\"hover text-center\\\"\\n                [ngClass]=\\\"classStatusBorder(item)\\\">\\n                {{ item.idEmpresa }}\\n              </td>\\n              <td\\n                class=\\\"hover text-center\\\">\\n                {{ item.nomeEmpresa | uppercase}}\\n              </td>\\n              <td\\n                class=\\\"hover text-center\\\">\\n                {{ item.pedidoTid | uppercase}}\\n              </td>\\n              <td\\n                class=\\\"hover text-center\\\">\\n                {{ item.pedidoDagda | uppercase}}\\n              </td>\\n              <td\\n                class=\\\"hover text-center\\\">\\n                {{ item.nomeStatus | uppercase}}\\n              </td>\\n              <td\\n                class=\\\"hover text-center\\\">\\n                {{ item.dataAcao | date: 'dd/MM/yyyy' }}\\n              </td>\\n              <td class=\\\"text-center\\\" >\\n                <span >\\n                <btn-icon\\n                  icon=\\\"fas fa-sync-alt\\\"\\n                  color=\\\"danger\\\"\\n                  size=\\\"small\\\"\\n                  tooltip=\\\"Reprocessar\\\"\\n                  *ngIf=\\\"item.status == '3'\\\"\\n                  (click)=\\\"postProcessamento(item , i);\\\"\\n                  >\\n                </btn-icon>\\n                </span>\\n              </td>\\n              <td>\\n              <span class=\\\"ml-2\\\">\\n                <btn-icon\\n                    icon=\\\"fas fa-history text-primary\\\"\\n                    size=\\\"small\\\"\\n                    tooltip=\\\"Log\\\"\\n                    (click)=\\\"openModal(template, i); onLogs(item)\\\">\\n                  </btn-icon>\\n              </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <empty-result\\n          message=\\\"Nenhuma informação encontrada\\\"\\n          class=\\\"my-3\\\"\\n          *ngIf=\\\"dadosEmpty\\\">\\n        </empty-result>\\n        <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n          <pagination\\n            [maxSize]=\\\"10\\\"\\n            [(totalItems)]=\\\"totalItems\\\"\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n            [boundaryLinks]=\\\"true\\\"\\n            [(ngModel)]=\\\"currentPage\\\"\\n            previousText=\\\"&lsaquo;\\\"\\n            nextText=\\\"&rsaquo;\\\"\\n            firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\">\\n          </pagination>\\n        </div>\\n     </div>\\n    </div>\\n\\n    <ng-template #template>\\n      <div class=\\\"modal-body\\\">\\n        <loader-spinner-full-screen *ngIf=\\\"loaderModalFullScreen\\\"></loader-spinner-full-screen>\\n        <button type=\\\"button\\\" class=\\\"close pull-right \\\" (click)=\\\"closeModal(template)\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n        <div class=\\\"text-center mtc-title \\\">\\n          <label>Integração de Pedidos</label>\\n        </div>\\n        <custom-table>\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Hora</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Status</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Motivo</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let item of logs; let i = index;\\\" >\\n              <td class=\\\"hover text-center\\\">\\n                {{ item.dataAcao | date: 'dd/MM/yyyy'}}\\n              </td>\\n              <td class=\\\"hover text-center\\\">\\n                {{ item.dataAcao | date: 'HH:MM:ss'}}\\n              </td>\\n              <td class=\\\"hover text-center\\\">\\n                {{ item.nomeStatus}}\\n              </td>\\n              <td class=\\\"hover text-center\\\">\\n                {{ item.dsIntegracao }}\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </div>\\n    </ng-template>\\n</app-body>\\n\\n\";","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { Observable, forkJoin } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialIntegracoesDagdaIntegracaoPedidosService {\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/integracoes/dagda`;\n\n  constructor(\n    private http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getIntegracaoPedidos(param: any) {\n    return this.http.get(\n      `${this.API}`,\n      {\n        params: param,\n        observe: 'response',\n      }\n    );\n  }\n\n  postIntegracaoPedidos(params) {\n    return this.http.post(`${this.API}`, params, {\n      observe: 'response',\n    });\n  }\n\n  getIntegracaoStatus() {\n    return this.http.get(\n      `${this.API}/status`\n    );\n  }\n\n  getIntegracaoLogs(param: any) {\n    return this.http.get(\n      `${this.API}/logs`,\n      {\n        params: param,\n        observe: 'response',\n      }\n    );\n  }\n}\n","import { ComercialIntegracoesDagdaIntegracaoPedidosListaComponent } from './lista/lista.component';\nimport { TemplatesModule } from '../../../../../shared/templates/templates.module';\nimport { SharedModule } from '../../../../../shared/modules/shared.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { registerLocaleData } from '@angular/common';\nimport localeBr from '@angular/common/locales/pt';\nimport { LOCALE_ID } from '@angular/core';\nregisterLocaleData(localeBr, 'pt')\n\n\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComercialIntegracoesDagdaIntegracaoPedidosRoutingModule } from './integracao-pedidos-routing.module';\n\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\n//import { ComercialCadastrosPedidosTemplatesModule } from '../../../cadastros/pedidos/templates/templates.module';\n\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\n\n@NgModule({\n  declarations: [\n    ComercialIntegracoesDagdaIntegracaoPedidosListaComponent,\n\n  ],\n  imports: [\n    CommonModule,\n    TooltipModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule,\n    NgSelectModule,\n    SharedModule,\n    TemplatesModule,\n    NotFoundModule,\n    //ComercialIntegracoesDagdaPedidosTemplatesModule,\n   // ComercialCadastrosPedidosTemplatesModule,\n    ComercialIntegracoesDagdaIntegracaoPedidosRoutingModule,\n  ],\n\n  providers : [\n   { provide: LOCALE_ID, useValue: 'pt-BR'}\n  ]\n})\nexport class ComercialIntegracoesDagdaIntegracaoPedidosModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}