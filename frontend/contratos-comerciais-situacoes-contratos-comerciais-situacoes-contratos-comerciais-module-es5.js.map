{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/contratos-comerciais/situacoes-contratos-comerciais/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/contratos-comerciais/situacoes-contratos-comerciais/situacoes-contratos-comerciais.service.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/contratos-comerciais/situacoes-contratos-comerciais/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/contratos-comerciais/situacoes-contratos-comerciais/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/contratos-comerciais/situacoes-contratos-comerciais/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/contratos-comerciais/situacoes-contratos-comerciais/situacoes-contratos-comerciais-routing.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/contratos-comerciais/situacoes-contratos-comerciais/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/contratos-comerciais/situacoes-contratos-comerciais/situacoes-contratos-comerciais.module.ts","webpack:///src/app/modules/comercial/cadastros/contratos-comerciais/situacoes-contratos-comerciais/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/contratos-comerciais/situacoes-contratos-comerciais/lista/lista.component.html"],"names":["ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisListaComponent","activatedRoute","router","location","formBuilder","situacaoContratossService","pnotifyService","atividadesService","titleService","confirmModalService","detailPanelService","loaderNavbar","loaderFullScreen","breadCrumbTree","subtitles","id","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","getPNotify","registrarAcesso","setBreadCrumb","setFormFilter","setTitle","onDetailPanelEmitter","setSituacaoContratoSelecionada","showDetailPanelSubscription","unsubscribe","subscribe","params","descricao","routerLink","config","event","showing","formValue","checkRouterParams","form","group","situacaoContrato","inEditar","inAprovacao","inSituacao","pagina","registros","required","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","value","situacaoContratoSelecionada","codSituacao","nomeSituacao","situacao","codUsuario","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","hide","getListaSituacoesContratosComerciais","pipe","next","response","hasOwnProperty","success","data","slice","error","mensagem","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","index","confirmActivate","asObservable","result","activateSituacaoContrato","refreshMainData","showConfirm","activateSituacaoContratoComercial","confirmInactive","inactivateSituacaoContrato","inactivateSituacaoContratoComercial","i","selector","template","ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisService","http","API","httpParams","param","append","codSituacaoContrato","post","put","updateSituacaoContratoComercial","saveSituacaoContratoComercial","codigo","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisFormularioComponent","situacaoContratosService","formChanged","setFormBuilder","appTitle","idSubModulo","snapshot","detalhes","back","pristine","submittingForm","save","reset","notice","confirm","ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisFormularioResolverGuard","situacoesContratosService","route","getDetalhes","nomeUsuario","dataCadastro","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisRoutingModule","imports","forChild","exports","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisModule","declarations","forRoot","providers"],"mappings":"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","file":"contratos-comerciais-situacoes-contratos-comerciais-situacoes-contratos-comerciais-module-es5.js","sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisService } from '../situacoes-contratos-comerciais.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { ISituacaoContratos } from '../models/situacoes-contratos-comerciais';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-contratos-situacao-contratos-comerciais-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisListaComponent\r\n  implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'nomeSituacao';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<ISituacaoContratos> = [];\r\n  dadosPagination: Array<ISituacaoContratos> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  situacaoContratoSelecionada: ISituacaoContratos;\r\n  alteracoes: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private situacaoContratossService: ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Situação dos contratos comerciais');\r\n    this.onDetailPanelEmitter();\r\n    this.setSituacaoContratoSelecionada();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Situação dos contratos comerciais',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      situacaoContrato: [formValue.situacaoContrato],\r\n      inEditar: [formValue.inEditar],\r\n      inAprovacao: [formValue.inAprovacao],\r\n      inSituacao: [formValue.inSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      situacaoContrato: null,\r\n      inEditar: 0,\r\n      inAprovacao: 0,\r\n      inSituacao: 0,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setSituacaoContratoSelecionada(): void {\r\n    this.situacaoContratoSelecionada = {\r\n      codSituacao: null,\r\n      nomeSituacao: null,\r\n      inEditar: 0,\r\n      inAprovacao: 0,\r\n      inSituacao: 0,\r\n      situacao: null,\r\n      codUsuario: null,\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.situacaoContrato) {\r\n      params.situacaoContrato = this.form.value.situacaoContrato;\r\n    }\r\n\r\n    if (this.form.value.inEditar) {\r\n      params.inEditar = this.form.value.inEditar;\r\n    }\r\n\r\n    if (this.form.value.inAprovacao) {\r\n      params.inAprovacao = this.form.value.inAprovacao;\r\n    }\r\n\r\n    if (this.form.value.inSituacao) {\r\n      params.inSituacao = this.form.value.inSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    this.situacaoContratossService\r\n      .getListaSituacoesContratosComerciais(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(situacaoContrato: ISituacaoContratos): string {\r\n    let borderClass: string;\r\n\r\n    if (situacaoContrato.inSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (situacaoContrato.inSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(situacaoContrato: ISituacaoContratos): void {\r\n    /* this.loaderNavbar = true;\r\n    this.detailPanelService.show(); */\r\n    this.setSituacaoContratoSelecionada();\r\n    this.situacaoContratoSelecionada = situacaoContrato;\r\n    /* this.alteracoes = []; */\r\n\r\n    /* this.situacaoContratossService\r\n      .getAlteracoes(situacaoContrato.codigo)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.alteracoes = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      ); */\r\n  }\r\n\r\n  onEdit(situacaoContrato: ISituacaoContratos): void {\r\n    this.router.navigate(['../editar', situacaoContrato.codSituacao], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, situacaoContrato: ISituacaoContratos): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateSituacaoContrato(index, situacaoContrato) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(situacaoContrato);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].inSituacao = 0;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateSituacaoContrato(\r\n    index: number,\r\n    situacaoContrato: ISituacaoContratos\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].inSituacao = 1;\r\n\r\n    return this.situacaoContratossService.activateSituacaoContratoComercial(\r\n      situacaoContrato.codSituacao\r\n    );\r\n  }\r\n\r\n  onInactivate(index: number, situacaoContrato: ISituacaoContratos): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result\r\n            ? this.inactivateSituacaoContrato(index, situacaoContrato)\r\n            : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(situacaoContrato);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].inSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateSituacaoContrato(\r\n    index: number,\r\n    situacaoContrato: ISituacaoContratos\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n\r\n    this.dadosPagination[index].inSituacao = 0;\r\n\r\n    return this.situacaoContratossService.inactivateSituacaoContratoComercial(\r\n      situacaoContrato.codSituacao\r\n    );\r\n  }\r\n\r\n  refreshMainData(situacaoContrato: ISituacaoContratos): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (situacaoContrato.codSituacao === this.dados[i].codSituacao) {\r\n        this.dados[i].inSituacao = situacaoContrato.inSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { ISituacaoContratos } from './models/situacoes-contratos-comerciais';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/contratos-comerciais/situacoes-contratos-comerciais`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaSituacoesContratosComerciais(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codSituacaoContrato: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codSituacaoContrato}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codSituacaoContrato: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codSituacaoContrato}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveSituacaoContratoComercial(situacaoContrato: ISituacaoContratos) {\r\n    return this.http.post(`${this.API}/salvar`, situacaoContrato).pipe(take(1));\r\n  }\r\n\r\n  private updateSituacaoContratoComercial(\r\n    situacaoContrato: ISituacaoContratos\r\n  ) {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, situacaoContrato)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  save(situacaoContrato: ISituacaoContratos): Observable<any> {\r\n    if (situacaoContrato.codSituacao !== null) {\r\n      return this.updateSituacaoContratoComercial(situacaoContrato);\r\n    }\r\n\r\n    return this.saveSituacaoContratoComercial(situacaoContrato);\r\n  }\r\n\r\n  activateSituacaoContratoComercial(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  inactivateSituacaoContratoComercial(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jb250cmF0b3MtY29tZXJjaWFpcy9zaXR1YWNvZXMtY29udHJhdG9zLWNvbWVyY2lhaXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisService } from '../situacoes-contratos-comerciais.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { ISituacaoContratos } from '../models/situacoes-contratos-comerciais';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-cnaes-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderNavbar: boolean;\r\n  loaderFullScreen = true;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<any> = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private situacaoContratosService: ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar Situação de contrato';\r\n      } else {\r\n        this.appTitle = 'Nova Situação de contrato';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Situação dos contratos comerciais',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/contratos-comerciais/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: ISituacaoContratos = this.activatedRoute.snapshot.data\r\n        .detalhes.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codSituacao: [detalhes.codSituacao],\r\n        nomeSituacao: [detalhes.nomeSituacao, [Validators.required]],\r\n        inEditar: [detalhes.inEditar, [Validators.required]],\r\n        inAprovacao: [detalhes.inAprovacao, [Validators.required]],\r\n        inSituacao: [\r\n          detalhes.inSituacao ? detalhes.inSituacao : 1,\r\n          [Validators.required],\r\n        ],\r\n      });\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.situacaoContratosService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    \r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisService } from '../situacoes-contratos-comerciais.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private situacoesContratosService: ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.situacoesContratosService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codSituacao: null,\r\n        nomeSituacao: null,\r\n        inEditar: 1,\r\n        inAprovacao: 1,\r\n        inSituacao: 1,\r\n        situacao: null,\r\n        codUsuario: null,\r\n        nomeUsuario: null,\r\n        dataCadastro: null,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"nomeSituacao\\\">Descrição da Situação</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeSituacao\\\"\\r\\n              formControlName=\\\"nomeSituacao\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeSituacao') + ' ' + onFieldRequired(form.controls.nomeSituacao)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeSituacao')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"inEditar\\\">Habilita Edição</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"inEditar\\\"\\r\\n              formControlName=\\\"inEditar\\\"\\r\\n              [ngClass]=\\\"onFieldError('inEditar') + ' ' + onFieldRequired(form.controls.inEditar)\\\">\\r\\n              <option value=\\\"1\\\">Sim</option>\\r\\n              <option value=\\\"0\\\">Não</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('inEditar')\\\" message=\\\"Habilita Edição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"inAprovacao\\\">Habilita Aprovação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"inAprovacao\\\"\\r\\n              formControlName=\\\"inAprovacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('inAprovacao') + ' ' + onFieldRequired(form.controls.inAprovacao)\\\">\\r\\n              <option value=\\\"1\\\">Sim</option>\\r\\n              <option value=\\\"0\\\">Não</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('inAprovacao')\\\" message=\\\"Habilita Aprovação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"inSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"inSituacao\\\"\\r\\n              formControlName=\\\"inSituacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('inSituacao') + ' ' + onFieldRequired(form.controls.inSituacao)\\\">\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n              <option value=\\\"0\\\">Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('inSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisRoutingModule } from './situacoes-contratos-comerciais-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisListaComponent,\r\n    ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n  ],\r\n  providers: [PNotifyService],\r\n})\r\nexport class ComercialCadastrosContratosComerciaisSituacoesContratosComerciaisModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jb250cmF0b3MtY29tZXJjaWFpcy9zaXR1YWNvZXMtY29udHJhdG9zLWNvbWVyY2lhaXMvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Situações dos contratos comerciais\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n     <div class=\\\"row\\\" #scrollToFilter>\\r\\n      <div class=\\\"col\\\">\\r\\n        <advanced-filter>\\r\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-lg-4\\\">\\r\\n                <label for=\\\"situacaoContrato\\\">\\r\\n                  <span class=\\\"mr-1\\\">Situação de contrato</span>\\r\\n                  <ng-template #tooltipLabelSituacaoContratoTemplate>\\r\\n                    <p class=\\\"text-nowrap mb-0\\\">Código ou Descrição</p>\\r\\n                    <p class=\\\"text-nowrap mb-0\\\">da situação de contrato</p>\\r\\n                  </ng-template>\\r\\n                  <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelSituacaoContratoTemplate\\\" container=\\\"body\\\"></i>\\r\\n                </label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"situacaoContrato\\\"\\r\\n                  (keydown.enter)=\\\"onFilter()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label for=\\\"inEditar\\\">Habilita Edição</label>\\r\\n                <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"inEditar\\\"\\r\\n                  formControlName=\\\"inEditar\\\">\\r\\n                  <option value=\\\"0\\\">Todos</option>\\r\\n                  <option value=\\\"1\\\">Sim</option>\\r\\n                  <option value=\\\"2\\\">Não</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label for=\\\"inAprovacao\\\">Habilita Aprovação</label>\\r\\n                <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"inAprovacao\\\"\\r\\n                  formControlName=\\\"inAprovacao\\\">\\r\\n                  <option value=\\\"0\\\">Todos</option>\\r\\n                  <option value=\\\"1\\\">Sim</option>\\r\\n                  <option value=\\\"2\\\">Não</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label for=\\\"inSituacao\\\">Situação</label>\\r\\n                <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"inSituacao\\\"\\r\\n                  formControlName=\\\"inSituacao\\\">\\r\\n                  <option value=\\\"0\\\">Todos</option>\\r\\n                  <option value=\\\"1\\\">Ativos</option>\\r\\n                  <option value=\\\"2\\\">Inativos</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label for=\\\"registros\\\">Registros</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"registros\\\"\\r\\n                  formControlName=\\\"registros\\\">\\r\\n                  <option>25</option>\\r\\n                  <option>50</option>\\r\\n                  <option>100</option>\\r\\n                  <option>200</option>\\r\\n                  <option>300</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </advanced-filter>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col-1\\\">Código</th>\\r\\n              <th scope=\\\"col-2\\\">Descrição</th>\\r\\n              <th scope=\\\"col-2\\\">Habilita Edição</th>\\r\\n              <th scope=\\\"col-2\\\">Habilita Aprovação</th>\\r\\n              <th scope=\\\"col-2\\\">Dt. Cadastro</th>\\r\\n              <th scope=\\\"col-2\\\">Usuario Cadastro</th>\\r\\n              <th scope=\\\"col-1\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let situacao of dadosPagination; let i = index\\\" [class.table-active]=\\\"situacao.codSituacao == situacaoContratoSelecionada.codSituacao\\\">\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                [ngClass]=\\\"classStatusBorder(situacao)\\\"\\r\\n                (click)=\\\"onDetails(situacao)\\\">\\r\\n                {{ situacao.codSituacao }}\\r\\n              </td>\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                (click)=\\\"onDetails(situacao)\\\">\\r\\n                {{ situacao.nomeSituacao | uppercase }}\\r\\n              </td>\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                (click)=\\\"onDetails(situacao)\\\">\\r\\n                <span *ngIf=\\\"situacao.inEditar == 1\\\">SIM</span>\\r\\n                <span *ngIf=\\\"situacao.inEditar == 0\\\">NÃO</span>\\r\\n              </td>\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                (click)=\\\"onDetails(situacao)\\\">\\r\\n                <span *ngIf=\\\"situacao.inAprovacao == 1\\\">SIM</span>\\r\\n                <span *ngIf=\\\"situacao.inAprovacao == 0\\\">NÃO</span>\\r\\n              </td>\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                (click)=\\\"onDetails(situacao)\\\">\\r\\n                {{ situacao.dataCadastro | date: 'dd/MM/yyyy HH:mm' }}\\r\\n              </td>\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                (click)=\\\"onDetails(situacao)\\\">\\r\\n                {{ situacao.nomeUsuario | uppercase }}\\r\\n              </td>\\r\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span *ngIf=\\\"situacao.inSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, situacao)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"situacao.inSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, situacao)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(situacao)\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n        <empty-result\\r\\n          message=\\\"Nenhuma informação encontrada\\\"\\r\\n          class=\\\"my-3\\\"\\r\\n          *ngIf=\\\"dadosEmpty\\\">\\r\\n        </empty-result>\\r\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n          <pagination\\r\\n            [maxSize]=\\\"maxSize\\\"\\r\\n            [(totalItems)]=\\\"totalItems\\\"\\r\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n            [boundaryLinks]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"currentPage\\\"\\r\\n            previousText=\\\"&lsaquo;\\\"\\r\\n            nextText=\\\"&rsaquo;\\\"\\r\\n            firstText=\\\"&laquo;\\\"\\r\\n            lastText=\\\"&raquo;\\\">\\r\\n          </pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n        <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\r\\n          <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                <th scope=\\\"col\\\">Usuário</th>\\r\\n                <th scope=\\\"col\\\">Alteração</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\r\\n                <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\r\\n                <td>{{ alteracao.mensagem | uppercase }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n        </detail-panel>\\r\\n      </div> -->\\r\\n    </div>\\r\\n  </app-body>\\r\\n\";"]}