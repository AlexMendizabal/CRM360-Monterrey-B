(function () {
  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  (window["webpackJsonp"] = window["webpackJsonp"] || []).push([["agenda-agenda-module"], {
    /***/
    "+1d7":
    /*!*****************************************************************!*\
      !*** ./node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js ***!
      \*****************************************************************/

    /*! exports provided: default */

    /***/
    function d7(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return lastDayOfISOWeekYear;
      });
      /* harmony import */


      var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../getISOWeekYear/index.js */
      "BKKT");
      /* harmony import */


      var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfISOWeek/index.js */
      "1dmy");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name lastDayOfISOWeekYear
       * @category ISO Week-Numbering Year Helpers
       * @summary Return the last day of an ISO week-numbering year for the given date.
       *
       * @description
       * Return the last day of an ISO week-numbering year,
       * which always starts 3 days before the year's first Thursday.
       * The result will be in the local timezone.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.
       *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
       *   This change makes the name consistent with
       *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the end of an ISO week-numbering year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The last day of an ISO week-numbering year for 2 July 2005:
       * var result = lastDayOfISOWeekYear(new Date(2005, 6, 2))
       * //=> Sun Jan 01 2006 00:00:00
       */


      function lastDayOfISOWeekYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var year = Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var fourthOfJanuary = new Date(0);
        fourthOfJanuary.setFullYear(year + 1, 0, 4);
        fourthOfJanuary.setHours(0, 0, 0, 0);
        var date = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuary);
        date.setDate(date.getDate() - 1);
        return date;
      }
      /***/

    },

    /***/
    "+7QN":
    /*!*****************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js ***!
      \*****************************************************************/

    /*! exports provided: default */

    /***/
    function QN(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return addLeadingZeros;
      });

      function addLeadingZeros(number, targetLength) {
        var sign = number < 0 ? '-' : '';
        var output = Math.abs(number).toString();

        while (output.length < targetLength) {
          output = '0' + output;
        }

        return sign + output;
      }
      /***/

    },

    /***/
    "+LmI":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/assign/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function LmI(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return assign;
      });

      function assign(target, dirtyObject) {
        if (target == null) {
          throw new TypeError('assign requires that input parameter not be null or undefined');
        }

        dirtyObject = dirtyObject || {};

        for (var property in dirtyObject) {
          if (dirtyObject.hasOwnProperty(property)) {
            target[property] = dirtyObject[property];
          }
        }

        return target;
      }
      /***/

    },

    /***/
    "+lkT":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/setUTCDay/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function lkT(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setUTCDay;
      });
      /* harmony import */


      var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg"); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
        }

        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var day = Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDay);
        var currentDay = date.getUTCDay();
        var remainder = day % 7;
        var dayIndex = (remainder + 7) % 7;
        var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
        date.setUTCDate(date.getUTCDate() + diff);
        return date;
      }
      /***/

    },

    /***/
    "/Eym":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/subWeeks/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function Eym(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return subWeeks;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addWeeks/index.js */
      "r4sE");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name subWeeks
       * @category Week Helpers
       * @summary Subtract the specified number of weeks from the given date.
       *
       * @description
       * Subtract the specified number of weeks from the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of weeks to be subtracted
       * @returns {Date} the new date with the weeks subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract 4 weeks from 1 September 2014:
       * var result = subWeeks(new Date(2014, 8, 1), 4)
       * //=> Mon Aug 04 2014 00:00:00
       */


      function subWeeks(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addWeeks_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
      }
      /***/

    },

    /***/
    "/Lp+":
    /*!**********************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInCalendarWeeks/index.js ***!
      \**********************************************************************/

    /*! exports provided: default */

    /***/
    function Lp(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInCalendarWeeks;
      });
      /* harmony import */


      var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfWeek/index.js */
      "aetl");
      /* harmony import */


      var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
      "JCDJ");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_WEEK = 604800000;
      /**
       * @name differenceInCalendarWeeks
       * @category Week Helpers
       * @summary Get the number of calendar weeks between the given dates.
       *
       * @description
       * Get the number of calendar weeks between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @returns {Number} the number of calendar weeks
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // How many calendar weeks are between 5 July 2014 and 20 July 2014?
       * var result = differenceInCalendarWeeks(
       *   new Date(2014, 6, 20),
       *   new Date(2014, 6, 5)
       * )
       * //=> 3
       *
       * @example
       * // If the week starts on Monday,
       * // how many calendar weeks are between 5 July 2014 and 20 July 2014?
       * var result = differenceInCalendarWeeks(
       *   new Date(2014, 6, 20),
       *   new Date(2014, 6, 5),
       *   { weekStartsOn: 1 }
       * )
       * //=> 2
       */

      function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var startOfWeekLeft = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyOptions);
        var startOfWeekRight = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight, dirtyOptions);
        var timestampLeft = startOfWeekLeft.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(startOfWeekLeft);
        var timestampRight = startOfWeekRight.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(startOfWeekRight); // Round the number of days to the nearest integer
        // because the number of milliseconds in a week is not constant
        // (e.g. it's different in the week of the daylight saving time clock shift)

        return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
      }
      /***/

    },

    /***/
    "/Tr7":
    /*!***************************************************!*\
      !*** ./node_modules/date-fns/esm/toDate/index.js ***!
      \***************************************************/

    /*! exports provided: default */

    /***/
    function Tr7(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return toDate;
      });
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name toDate
       * @category Common Helpers
       * @summary Convert the given argument to an instance of Date.
       *
       * @description
       * Convert the given argument to an instance of Date.
       *
       * If the argument is an instance of Date, the function returns its clone.
       *
       * If the argument is a number, it is treated as a timestamp.
       *
       * If the argument is none of the above, the function returns Invalid Date.
       *
       * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
       *
       * @param {Date|Number} argument - the value to convert
       * @returns {Date} the parsed date in the local time zone
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Clone the date:
       * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
       * //=> Tue Feb 11 2014 11:30:30
       *
       * @example
       * // Convert the timestamp to date:
       * const result = toDate(1392098430000)
       * //=> Tue Feb 11 2014 11:30:30
       */


      function toDate(argument) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
        var argStr = Object.prototype.toString.call(argument); // Clone the date

        if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {
          // Prevent the date to lose the milliseconds when passed to new Date() in IE10
          return new Date(argument.getTime());
        } else if (typeof argument === 'number' || argStr === '[object Number]') {
          return new Date(argument);
        } else {
          if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
            // eslint-disable-next-line no-console
            console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"); // eslint-disable-next-line no-console

            console.warn(new Error().stack);
          }

          return new Date(NaN);
        }
      }
      /***/

    },

    /***/
    "/h9T":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/toInteger/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function h9T(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return toInteger;
      });

      function toInteger(dirtyNumber) {
        if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
          return NaN;
        }

        var number = Number(dirtyNumber);

        if (isNaN(number)) {
          return number;
        }

        return number < 0 ? Math.ceil(number) : Math.floor(number);
      }
      /***/

    },

    /***/
    "/pik":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/formatRFC3339/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function pik(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return formatRFC3339;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../isValid/index.js */
      "Se/U");
      /* harmony import */


      var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/addLeadingZeros/index.js */
      "+7QN");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /**
       * @name formatRFC3339
       * @category Common Helpers
       * @summary Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).
       *
       * @description
       * Return the formatted date string in ISO 3339 format. Options may be passed to control the parts and notations of the date.
       *
       * @param {Date|Number} date - the original date
       * @param {Object} [options] - an object with options.
       * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds
       * @returns {String} the formatted date string
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `date` must not be Invalid Date
       * @throws {RangeError} `options.fractionDigits` must be between 0 and 3
       *
       * @example
       * // Represent 18 September 2019 in ISO 3339 format:
       * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))
       * //=> '2019-09-18T19:00:52Z'
       *
       * @example
       * // Represent 18 September 2019 in ISO 3339 format, 2 digits of second fraction:
       * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })
       * //=> '2019-09-18T19:00:52.23Z'
       *
       * @example
       * // Represent 18 September 2019 in ISO 3339 format, 3 digits of second fraction
       * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })
       * //=> '2019-09-18T19:00:52.234Z'
       */


      function formatRFC3339(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
        }

        var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

        if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(originalDate)) {
          throw new RangeError('Invalid time value');
        }

        var options = dirtyOptions || {};
        var fractionDigits = options.fractionDigits == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(options.fractionDigits); // Test if fractionDigits is between 0 and 3 _and_ is not NaN

        if (!(fractionDigits >= 0 && fractionDigits <= 3)) {
          throw new RangeError('fractionDigits must be between 0 and 3 inclusively');
        }

        var day = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getDate(), 2);
        var month = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMonth() + 1, 2);
        var year = originalDate.getFullYear();
        var hour = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getHours(), 2);
        var minute = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMinutes(), 2);
        var second = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getSeconds(), 2);
        var fractionalSecond = '';

        if (fractionDigits > 0) {
          var milliseconds = originalDate.getMilliseconds();
          var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));
          fractionalSecond = '.' + Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(fractionalSeconds, fractionDigits);
        }

        var offset = '';
        var tzOffset = originalDate.getTimezoneOffset();

        if (tzOffset !== 0) {
          var absoluteOffset = Math.abs(tzOffset);
          var hourOffset = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(absoluteOffset / 60, 2);
          var minuteOffset = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.

          var sign = tzOffset < 0 ? '+' : '-';
          offset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
        } else {
          offset = 'Z';
        }

        return "".concat(year, "-").concat(month, "-").concat(day, "T").concat(hour, ":").concat(minute, ":").concat(second).concat(fractionalSecond).concat(offset);
      }
      /***/

    },

    /***/
    "/pzQ":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/isExists/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function pzQ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isExists;
      });
      /**
       * @name isExists
       * @category Common Helpers
       * @summary Is the given date exists?
       *
       * @description
       * Checks if the given arguments convert to an existing date.
       *
       * @param {Number} year of the date to check
       * @param {Number} month of the date to check
       * @param {Number} day of the date to check
       * @returns {Boolean} the date exists
       * @throws {TypeError} 3 arguments required
       *
       * @example
       * // For the valid date:
       * var result = isExists(2018, 0, 31)
       * //=> true
       *
       * @example
       * // For the invalid date:
       * var result = isExists(2018, 1, 31)
       * //=> false
       */


      function isExists(year, month, day) {
        if (arguments.length < 3) {
          throw new TypeError('3 argument required, but only ' + arguments.length + ' present');
        }

        var date = new Date(year, month, day);
        return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;
      }
      /***/

    },

    /***/
    "/rh5":
    /*!**************************************************************!*\
      !*** ./node_modules/date-fns/esm/eachDayOfInterval/index.js ***!
      \**************************************************************/

    /*! exports provided: default */

    /***/
    function rh5(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return eachDayOfInterval;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name eachDayOfInterval
       * @category Interval Helpers
       * @summary Return the array of dates within the specified time interval.
       *
       * @description
       * Return the array of dates within the specified time interval.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `eachDay` to `eachDayOfInterval`.
       *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
       *
       *   ```
       *   2.1.3
       *   time interval
       *   part of the time axis limited by two instants
       *   ```
       *
       *   Also, this function now accepts an object with `start` and `end` properties
       *   instead of two arguments as an interval.
       *   This function now throws `RangeError` if the start of the interval is after its end
       *   or if any date in the interval is `Invalid Date`.
       *
       *   ```javascript
       *   // Before v2.0.0
       *
       *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))
       *
       *   // v2.0.0 onward
       *
       *   eachDayOfInterval(
       *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }
       *   )
       *   ```
       *
       * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
       * @param {Object} [options] - an object with options.
       * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.
       * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.step` must be a number greater than 1
       * @throws {RangeError} The start of an interval cannot be after its end
       * @throws {RangeError} Date in interval cannot be `Invalid Date`
       *
       * @example
       * // Each day between 6 October 2014 and 10 October 2014:
       * var result = eachDayOfInterval({
       *   start: new Date(2014, 9, 6),
       *   end: new Date(2014, 9, 10)
       * })
       * //=> [
       * //   Mon Oct 06 2014 00:00:00,
       * //   Tue Oct 07 2014 00:00:00,
       * //   Wed Oct 08 2014 00:00:00,
       * //   Thu Oct 09 2014 00:00:00,
       * //   Fri Oct 10 2014 00:00:00
       * // ]
       */


      function eachDayOfInterval(dirtyInterval, options) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var interval = dirtyInterval || {};
        var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.start);
        var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.end);
        var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

        if (!(startDate.getTime() <= endTime)) {
          throw new RangeError('Invalid interval');
        }

        var dates = [];
        var currentDate = startDate;
        currentDate.setHours(0, 0, 0, 0);
        var step = options && 'step' in options ? Number(options.step) : 1;
        if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');

        while (currentDate.getTime() <= endTime) {
          dates.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentDate));
          currentDate.setDate(currentDate.getDate() + step);
          currentDate.setHours(0, 0, 0, 0);
        }

        return dates;
      }
      /***/

    },

    /***/
    "0/gg":
    /*!*********************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfToday/index.js ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function gg(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfToday;
      });
      /* harmony import */


      var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfDay/index.js */
      "M34a");
      /**
       * @name startOfToday
       * @category Day Helpers
       * @summary Return the start of today.
       * @pure false
       *
       * @description
       * Return the start of today.
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @returns {Date} the start of today
       *
       * @example
       * // If today is 6 October 2014:
       * var result = startOfToday()
       * //=> Mon Oct 6 2014 00:00:00
       */


      function startOfToday() {
        return Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now());
      }
      /***/

    },

    /***/
    "08aW":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/getHours/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function aW(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getHours;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getHours
       * @category Hour Helpers
       * @summary Get the hours of the given date.
       *
       * @description
       * Get the hours of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the hours
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Get the hours of 29 February 2012 11:45:00:
       * var result = getHours(new Date(2012, 1, 29, 11, 45))
       * //=> 11
       */


      function getHours(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var hours = date.getHours();
        return hours;
      }
      /***/

    },

    /***/
    "0HXF":
    /*!*****************************************************************************!*\
      !*** ./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js ***!
      \*****************************************************************************/

    /*! exports provided: default */

    /***/
    function HXF(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return formatRelative;
      });

      var formatRelativeLocale = {
        lastWeek: "'last' eeee 'at' p",
        yesterday: "'yesterday at' p",
        today: "'today at' p",
        tomorrow: "'tomorrow at' p",
        nextWeek: "eeee 'at' p",
        other: 'P'
      };

      function formatRelative(token, _date, _baseDate, _options) {
        return formatRelativeLocale[token];
      }
      /***/

    },

    /***/
    "0LOL":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfMinute/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function LOL(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfMinute;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name startOfMinute
       * @category Minute Helpers
       * @summary Return the start of a minute for the given date.
       *
       * @description
       * Return the start of a minute for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the start of a minute
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The start of a minute for 1 December 2014 22:15:45.400:
       * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))
       * //=> Mon Dec 01 2014 22:15:00
       */


      function startOfMinute(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        date.setSeconds(0, 0);
        return date;
      }
      /***/

    },

    /***/
    "0UaF":
    /*!*****************************************************************!*\
      !*** ./node_modules/date-fns/esm/formatDistanceStrict/index.js ***!
      \*****************************************************************/

    /*! exports provided: default */

    /***/
    function UaF(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return formatDistanceStrict;
      });
      /* harmony import */


      var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
      "JCDJ");
      /* harmony import */


      var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../compareAsc/index.js */
      "JhOC");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../differenceInSeconds/index.js */
      "qVkf");
      /* harmony import */


      var _lib_cloneObject_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../_lib/cloneObject/index.js */
      "emD/");
      /* harmony import */


      var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../locale/en-US/index.js */
      "iSMj");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MINUTES_IN_DAY = 1440;
      var MINUTES_IN_MONTH = 43200;
      var MINUTES_IN_YEAR = 525600;
      /**
       * @name formatDistanceStrict
       * @category Common Helpers
       * @summary Return the distance between the given dates in words.
       *
       * @description
       * Return the distance between the given dates in words, using strict units.
       * This is like `formatDistance`, but does not use helpers like 'almost', 'over',
       * 'less than' and the like.
       *
       * | Distance between dates | Result              |
       * |------------------------|---------------------|
       * | 0 ... 59 secs          | [0..59] seconds     |
       * | 1 ... 59 mins          | [1..59] minutes     |
       * | 1 ... 23 hrs           | [1..23] hours       |
       * | 1 ... 29 days          | [1..29] days        |
       * | 1 ... 11 months        | [1..11] months      |
       * | 1 ... N years          | [1..N]  years       |
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`
       *   to make its name consistent with `format` and `formatRelative`.
       *
       * - The order of arguments is swapped to make the function
       *   consistent with `differenceIn...` functions.
       *
       *   ```javascript
       *   // Before v2.0.0
       *
       *   distanceInWordsStrict(
       *     new Date(2015, 0, 2),
       *     new Date(2014, 6, 2)
       *   ) //=> '6 months'
       *
       *   // v2.0.0 onward
       *
       *   formatDistanceStrict(
       *     new Date(2014, 6, 2),
       *     new Date(2015, 0, 2)
       *   ) //=> '6 months'
       *   ```
       *
       * - `partialMethod` option is renamed to `roundingMethod`.
       *
       *   ```javascript
       *   // Before v2.0.0
       *
       *   distanceInWordsStrict(
       *     new Date(1986, 3, 4, 10, 32, 0),
       *     new Date(1986, 3, 4, 10, 33, 1),
       *     { partialMethod: 'ceil' }
       *   ) //=> '2 minutes'
       *
       *   // v2.0.0 onward
       *
       *   formatDistanceStrict(
       *     new Date(1986, 3, 4, 10, 33, 1),
       *     new Date(1986, 3, 4, 10, 32, 0),
       *     { roundingMethod: 'ceil' }
       *   ) //=> '2 minutes'
       *   ```
       *
       * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.
       *
       * - `unit` option now accepts one of the strings:
       *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'
       *
       *   ```javascript
       *   // Before v2.0.0
       *
       *   distanceInWordsStrict(
       *     new Date(1986, 3, 4, 10, 32, 0),
       *     new Date(1986, 3, 4, 10, 33, 1),
       *     { unit: 'm' }
       *   )
       *
       *   // v2.0.0 onward
       *
       *   formatDistanceStrict(
       *     new Date(1986, 3, 4, 10, 33, 1),
       *     new Date(1986, 3, 4, 10, 32, 0),
       *     { unit: 'minute' }
       *   )
       *   ```
       *
       * @param {Date|Number} date - the date
       * @param {Date|Number} baseDate - the date to compare with
       * @param {Object} [options] - an object with options.
       * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
       * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit
       * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @returns {String} the distance in words
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `date` must not be Invalid Date
       * @throws {RangeError} `baseDate` must not be Invalid Date
       * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'
       * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'
       * @throws {RangeError} `options.locale` must contain `formatDistance` property
       *
       * @example
       * // What is the distance between 2 July 2014 and 1 January 2015?
       * var result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))
       * //=> '6 months'
       *
       * @example
       * // What is the distance between 1 January 2015 00:00:15
       * // and 1 January 2015 00:00:00?
       * var result = formatDistanceStrict(
       *   new Date(2015, 0, 1, 0, 0, 15),
       *   new Date(2015, 0, 1, 0, 0, 0)
       * )
       * //=> '15 seconds'
       *
       * @example
       * // What is the distance from 1 January 2016
       * // to 1 January 2015, with a suffix?
       * var result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {
       *   addSuffix: true
       * })
       * //=> '1 year ago'
       *
       * @example
       * // What is the distance from 1 January 2016
       * // to 1 January 2015, in minutes?
       * var result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {
       *   unit: 'minute'
       * })
       * //=> '525600 minutes'
       *
       * @example
       * // What is the distance from 1 January 2015
       * // to 28 January 2015, in months, rounded up?
       * var result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {
       *   unit: 'month',
       *   roundingMethod: 'ceil'
       * })
       * //=> '1 month'
       *
       * @example
       * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
       * import { eoLocale } from 'date-fns/locale/eo'
       * var result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {
       *   locale: eoLocale
       * })
       * //=> '1 jaro'
       */

      function formatDistanceStrict(dirtyDate, dirtyBaseDate, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(2, arguments);
        var options = dirtyOptions || {};
        var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_5__["default"];

        if (!locale.formatDistance) {
          throw new RangeError('locale must contain localize.formatDistance property');
        }

        var comparison = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, dirtyBaseDate);

        if (isNaN(comparison)) {
          throw new RangeError('Invalid time value');
        }

        var localizeOptions = Object(_lib_cloneObject_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(options);
        localizeOptions.addSuffix = Boolean(options.addSuffix);
        localizeOptions.comparison = comparison;
        var dateLeft;
        var dateRight;

        if (comparison > 0) {
          dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyBaseDate);
          dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
        } else {
          dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
          dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyBaseDate);
        }

        var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);
        var roundingMethodFn;

        if (roundingMethod === 'floor') {
          roundingMethodFn = Math.floor;
        } else if (roundingMethod === 'ceil') {
          roundingMethodFn = Math.ceil;
        } else if (roundingMethod === 'round') {
          roundingMethodFn = Math.round;
        } else {
          throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");
        }

        var seconds = Object(_differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dateRight, dateLeft);
        var offsetInSeconds = (Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateRight) - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateLeft)) / 1000;
        var minutes = roundingMethodFn((seconds - offsetInSeconds) / 60);
        var unit;

        if (options.unit == null) {
          if (minutes < 1) {
            unit = 'second';
          } else if (minutes < 60) {
            unit = 'minute';
          } else if (minutes < MINUTES_IN_DAY) {
            unit = 'hour';
          } else if (minutes < MINUTES_IN_MONTH) {
            unit = 'day';
          } else if (minutes < MINUTES_IN_YEAR) {
            unit = 'month';
          } else {
            unit = 'year';
          }
        } else {
          unit = String(options.unit);
        } // 0 up to 60 seconds


        if (unit === 'second') {
          return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins
        } else if (unit === 'minute') {
          return locale.formatDistance('xMinutes', minutes, localizeOptions); // 1 up to 24 hours
        } else if (unit === 'hour') {
          var hours = roundingMethodFn(minutes / 60);
          return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days
        } else if (unit === 'day') {
          var days = roundingMethodFn(minutes / MINUTES_IN_DAY);
          return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months
        } else if (unit === 'month') {
          var months = roundingMethodFn(minutes / MINUTES_IN_MONTH);
          return locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date
        } else if (unit === 'year') {
          var years = roundingMethodFn(minutes / MINUTES_IN_YEAR);
          return locale.formatDistance('xYears', years, localizeOptions);
        }

        throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'");
      }
      /***/

    },

    /***/
    "0Ug1":
    /*!**************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInWeeks/index.js ***!
      \**************************************************************/

    /*! exports provided: default */

    /***/
    function Ug1(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInWeeks;
      });
      /* harmony import */


      var _differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../differenceInDays/index.js */
      "NoME");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInWeeks
       * @category Week Helpers
       * @summary Get the number of full weeks between the given dates.
       *
       * @description
       * Get the number of full weeks between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of full weeks
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many full weeks are between 5 July 2014 and 20 July 2014?
       * var result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))
       * //=> 2
       */


      function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var diff = Object(_differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / 7;
        return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
      }
      /***/

    },

    /***/
    "0f5V":
    /*!***************************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfISOWeekYear/index.js ***!
      \***************************************************************/

    /*! exports provided: default */

    /***/
    function f5V(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfISOWeekYear;
      });
      /* harmony import */


      var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../getISOWeekYear/index.js */
      "BKKT");
      /* harmony import */


      var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfISOWeek/index.js */
      "1dmy");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name startOfISOWeekYear
       * @category ISO Week-Numbering Year Helpers
       * @summary Return the start of an ISO week-numbering year for the given date.
       *
       * @description
       * Return the start of an ISO week-numbering year,
       * which always starts 3 days before the year's first Thursday.
       * The result will be in the local timezone.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the start of an ISO week-numbering year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The start of an ISO week-numbering year for 2 July 2005:
       * var result = startOfISOWeekYear(new Date(2005, 6, 2))
       * //=> Mon Jan 03 2005 00:00:00
       */


      function startOfISOWeekYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var year = Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var fourthOfJanuary = new Date(0);
        fourthOfJanuary.setFullYear(year, 0, 4);
        fourthOfJanuary.setHours(0, 0, 0, 0);
        var date = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuary);
        return date;
      }
      /***/

    },

    /***/
    "1BeU":
    /*!***********************************************************************!*\
      !*** ./node_modules/angular-calendar/date-adapters/date-fns/index.js ***!
      \***********************************************************************/

    /*! no static exports found */

    /***/
    function BeU(module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var tslib_1 = __webpack_require__(
      /*! tslib */
      "UWrc");

      var date_fns_1 = __webpack_require__(
      /*! calendar-utils/date-adapters/date-fns */
      "agoU");

      var date_fns_2 = __webpack_require__(
      /*! date-fns */
      "b/SL");

      function adapterFactory() {
        return tslib_1.__assign({}, date_fns_1.adapterFactory(), {
          addWeeks: date_fns_2.addWeeks,
          addMonths: date_fns_2.addMonths,
          subDays: date_fns_2.subDays,
          subWeeks: date_fns_2.subWeeks,
          subMonths: date_fns_2.subMonths,
          getISOWeek: date_fns_2.getISOWeek,
          setDate: date_fns_2.setDate,
          setMonth: date_fns_2.setMonth,
          setYear: date_fns_2.setYear,
          getDate: date_fns_2.getDate,
          getYear: date_fns_2.getYear
        });
      }

      exports.adapterFactory = adapterFactory; //# sourceMappingURL=index.js.map

      /***/
    },

    /***/
    "1PZI":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/isYesterday/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function PZI(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isYesterday;
      });
      /* harmony import */


      var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isSameDay/index.js */
      "G6Tw");
      /* harmony import */


      var _subDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../subDays/index.js */
      "Xep9");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isYesterday
       * @category Day Helpers
       * @summary Is the given date yesterday?
       * @pure false
       *
       * @description
       * Is the given date yesterday?
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is yesterday
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?
       * var result = isYesterday(new Date(2014, 9, 5, 14, 0))
       * //=> true
       */


      function isYesterday(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        return Object(_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Object(_subDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Date.now(), 1));
      }
      /***/

    },

    /***/
    "1dmy":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfISOWeek/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function dmy(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfISOWeek;
      });
      /* harmony import */


      var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfWeek/index.js */
      "aetl");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name startOfISOWeek
       * @category ISO Week Helpers
       * @summary Return the start of an ISO week for the given date.
       *
       * @description
       * Return the start of an ISO week for the given date.
       * The result will be in the local timezone.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the start of an ISO week
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The start of an ISO week for 2 September 2014 11:55:00:
       * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Mon Sep 01 2014 00:00:00
       */


      function startOfISOWeek(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, {
          weekStartsOn: 1
        });
      }
      /***/

    },

    /***/
    "1izz":
    /*!*****************************************************************************!*\
      !*** ./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js ***!
      \*****************************************************************************/

    /*! exports provided: default */

    /***/
    function izz(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return formatDistance;
      });

      var formatDistanceLocale = {
        lessThanXSeconds: {
          one: 'less than a second',
          other: 'less than {{count}} seconds'
        },
        xSeconds: {
          one: '1 second',
          other: '{{count}} seconds'
        },
        halfAMinute: 'half a minute',
        lessThanXMinutes: {
          one: 'less than a minute',
          other: 'less than {{count}} minutes'
        },
        xMinutes: {
          one: '1 minute',
          other: '{{count}} minutes'
        },
        aboutXHours: {
          one: 'about 1 hour',
          other: 'about {{count}} hours'
        },
        xHours: {
          one: '1 hour',
          other: '{{count}} hours'
        },
        xDays: {
          one: '1 day',
          other: '{{count}} days'
        },
        aboutXMonths: {
          one: 'about 1 month',
          other: 'about {{count}} months'
        },
        xMonths: {
          one: '1 month',
          other: '{{count}} months'
        },
        aboutXYears: {
          one: 'about 1 year',
          other: 'about {{count}} years'
        },
        xYears: {
          one: '1 year',
          other: '{{count}} years'
        },
        overXYears: {
          one: 'over 1 year',
          other: 'over {{count}} years'
        },
        almostXYears: {
          one: 'almost 1 year',
          other: 'almost {{count}} years'
        }
      };

      function formatDistance(token, count, options) {
        options = options || {};
        var result;

        if (typeof formatDistanceLocale[token] === 'string') {
          result = formatDistanceLocale[token];
        } else if (count === 1) {
          result = formatDistanceLocale[token].one;
        } else {
          result = formatDistanceLocale[token].other.replace('{{count}}', count);
        }

        if (options.addSuffix) {
          if (options.comparison > 0) {
            return 'in ' + result;
          } else {
            return result + ' ago';
          }
        }

        return result;
      }
      /***/

    },

    /***/
    "1unF":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfYear/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function unF(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfYear;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name startOfYear
       * @category Year Helpers
       * @summary Return the start of a year for the given date.
       *
       * @description
       * Return the start of a year for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the start of a year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The start of a year for 2 September 2014 11:55:00:
       * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
       * //=> Wed Jan 01 2014 00:00:00
       */


      function startOfYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var cleanDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var date = new Date(0);
        date.setFullYear(cleanDate.getFullYear(), 0, 1);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "1vjI":
    /*!****************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js ***!
      \****************************************************************/

    /*! exports provided: default */

    /***/
    function vjI(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfUTCWeek;
      });
      /* harmony import */


      var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg"); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function startOfUTCWeek(dirtyDate, dirtyOptions) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
        }

        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var day = date.getUTCDay();
        var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
        date.setUTCDate(date.getUTCDate() - diff);
        date.setUTCHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "26Ho":
    /*!********************************************************************!*\
      !*** ./node_modules/date-fns/esm/areIntervalsOverlapping/index.js ***!
      \********************************************************************/

    /*! exports provided: default */

    /***/
    function Ho(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return areIntervalsOverlapping;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name areIntervalsOverlapping
       * @category Interval Helpers
       * @summary Is the given time interval overlapping with another time interval?
       *
       * @description
       * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.
       *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
       *
       *   ```
       *   2.1.3
       *   time interval
       *   part of the time axis limited by two instants
       *   ```
       *
       *   Also, this function now accepts an object with `start` and `end` properties
       *   instead of two arguments as an interval.
       *   This function now throws `RangeError` if the start of the interval is after its end
       *   or if any date in the interval is `Invalid Date`.
       *
       *   ```javascript
       *   // Before v2.0.0
       *
       *   areRangesOverlapping(
       *     new Date(2014, 0, 10), new Date(2014, 0, 20),
       *     new Date(2014, 0, 17), new Date(2014, 0, 21)
       *   )
       *
       *   // v2.0.0 onward
       *
       *   areIntervalsOverlapping(
       *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
       *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
       *   )
       *   ```
       *
       * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/types/Interval}
       * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/types/Interval}
       * @param {Object} [options] - the object with options
       * @param {Boolean} [options.inclusive=false] - whether the comparison is inclusive or not
       * @returns {Boolean} whether the time intervals are overlapping
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} The start of an interval cannot be after its end
       * @throws {RangeError} Date in interval cannot be `Invalid Date`
       *
       * @example
       * // For overlapping time intervals:
       * areIntervalsOverlapping(
       *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
       *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
       * )
       * //=> true
       *
       * @example
       * // For non-overlapping time intervals:
       * areIntervalsOverlapping(
       *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
       *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }
       * )
       * //=> false
       *
       * @example
       * // For adjacent time intervals:
       * areIntervalsOverlapping(
       *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
       *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }
       * )
       * //=> false
       *
       * @example
       * // Using the inclusive option:
       * areIntervalsOverlapping(
       *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
       *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }
       * )
       * //=> false
       * areIntervalsOverlapping(
       *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
       *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },
       *   { inclusive: true }
       * )
       * //=> true
       */


      function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var intervalLeft = dirtyIntervalLeft || {};
        var intervalRight = dirtyIntervalRight || {};
        var leftStartTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalLeft.start).getTime();
        var leftEndTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalLeft.end).getTime();
        var rightStartTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalRight.start).getTime();
        var rightEndTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

        if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {
          throw new RangeError('Invalid interval');
        }

        if (options.inclusive) {
          return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;
        }

        return leftStartTime < rightEndTime && rightStartTime < leftEndTime;
      }
      /***/

    },

    /***/
    "2AQE":
    /*!***************************************************************!*\
      !*** ./node_modules/date-fns/esm/eachWeekendOfMonth/index.js ***!
      \***************************************************************/

    /*! exports provided: default */

    /***/
    function AQE(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return eachWeekendOfMonth;
      });
      /* harmony import */


      var _eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../eachWeekendOfInterval/index.js */
      "YdWM");
      /* harmony import */


      var _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfMonth/index.js */
      "9ig3");
      /* harmony import */


      var _endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../endOfMonth/index.js */
      "jKzE");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name eachWeekendOfMonth
       * @category Month Helpers
       * @summary List all the Saturdays and Sundays in the given month.
       *
       * @description
       * Get all the Saturdays and Sundays in the given month.
       *
       * @param {Date|Number} date - the given month
       * @returns {Date[]} an array containing all the Saturdays and Sundays
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} The passed date is invalid
       *
       * @example
       * // Lists all Saturdays and Sundays in the given month
       * var result = eachWeekendOfMonth(new Date(2022, 1, 1))
       * //=> [
       * //   Sat Feb 05 2022 00:00:00,
       * //   Sun Feb 06 2022 00:00:00,
       * //   Sat Feb 12 2022 00:00:00,
       * //   Sun Feb 13 2022 00:00:00,
       * //   Sat Feb 19 2022 00:00:00,
       * //   Sun Feb 20 2022 00:00:00,
       * //   Sat Feb 26 2022 00:00:00,
       * //   Sun Feb 27 2022 00:00:00
       * // ]
       */


      function eachWeekendOfMonth(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var startDate = Object(_startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        if (isNaN(startDate)) throw new RangeError('The passed date is invalid');
        var endDate = Object(_endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
        return Object(_eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
          start: startDate,
          end: endDate
        });
      }
      /***/

    },

    /***/
    "3+Em":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/isThisWeek/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function Em(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isThisWeek;
      });
      /* harmony import */


      var _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isSameWeek/index.js */
      "JO1+");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isThisWeek
       * @category Week Helpers
       * @summary Is the given date in the same week as the current date?
       * @pure false
       *
       * @description
       * Is the given date in the same week as the current date?
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @param {Object} [options] - the object with options
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @returns {Boolean} the date is in this week
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // If today is 25 September 2014, is 21 September 2014 in this week?
       * var result = isThisWeek(new Date(2014, 8, 21))
       * //=> true
       *
       * @example
       * // If today is 25 September 2014 and week starts with Monday
       * // is 21 September 2014 in this week?
       * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })
       * //=> false
       */


      function isThisWeek(dirtyDate, options) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now(), options);
      }
      /***/

    },

    /***/
    "3REe":
    /*!*****************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/protectedTokens/index.js ***!
      \*****************************************************************/

    /*! exports provided: isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError */

    /***/
    function REe(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "isProtectedDayOfYearToken", function () {
        return isProtectedDayOfYearToken;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "isProtectedWeekYearToken", function () {
        return isProtectedWeekYearToken;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "throwProtectedError", function () {
        return throwProtectedError;
      });

      var protectedDayOfYearTokens = ['D', 'DD'];
      var protectedWeekYearTokens = ['YY', 'YYYY'];

      function isProtectedDayOfYearToken(token) {
        return protectedDayOfYearTokens.indexOf(token) !== -1;
      }

      function isProtectedWeekYearToken(token) {
        return protectedWeekYearTokens.indexOf(token) !== -1;
      }

      function throwProtectedError(token) {
        if (token === 'YYYY') {
          throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');
        } else if (token === 'YY') {
          throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');
        } else if (token === 'D') {
          throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');
        } else if (token === 'DD') {
          throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');
        }
      }
      /***/

    },

    /***/
    "3g9J":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/getMinutes/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function g9J(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getMinutes;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getMinutes
       * @category Minute Helpers
       * @summary Get the minutes of the given date.
       *
       * @description
       * Get the minutes of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the minutes
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Get the minutes of 29 February 2012 11:45:05:
       * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))
       * //=> 45
       */


      function getMinutes(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var minutes = date.getMinutes();
        return minutes;
      }
      /***/

    },

    /***/
    "3nag":
    /*!*************************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInCalendarQuarters/index.js ***!
      \*************************************************************************/

    /*! exports provided: default */

    /***/
    function nag(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInCalendarQuarters;
      });
      /* harmony import */


      var _getQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../getQuarter/index.js */
      "SFWn");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInCalendarQuarters
       * @category Quarter Helpers
       * @summary Get the number of calendar quarters between the given dates.
       *
       * @description
       * Get the number of calendar quarters between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of calendar quarters
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many calendar quarters are between 31 December 2013 and 2 July 2014?
       * var result = differenceInCalendarQuarters(
       *   new Date(2014, 6, 2),
       *   new Date(2013, 11, 31)
       * )
       * //=> 3
       */


      function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
        var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
        var quarterDiff = Object(_getQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateLeft) - Object(_getQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateRight);
        return yearDiff * 4 + quarterDiff;
      }
      /***/

    },

    /***/
    "3zlk":
    /*!*****************************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js ***!
      \*****************************************************************************/

    /*! exports provided: default */

    /***/
    function zlk(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInCalendarISOWeekYears;
      });
      /* harmony import */


      var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../getISOWeekYear/index.js */
      "BKKT");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInCalendarISOWeekYears
       * @category ISO Week-Numbering Year Helpers
       * @summary Get the number of calendar ISO week-numbering years between the given dates.
       *
       * @description
       * Get the number of calendar ISO week-numbering years between the given dates.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.
       *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
       *   This change makes the name consistent with
       *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of calendar ISO week-numbering years
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?
       * var result = differenceInCalendarISOWeekYears(
       *   new Date(2012, 0, 1),
       *   new Date(2010, 0, 1)
       * )
       * //=> 2
       */


      function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        return Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft) - Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      }
      /***/

    },

    /***/
    "4+6U":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/parseISO/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function U(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return parseISO;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
      "JCDJ");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_HOUR = 3600000;
      var MILLISECONDS_IN_MINUTE = 60000;
      var DEFAULT_ADDITIONAL_DIGITS = 2;
      var patterns = {
        dateTimeDelimiter: /[T ]/,
        timeZoneDelimiter: /[Z ]/i,
        timezone: /([Z+-].*)$/
      };
      var dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
      var timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
      var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
      /**
       * @name parseISO
       * @category Common Helpers
       * @summary Parse ISO string
       *
       * @description
       * Parse the given string in ISO 8601 format and return an instance of Date.
       *
       * Function accepts complete ISO 8601 formats as well as partial implementations.
       * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
       *
       * If the argument isn't a string, the function cannot parse the string or
       * the values are invalid, it returns Invalid Date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The previous `parse` implementation was renamed to `parseISO`.
       *
       *   ```javascript
       *   // Before v2.0.0
       *   parse('2016-01-01')
       *
       *   // v2.0.0 onward
       *   parseISO('2016-01-01')
       *   ```
       *
       * - `parseISO` now validates separate date and time values in ISO-8601 strings
       *   and returns `Invalid Date` if the date is invalid.
       *
       *   ```javascript
       *   parseISO('2018-13-32')
       *   //=> Invalid Date
       *   ```
       *
       * - `parseISO` now doesn't fall back to `new Date` constructor
       *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.
       *
       * @param {String} argument - the value to convert
       * @param {Object} [options] - an object with options.
       * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format
       * @returns {Date} the parsed date in the local time zone
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Convert string '2014-02-11T11:30:30' to date:
       * var result = parseISO('2014-02-11T11:30:30')
       * //=> Tue Feb 11 2014 11:30:30
       *
       * @example
       * // Convert string '+02014101' to date,
       * // if the additional number of digits in the extended year format is 1:
       * var result = parseISO('+02014101', { additionalDigits: 1 })
       * //=> Fri Apr 11 2014 00:00:00
       */

      function parseISO(argument, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var options = dirtyOptions || {};
        var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.additionalDigits);

        if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {
          throw new RangeError('additionalDigits must be 0, 1 or 2');
        }

        if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {
          return new Date(NaN);
        }

        var dateStrings = splitDateString(argument);
        var date;

        if (dateStrings.date) {
          var parseYearResult = parseYear(dateStrings.date, additionalDigits);
          date = parseDate(parseYearResult.restDateString, parseYearResult.year);
        }

        if (isNaN(date) || !date) {
          return new Date(NaN);
        }

        var timestamp = date.getTime();
        var time = 0;
        var offset;

        if (dateStrings.time) {
          time = parseTime(dateStrings.time);

          if (isNaN(time) || time === null) {
            return new Date(NaN);
          }
        }

        if (dateStrings.timezone) {
          offset = parseTimezone(dateStrings.timezone);

          if (isNaN(offset)) {
            return new Date(NaN);
          }
        } else {
          var fullTime = timestamp + time;
          var fullTimeDate = new Date(fullTime);
          offset = Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fullTimeDate); // Adjust time when it's coming from DST

          var fullTimeDateDiffDay = new Date(fullTime);

          if (offset > 0) {
            fullTimeDateDiffDay.setDate(fullTimeDate.getDate() + 1);
          } else {
            fullTimeDateDiffDay.setDate(fullTimeDate.getDate() - 1);
          }

          var offsetDiff = Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fullTimeDateDiffDay) - offset;

          if (offsetDiff > 0) {
            offset += offsetDiff;
          }
        }

        return new Date(timestamp + time + offset);
      }

      function splitDateString(dateString) {
        var dateStrings = {};
        var array = dateString.split(patterns.dateTimeDelimiter);
        var timeString;

        if (/:/.test(array[0])) {
          dateStrings.date = null;
          timeString = array[0];
        } else {
          dateStrings.date = array[0];
          timeString = array[1];

          if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
            dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
            timeString = dateString.substr(dateStrings.date.length, dateString.length);
          }
        }

        if (timeString) {
          var token = patterns.timezone.exec(timeString);

          if (token) {
            dateStrings.time = timeString.replace(token[1], '');
            dateStrings.timezone = token[1];
          } else {
            dateStrings.time = timeString;
          }
        }

        return dateStrings;
      }

      function parseYear(dateString, additionalDigits) {
        var regex = new RegExp('^(?:(\\d{4}|[+-]\\d{' + (4 + additionalDigits) + '})|(\\d{2}|[+-]\\d{' + (2 + additionalDigits) + '})$)');
        var captures = dateString.match(regex); // Invalid ISO-formatted year

        if (!captures) return {
          year: null
        };
        var year = captures[1] && parseInt(captures[1]);
        var century = captures[2] && parseInt(captures[2]);
        return {
          year: century == null ? year : century * 100,
          restDateString: dateString.slice((captures[1] || captures[2]).length)
        };
      }

      function parseDate(dateString, year) {
        // Invalid ISO-formatted year
        if (year === null) return null;
        var captures = dateString.match(dateRegex); // Invalid ISO-formatted string

        if (!captures) return null;
        var isWeekDate = !!captures[4];
        var dayOfYear = parseDateUnit(captures[1]);
        var month = parseDateUnit(captures[2]) - 1;
        var day = parseDateUnit(captures[3]);
        var week = parseDateUnit(captures[4]);
        var dayOfWeek = parseDateUnit(captures[5]) - 1;

        if (isWeekDate) {
          if (!validateWeekDate(year, week, dayOfWeek)) {
            return new Date(NaN);
          }

          return dayOfISOWeekYear(year, week, dayOfWeek);
        } else {
          var date = new Date(0);

          if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {
            return new Date(NaN);
          }

          date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
          return date;
        }
      }

      function parseDateUnit(value) {
        return value ? parseInt(value) : 1;
      }

      function parseTime(timeString) {
        var captures = timeString.match(timeRegex);
        if (!captures) return null; // Invalid ISO-formatted time

        var hours = parseTimeUnit(captures[1]);
        var minutes = parseTimeUnit(captures[2]);
        var seconds = parseTimeUnit(captures[3]);

        if (!validateTime(hours, minutes, seconds)) {
          return NaN;
        }

        return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;
      }

      function parseTimeUnit(value) {
        return value && parseFloat(value.replace(',', '.')) || 0;
      }

      function parseTimezone(timezoneString) {
        if (timezoneString === 'Z') return 0;
        var captures = timezoneString.match(timezoneRegex);
        if (!captures) return 0;
        var sign = captures[1] === '+' ? -1 : 1;
        var hours = parseInt(captures[2]);
        var minutes = captures[3] && parseInt(captures[3]) || 0;

        if (!validateTimezone(hours, minutes)) {
          return NaN;
        }

        return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);
      }

      function dayOfISOWeekYear(isoWeekYear, week, day) {
        var date = new Date(0);
        date.setUTCFullYear(isoWeekYear, 0, 4);
        var fourthOfJanuaryDay = date.getUTCDay() || 7;
        var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
        date.setUTCDate(date.getUTCDate() + diff);
        return date;
      } // Validation functions
      // February is null to handle the leap year (using ||)


      var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

      function isLeapYearIndex(year) {
        return year % 400 === 0 || year % 4 === 0 && year % 100;
      }

      function validateDate(year, month, date) {
        return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));
      }

      function validateDayOfYearDate(year, dayOfYear) {
        return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
      }

      function validateWeekDate(_year, week, day) {
        return week >= 1 && week <= 53 && day >= 0 && day <= 6;
      }

      function validateTime(hours, minutes, seconds) {
        if (hours === 24) {
          return minutes === 0 && seconds === 0;
        }

        return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
      }

      function validateTimezone(_hours, minutes) {
        return minutes >= 0 && minutes <= 59;
      }
      /***/

    },

    /***/
    "4G8O":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/getMilliseconds/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function G8O(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getMilliseconds;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getMilliseconds
       * @category Millisecond Helpers
       * @summary Get the milliseconds of the given date.
       *
       * @description
       * Get the milliseconds of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the milliseconds
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Get the milliseconds of 29 February 2012 11:45:05.123:
       * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))
       * //=> 123
       */


      function getMilliseconds(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var milliseconds = date.getMilliseconds();
        return milliseconds;
      }
      /***/

    },

    /***/
    "4bjS":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/setMinutes/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function bjS(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setMinutes;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setMinutes
       * @category Minute Helpers
       * @summary Set the minutes to the given date.
       *
       * @description
       * Set the minutes to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} minutes - the minutes of the new date
       * @returns {Date} the new date with the minutes set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set 45 minutes to 1 September 2014 11:30:40:
       * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)
       * //=> Mon Sep 01 2014 11:45:40
       */


      function setMinutes(dirtyDate, dirtyMinutes) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var minutes = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyMinutes);
        date.setMinutes(minutes);
        return date;
      }
      /***/

    },

    /***/
    "4jLh":
    /*!****************************************************************!*\
      !*** ./node_modules/date-fns/esm/eachMonthOfInterval/index.js ***!
      \****************************************************************/

    /*! exports provided: default */

    /***/
    function jLh(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return eachMonthOfInterval;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name eachMonthOfInterval
       * @category Interval Helpers
       * @summary Return the array of months within the specified time interval.
       *
       * @description
       * Return the array of months within the specified time interval.
       *
       * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
       * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} The start of an interval cannot be after its end
       * @throws {RangeError} Date in interval cannot be `Invalid Date`
       *
       * @example
       * // Each month between 6 February 2014 and 10 August 2014:
       * var result = eachDayOfInterval({
       *   start: new Date(2014, 1, 6),
       *   end: new Date(2014, 7, 10)
       * })
       * //=> [
       * //   Sat Feb 01 2014 00:00:00,
       * //   Sat Mar 01 2014 00:00:00,
       * //   Tue Apr 01 2014 00:00:00,
       * //   Thu May 01 2014 00:00:00,
       * //   Sun Jun 01 2014 00:00:00,
       * //   Tue Jul 01 2014 00:00:00,
       * //   Fri Aug 01 2014 00:00:00
       * // ]
       */


      function eachMonthOfInterval(dirtyInterval) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var interval = dirtyInterval || {};
        var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.start);
        var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.end);
        var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

        if (!(startDate.getTime() <= endTime)) {
          throw new RangeError('Invalid interval');
        }

        var dates = [];
        var currentDate = startDate;
        currentDate.setHours(0, 0, 0, 0);
        currentDate.setDate(1);

        while (currentDate.getTime() <= endTime) {
          dates.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentDate));
          currentDate.setMonth(currentDate.getMonth() + 1);
        }

        return dates;
      }
      /***/

    },

    /***/
    "5FpM":
    /*!**************************************************************!*\
      !*** ./node_modules/date-fns/esm/getISOWeeksInYear/index.js ***!
      \**************************************************************/

    /*! exports provided: default */

    /***/
    function FpM(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getISOWeeksInYear;
      });
      /* harmony import */


      var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfISOWeekYear/index.js */
      "0f5V");
      /* harmony import */


      var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addWeeks/index.js */
      "r4sE");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_WEEK = 604800000;
      /**
       * @name getISOWeeksInYear
       * @category ISO Week-Numbering Year Helpers
       * @summary Get the number of weeks in an ISO week-numbering year of the given date.
       *
       * @description
       * Get the number of weeks in an ISO week-numbering year of the given date.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the number of ISO weeks in a year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // How many weeks are in ISO week-numbering year 2015?
       * var result = getISOWeeksInYear(new Date(2015, 1, 11))
       * //=> 53
       */

      function getISOWeeksInYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var thisYear = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var nextYear = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_addWeeks_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(thisYear, 60));
        var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer
        // because the number of milliseconds in a week is not constant
        // (e.g. it's different in the week of the daylight saving time clock shift)

        return Math.round(diff / MILLISECONDS_IN_WEEK);
      }
      /***/

    },

    /***/
    "5cON":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/isWednesday/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function cON(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isWednesday;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isWednesday
       * @category Weekday Helpers
       * @summary Is the given date Wednesday?
       *
       * @description
       * Is the given date Wednesday?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is Wednesday
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Is 24 September 2014 Wednesday?
       * var result = isWednesday(new Date(2014, 8, 24))
       * //=> true
       */


      function isWednesday(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 3;
      }
      /***/

    },

    /***/
    "5tXh":
    /*!****************************************************************************!*\
      !*** ./src/app/modules/comercial/agenda/guards/detalhes-resolver.guard.ts ***!
      \****************************************************************************/

    /*! exports provided: ComercialAgendaDetalhesResolverGuard */

    /***/
    function tXh(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ComercialAgendaDetalhesResolverGuard", function () {
        return ComercialAgendaDetalhesResolverGuard;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! src/app/modules/comercial/agenda/agenda.service */
      "73eH"); // Services


      var ComercialAgendaDetalhesResolverGuard = /*#__PURE__*/function () {
        function ComercialAgendaDetalhesResolverGuard(agendaService) {
          _classCallCheck(this, ComercialAgendaDetalhesResolverGuard);

          this.agendaService = agendaService;
        }

        _createClass(ComercialAgendaDetalhesResolverGuard, [{
          key: "resolve",
          value: function resolve(route) {
            if (route.params && route.params['id']) {
              return this.agendaService.getCompromisso(route.params['id']);
            }

            var codCliente = '';

            if (route.params && route.params['codCliente']) {
              codCliente = parseInt(route.params['codCliente']);
            } // É implementado o método "of" para manter a tipagem de retorno com Observable.


            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])({
              responseCode: 200,
              result: {
                id: null,
                title: null,
                codTitulo: null,
                codClient: codCliente,
                formContactId: '',
                typeContactId: '',
                start: null,
                end: null,
                allDay: false,
                description: null,
                rescheduleId: null,
                color: {
                  primary: '#0033FF'
                }
              }
            });
          }
        }]);

        return ComercialAgendaDetalhesResolverGuard;
      }();

      ComercialAgendaDetalhesResolverGuard.ctorParameters = function () {
        return [{
          type: src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_3__["ComercialAgendaService"]
        }];
      };

      ComercialAgendaDetalhesResolverGuard = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_3__["ComercialAgendaService"]])], ComercialAgendaDetalhesResolverGuard);
      /***/
    },

    /***/
    "5wMr":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/getTime/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function wMr(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getTime;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getTime
       * @category Timestamp Helpers
       * @summary Get the milliseconds timestamp of the given date.
       *
       * @description
       * Get the milliseconds timestamp of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the timestamp
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Get the timestamp of 29 February 2012 11:45:05.123:
       * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))
       * //=> 1330515905123
       */


      function getTime(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var timestamp = date.getTime();
        return timestamp;
      }
      /***/

    },

    /***/
    "6En+":
    /*!*********************************************************!*\
      !*** ./node_modules/date-fns/esm/setDayOfYear/index.js ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function En(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setDayOfYear;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setDayOfYear
       * @category Day Helpers
       * @summary Set the day of the year to the given date.
       *
       * @description
       * Set the day of the year to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} dayOfYear - the day of the year of the new date
       * @returns {Date} the new date with the day of the year set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set the 2nd day of the year to 2 July 2014:
       * var result = setDayOfYear(new Date(2014, 6, 2), 2)
       * //=> Thu Jan 02 2014 00:00:00
       */


      function setDayOfYear(dirtyDate, dirtyDayOfYear) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var dayOfYear = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDayOfYear);
        date.setMonth(0);
        date.setDate(dayOfYear);
        return date;
      }
      /***/

    },

    /***/
    "6NQC":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/setYear/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function NQC(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setYear;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setYear
       * @category Year Helpers
       * @summary Set the year to the given date.
       *
       * @description
       * Set the year to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} year - the year of the new date
       * @returns {Date} the new date with the year set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set year 2013 to 1 September 2014:
       * var result = setYear(new Date(2014, 8, 1), 2013)
       * //=> Sun Sep 01 2013 00:00:00
       */


      function setYear(dirtyDate, dirtyYear) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var year = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date

        if (isNaN(date)) {
          return new Date(NaN);
        }

        date.setFullYear(year);
        return date;
      }
      /***/

    },

    /***/
    "6wME":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfDecade/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function wME(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfDecade;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name startOfDecade
       * @category Decade Helpers
       * @summary Return the start of a decade for the given date.
       *
       * @description
       * Return the start of a decade for the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the start of a decade
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The start of a decade for 21 October 2015 00:00:00:
       * var result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))
       * //=> Jan 01 2010 00:00:00
       */


      function startOfDecade(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var year = date.getFullYear();
        var decade = Math.floor(year / 10) * 10;
        date.setFullYear(decade, 0, 1);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "6yRa":
    /*!*****************************************************!*\
      !*** ./node_modules/create-point-cb/dist/bundle.js ***!
      \*****************************************************/

    /*! no static exports found */

    /***/
    function yRa(module, exports, __webpack_require__) {
      "use strict";

      var typeFunc = __webpack_require__(
      /*! type-func */
      "OJSY");

      function createPointCB(object, options) {
        // A persistent object (as opposed to returned object) is used to save memory
        // This is good to prevent layout thrashing, or for games, and such
        // NOTE
        // This uses IE fixes which should be OK to remove some day. :)
        // Some speed will be gained by removal of these.
        // pointCB should be saved in a variable on return
        // This allows the usage of element.removeEventListener
        options = options || {};
        var allowUpdate = typeFunc["boolean"](options.allowUpdate, true);
        /*if(typeof options.allowUpdate === 'function'){
            allowUpdate = options.allowUpdate;
        }else{
            allowUpdate = function(){return true;};
        }*/

        return function pointCB(event) {
          event = event || window.event; // IE-ism

          object.target = event.target || event.srcElement || event.originalTarget;
          object.element = this;
          object.type = event.type;

          if (!allowUpdate(event)) {
            return;
          } // Support touch
          // http://www.creativebloq.com/javascript/make-your-site-work-touch-devices-51411644


          if (event.targetTouches) {
            object.x = event.targetTouches[0].clientX;
            object.y = event.targetTouches[0].clientY;
            object.pageX = event.targetTouches[0].pageX;
            object.pageY = event.targetTouches[0].pageY;
            object.screenX = event.targetTouches[0].screenX;
            object.screenY = event.targetTouches[0].screenY;
          } else {
            // If pageX/Y aren't available and clientX/Y are,
            // calculate pageX/Y - logic taken from jQuery.
            // (This is to support old IE)
            // NOTE Hopefully this can be removed soon.
            if (event.pageX === null && event.clientX !== null) {
              var eventDoc = event.target && event.target.ownerDocument || document;
              var doc = eventDoc.documentElement;
              var body = eventDoc.body;
              object.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
              object.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
            } else {
              object.pageX = event.pageX;
              object.pageY = event.pageY;
            } // pageX, and pageY change with page scroll
            // so we're not going to use those for x, and y.
            // NOTE Most browsers also alias clientX/Y with x/y
            // so that's something to consider down the road.


            object.x = event.clientX;
            object.y = event.clientY;
            object.screenX = event.screenX;
            object.screenY = event.screenY;
          }

          object.clientX = object.x;
          object.clientY = object.y;
        }; //NOTE Remember accessibility, Aria roles, and labels.
      }
      /*
      git remote add origin https://github.com/hollowdoor/create_point_cb.git
      git push -u origin master
      */


      module.exports = createPointCB; //# sourceMappingURL=bundle.js.map

      /***/
    },

    /***/
    "7DTD":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/setISOWeekYear/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function DTD(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setISOWeekYear;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../startOfISOWeekYear/index.js */
      "0f5V");
      /* harmony import */


      var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../differenceInCalendarDays/index.js */
      "gXqy");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setISOWeekYear
       * @category ISO Week-Numbering Year Helpers
       * @summary Set the ISO week-numbering year to the given date.
       *
       * @description
       * Set the ISO week-numbering year to the given date,
       * saving the week number and the weekday number.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `setISOYear` to `setISOWeekYear`.
       *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
       *   This change makes the name consistent with
       *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} isoWeekYear - the ISO week-numbering year of the new date
       * @returns {Date} the new date with the ISO week-numbering year set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set ISO week-numbering year 2007 to 29 December 2008:
       * var result = setISOWeekYear(new Date(2008, 11, 29), 2007)
       * //=> Mon Jan 01 2007 00:00:00
       */


      function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var isoWeekYear = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyISOWeekYear);
        var diff = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date, Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date));
        var fourthOfJanuary = new Date(0);
        fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);
        fourthOfJanuary.setHours(0, 0, 0, 0);
        date = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(fourthOfJanuary);
        date.setDate(date.getDate() + diff);
        return date;
      }
      /***/

    },

    /***/
    "7gZZ":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/getWeekYear/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function gZZ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getWeekYear;
      });
      /* harmony import */


      var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfWeek/index.js */
      "aetl");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getWeekYear
       * @category Week-Numbering Year Helpers
       * @summary Get the local week-numbering year of the given date.
       *
       * @description
       * Get the local week-numbering year of the given date.
       * The exact calculation depends on the values of
       * `options.weekStartsOn` (which is the index of the first day of the week)
       * and `options.firstWeekContainsDate` (which is the day of January, which is always in
       * the first week of the week-numbering year)
       *
       * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
       * @returns {Number} the local week-numbering year
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
       *
       * @example
       * // Which week numbering year is 26 December 2004 with the default settings?
       * var result = getWeekYear(new Date(2004, 11, 26))
       * //=> 2005
       *
       * @example
       * // Which week numbering year is 26 December 2004 if week starts on Saturday?
       * var result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })
       * //=> 2004
       *
       * @example
       * // Which week numbering year is 26 December 2004 if the first week contains 4 January?
       * var result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })
       * //=> 2004
       */


      function getWeekYear(dirtyDate, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var year = date.getFullYear();
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(localeFirstWeekContainsDate);
        var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

        if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
          throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
        }

        var firstWeekOfNextYear = new Date(0);
        firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
        firstWeekOfNextYear.setHours(0, 0, 0, 0);
        var startOfNextYear = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(firstWeekOfNextYear, dirtyOptions);
        var firstWeekOfThisYear = new Date(0);
        firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
        firstWeekOfThisYear.setHours(0, 0, 0, 0);
        var startOfThisYear = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(firstWeekOfThisYear, dirtyOptions);

        if (date.getTime() >= startOfNextYear.getTime()) {
          return year + 1;
        } else if (date.getTime() >= startOfThisYear.getTime()) {
          return year;
        } else {
          return year - 1;
        }
      }
      /***/

    },

    /***/
    "7wYy":
    /*!************************************************!*\
      !*** ./node_modules/date-fns/esm/sub/index.js ***!
      \************************************************/

    /*! exports provided: default */

    /***/
    function wYy(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return sub;
      });
      /* harmony import */


      var _subDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../subDays/index.js */
      "Xep9");
      /* harmony import */


      var _subMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../subMonths/index.js */
      "phiu");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /**
       * @name sub
       * @category Common Helpers
       * @summary Subtract the specified years, months, days, hours, minutes and seconds from the given date.
       *
       * @description
       * Subtract the specified years, months, days, hours, minutes and seconds from the given date.
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Duration} duration - the object with years, months, days, hours, minutes and seconds to be subtracted
       *
       * | Key     | Description                        |
       * |---------|------------------------------------|
       * | years   | Amount of years to be subtracted   |
       * | months  | Amount of months to be subtracted  |
       * | days    | Amount of days to be subtracted    |
       * | hours   | Amount of hours to be subtracted   |
       * | minutes | Amount of minutes to be subtracted |
       * | seconds | Amount of seconds to be subtracted |
       *
       * All values default to 0
       *
       * @returns {Date} the new date with the seconds subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract the following duration from 8 June 2017 15:29:20
       * const result = sub(new Date(2017, 5, 8, 15, 29, 20), {
       *   years: 2,
       *   months: 9,
       *   days: 7,
       *   hours: 5,
       *   minutes: 9,
       *   seconds: 30
       * })
       * //=> Mon Sep 1 2014 10:19:50
       */


      function sub(dirtyDate, duration) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        if (!duration || typeof duration !== 'object') return new Date(NaN);
        var years = 'years' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.years) : 0;
        var months = 'months' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.months) : 0;
        var days = 'days' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.days) : 0;
        var hours = 'hours' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.hours) : 0;
        var minutes = 'minutes' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.minutes) : 0;
        var seconds = 'seconds' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.seconds) : 0; // Subtract years and months

        var dateWithoutMonths = Object(_subMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate), months + years * 12); // Subtract days

        var dateWithoutDays = Object(_subDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateWithoutMonths, days); // Subtract hours, minutes and seconds

        var minutestoSub = minutes + hours * 60;
        var secondstoSub = seconds + minutestoSub * 60;
        var mstoSub = secondstoSub * 1000;
        var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);
        return finalDate;
      }
      /***/

    },

    /***/
    "7xvl":
    /*!****************************************************************!*\
      !*** ./node_modules/date-fns/esm/formatDistanceToNow/index.js ***!
      \****************************************************************/

    /*! exports provided: default */

    /***/
    function xvl(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return formatDistanceToNow;
      });
      /* harmony import */


      var _formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../formatDistance/index.js */
      "FVam");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name formatDistanceToNow
       * @category Common Helpers
       * @summary Return the distance between the given date and now in words.
       * @pure false
       *
       * @description
       * Return the distance between the given date and now in words.
       *
       * | Distance to now                                                   | Result              |
       * |-------------------------------------------------------------------|---------------------|
       * | 0 ... 30 secs                                                     | less than a minute  |
       * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
       * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
       * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
       * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
       * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
       * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
       * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
       * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
       * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
       * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
       * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
       * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
       * | N yrs ... N yrs 3 months                                          | about N years       |
       * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
       * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
       *
       * With `options.includeSeconds == true`:
       * | Distance to now     | Result               |
       * |---------------------|----------------------|
       * | 0 secs ... 5 secs   | less than 5 seconds  |
       * | 5 secs ... 10 secs  | less than 10 seconds |
       * | 10 secs ... 20 secs | less than 20 seconds |
       * | 20 secs ... 40 secs | half a minute        |
       * | 40 secs ... 60 secs | less than a minute   |
       * | 60 secs ... 90 secs | 1 minute             |
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`
       *   to make its name consistent with `format` and `formatRelative`.
       *
       *   ```javascript
       *   // Before v2.0.0
       *
       *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })
       *   //=> 'in 6 months'
       *
       *   // v2.0.0 onward
       *
       *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })
       *   //=> 'in 6 months'
       *   ```
       *
       * @param {Date|Number} date - the given date
       * @param {Object} [options] - the object with options
       * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed
       * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @returns {String} the distance in words
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `date` must not be Invalid Date
       * @throws {RangeError} `options.locale` must contain `formatDistance` property
       *
       * @example
       * // If today is 1 January 2015, what is the distance to 2 July 2014?
       * var result = formatDistanceToNow(
       *   new Date(2014, 6, 2)
       * )
       * //=> '6 months'
       *
       * @example
       * // If now is 1 January 2015 00:00:00,
       * // what is the distance to 1 January 2015 00:00:15, including seconds?
       * var result = formatDistanceToNow(
       *   new Date(2015, 0, 1, 0, 0, 15),
       *   {includeSeconds: true}
       * )
       * //=> 'less than 20 seconds'
       *
       * @example
       * // If today is 1 January 2015,
       * // what is the distance to 1 January 2016, with a suffix?
       * var result = formatDistanceToNow(
       *   new Date(2016, 0, 1),
       *   {addSuffix: true}
       * )
       * //=> 'in about 1 year'
       *
       * @example
       * // If today is 1 January 2015,
       * // what is the distance to 1 August 2016 in Esperanto?
       * var eoLocale = require('date-fns/locale/eo')
       * var result = formatDistanceToNow(
       *   new Date(2016, 7, 1),
       *   {locale: eoLocale}
       * )
       * //=> 'pli ol 1 jaro'
       */


      function formatDistanceToNow(dirtyDate, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now(), dirtyOptions);
      }
      /***/

    },

    /***/
    "83R2":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/addBusinessDays/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function R2(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return addBusinessDays;
      });
      /* harmony import */


      var _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isWeekend/index.js */
      "gLRL");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name addBusinessDays
       * @category Day Helpers
       * @summary Add the specified number of business days (mon - fri) to the given date.
       *
       * @description
       * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of business days to be added
       * @returns {Date} the new date with the business days added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 10 business days to 1 September 2014:
       * var result = addBusinessDays(new Date(2014, 8, 1), 10)
       * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)
       */


      function addBusinessDays(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyAmount);
        if (isNaN(amount)) return new Date(NaN);
        var hours = date.getHours();
        var sign = amount < 0 ? -1 : 1;
        var fullWeeks = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(amount / 5);
        date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week

        var restDays = Math.abs(amount % 5); // Loops over remaining days

        while (restDays > 0) {
          date.setDate(date.getDate() + sign);
          if (!Object(_isWeekend_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date)) restDays -= 1;
        } // Restore hours to avoid DST lag


        date.setHours(hours);
        return date;
      }
      /***/

    },

    /***/
    "8iJe":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/lastDayOfDecade/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function iJe(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return lastDayOfDecade;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name lastDayOfDecade
       * @category Decade Helpers
       * @summary Return the last day of a decade for the given date.
       *
       * @description
       * Return the last day of a decade for the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the last day of a decade
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The last day of a decade for 21 December 2012 21:12:00:
       * var result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))
       * //=> Wed Dec 31 2019 00:00:00
       */


      function lastDayOfDecade(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var year = date.getFullYear();
        var decade = 9 + Math.floor(year / 10) * 10;
        date.setFullYear(decade + 1, 0, 0);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "9/EM":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/addDays/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function EM(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return addDays;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name addDays
       * @category Day Helpers
       * @summary Add the specified number of days to the given date.
       *
       * @description
       * Add the specified number of days to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of days to be added
       * @returns {Date} the new date with the days added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 10 days to 1 September 2014:
       * var result = addDays(new Date(2014, 8, 1), 10)
       * //=> Thu Sep 11 2014 00:00:00
       */


      function addDays(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        date.setDate(date.getDate() + amount);
        return date;
      }
      /***/

    },

    /***/
    "9T1D":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/isLeapYear/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function T1D(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isLeapYear;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isLeapYear
       * @category Year Helpers
       * @summary Is the given date in the leap year?
       *
       * @description
       * Is the given date in the leap year?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is in the leap year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Is 1 September 2012 in the leap year?
       * var result = isLeapYear(new Date(2012, 8, 1))
       * //=> true
       */


      function isLeapYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var year = date.getFullYear();
        return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
      }
      /***/

    },

    /***/
    "9ig3":
    /*!*********************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfMonth/index.js ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function ig3(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfMonth;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name startOfMonth
       * @category Month Helpers
       * @summary Return the start of a month for the given date.
       *
       * @description
       * Return the start of a month for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the start of a month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The start of a month for 2 September 2014 11:55:00:
       * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Mon Sep 01 2014 00:00:00
       */


      function startOfMonth(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        date.setDate(1);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "AF4N":
    /*!**********************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInCalendarYears/index.js ***!
      \**********************************************************************/

    /*! exports provided: default */

    /***/
    function AF4N(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInCalendarYears;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInCalendarYears
       * @category Year Helpers
       * @summary Get the number of calendar years between the given dates.
       *
       * @description
       * Get the number of calendar years between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of calendar years
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many calendar years are between 31 December 2013 and 11 February 2015?
       * var result = differenceInCalendarYears(
       *   new Date(2015, 1, 11),
       *   new Date(2013, 11, 31)
       * )
       * //=> 2
       */


      function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        return dateLeft.getFullYear() - dateRight.getFullYear();
      }
      /***/

    },

    /***/
    "AWcS":
    /*!*********************************************************!*\
      !*** ./node_modules/date-fns/esm/isThisSecond/index.js ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function AWcS(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isThisSecond;
      });
      /* harmony import */


      var _isSameSecond_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isSameSecond/index.js */
      "B3eN");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isThisSecond
       * @category Second Helpers
       * @summary Is the given date in the same second as the current date?
       * @pure false
       *
       * @description
       * Is the given date in the same second as the current date?
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is in this second
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // If now is 25 September 2014 18:30:15.500,
       * // is 25 September 2014 18:30:15.000 in this second?
       * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))
       * //=> true
       */


      function isThisSecond(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_isSameSecond_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
      }
      /***/

    },

    /***/
    "AkX2":
    /*!***************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInMonths/index.js ***!
      \***************************************************************/

    /*! exports provided: default */

    /***/
    function AkX2(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInMonths;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _differenceInCalendarMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../differenceInCalendarMonths/index.js */
      "pvlY");
      /* harmony import */


      var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../compareAsc/index.js */
      "JhOC");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInMonths
       * @category Month Helpers
       * @summary Get the number of full months between the given dates.
       *
       * @description
       * Get the number of full months between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of full months
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many full months are between 31 January 2014 and 1 September 2014?
       * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))
       * //=> 7
       */


      function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        var sign = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight);
        var difference = Math.abs(Object(_differenceInCalendarMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight));
        dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full
        // If so, result must be decreased by 1 in absolute value

        var isLastMonthNotFull = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight) === -sign;
        var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero

        return result === 0 ? 0 : result;
      }
      /***/

    },

    /***/
    "B3eN":
    /*!*********************************************************!*\
      !*** ./node_modules/date-fns/esm/isSameSecond/index.js ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function B3eN(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isSameSecond;
      });
      /* harmony import */


      var _startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfSecond/index.js */
      "WJMa");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isSameSecond
       * @category Second Helpers
       * @summary Are the given dates in the same second?
       *
       * @description
       * Are the given dates in the same second?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to check
       * @param {Date|Number} dateRight - the second date to check
       * @returns {Boolean} the dates are in the same second
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500
       * // in the same second?
       * var result = isSameSecond(
       *   new Date(2014, 8, 4, 6, 30, 15),
       *   new Date(2014, 8, 4, 6, 30, 15, 500)
       * )
       * //=> true
       */


      function isSameSecond(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeftStartOfSecond = Object(_startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRightStartOfSecond = Object(_startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();
      }
      /***/

    },

    /***/
    "BB/G":
    /*!***********************************************************!*\
      !*** ./src/app/modules/comercial/agenda/agenda.module.ts ***!
      \***********************************************************/

    /*! exports provided: ComercialAgendaModule */

    /***/
    function BBG(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ComercialAgendaModule", function () {
        return ComercialAgendaModule;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common */
      "SVse");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/forms */
      "s7LF");
      /* harmony import */


      var _angular_common_locales_es_BO__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common/locales/es-BO */
      "YozJ");
      /* harmony import */


      var _angular_common_locales_es_BO__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_BO__WEBPACK_IMPORTED_MODULE_4__);
      /* harmony import */


      var angularx_flatpickr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! angularx-flatpickr */
      "nFnn");
      /* harmony import */


      var angular_calendar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! angular-calendar */
      "i5S4");
      /* harmony import */


      var angular_calendar_date_adapters_date_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! angular-calendar/date-adapters/date-fns */
      "1BeU");
      /* harmony import */


      var angular_calendar_date_adapters_date_fns__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(angular_calendar_date_adapters_date_fns__WEBPACK_IMPORTED_MODULE_7__);
      /* harmony import */


      var ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ngx-bootstrap/dropdown */
      "FE24");
      /* harmony import */


      var ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ngx-bootstrap/datepicker */
      "ienR");
      /* harmony import */


      var ngx_bootstrap_timepicker__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ngx-bootstrap/timepicker */
      "M3cK");
      /* harmony import */


      var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! @ng-select/ng-select */
      "wTG2");
      /* harmony import */


      var src_app_guards_form_deactivate_guard__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! src/app/guards/form-deactivate.guard */
      "iMgG");
      /* harmony import */


      var _agenda_routing_module__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ./agenda-routing.module */
      "It7v");
      /* harmony import */


      var src_app_core_not_found_not_found_module__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! src/app/core/not-found/not-found.module */
      "sCnT");
      /* harmony import */


      var src_app_shared_modules_shared_module__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! src/app/shared/modules/shared.module */
      "UKGz");
      /* harmony import */


      var src_app_shared_templates_templates_module__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! src/app/shared/templates/templates.module */
      "QdM9");
      /* harmony import */


      var _templates_templates_module__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! ../templates/templates.module */
      "9lCC");
      /* harmony import */


      var _compromissos_compromissos_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
      /*! ./compromissos/compromissos.component */
      "GL/A");
      /* harmony import */


      var _detalhes_detalhes_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
      /*! ./detalhes/detalhes.component */
      "a+am");
      /* harmony import */


      var _formulario_formulario_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
      /*! ./formulario/formulario.component */
      "mDNA");

      Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_BO__WEBPACK_IMPORTED_MODULE_4___default.a, 'es-BO'); // Angular Calendar
      // ngx-bootstrap
      // ng-select
      // Guards
      // Modules
      // Components

      var ComercialAgendaModule = function ComercialAgendaModule() {
        _classCallCheck(this, ComercialAgendaModule);
      };

      ComercialAgendaModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [_compromissos_compromissos_component__WEBPACK_IMPORTED_MODULE_18__["ComercialAgendaCompromissosComponent"], _detalhes_detalhes_component__WEBPACK_IMPORTED_MODULE_19__["ComercialAgendaDetalhesComponent"], _formulario_formulario_component__WEBPACK_IMPORTED_MODULE_20__["ComercialAgendaFormularioComponent"]],
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"], _agenda_routing_module__WEBPACK_IMPORTED_MODULE_13__["ComercialAgendaRoutingModule"], angularx_flatpickr__WEBPACK_IMPORTED_MODULE_5__["FlatpickrModule"].forRoot(), angular_calendar__WEBPACK_IMPORTED_MODULE_6__["CalendarModule"].forRoot({
          provide: angular_calendar__WEBPACK_IMPORTED_MODULE_6__["DateAdapter"],
          useFactory: angular_calendar_date_adapters_date_fns__WEBPACK_IMPORTED_MODULE_7__["adapterFactory"]
        }), ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_8__["BsDropdownModule"].forRoot(), ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_9__["BsDatepickerModule"].forRoot(), ngx_bootstrap_timepicker__WEBPACK_IMPORTED_MODULE_10__["TimepickerModule"].forRoot(), _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_11__["NgSelectModule"], src_app_core_not_found_not_found_module__WEBPACK_IMPORTED_MODULE_14__["NotFoundModule"], src_app_shared_modules_shared_module__WEBPACK_IMPORTED_MODULE_15__["SharedModule"], src_app_shared_templates_templates_module__WEBPACK_IMPORTED_MODULE_16__["TemplatesModule"].forRoot(), _templates_templates_module__WEBPACK_IMPORTED_MODULE_17__["ComercialTemplatesModule"]],
        providers: [src_app_guards_form_deactivate_guard__WEBPACK_IMPORTED_MODULE_12__["FormDeactivateGuard"], {
          provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"],
          useValue: 'es-BO'
        }]
      })], ComercialAgendaModule);
      /***/
    },

    /***/
    "BKKT":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/getISOWeekYear/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function BKKT(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getISOWeekYear;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfISOWeek/index.js */
      "1dmy");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getISOWeekYear
       * @category ISO Week-Numbering Year Helpers
       * @summary Get the ISO week-numbering year of the given date.
       *
       * @description
       * Get the ISO week-numbering year of the given date,
       * which always starts 3 days before the year's first Thursday.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `getISOYear` to `getISOWeekYear`.
       *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
       *   This change makes the name consistent with
       *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the ISO week-numbering year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which ISO-week numbering year is 2 January 2005?
       * var result = getISOWeekYear(new Date(2005, 0, 2))
       * //=> 2004
       */


      function getISOWeekYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var year = date.getFullYear();
        var fourthOfJanuaryOfNextYear = new Date(0);
        fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
        fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
        var startOfNextYear = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfNextYear);
        var fourthOfJanuaryOfThisYear = new Date(0);
        fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
        fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
        var startOfThisYear = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfThisYear);

        if (date.getTime() >= startOfNextYear.getTime()) {
          return year + 1;
        } else if (date.getTime() >= startOfThisYear.getTime()) {
          return year;
        } else {
          return year - 1;
        }
      }
      /***/

    },

    /***/
    "Bp6I":
    /*!**************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInYears/index.js ***!
      \**************************************************************/

    /*! exports provided: default */

    /***/
    function Bp6I(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInYears;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _differenceInCalendarYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../differenceInCalendarYears/index.js */
      "AF4N");
      /* harmony import */


      var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../compareAsc/index.js */
      "JhOC");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInYears
       * @category Year Helpers
       * @summary Get the number of full years between the given dates.
       *
       * @description
       * Get the number of full years between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of full years
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many full years are between 31 December 2013 and 11 February 2015?
       * var result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))
       * //=> 1
       */


      function differenceInYears(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        var sign = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight);
        var difference = Math.abs(Object(_differenceInCalendarYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight));
        dateLeft.setFullYear(dateLeft.getFullYear() - sign * difference); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full
        // If so, result must be decreased by 1 in absolute value

        var isLastYearNotFull = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight) === -sign;
        var result = sign * (difference - isLastYearNotFull); // Prevent negative zero

        return result === 0 ? 0 : result;
      }
      /***/

    },

    /***/
    "Ctv7":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/addSeconds/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function Ctv7(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return addSeconds;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addMilliseconds/index.js */
      "pl0G");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name addSeconds
       * @category Second Helpers
       * @summary Add the specified number of seconds to the given date.
       *
       * @description
       * Add the specified number of seconds to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of seconds to be added
       * @returns {Date} the new date with the seconds added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 30 seconds to 10 July 2014 12:45:00:
       * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)
       * //=> Thu Jul 10 2014 12:45:30
       */


      function addSeconds(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, amount * 1000);
      }
      /***/

    },

    /***/
    "CxvL":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfHour/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function CxvL(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfHour;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name startOfHour
       * @category Hour Helpers
       * @summary Return the start of an hour for the given date.
       *
       * @description
       * Return the start of an hour for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the start of an hour
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The start of an hour for 2 September 2014 11:55:00:
       * var result = startOfHour(new Date(2014, 8, 2, 11, 55))
       * //=> Tue Sep 02 2014 11:00:00
       */


      function startOfHour(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        date.setMinutes(0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "D+pV":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/getDecade/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function DPV(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getDecade;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getDecade
       * @category Decade Helpers
       * @summary Get the decade of the given date.
       *
       * @description
       * Get the decade of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the year of decade
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which decade belongs 27 November 1942?
       * var result = getDecade(new Date(1942, 10, 27))
       * //=> 1940
       */


      function getDecade(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var year = date.getFullYear();
        var decade = Math.floor(year / 10) * 10;
        return decade;
      }
      /***/

    },

    /***/
    "DG9o":
    /*!*******************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/format/formatters/index.js ***!
      \*******************************************************************/

    /*! exports provided: default */

    /***/
    function DG9o(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../lightFormatters/index.js */
      "YIOq");
      /* harmony import */


      var _lib_getUTCDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../../../_lib/getUTCDayOfYear/index.js */
      "Hnpn");
      /* harmony import */


      var _lib_getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../../../_lib/getUTCISOWeek/index.js */
      "lgZR");
      /* harmony import */


      var _lib_getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../../../_lib/getUTCISOWeekYear/index.js */
      "gr1v");
      /* harmony import */


      var _lib_getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../../../_lib/getUTCWeek/index.js */
      "ErpD");
      /* harmony import */


      var _lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../../../_lib/getUTCWeekYear/index.js */
      "Szzx");
      /* harmony import */


      var _addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../../addLeadingZeros/index.js */
      "+7QN");

      var dayPeriodEnum = {
        am: 'am',
        pm: 'pm',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'morning',
        afternoon: 'afternoon',
        evening: 'evening',
        night: 'night'
        /*
         * |     | Unit                           |     | Unit                           |
         * |-----|--------------------------------|-----|--------------------------------|
         * |  a  | AM, PM                         |  A* | Milliseconds in day            |
         * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
         * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
         * |  d  | Day of month                   |  D  | Day of year                    |
         * |  e  | Local day of week              |  E  | Day of week                    |
         * |  f  |                                |  F* | Day of week in month           |
         * |  g* | Modified Julian day            |  G  | Era                            |
         * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
         * |  i! | ISO day of week                |  I! | ISO week of year               |
         * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
         * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
         * |  l* | (deprecated)                   |  L  | Stand-alone month              |
         * |  m  | Minute                         |  M  | Month                          |
         * |  n  |                                |  N  |                                |
         * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
         * |  p! | Long localized time            |  P! | Long localized date            |
         * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
         * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
         * |  s  | Second                         |  S  | Fraction of second             |
         * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
         * |  u  | Extended year                  |  U* | Cyclic year                    |
         * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
         * |  w  | Local week of year             |  W* | Week of month                  |
         * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
         * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
         * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
         *
         * Letters marked by * are not implemented but reserved by Unicode standard.
         *
         * Letters marked by ! are non-standard, but implemented by date-fns:
         * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
         * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
         *   i.e. 7 for Sunday, 1 for Monday, etc.
         * - `I` is ISO week of year, as opposed to `w` which is local week of year.
         * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
         *   `R` is supposed to be used in conjunction with `I` and `i`
         *   for universal ISO week-numbering date, whereas
         *   `Y` is supposed to be used in conjunction with `w` and `e`
         *   for week-numbering date specific to the locale.
         * - `P` is long localized date format
         * - `p` is long localized time format
         */

      };
      var formatters = {
        // Era
        G: function G(date, token, localize) {
          var era = date.getUTCFullYear() > 0 ? 1 : 0;

          switch (token) {
            // AD, BC
            case 'G':
            case 'GG':
            case 'GGG':
              return localize.era(era, {
                width: 'abbreviated'
              });
            // A, B

            case 'GGGGG':
              return localize.era(era, {
                width: 'narrow'
              });
            // Anno Domini, Before Christ

            case 'GGGG':
            default:
              return localize.era(era, {
                width: 'wide'
              });
          }
        },
        // Year
        y: function y(date, token, localize) {
          // Ordinal number
          if (token === 'yo') {
            var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

            var year = signedYear > 0 ? signedYear : 1 - signedYear;
            return localize.ordinalNumber(year, {
              unit: 'year'
            });
          }

          return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].y(date, token);
        },
        // Local week-numbering year
        Y: function Y(date, token, localize, options) {
          var signedWeekYear = Object(_lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)

          var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year

          if (token === 'YY') {
            var twoDigitYear = weekYear % 100;
            return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(twoDigitYear, 2);
          } // Ordinal number


          if (token === 'Yo') {
            return localize.ordinalNumber(weekYear, {
              unit: 'year'
            });
          } // Padding


          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(weekYear, token.length);
        },
        // ISO week-numbering year
        R: function R(date, token) {
          var isoWeekYear = Object(_lib_getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date); // Padding

          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(isoWeekYear, token.length);
        },
        // Extended year. This is a single number designating the year of this calendar system.
        // The main difference between `y` and `u` localizers are B.C. years:
        // | Year | `y` | `u` |
        // |------|-----|-----|
        // | AC 1 |   1 |   1 |
        // | BC 1 |   1 |   0 |
        // | BC 2 |   2 |  -1 |
        // Also `yy` always returns the last two digits of a year,
        // while `uu` pads single digit years to 2 characters and returns other years unchanged.
        u: function u(date, token) {
          var year = date.getUTCFullYear();
          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(year, token.length);
        },
        // Quarter
        Q: function Q(date, token, localize) {
          var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

          switch (token) {
            // 1, 2, 3, 4
            case 'Q':
              return String(quarter);
            // 01, 02, 03, 04

            case 'QQ':
              return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(quarter, 2);
            // 1st, 2nd, 3rd, 4th

            case 'Qo':
              return localize.ordinalNumber(quarter, {
                unit: 'quarter'
              });
            // Q1, Q2, Q3, Q4

            case 'QQQ':
              return localize.quarter(quarter, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // 1, 2, 3, 4 (narrow quarter; could be not numerical)

            case 'QQQQQ':
              return localize.quarter(quarter, {
                width: 'narrow',
                context: 'formatting'
              });
            // 1st quarter, 2nd quarter, ...

            case 'QQQQ':
            default:
              return localize.quarter(quarter, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // Stand-alone quarter
        q: function q(date, token, localize) {
          var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

          switch (token) {
            // 1, 2, 3, 4
            case 'q':
              return String(quarter);
            // 01, 02, 03, 04

            case 'qq':
              return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(quarter, 2);
            // 1st, 2nd, 3rd, 4th

            case 'qo':
              return localize.ordinalNumber(quarter, {
                unit: 'quarter'
              });
            // Q1, Q2, Q3, Q4

            case 'qqq':
              return localize.quarter(quarter, {
                width: 'abbreviated',
                context: 'standalone'
              });
            // 1, 2, 3, 4 (narrow quarter; could be not numerical)

            case 'qqqqq':
              return localize.quarter(quarter, {
                width: 'narrow',
                context: 'standalone'
              });
            // 1st quarter, 2nd quarter, ...

            case 'qqqq':
            default:
              return localize.quarter(quarter, {
                width: 'wide',
                context: 'standalone'
              });
          }
        },
        // Month
        M: function M(date, token, localize) {
          var month = date.getUTCMonth();

          switch (token) {
            case 'M':
            case 'MM':
              return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].M(date, token);
            // 1st, 2nd, ..., 12th

            case 'Mo':
              return localize.ordinalNumber(month + 1, {
                unit: 'month'
              });
            // Jan, Feb, ..., Dec

            case 'MMM':
              return localize.month(month, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // J, F, ..., D

            case 'MMMMM':
              return localize.month(month, {
                width: 'narrow',
                context: 'formatting'
              });
            // January, February, ..., December

            case 'MMMM':
            default:
              return localize.month(month, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // Stand-alone month
        L: function L(date, token, localize) {
          var month = date.getUTCMonth();

          switch (token) {
            // 1, 2, ..., 12
            case 'L':
              return String(month + 1);
            // 01, 02, ..., 12

            case 'LL':
              return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(month + 1, 2);
            // 1st, 2nd, ..., 12th

            case 'Lo':
              return localize.ordinalNumber(month + 1, {
                unit: 'month'
              });
            // Jan, Feb, ..., Dec

            case 'LLL':
              return localize.month(month, {
                width: 'abbreviated',
                context: 'standalone'
              });
            // J, F, ..., D

            case 'LLLLL':
              return localize.month(month, {
                width: 'narrow',
                context: 'standalone'
              });
            // January, February, ..., December

            case 'LLLL':
            default:
              return localize.month(month, {
                width: 'wide',
                context: 'standalone'
              });
          }
        },
        // Local week of year
        w: function w(date, token, localize, options) {
          var week = Object(_lib_getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(date, options);

          if (token === 'wo') {
            return localize.ordinalNumber(week, {
              unit: 'week'
            });
          }

          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(week, token.length);
        },
        // ISO week of year
        I: function I(date, token, localize) {
          var isoWeek = Object(_lib_getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date);

          if (token === 'Io') {
            return localize.ordinalNumber(isoWeek, {
              unit: 'week'
            });
          }

          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(isoWeek, token.length);
        },
        // Day of the month
        d: function d(date, token, localize) {
          if (token === 'do') {
            return localize.ordinalNumber(date.getUTCDate(), {
              unit: 'date'
            });
          }

          return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].d(date, token);
        },
        // Day of year
        D: function D(date, token, localize) {
          var dayOfYear = Object(_lib_getUTCDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date);

          if (token === 'Do') {
            return localize.ordinalNumber(dayOfYear, {
              unit: 'dayOfYear'
            });
          }

          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(dayOfYear, token.length);
        },
        // Day of week
        E: function E(date, token, localize) {
          var dayOfWeek = date.getUTCDay();

          switch (token) {
            // Tue
            case 'E':
            case 'EE':
            case 'EEE':
              return localize.day(dayOfWeek, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // T

            case 'EEEEE':
              return localize.day(dayOfWeek, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tu

            case 'EEEEEE':
              return localize.day(dayOfWeek, {
                width: 'short',
                context: 'formatting'
              });
            // Tuesday

            case 'EEEE':
            default:
              return localize.day(dayOfWeek, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // Local day of week
        e: function e(date, token, localize, options) {
          var dayOfWeek = date.getUTCDay();
          var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

          switch (token) {
            // Numerical value (Nth day of week with current locale or weekStartsOn)
            case 'e':
              return String(localDayOfWeek);
            // Padded numerical value

            case 'ee':
              return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(localDayOfWeek, 2);
            // 1st, 2nd, ..., 7th

            case 'eo':
              return localize.ordinalNumber(localDayOfWeek, {
                unit: 'day'
              });

            case 'eee':
              return localize.day(dayOfWeek, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // T

            case 'eeeee':
              return localize.day(dayOfWeek, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tu

            case 'eeeeee':
              return localize.day(dayOfWeek, {
                width: 'short',
                context: 'formatting'
              });
            // Tuesday

            case 'eeee':
            default:
              return localize.day(dayOfWeek, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // Stand-alone local day of week
        c: function c(date, token, localize, options) {
          var dayOfWeek = date.getUTCDay();
          var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

          switch (token) {
            // Numerical value (same as in `e`)
            case 'c':
              return String(localDayOfWeek);
            // Padded numerical value

            case 'cc':
              return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(localDayOfWeek, token.length);
            // 1st, 2nd, ..., 7th

            case 'co':
              return localize.ordinalNumber(localDayOfWeek, {
                unit: 'day'
              });

            case 'ccc':
              return localize.day(dayOfWeek, {
                width: 'abbreviated',
                context: 'standalone'
              });
            // T

            case 'ccccc':
              return localize.day(dayOfWeek, {
                width: 'narrow',
                context: 'standalone'
              });
            // Tu

            case 'cccccc':
              return localize.day(dayOfWeek, {
                width: 'short',
                context: 'standalone'
              });
            // Tuesday

            case 'cccc':
            default:
              return localize.day(dayOfWeek, {
                width: 'wide',
                context: 'standalone'
              });
          }
        },
        // ISO day of week
        i: function i(date, token, localize) {
          var dayOfWeek = date.getUTCDay();
          var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;

          switch (token) {
            // 2
            case 'i':
              return String(isoDayOfWeek);
            // 02

            case 'ii':
              return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(isoDayOfWeek, token.length);
            // 2nd

            case 'io':
              return localize.ordinalNumber(isoDayOfWeek, {
                unit: 'day'
              });
            // Tue

            case 'iii':
              return localize.day(dayOfWeek, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // T

            case 'iiiii':
              return localize.day(dayOfWeek, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tu

            case 'iiiiii':
              return localize.day(dayOfWeek, {
                width: 'short',
                context: 'formatting'
              });
            // Tuesday

            case 'iiii':
            default:
              return localize.day(dayOfWeek, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // AM or PM
        a: function a(date, token, localize) {
          var hours = date.getUTCHours();
          var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';

          switch (token) {
            case 'a':
            case 'aa':
            case 'aaa':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'abbreviated',
                context: 'formatting'
              });

            case 'aaaaa':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'narrow',
                context: 'formatting'
              });

            case 'aaaa':
            default:
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // AM, PM, midnight, noon
        b: function b(date, token, localize) {
          var hours = date.getUTCHours();
          var dayPeriodEnumValue;

          if (hours === 12) {
            dayPeriodEnumValue = dayPeriodEnum.noon;
          } else if (hours === 0) {
            dayPeriodEnumValue = dayPeriodEnum.midnight;
          } else {
            dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
          }

          switch (token) {
            case 'b':
            case 'bb':
            case 'bbb':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'abbreviated',
                context: 'formatting'
              });

            case 'bbbbb':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'narrow',
                context: 'formatting'
              });

            case 'bbbb':
            default:
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // in the morning, in the afternoon, in the evening, at night
        B: function B(date, token, localize) {
          var hours = date.getUTCHours();
          var dayPeriodEnumValue;

          if (hours >= 17) {
            dayPeriodEnumValue = dayPeriodEnum.evening;
          } else if (hours >= 12) {
            dayPeriodEnumValue = dayPeriodEnum.afternoon;
          } else if (hours >= 4) {
            dayPeriodEnumValue = dayPeriodEnum.morning;
          } else {
            dayPeriodEnumValue = dayPeriodEnum.night;
          }

          switch (token) {
            case 'B':
            case 'BB':
            case 'BBB':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'abbreviated',
                context: 'formatting'
              });

            case 'BBBBB':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'narrow',
                context: 'formatting'
              });

            case 'BBBB':
            default:
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },
        // Hour [1-12]
        h: function h(date, token, localize) {
          if (token === 'ho') {
            var hours = date.getUTCHours() % 12;
            if (hours === 0) hours = 12;
            return localize.ordinalNumber(hours, {
              unit: 'hour'
            });
          }

          return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].h(date, token);
        },
        // Hour [0-23]
        H: function H(date, token, localize) {
          if (token === 'Ho') {
            return localize.ordinalNumber(date.getUTCHours(), {
              unit: 'hour'
            });
          }

          return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].H(date, token);
        },
        // Hour [0-11]
        K: function K(date, token, localize) {
          var hours = date.getUTCHours() % 12;

          if (token === 'Ko') {
            return localize.ordinalNumber(hours, {
              unit: 'hour'
            });
          }

          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(hours, token.length);
        },
        // Hour [1-24]
        k: function k(date, token, localize) {
          var hours = date.getUTCHours();
          if (hours === 0) hours = 24;

          if (token === 'ko') {
            return localize.ordinalNumber(hours, {
              unit: 'hour'
            });
          }

          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(hours, token.length);
        },
        // Minute
        m: function m(date, token, localize) {
          if (token === 'mo') {
            return localize.ordinalNumber(date.getUTCMinutes(), {
              unit: 'minute'
            });
          }

          return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].m(date, token);
        },
        // Second
        s: function s(date, token, localize) {
          if (token === 'so') {
            return localize.ordinalNumber(date.getUTCSeconds(), {
              unit: 'second'
            });
          }

          return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].s(date, token);
        },
        // Fraction of second
        S: function S(date, token) {
          return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].S(date, token);
        },
        // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
        X: function X(date, token, _localize, options) {
          var originalDate = options._originalDate || date;
          var timezoneOffset = originalDate.getTimezoneOffset();

          if (timezoneOffset === 0) {
            return 'Z';
          }

          switch (token) {
            // Hours and optional minutes
            case 'X':
              return formatTimezoneWithOptionalMinutes(timezoneOffset);
            // Hours, minutes and optional seconds without `:` delimiter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `XX`

            case 'XXXX':
            case 'XX':
              // Hours and minutes without `:` delimiter
              return formatTimezone(timezoneOffset);
            // Hours, minutes and optional seconds with `:` delimiter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `XXX`

            case 'XXXXX':
            case 'XXX': // Hours and minutes with `:` delimiter

            default:
              return formatTimezone(timezoneOffset, ':');
          }
        },
        // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
        x: function x(date, token, _localize, options) {
          var originalDate = options._originalDate || date;
          var timezoneOffset = originalDate.getTimezoneOffset();

          switch (token) {
            // Hours and optional minutes
            case 'x':
              return formatTimezoneWithOptionalMinutes(timezoneOffset);
            // Hours, minutes and optional seconds without `:` delimiter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `xx`

            case 'xxxx':
            case 'xx':
              // Hours and minutes without `:` delimiter
              return formatTimezone(timezoneOffset);
            // Hours, minutes and optional seconds with `:` delimiter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `xxx`

            case 'xxxxx':
            case 'xxx': // Hours and minutes with `:` delimiter

            default:
              return formatTimezone(timezoneOffset, ':');
          }
        },
        // Timezone (GMT)
        O: function O(date, token, _localize, options) {
          var originalDate = options._originalDate || date;
          var timezoneOffset = originalDate.getTimezoneOffset();

          switch (token) {
            // Short
            case 'O':
            case 'OO':
            case 'OOO':
              return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
            // Long

            case 'OOOO':
            default:
              return 'GMT' + formatTimezone(timezoneOffset, ':');
          }
        },
        // Timezone (specific non-location)
        z: function z(date, token, _localize, options) {
          var originalDate = options._originalDate || date;
          var timezoneOffset = originalDate.getTimezoneOffset();

          switch (token) {
            // Short
            case 'z':
            case 'zz':
            case 'zzz':
              return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
            // Long

            case 'zzzz':
            default:
              return 'GMT' + formatTimezone(timezoneOffset, ':');
          }
        },
        // Seconds timestamp
        t: function t(date, token, _localize, options) {
          var originalDate = options._originalDate || date;
          var timestamp = Math.floor(originalDate.getTime() / 1000);
          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(timestamp, token.length);
        },
        // Milliseconds timestamp
        T: function T(date, token, _localize, options) {
          var originalDate = options._originalDate || date;
          var timestamp = originalDate.getTime();
          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(timestamp, token.length);
        }
      };

      function formatTimezoneShort(offset, dirtyDelimiter) {
        var sign = offset > 0 ? '-' : '+';
        var absOffset = Math.abs(offset);
        var hours = Math.floor(absOffset / 60);
        var minutes = absOffset % 60;

        if (minutes === 0) {
          return sign + String(hours);
        }

        var delimiter = dirtyDelimiter || '';
        return sign + String(hours) + delimiter + Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(minutes, 2);
      }

      function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
        if (offset % 60 === 0) {
          var sign = offset > 0 ? '-' : '+';
          return sign + Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(Math.abs(offset) / 60, 2);
        }

        return formatTimezone(offset, dirtyDelimiter);
      }

      function formatTimezone(offset, dirtyDelimiter) {
        var delimiter = dirtyDelimiter || '';
        var sign = offset > 0 ? '-' : '+';
        var absOffset = Math.abs(offset);
        var hours = Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(Math.floor(absOffset / 60), 2);
        var minutes = Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(absOffset % 60, 2);
        return sign + hours + delimiter + minutes;
      }
      /* harmony default export */


      __webpack_exports__["default"] = formatters;
      /***/
    },

    /***/
    "DJPP":
    /*!***********************************************************************************!*\
      !*** ./src/app/modules/comercial/agenda/compromissos/compromissos.component.scss ***!
      \***********************************************************************************/

    /*! exports provided: default */

    /***/
    function DJPP(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FnZW5kYS9jb21wcm9taXNzb3MvY29tcHJvbWlzc29zLmNvbXBvbmVudC5zY3NzIn0= */";
      /***/
    },

    /***/
    "DX7i":
    /*!*************************************************************!*\
      !*** ./node_modules/date-fns/esm/isLastDayOfMonth/index.js ***!
      \*************************************************************/

    /*! exports provided: default */

    /***/
    function DX7i(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isLastDayOfMonth;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _endOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../endOfDay/index.js */
      "piIK");
      /* harmony import */


      var _endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../endOfMonth/index.js */
      "jKzE");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isLastDayOfMonth
       * @category Month Helpers
       * @summary Is the given date the last day of a month?
       *
       * @description
       * Is the given date the last day of a month?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is the last day of a month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Is 28 February 2014 the last day of a month?
       * var result = isLastDayOfMonth(new Date(2014, 1, 28))
       * //=> true
       */


      function isLastDayOfMonth(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        return Object(_endOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date).getTime() === Object(_endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date).getTime();
      }
      /***/

    },

    /***/
    "Da6A":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/addHours/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function Da6A(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return addHours;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addMilliseconds/index.js */
      "pl0G");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_HOUR = 3600000;
      /**
       * @name addHours
       * @category Hour Helpers
       * @summary Add the specified number of hours to the given date.
       *
       * @description
       * Add the specified number of hours to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of hours to be added
       * @returns {Date} the new date with the hours added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 2 hours to 10 July 2014 23:00:00:
       * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)
       * //=> Fri Jul 11 2014 01:00:00
       */

      function addHours(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, amount * MILLISECONDS_IN_HOUR);
      }
      /***/

    },

    /***/
    "Dq2l":
    /*!*********************************************************!*\
      !*** ./node_modules/date-fns/esm/getDayOfYear/index.js ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function Dq2l(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getDayOfYear;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _startOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfYear/index.js */
      "1unF");
      /* harmony import */


      var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../differenceInCalendarDays/index.js */
      "gXqy");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getDayOfYear
       * @category Day Helpers
       * @summary Get the day of the year of the given date.
       *
       * @description
       * Get the day of the year of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the day of year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which day of the year is 2 July 2014?
       * var result = getDayOfYear(new Date(2014, 6, 2))
       * //=> 183
       */


      function getDayOfYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var diff = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, Object(_startOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date));
        var dayOfYear = diff + 1;
        return dayOfYear;
      }
      /***/

    },

    /***/
    "EhJz":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/isAfter/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function EhJz(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isAfter;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isAfter
       * @category Common Helpers
       * @summary Is the first date after the second one?
       *
       * @description
       * Is the first date after the second one?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date that should be after the other one to return true
       * @param {Date|Number} dateToCompare - the date to compare with
       * @returns {Boolean} the first date is after the second date
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Is 10 July 1989 after 11 February 1987?
       * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
       * //=> true
       */


      function isAfter(dirtyDate, dirtyDateToCompare) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var dateToCompare = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateToCompare);
        return date.getTime() > dateToCompare.getTime();
      }
      /***/

    },

    /***/
    "EkTD":
    /*!**************************************************************!*\
      !*** ./node_modules/date-fns/esm/eachWeekendOfYear/index.js ***!
      \**************************************************************/

    /*! exports provided: default */

    /***/
    function EkTD(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return eachWeekendOfYear;
      });
      /* harmony import */


      var _eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../eachWeekendOfInterval/index.js */
      "YdWM");
      /* harmony import */


      var _startOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfYear/index.js */
      "1unF");
      /* harmony import */


      var _endOfYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../endOfYear/index.js */
      "Gqtg");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name eachWeekendOfYear
       * @category Year Helpers
       * @summary List all the Saturdays and Sundays in the year.
       *
       * @description
       * Get all the Saturdays and Sundays in the year.
       *
       * @param {Date|Number} date - the given year
       * @returns {Date[]} an array containing all the Saturdays and Sundays
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} The passed date is invalid
       *
       * @example
       * // Lists all Saturdays and Sundays in the year
       * var result = eachWeekendOfYear(new Date(2020, 1, 1))
       * //=> [
       * //   Sat Jan 03 2020 00:00:00,
       * //   Sun Jan 04 2020 00:00:00,
       * //   ...
       * //   Sun Dec 27 2020 00:00:00
       * // ]
       * ]
       */


      function eachWeekendOfYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var startDate = Object(_startOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        if (isNaN(startDate)) throw new RangeError('The passed date is invalid');
        var endDate = Object(_endOfYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
        return Object(_eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
          start: startDate,
          end: endDate
        });
      }
      /***/

    },

    /***/
    "ErpD":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/getUTCWeek/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function ErpD(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getUTCWeek;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfUTCWeek/index.js */
      "1vjI");
      /* harmony import */


      var _startOfUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../startOfUTCWeekYear/index.js */
      "oADU");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376

      function getUTCWeek(dirtyDate, options) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var diff = Object(_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, options).getTime() - Object(_startOfUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, options).getTime(); // Round the number of days to the nearest integer
        // because the number of milliseconds in a week is not constant
        // (e.g. it's different in the week of the daylight saving time clock shift)

        return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
      }
      /***/

    },

    /***/
    "EwKL":
    /*!************************************************!*\
      !*** ./node_modules/positioning/dist/entry.js ***!
      \************************************************/

    /*! exports provided: positionElements */

    /***/
    function EwKL(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _positioning__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./positioning */
      "Xe8C");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "positionElements", function () {
        return _positioning__WEBPACK_IMPORTED_MODULE_0__["positionElements"];
      }); //# sourceMappingURL=entry.js.map

      /***/

    },

    /***/
    "FOez":
    /*!***********************************************************************!*\
      !*** ./src/app/shared/modules/confirm-modal/confirm-modal.service.ts ***!
      \***********************************************************************/

    /*! exports provided: ConfirmModalService */

    /***/
    function FOez(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ConfirmModalService", function () {
        return ConfirmModalService;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ngx-bootstrap/modal */
      "LqlI");
      /* harmony import */


      var _confirm_modal_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./confirm-modal.component */
      "SMoX"); // Components


      var ConfirmModalService = /*#__PURE__*/function () {
        function ConfirmModalService(modalService) {
          _classCallCheck(this, ConfirmModalService);

          this.modalService = modalService;
        }

        _createClass(ConfirmModalService, [{
          key: "showConfirm",
          value: function showConfirm(type, title, message, cancelTxt, okTxt) {
            var modalRef = this.modalService.show(_confirm_modal_component__WEBPACK_IMPORTED_MODULE_3__["ConfirmModalComponent"], {
              animated: false,
              ignoreBackdropClick: true,
              keyboard: false,
              "class": 'confirm'
            });
            modalRef.content.type = type;
            modalRef.content.title = title;
            modalRef.content.message = message;

            if (type === 'delete') {
              modalRef.content.messageAlerts = ["Se eliminará toda la información relacionada.", "Esta acción no se puede deshacer."];
            }

            if (type === 'inactivate') {
              modalRef.content.messageAlerts = ['Las informacion serán inactivadas.'];
            }

            if (cancelTxt) {
              modalRef.content.cancelTxt = cancelTxt;
            }

            if (okTxt) {
              modalRef.content.okTxt = okTxt;
            } // É uma boa prática tipar o retorno.
            // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.


            return modalRef.content.confirmResult;
          }
        }]);

        return ConfirmModalService;
      }();

      ConfirmModalService.ctorParameters = function () {
        return [{
          type: ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__["BsModalService"]
        }];
      };

      ConfirmModalService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__["BsModalService"]])], ConfirmModalService);
      /***/
    },

    /***/
    "FVam":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/formatDistance/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function FVam(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return formatDistance;
      });
      /* harmony import */


      var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../compareAsc/index.js */
      "JhOC");
      /* harmony import */


      var _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../differenceInMonths/index.js */
      "AkX2");
      /* harmony import */


      var _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../differenceInSeconds/index.js */
      "qVkf");
      /* harmony import */


      var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../locale/en-US/index.js */
      "iSMj");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_cloneObject_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../_lib/cloneObject/index.js */
      "emD/");
      /* harmony import */


      var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
      "JCDJ");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MINUTES_IN_DAY = 1440;
      var MINUTES_IN_ALMOST_TWO_DAYS = 2520;
      var MINUTES_IN_MONTH = 43200;
      var MINUTES_IN_TWO_MONTHS = 86400;
      /**
       * @name formatDistance
       * @category Common Helpers
       * @summary Return the distance between the given dates in words.
       *
       * @description
       * Return the distance between the given dates in words.
       *
       * | Distance between dates                                            | Result              |
       * |-------------------------------------------------------------------|---------------------|
       * | 0 ... 30 secs                                                     | less than a minute  |
       * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
       * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
       * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
       * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
       * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
       * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
       * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
       * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
       * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
       * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
       * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
       * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
       * | N yrs ... N yrs 3 months                                          | about N years       |
       * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
       * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
       *
       * With `options.includeSeconds == true`:
       * | Distance between dates | Result               |
       * |------------------------|----------------------|
       * | 0 secs ... 5 secs      | less than 5 seconds  |
       * | 5 secs ... 10 secs     | less than 10 seconds |
       * | 10 secs ... 20 secs    | less than 20 seconds |
       * | 20 secs ... 40 secs    | half a minute        |
       * | 40 secs ... 60 secs    | less than a minute   |
       * | 60 secs ... 90 secs    | 1 minute             |
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `distanceInWords ` to `formatDistance`
       *   to make its name consistent with `format` and `formatRelative`.
       *
       * - The order of arguments is swapped to make the function
       *   consistent with `differenceIn...` functions.
       *
       *   ```javascript
       *   // Before v2.0.0
       *
       *   distanceInWords(
       *     new Date(1986, 3, 4, 10, 32, 0),
       *     new Date(1986, 3, 4, 11, 32, 0),
       *     { addSuffix: true }
       *   ) //=> 'in about 1 hour'
       *
       *   // v2.0.0 onward
       *
       *   formatDistance(
       *     new Date(1986, 3, 4, 11, 32, 0),
       *     new Date(1986, 3, 4, 10, 32, 0),
       *     { addSuffix: true }
       *   ) //=> 'in about 1 hour'
       *   ```
       *
       * @param {Date|Number} date - the date
       * @param {Date|Number} baseDate - the date to compare with
       * @param {Object} [options] - an object with options.
       * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed
       * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @returns {String} the distance in words
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `date` must not be Invalid Date
       * @throws {RangeError} `baseDate` must not be Invalid Date
       * @throws {RangeError} `options.locale` must contain `formatDistance` property
       *
       * @example
       * // What is the distance between 2 July 2014 and 1 January 2015?
       * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))
       * //=> '6 months'
       *
       * @example
       * // What is the distance between 1 January 2015 00:00:15
       * // and 1 January 2015 00:00:00, including seconds?
       * var result = formatDistance(
       *   new Date(2015, 0, 1, 0, 0, 15),
       *   new Date(2015, 0, 1, 0, 0, 0),
       *   { includeSeconds: true }
       * )
       * //=> 'less than 20 seconds'
       *
       * @example
       * // What is the distance from 1 January 2016
       * // to 1 January 2015, with a suffix?
       * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {
       *   addSuffix: true
       * })
       * //=> 'about 1 year ago'
       *
       * @example
       * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
       * import { eoLocale } from 'date-fns/locale/eo'
       * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {
       *   locale: eoLocale
       * })
       * //=> 'pli ol 1 jaro'
       */

      function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(2, arguments);
        var options = dirtyOptions || {};
        var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_3__["default"];

        if (!locale.formatDistance) {
          throw new RangeError('locale must contain formatDistance property');
        }

        var comparison = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, dirtyBaseDate);

        if (isNaN(comparison)) {
          throw new RangeError('Invalid time value');
        }

        var localizeOptions = Object(_lib_cloneObject_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(options);
        localizeOptions.addSuffix = Boolean(options.addSuffix);
        localizeOptions.comparison = comparison;
        var dateLeft;
        var dateRight;

        if (comparison > 0) {
          dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyBaseDate);
          dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyDate);
        } else {
          dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyDate);
          dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyBaseDate);
        }

        var seconds = Object(_differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateRight, dateLeft);
        var offsetInSeconds = (Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(dateRight) - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(dateLeft)) / 1000;
        var minutes = Math.round((seconds - offsetInSeconds) / 60);
        var months; // 0 up to 2 mins

        if (minutes < 2) {
          if (options.includeSeconds) {
            if (seconds < 5) {
              return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);
            } else if (seconds < 10) {
              return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);
            } else if (seconds < 20) {
              return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);
            } else if (seconds < 40) {
              return locale.formatDistance('halfAMinute', null, localizeOptions);
            } else if (seconds < 60) {
              return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);
            } else {
              return locale.formatDistance('xMinutes', 1, localizeOptions);
            }
          } else {
            if (minutes === 0) {
              return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);
            } else {
              return locale.formatDistance('xMinutes', minutes, localizeOptions);
            }
          } // 2 mins up to 0.75 hrs

        } else if (minutes < 45) {
          return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs
        } else if (minutes < 90) {
          return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs
        } else if (minutes < MINUTES_IN_DAY) {
          var hours = Math.round(minutes / 60);
          return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days
        } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {
          return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days
        } else if (minutes < MINUTES_IN_MONTH) {
          var days = Math.round(minutes / MINUTES_IN_DAY);
          return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months
        } else if (minutes < MINUTES_IN_TWO_MONTHS) {
          months = Math.round(minutes / MINUTES_IN_MONTH);
          return locale.formatDistance('aboutXMonths', months, localizeOptions);
        }

        months = Object(_differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateRight, dateLeft); // 2 months up to 12 months

        if (months < 12) {
          var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);
          return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date
        } else {
          var monthsSinceStartOfYear = months % 12;
          var years = Math.floor(months / 12); // N years up to 1 years 3 months

          if (monthsSinceStartOfYear < 3) {
            return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months
          } else if (monthsSinceStartOfYear < 9) {
            return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months
          } else {
            return locale.formatDistance('almostXYears', years + 1, localizeOptions);
          }
        }
      }
      /***/

    },

    /***/
    "Fwbw":
    /*!*************************************************************!*\
      !*** ./node_modules/date-fns/esm/lastDayOfQuarter/index.js ***!
      \*************************************************************/

    /*! exports provided: default */

    /***/
    function Fwbw(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return lastDayOfQuarter;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name lastDayOfQuarter
       * @category Quarter Helpers
       * @summary Return the last day of a year quarter for the given date.
       *
       * @description
       * Return the last day of a year quarter for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @param {Object} [options] - an object with options.
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the last day of a quarter
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // The last day of a quarter for 2 September 2014 11:55:00:
       * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Tue Sep 30 2014 00:00:00
       */


      function lastDayOfQuarter(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var currentMonth = date.getMonth();
        var month = currentMonth - currentMonth % 3 + 3;
        date.setMonth(month, 0);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "G6Tw":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/isSameDay/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function G6Tw(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isSameDay;
      });
      /* harmony import */


      var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfDay/index.js */
      "M34a");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isSameDay
       * @category Day Helpers
       * @summary Are the given dates in the same day?
       *
       * @description
       * Are the given dates in the same day?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to check
       * @param {Date|Number} dateRight - the second date to check
       * @returns {Boolean} the dates are in the same day
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
       * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))
       * //=> true
       */


      function isSameDay(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeftStartOfDay = Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRightStartOfDay = Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
      }
      /***/

    },

    /***/
    "GKtn":
    /*!***************************************************************************!*\
      !*** ./src/app/modules/comercial/agenda/guards/acessos-resolver.guard.ts ***!
      \***************************************************************************/

    /*! exports provided: ComercialAgendaAcessosResolverGuard */

    /***/
    function GKtn(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ComercialAgendaAcessosResolverGuard", function () {
        return ComercialAgendaAcessosResolverGuard;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! src/app/modules/comercial/agenda/agenda.service */
      "73eH"); // Services


      var ComercialAgendaAcessosResolverGuard = /*#__PURE__*/function () {
        function ComercialAgendaAcessosResolverGuard(agendaService) {
          _classCallCheck(this, ComercialAgendaAcessosResolverGuard);

          this.agendaService = agendaService;
        }

        _createClass(ComercialAgendaAcessosResolverGuard, [{
          key: "resolve",
          value: function resolve() {
            return this.agendaService.getAcessos();
          }
        }]);

        return ComercialAgendaAcessosResolverGuard;
      }();

      ComercialAgendaAcessosResolverGuard.ctorParameters = function () {
        return [{
          type: src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_2__["ComercialAgendaService"]
        }];
      };

      ComercialAgendaAcessosResolverGuard = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_2__["ComercialAgendaService"]])], ComercialAgendaAcessosResolverGuard);
      /***/
    },

    /***/
    "GL/A":
    /*!*********************************************************************************!*\
      !*** ./src/app/modules/comercial/agenda/compromissos/compromissos.component.ts ***!
      \*********************************************************************************/

    /*! exports provided: ComercialAgendaCompromissosComponent */

    /***/
    function GLA(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ComercialAgendaCompromissosComponent", function () {
        return ComercialAgendaCompromissosComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_compromissos_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./compromissos.component.html */
      "QPoN");
      /* harmony import */


      var _compromissos_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./compromissos.component.scss */
      "DJPP");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/router */
      "iInd");
      /* harmony import */


      var date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! date-fns */
      "b/SL");
      /* harmony import */


      var src_app_shared_services_core_auth_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! src/app/shared/services/core/auth.service */
      "yxCR");
      /* harmony import */


      var src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! src/app/modules/comercial/agenda/agenda.service */
      "73eH");
      /* harmony import */


      var _comercial_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ../../comercial.service */
      "VgqD");
      /* harmony import */


      var src_app_shared_services_requests_atividades_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! src/app/shared/services/requests/atividades.service */
      "0PD5");
      /* harmony import */


      var src_app_shared_services_core_title_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! src/app/shared/services/core/title.service */
      "dNnS");
      /* harmony import */


      var src_app_shared_services_core_date_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! src/app/shared/services/core/date.service */
      "Rk3r"); // Services


      var ComercialAgendaCompromissosComponent = /*#__PURE__*/function () {
        function ComercialAgendaCompromissosComponent(router, activatedRoute, authService, agendaService, comercialService, atividadesService, titleService, dateService) {
          _classCallCheck(this, ComercialAgendaCompromissosComponent);

          this.router = router;
          this.activatedRoute = activatedRoute;
          this.authService = authService;
          this.agendaService = agendaService;
          this.comercialService = comercialService;
          this.atividadesService = atividadesService;
          this.titleService = titleService;
          this.dateService = dateService;
          this.user = this.authService.getCurrentUser();
          this.profile = {};
          this.loaderFullScreen = true;
          this.breadCrumbTree = [{
            descricao: 'Home',
            routerLink: '/comercial/home'
          }, {
            descricao: 'Agenda'
          }];
          this.showFilter = false;
          this.showCalendar = false;
          this.showPermissionDenied = false;
          this.view = 'month';
          this.viewDate = new Date();
          this.activeDayIsOpen = false;
          this.queryParamsChecked = false;
        }

        _createClass(ComercialAgendaCompromissosComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.registrarAcesso();
            this.getPerfil();
            this.titleService.setTitle('Agenda');
          }
        }, {
          key: "appTitle",
          value: function appTitle(date) {
            if (this.showCalendar) {
              return "Agenda (".concat(this.dateService.getFullMonth(date), "/").concat(date.getFullYear(), ")");
            }

            return 'Agenda';
          }
        }, {
          key: "registrarAcesso",
          value: function registrarAcesso() {
            this.atividadesService.registrarAcesso().subscribe();
          }
        }, {
          key: "getPerfil",
          value: function getPerfil() {
            var _this = this;

            this.comercialService.getPerfil().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["finalize"])(function () {
              _this.loaderFullScreen = false;
            })).subscribe({
              next: function next(response) {
                if (response.responseCode === 200) {
                  _this.profile = response.result;

                  if (_this.profile.coordenador === true || _this.profile.gestor === true || _this.profile.vendedor === true && _this.profile.coordenador === false && _this.profile.gestor === false && _this.profile.hasVinculoOperadores === true) {
                    _this.checkRouterParams();
                  } else if (_this.profile.vendedor === true && _this.profile.coordenador === false && _this.profile.gestor === false && _this.profile.hasVinculoOperadores === false) {
                    _this.fetchEvents();

                    _this.idVendedor = _this.user.info.idVendedor;
                    _this.idEscritorio = _this.user.info.idEscritorio;
                    _this.showCalendar = true;
                  } else {
                    _this.showPermissionDenied = true;
                  }
                } else {
                  _this.showPermissionDenied = true;
                }
              },
              error: function error(_error) {
                _this.showPermissionDenied = true;
              }
            });
          }
        }, {
          key: "enableFilterButton",
          value: function enableFilterButton() {
            if (this.profile.coordenador === true || this.profile.gestor === true || this.profile.vendedor === true && this.profile.coordenador === false && this.profile.gestor === false && this.profile.hasVinculoOperadores === true) {
              return true;
            } else {
              return false;
            }
          }
        }, {
          key: "dataFilter",
          value: function dataFilter(event) {
            console.log(event);
            this.idVendedor = event.idVendedor;
            this.nomeEscritorio = this.user.info.nomeCompleto;
            this.idEscritorio = event.idEscritorio;
            this.nomeVendedor = event.nomeVendedor;
          }
        }, {
          key: "checkRouterParams",
          value: function checkRouterParams() {
            var _this2 = this;

            var formValue = {
              idEscritorio: null,
              idVendedor: null,
              nomeEscritorio: null,
              nomeVendedor: null
            };
            this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(function (queryParams) {
              if (Object.keys(queryParams).length > 0) {
                var params = atob(queryParams['q']);
                params = JSON.parse(params);
                _this2.idEscritorio = parseInt(params.idEscritorio);
                _this2.idVendedor = parseInt(params.idVendedor);
                _this2.nomeEscritorio = params.nomeEscritorio;
                _this2.nomeVendedor = params.nomeVendedor;
                _this2.showFilter = false;
                _this2.showCalendar = true;

                _this2.fetchEvents();

                Object.keys(formValue).forEach(function (formKey) {
                  Object.keys(params).forEach(function (paramKey) {
                    if (formKey == paramKey && formValue[formKey] != params[paramKey]) {
                      if (!isNaN(Number(params[paramKey]))) {
                        formValue[formKey] = Number(params[paramKey]);
                      } else {
                        formValue[formKey] = params[paramKey];
                      }
                    }
                  });
                });
              } else {
                _this2.showFilter = true;
                _this2.showCalendar = false;
              }
            });
            this.activatedRouteSubscription.unsubscribe();
          }
        }, {
          key: "fetchEvents",
          value: function fetchEvents() {
            var _this3 = this;

            var getStart = {
              month: date_fns__WEBPACK_IMPORTED_MODULE_6__["startOfMonth"],
              week: date_fns__WEBPACK_IMPORTED_MODULE_6__["startOfWeek"],
              day: date_fns__WEBPACK_IMPORTED_MODULE_6__["startOfDay"]
            }[this.view];
            var getEnd = {
              month: date_fns__WEBPACK_IMPORTED_MODULE_6__["endOfMonth"],
              week: date_fns__WEBPACK_IMPORTED_MODULE_6__["endOfWeek"],
              day: date_fns__WEBPACK_IMPORTED_MODULE_6__["endOfDay"]
            }[this.view];
            var paramsObj = {};

            if (!this.queryParamsChecked) {
              this.activatedRoute.queryParams.subscribe(function (queryParams) {
                if (Object.keys(queryParams).length > 0) {
                  var params = atob(queryParams['q']);
                  params = JSON.parse(params);
                  var queryDate = params.inicio.split('-');

                  _this3.viewDate.setFullYear(queryDate[0]);

                  _this3.viewDate.setMonth(queryDate[1] - 1);

                  _this3.viewDate.setDate(queryDate[2]);

                  paramsObj = {
                    inicio: params.inicio,
                    fim: params.fim,
                    idEscritorio: params.idEscritorio,
                    idVendedor: params.idVendedor,
                    nomeEscritorio: params.nomeEscritorio,
                    nomeVendedor: params.nomeVendedor
                  };
                } else {
                  _this3.viewDate = new Date();
                  paramsObj = {
                    inicio: Object(date_fns__WEBPACK_IMPORTED_MODULE_6__["format"])(getStart(_this3.viewDate), 'yyyy-MM-dd'),
                    fim: Object(date_fns__WEBPACK_IMPORTED_MODULE_6__["format"])(getEnd(_this3.viewDate), 'yyyy-MM-dd'),
                    idEscritorio: _this3.idEscritorio,
                    idVendedor: _this3.idVendedor,
                    nomeEscritorio: _this3.nomeEscritorio,
                    nomeVendedor: _this3.nomeVendedor
                  };
                }
              });
            } else {
              paramsObj = {
                inicio: Object(date_fns__WEBPACK_IMPORTED_MODULE_6__["format"])(getStart(this.viewDate), 'yyyy-MM-dd'),
                fim: Object(date_fns__WEBPACK_IMPORTED_MODULE_6__["format"])(getEnd(this.viewDate), 'yyyy-MM-dd'),
                idEscritorio: this.idEscritorio,
                idVendedor: this.idVendedor,
                nomeEscritorio: this.nomeEscritorio,
                nomeVendedor: this.nomeVendedor
              };
            }

            this.queryParamsChecked = true;
            this.activeDayIsOpen = false;
            this.events$ = this.agendaService.getCompromissos(paramsObj).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (compromissos) {
              if (compromissos['responseCode'] === 200) {
                return compromissos['result'].map(function (compromisso) {
                  return {
                    id: compromisso.id,
                    color: {
                      primary: compromisso.color
                    },
                    title: compromisso.title,
                    codClient: compromisso.codClient,
                    client: compromisso.client,
                    formContactId: compromisso.formContactId,
                    formContactDesc: compromisso.formContactDesc,
                    typeContactId: compromisso.typeContactId,
                    typeContactDesc: compromisso.typeContactDesc,
                    start: new Date(compromisso.start),
                    end: new Date(compromisso.end),
                    allDay: compromisso.allDay,
                    description: compromisso.description,
                    draggable: false
                  };
                });
              } else {
                return [];
              }
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["finalize"])(function () {
              _this3.setRouterParams(paramsObj);
            }));
          }
        }, {
          key: "dayClicked",
          value: function dayClicked(_ref) {
            var date = _ref.date,
                events = _ref.events;

            if (Object(date_fns__WEBPACK_IMPORTED_MODULE_6__["isSameMonth"])(date, this.viewDate)) {
              if (Object(date_fns__WEBPACK_IMPORTED_MODULE_6__["isSameDay"])(this.viewDate, date) && this.activeDayIsOpen === true || events.length === 0) {
                this.activeDayIsOpen = false;
              } else {
                this.activeDayIsOpen = true;
                this.viewDate = date;
              }
            }
          }
        }, {
          key: "eventClicked",
          value: function eventClicked(event) {
            this.router.navigate(['../detalhes', event.id], {
              relativeTo: this.activatedRoute
            });
          }
        }, {
          key: "onFilter",
          value: function onFilter(showFilter) {
            if (showFilter) {
              this.showCalendar = true;
              this.fetchEvents();
            } else {
              this.showCalendar = false;
              this.setRouterParams(null);
            }

            this.showFilter = !this.showFilter;
          }
        }, {
          key: "setRouterParams",
          value: function setRouterParams(params) {
            if (params === null) {
              this.router.navigate([], {
                relativeTo: this.activatedRoute
              });
            } else {
              this.router.navigate([], {
                relativeTo: this.activatedRoute,
                queryParams: {
                  q: btoa(JSON.stringify(params))
                },
                queryParamsHandling: 'merge'
              });
            }
          }
        }]);

        return ComercialAgendaCompromissosComponent;
      }();

      ComercialAgendaCompromissosComponent.ctorParameters = function () {
        return [{
          type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
        }, {
          type: src_app_shared_services_core_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"]
        }, {
          type: src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_8__["ComercialAgendaService"]
        }, {
          type: _comercial_service__WEBPACK_IMPORTED_MODULE_9__["ComercialService"]
        }, {
          type: src_app_shared_services_requests_atividades_service__WEBPACK_IMPORTED_MODULE_10__["AtividadesService"]
        }, {
          type: src_app_shared_services_core_title_service__WEBPACK_IMPORTED_MODULE_11__["TitleService"]
        }, {
          type: src_app_shared_services_core_date_service__WEBPACK_IMPORTED_MODULE_12__["DateService"]
        }];
      };

      ComercialAgendaCompromissosComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'comercial-agenda-compromissos',
        template: _raw_loader_compromissos_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_compromissos_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"], src_app_shared_services_core_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"], src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_8__["ComercialAgendaService"], _comercial_service__WEBPACK_IMPORTED_MODULE_9__["ComercialService"], src_app_shared_services_requests_atividades_service__WEBPACK_IMPORTED_MODULE_10__["AtividadesService"], src_app_shared_services_core_title_service__WEBPACK_IMPORTED_MODULE_11__["TitleService"], src_app_shared_services_core_date_service__WEBPACK_IMPORTED_MODULE_12__["DateService"]])], ComercialAgendaCompromissosComponent);
      /***/
    },

    /***/
    "GP2A":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/addISOWeekYears/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function GP2A(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return addISOWeekYears;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../getISOWeekYear/index.js */
      "BKKT");
      /* harmony import */


      var _setISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../setISOWeekYear/index.js */
      "7DTD");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name addISOWeekYears
       * @category ISO Week-Numbering Year Helpers
       * @summary Add the specified number of ISO week-numbering years to the given date.
       *
       * @description
       * Add the specified number of ISO week-numbering years to the given date.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `addISOYears` to `addISOWeekYears`.
       *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
       *   This change makes the name consistent with
       *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of ISO week-numbering years to be added
       * @returns {Date} the new date with the ISO week-numbering years added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 5 ISO week-numbering years to 2 July 2010:
       * var result = addISOWeekYears(new Date(2010, 6, 2), 5)
       * //=> Fri Jun 26 2015 00:00:00
       */


      function addISOWeekYears(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_setISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate) + amount);
      }
      /***/

    },

    /***/
    "GobQ":
    /*!***************************************************!*\
      !*** ./node_modules/date-fns/esm/getDay/index.js ***!
      \***************************************************/

    /*! exports provided: default */

    /***/
    function GobQ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getDay;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getDay
       * @category Weekday Helpers
       * @summary Get the day of the week of the given date.
       *
       * @description
       * Get the day of the week of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the day of week
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which day of the week is 29 February 2012?
       * var result = getDay(new Date(2012, 1, 29))
       * //=> 3
       */


      function getDay(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var day = date.getDay();
        return day;
      }
      /***/

    },

    /***/
    "Gqtg":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfYear/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function Gqtg(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfYear;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name endOfYear
       * @category Year Helpers
       * @summary Return the end of a year for the given date.
       *
       * @description
       * Return the end of a year for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the end of a year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The end of a year for 2 September 2014 11:55:00:
       * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))
       * //=> Wed Dec 31 2014 23:59:59.999
       */


      function endOfYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var year = date.getFullYear();
        date.setFullYear(year + 1, 0, 0);
        date.setHours(23, 59, 59, 999);
        return date;
      }
      /***/

    },

    /***/
    "GxZL":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/isSaturday/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function GxZL(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isSaturday;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isSaturday
       * @category Weekday Helpers
       * @summary Is the given date Saturday?
       *
       * @description
       * Is the given date Saturday?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is Saturday
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Is 27 September 2014 Saturday?
       * var result = isSaturday(new Date(2014, 8, 27))
       * //=> true
       */


      function isSaturday(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 6;
      }
      /***/

    },

    /***/
    "H6X/":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/isThursday/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function H6X(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isThursday;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isThursday
       * @category Weekday Helpers
       * @summary Is the given date Thursday?
       *
       * @description
       * Is the given date Thursday?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is Thursday
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Is 25 September 2014 Thursday?
       * var result = isThursday(new Date(2014, 8, 25))
       * //=> true
       */


      function isThursday(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 4;
      }
      /***/

    },

    /***/
    "HZtn":
    /*!***************************************************!*\
      !*** ./node_modules/date-fns/esm/isPast/index.js ***!
      \***************************************************/

    /*! exports provided: default */

    /***/
    function HZtn(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isPast;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isPast
       * @category Common Helpers
       * @summary Is the given date in the past?
       * @pure false
       *
       * @description
       * Is the given date in the past?
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is in the past
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // If today is 6 October 2014, is 2 July 2014 in the past?
       * var result = isPast(new Date(2014, 6, 2))
       * //=> true
       */


      function isPast(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getTime() < Date.now();
      }
      /***/

    },

    /***/
    "Havk":
    /*!*************************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js ***!
      \*************************************************************************/

    /*! exports provided: default */

    /***/
    function Havk(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInCalendarISOWeeks;
      });
      /* harmony import */


      var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
      "JCDJ");
      /* harmony import */


      var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfISOWeek/index.js */
      "1dmy");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_WEEK = 604800000;
      /**
       * @name differenceInCalendarISOWeeks
       * @category ISO Week Helpers
       * @summary Get the number of calendar ISO weeks between the given dates.
       *
       * @description
       * Get the number of calendar ISO weeks between the given dates.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of calendar ISO weeks
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?
       * var result = differenceInCalendarISOWeeks(
       *   new Date(2014, 6, 21),
       *   new Date(2014, 6, 6)
       * )
       * //=> 3
       */

      function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var startOfISOWeekLeft = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
        var startOfISOWeekRight = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
        var timestampLeft = startOfISOWeekLeft.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(startOfISOWeekLeft);
        var timestampRight = startOfISOWeekRight.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(startOfISOWeekRight); // Round the number of days to the nearest integer
        // because the number of milliseconds in a week is not constant
        // (e.g. it's different in the week of the daylight saving time clock shift)

        return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
      }
      /***/

    },

    /***/
    "Hnpn":
    /*!*****************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js ***!
      \*****************************************************************/

    /*! exports provided: default */

    /***/
    function Hnpn(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getUTCDayOfYear;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376

      function getUTCDayOfYear(dirtyDate) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var timestamp = date.getTime();
        date.setUTCMonth(0, 1);
        date.setUTCHours(0, 0, 0, 0);
        var startOfYearTimestamp = date.getTime();
        var difference = timestamp - startOfYearTimestamp;
        return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
      }
      /***/

    },

    /***/
    "IIV6":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfMinute/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function IIV6(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfMinute;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name endOfMinute
       * @category Minute Helpers
       * @summary Return the end of a minute for the given date.
       *
       * @description
       * Return the end of a minute for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the end of a minute
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The end of a minute for 1 December 2014 22:15:45.400:
       * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))
       * //=> Mon Dec 01 2014 22:15:59.999
       */


      function endOfMinute(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        date.setSeconds(59, 999);
        return date;
      }
      /***/

    },

    /***/
    "ILtH":
    /*!******************************************************************!*\
      !*** ./node_modules/date-fns/esm/roundToNearestMinutes/index.js ***!
      \******************************************************************/

    /*! exports provided: default */

    /***/
    function ILtH(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return roundToNearestMinutes;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /**
       * @name roundToNearestMinutes
       * @category Minute Helpers
       * @summary Rounds the given date to the nearest minute
       *
       * @description
       * Rounds the given date to the nearest minute (or number of minutes). 
       * Rounds up when the given date is exactly between the nearest round minutes.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to round
       * @param {Object} [options] - an object with options.
       * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.
       * @returns {Date} the new date rounded to the closest minute
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.nearestTo` must be between 1 and 30
       *
       * @example
       * // Round 10 July 2014 12:12:34 to nearest minute:
       * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))
       * //=> Thu Jul 10 2014 12:13:00
       *
       * @example
       * // Round 10 July 2014 12:07:30 to nearest quarter hour:
       * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })
       * // rounds up because given date is exactly between 12:00:00 and 12:15:00
       * //=> Thu Jul 10 2014 12:15:00
       */


      function roundToNearestMinutes(dirtyDate, options) {
        if (arguments.length < 1) {
          throw new TypeError('1 argument required, but only none provided present');
        }

        var nearestTo = options && 'nearestTo' in options ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options.nearestTo) : 1;

        if (nearestTo < 1 || nearestTo > 30) {
          throw new RangeError('`options.nearestTo` must be between 1 and 30');
        }

        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case

        var minutes = date.getMinutes() + seconds / 60;
        var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;
        var remainderMinutes = minutes % nearestTo;
        var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;
        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);
      }
      /***/

    },

    /***/
    "IYaI":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/addMinutes/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function IYaI(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return addMinutes;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addMilliseconds/index.js */
      "pl0G");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_MINUTE = 60000;
      /**
       * @name addMinutes
       * @category Minute Helpers
       * @summary Add the specified number of minutes to the given date.
       *
       * @description
       * Add the specified number of minutes to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of minutes to be added
       * @returns {Date} the new date with the minutes added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 30 minutes to 10 July 2014 12:00:00:
       * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)
       * //=> Thu Jul 10 2014 12:30:00
       */

      function addMinutes(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, amount * MILLISECONDS_IN_MINUTE);
      }
      /***/

    },

    /***/
    "Ib5w":
    /*!***********************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/format/longFormatters/index.js ***!
      \***********************************************************************/

    /*! exports provided: default */

    /***/
    function Ib5w(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);

      function dateLongFormatter(pattern, formatLong) {
        switch (pattern) {
          case 'P':
            return formatLong.date({
              width: 'short'
            });

          case 'PP':
            return formatLong.date({
              width: 'medium'
            });

          case 'PPP':
            return formatLong.date({
              width: 'long'
            });

          case 'PPPP':
          default:
            return formatLong.date({
              width: 'full'
            });
        }
      }

      function timeLongFormatter(pattern, formatLong) {
        switch (pattern) {
          case 'p':
            return formatLong.time({
              width: 'short'
            });

          case 'pp':
            return formatLong.time({
              width: 'medium'
            });

          case 'ppp':
            return formatLong.time({
              width: 'long'
            });

          case 'pppp':
          default:
            return formatLong.time({
              width: 'full'
            });
        }
      }

      function dateTimeLongFormatter(pattern, formatLong) {
        var matchResult = pattern.match(/(P+)(p+)?/);
        var datePattern = matchResult[1];
        var timePattern = matchResult[2];

        if (!timePattern) {
          return dateLongFormatter(pattern, formatLong);
        }

        var dateTimeFormat;

        switch (datePattern) {
          case 'P':
            dateTimeFormat = formatLong.dateTime({
              width: 'short'
            });
            break;

          case 'PP':
            dateTimeFormat = formatLong.dateTime({
              width: 'medium'
            });
            break;

          case 'PPP':
            dateTimeFormat = formatLong.dateTime({
              width: 'long'
            });
            break;

          case 'PPPP':
          default:
            dateTimeFormat = formatLong.dateTime({
              width: 'full'
            });
            break;
        }

        return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
      }

      var longFormatters = {
        p: timeLongFormatter,
        P: dateTimeLongFormatter
      };
      /* harmony default export */

      __webpack_exports__["default"] = longFormatters;
      /***/
    },

    /***/
    "IjAw":
    /*!************************************************!*\
      !*** ./node_modules/date-fns/esm/add/index.js ***!
      \************************************************/

    /*! exports provided: default */

    /***/
    function IjAw(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return add;
      });
      /* harmony import */


      var _addDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../addDays/index.js */
      "9/EM");
      /* harmony import */


      var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addMonths/index.js */
      "dLU1");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /**
       * @name add
       * @category Common Helpers
       * @summary Add the specified years, months, days, hours, minutes and seconds to the given date.
       *
       * @description
       * Add the specified years, months, days, hours, minutes and seconds to the given date.
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Duration} duration - the object with years, months, days, hours, minutes and seconds to be added
       *
       * | Key            | Description                        |
       * |----------------|------------------------------------|
       * | years          | Amount of years to be added        |
       * | months         | Amount of months to be added       |
       * | days           | Amount of days to be added         |
       * | hours          | Amount of hours to be added        |
       * | minutes        | Amount of minutes to be added      |
       * | seconds        | Amount of seconds to be added      |
       *
       * All values default to 0
       *
       * @returns {Date} the new date with the seconds added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add the following duration to 1 September 2014, 10:19:50
       * var result = add(new Date(2014, 8, 1, 10, 19, 50), {
       *   years: 2,
       *   months: 24,
       *   days: 7,
       *   hours: 5,
       *   minutes: 9,
       *   seconds: 30,
       * })
       * //=> Sat Sep 8 2018 15:29:20
       */


      function add(dirtyDate, duration) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        if (!duration || typeof duration !== 'object') return new Date(NaN);
        var years = 'years' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.years) : 0;
        var months = 'months' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.months) : 0;
        var days = 'days' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.days) : 0;
        var hours = 'hours' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.hours) : 0;
        var minutes = 'minutes' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.minutes) : 0;
        var seconds = 'seconds' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.seconds) : 0; // Add years and months

        var dateWithMonths = Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate), months + years * 12); // Add days

        var dateWithDays = Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateWithMonths, days); // Add days, hours, minutes and seconds

        var minutesToAdd = minutes + hours * 60;
        var secondsToAdd = seconds + minutesToAdd * 60;
        var msToAdd = secondsToAdd * 1000;
        var finalDate = new Date(dateWithDays.getTime() + msToAdd);
        return finalDate;
      }
      /***/

    },

    /***/
    "It7v":
    /*!*******************************************************************!*\
      !*** ./src/app/modules/comercial/agenda/agenda-routing.module.ts ***!
      \*******************************************************************/

    /*! exports provided: ComercialAgendaRoutingModule */

    /***/
    function It7v(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ComercialAgendaRoutingModule", function () {
        return ComercialAgendaRoutingModule;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/router */
      "iInd");
      /* harmony import */


      var src_app_guards_form_deactivate_guard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! src/app/guards/form-deactivate.guard */
      "iMgG");
      /* harmony import */


      var _guards_acessos_resolver_guard__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./guards/acessos-resolver.guard */
      "GKtn");
      /* harmony import */


      var _guards_detalhes_resolver_guard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./guards/detalhes-resolver.guard */
      "5tXh");
      /* harmony import */


      var _compromissos_compromissos_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./compromissos/compromissos.component */
      "GL/A");
      /* harmony import */


      var _detalhes_detalhes_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./detalhes/detalhes.component */
      "a+am");
      /* harmony import */


      var _formulario_formulario_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./formulario/formulario.component */
      "mDNA");
      /* harmony import */


      var src_app_core_not_found_not_found_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! src/app/core/not-found/not-found.component */
      "6nXq"); // Guards
      // Components


      var routes = [{
        path: 'compromissos',
        component: _compromissos_compromissos_component__WEBPACK_IMPORTED_MODULE_6__["ComercialAgendaCompromissosComponent"]
      }, {
        path: 'detalhes/:id',
        component: _detalhes_detalhes_component__WEBPACK_IMPORTED_MODULE_7__["ComercialAgendaDetalhesComponent"],
        resolve: {
          detalhes: _guards_detalhes_resolver_guard__WEBPACK_IMPORTED_MODULE_5__["ComercialAgendaDetalhesResolverGuard"]
        }
      }, {
        path: 'novo/:codCliente',
        component: _formulario_formulario_component__WEBPACK_IMPORTED_MODULE_8__["ComercialAgendaFormularioComponent"],
        resolve: {
          acessos: _guards_acessos_resolver_guard__WEBPACK_IMPORTED_MODULE_4__["ComercialAgendaAcessosResolverGuard"],
          detalhes: _guards_detalhes_resolver_guard__WEBPACK_IMPORTED_MODULE_5__["ComercialAgendaDetalhesResolverGuard"]
        },
        canDeactivate: [src_app_guards_form_deactivate_guard__WEBPACK_IMPORTED_MODULE_3__["FormDeactivateGuard"]]
      }, {
        path: 'novo',
        component: _formulario_formulario_component__WEBPACK_IMPORTED_MODULE_8__["ComercialAgendaFormularioComponent"],
        resolve: {
          acessos: _guards_acessos_resolver_guard__WEBPACK_IMPORTED_MODULE_4__["ComercialAgendaAcessosResolverGuard"],
          detalhes: _guards_detalhes_resolver_guard__WEBPACK_IMPORTED_MODULE_5__["ComercialAgendaDetalhesResolverGuard"]
        },
        canDeactivate: [src_app_guards_form_deactivate_guard__WEBPACK_IMPORTED_MODULE_3__["FormDeactivateGuard"]]
      }, {
        path: 'editar/:id',
        component: _formulario_formulario_component__WEBPACK_IMPORTED_MODULE_8__["ComercialAgendaFormularioComponent"],
        resolve: {
          detalhes: _guards_detalhes_resolver_guard__WEBPACK_IMPORTED_MODULE_5__["ComercialAgendaDetalhesResolverGuard"]
        },
        canDeactivate: [src_app_guards_form_deactivate_guard__WEBPACK_IMPORTED_MODULE_3__["FormDeactivateGuard"]]
      }, {
        path: 'reagendar/:id',
        component: _formulario_formulario_component__WEBPACK_IMPORTED_MODULE_8__["ComercialAgendaFormularioComponent"],
        resolve: {
          detalhes: _guards_detalhes_resolver_guard__WEBPACK_IMPORTED_MODULE_5__["ComercialAgendaDetalhesResolverGuard"]
        },
        canDeactivate: [src_app_guards_form_deactivate_guard__WEBPACK_IMPORTED_MODULE_3__["FormDeactivateGuard"]]
      }, {
        path: '',
        redirectTo: 'compromissos',
        pathMatch: 'full'
      }, {
        path: '**',
        component: src_app_core_not_found_not_found_component__WEBPACK_IMPORTED_MODULE_9__["NotFoundComponent"]
      }];

      var ComercialAgendaRoutingModule = function ComercialAgendaRoutingModule() {
        _classCallCheck(this, ComercialAgendaRoutingModule);
      };

      ComercialAgendaRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
      })], ComercialAgendaRoutingModule);
      /***/
    },

    /***/
    "J9JN":
    /*!***********************************************************************!*\
      !*** ./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js ***!
      \***********************************************************************/

    /*! exports provided: default */

    /***/
    function J9JN(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../../../_lib/buildLocalizeFn/index.js */
      "ku8+");

      var eraValues = {
        narrow: ['B', 'A'],
        abbreviated: ['BC', 'AD'],
        wide: ['Before Christ', 'Anno Domini']
      };
      var quarterValues = {
        narrow: ['1', '2', '3', '4'],
        abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
        wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.
        // If you are making a new locale based on this one, check if the same is true for the language you're working on.
        // Generally, formatted dates should look like they are in the middle of a sentence,
        // e.g. in Spanish language the weekdays and months should be in the lowercase.

      };
      var monthValues = {
        narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
        abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
        wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
      };
      var dayValues = {
        narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
        "short": ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
        wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
      };
      var dayPeriodValues = {
        narrow: {
          am: 'a',
          pm: 'p',
          midnight: 'mi',
          noon: 'n',
          morning: 'morning',
          afternoon: 'afternoon',
          evening: 'evening',
          night: 'night'
        },
        abbreviated: {
          am: 'AM',
          pm: 'PM',
          midnight: 'midnight',
          noon: 'noon',
          morning: 'morning',
          afternoon: 'afternoon',
          evening: 'evening',
          night: 'night'
        },
        wide: {
          am: 'a.m.',
          pm: 'p.m.',
          midnight: 'midnight',
          noon: 'noon',
          morning: 'morning',
          afternoon: 'afternoon',
          evening: 'evening',
          night: 'night'
        }
      };
      var formattingDayPeriodValues = {
        narrow: {
          am: 'a',
          pm: 'p',
          midnight: 'mi',
          noon: 'n',
          morning: 'in the morning',
          afternoon: 'in the afternoon',
          evening: 'in the evening',
          night: 'at night'
        },
        abbreviated: {
          am: 'AM',
          pm: 'PM',
          midnight: 'midnight',
          noon: 'noon',
          morning: 'in the morning',
          afternoon: 'in the afternoon',
          evening: 'in the evening',
          night: 'at night'
        },
        wide: {
          am: 'a.m.',
          pm: 'p.m.',
          midnight: 'midnight',
          noon: 'noon',
          morning: 'in the morning',
          afternoon: 'in the afternoon',
          evening: 'in the evening',
          night: 'at night'
        }
      };

      function ordinalNumber(dirtyNumber, _dirtyOptions) {
        var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
        // if they are different for different grammatical genders,
        // use `options.unit`:
        //
        //   var options = dirtyOptions || {}
        //   var unit = String(options.unit)
        //
        // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
        // 'day', 'hour', 'minute', 'second'

        var rem100 = number % 100;

        if (rem100 > 20 || rem100 < 10) {
          switch (rem100 % 10) {
            case 1:
              return number + 'st';

            case 2:
              return number + 'nd';

            case 3:
              return number + 'rd';
          }
        }

        return number + 'th';
      }

      var localize = {
        ordinalNumber: ordinalNumber,
        era: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
          values: eraValues,
          defaultWidth: 'wide'
        }),
        quarter: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
          values: quarterValues,
          defaultWidth: 'wide',
          argumentCallback: function argumentCallback(quarter) {
            return Number(quarter) - 1;
          }
        }),
        month: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
          values: monthValues,
          defaultWidth: 'wide'
        }),
        day: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
          values: dayValues,
          defaultWidth: 'wide'
        }),
        dayPeriod: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
          values: dayPeriodValues,
          defaultWidth: 'wide',
          formattingValues: formattingDayPeriodValues,
          defaultFormattingWidth: 'wide'
        })
      };
      /* harmony default export */

      __webpack_exports__["default"] = localize;
      /***/
    },

    /***/
    "JCDJ":
    /*!*********************************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js ***!
      \*********************************************************************************/

    /*! exports provided: default */

    /***/
    function JCDJ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getTimezoneOffsetInMilliseconds;
      });

      var MILLISECONDS_IN_MINUTE = 60000;
      /**
       * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
       * They usually appear for dates that denote time before the timezones were introduced
       * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
       * and GMT+01:00:00 after that date)
       *
       * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
       * which would lead to incorrect calculations.
       *
       * This function returns the timezone offset in milliseconds that takes seconds in account.
       */

      function getTimezoneOffsetInMilliseconds(dirtyDate) {
        var date = new Date(dirtyDate.getTime());
        var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());
        date.setSeconds(0, 0);
        var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;
        return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;
      }
      /***/

    },

    /***/
    "JO1+":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/isSameWeek/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function JO1(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isSameWeek;
      });
      /* harmony import */


      var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfWeek/index.js */
      "aetl");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isSameWeek
       * @category Week Helpers
       * @summary Are the given dates in the same week?
       *
       * @description
       * Are the given dates in the same week?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to check
       * @param {Date|Number} dateRight - the second date to check
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @returns {Boolean} the dates are in the same week
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // Are 31 August 2014 and 4 September 2014 in the same week?
       * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))
       * //=> true
       *
       * @example
       * // If week starts with Monday,
       * // are 31 August 2014 and 4 September 2014 in the same week?
       * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {
       *   weekStartsOn: 1
       * })
       * //=> false
       */


      function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeftStartOfWeek = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyOptions);
        var dateRightStartOfWeek = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight, dirtyOptions);
        return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();
      }
      /***/

    },

    /***/
    "JhOC":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/compareAsc/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function JhOC(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return compareAsc;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name compareAsc
       * @category Common Helpers
       * @summary Compare the two dates and return -1, 0 or 1.
       *
       * @description
       * Compare the two dates and return 1 if the first date is after the second,
       * -1 if the first date is before the second or 0 if dates are equal.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to compare
       * @param {Date|Number} dateRight - the second date to compare
       * @returns {Number} the result of the comparison
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Compare 11 February 1987 and 10 July 1989:
       * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))
       * //=> -1
       *
       * @example
       * // Sort the array of dates:
       * var result = [
       *   new Date(1995, 6, 2),
       *   new Date(1987, 1, 11),
       *   new Date(1989, 6, 10)
       * ].sort(compareAsc)
       * //=> [
       * //   Wed Feb 11 1987 00:00:00,
       * //   Mon Jul 10 1989 00:00:00,
       * //   Sun Jul 02 1995 00:00:00
       * // ]
       */


      function compareAsc(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        var diff = dateLeft.getTime() - dateRight.getTime();

        if (diff < 0) {
          return -1;
        } else if (diff > 0) {
          return 1; // Return 0 if diff is 0; return NaN if diff is NaN
        } else {
          return diff;
        }
      }
      /***/

    },

    /***/
    "L7KI":
    /*!***************************************************************************!*\
      !*** ./src/app/modules/comercial/agenda/formulario/formulario.service.ts ***!
      \***************************************************************************/

    /*! exports provided: ComercialAgendaFormularioService */

    /***/
    function L7KI(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ComercialAgendaFormularioService", function () {
        return ComercialAgendaFormularioService;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common/http */
      "IheW");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var _cadastros_titulos_agenda_titulos_agenda_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./../../cadastros/titulos-agenda/titulos-agenda.service */
      "yZjN");
      /* harmony import */


      var _services_vendedores_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../../services/vendedores.service */
      "4xRd"); // Services


      var ComercialAgendaFormularioService = /*#__PURE__*/function () {
        function ComercialAgendaFormularioService(http, vendedoresService, titulosAgendaService) {
          _classCallCheck(this, ComercialAgendaFormularioService);

          this.http = http;
          this.vendedoresService = vendedoresService;
          this.titulosAgendaService = titulosAgendaService;
          this.API = "https://crm360.monterrey.com.bo/api/comercial/agenda/formulario";
        }

        _createClass(ComercialAgendaFormularioService, [{
          key: "loadDependencies",
          value: function loadDependencies() {
            var clientes = this.vendedoresService.getCarteiraClientes();
            var vendedores = this.vendedoresService.getVendedores();
            var formasContato = this.getFormasContato();
            var origensContato = this.getOrigensContato();
            var motivosReagendamento = this.getMotivosReagendamento();
            var listarTitulosAgenda = this.titulosAgendaService.getListaTitulosAgenda({
              codSituacao: '1'
            });
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["forkJoin"])([clientes, formasContato, origensContato, motivosReagendamento, listarTitulosAgenda, vendedores]);
          }
        }, {
          key: "getFormasContato",
          value: function getFormasContato() {
            return this.http.get("".concat(this.API, "/formas-contato")).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(2));
          }
        }, {
          key: "getOrigensContato",
          value: function getOrigensContato() {
            return this.http.get("".concat(this.API, "/origens-contato")).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(2));
          }
        }, {
          key: "getMotivosReagendamento",
          value: function getMotivosReagendamento() {
            return this.http.get("".concat(this.API, "/motivos-reagendamento")).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(2));
          }
        }]);

        return ComercialAgendaFormularioService;
      }();

      ComercialAgendaFormularioService.ctorParameters = function () {
        return [{
          type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]
        }, {
          type: _services_vendedores_service__WEBPACK_IMPORTED_MODULE_6__["ComercialVendedoresService"]
        }, {
          type: _cadastros_titulos_agenda_titulos_agenda_service__WEBPACK_IMPORTED_MODULE_5__["ComercialCadastrosTitulosAgendaService"]
        }];
      };

      ComercialAgendaFormularioService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _services_vendedores_service__WEBPACK_IMPORTED_MODULE_6__["ComercialVendedoresService"], _cadastros_titulos_agenda_titulos_agenda_service__WEBPACK_IMPORTED_MODULE_5__["ComercialCadastrosTitulosAgendaService"]])], ComercialAgendaFormularioService);
      /***/
    },

    /***/
    "L8hi":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfWeek/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function L8hi(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfWeek;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name endOfWeek
       * @category Week Helpers
       * @summary Return the end of a week for the given date.
       *
       * @description
       * Return the end of a week for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @returns {Date} the end of a week
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // The end of a week for 2 September 2014 11:55:00:
       * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Sat Sep 06 2014 23:59:59.999
       *
       * @example
       * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:
       * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
       * //=> Sun Sep 07 2014 23:59:59.999
       */


      function endOfWeek(dirtyDate, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
        }

        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var day = date.getDay();
        var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
        date.setDate(date.getDate() + diff);
        date.setHours(23, 59, 59, 999);
        return date;
      }
      /***/

    },

    /***/
    "LPPQ":
    /*!**************************************************!*\
      !*** ./node_modules/date-fns/esm/parse/index.js ***!
      \**************************************************/

    /*! exports provided: default */

    /***/
    function LPPQ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return parse;
      });
      /* harmony import */


      var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../locale/en-US/index.js */
      "iSMj");
      /* harmony import */


      var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../subMilliseconds/index.js */
      "g9KO");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_assign_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/assign/index.js */
      "+LmI");
      /* harmony import */


      var _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../_lib/format/longFormatters/index.js */
      "Ib5w");
      /* harmony import */


      var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
      "JCDJ");
      /* harmony import */


      var _lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../_lib/protectedTokens/index.js */
      "3REe");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_parsers_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./_lib/parsers/index.js */
      "Rngw");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:
      // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
      //   (one of the certain letters followed by `o`)
      // - (\w)\1* matches any sequences of the same letter
      // - '' matches two quote characters in a row
      // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
      //   except a single quote symbol, which ends the sequence.
      //   Two quote characters do not end the sequence.
      //   If there is no matching single quote
      //   then the sequence will continue until the end of the string.
      // - . matches any single character unmatched by previous parts of the RegExps

      var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
      // sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

      var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
      var escapedStringRegExp = /^'([^]*?)'?$/;
      var doubleQuoteRegExp = /''/g;
      var notWhitespaceRegExp = /\S/;
      var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
      /**
       * @name parse
       * @category Common Helpers
       * @summary Parse the date.
       *
       * @description
       * Return the date parsed from string using the given format string.
       *
       * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
       * > See: https://git.io/fxCyr
       *
       * The characters in the format string wrapped between two single quotes characters (') are escaped.
       * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
       *
       * Format of the format string is based on Unicode Technical Standard #35:
       * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
       * with a few additions (see note 5 below the table).
       *
       * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited
       * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:
       *
       * ```javascript
       * parse('23 AM', 'HH a', new Date())
       * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time
       * ```
       *
       * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true
       *
       * Accepted format string patterns:
       * | Unit                            |Prior| Pattern | Result examples                   | Notes |
       * |---------------------------------|-----|---------|-----------------------------------|-------|
       * | Era                             | 140 | G..GGG  | AD, BC                            |       |
       * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
       * |                                 |     | GGGGG   | A, B                              |       |
       * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
       * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
       * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
       * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
       * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
       * |                                 |     | yyyyy   | ...                               | 2,4   |
       * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
       * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
       * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
       * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
       * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
       * |                                 |     | YYYYY   | ...                               | 2,4   |
       * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
       * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
       * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
       * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
       * |                                 |     | RRRRR   | ...                               | 2,4,5 |
       * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
       * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
       * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
       * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
       * |                                 |     | uuuuu   | ...                               | 2,4   |
       * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
       * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
       * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
       * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
       * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
       * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
       * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
       * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
       * |                                 |     | qq      | 01, 02, 03, 04                    |       |
       * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
       * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
       * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
       * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
       * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
       * |                                 |     | MM      | 01, 02, ..., 12                   |       |
       * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
       * |                                 |     | MMMM    | January, February, ..., December  | 2     |
       * |                                 |     | MMMMM   | J, F, ..., D                      |       |
       * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
       * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
       * |                                 |     | LL      | 01, 02, ..., 12                   |       |
       * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
       * |                                 |     | LLLL    | January, February, ..., December  | 2     |
       * |                                 |     | LLLLL   | J, F, ..., D                      |       |
       * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
       * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
       * |                                 |     | ww      | 01, 02, ..., 53                   |       |
       * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
       * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
       * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
       * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
       * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
       * |                                 |     | dd      | 01, 02, ..., 31                   |       |
       * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |
       * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
       * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |
       * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
       * |                                 |     | DDDD    | ...                               | 2     |
       * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
       * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
       * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
       * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
       * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
       * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |
       * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
       * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
       * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |
       * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
       * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
       * |                                 |     | ee      | 02, 03, ..., 01                   |       |
       * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |
       * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
       * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
       * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
       * |                                 |     | cc      | 02, 03, ..., 01                   |       |
       * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |
       * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
       * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
       * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
       * |                                 |     | aaaaa   | a, p                              |       |
       * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
       * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
       * |                                 |     | bbbbb   | a, p, n, mi                       |       |
       * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
       * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
       * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
       * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
       * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
       * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
       * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
       * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
       * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
       * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
       * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
       * |                                 |     | KK      | 1, 2, ..., 11, 0                  |       |
       * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
       * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
       * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
       * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
       * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
       * |                                 |     | mm      | 00, 01, ..., 59                   |       |
       * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
       * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
       * |                                 |     | ss      | 00, 01, ..., 59                   |       |
       * | Seconds timestamp               |  40 | t       | 512969520                         |       |
       * |                                 |     | tt      | ...                               | 2     |
       * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
       * |                                 |     | SS      | 00, 01, ..., 99                   |       |
       * |                                 |     | SSS     | 000, 0001, ..., 999               |       |
       * |                                 |     | SSSS    | ...                               | 2     |
       * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
       * |                                 |     | TT      | ...                               | 2     |
       * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
       * |                                 |     | XX      | -0800, +0530, Z                   |       |
       * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
       * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
       * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
       * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
       * |                                 |     | xx      | -0800, +0530, +0000               |       |
       * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
       * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
       * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
       * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |
       * |                                 |     | PP      | May 29, 1453                      |       |
       * |                                 |     | PPP     | May 29th, 1453                    |       |
       * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |
       * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |
       * |                                 |     | pp      | 12:00:00 AM                       |       |
       * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |
       * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |
       * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |
       * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |
       * Notes:
       * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
       *    are the same as "stand-alone" units, but are different in some languages.
       *    "Formatting" units are declined according to the rules of the language
       *    in the context of a date. "Stand-alone" units are always nominative singular.
       *    In `format` function, they will produce different result:
       *
       *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
       *
       *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
       *
       *    `parse` will try to match both formatting and stand-alone units interchangably.
       *
       * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
       *    the single quote characters (see below).
       *    If the sequence is longer than listed in table:
       *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
       *      as wide as the sequence
       *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
       *      These variations are marked with "2" in the last column of the table.
       *
       * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
       *    These tokens represent the shortest form of the quarter.
       *
       * 4. The main difference between `y` and `u` patterns are B.C. years:
       *
       *    | Year | `y` | `u` |
       *    |------|-----|-----|
       *    | AC 1 |   1 |   1 |
       *    | BC 1 |   1 |   0 |
       *    | BC 2 |   2 |  -1 |
       *
       *    Also `yy` will try to guess the century of two digit year by proximity with `backupDate`:
       *
       *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
       *
       *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
       *
       *    while `uu` will just assign the year as is:
       *
       *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
       *
       *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
       *
       *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
       *    except local week-numbering years are dependent on `options.weekStartsOn`
       *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
       *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
       *
       * 5. These patterns are not in the Unicode Technical Standard #35:
       *    - `i`: ISO day of week
       *    - `I`: ISO week of year
       *    - `R`: ISO week-numbering year
       *    - `o`: ordinal number modifier
       *    - `P`: long localized date
       *    - `p`: long localized time
       *
       * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
       *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
       *
       * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
       *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
       *
       * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based
       *    on the given locale.
       *
       *    using `en-US` locale: `P` => `MM/dd/yyyy`
       *    using `en-US` locale: `p` => `hh:mm a`
       *    using `pt-BR` locale: `P` => `dd/MM/yyyy`
       *    using `pt-BR` locale: `p` => `HH:mm`
       *
       * Values will be assigned to the date in the descending order of its unit's priority.
       * Units of an equal priority overwrite each other in the order of appearance.
       *
       * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
       * the values will be taken from 3rd argument `backupDate` which works as a context of parsing.
       *
       * `backupDate` must be passed for correct work of the function.
       * If you're not sure which `backupDate` to supply, create a new instance of Date:
       * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`
       * In this case parsing will be done in the context of the current date.
       * If `backupDate` is `Invalid Date` or a value not convertible to valid `Date`,
       * then `Invalid Date` will be returned.
       *
       * The result may vary by locale.
       *
       * If `formatString` matches with `dateString` but does not provides tokens, `backupDate` will be returned.
       *
       * If parsing failed, `Invalid Date` will be returned.
       * Invalid Date is a Date, whose time value is NaN.
       * Time value of Date: http://es5.github.io/#x15.9.1.1
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - Old `parse` was renamed to `toDate`.
       *   Now `parse` is a new function which parses a string using a provided format.
       *
       *   ```javascript
       *   // Before v2.0.0
       *   parse('2016-01-01')
       *
       *   // v2.0.0 onward
       *   toDate('2016-01-01')
       *   parse('2016-01-01', 'yyyy-MM-dd', new Date())
       *   ```
       *
       * @param {String} dateString - the string to parse
       * @param {String} formatString - the string of tokens
       * @param {Date|Number} backupDate - defines values missing from the parsed dateString
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
       * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
       *   see: https://git.io/fxCyr
       * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
       *   see: https://git.io/fxCyr
       * @returns {Date} the parsed date
       * @throws {TypeError} 3 arguments required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
       * @throws {RangeError} `options.locale` must contain `match` property
       * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr
       * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr
       * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr
       * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr
       * @throws {RangeError} format string contains an unescaped latin alphabet character
       *
       * @example
       * // Parse 11 February 2014 from middle-endian format:
       * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())
       * //=> Tue Feb 11 2014 00:00:00
       *
       * @example
       * // Parse 28th of February in Esperanto locale in the context of 2010 year:
       * import eo from 'date-fns/locale/eo'
       * var result = parse('28-a de februaro', "do 'de' MMMM", new Date(2010, 0, 1), {
       *   locale: eo
       * })
       * //=> Sun Feb 28 2010 00:00:00
       */

      function parse(dirtyDateString, dirtyFormatString, dirtyBackupDate, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_9__["default"])(3, arguments);
        var dateString = String(dirtyDateString);
        var formatString = String(dirtyFormatString);
        var options = dirtyOptions || {};
        var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_0__["default"];

        if (!locale.match) {
          throw new RangeError('locale must contain match property');
        }

        var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(localeFirstWeekContainsDate);
        var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

        if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
          throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
        }

        var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
        }

        if (formatString === '') {
          if (dateString === '') {
            return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyBackupDate);
          } else {
            return new Date(NaN);
          }
        }

        var subFnOptions = {
          firstWeekContainsDate: firstWeekContainsDate,
          weekStartsOn: weekStartsOn,
          locale: locale // If timezone isn't specified, it will be set to the system timezone

        };
        var setters = [{
          priority: TIMEZONE_UNIT_PRIORITY,
          set: dateToSystemTimezone,
          index: 0
        }];
        var i;
        var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {
          var firstCharacter = substring[0];

          if (firstCharacter === 'p' || firstCharacter === 'P') {
            var longFormatter = _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_4__["default"][firstCharacter];
            return longFormatter(substring, locale.formatLong, subFnOptions);
          }

          return substring;
        }).join('').match(formattingTokensRegExp);
        var usedTokens = [];

        for (i = 0; i < tokens.length; i++) {
          var token = tokens[i];

          if (!options.useAdditionalWeekYearTokens && Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__["isProtectedWeekYearToken"])(token)) {
            Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__["throwProtectedError"])(token);
          }

          if (!options.useAdditionalDayOfYearTokens && Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__["isProtectedDayOfYearToken"])(token)) {
            Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__["throwProtectedError"])(token);
          }

          var firstCharacter = token[0];
          var parser = _lib_parsers_index_js__WEBPACK_IMPORTED_MODULE_8__["default"][firstCharacter];

          if (parser) {
            var incompatibleTokens = parser.incompatibleTokens;

            if (Array.isArray(incompatibleTokens)) {
              var incompatibleToken = void 0;

              for (var _i = 0; _i < usedTokens.length; _i++) {
                var usedToken = usedTokens[_i].token;

                if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {
                  incompatibleToken = usedTokens[_i];
                  break;
                }
              }

              if (incompatibleToken) {
                throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken, "` and `").concat(token, "` at the same time"));
              }
            } else if (parser.incompatibleTokens === '*' && usedTokens.length) {
              throw new RangeError("The format string mustn't contain `".concat(token, "` and any other token at the same time"));
            }

            usedTokens.push({
              token: firstCharacter,
              fullToken: token
            });
            var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);

            if (!parseResult) {
              return new Date(NaN);
            }

            setters.push({
              priority: parser.priority,
              set: parser.set,
              validate: parser.validate,
              value: parseResult.value,
              index: setters.length
            });
            dateString = parseResult.rest;
          } else {
            if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
              throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
            } // Replace two single quote characters with one single quote character


            if (token === "''") {
              token = "'";
            } else if (firstCharacter === "'") {
              token = cleanEscapedString(token);
            } // Cut token from string, or, if string doesn't match the token, return Invalid Date


            if (dateString.indexOf(token) === 0) {
              dateString = dateString.slice(token.length);
            } else {
              return new Date(NaN);
            }
          }
        } // Check if the remaining input contains something other than whitespace


        if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
          return new Date(NaN);
        }

        var uniquePrioritySetters = setters.map(function (setter) {
          return setter.priority;
        }).sort(function (a, b) {
          return b - a;
        }).filter(function (priority, index, array) {
          return array.indexOf(priority) === index;
        }).map(function (priority) {
          return setters.filter(function (setter) {
            return setter.priority === priority;
          }).reverse();
        }).map(function (setterArray) {
          return setterArray[0];
        });
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyBackupDate);

        if (isNaN(date)) {
          return new Date(NaN);
        } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
        // This ensures that when UTC functions will be implemented, locales will be compatible with them.
        // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37


        var utcDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(date));
        var flags = {};

        for (i = 0; i < uniquePrioritySetters.length; i++) {
          var setter = uniquePrioritySetters[i];

          if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {
            return new Date(NaN);
          }

          var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)

          if (result[0]) {
            utcDate = result[0];
            Object(_lib_assign_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(flags, result[1]); // Result is date
          } else {
            utcDate = result;
          }
        }

        return utcDate;
      }

      function dateToSystemTimezone(date, flags) {
        if (flags.timestampIsSet) {
          return date;
        }

        var convertedDate = new Date(0);
        convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
        convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());
        return convertedDate;
      }

      function cleanEscapedString(input) {
        return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
      }
      /***/

    },

    /***/
    "M34a":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfDay/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function M34a(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfDay;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name startOfDay
       * @category Day Helpers
       * @summary Return the start of a day for the given date.
       *
       * @description
       * Return the start of a day for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the start of a day
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The start of a day for 2 September 2014 11:55:00:
       * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Tue Sep 02 2014 00:00:00
       */


      function startOfDay(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "MVig":
    /*!*********************************************************!*\
      !*** ./node_modules/date-fns/esm/isThisMinute/index.js ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function MVig(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isThisMinute;
      });
      /* harmony import */


      var _isSameMinute_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isSameMinute/index.js */
      "s+wp");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isThisMinute
       * @category Minute Helpers
       * @summary Is the given date in the same minute as the current date?
       * @pure false
       *
       * @description
       * Is the given date in the same minute as the current date?
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is in this minute
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // If now is 25 September 2014 18:30:15.500,
       * // is 25 September 2014 18:30:00 in this minute?
       * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))
       * //=> true
       */


      function isThisMinute(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_isSameMinute_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
      }
      /***/

    },

    /***/
    "MkVN":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/isThisYear/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function MkVN(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isThisYear;
      });
      /* harmony import */


      var _isSameYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isSameYear/index.js */
      "kJyz");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isThisYear
       * @category Year Helpers
       * @summary Is the given date in the same year as the current date?
       * @pure false
       *
       * @description
       * Is the given date in the same year as the current date?
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is in this year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // If today is 25 September 2014, is 2 July 2014 in this year?
       * var result = isThisYear(new Date(2014, 6, 2))
       * //=> true
       */


      function isThisYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_isSameYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now());
      }
      /***/

    },

    /***/
    "NXEZ":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/getISODay/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function NXEZ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getISODay;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getISODay
       * @category Weekday Helpers
       * @summary Get the day of the ISO week of the given date.
       *
       * @description
       * Get the day of the ISO week of the given date,
       * which is 7 for Sunday, 1 for Monday etc.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the day of ISO week
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which day of the ISO week is 26 February 2012?
       * var result = getISODay(new Date(2012, 1, 26))
       * //=> 7
       */


      function getISODay(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var day = date.getDay();

        if (day === 0) {
          day = 7;
        }

        return day;
      }
      /***/

    },

    /***/
    "NoME":
    /*!*************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInDays/index.js ***!
      \*************************************************************/

    /*! exports provided: default */

    /***/
    function NoME(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInDays;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../differenceInCalendarDays/index.js */
      "gXqy");
      /* harmony import */


      var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../compareAsc/index.js */
      "JhOC");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInDays
       * @category Day Helpers
       * @summary Get the number of full days between the given dates.
       *
       * @description
       * Get the number of full day periods between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of full days
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many full days are between
       * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
       * var result = differenceInDays(
       *   new Date(2012, 6, 2, 0, 0),
       *   new Date(2011, 6, 2, 23, 0)
       * )
       * //=> 365
       * // How many days are between
       * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
       * var result = differenceInDays(
       *   new Date(2011, 6, 3, 0, 1),
       *   new Date(2011, 6, 2, 23, 59)
       * )
       * //=> 0
       */


      function differenceInDays(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        var sign = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight);
        var difference = Math.abs(Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight));
        dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full
        // If so, result must be decreased by 1 in absolute value

        var isLastDayNotFull = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight) === -sign;
        var result = sign * (difference - isLastDayNotFull); // Prevent negative zero

        return result === 0 ? 0 : result;
      }
      /***/

    },

    /***/
    "OJSY":
    /*!***********************************************!*\
      !*** ./node_modules/type-func/dist/bundle.js ***!
      \***********************************************/

    /*! no static exports found */

    /***/
    function OJSY(module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      function getDef(f, d) {
        if (typeof f === 'undefined') {
          return typeof d === 'undefined' ? f : d;
        }

        return f;
      }

      function _boolean(func, def) {
        func = getDef(func, def);

        if (typeof func === 'function') {
          return function f() {
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return !!func.apply(this, args);
          };
        }

        return !!func ? function () {
          return true;
        } : function () {
          return false;
        };
      }

      function integer(func, def) {
        func = getDef(func, def);

        if (typeof func === 'function') {
          return function f() {
            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              args[_key2] = arguments[_key2];
            }

            var n = parseInt(func.apply(this, args), 10);
            return n != n ? 0 : n;
          };
        }

        func = parseInt(func, 10);
        return func != func ? function () {
          return 0;
        } : function () {
          return func;
        };
      }

      function string(func, def) {
        func = getDef(func, def);

        if (typeof func === 'function') {
          return function f() {
            for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
              args[_key3] = arguments[_key3];
            }

            return '' + func.apply(this, args);
          };
        }

        func = '' + func;
        return function () {
          return func;
        };
      }

      exports["boolean"] = _boolean;
      exports.integer = integer;
      exports.string = string; //# sourceMappingURL=bundle.js.map

      /***/
    },

    /***/
    "Orh4":
    /*!*********************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInMilliseconds/index.js ***!
      \*********************************************************************/

    /*! exports provided: default */

    /***/
    function Orh4(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInMilliseconds;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInMilliseconds
       * @category Millisecond Helpers
       * @summary Get the number of milliseconds between the given dates.
       *
       * @description
       * Get the number of milliseconds between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of milliseconds
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many milliseconds are between
       * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?
       * var result = differenceInMilliseconds(
       *   new Date(2014, 6, 2, 12, 30, 21, 700),
       *   new Date(2014, 6, 2, 12, 30, 20, 600)
       * )
       * //=> 1100
       */


      function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        return dateLeft.getTime() - dateRight.getTime();
      }
      /***/

    },

    /***/
    "OuL/":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/getDaysInMonth/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function OuL(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getDaysInMonth;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getDaysInMonth
       * @category Month Helpers
       * @summary Get the number of days in a month of the given date.
       *
       * @description
       * Get the number of days in a month of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the number of days in a month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // How many days are in February 2000?
       * var result = getDaysInMonth(new Date(2000, 1))
       * //=> 29
       */


      function getDaysInMonth(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var year = date.getFullYear();
        var monthIndex = date.getMonth();
        var lastDayOfMonth = new Date(0);
        lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
        lastDayOfMonth.setHours(0, 0, 0, 0);
        return lastDayOfMonth.getDate();
      }
      /***/

    },

    /***/
    "PQko":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/parseJSON/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function PQko(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return parseJSON;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name parseJSON
       * @category Common Helpers
       * @summary Parse a JSON date string
       *
       * @description
       * Converts a complete ISO date string in UTC time, the typical format for transmitting
       * a date in JSON, to a JavaScript `Date` instance.
       *
       * This is a minimal implementation for converting dates retrieved from a JSON API to
       * a `Date` instance which can be used with other functions in the `date-fns` library.
       * The following formats are supported:
       *
       *     - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`
       *     - `2000-03-15T05:20:10Z`: Without milliseconds
       *     - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages
       *     - `2000-03-15T05:20:10+0000`: With a zero offset without a colon
       *     - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol
       *     - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds
       *     - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting
       *
       * For convenience and ease of use these other input types are also supported
       * via [toDate]{@link https://date-fns.org/docs/toDate}:
       *
       *     - A `Date` instance will be cloned
       *     - A `number` will be treated as a timestamp
       *
       * Any other input type or invalid date strings will return an `Invalid Date`.
       *
       * @param {String|Number|Date} argument A fully formed ISO1806 date string to convert
       * @returns {Date} the parsed date in the local time zone
       * @throws {TypeError} 1 argument required
       */


      function parseJSON(argument) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);

        if (typeof argument === 'string') {
          var parts = argument.match(/(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(?:\.(\d{0,7}))?(?:Z|\+00:?00)?/);

          if (parts) {
            return new Date(Date.UTC(+parts[1], parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));
          }

          return new Date(NaN);
        }

        return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(argument);
      }
      /***/

    },

    /***/
    "PTRy":
    /*!***********************************************!*\
      !*** ./node_modules/dom-plane/dist/bundle.js ***!
      \***********************************************/

    /*! no static exports found */

    /***/
    function PTRy(module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      function _interopDefault(ex) {
        return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
      }

      var createPointCb = _interopDefault(__webpack_require__(
      /*! create-point-cb */
      "6yRa"));

      function createWindowRect() {
        var props = {
          top: {
            value: 0,
            enumerable: true
          },
          left: {
            value: 0,
            enumerable: true
          },
          right: {
            value: window.innerWidth,
            enumerable: true
          },
          bottom: {
            value: window.innerHeight,
            enumerable: true
          },
          width: {
            value: window.innerWidth,
            enumerable: true
          },
          height: {
            value: window.innerHeight,
            enumerable: true
          },
          x: {
            value: 0,
            enumerable: true
          },
          y: {
            value: 0,
            enumerable: true
          }
        };

        if (Object.create) {
          return Object.create({}, props);
        } else {
          var rect = {};
          Object.defineProperties(rect, props);
          return rect;
        }
      }

      function getClientRect(el) {
        if (el === window) {
          return createWindowRect();
        } else {
          try {
            var rect = el.getBoundingClientRect();

            if (rect.x === undefined) {
              rect.x = rect.left;
              rect.y = rect.top;
            }

            return rect;
          } catch (e) {
            throw new TypeError("Can't call getBoundingClientRect on " + el);
          }
        }
      }

      function pointInside(point, el) {
        var rect = getClientRect(el);
        return point.y > rect.top && point.y < rect.bottom && point.x > rect.left && point.x < rect.right;
      }

      exports.createPointCB = createPointCb;
      exports.getClientRect = getClientRect;
      exports.pointInside = pointInside; //# sourceMappingURL=bundle.js.map

      /***/
    },

    /***/
    "PWs8":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfSecond/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function PWs8(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfSecond;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name endOfSecond
       * @category Second Helpers
       * @summary Return the end of a second for the given date.
       *
       * @description
       * Return the end of a second for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the end of a second
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The end of a second for 1 December 2014 22:15:45.400:
       * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))
       * //=> Mon Dec 01 2014 22:15:45.999
       */


      function endOfSecond(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        date.setMilliseconds(999);
        return date;
      }
      /***/

    },

    /***/
    "PdOA":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/isTuesday/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function PdOA(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isTuesday;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isTuesday
       * @category Weekday Helpers
       * @summary Is the given date Tuesday?
       *
       * @description
       * Is the given date Tuesday?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is Tuesday
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Is 23 September 2014 Tuesday?
       * var result = isTuesday(new Date(2014, 8, 23))
       * //=> true
       */


      function isTuesday(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 2;
      }
      /***/

    },

    /***/
    "Q0vS":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/setISOWeek/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function Q0vS(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setISOWeek;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _getISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../getISOWeek/index.js */
      "sBI4");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setISOWeek
       * @category ISO Week Helpers
       * @summary Set the ISO week to the given date.
       *
       * @description
       * Set the ISO week to the given date, saving the weekday number.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} isoWeek - the ISO week of the new date
       * @returns {Date} the new date with the ISO week set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set the 53rd ISO week to 7 August 2004:
       * var result = setISOWeek(new Date(2004, 7, 7), 53)
       * //=> Sat Jan 01 2005 00:00:00
       */


      function setISOWeek(dirtyDate, dirtyISOWeek) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var isoWeek = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyISOWeek);
        var diff = Object(_getISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date) - isoWeek;
        date.setDate(date.getDate() - diff * 7);
        return date;
      }
      /***/

    },

    /***/
    "Q2p9":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/formatRelative/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function Q2p9(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return formatRelative;
      });
      /* harmony import */


      var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../differenceInCalendarDays/index.js */
      "gXqy");
      /* harmony import */


      var _format_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../format/index.js */
      "sWYD");
      /* harmony import */


      var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../locale/en-US/index.js */
      "iSMj");
      /* harmony import */


      var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../subMilliseconds/index.js */
      "g9KO");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
      "JCDJ");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name formatRelative
       * @category Common Helpers
       * @summary Represent the date in words relative to the given base date.
       *
       * @description
       * Represent the date in words relative to the given base date.
       *
       * | Distance to the base date | Result                    |
       * |---------------------------|---------------------------|
       * | Previous 6 days           | last Sunday at 04:30 AM   |
       * | Last day                  | yesterday at 04:30 AM     |
       * | Same day                  | today at 04:30 AM         |
       * | Next day                  | tomorrow at 04:30 AM      |
       * | Next 6 days               | Sunday at 04:30 AM        |
       * | Other                     | 12/31/2017                |
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to format
       * @param {Date|Number} baseDate - the date to compare with
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @returns {String} the date in words
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `date` must not be Invalid Date
       * @throws {RangeError} `baseDate` must not be Invalid Date
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       * @throws {RangeError} `options.locale` must contain `localize` property
       * @throws {RangeError} `options.locale` must contain `formatLong` property
       * @throws {RangeError} `options.locale` must contain `formatRelative` property
       */


      function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyDate);
        var baseDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyBaseDate);
        var options = dirtyOptions || {};
        var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_2__["default"];

        if (!locale.localize) {
          throw new RangeError('locale must contain localize property');
        }

        if (!locale.formatLong) {
          throw new RangeError('locale must contain formatLong property');
        }

        if (!locale.formatRelative) {
          throw new RangeError('locale must contain formatRelative property');
        }

        var diff = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, baseDate);

        if (isNaN(diff)) {
          throw new RangeError('Invalid time value');
        }

        var token;

        if (diff < -6) {
          token = 'other';
        } else if (diff < -1) {
          token = 'lastWeek';
        } else if (diff < 0) {
          token = 'yesterday';
        } else if (diff < 1) {
          token = 'today';
        } else if (diff < 2) {
          token = 'tomorrow';
        } else if (diff < 7) {
          token = 'nextWeek';
        } else {
          token = 'other';
        }

        var utcDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date, Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(date));
        var utcBaseDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(baseDate, Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(baseDate));
        var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, options);
        return Object(_format_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, formatStr, options);
      }
      /***/

    },

    /***/
    "QBGs":
    /*!******************************************************************************************!*\
      !*** ./node_modules/angular-draggable-droppable/fesm2015/angular-draggable-droppable.js ***!
      \******************************************************************************************/

    /*! exports provided: DragAndDropModule, ɵc, ɵd, ɵb, ɵa */

    /***/
    function QBGs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DragAndDropModule", function () {
        return DragAndDropModule;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵc", function () {
        return DraggableHelper;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵd", function () {
        return DraggableScrollContainerDirective;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵb", function () {
        return DraggableDirective;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵa", function () {
        return DroppableDirective;
      });
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common */
      "SVse");
      /* harmony import */


      var dom_autoscroller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! dom-autoscroller */
      "rJ3z");
      /* harmony import */


      var dom_autoscroller__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dom_autoscroller__WEBPACK_IMPORTED_MODULE_2__);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */


      var DraggableHelper = function DraggableHelper() {
        _classCallCheck(this, DraggableHelper);

        this.currentDrag = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
      };

      DraggableHelper.decorators = [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"],
        args: [{
          providedIn: 'root'
        }]
      }];
      /** @nocollapse */

      DraggableHelper.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["defineInjectable"])({
        factory: function DraggableHelper_Factory() {
          return new DraggableHelper();
        },
        token: DraggableHelper,
        providedIn: "root"
      });
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * If the window isn't scrollable, then place this on the scrollable container that draggable elements are inside. e.g.
       * ```html
       * <div style="overflow: scroll" mwlDraggableScrollContainer>
       * <div mwlDraggable>Drag me!</div>
       * </div>
       * ```
       */

      var DraggableScrollContainerDirective = /*#__PURE__*/function () {
        /**
         * @hidden
         * @param {?} elementRef
         * @param {?} renderer
         * @param {?} zone
         */
        function DraggableScrollContainerDirective(elementRef, renderer, zone) {
          _classCallCheck(this, DraggableScrollContainerDirective);

          this.elementRef = elementRef;
          this.renderer = renderer;
          this.zone = zone;
          /**
           * Trigger the DragStart after a long touch in scrollable container when true
           */

          this.activeLongPressDrag = false;
          /**
           * Configuration of a long touch
           * Duration in ms of a long touch before activating DragStart
           * Delta of the
           */

          this.longPressConfig = {
            duration: 300,
            delta: 30
          };
          this.cancelledScroll = false;
        }
        /**
         * @return {?}
         */


        _createClass(DraggableScrollContainerDirective, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this4 = this;

            this.zone.runOutsideAngular(
            /**
            * @return {?}
            */
            function () {
              _this4.renderer.listen(_this4.elementRef.nativeElement, 'touchmove',
              /**
              * @param {?} event
              * @return {?}
              */
              function (event) {
                if (_this4.cancelledScroll && event.cancelable) {
                  event.preventDefault();
                }
              });
            });
          }
          /**
           * @hidden
           * @return {?}
           */

        }, {
          key: "disableScroll",
          value: function disableScroll() {
            this.cancelledScroll = true;
            this.renderer.setStyle(this.elementRef.nativeElement, 'overflow', 'hidden');
          }
          /**
           * @hidden
           * @return {?}
           */

        }, {
          key: "enableScroll",
          value: function enableScroll() {
            this.cancelledScroll = false;
            this.renderer.setStyle(this.elementRef.nativeElement, 'overflow', 'auto');
          }
          /**
           * @hidden
           * @return {?}
           */

        }, {
          key: "hasScrollbar",
          value: function hasScrollbar() {
            /** @type {?} */
            var containerHasHorizontalScroll = this.elementRef.nativeElement.scrollWidth - this.elementRef.nativeElement.clientWidth > 0;
            /** @type {?} */

            var containerHasVerticalScroll = this.elementRef.nativeElement.scrollHeight - this.elementRef.nativeElement.clientHeight > 0;
            return containerHasHorizontalScroll || containerHasVerticalScroll;
          }
        }]);

        return DraggableScrollContainerDirective;
      }();

      DraggableScrollContainerDirective.decorators = [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
        args: [{
          selector: '[mwlDraggableScrollContainer]'
        }]
      }];
      /** @nocollapse */

      DraggableScrollContainerDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
        }];
      };

      DraggableScrollContainerDirective.propDecorators = {
        activeLongPressDrag: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        longPressConfig: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }]
      };
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      var DraggableDirective = /*#__PURE__*/function () {
        /**
         * @hidden
         * @param {?} element
         * @param {?} renderer
         * @param {?} draggableHelper
         * @param {?} zone
         * @param {?} vcr
         * @param {?} scrollContainer
         * @param {?} document
         */
        function DraggableDirective(element, renderer, draggableHelper, zone, vcr, scrollContainer, document) {
          _classCallCheck(this, DraggableDirective);

          this.element = element;
          this.renderer = renderer;
          this.draggableHelper = draggableHelper;
          this.zone = zone;
          this.vcr = vcr;
          this.scrollContainer = scrollContainer;
          this.document = document;
          /**
           * The axis along which the element is draggable
           */

          this.dragAxis = {
            x: true,
            y: true
          };
          /**
           * Snap all drags to an x / y grid
           */

          this.dragSnapGrid = {};
          /**
           * Show a ghost element that shows the drag when dragging
           */

          this.ghostDragEnabled = true;
          /**
           * Show the original element when ghostDragEnabled is true
           */

          this.showOriginalElementWhileDragging = false;
          /**
           * The cursor to use when hovering over a draggable element
           */

          this.dragCursor = '';
          /**
           * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it
           */

          this.dragPointerDown = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
          /**
           * Called when the element has started to be dragged.
           * Only called after at least one mouse or touch move event.
           * If you call $event.cancelDrag$.emit() it will cancel the current drag
           */

          this.dragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
          /**
           * Called after the ghost element has been created
           */

          this.ghostElementCreated = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
          /**
           * Called when the element is being dragged
           */

          this.dragging = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
          /**
           * Called after the element is dragged
           */

          this.dragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
          /**
           * @hidden
           */

          this.pointerDown$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
          /**
           * @hidden
           */

          this.pointerMove$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
          /**
           * @hidden
           */

          this.pointerUp$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
          this.eventListenerSubscriptions = {};
          this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
          this.timeLongPress = {
            timerBegin: 0,
            timerEnd: 0
          };
        }
        /**
         * @return {?}
         */


        _createClass(DraggableDirective, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this5 = this;

            this.checkEventListeners();
            /** @type {?} */

            var pointerDragged$ = this.pointerDown$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(
            /**
            * @return {?}
            */
            function () {
              return _this5.canDrag();
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["mergeMap"])(
            /**
            * @param {?} pointerDownEvent
            * @return {?}
            */
            function (pointerDownEvent) {
              // fix for https://github.com/mattlewis92/angular-draggable-droppable/issues/61
              // stop mouse events propagating up the chain
              if (pointerDownEvent.event.stopPropagation && !_this5.scrollContainer) {
                pointerDownEvent.event.stopPropagation();
              }
              /** @type {?} */


              var startScrollPosition = _this5.getScrollPosition();
              /** @type {?} */


              var scrollContainerScroll$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Observable"](
              /**
              * @param {?} observer
              * @return {?}
              */
              function (observer) {
                /** @type {?} */
                var scrollContainer = _this5.scrollContainer ? _this5.scrollContainer.elementRef.nativeElement : 'window';
                return _this5.renderer.listen(scrollContainer, 'scroll',
                /**
                * @param {?} e
                * @return {?}
                */
                function (e) {
                  return observer.next(e);
                });
              }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["startWith"])(startScrollPosition), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
              /**
              * @return {?}
              */
              function () {
                return _this5.getScrollPosition();
              }));
              /** @type {?} */

              var currentDrag$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
              /** @type {?} */

              var cancelDrag$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["ReplaySubject"]();

              _this5.zone.run(
              /**
              * @return {?}
              */
              function () {
                _this5.dragPointerDown.next({
                  x: 0,
                  y: 0
                });
              });
              /** @type {?} */


              var dragComplete$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["merge"])(_this5.pointerUp$, _this5.pointerDown$, cancelDrag$, _this5.destroy$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["share"])());
              /** @type {?} */

              var pointerMove = Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["combineLatest"])([_this5.pointerMove$, scrollContainerScroll$]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
              /**
              * @param {?} __0
              * @return {?}
              */
              function (_ref2) {
                var _ref3 = _slicedToArray(_ref2, 2),
                    pointerMoveEvent = _ref3[0],
                    scroll = _ref3[1];

                return {
                  currentDrag$: currentDrag$,
                  transformX: pointerMoveEvent.clientX - pointerDownEvent.clientX,
                  transformY: pointerMoveEvent.clientY - pointerDownEvent.clientY,
                  clientX: pointerMoveEvent.clientX,
                  clientY: pointerMoveEvent.clientY,
                  scrollLeft: scroll.left,
                  scrollTop: scroll.top
                };
              }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
              /**
              * @param {?} moveData
              * @return {?}
              */
              function (moveData) {
                if (_this5.dragSnapGrid.x) {
                  moveData.transformX = Math.round(moveData.transformX / _this5.dragSnapGrid.x) * _this5.dragSnapGrid.x;
                }

                if (_this5.dragSnapGrid.y) {
                  moveData.transformY = Math.round(moveData.transformY / _this5.dragSnapGrid.y) * _this5.dragSnapGrid.y;
                }

                return moveData;
              }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
              /**
              * @param {?} moveData
              * @return {?}
              */
              function (moveData) {
                if (!_this5.dragAxis.x) {
                  moveData.transformX = 0;
                }

                if (!_this5.dragAxis.y) {
                  moveData.transformY = 0;
                }

                return moveData;
              }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
              /**
              * @param {?} moveData
              * @return {?}
              */
              function (moveData) {
                /** @type {?} */
                var scrollX = moveData.scrollLeft - startScrollPosition.left;
                /** @type {?} */

                var scrollY = moveData.scrollTop - startScrollPosition.top;
                return Object.assign({}, moveData, {
                  x: moveData.transformX + scrollX,
                  y: moveData.transformY + scrollY
                });
              }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(
              /**
              * @param {?} __0
              * @return {?}
              */
              function (_ref4) {
                var x = _ref4.x,
                    y = _ref4.y,
                    transformX = _ref4.transformX,
                    transformY = _ref4.transformY;
                return !_this5.validateDrag || _this5.validateDrag({
                  x: x,
                  y: y,
                  transform: {
                    x: transformX,
                    y: transformY
                  }
                });
              }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(dragComplete$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["share"])());
              /** @type {?} */

              var dragStarted$ = pointerMove.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["share"])());
              /** @type {?} */

              var dragEnded$ = pointerMove.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeLast"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["share"])());
              dragStarted$.subscribe(
              /**
              * @param {?} __0
              * @return {?}
              */
              function (_ref5) {
                var clientX = _ref5.clientX,
                    clientY = _ref5.clientY,
                    x = _ref5.x,
                    y = _ref5.y;

                _this5.zone.run(
                /**
                * @return {?}
                */
                function () {
                  _this5.dragStart.next({
                    cancelDrag$: cancelDrag$
                  });
                });

                _this5.scroller = dom_autoscroller__WEBPACK_IMPORTED_MODULE_2___default()([_this5.scrollContainer ? _this5.scrollContainer.elementRef.nativeElement : _this5.document.defaultView], {
                  margin: 20,

                  /**
                   * @return {?}
                   */
                  autoScroll: function autoScroll() {
                    return true;
                  }
                });

                _this5.renderer.addClass(_this5.element.nativeElement, _this5.dragActiveClass);

                if (_this5.ghostDragEnabled) {
                  /** @type {?} */
                  var rect = _this5.element.nativeElement.getBoundingClientRect();
                  /** @type {?} */


                  var clone =
                  /** @type {?} */
                  _this5.element.nativeElement.cloneNode(true);

                  if (!_this5.showOriginalElementWhileDragging) {
                    _this5.renderer.setStyle(_this5.element.nativeElement, 'visibility', 'hidden');
                  }

                  if (_this5.ghostElementAppendTo) {
                    _this5.ghostElementAppendTo.appendChild(clone);
                  } else {
                    /** @type {?} */
                    _this5.element.nativeElement.parentNode.insertBefore(clone, _this5.element.nativeElement.nextSibling);
                  }

                  _this5.ghostElement = clone;
                  document.body.style.cursor = _this5.dragCursor;

                  _this5.setElementStyles(clone, {
                    position: 'fixed',
                    top: "".concat(rect.top, "px"),
                    left: "".concat(rect.left, "px"),
                    width: "".concat(rect.width, "px"),
                    height: "".concat(rect.height, "px"),
                    cursor: _this5.dragCursor,
                    margin: '0',
                    willChange: 'transform',
                    pointerEvents: 'none'
                  });

                  if (_this5.ghostElementTemplate) {
                    /** @type {?} */
                    var viewRef = _this5.vcr.createEmbeddedView(_this5.ghostElementTemplate);

                    clone.innerHTML = '';
                    viewRef.rootNodes.filter(
                    /**
                    * @param {?} node
                    * @return {?}
                    */
                    function (node) {
                      return node instanceof Node;
                    }).forEach(
                    /**
                    * @param {?} node
                    * @return {?}
                    */
                    function (node) {
                      clone.appendChild(node);
                    });
                    dragEnded$.subscribe(
                    /**
                    * @return {?}
                    */
                    function () {
                      _this5.vcr.remove(_this5.vcr.indexOf(viewRef));
                    });
                  }

                  _this5.zone.run(
                  /**
                  * @return {?}
                  */
                  function () {
                    _this5.ghostElementCreated.emit({
                      clientX: clientX - x,
                      clientY: clientY - y,
                      element: clone
                    });
                  });

                  dragEnded$.subscribe(
                  /**
                  * @return {?}
                  */
                  function () {
                    /** @type {?} */
                    clone.parentElement.removeChild(clone);
                    _this5.ghostElement = null;

                    _this5.renderer.setStyle(_this5.element.nativeElement, 'visibility', '');
                  });
                }

                _this5.draggableHelper.currentDrag.next(currentDrag$);
              });
              dragEnded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["mergeMap"])(
              /**
              * @param {?} dragEndData
              * @return {?}
              */
              function (dragEndData) {
                /** @type {?} */
                var dragEndData$ = cancelDrag$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["count"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
                /**
                * @param {?} calledCount
                * @return {?}
                */
                function (calledCount) {
                  return Object.assign({}, dragEndData, {
                    dragCancelled: calledCount > 0
                  });
                }));
                cancelDrag$.complete();
                return dragEndData$;
              })).subscribe(
              /**
              * @param {?} __0
              * @return {?}
              */
              function (_ref6) {
                var x = _ref6.x,
                    y = _ref6.y,
                    dragCancelled = _ref6.dragCancelled;

                _this5.scroller.destroy();

                _this5.zone.run(
                /**
                * @return {?}
                */
                function () {
                  _this5.dragEnd.next({
                    x: x,
                    y: y,
                    dragCancelled: dragCancelled
                  });
                });

                _this5.renderer.removeClass(_this5.element.nativeElement, _this5.dragActiveClass);

                currentDrag$.complete();
              });
              /** @type {?} */

              var selectionStart$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Observable"](
              /**
              * @param {?} observer
              * @return {?}
              */
              function (observer) {
                return _this5.renderer.listen('document', 'selectstart',
                /**
                * @param {?} e
                * @return {?}
                */
                function (e) {
                  return observer.next(e);
                });
              }); // hack to prevent text getting selected in safari while dragging

              selectionStart$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["merge"])(dragComplete$, dragEnded$))).subscribe(
              /**
              * @param {?} event
              * @return {?}
              */
              function (event) {
                event.preventDefault();
              });
              return pointerMove;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["share"])());
            Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["merge"])(pointerDragged$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
            /**
            * @param {?} value
            * @return {?}
            */
            function (value) {
              return [, value];
            })), pointerDragged$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["pairwise"])())).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(
            /**
            * @param {?} __0
            * @return {?}
            */
            function (_ref7) {
              var _ref8 = _slicedToArray(_ref7, 2),
                  previous = _ref8[0],
                  next = _ref8[1];

              if (!previous) {
                return true;
              }

              return previous.x !== next.x || previous.y !== next.y;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
            /**
            * @param {?} __0
            * @return {?}
            */
            function (_ref9) {
              var _ref10 = _slicedToArray(_ref9, 2),
                  previous = _ref10[0],
                  next = _ref10[1];

              return next;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["auditTime"])(0, rxjs__WEBPACK_IMPORTED_MODULE_0__["animationFrameScheduler"])).subscribe(
            /**
            * @param {?} __0
            * @return {?}
            */
            function (_ref11) {
              var x = _ref11.x,
                  y = _ref11.y,
                  currentDrag$ = _ref11.currentDrag$,
                  clientX = _ref11.clientX,
                  clientY = _ref11.clientY,
                  transformX = _ref11.transformX,
                  transformY = _ref11.transformY;

              _this5.zone.run(
              /**
              * @return {?}
              */
              function () {
                _this5.dragging.next({
                  x: x,
                  y: y
                });
              });

              if (_this5.ghostElement) {
                /** @type {?} */
                var transform = "translate3d(".concat(transformX, "px, ").concat(transformY, "px, 0px)");

                _this5.setElementStyles(_this5.ghostElement, {
                  transform: transform,
                  '-webkit-transform': transform,
                  '-ms-transform': transform,
                  '-moz-transform': transform,
                  '-o-transform': transform
                });
              }

              currentDrag$.next({
                clientX: clientX,
                clientY: clientY,
                dropData: _this5.dropData
              });
            });
          }
          /**
           * @param {?} changes
           * @return {?}
           */

        }, {
          key: "ngOnChanges",
          value: function ngOnChanges(changes) {
            if (changes.dragAxis) {
              this.checkEventListeners();
            }
          }
          /**
           * @return {?}
           */

        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.unsubscribeEventListeners();
            this.pointerDown$.complete();
            this.pointerMove$.complete();
            this.pointerUp$.complete();
            this.destroy$.next();
          }
          /**
           * @private
           * @return {?}
           */

        }, {
          key: "checkEventListeners",
          value: function checkEventListeners() {
            var _this6 = this;

            /** @type {?} */
            var canDrag = this.canDrag();
            /** @type {?} */

            var hasEventListeners = Object.keys(this.eventListenerSubscriptions).length > 0;

            if (canDrag && !hasEventListeners) {
              this.zone.runOutsideAngular(
              /**
              * @return {?}
              */
              function () {
                _this6.eventListenerSubscriptions.mousedown = _this6.renderer.listen(_this6.element.nativeElement, 'mousedown',
                /**
                * @param {?} event
                * @return {?}
                */
                function (event) {
                  _this6.onMouseDown(event);
                });
                _this6.eventListenerSubscriptions.mouseup = _this6.renderer.listen('document', 'mouseup',
                /**
                * @param {?} event
                * @return {?}
                */
                function (event) {
                  _this6.onMouseUp(event);
                });
                _this6.eventListenerSubscriptions.touchstart = _this6.renderer.listen(_this6.element.nativeElement, 'touchstart',
                /**
                * @param {?} event
                * @return {?}
                */
                function (event) {
                  _this6.onTouchStart(event);
                });
                _this6.eventListenerSubscriptions.touchend = _this6.renderer.listen('document', 'touchend',
                /**
                * @param {?} event
                * @return {?}
                */
                function (event) {
                  _this6.onTouchEnd(event);
                });
                _this6.eventListenerSubscriptions.touchcancel = _this6.renderer.listen('document', 'touchcancel',
                /**
                * @param {?} event
                * @return {?}
                */
                function (event) {
                  _this6.onTouchEnd(event);
                });
                _this6.eventListenerSubscriptions.mouseenter = _this6.renderer.listen(_this6.element.nativeElement, 'mouseenter',
                /**
                * @return {?}
                */
                function () {
                  _this6.onMouseEnter();
                });
                _this6.eventListenerSubscriptions.mouseleave = _this6.renderer.listen(_this6.element.nativeElement, 'mouseleave',
                /**
                * @return {?}
                */
                function () {
                  _this6.onMouseLeave();
                });
              });
            } else if (!canDrag && hasEventListeners) {
              this.unsubscribeEventListeners();
            }
          }
          /**
           * @private
           * @param {?} event
           * @return {?}
           */

        }, {
          key: "onMouseDown",
          value: function onMouseDown(event) {
            var _this7 = this;

            if (!this.eventListenerSubscriptions.mousemove) {
              this.eventListenerSubscriptions.mousemove = this.renderer.listen('document', 'mousemove',
              /**
              * @param {?} mouseMoveEvent
              * @return {?}
              */
              function (mouseMoveEvent) {
                _this7.pointerMove$.next({
                  event: mouseMoveEvent,
                  clientX: mouseMoveEvent.clientX,
                  clientY: mouseMoveEvent.clientY
                });
              });
            }

            this.pointerDown$.next({
              event: event,
              clientX: event.clientX,
              clientY: event.clientY
            });
          }
          /**
           * @private
           * @param {?} event
           * @return {?}
           */

        }, {
          key: "onMouseUp",
          value: function onMouseUp(event) {
            if (this.eventListenerSubscriptions.mousemove) {
              this.eventListenerSubscriptions.mousemove();
              delete this.eventListenerSubscriptions.mousemove;
            }

            this.pointerUp$.next({
              event: event,
              clientX: event.clientX,
              clientY: event.clientY
            });
          }
          /**
           * @private
           * @param {?} event
           * @return {?}
           */

        }, {
          key: "onTouchStart",
          value: function onTouchStart(event) {
            var _this8 = this;

            if (!this.scrollContainer) {
              try {
                event.preventDefault();
              } catch (e) {}
            }
            /** @type {?} */


            var hasContainerScrollbar;
            /** @type {?} */

            var startScrollPosition;
            /** @type {?} */

            var isDragActivated;

            if (this.scrollContainer && this.scrollContainer.activeLongPressDrag) {
              this.timeLongPress.timerBegin = Date.now();
              isDragActivated = false;
              hasContainerScrollbar = this.scrollContainer.hasScrollbar();
              startScrollPosition = this.getScrollPosition();
            }

            if (!this.eventListenerSubscriptions.touchmove) {
              this.eventListenerSubscriptions.touchmove = this.renderer.listen('document', 'touchmove',
              /**
              * @param {?} touchMoveEvent
              * @return {?}
              */
              function (touchMoveEvent) {
                if (_this8.scrollContainer && _this8.scrollContainer.activeLongPressDrag && !isDragActivated && hasContainerScrollbar) {
                  isDragActivated = _this8.shouldBeginDrag(event, touchMoveEvent, startScrollPosition);
                }

                if (!_this8.scrollContainer || !_this8.scrollContainer.activeLongPressDrag || !hasContainerScrollbar || isDragActivated) {
                  _this8.pointerMove$.next({
                    event: touchMoveEvent,
                    clientX: touchMoveEvent.targetTouches[0].clientX,
                    clientY: touchMoveEvent.targetTouches[0].clientY
                  });
                }
              });
            }

            this.pointerDown$.next({
              event: event,
              clientX: event.touches[0].clientX,
              clientY: event.touches[0].clientY
            });
          }
          /**
           * @private
           * @param {?} event
           * @return {?}
           */

        }, {
          key: "onTouchEnd",
          value: function onTouchEnd(event) {
            if (this.eventListenerSubscriptions.touchmove) {
              this.eventListenerSubscriptions.touchmove();
              delete this.eventListenerSubscriptions.touchmove;

              if (this.scrollContainer && this.scrollContainer.activeLongPressDrag) {
                this.scrollContainer.enableScroll();
              }
            }

            this.pointerUp$.next({
              event: event,
              clientX: event.changedTouches[0].clientX,
              clientY: event.changedTouches[0].clientY
            });
          }
          /**
           * @private
           * @return {?}
           */

        }, {
          key: "onMouseEnter",
          value: function onMouseEnter() {
            this.setCursor(this.dragCursor);
          }
          /**
           * @private
           * @return {?}
           */

        }, {
          key: "onMouseLeave",
          value: function onMouseLeave() {
            this.setCursor('');
          }
          /**
           * @private
           * @return {?}
           */

        }, {
          key: "canDrag",
          value: function canDrag() {
            return this.dragAxis.x || this.dragAxis.y;
          }
          /**
           * @private
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "setCursor",
          value: function setCursor(value) {
            if (!this.eventListenerSubscriptions.mousemove) {
              this.renderer.setStyle(this.element.nativeElement, 'cursor', value);
            }
          }
          /**
           * @private
           * @return {?}
           */

        }, {
          key: "unsubscribeEventListeners",
          value: function unsubscribeEventListeners() {
            var _this9 = this;

            Object.keys(this.eventListenerSubscriptions).forEach(
            /**
            * @param {?} type
            * @return {?}
            */
            function (type) {
              /** @type {?} */
              _this9.eventListenerSubscriptions[type]();

              delete
              /** @type {?} */
              _this9.eventListenerSubscriptions[type];
            });
          }
          /**
           * @private
           * @param {?} element
           * @param {?} styles
           * @return {?}
           */

        }, {
          key: "setElementStyles",
          value: function setElementStyles(element, styles) {
            var _this10 = this;

            Object.keys(styles).forEach(
            /**
            * @param {?} key
            * @return {?}
            */
            function (key) {
              _this10.renderer.setStyle(element, key, styles[key]);
            });
          }
          /**
           * @private
           * @return {?}
           */

        }, {
          key: "getScrollPosition",
          value: function getScrollPosition() {
            if (this.scrollContainer) {
              return {
                top: this.scrollContainer.elementRef.nativeElement.scrollTop,
                left: this.scrollContainer.elementRef.nativeElement.scrollLeft
              };
            } else {
              return {
                top: window.pageYOffset || document.documentElement.scrollTop,
                left: window.pageXOffset || document.documentElement.scrollLeft
              };
            }
          }
          /**
           * @private
           * @param {?} event
           * @param {?} touchMoveEvent
           * @param {?} startScrollPosition
           * @return {?}
           */

        }, {
          key: "shouldBeginDrag",
          value: function shouldBeginDrag(event, touchMoveEvent, startScrollPosition) {
            /** @type {?} */
            var moveScrollPosition = this.getScrollPosition();
            /** @type {?} */

            var deltaScroll = {
              top: Math.abs(moveScrollPosition.top - startScrollPosition.top),
              left: Math.abs(moveScrollPosition.left - startScrollPosition.left)
            };
            /** @type {?} */

            var deltaX = Math.abs(touchMoveEvent.targetTouches[0].clientX - event.touches[0].clientX) - deltaScroll.left;
            /** @type {?} */

            var deltaY = Math.abs(touchMoveEvent.targetTouches[0].clientY - event.touches[0].clientY) - deltaScroll.top;
            /** @type {?} */

            var deltaTotal = deltaX + deltaY;

            if (deltaTotal > this.scrollContainer.longPressConfig.delta || deltaScroll.top > 0 || deltaScroll.left > 0) {
              this.timeLongPress.timerBegin = Date.now();
            }

            this.timeLongPress.timerEnd = Date.now();
            /** @type {?} */

            var duration = this.timeLongPress.timerEnd - this.timeLongPress.timerBegin;

            if (duration >= this.scrollContainer.longPressConfig.duration) {
              this.scrollContainer.disableScroll();
              return true;
            }

            return false;
          }
        }]);

        return DraggableDirective;
      }();

      DraggableDirective.decorators = [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
        args: [{
          selector: '[mwlDraggable]'
        }]
      }];
      /** @nocollapse */

      DraggableDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
        }, {
          type: DraggableHelper
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewContainerRef"]
        }, {
          type: DraggableScrollContainerDirective,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"]
          }]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Inject"],
            args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]]
          }]
        }];
      };

      DraggableDirective.propDecorators = {
        dropData: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        dragAxis: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        dragSnapGrid: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        ghostDragEnabled: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        showOriginalElementWhileDragging: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        validateDrag: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        dragCursor: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        dragActiveClass: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        ghostElementAppendTo: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        ghostElementTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        dragPointerDown: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        dragStart: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        ghostElementCreated: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        dragging: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        dragEnd: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }]
      };
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @param {?} clientX
       * @param {?} clientY
       * @param {?} rect
       * @return {?}
       */

      function isCoordinateWithinRectangle(clientX, clientY, rect) {
        return clientX >= rect.left && clientX <= rect.right && clientY >= rect.top && clientY <= rect.bottom;
      }

      var DroppableDirective = /*#__PURE__*/function () {
        /**
         * @param {?} element
         * @param {?} draggableHelper
         * @param {?} zone
         * @param {?} renderer
         * @param {?} scrollContainer
         */
        function DroppableDirective(element, draggableHelper, zone, renderer, scrollContainer) {
          _classCallCheck(this, DroppableDirective);

          this.element = element;
          this.draggableHelper = draggableHelper;
          this.zone = zone;
          this.renderer = renderer;
          this.scrollContainer = scrollContainer;
          /**
           * Called when a draggable element starts overlapping the element
           */

          this.dragEnter = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
          /**
           * Called when a draggable element stops overlapping the element
           */

          this.dragLeave = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
          /**
           * Called when a draggable element is moved over the element
           */

          this.dragOver = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
          /**
           * Called when a draggable element is dropped on this element
           */

          this.drop = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"](); // tslint:disable-line no-output-named-after-standard-event
        }
        /**
         * @return {?}
         */


        _createClass(DroppableDirective, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this11 = this;

            this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(
            /**
            * @param {?} drag$
            * @return {?}
            */
            function (drag$) {
              _this11.renderer.addClass(_this11.element.nativeElement, _this11.dragActiveClass);
              /** @type {?} */


              var droppableElement = {
                updateCache: true
              };
              /** @type {?} */

              var deregisterScrollListener = _this11.renderer.listen(_this11.scrollContainer ? _this11.scrollContainer.elementRef.nativeElement : 'window', 'scroll',
              /**
              * @return {?}
              */
              function () {
                droppableElement.updateCache = true;
              });
              /** @type {?} */


              var currentDragDropData;
              /** @type {?} */

              var overlaps$ = drag$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
              /**
              * @param {?} __0
              * @return {?}
              */
              function (_ref12) {
                var clientX = _ref12.clientX,
                    clientY = _ref12.clientY,
                    dropData = _ref12.dropData;
                currentDragDropData = dropData;

                if (droppableElement.updateCache) {
                  droppableElement.rect = _this11.element.nativeElement.getBoundingClientRect();

                  if (_this11.scrollContainer) {
                    droppableElement.scrollContainerRect = _this11.scrollContainer.elementRef.nativeElement.getBoundingClientRect();
                  }

                  droppableElement.updateCache = false;
                }
                /** @type {?} */


                var isWithinElement = isCoordinateWithinRectangle(clientX, clientY,
                /** @type {?} */
                droppableElement.rect);

                if (droppableElement.scrollContainerRect) {
                  return isWithinElement && isCoordinateWithinRectangle(clientX, clientY,
                  /** @type {?} */
                  droppableElement.scrollContainerRect);
                } else {
                  return isWithinElement;
                }
              }));
              /** @type {?} */

              var overlapsChanged$ = overlaps$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["distinctUntilChanged"])());
              /** @type {?} */

              var dragOverActive;
              overlapsChanged$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(
              /**
              * @param {?} overlapsNow
              * @return {?}
              */
              function (overlapsNow) {
                return overlapsNow;
              })).subscribe(
              /**
              * @return {?}
              */
              function () {
                dragOverActive = true;

                _this11.renderer.addClass(_this11.element.nativeElement, _this11.dragOverClass);

                _this11.zone.run(
                /**
                * @return {?}
                */
                function () {
                  _this11.dragEnter.next({
                    dropData: currentDragDropData
                  });
                });
              });
              overlaps$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(
              /**
              * @param {?} overlapsNow
              * @return {?}
              */
              function (overlapsNow) {
                return overlapsNow;
              })).subscribe(
              /**
              * @return {?}
              */
              function () {
                _this11.zone.run(
                /**
                * @return {?}
                */
                function () {
                  _this11.dragOver.next({
                    dropData: currentDragDropData
                  });
                });
              });
              overlapsChanged$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["pairwise"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(
              /**
              * @param {?} __0
              * @return {?}
              */
              function (_ref13) {
                var _ref14 = _slicedToArray(_ref13, 2),
                    didOverlap = _ref14[0],
                    overlapsNow = _ref14[1];

                return didOverlap && !overlapsNow;
              })).subscribe(
              /**
              * @return {?}
              */
              function () {
                dragOverActive = false;

                _this11.renderer.removeClass(_this11.element.nativeElement, _this11.dragOverClass);

                _this11.zone.run(
                /**
                * @return {?}
                */
                function () {
                  _this11.dragLeave.next({
                    dropData: currentDragDropData
                  });
                });
              });
              drag$.subscribe({
                complete:
                /**
                * @return {?}
                */
                function complete() {
                  deregisterScrollListener();

                  _this11.renderer.removeClass(_this11.element.nativeElement, _this11.dragActiveClass);

                  if (dragOverActive) {
                    _this11.renderer.removeClass(_this11.element.nativeElement, _this11.dragOverClass);

                    _this11.zone.run(
                    /**
                    * @return {?}
                    */
                    function () {
                      _this11.drop.next({
                        dropData: currentDragDropData
                      });
                    });
                  }
                }
              });
            });
          }
          /**
           * @return {?}
           */

        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            if (this.currentDragSubscription) {
              this.currentDragSubscription.unsubscribe();
            }
          }
        }]);

        return DroppableDirective;
      }();

      DroppableDirective.decorators = [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
        args: [{
          selector: '[mwlDroppable]'
        }]
      }];
      /** @nocollapse */

      DroppableDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
        }, {
          type: DraggableHelper
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
        }, {
          type: DraggableScrollContainerDirective,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"]
          }]
        }];
      };

      DroppableDirective.propDecorators = {
        dragOverClass: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        dragActiveClass: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        dragEnter: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        dragLeave: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        dragOver: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        drop: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }]
      };
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      var DragAndDropModule = function DragAndDropModule() {
        _classCallCheck(this, DragAndDropModule);
      };

      DragAndDropModule.decorators = [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgModule"],
        args: [{
          declarations: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective],
          exports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective]
        }]
      }];
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */
      //# sourceMappingURL=angular-draggable-droppable.js.map

      /***/
    },

    /***/
    "QNJA":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfDecade/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function QNJA(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfDecade;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name endOfDecade
       * @category Decade Helpers
       * @summary Return the end of a decade for the given date.
       *
       * @description
       * Return the end of a decade for the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the end of a decade
       * @param {Object} [options] - an object with options.
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // The end of a decade for 12 May 1984 00:00:00:
       * var result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))
       * //=> Dec 31 1989 23:59:59.999
       */


      function endOfDecade(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var year = date.getFullYear();
        var decade = 9 + Math.floor(year / 10) * 10;
        date.setFullYear(decade, 11, 31);
        date.setHours(23, 59, 59, 999);
        return date;
      }
      /***/

    },

    /***/
    "QPoN":
    /*!*************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/comercial/agenda/compromissos/compromissos.component.html ***!
      \*************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function QPoN(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ng-template #loading>\n  <loader-spinner-full-screen></loader-spinner-full-screen>\n</ng-template>\n<app-header [appTitle]=\"appTitle(viewDate)\">\n  <button\n    type=\"button\"\n    *ngIf=\"showCalendar\"\n    mwlCalendarPreviousView\n    [view]=\"view\"\n    [(viewDate)]=\"viewDate\"\n    (viewDateChange)=\"fetchEvents()\">\n    Anterior\n  </button>\n  <button\n    type=\"button\"\n    *ngIf=\"showCalendar\"\n    mwlCalendarToday\n    [(viewDate)]=\"viewDate\"\n    (viewDateChange)=\"fetchEvents()\">\n    Hoy\n  </button>\n  <button\n    type=\"button\"\n    *ngIf=\"showCalendar\"\n    mwlCalendarNextView\n    [view]=\"view\"\n    [(viewDate)]=\"viewDate\"\n    (viewDateChange)=\"fetchEvents()\">\n    Próximo\n  </button>\n  <button\n    type=\"button\"\n    *ngIf=\"showCalendar\"\n    [routerLink]=\"['../novo']\">\n    Adicionar\n  </button>\n  <button\n    type=\"button\"\n    (click)=\"onFilter(showFilter)\"\n    *ngIf=\"enableFilterButton()\"\n    [disabled]=\"idEscritorio == null || idVendedor == null\">\n    Filtrar\n  </button>\n</app-header>\n<app-body [breadCrumbTree]=\"breadCrumbTree\" [show]=\"!loaderFullScreen\">\n  <div class=\"row\" *ngIf=\"showFilter\">\n    <div class=\"col\">\n      <comercial-templates-filtro-vendedor-escritorio\n        [profile]=\"profile\"\n        [showAll]=\"false\"\n        (formValue)=\"dataFilter($event)\">\n      </comercial-templates-filtro-vendedor-escritorio>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"showCalendar\">\n    <div class=\"col\">\n      <div class=\"row mb-3\" *ngIf=\"(nomeEscritorio != null && nomeEscritorio.length > 0) || (nomeVendedor != null && nomeVendedor.length > 0)\">\n        <div class=\"col\">\n          <div class=\"d-flex\">\n            <h6 class=\"mb-0 mr-2\" *ngIf=\"nomeVendedor != null && nomeEscritorio != null && nomeEscritorio.length > 0\">\n              <span class=\"badge badge-secondary\">{{ nomeEscritorio }}</span>\n            </h6>\n            <h6 class=\"mb-0\" *ngIf=\"nomeVendedor.length > 0\">\n              <span class=\"badge badge-primary\">{{ nomeVendedor }}</span>\n            </h6>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <div *ngIf=\"events$ | async; else loading; let events\">\n            <div [ngSwitch]=\"view\">\n              <mwl-calendar-month-view\n                *ngSwitchCase=\"'month'\"\n                [@.disabled]=\"true\"\n                [viewDate]=\"viewDate\"\n                [events]=\"events\"\n                [activeDayIsOpen]=\"activeDayIsOpen\"\n                (dayClicked)=\"dayClicked($event.day)\"\n                (eventClicked)=\"eventClicked($event.event)\">\n              </mwl-calendar-month-view>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <permission-denied\n    message=\"Su perfil no tiene permisos para acceder a esta aplicacion\"\n    *ngIf=\"showPermissionDenied\">\n  </permission-denied>\n</app-body>\n";
      /***/
    },

    /***/
    "R8/v":
    /*!***********************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js ***!
      \***********************************************************************/

    /*! exports provided: default */

    /***/
    function R8V(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfUTCISOWeekYear;
      });
      /* harmony import */


      var _getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../getUTCISOWeekYear/index.js */
      "gr1v");
      /* harmony import */


      var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfUTCISOWeek/index.js */
      "tpup");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg"); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function startOfUTCISOWeekYear(dirtyDate) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var year = Object(_getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var fourthOfJanuary = new Date(0);
        fourthOfJanuary.setUTCFullYear(year, 0, 4);
        fourthOfJanuary.setUTCHours(0, 0, 0, 0);
        var date = Object(_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuary);
        return date;
      }
      /***/

    },

    /***/
    "R9pN":
    /*!*******************************************************************************!*\
      !*** ./src/app/modules/comercial/agenda/formulario/formulario.component.scss ***!
      \*******************************************************************************/

    /*! exports provided: default */

    /***/
    function R9pN(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "::ng-deep .input-group .custom-select:not(:last-child),\n::ng-deep .input-group .form-control:not(:last-child) {\n  border-top-right-radius: 0.25rem;\n  border-bottom-right-radius: 0.25rem;\n}\n::ng-deep .color-dropdown {\n  background-color: transparent;\n  border: unset;\n  display: -ms-flexbox;\n  display: flex;\n  padding: 0px;\n}\n::ng-deep .color-dropdown div {\n  border-radius: 50%;\n  content: \"\";\n  height: 15px;\n  width: 15px;\n}\n::ng-deep .color-dropdown::after {\n  margin-top: 4px;\n  margin-left: 5px !important;\n}\n::ng-deep .color-dropdown:focus {\n  outline: unset;\n}\n::ng-deep ul#color-dropdown li a.dropdown-item {\n  display: -ms-flexbox;\n  display: flex;\n}\n::ng-deep ul#color-dropdown li a.dropdown-item .color-hex {\n  border-radius: 50%;\n  content: \"\";\n  height: 15px;\n  margin-right: 8px;\n  margin-top: 4px;\n  width: 15px;\n}\n::ng-deep .custom-mt {\n  margin: -1px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvYWdlbmRhL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJTTs7RUFDRSxnQ0FBQTtFQUNBLG1DQUFBO0FBRlI7QUFNRTtFQUNFLDZCQUFBO0VBQ0EsYUFBQTtFQUNBLG9CQUFBO0VBQUEsYUFBQTtFQUNBLFlBQUE7QUFKSjtBQUtJO0VBQ0Usa0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUFITjtBQUtJO0VBQ0UsZUFBQTtFQUNBLDJCQUFBO0FBSE47QUFLSTtFQUNFLGNBQUE7QUFITjtBQVFNO0VBQ0Usb0JBQUE7RUFBQSxhQUFBO0FBTlI7QUFPUTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0FBTFY7QUFVRTtFQUNFLFlBQUE7QUFSSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FnZW5kYS9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAge1xuICAuaW5wdXQtZ3JvdXAge1xuICAgIC5jdXN0b20tc2VsZWN0LFxuICAgIC5mb3JtLWNvbnRyb2wge1xuICAgICAgJjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDAuMjVyZW07XG4gICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwLjI1cmVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAuY29sb3ItZHJvcGRvd24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogdW5zZXQ7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgZGl2IHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgaGVpZ2h0OiAxNXB4O1xuICAgICAgd2lkdGg6IDE1cHg7XG4gICAgfVxuICAgICY6OmFmdGVyIHtcbiAgICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiA1cHggIWltcG9ydGFudDtcbiAgICB9XG4gICAgJjpmb2N1cyB7XG4gICAgICBvdXRsaW5lOiB1bnNldDtcbiAgICB9XG4gIH1cbiAgdWwjY29sb3ItZHJvcGRvd24ge1xuICAgIGxpIHtcbiAgICAgIGEuZHJvcGRvd24taXRlbSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIC5jb2xvci1oZXgge1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICBoZWlnaHQ6IDE1cHg7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICAgICAgICAgbWFyZ2luLXRvcDogNHB4O1xuICAgICAgICAgIHdpZHRoOiAxNXB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC5jdXN0b20tbXQge1xuICAgIG1hcmdpbjogLTFweDtcbiAgfVxufVxuIl19 */";
      /***/
    },

    /***/
    "RX3l":
    /*!****************************************!*\
      !*** ./node_modules/is-array/index.js ***!
      \****************************************/

    /*! no static exports found */

    /***/
    function RX3l(module, exports) {
      /**
       * isArray
       */
      var isArray = Array.isArray;
      /**
       * toString
       */

      var str = Object.prototype.toString;
      /**
       * Whether or not the given `val`
       * is an array.
       *
       * example:
       *
       *        isArray([]);
       *        // > true
       *        isArray(arguments);
       *        // > false
       *        isArray('');
       *        // > false
       *
       * @param {mixed} val
       * @return {bool}
       */

      module.exports = isArray || function (val) {
        return !!val && '[object Array]' == str.call(val);
      };
      /***/

    },

    /***/
    "RaBM":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/formatISO9075/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function RaBM(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return formatISO9075;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../isValid/index.js */
      "Se/U");
      /* harmony import */


      var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/addLeadingZeros/index.js */
      "+7QN");
      /**
       * @name formatISO9075
       * @category Common Helpers
       * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).
       *
       * @description
       * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.
       *
       * @param {Date|Number} date - the original date
       * @param {Object} [options] - an object with options.
       * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.
       * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.
       * @returns {String} the formatted date string
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `date` must not be Invalid Date
       * @throws {RangeError} `options.format` must be 'extended' or 'basic'
       * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'
       *
       * @example
       * // Represent 18 September 2019 in ISO 9075 format:
       * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))
       * //=> '2019-09-18 19:00:52'
       *
       * @example
       * // Represent 18 September 2019 in ISO 9075, short format:
       * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })
       * //=> '20190918 190052'
       *
       * @example
       * // Represent 18 September 2019 in ISO 9075 format, date only:
       * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })
       * //=> '2019-09-18'
       *
       * @example
       * // Represent 18 September 2019 in ISO 9075 format, time only:
       * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })
       * //=> '19:00:52'
       */


      function formatISO9075(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
        }

        var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

        if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(originalDate)) {
          throw new RangeError('Invalid time value');
        }

        var options = dirtyOptions || {};
        var format = options.format == null ? 'extended' : String(options.format);
        var representation = options.representation == null ? 'complete' : String(options.representation);

        if (format !== 'extended' && format !== 'basic') {
          throw new RangeError("format must be 'extended' or 'basic'");
        }

        if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {
          throw new RangeError("representation must be 'date', 'time', or 'complete'");
        }

        var result = '';
        var dateDelimiter = format === 'extended' ? '-' : '';
        var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'

        if (representation !== 'time') {
          var day = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getDate(), 2);
          var month = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMonth() + 1, 2);
          var year = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.

          result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
        } // Representation is either 'time' or 'complete'


        if (representation !== 'date') {
          var hour = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getHours(), 2);
          var minute = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMinutes(), 2);
          var second = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space

          var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.

          result = "".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);
        }

        return result;
      }
      /***/

    },

    /***/
    "RgJi":
    /*!*********************************************************!*\
      !*** ./node_modules/date-fns/esm/fromUnixTime/index.js ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function RgJi(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return fromUnixTime;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name fromUnixTime
       * @category Timestamp Helpers
       * @summary Create a date from a Unix timestamp.
       *
       * @description
       * Create a date from a Unix timestamp.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Number} unixTime - the given Unix timestamp
       * @returns {Date} the date
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Create the date 29 February 2012 11:45:05:
       * var result = fromUnixTime(1330515905)
       * //=> Wed Feb 29 2012 11:45:05
       */


      function fromUnixTime(dirtyUnixTime) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var unixTime = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyUnixTime);
        return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(unixTime * 1000);
      }
      /***/

    },

    /***/
    "RgwM":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/setMilliseconds/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function RgwM(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setMilliseconds;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setMilliseconds
       * @category Millisecond Helpers
       * @summary Set the milliseconds to the given date.
       *
       * @description
       * Set the milliseconds to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} milliseconds - the milliseconds of the new date
       * @returns {Date} the new date with the milliseconds set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set 300 milliseconds to 1 September 2014 11:30:40.500:
       * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)
       * //=> Mon Sep 01 2014 11:30:40.300
       */


      function setMilliseconds(dirtyDate, dirtyMilliseconds) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var milliseconds = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyMilliseconds);
        date.setMilliseconds(milliseconds);
        return date;
      }
      /***/

    },

    /***/
    "Rngw":
    /*!***************************************************************!*\
      !*** ./node_modules/date-fns/esm/parse/_lib/parsers/index.js ***!
      \***************************************************************/

    /*! exports provided: default */

    /***/
    function Rngw(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../../../_lib/getUTCWeekYear/index.js */
      "Szzx");
      /* harmony import */


      var _lib_setUTCDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../../../_lib/setUTCDay/index.js */
      "+lkT");
      /* harmony import */


      var _lib_setUTCISODay_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../../../_lib/setUTCISODay/index.js */
      "zWh8");
      /* harmony import */


      var _lib_setUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../../../_lib/setUTCISOWeek/index.js */
      "pR7g");
      /* harmony import */


      var _lib_setUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../../../_lib/setUTCWeek/index.js */
      "xiNX");
      /* harmony import */


      var _lib_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../../../_lib/startOfUTCISOWeek/index.js */
      "tpup");
      /* harmony import */


      var _lib_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../../../_lib/startOfUTCWeek/index.js */
      "1vjI");

      var MILLISECONDS_IN_HOUR = 3600000;
      var MILLISECONDS_IN_MINUTE = 60000;
      var MILLISECONDS_IN_SECOND = 1000;
      var numericPatterns = {
        month: /^(1[0-2]|0?\d)/,
        // 0 to 12
        date: /^(3[0-1]|[0-2]?\d)/,
        // 0 to 31
        dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
        // 0 to 366
        week: /^(5[0-3]|[0-4]?\d)/,
        // 0 to 53
        hour23h: /^(2[0-3]|[0-1]?\d)/,
        // 0 to 23
        hour24h: /^(2[0-4]|[0-1]?\d)/,
        // 0 to 24
        hour11h: /^(1[0-1]|0?\d)/,
        // 0 to 11
        hour12h: /^(1[0-2]|0?\d)/,
        // 0 to 12
        minute: /^[0-5]?\d/,
        // 0 to 59
        second: /^[0-5]?\d/,
        // 0 to 59
        singleDigit: /^\d/,
        // 0 to 9
        twoDigits: /^\d{1,2}/,
        // 0 to 99
        threeDigits: /^\d{1,3}/,
        // 0 to 999
        fourDigits: /^\d{1,4}/,
        // 0 to 9999
        anyDigitsSigned: /^-?\d+/,
        singleDigitSigned: /^-?\d/,
        // 0 to 9, -0 to -9
        twoDigitsSigned: /^-?\d{1,2}/,
        // 0 to 99, -0 to -99
        threeDigitsSigned: /^-?\d{1,3}/,
        // 0 to 999, -0 to -999
        fourDigitsSigned: /^-?\d{1,4}/ // 0 to 9999, -0 to -9999

      };
      var timezonePatterns = {
        basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
        basic: /^([+-])(\d{2})(\d{2})|Z/,
        basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
        extended: /^([+-])(\d{2}):(\d{2})|Z/,
        extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
      };

      function parseNumericPattern(pattern, string, valueCallback) {
        var matchResult = string.match(pattern);

        if (!matchResult) {
          return null;
        }

        var value = parseInt(matchResult[0], 10);
        return {
          value: valueCallback ? valueCallback(value) : value,
          rest: string.slice(matchResult[0].length)
        };
      }

      function parseTimezonePattern(pattern, string) {
        var matchResult = string.match(pattern);

        if (!matchResult) {
          return null;
        } // Input is 'Z'


        if (matchResult[0] === 'Z') {
          return {
            value: 0,
            rest: string.slice(1)
          };
        }

        var sign = matchResult[1] === '+' ? 1 : -1;
        var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
        var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
        var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
        return {
          value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),
          rest: string.slice(matchResult[0].length)
        };
      }

      function parseAnyDigitsSigned(string, valueCallback) {
        return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);
      }

      function parseNDigits(n, string, valueCallback) {
        switch (n) {
          case 1:
            return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);

          case 2:
            return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);

          case 3:
            return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);

          case 4:
            return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);

          default:
            return parseNumericPattern(new RegExp('^\\d{1,' + n + '}'), string, valueCallback);
        }
      }

      function parseNDigitsSigned(n, string, valueCallback) {
        switch (n) {
          case 1:
            return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);

          case 2:
            return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);

          case 3:
            return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);

          case 4:
            return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);

          default:
            return parseNumericPattern(new RegExp('^-?\\d{1,' + n + '}'), string, valueCallback);
        }
      }

      function dayPeriodEnumToHours(enumValue) {
        switch (enumValue) {
          case 'morning':
            return 4;

          case 'evening':
            return 17;

          case 'pm':
          case 'noon':
          case 'afternoon':
            return 12;

          case 'am':
          case 'midnight':
          case 'night':
          default:
            return 0;
        }
      }

      function normalizeTwoDigitYear(twoDigitYear, currentYear) {
        var isCommonEra = currentYear > 0; // Absolute number of the current year:
        // 1 -> 1 AC
        // 0 -> 1 BC
        // -1 -> 2 BC

        var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
        var result;

        if (absCurrentYear <= 50) {
          result = twoDigitYear || 100;
        } else {
          var rangeEnd = absCurrentYear + 50;
          var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
          var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
          result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
        }

        return isCommonEra ? result : 1 - result;
      }

      var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
      var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation

      function isLeapYearIndex(year) {
        return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
      }
      /*
       * |     | Unit                           |     | Unit                           |
       * |-----|--------------------------------|-----|--------------------------------|
       * |  a  | AM, PM                         |  A* | Milliseconds in day            |
       * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
       * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
       * |  d  | Day of month                   |  D  | Day of year                    |
       * |  e  | Local day of week              |  E  | Day of week                    |
       * |  f  |                                |  F* | Day of week in month           |
       * |  g* | Modified Julian day            |  G  | Era                            |
       * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
       * |  i! | ISO day of week                |  I! | ISO week of year               |
       * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
       * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
       * |  l* | (deprecated)                   |  L  | Stand-alone month              |
       * |  m  | Minute                         |  M  | Month                          |
       * |  n  |                                |  N  |                                |
       * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
       * |  p  |                                |  P  |                                |
       * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
       * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
       * |  s  | Second                         |  S  | Fraction of second             |
       * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
       * |  u  | Extended year                  |  U* | Cyclic year                    |
       * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
       * |  w  | Local week of year             |  W* | Week of month                  |
       * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
       * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
       * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
       *
       * Letters marked by * are not implemented but reserved by Unicode standard.
       *
       * Letters marked by ! are non-standard, but implemented by date-fns:
       * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
       * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
       *   i.e. 7 for Sunday, 1 for Monday, etc.
       * - `I` is ISO week of year, as opposed to `w` which is local week of year.
       * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
       *   `R` is supposed to be used in conjunction with `I` and `i`
       *   for universal ISO week-numbering date, whereas
       *   `Y` is supposed to be used in conjunction with `w` and `e`
       *   for week-numbering date specific to the locale.
       */


      var parsers = {
        // Era
        G: {
          priority: 140,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              // AD, BC
              case 'G':
              case 'GG':
              case 'GGG':
                return match.era(string, {
                  width: 'abbreviated'
                }) || match.era(string, {
                  width: 'narrow'
                });
              // A, B

              case 'GGGGG':
                return match.era(string, {
                  width: 'narrow'
                });
              // Anno Domini, Before Christ

              case 'GGGG':
              default:
                return match.era(string, {
                  width: 'wide'
                }) || match.era(string, {
                  width: 'abbreviated'
                }) || match.era(string, {
                  width: 'narrow'
                });
            }
          },
          set: function set(date, flags, value, _options) {
            flags.era = value;
            date.setUTCFullYear(value, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['R', 'u', 't', 'T']
        },
        // Year
        y: {
          // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
          // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
          // |----------|-------|----|-------|-------|-------|
          // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
          // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
          // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
          // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
          // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
          priority: 130,
          parse: function parse(string, token, match, _options) {
            var valueCallback = function valueCallback(year) {
              return {
                year: year,
                isTwoDigitYear: token === 'yy'
              };
            };

            switch (token) {
              case 'y':
                return parseNDigits(4, string, valueCallback);

              case 'yo':
                return match.ordinalNumber(string, {
                  unit: 'year',
                  valueCallback: valueCallback
                });

              default:
                return parseNDigits(token.length, string, valueCallback);
            }
          },
          validate: function validate(_date, value, _options) {
            return value.isTwoDigitYear || value.year > 0;
          },
          set: function set(date, flags, value, _options) {
            var currentYear = date.getUTCFullYear();

            if (value.isTwoDigitYear) {
              var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
              date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            }

            var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
            date.setUTCFullYear(year, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']
        },
        // Local week-numbering year
        Y: {
          priority: 130,
          parse: function parse(string, token, match, _options) {
            var valueCallback = function valueCallback(year) {
              return {
                year: year,
                isTwoDigitYear: token === 'YY'
              };
            };

            switch (token) {
              case 'Y':
                return parseNDigits(4, string, valueCallback);

              case 'Yo':
                return match.ordinalNumber(string, {
                  unit: 'year',
                  valueCallback: valueCallback
                });

              default:
                return parseNDigits(token.length, string, valueCallback);
            }
          },
          validate: function validate(_date, value, _options) {
            return value.isTwoDigitYear || value.year > 0;
          },
          set: function set(date, flags, value, options) {
            var currentYear = Object(_lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, options);

            if (value.isTwoDigitYear) {
              var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
              date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
              date.setUTCHours(0, 0, 0, 0);
              return Object(_lib_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(date, options);
            }

            var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
            date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
            date.setUTCHours(0, 0, 0, 0);
            return Object(_lib_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(date, options);
          },
          incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']
        },
        // ISO week-numbering year
        R: {
          priority: 130,
          parse: function parse(string, token, _match, _options) {
            if (token === 'R') {
              return parseNDigitsSigned(4, string);
            }

            return parseNDigitsSigned(token.length, string);
          },
          set: function set(_date, _flags, value, _options) {
            var firstWeekOfYear = new Date(0);
            firstWeekOfYear.setUTCFullYear(value, 0, 4);
            firstWeekOfYear.setUTCHours(0, 0, 0, 0);
            return Object(_lib_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(firstWeekOfYear);
          },
          incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']
        },
        // Extended year
        u: {
          priority: 130,
          parse: function parse(string, token, _match, _options) {
            if (token === 'u') {
              return parseNDigitsSigned(4, string);
            }

            return parseNDigitsSigned(token.length, string);
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCFullYear(value, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']
        },
        // Quarter
        Q: {
          priority: 120,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              // 1, 2, 3, 4
              case 'Q':
              case 'QQ':
                // 01, 02, 03, 04
                return parseNDigits(token.length, string);
              // 1st, 2nd, 3rd, 4th

              case 'Qo':
                return match.ordinalNumber(string, {
                  unit: 'quarter'
                });
              // Q1, Q2, Q3, Q4

              case 'QQQ':
                return match.quarter(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.quarter(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // 1, 2, 3, 4 (narrow quarter; could be not numerical)

              case 'QQQQQ':
                return match.quarter(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // 1st quarter, 2nd quarter, ...

              case 'QQQQ':
              default:
                return match.quarter(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.quarter(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.quarter(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 1 && value <= 4;
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCMonth((value - 1) * 3, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']
        },
        // Stand-alone quarter
        q: {
          priority: 120,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              // 1, 2, 3, 4
              case 'q':
              case 'qq':
                // 01, 02, 03, 04
                return parseNDigits(token.length, string);
              // 1st, 2nd, 3rd, 4th

              case 'qo':
                return match.ordinalNumber(string, {
                  unit: 'quarter'
                });
              // Q1, Q2, Q3, Q4

              case 'qqq':
                return match.quarter(string, {
                  width: 'abbreviated',
                  context: 'standalone'
                }) || match.quarter(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // 1, 2, 3, 4 (narrow quarter; could be not numerical)

              case 'qqqqq':
                return match.quarter(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // 1st quarter, 2nd quarter, ...

              case 'qqqq':
              default:
                return match.quarter(string, {
                  width: 'wide',
                  context: 'standalone'
                }) || match.quarter(string, {
                  width: 'abbreviated',
                  context: 'standalone'
                }) || match.quarter(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 1 && value <= 4;
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCMonth((value - 1) * 3, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']
        },
        // Month
        M: {
          priority: 110,
          parse: function parse(string, token, match, _options) {
            var valueCallback = function valueCallback(value) {
              return value - 1;
            };

            switch (token) {
              // 1, 2, ..., 12
              case 'M':
                return parseNumericPattern(numericPatterns.month, string, valueCallback);
              // 01, 02, ..., 12

              case 'MM':
                return parseNDigits(2, string, valueCallback);
              // 1st, 2nd, ..., 12th

              case 'Mo':
                return match.ordinalNumber(string, {
                  unit: 'month',
                  valueCallback: valueCallback
                });
              // Jan, Feb, ..., Dec

              case 'MMM':
                return match.month(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.month(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // J, F, ..., D

              case 'MMMMM':
                return match.month(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // January, February, ..., December

              case 'MMMM':
              default:
                return match.month(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.month(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.month(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 0 && value <= 11;
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCMonth(value, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']
        },
        // Stand-alone month
        L: {
          priority: 110,
          parse: function parse(string, token, match, _options) {
            var valueCallback = function valueCallback(value) {
              return value - 1;
            };

            switch (token) {
              // 1, 2, ..., 12
              case 'L':
                return parseNumericPattern(numericPatterns.month, string, valueCallback);
              // 01, 02, ..., 12

              case 'LL':
                return parseNDigits(2, string, valueCallback);
              // 1st, 2nd, ..., 12th

              case 'Lo':
                return match.ordinalNumber(string, {
                  unit: 'month',
                  valueCallback: valueCallback
                });
              // Jan, Feb, ..., Dec

              case 'LLL':
                return match.month(string, {
                  width: 'abbreviated',
                  context: 'standalone'
                }) || match.month(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // J, F, ..., D

              case 'LLLLL':
                return match.month(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // January, February, ..., December

              case 'LLLL':
              default:
                return match.month(string, {
                  width: 'wide',
                  context: 'standalone'
                }) || match.month(string, {
                  width: 'abbreviated',
                  context: 'standalone'
                }) || match.month(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 0 && value <= 11;
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCMonth(value, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']
        },
        // Local week of year
        w: {
          priority: 100,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 'w':
                return parseNumericPattern(numericPatterns.week, string);

              case 'wo':
                return match.ordinalNumber(string, {
                  unit: 'week'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 1 && value <= 53;
          },
          set: function set(date, _flags, value, options) {
            return Object(_lib_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(Object(_lib_setUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(date, value, options), options);
          },
          incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']
        },
        // ISO week of year
        I: {
          priority: 100,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 'I':
                return parseNumericPattern(numericPatterns.week, string);

              case 'Io':
                return match.ordinalNumber(string, {
                  unit: 'week'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 1 && value <= 53;
          },
          set: function set(date, _flags, value, options) {
            return Object(_lib_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(Object(_lib_setUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date, value, options), options);
          },
          incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']
        },
        // Day of the month
        d: {
          priority: 90,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 'd':
                return parseNumericPattern(numericPatterns.date, string);

              case 'do':
                return match.ordinalNumber(string, {
                  unit: 'date'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(date, value, _options) {
            var year = date.getUTCFullYear();
            var isLeapYear = isLeapYearIndex(year);
            var month = date.getUTCMonth();

            if (isLeapYear) {
              return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
            } else {
              return value >= 1 && value <= DAYS_IN_MONTH[month];
            }
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCDate(value);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']
        },
        // Day of year
        D: {
          priority: 90,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 'D':
              case 'DD':
                return parseNumericPattern(numericPatterns.dayOfYear, string);

              case 'Do':
                return match.ordinalNumber(string, {
                  unit: 'date'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(date, value, _options) {
            var year = date.getUTCFullYear();
            var isLeapYear = isLeapYearIndex(year);

            if (isLeapYear) {
              return value >= 1 && value <= 366;
            } else {
              return value >= 1 && value <= 365;
            }
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCMonth(0, value);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']
        },
        // Day of week
        E: {
          priority: 90,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              // Tue
              case 'E':
              case 'EE':
              case 'EEE':
                return match.day(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'short',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // T

              case 'EEEEE':
                return match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // Tu

              case 'EEEEEE':
                return match.day(string, {
                  width: 'short',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // Tuesday

              case 'EEEE':
              default:
                return match.day(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'short',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 0 && value <= 6;
          },
          set: function set(date, _flags, value, options) {
            date = Object(_lib_setUTCDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']
        },
        // Local day of week
        e: {
          priority: 90,
          parse: function parse(string, token, match, options) {
            var valueCallback = function valueCallback(value) {
              var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
              return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
            };

            switch (token) {
              // 3
              case 'e':
              case 'ee':
                // 03
                return parseNDigits(token.length, string, valueCallback);
              // 3rd

              case 'eo':
                return match.ordinalNumber(string, {
                  unit: 'day',
                  valueCallback: valueCallback
                });
              // Tue

              case 'eee':
                return match.day(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'short',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // T

              case 'eeeee':
                return match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // Tu

              case 'eeeeee':
                return match.day(string, {
                  width: 'short',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // Tuesday

              case 'eeee':
              default:
                return match.day(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'short',
                  context: 'formatting'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 0 && value <= 6;
          },
          set: function set(date, _flags, value, options) {
            date = Object(_lib_setUTCDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']
        },
        // Stand-alone local day of week
        c: {
          priority: 90,
          parse: function parse(string, token, match, options) {
            var valueCallback = function valueCallback(value) {
              var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
              return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
            };

            switch (token) {
              // 3
              case 'c':
              case 'cc':
                // 03
                return parseNDigits(token.length, string, valueCallback);
              // 3rd

              case 'co':
                return match.ordinalNumber(string, {
                  unit: 'day',
                  valueCallback: valueCallback
                });
              // Tue

              case 'ccc':
                return match.day(string, {
                  width: 'abbreviated',
                  context: 'standalone'
                }) || match.day(string, {
                  width: 'short',
                  context: 'standalone'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // T

              case 'ccccc':
                return match.day(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // Tu

              case 'cccccc':
                return match.day(string, {
                  width: 'short',
                  context: 'standalone'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // Tuesday

              case 'cccc':
              default:
                return match.day(string, {
                  width: 'wide',
                  context: 'standalone'
                }) || match.day(string, {
                  width: 'abbreviated',
                  context: 'standalone'
                }) || match.day(string, {
                  width: 'short',
                  context: 'standalone'
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 0 && value <= 6;
          },
          set: function set(date, _flags, value, options) {
            date = Object(_lib_setUTCDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']
        },
        // ISO day of week
        i: {
          priority: 90,
          parse: function parse(string, token, match, _options) {
            var valueCallback = function valueCallback(value) {
              if (value === 0) {
                return 7;
              }

              return value;
            };

            switch (token) {
              // 2
              case 'i':
              case 'ii':
                // 02
                return parseNDigits(token.length, string);
              // 2nd

              case 'io':
                return match.ordinalNumber(string, {
                  unit: 'day'
                });
              // Tue

              case 'iii':
                return match.day(string, {
                  width: 'abbreviated',
                  context: 'formatting',
                  valueCallback: valueCallback
                }) || match.day(string, {
                  width: 'short',
                  context: 'formatting',
                  valueCallback: valueCallback
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting',
                  valueCallback: valueCallback
                });
              // T

              case 'iiiii':
                return match.day(string, {
                  width: 'narrow',
                  context: 'formatting',
                  valueCallback: valueCallback
                });
              // Tu

              case 'iiiiii':
                return match.day(string, {
                  width: 'short',
                  context: 'formatting',
                  valueCallback: valueCallback
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting',
                  valueCallback: valueCallback
                });
              // Tuesday

              case 'iiii':
              default:
                return match.day(string, {
                  width: 'wide',
                  context: 'formatting',
                  valueCallback: valueCallback
                }) || match.day(string, {
                  width: 'abbreviated',
                  context: 'formatting',
                  valueCallback: valueCallback
                }) || match.day(string, {
                  width: 'short',
                  context: 'formatting',
                  valueCallback: valueCallback
                }) || match.day(string, {
                  width: 'narrow',
                  context: 'formatting',
                  valueCallback: valueCallback
                });
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 1 && value <= 7;
          },
          set: function set(date, _flags, value, options) {
            date = Object(_lib_setUTCISODay_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']
        },
        // AM or PM
        a: {
          priority: 80,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 'a':
              case 'aa':
              case 'aaa':
                return match.dayPeriod(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });

              case 'aaaaa':
                return match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });

              case 'aaaa':
              default:
                return match.dayPeriod(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']
        },
        // AM, PM, midnight
        b: {
          priority: 80,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 'b':
              case 'bb':
              case 'bbb':
                return match.dayPeriod(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });

              case 'bbbbb':
                return match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });

              case 'bbbb':
              default:
                return match.dayPeriod(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']
        },
        // in the morning, in the afternoon, in the evening, at night
        B: {
          priority: 80,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 'B':
              case 'BB':
              case 'BBB':
                return match.dayPeriod(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });

              case 'BBBBB':
                return match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });

              case 'BBBB':
              default:
                return match.dayPeriod(string, {
                  width: 'wide',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'abbreviated',
                  context: 'formatting'
                }) || match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
            }
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['a', 'b', 't', 'T']
        },
        // Hour [1-12]
        h: {
          priority: 70,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 'h':
                return parseNumericPattern(numericPatterns.hour12h, string);

              case 'ho':
                return match.ordinalNumber(string, {
                  unit: 'hour'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 1 && value <= 12;
          },
          set: function set(date, _flags, value, _options) {
            var isPM = date.getUTCHours() >= 12;

            if (isPM && value < 12) {
              date.setUTCHours(value + 12, 0, 0, 0);
            } else if (!isPM && value === 12) {
              date.setUTCHours(0, 0, 0, 0);
            } else {
              date.setUTCHours(value, 0, 0, 0);
            }

            return date;
          },
          incompatibleTokens: ['H', 'K', 'k', 't', 'T']
        },
        // Hour [0-23]
        H: {
          priority: 70,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 'H':
                return parseNumericPattern(numericPatterns.hour23h, string);

              case 'Ho':
                return match.ordinalNumber(string, {
                  unit: 'hour'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 0 && value <= 23;
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCHours(value, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']
        },
        // Hour [0-11]
        K: {
          priority: 70,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 'K':
                return parseNumericPattern(numericPatterns.hour11h, string);

              case 'Ko':
                return match.ordinalNumber(string, {
                  unit: 'hour'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 0 && value <= 11;
          },
          set: function set(date, _flags, value, _options) {
            var isPM = date.getUTCHours() >= 12;

            if (isPM && value < 12) {
              date.setUTCHours(value + 12, 0, 0, 0);
            } else {
              date.setUTCHours(value, 0, 0, 0);
            }

            return date;
          },
          incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']
        },
        // Hour [1-24]
        k: {
          priority: 70,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 'k':
                return parseNumericPattern(numericPatterns.hour24h, string);

              case 'ko':
                return match.ordinalNumber(string, {
                  unit: 'hour'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 1 && value <= 24;
          },
          set: function set(date, _flags, value, _options) {
            var hours = value <= 24 ? value % 24 : value;
            date.setUTCHours(hours, 0, 0, 0);
            return date;
          },
          incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']
        },
        // Minute
        m: {
          priority: 60,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 'm':
                return parseNumericPattern(numericPatterns.minute, string);

              case 'mo':
                return match.ordinalNumber(string, {
                  unit: 'minute'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 0 && value <= 59;
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCMinutes(value, 0, 0);
            return date;
          },
          incompatibleTokens: ['t', 'T']
        },
        // Second
        s: {
          priority: 50,
          parse: function parse(string, token, match, _options) {
            switch (token) {
              case 's':
                return parseNumericPattern(numericPatterns.second, string);

              case 'so':
                return match.ordinalNumber(string, {
                  unit: 'second'
                });

              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(_date, value, _options) {
            return value >= 0 && value <= 59;
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCSeconds(value, 0);
            return date;
          },
          incompatibleTokens: ['t', 'T']
        },
        // Fraction of second
        S: {
          priority: 30,
          parse: function parse(string, token, _match, _options) {
            var valueCallback = function valueCallback(value) {
              return Math.floor(value * Math.pow(10, -token.length + 3));
            };

            return parseNDigits(token.length, string, valueCallback);
          },
          set: function set(date, _flags, value, _options) {
            date.setUTCMilliseconds(value);
            return date;
          },
          incompatibleTokens: ['t', 'T']
        },
        // Timezone (ISO-8601. +00:00 is `'Z'`)
        X: {
          priority: 10,
          parse: function parse(string, token, _match, _options) {
            switch (token) {
              case 'X':
                return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);

              case 'XX':
                return parseTimezonePattern(timezonePatterns.basic, string);

              case 'XXXX':
                return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);

              case 'XXXXX':
                return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);

              case 'XXX':
              default:
                return parseTimezonePattern(timezonePatterns.extended, string);
            }
          },
          set: function set(date, flags, value, _options) {
            if (flags.timestampIsSet) {
              return date;
            }

            return new Date(date.getTime() - value);
          },
          incompatibleTokens: ['t', 'T', 'x']
        },
        // Timezone (ISO-8601)
        x: {
          priority: 10,
          parse: function parse(string, token, _match, _options) {
            switch (token) {
              case 'x':
                return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);

              case 'xx':
                return parseTimezonePattern(timezonePatterns.basic, string);

              case 'xxxx':
                return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);

              case 'xxxxx':
                return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);

              case 'xxx':
              default:
                return parseTimezonePattern(timezonePatterns.extended, string);
            }
          },
          set: function set(date, flags, value, _options) {
            if (flags.timestampIsSet) {
              return date;
            }

            return new Date(date.getTime() - value);
          },
          incompatibleTokens: ['t', 'T', 'X']
        },
        // Seconds timestamp
        t: {
          priority: 40,
          parse: function parse(string, _token, _match, _options) {
            return parseAnyDigitsSigned(string);
          },
          set: function set(_date, _flags, value, _options) {
            return [new Date(value * 1000), {
              timestampIsSet: true
            }];
          },
          incompatibleTokens: '*'
        },
        // Milliseconds timestamp
        T: {
          priority: 20,
          parse: function parse(string, _token, _match, _options) {
            return parseAnyDigitsSigned(string);
          },
          set: function set(_date, _flags, value, _options) {
            return [new Date(value), {
              timestampIsSet: true
            }];
          },
          incompatibleTokens: '*'
        }
      };
      /* harmony default export */

      __webpack_exports__["default"] = parsers;
      /***/
    },

    /***/
    "S7Yp":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/lightFormat/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function S7Yp(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return lightFormat;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_format_lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/format/lightFormatters/index.js */
      "YIOq");
      /* harmony import */


      var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
      "JCDJ");
      /* harmony import */


      var _isValid_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../isValid/index.js */
      "Se/U");
      /* harmony import */


      var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../subMilliseconds/index.js */
      "g9KO");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg"); // This RegExp consists of three parts separated by `|`:
      // - (\w)\1* matches any sequences of the same letter
      // - '' matches two quote characters in a row
      // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
      //   except a single quote symbol, which ends the sequence.
      //   Two quote characters do not end the sequence.
      //   If there is no matching single quote
      //   then the sequence will continue until the end of the string.
      // - . matches any single character unmatched by previous parts of the RegExps


      var formattingTokensRegExp = /(\w)\1*|''|'(''|[^'])+('|$)|./g;
      var escapedStringRegExp = /^'([^]*?)'?$/;
      var doubleQuoteRegExp = /''/g;
      var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
      /**
       * @name lightFormat
       * @category Common Helpers
       * @summary Format the date.
       *
       * @description
       * Return the formatted date string in the given format. Unlike `format`,
       * `lightFormat` doesn't use locales and outputs date using the most popular tokens.
       *
       * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.
       * > See: https://git.io/fxCyr
       *
       * The characters wrapped between two single quotes characters (') are escaped.
       * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
       *
       * Format of the string is based on Unicode Technical Standard #35:
       * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
       *
       * Accepted patterns:
       * | Unit                            | Pattern | Result examples                   |
       * |---------------------------------|---------|-----------------------------------|
       * | AM, PM                          | a..aaa  | AM, PM                            |
       * |                                 | aaaa    | a.m., p.m.                        |
       * |                                 | aaaaa   | a, p                              |
       * | Calendar year                   | y       | 44, 1, 1900, 2017                 |
       * |                                 | yy      | 44, 01, 00, 17                    |
       * |                                 | yyy     | 044, 001, 000, 017                |
       * |                                 | yyyy    | 0044, 0001, 1900, 2017            |
       * | Month (formatting)              | M       | 1, 2, ..., 12                     |
       * |                                 | MM      | 01, 02, ..., 12                   |
       * | Day of month                    | d       | 1, 2, ..., 31                     |
       * |                                 | dd      | 01, 02, ..., 31                   |
       * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |
       * |                                 | hh      | 01, 02, ..., 11, 12               |
       * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |
       * |                                 | HH      | 00, 01, 02, ..., 23               |
       * | Minute                          | m       | 0, 1, ..., 59                     |
       * |                                 | mm      | 00, 01, ..., 59                   |
       * | Second                          | s       | 0, 1, ..., 59                     |
       * |                                 | ss      | 00, 01, ..., 59                   |
       * | Fraction of second              | S       | 0, 1, ..., 9                      |
       * |                                 | SS      | 00, 01, ..., 99                   |
       * |                                 | SSS     | 000, 0001, ..., 999               |
       * |                                 | SSSS    | ...                               |
       *
       * @param {Date|Number} date - the original date
       * @param {String} format - the string of tokens
       * @returns {String} the formatted date string
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} format string contains an unescaped latin alphabet character
       *
       * @example
       * var result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')
       * //=> '1987-02-11'
       */

      function lightFormat(dirtyDate, dirtyFormatStr) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(2, arguments);
        var formatStr = String(dirtyFormatStr);
        var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

        if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(originalDate)) {
          throw new RangeError('Invalid time value');
        } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
        // This ensures that when UTC functions will be implemented, locales will be compatible with them.
        // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376


        var timezoneOffset = Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate);
        var utcDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(originalDate, timezoneOffset);
        var result = formatStr.match(formattingTokensRegExp).map(function (substring) {
          // Replace two single quote characters with one single quote character
          if (substring === "''") {
            return "'";
          }

          var firstCharacter = substring[0];

          if (firstCharacter === "'") {
            return cleanEscapedString(substring);
          }

          var formatter = _lib_format_lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_1__["default"][firstCharacter];

          if (formatter) {
            return formatter(utcDate, substring, null, {});
          }

          if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
            throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
          }

          return substring;
        }).join('');
        return result;
      }

      function cleanEscapedString(input) {
        return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
      }
      /***/

    },

    /***/
    "SFWn":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/getQuarter/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function SFWn(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getQuarter;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getQuarter
       * @category Quarter Helpers
       * @summary Get the year quarter of the given date.
       *
       * @description
       * Get the year quarter of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the quarter
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which quarter is 2 July 2014?
       * var result = getQuarter(new Date(2014, 6, 2))
       * //=> 3
       */


      function getQuarter(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var quarter = Math.floor(date.getMonth() / 3) + 1;
        return quarter;
      }
      /***/

    },

    /***/
    "Se/U":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/isValid/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function SeU(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isValid;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isValid
       * @category Common Helpers
       * @summary Is the given date valid?
       *
       * @description
       * Returns false if argument is Invalid Date and true otherwise.
       * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * Invalid Date is a Date, whose time value is NaN.
       *
       * Time value of Date: http://es5.github.io/#x15.9.1.1
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - Now `isValid` doesn't throw an exception
       *   if the first argument is not an instance of Date.
       *   Instead, argument is converted beforehand using `toDate`.
       *
       *   Examples:
       *
       *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |
       *   |---------------------------|---------------|---------------|
       *   | `new Date()`              | `true`        | `true`        |
       *   | `new Date('2016-01-01')`  | `true`        | `true`        |
       *   | `new Date('')`            | `false`       | `false`       |
       *   | `new Date(1488370835081)` | `true`        | `true`        |
       *   | `new Date(NaN)`           | `false`       | `false`       |
       *   | `'2016-01-01'`            | `TypeError`   | `false`       |
       *   | `''`                      | `TypeError`   | `false`       |
       *   | `1488370835081`           | `TypeError`   | `true`        |
       *   | `NaN`                     | `TypeError`   | `false`       |
       *
       *   We introduce this change to make *date-fns* consistent with ECMAScript behavior
       *   that try to coerce arguments to the expected type
       *   (which is also the case with other *date-fns* functions).
       *
       * @param {*} date - the date to check
       * @returns {Boolean} the date is valid
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // For the valid date:
       * var result = isValid(new Date(2014, 1, 31))
       * //=> true
       *
       * @example
       * // For the value, convertable into a date:
       * var result = isValid(1393804800000)
       * //=> true
       *
       * @example
       * // For the invalid date:
       * var result = isValid(new Date(''))
       * //=> false
       */


      function isValid(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        return !isNaN(date);
      }
      /***/

    },

    /***/
    "SuC2":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/subSeconds/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function SuC2(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return subSeconds;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addSeconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addSeconds/index.js */
      "Ctv7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name subSeconds
       * @category Second Helpers
       * @summary Subtract the specified number of seconds from the given date.
       *
       * @description
       * Subtract the specified number of seconds from the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of seconds to be subtracted
       * @returns {Date} the new date with the seconds subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract 30 seconds from 10 July 2014 12:45:00:
       * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)
       * //=> Thu Jul 10 2014 12:44:30
       */


      function subSeconds(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addSeconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
      }
      /***/

    },

    /***/
    "Szzx":
    /*!****************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js ***!
      \****************************************************************/

    /*! exports provided: default */

    /***/
    function Szzx(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getUTCWeekYear;
      });
      /* harmony import */


      var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../startOfUTCWeek/index.js */
      "1vjI");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg"); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function getUTCWeekYear(dirtyDate, dirtyOptions) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, dirtyOptions);
        var year = date.getUTCFullYear();
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(localeFirstWeekContainsDate);
        var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

        if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
          throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
        }

        var firstWeekOfNextYear = new Date(0);
        firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
        firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
        var startOfNextYear = Object(_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(firstWeekOfNextYear, dirtyOptions);
        var firstWeekOfThisYear = new Date(0);
        firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
        firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
        var startOfThisYear = Object(_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(firstWeekOfThisYear, dirtyOptions);

        if (date.getTime() >= startOfNextYear.getTime()) {
          return year + 1;
        } else if (date.getTime() >= startOfThisYear.getTime()) {
          return year;
        } else {
          return year - 1;
        }
      }
      /***/

    },

    /***/
    "TGAR":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/isSameQuarter/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function TGAR(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isSameQuarter;
      });
      /* harmony import */


      var _startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfQuarter/index.js */
      "vHCX");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isSameQuarter
       * @category Quarter Helpers
       * @summary Are the given dates in the same year quarter?
       *
       * @description
       * Are the given dates in the same year quarter?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to check
       * @param {Date|Number} dateRight - the second date to check
       * @returns {Boolean} the dates are in the same quarter
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Are 1 January 2014 and 8 March 2014 in the same quarter?
       * var result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))
       * //=> true
       */


      function isSameQuarter(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeftStartOfQuarter = Object(_startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRightStartOfQuarter = Object(_startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();
      }
      /***/

    },

    /***/
    "TPT/":
    /*!*****************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/comercial/agenda/detalhes/detalhes.component.html ***!
      \*****************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function TPT(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<app-header appTitle=\"Detalles del compromiso\">\n  <button\n    type=\"button\"\n    (click)=\"onEdit(detalhes)\">\n    Editar\n  </button>\n  <button\n    type=\"button\"\n    (click)=\"onReschedule(detalhes)\">\n    Reagendar\n  </button>\n  <button\n    type=\"button\"\n    (click)=\"onDelete(detalhes)\">\n    Excluir\n  </button>\n</app-header>\n<app-body [breadCrumbTree]=\"breadCrumbTree\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-6\">\n      <div class=\"form-row\">\n        <div class=\"form-group col\">\n          <label>Título</label>\n          <div>{{ detalhes.title }}</div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col\">\n          <label>Cliente</label>\n          <div *ngIf=\"!detalhes.client\">Sin informacion</div>\n          <div *ngIf=\"detalhes.client\">{{ detalhes.client }}</div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label>FORMA DE CONTACTO</label>\n          <div *ngIf=\"!detalhes.formContactDesc\">Sin informacion</div>\n          <div *ngIf=\"detalhes.formContactDesc\">{{ detalhes.formContactDesc }}</div>\n        </div>\n        <div class=\"form-group col-sm-6\">\n          <label>Contacto de origen</label>\n          <div *ngIf=\"!detalhes.typeContactDesc\">Sin informacion</div>\n          <div *ngIf=\"detalhes.typeContactDesc\">{{ detalhes.typeContactDesc }}</div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col\">\n          <label>Fecha</label>\n          <div>{{ detalhes.fullDate | uppercase }}</div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col\">\n          <label>Observación</label>\n          <div *ngIf=\"!detalhes.description\">Sin informacion</div>\n          <div *ngIf=\"detalhes.description\" [innerHTML]=\"detalhes.description | uppercase\"></div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col\">\n          <label>Reprogramación</label>\n          <div *ngIf=\"!detalhes.motivo\">No reprogramado</div>\n          <div *ngIf=\"detalhes.motivo\" [innerHTML]=\"detalhes.motivo | uppercase\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</app-body>\n";
      /***/
    },

    /***/
    "TXrr":
    /*!*********************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfISOWeek/index.js ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function TXrr(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfISOWeek;
      });
      /* harmony import */


      var _endOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../endOfWeek/index.js */
      "L8hi");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name endOfISOWeek
       * @category ISO Week Helpers
       * @summary Return the end of an ISO week for the given date.
       *
       * @description
       * Return the end of an ISO week for the given date.
       * The result will be in the local timezone.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the end of an ISO week
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The end of an ISO week for 2 September 2014 11:55:00:
       * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Sun Sep 07 2014 23:59:59.999
       */


      function endOfISOWeek(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_endOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, {
          weekStartsOn: 1
        });
      }
      /***/

    },

    /***/
    "TjGc":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/isToday/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function TjGc(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isToday;
      });
      /* harmony import */


      var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isSameDay/index.js */
      "G6Tw");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isToday
       * @category Day Helpers
       * @summary Is the given date today?
       * @pure false
       *
       * @description
       * Is the given date today?
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is today
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // If today is 6 October 2014, is 6 October 14:00:00 today?
       * var result = isToday(new Date(2014, 9, 6, 14, 0))
       * //=> true
       */


      function isToday(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now());
      }
      /***/

    },

    /***/
    "TnmX":
    /*!************************************************!*\
      !*** ./node_modules/date-fns/esm/max/index.js ***!
      \************************************************/

    /*! exports provided: default */

    /***/
    function TnmX(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return max;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name max
       * @category Common Helpers
       * @summary Return the latest of the given dates.
       *
       * @description
       * Return the latest of the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - `max` function now accepts an array of dates rather than spread arguments.
       *
       *   ```javascript
       *   // Before v2.0.0
       *   var date1 = new Date(1989, 6, 10)
       *   var date2 = new Date(1987, 1, 11)
       *   var maxDate = max(date1, date2)
       *
       *   // v2.0.0 onward:
       *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]
       *   var maxDate = max(dates)
       *   ```
       *
       * @param {Date[]|Number[]} datesArray - the dates to compare
       * @returns {Date} the latest of the dates
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which of these dates is the latest?
       * var result = max([
       *   new Date(1989, 6, 10),
       *   new Date(1987, 1, 11),
       *   new Date(1995, 6, 2),
       *   new Date(1990, 0, 1)
       * ])
       * //=> Sun Jul 02 1995 00:00:00
       */


      function max(dirtyDatesArray) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method

        if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {
          datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.
        } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {
          datesArray = Array.prototype.slice.call(dirtyDatesArray);
        } else {
          // `dirtyDatesArray` is non-iterable, return Invalid Date
          return new Date(NaN);
        }

        var result;
        datesArray.forEach(function (dirtyDate) {
          var currentDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

          if (result === undefined || result < currentDate || isNaN(currentDate)) {
            result = currentDate;
          }
        });
        return result || new Date(NaN);
      }
      /***/

    },

    /***/
    "TpeJ":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/getDate/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function TpeJ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getDate;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getDate
       * @category Day Helpers
       * @summary Get the day of the month of the given date.
       *
       * @description
       * Get the day of the month of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the day of month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which day of the month is 29 February 2012?
       * var result = getDate(new Date(2012, 1, 29))
       * //=> 29
       */


      function getDate(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var dayOfMonth = date.getDate();
        return dayOfMonth;
      }
      /***/

    },

    /***/
    "Tx3P":
    /*!**************************************************************!*\
      !*** ./node_modules/date-fns/esm/isSameISOWeekYear/index.js ***!
      \**************************************************************/

    /*! exports provided: default */

    /***/
    function Tx3P(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isSameISOWeekYear;
      });
      /* harmony import */


      var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfISOWeekYear/index.js */
      "0f5V");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isSameISOWeekYear
       * @category ISO Week-Numbering Year Helpers
       * @summary Are the given dates in the same ISO week-numbering year?
       *
       * @description
       * Are the given dates in the same ISO week-numbering year?
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.
       *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
       *   This change makes the name consistent with
       *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.
       *
       * @param {Date|Number} dateLeft - the first date to check
       * @param {Date|Number} dateRight - the second date to check
       * @returns {Boolean} the dates are in the same ISO week-numbering year
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?
       * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))
       * //=> true
       */


      function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeftStartOfYear = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRightStartOfYear = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();
      }
      /***/

    },

    /***/
    "UUMI":
    /*!*********************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/comercial/agenda/formulario/formulario.component.html ***!
      \*********************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function UUMI(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<loader-spinner-navbar *ngIf=\"loaderNavbar\"></loader-spinner-navbar>\n<loader-spinner-full-screen *ngIf=\"loaderFullScreen\"></loader-spinner-full-screen>\n<app-header [appTitle]=\"appTitle()\">\n  <button\n    type=\"button\"\n    (click)=\"onCancel()\"\n    [disabled]=\"submittingForm\">\n    Cancelar\n  </button>\n  <button\n    type=\"button\"\n    (click)=\"onSubmit()\"\n    [disabled]=\"submittingForm || !form.valid\">\n    Salvar\n  </button>\n</app-header>\n<app-body [breadCrumbTree]=\"breadCrumbTree\" [show]=\"!loaderFullScreen\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-lg-5\">\n      <form [formGroup]=\"form\" autocomplete=\"off\">\n        <div class=\"form-row justify-content-center\">\n          <div class=\"form-group col\">\n            <label for=\"codTitulo\">Título</label>\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\">\n                  <div class=\"btn-group\" dropdown>\n                    <button dropdownToggle type=\"button\" class=\"color-dropdown dropdown-toggle\" aria-controls=\"color-dropdown\">\n                      <div [ngStyle]=\"{'backgroundColor': form.value.cor}\"></div>\n                    </button>\n                    <ul id=\"color-dropdown\" *dropdownMenu class=\"dropdown-menu\">\n                      <li role=\"menuitem\">\n                        <a\n                          class=\"dropdown-item\"\n                          href=\"javascript:void(0)\"\n                          *ngFor=\"let color of colors\"\n                          (click)=\"onColorChange(color)\">\n                          <div class=\"color-hex\" [ngStyle]=\"{'backgroundColor': color.hex}\"></div>\n                          <div>{{ color.descricao }}</div>\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </span>\n              </div>\n              <ng-select\n              [searchable]=\"true\"\n              [clearable]=\"true\"\n              class=\"col p-0\"\n              [items]=\"listarTitulosAgenda\"\n              [virtualScroll]=\"true\"\n              placeholder=\"Selecione...\"\n              labelForId=\"codTitulo\"\n              bindLabel=\"descricaoTitulo\"\n              bindValue=\"codTitulo\"\n              id=\"codTitulo\"\n              formControlName=\"codTitulo\">\n            </ng-select>\n            <invalid-form-control [show]=\"onFieldInvalid('codTitulo')\" message=\"Título obligatorio.\"></invalid-form-control>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"showInputClientes\">\n          <div class=\"form-row\" *ngIf=\"permissoesAcesso.simuladorVendas === true\">\n            <div class=\"form-group col my-3\">\n              <div class=\"custom-control custom-checkbox\">\n                <input\n                 type=\"checkbox\"\n                 class=\"custom-control-input\"\n                 id=\"gerar-cotacao-pedido\"\n                 formControlName=\"gerarCotacaoPedido\"\n                 (change)=\"onGerarCotacaoPedido()\">\n                <label\n                  class=\"custom-control-label\"\n                  for=\"gerar-cotacao-pedido\">\n                  Generar presupuesto/solicitud para este contacto\n                </label>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label for=\"cliente\">Cliente</label>\n              <ng-select\n                [searchable]=\"true\"\n                [clearable]=\"false\"\n                [items]=\"clientes\"\n                [virtualScroll]=\"true\"\n                labelForId=\"cliente\"\n                bindLabel=\"codRazaoSocial\"\n                bindValue=\"codCliente\"\n                formControlName=\"cliente\"\n                [ngClass]=\"onFieldError('cliente') + ' ' + onFieldRequired('cliente')\"\n                (change)=\"onInput()\">\n              </ng-select>\n            </div>\n          </div>\n\n        </div>\n        <div *ngIf=\"showInputVendedores\">\n          <div class=\"form-row\" *ngIf=\"permissoesAcesso.simuladorVendas === true\">\n            <div class=\"form-group col my-3\">\n              <div class=\"custom-control custom-checkbox\">\n                <input\n                 type=\"checkbox\"\n                 class=\"custom-control-input\"\n                 id=\"gerar-cotacao-pedido\"\n                 formControlName=\"gerarCotacaoPedido\"\n                 (change)=\"onGerarCotacaoPedido()\">\n                <label\n                  class=\"custom-control-label\"\n                  for=\"gerar-cotacao-pedido\">\n                  Generar presupuesto/solicitud para este contacto\n                </label>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label for=\"promotor\">Promotor</label>\n              <ng-select\n                [searchable]=\"true\"\n                [clearable]=\"false\"\n                [items]=\"promotores\"\n                [virtualScroll]=\"true\"\n                labelForId=\"promotor\"\n                bindLabel=\"nome\"\n                bindValue=\"id\"\n                formControlName=\"promotor\"\n                [ngClass]=\"onFieldError('promotor') + ' ' + onFieldRequired('promotor')\"\n                (change)=\"onInput()\">\n              </ng-select>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"codFormaContato\">FORMA DE CONTACTO</label>\n            <ng-select\n              [searchable]=\"true\"\n              [clearable]=\"false\"\n              [items]=\"formasContato\"\n              formControlName=\"codFormaContato\"\n              [virtualScroll]=\"false\"\n              bindLabel=\"descricao\"\n              bindValue=\"codFormaContato\"\n              [ngClass]=\"onFieldError('codFormaContato') + ' ' + onFieldRequired('codFormaContato')\">\n            </ng-select>\n            <invalid-form-control [show]=\"onFieldInvalid('codFormaContato')\" message=\"Forma de contacto es obligatorio.\"></invalid-form-control>\n          </div>\n          <div class=\"form-group col-md-6\">\n            <label for=\"codOrigemContato\">ORIGEN DE CONTACTO</label>\n            <ng-select\n              [searchable]=\"true\"\n              [clearable]=\"false\"\n              [items]=\"origensContato\"\n              formControlName=\"codOrigemContato\"\n              [virtualScroll]=\"false\"\n              bindLabel=\"DS_MEIO_CONT\"\n              bindValue=\"ID_MEIO_CONT\"\n              [ngClass]=\"onFieldError('codOrigemContato') + ' ' + onFieldRequired('codOrigemContato')\">\n            </ng-select>\n            <invalid-form-control [show]=\"onFieldInvalid('codOrigemContato')\" message=\"Origen de contacto es obligatorio.\"></invalid-form-control>\n          </div>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <label for=\"inicioData\">Fecha Inicial</label>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6 pr-0\">\n                <div class=\"input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\"><i class=\"far fa-calendar-alt\"></i></span>\n                  </div>\n                  <input\n                    class=\"form-control\"\n                    id=\"inicioData\"\n                    type=\"text\"\n                    bsDatepicker\n                    [bsConfig]=\"bsConfig\"\n                    formControlName=\"inicioData\"\n                    (input)=\"onInput()\"\n                    [ngClass]=\"onFieldError('inicioData') + ' ' + onFieldRequired('inicioData')\">\n                </div>\n                <invalid-form-control [show]=\"onFieldInvalid('inicioData')\" message=\"Início é obrigatório.\"></invalid-form-control>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"custom-mt d-flex\">\n                  <timepicker\n                    [showMeridian]=\"false\"\n                    [showSpinners]=\"false\"\n                    [mousewheel]=\"true\"\n                    formControlName=\"inicioHorario\"\n                    (input)=\"onInput()\">\n                  </timepicker>\n                  <div class=\"custom-control custom-checkbox ml-3 mt-2\">\n                    <input\n                      type=\"checkbox\"\n                      class=\"custom-control-input\"\n                      id=\"diaInteiro\"\n                      formControlName=\"diaInteiro\"\n                      (input)=\"onInput()\"\n                      (change)=\"triggerAllDay()\">\n                    <label class=\"custom-control-label\" for=\"diaInteiro\">Dia completo</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <label [ngClass]=\"{'required': !isDisabledTime}\" for=\"terminoData\">Fecha Final</label>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6 pr-0\">\n                <div class=\"input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\"><i class=\"far fa-calendar-alt\"></i></span>\n                  </div>\n                  <input\n                    class=\"form-control\"\n                    id=\"terminoData\"\n                    type=\"text\"\n                    bsDatepicker\n                    [bsConfig]=\"bsConfig\"\n                    formControlName=\"terminoData\"\n                    (input)=\"onInput()\">\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"custom-mt\">\n                  <timepicker\n                    [showMeridian]=\"false\"\n                    [showSpinners]=\"false\"\n                    [mousewheel]=\"true\"\n                    formControlName=\"terminoHorario\"\n                    (input)=\"onInput()\">\n                  </timepicker>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-row\" *ngIf=\"action == 'reagendar'\">\n          <div class=\"form-group col\">\n            <label for=\"motivoReagendamento\">Motivo de la reprogramación</label>\n            <select\n              class=\"form-control custom-select\"\n              id=\"motivoReagendamento\"\n              formControlName=\"motivoReagendamento\"\n              (change)=\"onInput()\"\n              [ngClass]=\"onFieldError('inicioData') + ' ' + onFieldRequired('inicioData')\">\n              <option *ngFor=\"let item of motivosReagendamento\" [value]=\"item.ID_REAG_MOTI\">{{ item.DS_REAG_MOTI }}</option>\n            </select>\n            <invalid-form-control [show]=\"onFieldInvalid('motivoReagendamento')\" message=\"Motivo de reagendamiento.\"></invalid-form-control>\n          </div>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col\">\n            <label for=\"observacao\">Observación</label>\n            <textarea\n              class=\"form-control\"\n              id=\"observacao\"\n              formControlName=\"observacao\"\n              (input)=\"onInput()\">\n            </textarea>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</app-body>\n";
      /***/
    },

    /***/
    "VJNc":
    /*!*********************************************!*\
      !*** ./node_modules/dom-set/dist/bundle.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function VJNc(module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      function _interopDefault(ex) {
        return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
      }

      var arrayFrom = _interopDefault(__webpack_require__(
      /*! array-from */
      "uMIJ"));

      var isArray = _interopDefault(__webpack_require__(
      /*! is-array */
      "RX3l"));

      var isElement = _interopDefault(__webpack_require__(
      /*! iselement */
      "xijO"));

      var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
      } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
      };
      /**
       * Returns `true` if provided input is Element.
       * @name isElement
       * @param {*} [input]
       * @returns {boolean}
       */


      var isElement$1 = function isElement$1(input) {
        return input != null && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input.nodeType === 1 && _typeof(input.style) === 'object' && _typeof(input.ownerDocument) === 'object';
      };

      function select(selector) {
        if (typeof selector === 'string') {
          try {
            return document.querySelector(selector);
          } catch (e) {
            throw e;
          }
        } else if (isElement(selector)) {
          return selector;
        }
      }

      function selectAll(selector) {
        if (typeof selector === 'string') {
          return Array.prototype.slice.apply(document.querySelectorAll(selector));
        } else if (isArray(selector)) {
          return selector.map(select);
        } else if ('length' in selector) {
          return arrayFrom(selector).map(select);
        }
      }

      function indexOfElement(elements, element) {
        element = resolveElement(element, true);

        if (!isElement$1(element)) {
          return -1;
        }

        for (var i = 0; i < elements.length; i++) {
          if (elements[i] === element) {
            return i;
          }
        }

        return -1;
      }

      function hasElement(elements, element) {
        return -1 !== indexOfElement(elements, element);
      }

      function domListOf(arr) {
        if (!arr) {
          return [];
        }

        try {
          if (typeof arr === 'string') {
            return arrayFrom(document.querySelectorAll(arr));
          } else if (isArray(arr)) {
            return arr.map(resolveElement);
          } else {
            if (typeof arr.length === 'undefined') {
              return [resolveElement(arr)];
            }

            return arrayFrom(arr, resolveElement);
          }
        } catch (e) {
          throw new Error(e);
        }
      }

      function concatElementLists() {
        var lists = [],
            len = arguments.length;

        while (len--) {
          lists[len] = arguments[len];
        }

        return lists.reduce(function (last, list) {
          return list.length ? last : last.concat(domListOf(list));
        }, []);
      }

      function pushElements(elements, toAdd) {
        for (var i = 0; i < toAdd.length; i++) {
          if (!hasElement(elements, toAdd[i])) {
            elements.push(toAdd[i]);
          }
        }

        return toAdd;
      }

      function addElements(elements) {
        var toAdd = [],
            len = arguments.length - 1;

        while (len-- > 0) {
          toAdd[len] = arguments[len + 1];
        }

        toAdd = toAdd.map(resolveElement);
        return pushElements(elements, toAdd);
      }

      function removeElements(elements) {
        var toRemove = [],
            len = arguments.length - 1;

        while (len-- > 0) {
          toRemove[len] = arguments[len + 1];
        }

        return toRemove.map(resolveElement).reduce(function (last, e) {
          var index = indexOfElement(elements, e);

          if (index !== -1) {
            return last.concat(elements.splice(index, 1));
          }

          return last;
        }, []);
      }

      function resolveElement(element, noThrow) {
        if (typeof element === 'string') {
          try {
            return document.querySelector(element);
          } catch (e) {
            throw e;
          }
        }

        if (!isElement$1(element) && !noThrow) {
          throw new TypeError(element + " is not a DOM element.");
        }

        return element;
      }

      exports.indexOfElement = indexOfElement;
      exports.hasElement = hasElement;
      exports.domListOf = domListOf;
      exports.concatElementLists = concatElementLists;
      exports.addElements = addElements;
      exports.removeElements = removeElements;
      exports.resolveElement = resolveElement;
      exports.select = select;
      exports.selectAll = selectAll; //# sourceMappingURL=bundle.js.map

      /***/
    },

    /***/
    "VLv5":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/subQuarters/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function VLv5(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return subQuarters;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addQuarters_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addQuarters/index.js */
      "tfX3");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name subQuarters
       * @category Quarter Helpers
       * @summary Subtract the specified number of year quarters from the given date.
       *
       * @description
       * Subtract the specified number of year quarters from the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of quarters to be subtracted
       * @returns {Date} the new date with the quarters subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract 3 quarters from 1 September 2014:
       * var result = subQuarters(new Date(2014, 8, 1), 3)
       * //=> Sun Dec 01 2013 00:00:00
       */


      function subQuarters(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addQuarters_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
      }
      /***/

    },

    /***/
    "VlRU":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/isThisHour/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function VlRU(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isThisHour;
      });
      /* harmony import */


      var _isSameHour_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isSameHour/index.js */
      "yzsd");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isThisHour
       * @category Hour Helpers
       * @summary Is the given date in the same hour as the current date?
       * @pure false
       *
       * @description
       * Is the given date in the same hour as the current date?
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is in this hour
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // If now is 25 September 2014 18:30:15.500,
       * // is 25 September 2014 18:00:00 in this hour?
       * var result = isThisHour(new Date(2014, 8, 25, 18))
       * //=> true
       */


      function isThisHour(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_isSameHour_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
      }
      /***/

    },

    /***/
    "VxKU":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/isFriday/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function VxKU(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isFriday;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isFriday
       * @category Weekday Helpers
       * @summary Is the given date Friday?
       *
       * @description
       * Is the given date Friday?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is Friday
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Is 26 September 2014 Friday?
       * var result = isFriday(new Date(2014, 8, 26))
       * //=> true
       */


      function isFriday(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 5;
      }
      /***/

    },

    /***/
    "W6rj":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/subBusinessDays/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function W6rj(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return subBusinessDays;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addBusinessDays/index.js */
      "83R2");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name subBusinessDays
       * @category Day Helpers
       * @summary Substract the specified number of business days (mon - fri) to the given date.
       *
       * @description
       * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of business days to be subtracted
       * @returns {Date} the new date with the business days subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Substract 10 business days from 1 September 2014:
       * var result = subBusinessDays(new Date(2014, 8, 1), 10)
       * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)
       */


      function subBusinessDays(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
      }
      /***/

    },

    /***/
    "W9Un":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/isThisISOWeek/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function W9Un(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isThisISOWeek;
      });
      /* harmony import */


      var _isSameISOWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isSameISOWeek/index.js */
      "qzLx");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isThisISOWeek
       * @category ISO Week Helpers
       * @summary Is the given date in the same ISO week as the current date?
       * @pure false
       *
       * @description
       * Is the given date in the same ISO week as the current date?
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is in this ISO week
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // If today is 25 September 2014, is 22 September 2014 in this ISO week?
       * var result = isThisISOWeek(new Date(2014, 8, 22))
       * //=> true
       */


      function isThisISOWeek(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_isSameISOWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now());
      }
      /***/

    },

    /***/
    "WIjQ":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/isSameMonth/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function WIjQ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isSameMonth;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isSameMonth
       * @category Month Helpers
       * @summary Are the given dates in the same month?
       *
       * @description
       * Are the given dates in the same month?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to check
       * @param {Date|Number} dateRight - the second date to check
       * @returns {Boolean} the dates are in the same month
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Are 2 September 2014 and 25 September 2014 in the same month?
       * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))
       * //=> true
       */


      function isSameMonth(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
      }
      /***/

    },

    /***/
    "WJMa":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfSecond/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function WJMa(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfSecond;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name startOfSecond
       * @category Second Helpers
       * @summary Return the start of a second for the given date.
       *
       * @description
       * Return the start of a second for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the start of a second
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The start of a second for 1 December 2014 22:15:45.400:
       * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))
       * //=> Mon Dec 01 2014 22:15:45.000
       */


      function startOfSecond(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        date.setMilliseconds(0);
        return date;
      }
      /***/

    },

    /***/
    "WQ3w":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/subHours/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function WQ3w(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return subHours;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addHours_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addHours/index.js */
      "Da6A");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name subHours
       * @category Hour Helpers
       * @summary Subtract the specified number of hours from the given date.
       *
       * @description
       * Subtract the specified number of hours from the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of hours to be subtracted
       * @returns {Date} the new date with the hours subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract 2 hours from 11 July 2014 01:00:00:
       * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)
       * //=> Thu Jul 10 2014 23:00:00
       */


      function subHours(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addHours_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
      }
      /***/

    },

    /***/
    "WYsD":
    /*!********************************************************************!*\
      !*** ./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js ***!
      \********************************************************************/

    /*! exports provided: default */

    /***/
    function WYsD(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../../../_lib/buildMatchPatternFn/index.js */
      "vRX4");
      /* harmony import */


      var _lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../../../_lib/buildMatchFn/index.js */
      "wzM+");

      var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
      var parseOrdinalNumberPattern = /\d+/i;
      var matchEraPatterns = {
        narrow: /^(b|a)/i,
        abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
        wide: /^(before christ|before common era|anno domini|common era)/i
      };
      var parseEraPatterns = {
        any: [/^b/i, /^(a|c)/i]
      };
      var matchQuarterPatterns = {
        narrow: /^[1234]/i,
        abbreviated: /^q[1234]/i,
        wide: /^[1234](th|st|nd|rd)? quarter/i
      };
      var parseQuarterPatterns = {
        any: [/1/i, /2/i, /3/i, /4/i]
      };
      var matchMonthPatterns = {
        narrow: /^[jfmasond]/i,
        abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
        wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
      };
      var parseMonthPatterns = {
        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
      };
      var matchDayPatterns = {
        narrow: /^[smtwf]/i,
        "short": /^(su|mo|tu|we|th|fr|sa)/i,
        abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
        wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
      };
      var parseDayPatterns = {
        narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
        any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
      };
      var matchDayPeriodPatterns = {
        narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
        any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
      };
      var parseDayPeriodPatterns = {
        any: {
          am: /^a/i,
          pm: /^p/i,
          midnight: /^mi/i,
          noon: /^no/i,
          morning: /morning/i,
          afternoon: /afternoon/i,
          evening: /evening/i,
          night: /night/i
        }
      };
      var match = {
        ordinalNumber: Object(_lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
          matchPattern: matchOrdinalNumberPattern,
          parsePattern: parseOrdinalNumberPattern,
          valueCallback: function valueCallback(value) {
            return parseInt(value, 10);
          }
        }),
        era: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
          matchPatterns: matchEraPatterns,
          defaultMatchWidth: 'wide',
          parsePatterns: parseEraPatterns,
          defaultParseWidth: 'any'
        }),
        quarter: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
          matchPatterns: matchQuarterPatterns,
          defaultMatchWidth: 'wide',
          parsePatterns: parseQuarterPatterns,
          defaultParseWidth: 'any',
          valueCallback: function valueCallback(index) {
            return index + 1;
          }
        }),
        month: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
          matchPatterns: matchMonthPatterns,
          defaultMatchWidth: 'wide',
          parsePatterns: parseMonthPatterns,
          defaultParseWidth: 'any'
        }),
        day: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
          matchPatterns: matchDayPatterns,
          defaultMatchWidth: 'wide',
          parsePatterns: parseDayPatterns,
          defaultParseWidth: 'any'
        }),
        dayPeriod: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
          matchPatterns: matchDayPeriodPatterns,
          defaultMatchWidth: 'any',
          parsePatterns: parseDayPeriodPatterns,
          defaultParseWidth: 'any'
        })
      };
      /* harmony default export */

      __webpack_exports__["default"] = match;
      /***/
    },

    /***/
    "XQXX":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/setHours/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function XQXX(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setHours;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setHours
       * @category Hour Helpers
       * @summary Set the hours to the given date.
       *
       * @description
       * Set the hours to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} hours - the hours of the new date
       * @returns {Date} the new date with the hours set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set 4 hours to 1 September 2014 11:30:00:
       * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)
       * //=> Mon Sep 01 2014 04:30:00
       */


      function setHours(dirtyDate, dirtyHours) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var hours = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyHours);
        date.setHours(hours);
        return date;
      }
      /***/

    },

    /***/
    "XX+V":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/setWeek/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function XXV(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setWeek;
      });
      /* harmony import */


      var _getWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../getWeek/index.js */
      "eYjL");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setWeek
       * @category Week Helpers
       * @summary Set the local week to the given date.
       *
       * @description
       * Set the local week to the given date, saving the weekday number.
       * The exact calculation depends on the values of
       * `options.weekStartsOn` (which is the index of the first day of the week)
       * and `options.firstWeekContainsDate` (which is the day of January, which is always in
       * the first week of the week-numbering year)
       *
       * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} week - the week of the new date
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
       * @returns {Date} the new date with the local week set
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
       *
       * @example
       * // Set the 1st week to 2 January 2005 with default options:
       * var result = setWeek(new Date(2005, 0, 2), 1)
       * //=> Sun Dec 26 2004 00:00:00
       *
       * @example
       * // Set the 1st week to 2 January 2005,
       * // if Monday is the first day of the week,
       * // and the first week of the year always contains 4 January:
       * var result = setWeek(new Date(2005, 0, 2), 1, {
       *   weekStartsOn: 1,
       *   firstWeekContainsDate: 4
       * })
       * //=> Sun Jan 4 2004 00:00:00
       */


      function setWeek(dirtyDate, dirtyWeek, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var week = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyWeek);
        var diff = Object(_getWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, dirtyOptions) - week;
        date.setDate(date.getDate() - diff * 7);
        return date;
      }
      /***/

    },

    /***/
    "Xe8C":
    /*!******************************************************!*\
      !*** ./node_modules/positioning/dist/positioning.js ***!
      \******************************************************/

    /*! exports provided: Positioning, positionElements */

    /***/
    function Xe8C(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "Positioning", function () {
        return Positioning;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "positionElements", function () {
        return positionElements;
      }); // previous version:
      // https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js


      var Positioning =
      /** @class */
      function () {
        function Positioning() {}

        Positioning.prototype.getAllStyles = function (element) {
          return window.getComputedStyle(element);
        };

        Positioning.prototype.getStyle = function (element, prop) {
          return this.getAllStyles(element)[prop];
        };

        Positioning.prototype.isStaticPositioned = function (element) {
          return (this.getStyle(element, 'position') || 'static') === 'static';
        };

        Positioning.prototype.offsetParent = function (element) {
          var offsetParentEl = element.offsetParent || document.documentElement;

          while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {
            offsetParentEl = offsetParentEl.offsetParent;
          }

          return offsetParentEl || document.documentElement;
        };

        Positioning.prototype.position = function (element, round) {
          if (round === void 0) {
            round = true;
          }

          var elPosition;
          var parentOffset = {
            width: 0,
            height: 0,
            top: 0,
            bottom: 0,
            left: 0,
            right: 0
          };

          if (this.getStyle(element, 'position') === 'fixed') {
            elPosition = element.getBoundingClientRect();
            elPosition = {
              top: elPosition.top,
              bottom: elPosition.bottom,
              left: elPosition.left,
              right: elPosition.right,
              height: elPosition.height,
              width: elPosition.width
            };
          } else {
            var offsetParentEl = this.offsetParent(element);
            elPosition = this.offset(element, false);

            if (offsetParentEl !== document.documentElement) {
              parentOffset = this.offset(offsetParentEl, false);
            }

            parentOffset.top += offsetParentEl.clientTop;
            parentOffset.left += offsetParentEl.clientLeft;
          }

          elPosition.top -= parentOffset.top;
          elPosition.bottom -= parentOffset.top;
          elPosition.left -= parentOffset.left;
          elPosition.right -= parentOffset.left;

          if (round) {
            elPosition.top = Math.round(elPosition.top);
            elPosition.bottom = Math.round(elPosition.bottom);
            elPosition.left = Math.round(elPosition.left);
            elPosition.right = Math.round(elPosition.right);
          }

          return elPosition;
        };

        Positioning.prototype.offset = function (element, round) {
          if (round === void 0) {
            round = true;
          }

          var elBcr = element.getBoundingClientRect();
          var viewportOffset = {
            top: window.pageYOffset - document.documentElement.clientTop,
            left: window.pageXOffset - document.documentElement.clientLeft
          };
          var elOffset = {
            height: elBcr.height || element.offsetHeight,
            width: elBcr.width || element.offsetWidth,
            top: elBcr.top + viewportOffset.top,
            bottom: elBcr.bottom + viewportOffset.top,
            left: elBcr.left + viewportOffset.left,
            right: elBcr.right + viewportOffset.left
          };

          if (round) {
            elOffset.height = Math.round(elOffset.height);
            elOffset.width = Math.round(elOffset.width);
            elOffset.top = Math.round(elOffset.top);
            elOffset.bottom = Math.round(elOffset.bottom);
            elOffset.left = Math.round(elOffset.left);
            elOffset.right = Math.round(elOffset.right);
          }

          return elOffset;
        };
        /*
          Return false if the element to position is outside the viewport
        */


        Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {
          var _a = placement.split('-'),
              _b = _a[0],
              placementPrimary = _b === void 0 ? 'top' : _b,
              _c = _a[1],
              placementSecondary = _c === void 0 ? 'center' : _c;

          var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);
          var targetElStyles = this.getAllStyles(targetElement);
          var marginTop = parseFloat(targetElStyles.marginTop);
          var marginBottom = parseFloat(targetElStyles.marginBottom);
          var marginLeft = parseFloat(targetElStyles.marginLeft);
          var marginRight = parseFloat(targetElStyles.marginRight);
          var topPosition = 0;
          var leftPosition = 0;

          switch (placementPrimary) {
            case 'top':
              topPosition = hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom);
              break;

            case 'bottom':
              topPosition = hostElPosition.top + hostElPosition.height;
              break;

            case 'left':
              leftPosition = hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight);
              break;

            case 'right':
              leftPosition = hostElPosition.left + hostElPosition.width;
              break;
          }

          switch (placementSecondary) {
            case 'top':
              topPosition = hostElPosition.top;
              break;

            case 'bottom':
              topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;
              break;

            case 'left':
              leftPosition = hostElPosition.left;
              break;

            case 'right':
              leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;
              break;

            case 'center':
              if (placementPrimary === 'top' || placementPrimary === 'bottom') {
                leftPosition = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;
              } else {
                topPosition = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;
              }

              break;
          } /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix
          // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;


          targetElement.style.transform = "translate(" + Math.round(leftPosition) + "px, " + Math.round(topPosition) + "px)"; // Check if the targetElement is inside the viewport

          var targetElBCR = targetElement.getBoundingClientRect();
          var html = document.documentElement;
          var windowHeight = window.innerHeight || html.clientHeight;
          var windowWidth = window.innerWidth || html.clientWidth;
          return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth && targetElBCR.bottom <= windowHeight;
        };

        return Positioning;
      }();

      var placementSeparator = /\s+/;
      var positionService = new Positioning();
      /*
       * Accept the placement array and applies the appropriate placement dependent on the viewport.
       * Returns the applied placement.
       * In case of auto placement, placements are selected in order
       *   'top', 'bottom', 'left', 'right',
       *   'top-left', 'top-right',
       *   'bottom-left', 'bottom-right',
       *   'left-top', 'left-bottom',
       *   'right-top', 'right-bottom'.
       * */

      function positionElements(hostElement, targetElement, placement, appendToBody, baseClass) {
        var placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator);
        var allowedPlacements = ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom', 'right-top', 'right-bottom'];
        var classList = targetElement.classList;

        var addClassesToTarget = function addClassesToTarget(targetPlacement) {
          var _a = targetPlacement.split('-'),
              primary = _a[0],
              secondary = _a[1];

          var classes = [];

          if (baseClass) {
            classes.push(baseClass + "-" + primary);

            if (secondary) {
              classes.push(baseClass + "-" + primary + "-" + secondary);
            }

            classes.forEach(function (classname) {
              classList.add(classname);
            });
          }

          return classes;
        }; // Remove old placement classes to avoid issues


        if (baseClass) {
          allowedPlacements.forEach(function (placementToRemove) {
            classList.remove(baseClass + "-" + placementToRemove);
          });
        } // replace auto placement with other placements


        var hasAuto = placementVals.findIndex(function (val) {
          return val === 'auto';
        });

        if (hasAuto >= 0) {
          allowedPlacements.forEach(function (obj) {
            if (placementVals.find(function (val) {
              return val.search('^' + obj) !== -1;
            }) == null) {
              placementVals.splice(hasAuto++, 1, obj);
            }
          });
        } // coordinates where to position
        // Required for transform:


        var style = targetElement.style;
        style.position = 'absolute';
        style.top = '0';
        style.left = '0';
        style['will-change'] = 'transform';
        var testPlacement;
        var isInViewport = false;

        for (var _i = 0, placementVals_1 = placementVals; _i < placementVals_1.length; _i++) {
          testPlacement = placementVals_1[_i];
          var addedClasses = addClassesToTarget(testPlacement);

          if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {
            isInViewport = true;
            break;
          } // Remove the baseClasses for further calculation


          if (baseClass) {
            addedClasses.forEach(function (classname) {
              classList.remove(classname);
            });
          }
        }

        if (!isInViewport) {
          // If nothing match, the first placement is the default one
          testPlacement = placementVals[0];
          addClassesToTarget(testPlacement);
          positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);
        }

        return testPlacement;
      } //# sourceMappingURL=positioning.js.map

      /***/

    },

    /***/
    "Xep9":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/subDays/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function Xep9(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return subDays;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addDays/index.js */
      "9/EM");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name subDays
       * @category Day Helpers
       * @summary Subtract the specified number of days from the given date.
       *
       * @description
       * Subtract the specified number of days from the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of days to be subtracted
       * @returns {Date} the new date with the days subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract 10 days from 1 September 2014:
       * var result = subDays(new Date(2014, 8, 1), 10)
       * //=> Fri Aug 22 2014 00:00:00
       */


      function subDays(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
      }
      /***/

    },

    /***/
    "YIOq":
    /*!************************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js ***!
      \************************************************************************/

    /*! exports provided: default */

    /***/
    function YIOq(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../../addLeadingZeros/index.js */
      "+7QN");
      /*
       * |     | Unit                           |     | Unit                           |
       * |-----|--------------------------------|-----|--------------------------------|
       * |  a  | AM, PM                         |  A* |                                |
       * |  d  | Day of month                   |  D  |                                |
       * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
       * |  m  | Minute                         |  M  | Month                          |
       * |  s  | Second                         |  S  | Fraction of second             |
       * |  y  | Year (abs)                     |  Y  |                                |
       *
       * Letters marked by * are not implemented but reserved by Unicode standard.
       */


      var formatters = {
        // Year
        y: function y(date, token) {
          // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
          // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
          // |----------|-------|----|-------|-------|-------|
          // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
          // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
          // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
          // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
          // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
          var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

          var year = signedYear > 0 ? signedYear : 1 - signedYear;
          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(token === 'yy' ? year % 100 : year, token.length);
        },
        // Month
        M: function M(date, token) {
          var month = date.getUTCMonth();
          return token === 'M' ? String(month + 1) : Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(month + 1, 2);
        },
        // Day of the month
        d: function d(date, token) {
          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCDate(), token.length);
        },
        // AM or PM
        a: function a(date, token) {
          var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';

          switch (token) {
            case 'a':
            case 'aa':
            case 'aaa':
              return dayPeriodEnumValue.toUpperCase();

            case 'aaaaa':
              return dayPeriodEnumValue[0];

            case 'aaaa':
            default:
              return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
          }
        },
        // Hour [1-12]
        h: function h(date, token) {
          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCHours() % 12 || 12, token.length);
        },
        // Hour [0-23]
        H: function H(date, token) {
          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCHours(), token.length);
        },
        // Minute
        m: function m(date, token) {
          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCMinutes(), token.length);
        },
        // Second
        s: function s(date, token) {
          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCSeconds(), token.length);
        },
        // Fraction of second
        S: function S(date, token) {
          var numberOfDigits = token.length;
          var milliseconds = date.getUTCMilliseconds();
          var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(fractionalSeconds, token.length);
        }
      };
      /* harmony default export */

      __webpack_exports__["default"] = formatters;
      /***/
    },

    /***/
    "YOOs":
    /*!*************************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfYesterday/index.js ***!
      \*************************************************************/

    /*! exports provided: default */

    /***/
    function YOOs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfYesterday;
      });
      /**
       * @name startOfYesterday
       * @category Day Helpers
       * @summary Return the start of yesterday.
       * @pure false
       *
       * @description
       * Return the start of yesterday.
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @returns {Date} the start of yesterday
       *
       * @example
       * // If today is 6 October 2014:
       * var result = startOfYesterday()
       * //=> Sun Oct 5 2014 00:00:00
       */


      function startOfYesterday() {
        var now = new Date();
        var year = now.getFullYear();
        var month = now.getMonth();
        var day = now.getDate();
        var date = new Date(0);
        date.setFullYear(year, month, day - 1);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "YOv4":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfTomorrow/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function YOv4(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfTomorrow;
      });
      /**
       * @name endOfTomorrow
       * @category Day Helpers
       * @summary Return the end of tomorrow.
       * @pure false
       *
       * @description
       * Return the end of tomorrow.
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @returns {Date} the end of tomorrow
       *
       * @example
       * // If today is 6 October 2014:
       * var result = endOfTomorrow()
       * //=> Tue Oct 7 2014 23:59:59.999
       */


      function endOfTomorrow() {
        var now = new Date();
        var year = now.getFullYear();
        var month = now.getMonth();
        var day = now.getDate();
        var date = new Date(0);
        date.setFullYear(year, month, day + 1);
        date.setHours(23, 59, 59, 999);
        return date;
      }
      /***/

    },

    /***/
    "YTra":
    /*!*************************************************************!*\
      !*** ./node_modules/date-fns/esm/isWithinInterval/index.js ***!
      \*************************************************************/

    /*! exports provided: default */

    /***/
    function YTra(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isWithinInterval;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isWithinInterval
       * @category Interval Helpers
       * @summary Is the given date within the interval?
       *
       * @description
       * Is the given date within the interval? (Including start and end.)
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `isWithinRange` to `isWithinInterval`.
       *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
       *
       *   ```
       *   2.1.3
       *   time interval
       *   part of the time axis limited by two instants
       *   ```
       *
       *   Also, this function now accepts an object with `start` and `end` properties
       *   instead of two arguments as an interval.
       *   This function now throws `RangeError` if the start of the interval is after its end
       *   or if any date in the interval is `Invalid Date`.
       *
       *   ```javascript
       *   // Before v2.0.0
       *
       *   isWithinRange(
       *     new Date(2014, 0, 3),
       *     new Date(2014, 0, 1), new Date(2014, 0, 7)
       *   )
       *
       *   // v2.0.0 onward
       *
       *   isWithinInterval(
       *     new Date(2014, 0, 3),
       *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }
       *   )
       *   ```
       *
       * @param {Date|Number} date - the date to check
       * @param {Interval} interval - the interval to check
       * @returns {Boolean} the date is within the interval
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} The start of an interval cannot be after its end
       * @throws {RangeError} Date in interval cannot be `Invalid Date`
       *
       * @example
       * // For the date within the interval:
       * isWithinInterval(new Date(2014, 0, 3), {
       *   start: new Date(2014, 0, 1),
       *   end: new Date(2014, 0, 7)
       * })
       * //=> true
       *
       * @example
       * // For the date outside of the interval:
       * isWithinInterval(new Date(2014, 0, 10), {
       *   start: new Date(2014, 0, 1),
       *   end: new Date(2014, 0, 7)
       * })
       * //=> false
       *
       * @example
       * // For date equal to interval start:
       * isWithinInterval(date, { start, end: date }) // => true
       *
       * @example
       * // For date equal to interval end:
       * isWithinInterval(date, { start: date, end }) // => true
       */


      function isWithinInterval(dirtyDate, dirtyInterval) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var interval = dirtyInterval || {};
        var time = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getTime();
        var startTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.start).getTime();
        var endTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

        if (!(startTime <= endTime)) {
          throw new RangeError('Invalid interval');
        }

        return time >= startTime && time <= endTime;
      }
      /***/

    },

    /***/
    "YdWM":
    /*!******************************************************************!*\
      !*** ./node_modules/date-fns/esm/eachWeekendOfInterval/index.js ***!
      \******************************************************************/

    /*! exports provided: default */

    /***/
    function YdWM(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return eachWeekendOfInterval;
      });
      /* harmony import */


      var _eachDayOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../eachDayOfInterval/index.js */
      "/rh5");
      /* harmony import */


      var _isSunday_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../isSunday/index.js */
      "hW07");
      /* harmony import */


      var _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../isWeekend/index.js */
      "gLRL");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name eachWeekendOfInterval
       * @category Interval Helpers
       * @summary List all the Saturdays and Sundays in the given date interval.
       *
       * @description
       * Get all the Saturdays and Sundays in the given date interval.
       *
       * @param {Interval} interval - the given interval. See [Interval]{@link docs/types/Interval}
       * @returns {Date[]} an array containing all the Saturdays and Sundays
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} The start of an interval cannot be after its end
       * @throws {RangeError} Date in interval cannot be `Invalid Date`
       *
       * @example
       * // Lists all Saturdays and Sundays in the given date interval
       * var result = eachWeekendOfInterval({
       *   start: new Date(2018, 8, 17),
       *   end: new Date(2018, 8, 30)
       * })
       * //=> [
       * //   Sat Sep 22 2018 00:00:00,
       * //   Sun Sep 23 2018 00:00:00,
       * //   Sat Sep 29 2018 00:00:00,
       * //   Sun Sep 30 2018 00:00:00
       * // ]
       */


      function eachWeekendOfInterval(interval) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var dateInterval = Object(_eachDayOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval);
        var weekends = [];
        var index = 0;

        while (index < dateInterval.length) {
          var date = dateInterval[index++];

          if (Object(_isWeekend_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date)) {
            weekends.push(date);
            if (Object(_isSunday_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date)) index = index + 5;
          }
        }

        return weekends;
      }
      /***/

    },

    /***/
    "YozJ":
    /*!*******************************************************!*\
      !*** ./node_modules/@angular/common/locales/es-BO.js ***!
      \*******************************************************/

    /*! no static exports found */

    /***/
    function YozJ(module, exports, __webpack_require__) {
      var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
      /**
      * @license
      * Copyright Google LLC All Rights Reserved.
      *
      * Use of this source code is governed by an MIT-style license that can be
      * found in the LICENSE file at https://angular.io/license
      */


      (function (factory) {
        if (true && typeof module.exports === "object") {
          var v = factory(null, exports);
          if (v !== undefined) module.exports = v;
        } else if (true) {
          !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        }
      })(function (require, exports) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true
        }); // THIS CODE IS GENERATED - DO NOT MODIFY
        // See angular/tools/gulp-tasks/cldr/extract.js

        var u = undefined;

        function plural(n) {
          if (n === 1) return 1;
          return 5;
        }

        exports["default"] = ['es-BO', [['a. m.', 'p. m.'], u, u], u, [['d', 'l', 'm', 'm', 'j', 'v', 's'], ['dom.', 'lun.', 'mar.', 'mié.', 'jue.', 'vie.', 'sáb.'], ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'], ['DO', 'LU', 'MA', 'MI', 'JU', 'VI', 'SA']], [['D', 'L', 'M', 'M', 'J', 'V', 'S'], ['dom.', 'lun.', 'mar.', 'mié.', 'jue.', 'vie.', 'sáb.'], ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'], ['DO', 'LU', 'MA', 'MI', 'JU', 'VI', 'SA']], [['E', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'], ['ene.', 'feb.', 'mar.', 'abr.', 'may.', 'jun.', 'jul.', 'ago.', 'sep.', 'oct.', 'nov.', 'dic.'], ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre']], u, [['a. C.', 'd. C.'], u, ['antes de Cristo', 'después de Cristo']], 1, [6, 0], ['d/M/yy', 'd MMM \'de\' y', 'd \'de\' MMMM \'de\' y', 'EEEE, d \'de\' MMMM \'de\' y'], ['HH:mm', 'HH:mm:ss', 'HH:mm:ss z', 'HH:mm:ss zzzz'], ['{1} {0}', u, '{1} \'a\' \'las\' {0}', u], [',', '.', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'], ['#,##0.###', '#,##0 %', '¤#,##0.00', '#E0'], 'BOB', 'Bs', 'boliviano', {
          'AUD': [u, '$'],
          'BOB': ['Bs'],
          'BRL': [u, 'R$'],
          'CAD': [u, '$'],
          'CNY': [u, '¥'],
          'ESP': ['₧'],
          'EUR': [u, '€'],
          'FKP': [u, 'FK£'],
          'GBP': [u, '£'],
          'HKD': [u, '$'],
          'ILS': [u, '₪'],
          'INR': [u, '₹'],
          'JPY': [u, '¥'],
          'KRW': [u, '₩'],
          'MXN': [u, '$'],
          'NZD': [u, '$'],
          'RON': [u, 'L'],
          'SSP': [u, 'SD£'],
          'SYP': [u, 'S£'],
          'TWD': [u, 'NT$'],
          'USD': [u, '$'],
          'VEF': [u, 'BsF'],
          'VND': [u, '₫'],
          'XAF': [],
          'XCD': [u, '$'],
          'XOF': []
        }, 'ltr', plural];
      }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXMtQk8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb21tb24vbG9jYWxlcy9lcy1CTy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7Ozs7Ozs7Ozs7OztJQUVILHlDQUF5QztJQUN6QywrQ0FBK0M7SUFFL0MsSUFBTSxDQUFDLEdBQUcsU0FBUyxDQUFDO0lBRXBCLFNBQVMsTUFBTSxDQUFDLENBQVM7UUFDdkIsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3RCLE9BQU8sQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVELGtCQUFlO1FBQ2IsT0FBTztRQUNQLENBQUMsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMxQixDQUFDO1FBQ0Q7WUFDRSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDO1lBQzdGLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsUUFBUSxDQUFDO1lBQzFFLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDO1NBQzNDO1FBQ0Q7WUFDRSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDO1lBQzdGLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsUUFBUSxDQUFDO1lBQzFFLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDO1NBQzNDO1FBQ0Q7WUFDRSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDO1lBQzVEO2dCQUNFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTTthQUMvRjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsWUFBWTtnQkFDdEYsU0FBUyxFQUFFLFdBQVcsRUFBRSxXQUFXO2FBQ3BDO1NBQ0Y7UUFDRCxDQUFDO1FBQ0QsQ0FBQyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO1FBQ2pFLENBQUM7UUFDRCxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDTixDQUFDLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRSx3QkFBd0IsRUFBRSw4QkFBOEIsQ0FBQztRQUN0RixDQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLGVBQWUsQ0FBQztRQUNwRCxDQUFDLFNBQVMsRUFBRSxDQUFDLEVBQUUsdUJBQXVCLEVBQUUsQ0FBQyxDQUFDO1FBQzFDLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxHQUFHLENBQUM7UUFDOUQsQ0FBQyxXQUFXLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLENBQUM7UUFDNUMsS0FBSztRQUNMLElBQUk7UUFDSixXQUFXO1FBQ1g7WUFDRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDO1lBQ2YsS0FBSyxFQUFFLENBQUMsSUFBSSxDQUFDO1lBQ2IsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQztZQUNoQixLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDO1lBQ2YsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztZQUNmLEtBQUssRUFBRSxDQUFDLEdBQUcsQ0FBQztZQUNaLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUM7WUFDZixLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDO1lBQ2pCLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUM7WUFDZixLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDO1lBQ2YsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztZQUNmLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUM7WUFDZixLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDO1lBQ2YsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztZQUNmLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUM7WUFDZixLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDO1lBQ2YsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztZQUNmLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUM7WUFDakIsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQztZQUNoQixLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDO1lBQ2pCLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUM7WUFDZixLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDO1lBQ2pCLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUM7WUFDZixLQUFLLEVBQUUsRUFBRTtZQUNULEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUM7WUFDZixLQUFLLEVBQUUsRUFBRTtTQUNWO1FBQ0QsS0FBSztRQUNMLE1BQU07S0FDUCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbi8vIFRISVMgQ09ERSBJUyBHRU5FUkFURUQgLSBETyBOT1QgTU9ESUZZXG4vLyBTZWUgYW5ndWxhci90b29scy9ndWxwLXRhc2tzL2NsZHIvZXh0cmFjdC5qc1xuXG5jb25zdCB1ID0gdW5kZWZpbmVkO1xuXG5mdW5jdGlvbiBwbHVyYWwobjogbnVtYmVyKTogbnVtYmVyIHtcbiAgaWYgKG4gPT09IDEpIHJldHVybiAxO1xuICByZXR1cm4gNTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgW1xuICAnZXMtQk8nLFxuICBbWydhLsKgbS4nLCAncC7CoG0uJ10sIHUsIHVdLFxuICB1LFxuICBbXG4gICAgWydkJywgJ2wnLCAnbScsICdtJywgJ2onLCAndicsICdzJ10sIFsnZG9tLicsICdsdW4uJywgJ21hci4nLCAnbWnDqS4nLCAnanVlLicsICd2aWUuJywgJ3PDoWIuJ10sXG4gICAgWydkb21pbmdvJywgJ2x1bmVzJywgJ21hcnRlcycsICdtacOpcmNvbGVzJywgJ2p1ZXZlcycsICd2aWVybmVzJywgJ3PDoWJhZG8nXSxcbiAgICBbJ0RPJywgJ0xVJywgJ01BJywgJ01JJywgJ0pVJywgJ1ZJJywgJ1NBJ11cbiAgXSxcbiAgW1xuICAgIFsnRCcsICdMJywgJ00nLCAnTScsICdKJywgJ1YnLCAnUyddLCBbJ2RvbS4nLCAnbHVuLicsICdtYXIuJywgJ21pw6kuJywgJ2p1ZS4nLCAndmllLicsICdzw6FiLiddLFxuICAgIFsnZG9taW5nbycsICdsdW5lcycsICdtYXJ0ZXMnLCAnbWnDqXJjb2xlcycsICdqdWV2ZXMnLCAndmllcm5lcycsICdzw6FiYWRvJ10sXG4gICAgWydETycsICdMVScsICdNQScsICdNSScsICdKVScsICdWSScsICdTQSddXG4gIF0sXG4gIFtcbiAgICBbJ0UnLCAnRicsICdNJywgJ0EnLCAnTScsICdKJywgJ0onLCAnQScsICdTJywgJ08nLCAnTicsICdEJ10sXG4gICAgW1xuICAgICAgJ2VuZS4nLCAnZmViLicsICdtYXIuJywgJ2Fici4nLCAnbWF5LicsICdqdW4uJywgJ2p1bC4nLCAnYWdvLicsICdzZXAuJywgJ29jdC4nLCAnbm92LicsICdkaWMuJ1xuICAgIF0sXG4gICAgW1xuICAgICAgJ2VuZXJvJywgJ2ZlYnJlcm8nLCAnbWFyem8nLCAnYWJyaWwnLCAnbWF5bycsICdqdW5pbycsICdqdWxpbycsICdhZ29zdG8nLCAnc2VwdGllbWJyZScsXG4gICAgICAnb2N0dWJyZScsICdub3ZpZW1icmUnLCAnZGljaWVtYnJlJ1xuICAgIF1cbiAgXSxcbiAgdSxcbiAgW1snYS4gQy4nLCAnZC4gQy4nXSwgdSwgWydhbnRlcyBkZSBDcmlzdG8nLCAnZGVzcHXDqXMgZGUgQ3Jpc3RvJ11dLFxuICAxLFxuICBbNiwgMF0sXG4gIFsnZC9NL3l5JywgJ2QgTU1NIFxcJ2RlXFwnIHknLCAnZCBcXCdkZVxcJyBNTU1NIFxcJ2RlXFwnIHknLCAnRUVFRSwgZCBcXCdkZVxcJyBNTU1NIFxcJ2RlXFwnIHknXSxcbiAgWydISDptbScsICdISDptbTpzcycsICdISDptbTpzcyB6JywgJ0hIOm1tOnNzIHp6enonXSxcbiAgWyd7MX0gezB9JywgdSwgJ3sxfSBcXCdhXFwnIFxcJ2xhc1xcJyB7MH0nLCB1XSxcbiAgWycsJywgJy4nLCAnOycsICclJywgJysnLCAnLScsICdFJywgJ8OXJywgJ+KAsCcsICfiiJ4nLCAnTmFOJywgJzonXSxcbiAgWycjLCMjMC4jIyMnLCAnIywjIzDCoCUnLCAnwqQjLCMjMC4wMCcsICcjRTAnXSxcbiAgJ0JPQicsXG4gICdCcycsXG4gICdib2xpdmlhbm8nLFxuICB7XG4gICAgJ0FVRCc6IFt1LCAnJCddLFxuICAgICdCT0InOiBbJ0JzJ10sXG4gICAgJ0JSTCc6IFt1LCAnUiQnXSxcbiAgICAnQ0FEJzogW3UsICckJ10sXG4gICAgJ0NOWSc6IFt1LCAnwqUnXSxcbiAgICAnRVNQJzogWyfigqcnXSxcbiAgICAnRVVSJzogW3UsICfigqwnXSxcbiAgICAnRktQJzogW3UsICdGS8KjJ10sXG4gICAgJ0dCUCc6IFt1LCAnwqMnXSxcbiAgICAnSEtEJzogW3UsICckJ10sXG4gICAgJ0lMUyc6IFt1LCAn4oKqJ10sXG4gICAgJ0lOUic6IFt1LCAn4oK5J10sXG4gICAgJ0pQWSc6IFt1LCAnwqUnXSxcbiAgICAnS1JXJzogW3UsICfigqknXSxcbiAgICAnTVhOJzogW3UsICckJ10sXG4gICAgJ05aRCc6IFt1LCAnJCddLFxuICAgICdST04nOiBbdSwgJ0wnXSxcbiAgICAnU1NQJzogW3UsICdTRMKjJ10sXG4gICAgJ1NZUCc6IFt1LCAnU8KjJ10sXG4gICAgJ1RXRCc6IFt1LCAnTlQkJ10sXG4gICAgJ1VTRCc6IFt1LCAnJCddLFxuICAgICdWRUYnOiBbdSwgJ0JzRiddLFxuICAgICdWTkQnOiBbdSwgJ+KCqyddLFxuICAgICdYQUYnOiBbXSxcbiAgICAnWENEJzogW3UsICckJ10sXG4gICAgJ1hPRic6IFtdXG4gIH0sXG4gICdsdHInLFxuICBwbHVyYWxcbl07XG4iXX0=

      /***/

    },

    /***/
    "a+am":
    /*!*************************************************************************!*\
      !*** ./src/app/modules/comercial/agenda/detalhes/detalhes.component.ts ***!
      \*************************************************************************/

    /*! exports provided: ComercialAgendaDetalhesComponent */

    /***/
    function aAm(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ComercialAgendaDetalhesComponent", function () {
        return ComercialAgendaDetalhesComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_detalhes_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./detalhes.component.html */
      "TPT/");
      /* harmony import */


      var _detalhes_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./detalhes.component.scss */
      "aZON");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/router */
      "iInd");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var src_app_shared_services_core_pnotify_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! src/app/shared/services/core/pnotify.service */
      "g+W+");
      /* harmony import */


      var src_app_shared_services_core_date_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! src/app/shared/services/core/date.service */
      "Rk3r");
      /* harmony import */


      var src_app_shared_modules_confirm_modal_confirm_modal_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! src/app/shared/modules/confirm-modal/confirm-modal.service */
      "FOez");
      /* harmony import */


      var src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! src/app/modules/comercial/agenda/agenda.service */
      "73eH");
      /* harmony import */


      var src_app_shared_services_requests_atividades_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! src/app/shared/services/requests/atividades.service */
      "0PD5");
      /* harmony import */


      var src_app_shared_services_core_title_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! src/app/shared/services/core/title.service */
      "dNnS"); // Services


      var ComercialAgendaDetalhesComponent = /*#__PURE__*/function () {
        function ComercialAgendaDetalhesComponent(activatedRoute, atividadesService, router, dateService, agendaService, confirmModalService, pnotifyService, titleService) {
          _classCallCheck(this, ComercialAgendaDetalhesComponent);

          this.activatedRoute = activatedRoute;
          this.atividadesService = atividadesService;
          this.router = router;
          this.dateService = dateService;
          this.agendaService = agendaService;
          this.confirmModalService = confirmModalService;
          this.pnotifyService = pnotifyService;
          this.titleService = titleService;
          this.breadCrumbTree = [{
            descricao: 'Home',
            routerLink: '/comercial/home'
          }, {
            descricao: 'Agenda',
            routerLink: "/comercial/agenda/compromissos"
          }, {
            descricao: 'Detalles de cita'
          }];
          this.detalhes = [];
          this.pnotifyService.getPNotify();
        }

        _createClass(ComercialAgendaDetalhesComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.registrarAcesso();
            this.titleService.setTitle('Detalles de cita');
            var detalhes = this.activatedRoute.snapshot.data['detalhes']['result'];
            var inicio = new Date(detalhes['start']);
            var fim = new Date(detalhes['end']);
            this.detalhes.id = detalhes.id;
            this.detalhes.title = detalhes.title;
            this.detalhes.codClient = detalhes.codClient;
            this.detalhes.motivo = detalhes.motivo;
            this.detalhes.client = detalhes.client;
            this.detalhes.formContactDesc = detalhes.formContactDesc;
            this.detalhes.typeContactDesc = detalhes.typeContactDesc;
            this.detalhes.allDay = detalhes.allDay;
            this.detalhes.description = detalhes.description != null ? detalhes.description.replace(/(?:\r\n|\r|\n)/g, '<br />') : null;

            if (this.detalhes.allDay === true) {
              this.detalhes.fullDate = "".concat(this.dateService.getFullDate(inicio, fim, false), " (Dia completo)");
            } else {
              if (this.dateService.sameDay(inicio, fim)) {
                this.detalhes.fullDate = this.dateService.getFullDate(inicio, fim);
              } else {}
            }
          }
        }, {
          key: "registrarAcesso",
          value: function registrarAcesso() {
            this.atividadesService.registrarAcesso().subscribe();
          }
        }, {
          key: "onEdit",
          value: function onEdit(detalhes) {
            this.router.navigate(['../../editar', detalhes.id], {
              relativeTo: this.activatedRoute
            });
          }
        }, {
          key: "onReschedule",
          value: function onReschedule(detalhes) {
            this.router.navigate(['../../reagendar', detalhes.id], {
              relativeTo: this.activatedRoute
            });
          }
        }, {
          key: "onDelete",
          value: function onDelete(detalhes) {
            var _this12 = this;

            var confirm$ = this.confirmModalService.showConfirm('Borrar', 'Confirmar borrado', 'Desea realmente borrar la cita?', 'Cancelar', 'Confirmar');
            confirm$.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["switchMap"])(function (result) {
              return result ? _this12.agendaService.deleteCompromisso(detalhes.id) : rxjs__WEBPACK_IMPORTED_MODULE_6__["EMPTY"];
            })).subscribe({
              next: function next(success) {
                _this12.pnotifyService.success('Cita borrada con exito!');

                _this12.router.navigate(['../../compromissos'], {
                  relativeTo: _this12.activatedRoute
                });
              },
              error: function error(_error2) {
                _this12.pnotifyService.error('Error al borrar, intente nuevamente!');
              }
            });
          }
        }]);

        return ComercialAgendaDetalhesComponent;
      }();

      ComercialAgendaDetalhesComponent.ctorParameters = function () {
        return [{
          type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
        }, {
          type: src_app_shared_services_requests_atividades_service__WEBPACK_IMPORTED_MODULE_11__["AtividadesService"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
        }, {
          type: src_app_shared_services_core_date_service__WEBPACK_IMPORTED_MODULE_8__["DateService"]
        }, {
          type: src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_10__["ComercialAgendaService"]
        }, {
          type: src_app_shared_modules_confirm_modal_confirm_modal_service__WEBPACK_IMPORTED_MODULE_9__["ConfirmModalService"]
        }, {
          type: src_app_shared_services_core_pnotify_service__WEBPACK_IMPORTED_MODULE_7__["PNotifyService"]
        }, {
          type: src_app_shared_services_core_title_service__WEBPACK_IMPORTED_MODULE_12__["TitleService"]
        }];
      };

      ComercialAgendaDetalhesComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'comercial-agenda-detalhes',
        template: _raw_loader_detalhes_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_detalhes_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], src_app_shared_services_requests_atividades_service__WEBPACK_IMPORTED_MODULE_11__["AtividadesService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], src_app_shared_services_core_date_service__WEBPACK_IMPORTED_MODULE_8__["DateService"], src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_10__["ComercialAgendaService"], src_app_shared_modules_confirm_modal_confirm_modal_service__WEBPACK_IMPORTED_MODULE_9__["ConfirmModalService"], src_app_shared_services_core_pnotify_service__WEBPACK_IMPORTED_MODULE_7__["PNotifyService"], src_app_shared_services_core_title_service__WEBPACK_IMPORTED_MODULE_12__["TitleService"]])], ComercialAgendaDetalhesComponent);
      /***/
    },

    /***/
    "a3h9":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/subMinutes/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function a3h9(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return subMinutes;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addMinutes_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addMinutes/index.js */
      "IYaI");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name subMinutes
       * @category Minute Helpers
       * @summary Subtract the specified number of minutes from the given date.
       *
       * @description
       * Subtract the specified number of minutes from the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of minutes to be subtracted
       * @returns {Date} the new date with the minutes subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract 30 minutes from 10 July 2014 12:00:00:
       * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)
       * //=> Thu Jul 10 2014 11:30:00
       */


      function subMinutes(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addMinutes_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
      }
      /***/

    },

    /***/
    "a7HJ":
    /*!*****************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInQuarters/index.js ***!
      \*****************************************************************/

    /*! exports provided: default */

    /***/
    function a7HJ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInQuarters;
      });
      /* harmony import */


      var _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../differenceInMonths/index.js */
      "AkX2");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInQuarters
       * @category Quarter Helpers
       * @summary Get the number of full quarters between the given dates.
       *
       * @description
       * Get the number of full quarters between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of full quarters
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many full quarters are between 31 December 2013 and 2 July 2014?
       * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))
       * //=> 2
       */


      function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var diff = Object(_differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / 3;
        return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
      }
      /***/

    },

    /***/
    "aZON":
    /*!***************************************************************************!*\
      !*** ./src/app/modules/comercial/agenda/detalhes/detalhes.component.scss ***!
      \***************************************************************************/

    /*! exports provided: default */

    /***/
    function aZON(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FnZW5kYS9kZXRhbGhlcy9kZXRhbGhlcy5jb21wb25lbnQuc2NzcyJ9 */";
      /***/
    },

    /***/
    "aakf":
    /*!*********************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInBusinessDays/index.js ***!
      \*********************************************************************/

    /*! exports provided: default */

    /***/
    function aakf(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInBusinessDays;
      });
      /* harmony import */


      var _isValid_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isValid/index.js */
      "Se/U");
      /* harmony import */


      var _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../isWeekend/index.js */
      "gLRL");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../differenceInCalendarDays/index.js */
      "gXqy");
      /* harmony import */


      var _addDays_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../addDays/index.js */
      "9/EM");
      /* harmony import */


      var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../isSameDay/index.js */
      "G6Tw");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInBusinessDays
       * @category Day Helpers
       * @summary Get the number of business days between the given dates.
       *
       * @description
       * Get the number of business day periods between the given dates.
       * Business days being days that arent in the weekend.
       * Like `differenceInCalendarDays`, the function removes the times from
       * the dates before calculating the difference.
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of business days
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many business days are between
       * // 10 January 2014 and 20 July 2014?
       * var result = differenceInBusinessDays(
       *   new Date(2014, 6, 20),
       *   new Date(2014, 0, 10)
       * )
       * //=> 136
       */


      function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDateRight);
        if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateLeft) || !Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateRight)) return new Date(NaN);
        var calendarDifference = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dateLeft, dateRight);
        var sign = calendarDifference < 0 ? -1 : 1;
        var weeks = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(calendarDifference / 7);
        var result = weeks * 5;
        dateRight = Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week

        while (!Object(_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(dateLeft, dateRight)) {
          // sign is used to account for both negative and positive differences
          result += Object(_isWeekend_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateRight) ? 0 : sign;
          dateRight = Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dateRight, sign);
        }

        return result === 0 ? 0 : result;
      }
      /***/

    },

    /***/
    "accU":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/getSeconds/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function accU(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getSeconds;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getSeconds
       * @category Second Helpers
       * @summary Get the seconds of the given date.
       *
       * @description
       * Get the seconds of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the seconds
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Get the seconds of 29 February 2012 11:45:05.123:
       * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))
       * //=> 5
       */


      function getSeconds(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var seconds = date.getSeconds();
        return seconds;
      }
      /***/

    },

    /***/
    "aetl":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfWeek/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function aetl(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfWeek;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name startOfWeek
       * @category Week Helpers
       * @summary Return the start of a week for the given date.
       *
       * @description
       * Return the start of a week for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @returns {Date} the start of a week
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // The start of a week for 2 September 2014 11:55:00:
       * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Sun Aug 31 2014 00:00:00
       *
       * @example
       * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
       * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
       * //=> Mon Sep 01 2014 00:00:00
       */


      function startOfWeek(dirtyDate, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
        }

        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var day = date.getDay();
        var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
        date.setDate(date.getDate() - diff);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "agoU":
    /*!*********************************************************************!*\
      !*** ./node_modules/calendar-utils/date-adapters/date-fns/index.js ***!
      \*********************************************************************/

    /*! no static exports found */

    /***/
    function agoU(module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var date_fns_1 = __webpack_require__(
      /*! date-fns */
      "b/SL");

      function adapterFactory() {
        return {
          addDays: date_fns_1.addDays,
          addHours: date_fns_1.addHours,
          addMinutes: date_fns_1.addMinutes,
          addSeconds: date_fns_1.addSeconds,
          differenceInDays: date_fns_1.differenceInDays,
          differenceInMinutes: date_fns_1.differenceInMinutes,
          differenceInSeconds: date_fns_1.differenceInSeconds,
          endOfDay: date_fns_1.endOfDay,
          endOfMonth: date_fns_1.endOfMonth,
          endOfWeek: date_fns_1.endOfWeek,
          getDay: date_fns_1.getDay,
          getMonth: date_fns_1.getMonth,
          isSameDay: date_fns_1.isSameDay,
          isSameMonth: date_fns_1.isSameMonth,
          isSameSecond: date_fns_1.isSameSecond,
          max: date_fns_1.max,
          setHours: date_fns_1.setHours,
          setMinutes: date_fns_1.setMinutes,
          startOfDay: date_fns_1.startOfDay,
          startOfMinute: date_fns_1.startOfMinute,
          startOfMonth: date_fns_1.startOfMonth,
          startOfWeek: date_fns_1.startOfWeek,
          getHours: date_fns_1.getHours,
          getMinutes: date_fns_1.getMinutes
        };
      }

      exports.adapterFactory = adapterFactory; //# sourceMappingURL=index.js.map

      /***/
    },

    /***/
    "b/SL":
    /*!********************************************!*\
      !*** ./node_modules/date-fns/esm/index.js ***!
      \********************************************/

    /*! exports provided: add, addBusinessDays, addDays, addHours, addISOWeekYears, addMilliseconds, addMinutes, addMonths, addQuarters, addSeconds, addWeeks, addYears, areIntervalsOverlapping, closestIndexTo, closestTo, compareAsc, compareDesc, differenceInBusinessDays, differenceInCalendarDays, differenceInCalendarISOWeekYears, differenceInCalendarISOWeeks, differenceInCalendarMonths, differenceInCalendarQuarters, differenceInCalendarWeeks, differenceInCalendarYears, differenceInDays, differenceInHours, differenceInISOWeekYears, differenceInMilliseconds, differenceInMinutes, differenceInMonths, differenceInQuarters, differenceInSeconds, differenceInWeeks, differenceInYears, eachDayOfInterval, eachMonthOfInterval, eachWeekOfInterval, eachWeekendOfInterval, eachWeekendOfMonth, eachWeekendOfYear, eachYearOfInterval, endOfDay, endOfDecade, endOfHour, endOfISOWeek, endOfISOWeekYear, endOfMinute, endOfMonth, endOfQuarter, endOfSecond, endOfToday, endOfTomorrow, endOfWeek, endOfYear, endOfYesterday, format, formatDistance, formatDistanceStrict, formatDistanceToNow, formatISO, formatISO9075, formatRFC3339, formatRFC7231, formatRelative, fromUnixTime, getDate, getDay, getDayOfYear, getDaysInMonth, getDaysInYear, getDecade, getHours, getISODay, getISOWeek, getISOWeekYear, getISOWeeksInYear, getMilliseconds, getMinutes, getMonth, getOverlappingDaysInIntervals, getQuarter, getSeconds, getTime, getUnixTime, getWeek, getWeekOfMonth, getWeekYear, getWeeksInMonth, getYear, isAfter, isBefore, isDate, isEqual, isExists, isFirstDayOfMonth, isFriday, isFuture, isLastDayOfMonth, isLeapYear, isMonday, isPast, isSameDay, isSameHour, isSameISOWeek, isSameISOWeekYear, isSameMinute, isSameMonth, isSameQuarter, isSameSecond, isSameWeek, isSameYear, isSaturday, isSunday, isThisHour, isThisISOWeek, isThisMinute, isThisMonth, isThisQuarter, isThisSecond, isThisWeek, isThisYear, isThursday, isToday, isTomorrow, isTuesday, isValid, isWednesday, isWeekend, isWithinInterval, isYesterday, lastDayOfDecade, lastDayOfISOWeek, lastDayOfISOWeekYear, lastDayOfMonth, lastDayOfQuarter, lastDayOfWeek, lastDayOfYear, lightFormat, max, min, parse, parseISO, parseJSON, roundToNearestMinutes, set, setDate, setDay, setDayOfYear, setHours, setISODay, setISOWeek, setISOWeekYear, setMilliseconds, setMinutes, setMonth, setQuarter, setSeconds, setWeek, setWeekYear, setYear, startOfDay, startOfDecade, startOfHour, startOfISOWeek, startOfISOWeekYear, startOfMinute, startOfMonth, startOfQuarter, startOfSecond, startOfToday, startOfTomorrow, startOfWeek, startOfWeekYear, startOfYear, startOfYesterday, sub, subBusinessDays, subDays, subHours, subISOWeekYears, subMilliseconds, subMinutes, subMonths, subQuarters, subSeconds, subWeeks, subYears, toDate, maxTime, minTime */

    /***/
    function bSL(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _add_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./add/index.js */
      "IjAw");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "add", function () {
        return _add_index_js__WEBPACK_IMPORTED_MODULE_0__["default"];
      });
      /* harmony import */


      var _addBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./addBusinessDays/index.js */
      "83R2");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "addBusinessDays", function () {
        return _addBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"];
      });
      /* harmony import */


      var _addDays_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./addDays/index.js */
      "9/EM");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "addDays", function () {
        return _addDays_index_js__WEBPACK_IMPORTED_MODULE_2__["default"];
      });
      /* harmony import */


      var _addHours_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./addHours/index.js */
      "Da6A");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "addHours", function () {
        return _addHours_index_js__WEBPACK_IMPORTED_MODULE_3__["default"];
      });
      /* harmony import */


      var _addISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./addISOWeekYears/index.js */
      "GP2A");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "addISOWeekYears", function () {
        return _addISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_4__["default"];
      });
      /* harmony import */


      var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./addMilliseconds/index.js */
      "pl0G");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "addMilliseconds", function () {
        return _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__["default"];
      });
      /* harmony import */


      var _addMinutes_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./addMinutes/index.js */
      "IYaI");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "addMinutes", function () {
        return _addMinutes_index_js__WEBPACK_IMPORTED_MODULE_6__["default"];
      });
      /* harmony import */


      var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./addMonths/index.js */
      "dLU1");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "addMonths", function () {
        return _addMonths_index_js__WEBPACK_IMPORTED_MODULE_7__["default"];
      });
      /* harmony import */


      var _addQuarters_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./addQuarters/index.js */
      "tfX3");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "addQuarters", function () {
        return _addQuarters_index_js__WEBPACK_IMPORTED_MODULE_8__["default"];
      });
      /* harmony import */


      var _addSeconds_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ./addSeconds/index.js */
      "Ctv7");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "addSeconds", function () {
        return _addSeconds_index_js__WEBPACK_IMPORTED_MODULE_9__["default"];
      });
      /* harmony import */


      var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ./addWeeks/index.js */
      "r4sE");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "addWeeks", function () {
        return _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_10__["default"];
      });
      /* harmony import */


      var _addYears_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ./addYears/index.js */
      "zbbA");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "addYears", function () {
        return _addYears_index_js__WEBPACK_IMPORTED_MODULE_11__["default"];
      });
      /* harmony import */


      var _areIntervalsOverlapping_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! ./areIntervalsOverlapping/index.js */
      "26Ho");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "areIntervalsOverlapping", function () {
        return _areIntervalsOverlapping_index_js__WEBPACK_IMPORTED_MODULE_12__["default"];
      });
      /* harmony import */


      var _closestIndexTo_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ./closestIndexTo/index.js */
      "wigk");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "closestIndexTo", function () {
        return _closestIndexTo_index_js__WEBPACK_IMPORTED_MODULE_13__["default"];
      });
      /* harmony import */


      var _closestTo_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! ./closestTo/index.js */
      "oYTe");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "closestTo", function () {
        return _closestTo_index_js__WEBPACK_IMPORTED_MODULE_14__["default"];
      });
      /* harmony import */


      var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! ./compareAsc/index.js */
      "JhOC");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "compareAsc", function () {
        return _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_15__["default"];
      });
      /* harmony import */


      var _compareDesc_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! ./compareDesc/index.js */
      "fePA");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "compareDesc", function () {
        return _compareDesc_index_js__WEBPACK_IMPORTED_MODULE_16__["default"];
      });
      /* harmony import */


      var _differenceInBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! ./differenceInBusinessDays/index.js */
      "aakf");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInBusinessDays", function () {
        return _differenceInBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_17__["default"];
      });
      /* harmony import */


      var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
      /*! ./differenceInCalendarDays/index.js */
      "gXqy");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInCalendarDays", function () {
        return _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_18__["default"];
      });
      /* harmony import */


      var _differenceInCalendarISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
      /*! ./differenceInCalendarISOWeekYears/index.js */
      "3zlk");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInCalendarISOWeekYears", function () {
        return _differenceInCalendarISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_19__["default"];
      });
      /* harmony import */


      var _differenceInCalendarISOWeeks_index_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
      /*! ./differenceInCalendarISOWeeks/index.js */
      "Havk");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInCalendarISOWeeks", function () {
        return _differenceInCalendarISOWeeks_index_js__WEBPACK_IMPORTED_MODULE_20__["default"];
      });
      /* harmony import */


      var _differenceInCalendarMonths_index_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
      /*! ./differenceInCalendarMonths/index.js */
      "pvlY");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInCalendarMonths", function () {
        return _differenceInCalendarMonths_index_js__WEBPACK_IMPORTED_MODULE_21__["default"];
      });
      /* harmony import */


      var _differenceInCalendarQuarters_index_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
      /*! ./differenceInCalendarQuarters/index.js */
      "3nag");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInCalendarQuarters", function () {
        return _differenceInCalendarQuarters_index_js__WEBPACK_IMPORTED_MODULE_22__["default"];
      });
      /* harmony import */


      var _differenceInCalendarWeeks_index_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
      /*! ./differenceInCalendarWeeks/index.js */
      "/Lp+");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInCalendarWeeks", function () {
        return _differenceInCalendarWeeks_index_js__WEBPACK_IMPORTED_MODULE_23__["default"];
      });
      /* harmony import */


      var _differenceInCalendarYears_index_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
      /*! ./differenceInCalendarYears/index.js */
      "AF4N");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInCalendarYears", function () {
        return _differenceInCalendarYears_index_js__WEBPACK_IMPORTED_MODULE_24__["default"];
      });
      /* harmony import */


      var _differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
      /*! ./differenceInDays/index.js */
      "NoME");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInDays", function () {
        return _differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_25__["default"];
      });
      /* harmony import */


      var _differenceInHours_index_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
      /*! ./differenceInHours/index.js */
      "moCM");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInHours", function () {
        return _differenceInHours_index_js__WEBPACK_IMPORTED_MODULE_26__["default"];
      });
      /* harmony import */


      var _differenceInISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
      /*! ./differenceInISOWeekYears/index.js */
      "vAQ4");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInISOWeekYears", function () {
        return _differenceInISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_27__["default"];
      });
      /* harmony import */


      var _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
      /*! ./differenceInMilliseconds/index.js */
      "Orh4");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInMilliseconds", function () {
        return _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_28__["default"];
      });
      /* harmony import */


      var _differenceInMinutes_index_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
      /*! ./differenceInMinutes/index.js */
      "jG/O");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInMinutes", function () {
        return _differenceInMinutes_index_js__WEBPACK_IMPORTED_MODULE_29__["default"];
      });
      /* harmony import */


      var _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
      /*! ./differenceInMonths/index.js */
      "AkX2");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInMonths", function () {
        return _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_30__["default"];
      });
      /* harmony import */


      var _differenceInQuarters_index_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
      /*! ./differenceInQuarters/index.js */
      "a7HJ");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInQuarters", function () {
        return _differenceInQuarters_index_js__WEBPACK_IMPORTED_MODULE_31__["default"];
      });
      /* harmony import */


      var _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
      /*! ./differenceInSeconds/index.js */
      "qVkf");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInSeconds", function () {
        return _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_32__["default"];
      });
      /* harmony import */


      var _differenceInWeeks_index_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
      /*! ./differenceInWeeks/index.js */
      "0Ug1");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInWeeks", function () {
        return _differenceInWeeks_index_js__WEBPACK_IMPORTED_MODULE_33__["default"];
      });
      /* harmony import */


      var _differenceInYears_index_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
      /*! ./differenceInYears/index.js */
      "Bp6I");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "differenceInYears", function () {
        return _differenceInYears_index_js__WEBPACK_IMPORTED_MODULE_34__["default"];
      });
      /* harmony import */


      var _eachDayOfInterval_index_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
      /*! ./eachDayOfInterval/index.js */
      "/rh5");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "eachDayOfInterval", function () {
        return _eachDayOfInterval_index_js__WEBPACK_IMPORTED_MODULE_35__["default"];
      });
      /* harmony import */


      var _eachMonthOfInterval_index_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
      /*! ./eachMonthOfInterval/index.js */
      "4jLh");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "eachMonthOfInterval", function () {
        return _eachMonthOfInterval_index_js__WEBPACK_IMPORTED_MODULE_36__["default"];
      });
      /* harmony import */


      var _eachWeekOfInterval_index_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
      /*! ./eachWeekOfInterval/index.js */
      "knTs");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "eachWeekOfInterval", function () {
        return _eachWeekOfInterval_index_js__WEBPACK_IMPORTED_MODULE_37__["default"];
      });
      /* harmony import */


      var _eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
      /*! ./eachWeekendOfInterval/index.js */
      "YdWM");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "eachWeekendOfInterval", function () {
        return _eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_38__["default"];
      });
      /* harmony import */


      var _eachWeekendOfMonth_index_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
      /*! ./eachWeekendOfMonth/index.js */
      "2AQE");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "eachWeekendOfMonth", function () {
        return _eachWeekendOfMonth_index_js__WEBPACK_IMPORTED_MODULE_39__["default"];
      });
      /* harmony import */


      var _eachWeekendOfYear_index_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
      /*! ./eachWeekendOfYear/index.js */
      "EkTD");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "eachWeekendOfYear", function () {
        return _eachWeekendOfYear_index_js__WEBPACK_IMPORTED_MODULE_40__["default"];
      });
      /* harmony import */


      var _eachYearOfInterval_index_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
      /*! ./eachYearOfInterval/index.js */
      "diJF");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "eachYearOfInterval", function () {
        return _eachYearOfInterval_index_js__WEBPACK_IMPORTED_MODULE_41__["default"];
      });
      /* harmony import */


      var _endOfDay_index_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
      /*! ./endOfDay/index.js */
      "piIK");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfDay", function () {
        return _endOfDay_index_js__WEBPACK_IMPORTED_MODULE_42__["default"];
      });
      /* harmony import */


      var _endOfDecade_index_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
      /*! ./endOfDecade/index.js */
      "QNJA");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfDecade", function () {
        return _endOfDecade_index_js__WEBPACK_IMPORTED_MODULE_43__["default"];
      });
      /* harmony import */


      var _endOfHour_index_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
      /*! ./endOfHour/index.js */
      "rH8F");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfHour", function () {
        return _endOfHour_index_js__WEBPACK_IMPORTED_MODULE_44__["default"];
      });
      /* harmony import */


      var _endOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(
      /*! ./endOfISOWeek/index.js */
      "TXrr");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfISOWeek", function () {
        return _endOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_45__["default"];
      });
      /* harmony import */


      var _endOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(
      /*! ./endOfISOWeekYear/index.js */
      "bbbT");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfISOWeekYear", function () {
        return _endOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_46__["default"];
      });
      /* harmony import */


      var _endOfMinute_index_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(
      /*! ./endOfMinute/index.js */
      "IIV6");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfMinute", function () {
        return _endOfMinute_index_js__WEBPACK_IMPORTED_MODULE_47__["default"];
      });
      /* harmony import */


      var _endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(
      /*! ./endOfMonth/index.js */
      "jKzE");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfMonth", function () {
        return _endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_48__["default"];
      });
      /* harmony import */


      var _endOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(
      /*! ./endOfQuarter/index.js */
      "qh+W");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfQuarter", function () {
        return _endOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_49__["default"];
      });
      /* harmony import */


      var _endOfSecond_index_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(
      /*! ./endOfSecond/index.js */
      "PWs8");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfSecond", function () {
        return _endOfSecond_index_js__WEBPACK_IMPORTED_MODULE_50__["default"];
      });
      /* harmony import */


      var _endOfToday_index_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(
      /*! ./endOfToday/index.js */
      "lv2b");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfToday", function () {
        return _endOfToday_index_js__WEBPACK_IMPORTED_MODULE_51__["default"];
      });
      /* harmony import */


      var _endOfTomorrow_index_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(
      /*! ./endOfTomorrow/index.js */
      "YOv4");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfTomorrow", function () {
        return _endOfTomorrow_index_js__WEBPACK_IMPORTED_MODULE_52__["default"];
      });
      /* harmony import */


      var _endOfWeek_index_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(
      /*! ./endOfWeek/index.js */
      "L8hi");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfWeek", function () {
        return _endOfWeek_index_js__WEBPACK_IMPORTED_MODULE_53__["default"];
      });
      /* harmony import */


      var _endOfYear_index_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(
      /*! ./endOfYear/index.js */
      "Gqtg");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfYear", function () {
        return _endOfYear_index_js__WEBPACK_IMPORTED_MODULE_54__["default"];
      });
      /* harmony import */


      var _endOfYesterday_index_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(
      /*! ./endOfYesterday/index.js */
      "bKex");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "endOfYesterday", function () {
        return _endOfYesterday_index_js__WEBPACK_IMPORTED_MODULE_55__["default"];
      });
      /* harmony import */


      var _format_index_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(
      /*! ./format/index.js */
      "sWYD");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "format", function () {
        return _format_index_js__WEBPACK_IMPORTED_MODULE_56__["default"];
      });
      /* harmony import */


      var _formatDistance_index_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(
      /*! ./formatDistance/index.js */
      "FVam");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "formatDistance", function () {
        return _formatDistance_index_js__WEBPACK_IMPORTED_MODULE_57__["default"];
      });
      /* harmony import */


      var _formatDistanceStrict_index_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(
      /*! ./formatDistanceStrict/index.js */
      "0UaF");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "formatDistanceStrict", function () {
        return _formatDistanceStrict_index_js__WEBPACK_IMPORTED_MODULE_58__["default"];
      });
      /* harmony import */


      var _formatDistanceToNow_index_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(
      /*! ./formatDistanceToNow/index.js */
      "7xvl");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "formatDistanceToNow", function () {
        return _formatDistanceToNow_index_js__WEBPACK_IMPORTED_MODULE_59__["default"];
      });
      /* harmony import */


      var _formatISO_index_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(
      /*! ./formatISO/index.js */
      "c32n");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "formatISO", function () {
        return _formatISO_index_js__WEBPACK_IMPORTED_MODULE_60__["default"];
      });
      /* harmony import */


      var _formatISO9075_index_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(
      /*! ./formatISO9075/index.js */
      "RaBM");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "formatISO9075", function () {
        return _formatISO9075_index_js__WEBPACK_IMPORTED_MODULE_61__["default"];
      });
      /* harmony import */


      var _formatRFC3339_index_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(
      /*! ./formatRFC3339/index.js */
      "/pik");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "formatRFC3339", function () {
        return _formatRFC3339_index_js__WEBPACK_IMPORTED_MODULE_62__["default"];
      });
      /* harmony import */


      var _formatRFC7231_index_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(
      /*! ./formatRFC7231/index.js */
      "bd2w");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "formatRFC7231", function () {
        return _formatRFC7231_index_js__WEBPACK_IMPORTED_MODULE_63__["default"];
      });
      /* harmony import */


      var _formatRelative_index_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(
      /*! ./formatRelative/index.js */
      "Q2p9");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "formatRelative", function () {
        return _formatRelative_index_js__WEBPACK_IMPORTED_MODULE_64__["default"];
      });
      /* harmony import */


      var _fromUnixTime_index_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(
      /*! ./fromUnixTime/index.js */
      "RgJi");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "fromUnixTime", function () {
        return _fromUnixTime_index_js__WEBPACK_IMPORTED_MODULE_65__["default"];
      });
      /* harmony import */


      var _getDate_index_js__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(
      /*! ./getDate/index.js */
      "TpeJ");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getDate", function () {
        return _getDate_index_js__WEBPACK_IMPORTED_MODULE_66__["default"];
      });
      /* harmony import */


      var _getDay_index_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(
      /*! ./getDay/index.js */
      "GobQ");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getDay", function () {
        return _getDay_index_js__WEBPACK_IMPORTED_MODULE_67__["default"];
      });
      /* harmony import */


      var _getDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(
      /*! ./getDayOfYear/index.js */
      "Dq2l");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getDayOfYear", function () {
        return _getDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_68__["default"];
      });
      /* harmony import */


      var _getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(
      /*! ./getDaysInMonth/index.js */
      "OuL/");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getDaysInMonth", function () {
        return _getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_69__["default"];
      });
      /* harmony import */


      var _getDaysInYear_index_js__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(
      /*! ./getDaysInYear/index.js */
      "kKrM");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getDaysInYear", function () {
        return _getDaysInYear_index_js__WEBPACK_IMPORTED_MODULE_70__["default"];
      });
      /* harmony import */


      var _getDecade_index_js__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(
      /*! ./getDecade/index.js */
      "D+pV");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getDecade", function () {
        return _getDecade_index_js__WEBPACK_IMPORTED_MODULE_71__["default"];
      });
      /* harmony import */


      var _getHours_index_js__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(
      /*! ./getHours/index.js */
      "08aW");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getHours", function () {
        return _getHours_index_js__WEBPACK_IMPORTED_MODULE_72__["default"];
      });
      /* harmony import */


      var _getISODay_index_js__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(
      /*! ./getISODay/index.js */
      "NXEZ");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getISODay", function () {
        return _getISODay_index_js__WEBPACK_IMPORTED_MODULE_73__["default"];
      });
      /* harmony import */


      var _getISOWeek_index_js__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(
      /*! ./getISOWeek/index.js */
      "sBI4");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getISOWeek", function () {
        return _getISOWeek_index_js__WEBPACK_IMPORTED_MODULE_74__["default"];
      });
      /* harmony import */


      var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(
      /*! ./getISOWeekYear/index.js */
      "BKKT");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getISOWeekYear", function () {
        return _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_75__["default"];
      });
      /* harmony import */


      var _getISOWeeksInYear_index_js__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(
      /*! ./getISOWeeksInYear/index.js */
      "5FpM");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getISOWeeksInYear", function () {
        return _getISOWeeksInYear_index_js__WEBPACK_IMPORTED_MODULE_76__["default"];
      });
      /* harmony import */


      var _getMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(
      /*! ./getMilliseconds/index.js */
      "4G8O");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getMilliseconds", function () {
        return _getMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_77__["default"];
      });
      /* harmony import */


      var _getMinutes_index_js__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(
      /*! ./getMinutes/index.js */
      "3g9J");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getMinutes", function () {
        return _getMinutes_index_js__WEBPACK_IMPORTED_MODULE_78__["default"];
      });
      /* harmony import */


      var _getMonth_index_js__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(
      /*! ./getMonth/index.js */
      "cHAT");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getMonth", function () {
        return _getMonth_index_js__WEBPACK_IMPORTED_MODULE_79__["default"];
      });
      /* harmony import */


      var _getOverlappingDaysInIntervals_index_js__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(
      /*! ./getOverlappingDaysInIntervals/index.js */
      "tiw6");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getOverlappingDaysInIntervals", function () {
        return _getOverlappingDaysInIntervals_index_js__WEBPACK_IMPORTED_MODULE_80__["default"];
      });
      /* harmony import */


      var _getQuarter_index_js__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(
      /*! ./getQuarter/index.js */
      "SFWn");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getQuarter", function () {
        return _getQuarter_index_js__WEBPACK_IMPORTED_MODULE_81__["default"];
      });
      /* harmony import */


      var _getSeconds_index_js__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(
      /*! ./getSeconds/index.js */
      "accU");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getSeconds", function () {
        return _getSeconds_index_js__WEBPACK_IMPORTED_MODULE_82__["default"];
      });
      /* harmony import */


      var _getTime_index_js__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(
      /*! ./getTime/index.js */
      "5wMr");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getTime", function () {
        return _getTime_index_js__WEBPACK_IMPORTED_MODULE_83__["default"];
      });
      /* harmony import */


      var _getUnixTime_index_js__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(
      /*! ./getUnixTime/index.js */
      "odh7");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getUnixTime", function () {
        return _getUnixTime_index_js__WEBPACK_IMPORTED_MODULE_84__["default"];
      });
      /* harmony import */


      var _getWeek_index_js__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(
      /*! ./getWeek/index.js */
      "eYjL");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getWeek", function () {
        return _getWeek_index_js__WEBPACK_IMPORTED_MODULE_85__["default"];
      });
      /* harmony import */


      var _getWeekOfMonth_index_js__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(
      /*! ./getWeekOfMonth/index.js */
      "kMzH");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getWeekOfMonth", function () {
        return _getWeekOfMonth_index_js__WEBPACK_IMPORTED_MODULE_86__["default"];
      });
      /* harmony import */


      var _getWeekYear_index_js__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(
      /*! ./getWeekYear/index.js */
      "7gZZ");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getWeekYear", function () {
        return _getWeekYear_index_js__WEBPACK_IMPORTED_MODULE_87__["default"];
      });
      /* harmony import */


      var _getWeeksInMonth_index_js__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(
      /*! ./getWeeksInMonth/index.js */
      "pxe6");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getWeeksInMonth", function () {
        return _getWeeksInMonth_index_js__WEBPACK_IMPORTED_MODULE_88__["default"];
      });
      /* harmony import */


      var _getYear_index_js__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(
      /*! ./getYear/index.js */
      "cnyc");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "getYear", function () {
        return _getYear_index_js__WEBPACK_IMPORTED_MODULE_89__["default"];
      });
      /* harmony import */


      var _isAfter_index_js__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(
      /*! ./isAfter/index.js */
      "EhJz");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isAfter", function () {
        return _isAfter_index_js__WEBPACK_IMPORTED_MODULE_90__["default"];
      });
      /* harmony import */


      var _isBefore_index_js__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(
      /*! ./isBefore/index.js */
      "dndX");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isBefore", function () {
        return _isBefore_index_js__WEBPACK_IMPORTED_MODULE_91__["default"];
      });
      /* harmony import */


      var _isDate_index_js__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(
      /*! ./isDate/index.js */
      "p+Ro");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isDate", function () {
        return _isDate_index_js__WEBPACK_IMPORTED_MODULE_92__["default"];
      });
      /* harmony import */


      var _isEqual_index_js__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(
      /*! ./isEqual/index.js */
      "zHMj");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isEqual", function () {
        return _isEqual_index_js__WEBPACK_IMPORTED_MODULE_93__["default"];
      });
      /* harmony import */


      var _isExists_index_js__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(
      /*! ./isExists/index.js */
      "/pzQ");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isExists", function () {
        return _isExists_index_js__WEBPACK_IMPORTED_MODULE_94__["default"];
      });
      /* harmony import */


      var _isFirstDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(
      /*! ./isFirstDayOfMonth/index.js */
      "wK6H");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isFirstDayOfMonth", function () {
        return _isFirstDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_95__["default"];
      });
      /* harmony import */


      var _isFriday_index_js__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(
      /*! ./isFriday/index.js */
      "VxKU");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isFriday", function () {
        return _isFriday_index_js__WEBPACK_IMPORTED_MODULE_96__["default"];
      });
      /* harmony import */


      var _isFuture_index_js__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(
      /*! ./isFuture/index.js */
      "uh5Q");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isFuture", function () {
        return _isFuture_index_js__WEBPACK_IMPORTED_MODULE_97__["default"];
      });
      /* harmony import */


      var _isLastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(
      /*! ./isLastDayOfMonth/index.js */
      "DX7i");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isLastDayOfMonth", function () {
        return _isLastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_98__["default"];
      });
      /* harmony import */


      var _isLeapYear_index_js__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(
      /*! ./isLeapYear/index.js */
      "9T1D");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isLeapYear", function () {
        return _isLeapYear_index_js__WEBPACK_IMPORTED_MODULE_99__["default"];
      });
      /* harmony import */


      var _isMonday_index_js__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(
      /*! ./isMonday/index.js */
      "wTf+");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isMonday", function () {
        return _isMonday_index_js__WEBPACK_IMPORTED_MODULE_100__["default"];
      });
      /* harmony import */


      var _isPast_index_js__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(
      /*! ./isPast/index.js */
      "HZtn");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isPast", function () {
        return _isPast_index_js__WEBPACK_IMPORTED_MODULE_101__["default"];
      });
      /* harmony import */


      var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(
      /*! ./isSameDay/index.js */
      "G6Tw");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isSameDay", function () {
        return _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_102__["default"];
      });
      /* harmony import */


      var _isSameHour_index_js__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(
      /*! ./isSameHour/index.js */
      "yzsd");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isSameHour", function () {
        return _isSameHour_index_js__WEBPACK_IMPORTED_MODULE_103__["default"];
      });
      /* harmony import */


      var _isSameISOWeek_index_js__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(
      /*! ./isSameISOWeek/index.js */
      "qzLx");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isSameISOWeek", function () {
        return _isSameISOWeek_index_js__WEBPACK_IMPORTED_MODULE_104__["default"];
      });
      /* harmony import */


      var _isSameISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(
      /*! ./isSameISOWeekYear/index.js */
      "Tx3P");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isSameISOWeekYear", function () {
        return _isSameISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_105__["default"];
      });
      /* harmony import */


      var _isSameMinute_index_js__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(
      /*! ./isSameMinute/index.js */
      "s+wp");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isSameMinute", function () {
        return _isSameMinute_index_js__WEBPACK_IMPORTED_MODULE_106__["default"];
      });
      /* harmony import */


      var _isSameMonth_index_js__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(
      /*! ./isSameMonth/index.js */
      "WIjQ");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isSameMonth", function () {
        return _isSameMonth_index_js__WEBPACK_IMPORTED_MODULE_107__["default"];
      });
      /* harmony import */


      var _isSameQuarter_index_js__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(
      /*! ./isSameQuarter/index.js */
      "TGAR");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isSameQuarter", function () {
        return _isSameQuarter_index_js__WEBPACK_IMPORTED_MODULE_108__["default"];
      });
      /* harmony import */


      var _isSameSecond_index_js__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(
      /*! ./isSameSecond/index.js */
      "B3eN");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isSameSecond", function () {
        return _isSameSecond_index_js__WEBPACK_IMPORTED_MODULE_109__["default"];
      });
      /* harmony import */


      var _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(
      /*! ./isSameWeek/index.js */
      "JO1+");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isSameWeek", function () {
        return _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_110__["default"];
      });
      /* harmony import */


      var _isSameYear_index_js__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(
      /*! ./isSameYear/index.js */
      "kJyz");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isSameYear", function () {
        return _isSameYear_index_js__WEBPACK_IMPORTED_MODULE_111__["default"];
      });
      /* harmony import */


      var _isSaturday_index_js__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(
      /*! ./isSaturday/index.js */
      "GxZL");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isSaturday", function () {
        return _isSaturday_index_js__WEBPACK_IMPORTED_MODULE_112__["default"];
      });
      /* harmony import */


      var _isSunday_index_js__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(
      /*! ./isSunday/index.js */
      "hW07");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isSunday", function () {
        return _isSunday_index_js__WEBPACK_IMPORTED_MODULE_113__["default"];
      });
      /* harmony import */


      var _isThisHour_index_js__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(
      /*! ./isThisHour/index.js */
      "VlRU");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isThisHour", function () {
        return _isThisHour_index_js__WEBPACK_IMPORTED_MODULE_114__["default"];
      });
      /* harmony import */


      var _isThisISOWeek_index_js__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(
      /*! ./isThisISOWeek/index.js */
      "W9Un");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isThisISOWeek", function () {
        return _isThisISOWeek_index_js__WEBPACK_IMPORTED_MODULE_115__["default"];
      });
      /* harmony import */


      var _isThisMinute_index_js__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(
      /*! ./isThisMinute/index.js */
      "MVig");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isThisMinute", function () {
        return _isThisMinute_index_js__WEBPACK_IMPORTED_MODULE_116__["default"];
      });
      /* harmony import */


      var _isThisMonth_index_js__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(
      /*! ./isThisMonth/index.js */
      "u/yc");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isThisMonth", function () {
        return _isThisMonth_index_js__WEBPACK_IMPORTED_MODULE_117__["default"];
      });
      /* harmony import */


      var _isThisQuarter_index_js__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(
      /*! ./isThisQuarter/index.js */
      "w3Pf");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isThisQuarter", function () {
        return _isThisQuarter_index_js__WEBPACK_IMPORTED_MODULE_118__["default"];
      });
      /* harmony import */


      var _isThisSecond_index_js__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(
      /*! ./isThisSecond/index.js */
      "AWcS");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isThisSecond", function () {
        return _isThisSecond_index_js__WEBPACK_IMPORTED_MODULE_119__["default"];
      });
      /* harmony import */


      var _isThisWeek_index_js__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(
      /*! ./isThisWeek/index.js */
      "3+Em");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isThisWeek", function () {
        return _isThisWeek_index_js__WEBPACK_IMPORTED_MODULE_120__["default"];
      });
      /* harmony import */


      var _isThisYear_index_js__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(
      /*! ./isThisYear/index.js */
      "MkVN");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isThisYear", function () {
        return _isThisYear_index_js__WEBPACK_IMPORTED_MODULE_121__["default"];
      });
      /* harmony import */


      var _isThursday_index_js__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(
      /*! ./isThursday/index.js */
      "H6X/");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isThursday", function () {
        return _isThursday_index_js__WEBPACK_IMPORTED_MODULE_122__["default"];
      });
      /* harmony import */


      var _isToday_index_js__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(
      /*! ./isToday/index.js */
      "TjGc");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isToday", function () {
        return _isToday_index_js__WEBPACK_IMPORTED_MODULE_123__["default"];
      });
      /* harmony import */


      var _isTomorrow_index_js__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(
      /*! ./isTomorrow/index.js */
      "jZMG");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isTomorrow", function () {
        return _isTomorrow_index_js__WEBPACK_IMPORTED_MODULE_124__["default"];
      });
      /* harmony import */


      var _isTuesday_index_js__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(
      /*! ./isTuesday/index.js */
      "PdOA");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isTuesday", function () {
        return _isTuesday_index_js__WEBPACK_IMPORTED_MODULE_125__["default"];
      });
      /* harmony import */


      var _isValid_index_js__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(
      /*! ./isValid/index.js */
      "Se/U");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isValid", function () {
        return _isValid_index_js__WEBPACK_IMPORTED_MODULE_126__["default"];
      });
      /* harmony import */


      var _isWednesday_index_js__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(
      /*! ./isWednesday/index.js */
      "5cON");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isWednesday", function () {
        return _isWednesday_index_js__WEBPACK_IMPORTED_MODULE_127__["default"];
      });
      /* harmony import */


      var _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(
      /*! ./isWeekend/index.js */
      "gLRL");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isWeekend", function () {
        return _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_128__["default"];
      });
      /* harmony import */


      var _isWithinInterval_index_js__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(
      /*! ./isWithinInterval/index.js */
      "YTra");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isWithinInterval", function () {
        return _isWithinInterval_index_js__WEBPACK_IMPORTED_MODULE_129__["default"];
      });
      /* harmony import */


      var _isYesterday_index_js__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(
      /*! ./isYesterday/index.js */
      "1PZI");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "isYesterday", function () {
        return _isYesterday_index_js__WEBPACK_IMPORTED_MODULE_130__["default"];
      });
      /* harmony import */


      var _lastDayOfDecade_index_js__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(
      /*! ./lastDayOfDecade/index.js */
      "8iJe");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "lastDayOfDecade", function () {
        return _lastDayOfDecade_index_js__WEBPACK_IMPORTED_MODULE_131__["default"];
      });
      /* harmony import */


      var _lastDayOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(
      /*! ./lastDayOfISOWeek/index.js */
      "gA5F");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "lastDayOfISOWeek", function () {
        return _lastDayOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_132__["default"];
      });
      /* harmony import */


      var _lastDayOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(
      /*! ./lastDayOfISOWeekYear/index.js */
      "+1d7");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "lastDayOfISOWeekYear", function () {
        return _lastDayOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_133__["default"];
      });
      /* harmony import */


      var _lastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(
      /*! ./lastDayOfMonth/index.js */
      "kKUf");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "lastDayOfMonth", function () {
        return _lastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_134__["default"];
      });
      /* harmony import */


      var _lastDayOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(
      /*! ./lastDayOfQuarter/index.js */
      "Fwbw");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "lastDayOfQuarter", function () {
        return _lastDayOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_135__["default"];
      });
      /* harmony import */


      var _lastDayOfWeek_index_js__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(
      /*! ./lastDayOfWeek/index.js */
      "gH8E");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "lastDayOfWeek", function () {
        return _lastDayOfWeek_index_js__WEBPACK_IMPORTED_MODULE_136__["default"];
      });
      /* harmony import */


      var _lastDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(
      /*! ./lastDayOfYear/index.js */
      "wQoA");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "lastDayOfYear", function () {
        return _lastDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_137__["default"];
      });
      /* harmony import */


      var _lightFormat_index_js__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(
      /*! ./lightFormat/index.js */
      "S7Yp");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "lightFormat", function () {
        return _lightFormat_index_js__WEBPACK_IMPORTED_MODULE_138__["default"];
      });
      /* harmony import */


      var _max_index_js__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(
      /*! ./max/index.js */
      "TnmX");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "max", function () {
        return _max_index_js__WEBPACK_IMPORTED_MODULE_139__["default"];
      });
      /* harmony import */


      var _min_index_js__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(
      /*! ./min/index.js */
      "edZA");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "min", function () {
        return _min_index_js__WEBPACK_IMPORTED_MODULE_140__["default"];
      });
      /* harmony import */


      var _parse_index_js__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(
      /*! ./parse/index.js */
      "LPPQ");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "parse", function () {
        return _parse_index_js__WEBPACK_IMPORTED_MODULE_141__["default"];
      });
      /* harmony import */


      var _parseISO_index_js__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(
      /*! ./parseISO/index.js */
      "4+6U");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "parseISO", function () {
        return _parseISO_index_js__WEBPACK_IMPORTED_MODULE_142__["default"];
      });
      /* harmony import */


      var _parseJSON_index_js__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(
      /*! ./parseJSON/index.js */
      "PQko");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "parseJSON", function () {
        return _parseJSON_index_js__WEBPACK_IMPORTED_MODULE_143__["default"];
      });
      /* harmony import */


      var _roundToNearestMinutes_index_js__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(
      /*! ./roundToNearestMinutes/index.js */
      "ILtH");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "roundToNearestMinutes", function () {
        return _roundToNearestMinutes_index_js__WEBPACK_IMPORTED_MODULE_144__["default"];
      });
      /* harmony import */


      var _set_index_js__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(
      /*! ./set/index.js */
      "gME1");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "set", function () {
        return _set_index_js__WEBPACK_IMPORTED_MODULE_145__["default"];
      });
      /* harmony import */


      var _setDate_index_js__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(
      /*! ./setDate/index.js */
      "tSIP");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setDate", function () {
        return _setDate_index_js__WEBPACK_IMPORTED_MODULE_146__["default"];
      });
      /* harmony import */


      var _setDay_index_js__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(
      /*! ./setDay/index.js */
      "ksg9");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setDay", function () {
        return _setDay_index_js__WEBPACK_IMPORTED_MODULE_147__["default"];
      });
      /* harmony import */


      var _setDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(
      /*! ./setDayOfYear/index.js */
      "6En+");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setDayOfYear", function () {
        return _setDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_148__["default"];
      });
      /* harmony import */


      var _setHours_index_js__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(
      /*! ./setHours/index.js */
      "XQXX");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setHours", function () {
        return _setHours_index_js__WEBPACK_IMPORTED_MODULE_149__["default"];
      });
      /* harmony import */


      var _setISODay_index_js__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(
      /*! ./setISODay/index.js */
      "hroe");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setISODay", function () {
        return _setISODay_index_js__WEBPACK_IMPORTED_MODULE_150__["default"];
      });
      /* harmony import */


      var _setISOWeek_index_js__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(
      /*! ./setISOWeek/index.js */
      "Q0vS");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setISOWeek", function () {
        return _setISOWeek_index_js__WEBPACK_IMPORTED_MODULE_151__["default"];
      });
      /* harmony import */


      var _setISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(
      /*! ./setISOWeekYear/index.js */
      "7DTD");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setISOWeekYear", function () {
        return _setISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_152__["default"];
      });
      /* harmony import */


      var _setMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(
      /*! ./setMilliseconds/index.js */
      "RgwM");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setMilliseconds", function () {
        return _setMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_153__["default"];
      });
      /* harmony import */


      var _setMinutes_index_js__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(
      /*! ./setMinutes/index.js */
      "4bjS");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setMinutes", function () {
        return _setMinutes_index_js__WEBPACK_IMPORTED_MODULE_154__["default"];
      });
      /* harmony import */


      var _setMonth_index_js__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(
      /*! ./setMonth/index.js */
      "nQ4q");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setMonth", function () {
        return _setMonth_index_js__WEBPACK_IMPORTED_MODULE_155__["default"];
      });
      /* harmony import */


      var _setQuarter_index_js__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(
      /*! ./setQuarter/index.js */
      "pl+E");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setQuarter", function () {
        return _setQuarter_index_js__WEBPACK_IMPORTED_MODULE_156__["default"];
      });
      /* harmony import */


      var _setSeconds_index_js__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(
      /*! ./setSeconds/index.js */
      "wXd3");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setSeconds", function () {
        return _setSeconds_index_js__WEBPACK_IMPORTED_MODULE_157__["default"];
      });
      /* harmony import */


      var _setWeek_index_js__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(
      /*! ./setWeek/index.js */
      "XX+V");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setWeek", function () {
        return _setWeek_index_js__WEBPACK_IMPORTED_MODULE_158__["default"];
      });
      /* harmony import */


      var _setWeekYear_index_js__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(
      /*! ./setWeekYear/index.js */
      "p0jx");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setWeekYear", function () {
        return _setWeekYear_index_js__WEBPACK_IMPORTED_MODULE_159__["default"];
      });
      /* harmony import */


      var _setYear_index_js__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(
      /*! ./setYear/index.js */
      "6NQC");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "setYear", function () {
        return _setYear_index_js__WEBPACK_IMPORTED_MODULE_160__["default"];
      });
      /* harmony import */


      var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(
      /*! ./startOfDay/index.js */
      "M34a");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfDay", function () {
        return _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_161__["default"];
      });
      /* harmony import */


      var _startOfDecade_index_js__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(
      /*! ./startOfDecade/index.js */
      "6wME");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfDecade", function () {
        return _startOfDecade_index_js__WEBPACK_IMPORTED_MODULE_162__["default"];
      });
      /* harmony import */


      var _startOfHour_index_js__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(
      /*! ./startOfHour/index.js */
      "CxvL");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfHour", function () {
        return _startOfHour_index_js__WEBPACK_IMPORTED_MODULE_163__["default"];
      });
      /* harmony import */


      var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(
      /*! ./startOfISOWeek/index.js */
      "1dmy");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfISOWeek", function () {
        return _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_164__["default"];
      });
      /* harmony import */


      var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(
      /*! ./startOfISOWeekYear/index.js */
      "0f5V");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfISOWeekYear", function () {
        return _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_165__["default"];
      });
      /* harmony import */


      var _startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(
      /*! ./startOfMinute/index.js */
      "0LOL");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfMinute", function () {
        return _startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_166__["default"];
      });
      /* harmony import */


      var _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(
      /*! ./startOfMonth/index.js */
      "9ig3");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfMonth", function () {
        return _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_167__["default"];
      });
      /* harmony import */


      var _startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(
      /*! ./startOfQuarter/index.js */
      "vHCX");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfQuarter", function () {
        return _startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_168__["default"];
      });
      /* harmony import */


      var _startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(
      /*! ./startOfSecond/index.js */
      "WJMa");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfSecond", function () {
        return _startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_169__["default"];
      });
      /* harmony import */


      var _startOfToday_index_js__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(
      /*! ./startOfToday/index.js */
      "0/gg");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfToday", function () {
        return _startOfToday_index_js__WEBPACK_IMPORTED_MODULE_170__["default"];
      });
      /* harmony import */


      var _startOfTomorrow_index_js__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(
      /*! ./startOfTomorrow/index.js */
      "iWuq");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfTomorrow", function () {
        return _startOfTomorrow_index_js__WEBPACK_IMPORTED_MODULE_171__["default"];
      });
      /* harmony import */


      var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(
      /*! ./startOfWeek/index.js */
      "aetl");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfWeek", function () {
        return _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_172__["default"];
      });
      /* harmony import */


      var _startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(
      /*! ./startOfWeekYear/index.js */
      "qdtj");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfWeekYear", function () {
        return _startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_173__["default"];
      });
      /* harmony import */


      var _startOfYear_index_js__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(
      /*! ./startOfYear/index.js */
      "1unF");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfYear", function () {
        return _startOfYear_index_js__WEBPACK_IMPORTED_MODULE_174__["default"];
      });
      /* harmony import */


      var _startOfYesterday_index_js__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(
      /*! ./startOfYesterday/index.js */
      "YOOs");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "startOfYesterday", function () {
        return _startOfYesterday_index_js__WEBPACK_IMPORTED_MODULE_175__["default"];
      });
      /* harmony import */


      var _sub_index_js__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(
      /*! ./sub/index.js */
      "7wYy");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "sub", function () {
        return _sub_index_js__WEBPACK_IMPORTED_MODULE_176__["default"];
      });
      /* harmony import */


      var _subBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(
      /*! ./subBusinessDays/index.js */
      "W6rj");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "subBusinessDays", function () {
        return _subBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_177__["default"];
      });
      /* harmony import */


      var _subDays_index_js__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(
      /*! ./subDays/index.js */
      "Xep9");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "subDays", function () {
        return _subDays_index_js__WEBPACK_IMPORTED_MODULE_178__["default"];
      });
      /* harmony import */


      var _subHours_index_js__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(
      /*! ./subHours/index.js */
      "WQ3w");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "subHours", function () {
        return _subHours_index_js__WEBPACK_IMPORTED_MODULE_179__["default"];
      });
      /* harmony import */


      var _subISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(
      /*! ./subISOWeekYears/index.js */
      "pIWV");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "subISOWeekYears", function () {
        return _subISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_180__["default"];
      });
      /* harmony import */


      var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(
      /*! ./subMilliseconds/index.js */
      "g9KO");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "subMilliseconds", function () {
        return _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_181__["default"];
      });
      /* harmony import */


      var _subMinutes_index_js__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(
      /*! ./subMinutes/index.js */
      "a3h9");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "subMinutes", function () {
        return _subMinutes_index_js__WEBPACK_IMPORTED_MODULE_182__["default"];
      });
      /* harmony import */


      var _subMonths_index_js__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(
      /*! ./subMonths/index.js */
      "phiu");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "subMonths", function () {
        return _subMonths_index_js__WEBPACK_IMPORTED_MODULE_183__["default"];
      });
      /* harmony import */


      var _subQuarters_index_js__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(
      /*! ./subQuarters/index.js */
      "VLv5");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "subQuarters", function () {
        return _subQuarters_index_js__WEBPACK_IMPORTED_MODULE_184__["default"];
      });
      /* harmony import */


      var _subSeconds_index_js__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(
      /*! ./subSeconds/index.js */
      "SuC2");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "subSeconds", function () {
        return _subSeconds_index_js__WEBPACK_IMPORTED_MODULE_185__["default"];
      });
      /* harmony import */


      var _subWeeks_index_js__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(
      /*! ./subWeeks/index.js */
      "/Eym");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "subWeeks", function () {
        return _subWeeks_index_js__WEBPACK_IMPORTED_MODULE_186__["default"];
      });
      /* harmony import */


      var _subYears_index_js__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(
      /*! ./subYears/index.js */
      "sdC+");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "subYears", function () {
        return _subYears_index_js__WEBPACK_IMPORTED_MODULE_187__["default"];
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(
      /*! ./toDate/index.js */
      "/Tr7");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "toDate", function () {
        return _toDate_index_js__WEBPACK_IMPORTED_MODULE_188__["default"];
      });
      /* harmony import */


      var _constants_index_js__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(
      /*! ./constants/index.js */
      "w3qX");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "maxTime", function () {
        return _constants_index_js__WEBPACK_IMPORTED_MODULE_189__["maxTime"];
      });
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "minTime", function () {
        return _constants_index_js__WEBPACK_IMPORTED_MODULE_189__["minTime"];
      }); // This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.

      /***/

    },

    /***/
    "bKex":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfYesterday/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function bKex(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfYesterday;
      });
      /**
       * @name endOfYesterday
       * @category Day Helpers
       * @summary Return the end of yesterday.
       * @pure false
       *
       * @description
       * Return the end of yesterday.
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @returns {Date} the end of yesterday
       *
       * @example
       * // If today is 6 October 2014:
       * var result = endOfYesterday()
       * //=> Sun Oct 5 2014 23:59:59.999
       */


      function endOfYesterday() {
        var now = new Date();
        var year = now.getFullYear();
        var month = now.getMonth();
        var day = now.getDate();
        var date = new Date(0);
        date.setFullYear(year, month, day - 1);
        date.setHours(23, 59, 59, 999);
        return date;
      }
      /***/

    },

    /***/
    "bbbT":
    /*!*************************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfISOWeekYear/index.js ***!
      \*************************************************************/

    /*! exports provided: default */

    /***/
    function bbbT(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfISOWeekYear;
      });
      /* harmony import */


      var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../getISOWeekYear/index.js */
      "BKKT");
      /* harmony import */


      var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfISOWeek/index.js */
      "1dmy");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name endOfISOWeekYear
       * @category ISO Week-Numbering Year Helpers
       * @summary Return the end of an ISO week-numbering year for the given date.
       *
       * @description
       * Return the end of an ISO week-numbering year,
       * which always starts 3 days before the year's first Thursday.
       * The result will be in the local timezone.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.
       *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
       *   This change makes the name consistent with
       *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the end of an ISO week-numbering year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The end of an ISO week-numbering year for 2 July 2005:
       * var result = endOfISOWeekYear(new Date(2005, 6, 2))
       * //=> Sun Jan 01 2006 23:59:59.999
       */


      function endOfISOWeekYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var year = Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var fourthOfJanuaryOfNextYear = new Date(0);
        fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
        fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
        var date = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfNextYear);
        date.setMilliseconds(date.getMilliseconds() - 1);
        return date;
      }
      /***/

    },

    /***/
    "bd2w":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/formatRFC7231/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function bd2w(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return formatRFC7231;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../isValid/index.js */
      "Se/U");
      /* harmony import */


      var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/addLeadingZeros/index.js */
      "+7QN");

      var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
      var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
      /**
       * @name formatRFC7231
       * @category Common Helpers
       * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).
       *
       * @description
       * Return the formatted date string in RFC 7231 format.
       * The result will always be in UTC timezone.
       *
       * @param {Date|Number} date - the original date
       * @returns {String} the formatted date string
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `date` must not be Invalid Date
       *
       * @example
       * // Represent 18 September 2019 in RFC 7231 format:
       * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))
       * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'
       */

      function formatRFC7231(dirtyDate) {
        if (arguments.length < 1) {
          throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
        }

        var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

        if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(originalDate)) {
          throw new RangeError('Invalid time value');
        }

        var dayName = days[originalDate.getUTCDay()];
        var dayOfMonth = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getUTCDate(), 2);
        var monthName = months[originalDate.getUTCMonth()];
        var year = originalDate.getUTCFullYear();
        var hour = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getUTCHours(), 2);
        var minute = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getUTCMinutes(), 2);
        var second = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getUTCSeconds(), 2); // Result variables.

        return "".concat(dayName, ", ").concat(dayOfMonth, " ").concat(monthName, " ").concat(year, " ").concat(hour, ":").concat(minute, ":").concat(second, " GMT");
      }
      /***/

    },

    /***/
    "c/fO":
    /*!***********************************************************************************!*\
      !*** ./node_modules/animation-frame-polyfill/lib/animation-frame-polyfill.cjs.js ***!
      \***********************************************************************************/

    /*! no static exports found */

    /***/
    function cFO(module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var prefix = ['webkit', 'moz', 'ms', 'o'];

      var requestAnimationFrame = exports.requestAnimationFrame = function () {
        for (var i = 0, limit = prefix.length; i < limit && !window.requestAnimationFrame; ++i) {
          window.requestAnimationFrame = window[prefix[i] + 'RequestAnimationFrame'];
        }

        if (!window.requestAnimationFrame) {
          (function () {
            var lastTime = 0;

            window.requestAnimationFrame = function (callback) {
              var now = new Date().getTime();
              var ttc = Math.max(0, 16 - now - lastTime);
              var timer = window.setTimeout(function () {
                return callback(now + ttc);
              }, ttc);
              lastTime = now + ttc;
              return timer;
            };
          })();
        }

        return window.requestAnimationFrame.bind(window);
      }();

      var cancelAnimationFrame = exports.cancelAnimationFrame = function () {
        for (var i = 0, limit = prefix.length; i < limit && !window.cancelAnimationFrame; ++i) {
          window.cancelAnimationFrame = window[prefix[i] + 'CancelAnimationFrame'] || window[prefix[i] + 'CancelRequestAnimationFrame'];
        }

        if (!window.cancelAnimationFrame) {
          window.cancelAnimationFrame = function (timer) {
            window.clearTimeout(timer);
          };
        }

        return window.cancelAnimationFrame.bind(window);
      }();
      /***/

    },

    /***/
    "c32n":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/formatISO/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function c32n(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return formatISO;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../isValid/index.js */
      "Se/U");
      /* harmony import */


      var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/addLeadingZeros/index.js */
      "+7QN");
      /**
       * @name formatISO
       * @category Common Helpers
       * @summary Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).
       *
       * @description
       * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.
       *
       * @param {Date|Number} date - the original date
       * @param {Object} [options] - an object with options.
       * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.
       * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with time zone, or both.
       * @returns {String} the formatted date string
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `date` must not be Invalid Date
       * @throws {RangeError} `options.format` must be 'extended' or 'basic'
       * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'
       *
       * @example
       * // Represent 18 September 2019 in ISO 8601 format (UTC):
       * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))
       * //=> '2019-09-18T19:00:52Z'
       *
       * @example
       * // Represent 18 September 2019 in ISO 8601, short format (UTC):
       * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })
       * //=> '20190918T190052'
       *
       * @example
       * // Represent 18 September 2019 in ISO 8601 format, date only:
       * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })
       * //=> '2019-09-18'
       *
       * @example
       * // Represent 18 September 2019 in ISO 8601 format, time only (UTC):
       * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })
       * //=> '19:00:52Z'
       */


      function formatISO(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
        }

        var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

        if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(originalDate)) {
          throw new RangeError('Invalid time value');
        }

        var options = dirtyOptions || {};
        var format = options.format == null ? 'extended' : String(options.format);
        var representation = options.representation == null ? 'complete' : String(options.representation);

        if (format !== 'extended' && format !== 'basic') {
          throw new RangeError("format must be 'extended' or 'basic'");
        }

        if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {
          throw new RangeError("representation must be 'date', 'time', or 'complete'");
        }

        var result = '';
        var tzOffset = '';
        var dateDelimiter = format === 'extended' ? '-' : '';
        var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'

        if (representation !== 'time') {
          var day = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getDate(), 2);
          var month = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMonth() + 1, 2);
          var year = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.

          result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
        } // Representation is either 'time' or 'complete'


        if (representation !== 'date') {
          // Add the timezone.
          var offset = originalDate.getTimezoneOffset();

          if (offset !== 0) {
            var absoluteOffset = Math.abs(offset);
            var hourOffset = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(absoluteOffset / 60, 2);
            var minuteOffset = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.

            var sign = offset < 0 ? '+' : '-';
            tzOffset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
          } else {
            tzOffset = 'Z';
          }

          var hour = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getHours(), 2);
          var minute = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMinutes(), 2);
          var second = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'

          var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.

          var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.

          result = "".concat(result).concat(separator).concat(time).concat(tzOffset);
        }

        return result;
      }
      /***/

    },

    /***/
    "cHAT":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/getMonth/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function cHAT(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getMonth;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getMonth
       * @category Month Helpers
       * @summary Get the month of the given date.
       *
       * @description
       * Get the month of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which month is 29 February 2012?
       * var result = getMonth(new Date(2012, 1, 29))
       * //=> 1
       */


      function getMonth(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var month = date.getMonth();
        return month;
      }
      /***/

    },

    /***/
    "cnyc":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/getYear/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function cnyc(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getYear;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getYear
       * @category Year Helpers
       * @summary Get the year of the given date.
       *
       * @description
       * Get the year of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which year is 2 July 2014?
       * var result = getYear(new Date(2014, 6, 2))
       * //=> 2014
       */


      function getYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var year = date.getFullYear();
        return year;
      }
      /***/

    },

    /***/
    "dLU1":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/addMonths/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function dLU1(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return addMonths;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../getDaysInMonth/index.js */
      "OuL/");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name addMonths
       * @category Month Helpers
       * @summary Add the specified number of months to the given date.
       *
       * @description
       * Add the specified number of months to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of months to be added
       * @returns {Date} the new date with the months added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 5 months to 1 September 2014:
       * var result = addMonths(new Date(2014, 8, 1), 5)
       * //=> Sun Feb 01 2015 00:00:00
       */


      function addMonths(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        var desiredMonth = date.getMonth() + amount;
        var dateWithDesiredMonth = new Date(0);
        dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);
        dateWithDesiredMonth.setHours(0, 0, 0, 0);
        var daysInMonth = Object(_getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateWithDesiredMonth); // Set the last day of the new month
        // if the original date was the last day of the longer month

        date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));
        return date;
      }
      /***/

    },

    /***/
    "diJF":
    /*!***************************************************************!*\
      !*** ./node_modules/date-fns/esm/eachYearOfInterval/index.js ***!
      \***************************************************************/

    /*! exports provided: default */

    /***/
    function diJF(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return eachYearOfInterval;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name eachYearOfInterval
       * @category Interval Helpers
       * @summary Return the array of yearly timestamps within the specified time interval.
       *
       * @description
       * Return the array of yearly timestamps within the specified time interval.
       *
       * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
       * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} The start of an interval cannot be after its end
       * @throws {RangeError} Date in interval cannot be `Invalid Date`
       *
       * @example
       * // Each year between 6 February 2014 and 10 August 2017:
       * var result = eachDayOfInterval({
       *   start: new Date(2014, 1, 6),
       *   end: new Date(2017, 7, 10)
       * })
       * //=> [
       * //   Wed Jan 01 2014 00:00:00,
       * //   Thu Jan 01 2015 00:00:00,
       * //   Fri Jan 01 2016 00:00:00,
       * //   Sun Jan 01 2017 00:00:00
       * // ]
       */


      function eachYearOfInterval(dirtyInterval) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var interval = dirtyInterval || {};
        var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.start);
        var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.end);
        var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

        if (!(startDate.getTime() <= endTime)) {
          throw new RangeError('Invalid interval');
        }

        var dates = [];
        var currentDate = startDate;
        currentDate.setHours(0, 0, 0, 0);
        currentDate.setMonth(0, 1);

        while (currentDate.getTime() <= endTime) {
          dates.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentDate));
          currentDate.setFullYear(currentDate.getFullYear() + 1);
        }

        return dates;
      }
      /***/

    },

    /***/
    "dndX":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/isBefore/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function dndX(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isBefore;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isBefore
       * @category Common Helpers
       * @summary Is the first date before the second one?
       *
       * @description
       * Is the first date before the second one?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date that should be before the other one to return true
       * @param {Date|Number} dateToCompare - the date to compare with
       * @returns {Boolean} the first date is before the second date
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Is 10 July 1989 before 11 February 1987?
       * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))
       * //=> false
       */


      function isBefore(dirtyDate, dirtyDateToCompare) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var dateToCompare = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateToCompare);
        return date.getTime() < dateToCompare.getTime();
      }
      /***/

    },

    /***/
    "eYjL":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/getWeek/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function eYjL(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getWeek;
      });
      /* harmony import */


      var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfWeek/index.js */
      "aetl");
      /* harmony import */


      var _startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfWeekYear/index.js */
      "qdtj");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_WEEK = 604800000;
      /**
       * @name getWeek
       * @category Week Helpers
       * @summary Get the local week index of the given date.
       *
       * @description
       * Get the local week index of the given date.
       * The exact calculation depends on the values of
       * `options.weekStartsOn` (which is the index of the first day of the week)
       * and `options.firstWeekContainsDate` (which is the day of January, which is always in
       * the first week of the week-numbering year)
       *
       * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
       * @returns {Number} the week
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
       *
       * @example
       * // Which week of the local week numbering year is 2 January 2005 with default options?
       * var result = getISOWeek(new Date(2005, 0, 2))
       * //=> 2
       *
       * // Which week of the local week numbering year is 2 January 2005,
       * // if Monday is the first day of the week,
       * // and the first week of the year always contains 4 January?
       * var result = getISOWeek(new Date(2005, 0, 2), {
       *   weekStartsOn: 1,
       *   firstWeekContainsDate: 4
       * })
       * //=> 53
       */

      function getWeek(dirtyDate, options) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
        var diff = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, options).getTime() - Object(_startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, options).getTime(); // Round the number of days to the nearest integer
        // because the number of milliseconds in a week is not constant
        // (e.g. it's different in the week of the daylight saving time clock shift)

        return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
      }
      /***/

    },

    /***/
    "edZA":
    /*!************************************************!*\
      !*** ./node_modules/date-fns/esm/min/index.js ***!
      \************************************************/

    /*! exports provided: default */

    /***/
    function edZA(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return min;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name min
       * @category Common Helpers
       * @summary Return the earliest of the given dates.
       *
       * @description
       * Return the earliest of the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - `min` function now accepts an array of dates rather than spread arguments.
       *
       *   ```javascript
       *   // Before v2.0.0
       *   var date1 = new Date(1989, 6, 10)
       *   var date2 = new Date(1987, 1, 11)
       *   var minDate = min(date1, date2)
       *
       *   // v2.0.0 onward:
       *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]
       *   var minDate = min(dates)
       *   ```
       *
       * @param {Date[]|Number[]} datesArray - the dates to compare
       * @returns {Date} the earliest of the dates
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which of these dates is the earliest?
       * var result = min([
       *   new Date(1989, 6, 10),
       *   new Date(1987, 1, 11),
       *   new Date(1995, 6, 2),
       *   new Date(1990, 0, 1)
       * ])
       * //=> Wed Feb 11 1987 00:00:00
       */


      function min(dirtyDatesArray) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method

        if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {
          datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.
        } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {
          datesArray = Array.prototype.slice.call(dirtyDatesArray);
        } else {
          // `dirtyDatesArray` is non-iterable, return Invalid Date
          return new Date(NaN);
        }

        var result;
        datesArray.forEach(function (dirtyDate) {
          var currentDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

          if (result === undefined || result > currentDate || isNaN(currentDate)) {
            result = currentDate;
          }
        });
        return result || new Date(NaN);
      }
      /***/

    },

    /***/
    "emD/":
    /*!*************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/cloneObject/index.js ***!
      \*************************************************************/

    /*! exports provided: default */

    /***/
    function emD(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return cloneObject;
      });
      /* harmony import */


      var _assign_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../assign/index.js */
      "+LmI");

      function cloneObject(dirtyObject) {
        return Object(_assign_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({}, dirtyObject);
      }
      /***/

    },

    /***/
    "fePA":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/compareDesc/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function fePA(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return compareDesc;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name compareDesc
       * @category Common Helpers
       * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.
       *
       * @description
       * Compare the two dates and return -1 if the first date is after the second,
       * 1 if the first date is before the second or 0 if dates are equal.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to compare
       * @param {Date|Number} dateRight - the second date to compare
       * @returns {Number} the result of the comparison
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:
       * var result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))
       * //=> 1
       *
       * @example
       * // Sort the array of dates in reverse chronological order:
       * var result = [
       *   new Date(1995, 6, 2),
       *   new Date(1987, 1, 11),
       *   new Date(1989, 6, 10)
       * ].sort(compareDesc)
       * //=> [
       * //   Sun Jul 02 1995 00:00:00,
       * //   Mon Jul 10 1989 00:00:00,
       * //   Wed Feb 11 1987 00:00:00
       * // ]
       */


      function compareDesc(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        var diff = dateLeft.getTime() - dateRight.getTime();

        if (diff > 0) {
          return -1;
        } else if (diff < 0) {
          return 1; // Return 0 if diff is 0; return NaN if diff is NaN
        } else {
          return diff;
        }
      }
      /***/

    },

    /***/
    "g9KO":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/subMilliseconds/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function g9KO(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return subMilliseconds;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addMilliseconds/index.js */
      "pl0G");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name subMilliseconds
       * @category Millisecond Helpers
       * @summary Subtract the specified number of milliseconds from the given date.
       *
       * @description
       * Subtract the specified number of milliseconds from the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of milliseconds to be subtracted
       * @returns {Date} the new date with the milliseconds subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
       * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
       * //=> Thu Jul 10 2014 12:45:29.250
       */


      function subMilliseconds(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
      }
      /***/

    },

    /***/
    "gA5F":
    /*!*************************************************************!*\
      !*** ./node_modules/date-fns/esm/lastDayOfISOWeek/index.js ***!
      \*************************************************************/

    /*! exports provided: default */

    /***/
    function gA5F(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return lastDayOfISOWeek;
      });
      /* harmony import */


      var _lastDayOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../lastDayOfWeek/index.js */
      "gH8E");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name lastDayOfISOWeek
       * @category ISO Week Helpers
       * @summary Return the last day of an ISO week for the given date.
       *
       * @description
       * Return the last day of an ISO week for the given date.
       * The result will be in the local timezone.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the last day of an ISO week
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The last day of an ISO week for 2 September 2014 11:55:00:
       * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Sun Sep 07 2014 00:00:00
       */


      function lastDayOfISOWeek(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_lastDayOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, {
          weekStartsOn: 1
        });
      }
      /***/

    },

    /***/
    "gH8E":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/lastDayOfWeek/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function gH8E(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return lastDayOfWeek;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name lastDayOfWeek
       * @category Week Helpers
       * @summary Return the last day of a week for the given date.
       *
       * @description
       * Return the last day of a week for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @returns {Date} the last day of a week
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // The last day of a week for 2 September 2014 11:55:00:
       * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Sat Sep 06 2014 00:00:00
       *
       * @example
       * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:
       * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
       * //=> Sun Sep 07 2014 00:00:00
       */


      function lastDayOfWeek(dirtyDate, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6');
        }

        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var day = date.getDay();
        var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
        date.setHours(0, 0, 0, 0);
        date.setDate(date.getDate() + diff);
        return date;
      }
      /***/

    },

    /***/
    "gLRL":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/isWeekend/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function gLRL(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isWeekend;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isWeekend
       * @category Weekday Helpers
       * @summary Does the given date fall on a weekend?
       *
       * @description
       * Does the given date fall on a weekend?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date falls on a weekend
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Does 5 October 2014 fall on a weekend?
       * var result = isWeekend(new Date(2014, 9, 5))
       * //=> true
       */


      function isWeekend(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var day = date.getDay();
        return day === 0 || day === 6;
      }
      /***/

    },

    /***/
    "gME1":
    /*!************************************************!*\
      !*** ./node_modules/date-fns/esm/set/index.js ***!
      \************************************************/

    /*! exports provided: default */

    /***/
    function gME1(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return set;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _setMonth_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../setMonth/index.js */
      "nQ4q");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name set
       * @category Common Helpers
       * @summary Set date values to a given date.
       *
       * @description
       * Set date values to a given date.
       *
       * Sets time values to date from object `values`.
       * A value is not set if it is undefined or null or doesn't exist in `values`.
       *
       * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts
       * to use native `Date#setX` methods. If you use this function, you may not want to include the
       * other `setX` functions that date-fns provides if you are concerned about the bundle size.
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Object} values - an object with options
       * @param {Number} [values.year] - the number of years to be set
       * @param {Number} [values.month] - the number of months to be set
       * @param {Number} [values.date] - the number of days to be set
       * @param {Number} [values.hours] - the number of hours to be set
       * @param {Number} [values.minutes] - the number of minutes to be set
       * @param {Number} [values.seconds] - the number of seconds to be set
       * @param {Number} [values.milliseconds] - the number of milliseconds to be set
       * @returns {Date} the new date with options set
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `values` must be an object
       *
       * @example
       * // Transform 1 September 2014 into 20 October 2015 in a single line:
       * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })
       * //=> Tue Oct 20 2015 00:00:00
       *
       * @example
       * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:
       * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })
       * //=> Mon Sep 01 2014 12:23:45
       */


      function set(dirtyDate, values) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);

        if (typeof values !== 'object' || values === null) {
          throw new RangeError('values parameter must be an object');
        }

        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date

        if (isNaN(date)) {
          return new Date(NaN);
        }

        if (values.year != null) {
          date.setFullYear(values.year);
        }

        if (values.month != null) {
          date = Object(_setMonth_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, values.month);
        }

        if (values.date != null) {
          date.setDate(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.date));
        }

        if (values.hours != null) {
          date.setHours(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.hours));
        }

        if (values.minutes != null) {
          date.setMinutes(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.minutes));
        }

        if (values.seconds != null) {
          date.setSeconds(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.seconds));
        }

        if (values.milliseconds != null) {
          date.setMilliseconds(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.milliseconds));
        }

        return date;
      }
      /***/

    },

    /***/
    "gXqy":
    /*!*********************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInCalendarDays/index.js ***!
      \*********************************************************************/

    /*! exports provided: default */

    /***/
    function gXqy(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInCalendarDays;
      });
      /* harmony import */


      var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
      "JCDJ");
      /* harmony import */


      var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfDay/index.js */
      "M34a");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_DAY = 86400000;
      /**
       * @name differenceInCalendarDays
       * @category Day Helpers
       * @summary Get the number of calendar days between the given dates.
       *
       * @description
       * Get the number of calendar days between the given dates. This means that the times are removed
       * from the dates and then the difference in days is calculated.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of calendar days
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many calendar days are between
       * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
       * var result = differenceInCalendarDays(
       *   new Date(2012, 6, 2, 0, 0),
       *   new Date(2011, 6, 2, 23, 0)
       * )
       * //=> 366
       * // How many calendar days are between
       * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
       * var result = differenceInCalendarDays(
       *   new Date(2011, 6, 3, 0, 1),
       *   new Date(2011, 6, 2, 23, 59)
       * )
       * //=> 1
       */

      function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var startOfDayLeft = Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
        var startOfDayRight = Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
        var timestampLeft = startOfDayLeft.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(startOfDayLeft);
        var timestampRight = startOfDayRight.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(startOfDayRight); // Round the number of days to the nearest integer
        // because the number of milliseconds in a day is not constant
        // (e.g. it's different in the day of the daylight saving time clock shift)

        return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
      }
      /***/

    },

    /***/
    "gr1v":
    /*!*******************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js ***!
      \*******************************************************************/

    /*! exports provided: default */

    /***/
    function gr1v(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getUTCISOWeekYear;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfUTCISOWeek/index.js */
      "tpup");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg"); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function getUTCISOWeekYear(dirtyDate) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var year = date.getUTCFullYear();
        var fourthOfJanuaryOfNextYear = new Date(0);
        fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
        fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
        var startOfNextYear = Object(_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfNextYear);
        var fourthOfJanuaryOfThisYear = new Date(0);
        fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
        fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
        var startOfThisYear = Object(_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfThisYear);

        if (date.getTime() >= startOfNextYear.getTime()) {
          return year + 1;
        } else if (date.getTime() >= startOfThisYear.getTime()) {
          return year;
        } else {
          return year - 1;
        }
      }
      /***/

    },

    /***/
    "hW07":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/isSunday/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function hW07(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isSunday;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isSunday
       * @category Weekday Helpers
       * @summary Is the given date Sunday?
       *
       * @description
       * Is the given date Sunday?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is Sunday
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Is 21 September 2014 Sunday?
       * var result = isSunday(new Date(2014, 8, 21))
       * //=> true
       */


      function isSunday(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 0;
      }
      /***/

    },

    /***/
    "hroe":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/setISODay/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function hroe(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setISODay;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _addDays_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../addDays/index.js */
      "9/EM");
      /* harmony import */


      var _getISODay_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../getISODay/index.js */
      "NXEZ");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setISODay
       * @category Weekday Helpers
       * @summary Set the day of the ISO week to the given date.
       *
       * @description
       * Set the day of the ISO week to the given date.
       * ISO week starts with Monday.
       * 7 is the index of Sunday, 1 is the index of Monday etc.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} day - the day of the ISO week of the new date
       * @returns {Date} the new date with the day of the ISO week set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set Sunday to 1 September 2014:
       * var result = setISODay(new Date(2014, 8, 1), 7)
       * //=> Sun Sep 07 2014 00:00:00
       */


      function setISODay(dirtyDate, dirtyDay) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var day = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDay);
        var currentDay = Object(_getISODay_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date);
        var diff = day - currentDay;
        return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, diff);
      }
      /***/

    },

    /***/
    "i5S4":
    /*!********************************************************************!*\
      !*** ./node_modules/angular-calendar/fesm2015/angular-calendar.js ***!
      \********************************************************************/

    /*! exports provided: DAYS_OF_WEEK, CalendarA11y, CalendarAngularDateFormatter, CalendarCommonModule, CalendarDateFormatter, CalendarDayModule, CalendarDayViewComponent, CalendarEventTimesChangedEventType, CalendarEventTitleFormatter, CalendarModule, CalendarMomentDateFormatter, CalendarMonthModule, CalendarMonthViewComponent, CalendarNativeDateFormatter, CalendarUtils, CalendarView, CalendarWeekModule, CalendarWeekViewComponent, DateAdapter, MOMENT, collapseAnimation, getWeekViewPeriod, ɵa, ɵb, ɵc, ɵd, ɵe, ɵf, ɵg, ɵh, ɵi, ɵj, ɵk, ɵl, ɵm, ɵn, ɵo, ɵp, ɵq, ɵr, ɵs */

    /***/
    function i5S4(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarA11y", function () {
        return CalendarA11y;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarAngularDateFormatter", function () {
        return CalendarAngularDateFormatter;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarCommonModule", function () {
        return CalendarCommonModule;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarDateFormatter", function () {
        return CalendarDateFormatter;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarDayModule", function () {
        return CalendarDayModule;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarDayViewComponent", function () {
        return CalendarDayViewComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarEventTimesChangedEventType", function () {
        return CalendarEventTimesChangedEventType;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarEventTitleFormatter", function () {
        return CalendarEventTitleFormatter;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarModule", function () {
        return CalendarModule;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarMomentDateFormatter", function () {
        return CalendarMomentDateFormatter;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarMonthModule", function () {
        return CalendarMonthModule;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarMonthViewComponent", function () {
        return CalendarMonthViewComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarNativeDateFormatter", function () {
        return CalendarNativeDateFormatter;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarUtils", function () {
        return CalendarUtils;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarView", function () {
        return CalendarView;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarWeekModule", function () {
        return CalendarWeekModule;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "CalendarWeekViewComponent", function () {
        return CalendarWeekViewComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DateAdapter", function () {
        return DateAdapter;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "MOMENT", function () {
        return MOMENT;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "collapseAnimation", function () {
        return collapseAnimation;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getWeekViewPeriod", function () {
        return getWeekViewPeriod;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵa", function () {
        return CalendarOpenDayEventsComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵb", function () {
        return CalendarEventActionsComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵc", function () {
        return CalendarEventTitleComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵd", function () {
        return CalendarTooltipWindowComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵe", function () {
        return CalendarTooltipDirective;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵf", function () {
        return CalendarPreviousViewDirective;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵg", function () {
        return CalendarNextViewDirective;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵh", function () {
        return CalendarTodayDirective;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵi", function () {
        return CalendarDatePipe;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵj", function () {
        return CalendarEventTitlePipe;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵk", function () {
        return CalendarA11yPipe;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵl", function () {
        return ClickDirective;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵm", function () {
        return KeydownEnterDirective;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵn", function () {
        return CalendarMonthCellComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵo", function () {
        return CalendarMonthViewHeaderComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵp", function () {
        return CalendarWeekViewHeaderComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵq", function () {
        return CalendarWeekViewEventComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵr", function () {
        return CalendarWeekViewHourSegmentComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵs", function () {
        return CalendarWeekViewCurrentTimeMarkerComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "UWrc");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common */
      "SVse");
      /* harmony import */


      var positioning__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! positioning */
      "EwKL");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");
      /* harmony import */


      var calendar_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! calendar-utils */
      "r5Jv");
      /* harmony reexport (safe) */


      __webpack_require__.d(__webpack_exports__, "DAYS_OF_WEEK", function () {
        return calendar_utils__WEBPACK_IMPORTED_MODULE_6__["DAYS_OF_WEEK"];
      });
      /* harmony import */


      var angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! angular-draggable-droppable */
      "QBGs");
      /* harmony import */


      var _angular_animations__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! @angular/animations */
      "GS7A");
      /* harmony import */


      var angular_resizable_element__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! angular-resizable-element */
      "yotz");

      var CalendarEventActionsComponent = function CalendarEventActionsComponent() {
        _classCallCheck(this, CalendarEventActionsComponent);

        this.trackByActionId = function (index, action) {
          return action.id ? action.id : action;
        };
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarEventActionsComponent.prototype, "event", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarEventActionsComponent.prototype, "customTemplate", void 0);
      CalendarEventActionsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-event-actions',
        template: "\n    <ng-template\n      #defaultTemplate\n      let-event=\"event\"\n      let-trackByActionId=\"trackByActionId\"\n    >\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\n        <a\n          class=\"cal-event-action\"\n          href=\"javascript:;\"\n          *ngFor=\"let action of event.actions; trackBy: trackByActionId\"\n          (mwlClick)=\"action.onClick({ event: event, sourceEvent: $event })\"\n          (mwlKeydownEnter)=\"\n            action.onClick({ event: event, sourceEvent: $event })\n          \"\n          [ngClass]=\"action.cssClass\"\n          [innerHtml]=\"action.label\"\n          tabindex=\"0\"\n          role=\"button\"\n          [attr.aria-label]=\"\n            { action: action } | calendarA11y: 'actionButtonLabel'\n          \"\n        >\n        </a>\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        trackByActionId: trackByActionId\n      }\"\n    >\n    </ng-template>\n  "
      })], CalendarEventActionsComponent);

      var CalendarEventTitleComponent = function CalendarEventTitleComponent() {
        _classCallCheck(this, CalendarEventTitleComponent);
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarEventTitleComponent.prototype, "event", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarEventTitleComponent.prototype, "customTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarEventTitleComponent.prototype, "view", void 0);
      CalendarEventTitleComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-event-title',
        template: "\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\n      <span\n        class=\"cal-event-title\"\n        [innerHTML]=\"event.title | calendarEventTitle: view:event\"\n        [attr.aria-hidden]=\"{} | calendarA11y: 'hideEventTitle'\"\n      >\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        view: view\n      }\"\n    >\n    </ng-template>\n  "
      })], CalendarEventTitleComponent);

      var CalendarTooltipWindowComponent = function CalendarTooltipWindowComponent() {
        _classCallCheck(this, CalendarTooltipWindowComponent);
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarTooltipWindowComponent.prototype, "contents", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarTooltipWindowComponent.prototype, "placement", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarTooltipWindowComponent.prototype, "event", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarTooltipWindowComponent.prototype, "customTemplate", void 0);
      CalendarTooltipWindowComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-tooltip-window',
        template: "\n    <ng-template\n      #defaultTemplate\n      let-contents=\"contents\"\n      let-placement=\"placement\"\n      let-event=\"event\"\n    >\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\n        <div class=\"cal-tooltip-arrow\"></div>\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        contents: contents,\n        placement: placement,\n        event: event\n      }\"\n    >\n    </ng-template>\n  "
      })], CalendarTooltipWindowComponent);

      var CalendarTooltipDirective = /*#__PURE__*/function () {
        function CalendarTooltipDirective(elementRef, injector, renderer, componentFactoryResolver, viewContainerRef, document //tslint:disable-line
        ) {
          _classCallCheck(this, CalendarTooltipDirective);

          this.elementRef = elementRef;
          this.injector = injector;
          this.renderer = renderer;
          this.viewContainerRef = viewContainerRef;
          this.document = document;
          this.placement = 'auto'; // tslint:disable-line no-input-rename

          this.delay = null; // tslint:disable-line no-input-rename

          this.cancelTooltipDelay$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
          this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(CalendarTooltipWindowComponent);
        }

        _createClass(CalendarTooltipDirective, [{
          key: "ngOnChanges",
          value: function ngOnChanges(changes) {
            if (this.tooltipRef && (changes.contents || changes.customTemplate || changes.event)) {
              this.tooltipRef.instance.contents = this.contents;
              this.tooltipRef.instance.customTemplate = this.customTemplate;
              this.tooltipRef.instance.event = this.event;
              this.tooltipRef.changeDetectorRef.markForCheck();
            }
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.hide();
          }
        }, {
          key: "onMouseOver",
          value: function onMouseOver() {
            var _this13 = this;

            var delay$ = this.delay === null ? Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["of"])('now') : Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["timer"])(this.delay);
            delay$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.cancelTooltipDelay$)).subscribe(function () {
              _this13.show();
            });
          }
        }, {
          key: "onMouseOut",
          value: function onMouseOut() {
            this.hide();
          }
        }, {
          key: "show",
          value: function show() {
            var _this14 = this;

            if (!this.tooltipRef && this.contents) {
              this.tooltipRef = this.viewContainerRef.createComponent(this.tooltipFactory, 0, this.injector, []);
              this.tooltipRef.instance.contents = this.contents;
              this.tooltipRef.instance.customTemplate = this.customTemplate;
              this.tooltipRef.instance.event = this.event;

              if (this.appendToBody) {
                this.document.body.appendChild(this.tooltipRef.location.nativeElement);
              }

              requestAnimationFrame(function () {
                _this14.positionTooltip();
              });
            }
          }
        }, {
          key: "hide",
          value: function hide() {
            if (this.tooltipRef) {
              this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.tooltipRef.hostView));
              this.tooltipRef = null;
            }

            this.cancelTooltipDelay$.next();
          }
        }, {
          key: "positionTooltip",
          value: function positionTooltip() {
            var previousPositions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

            if (this.tooltipRef) {
              this.tooltipRef.changeDetectorRef.detectChanges();
              this.tooltipRef.instance.placement = Object(positioning__WEBPACK_IMPORTED_MODULE_3__["positionElements"])(this.elementRef.nativeElement, this.tooltipRef.location.nativeElement.children[0], this.placement, this.appendToBody); // keep re-positioning the tooltip until the arrow position doesn't make a difference

              if (previousPositions.indexOf(this.tooltipRef.instance.placement) === -1) {
                this.positionTooltip([].concat(_toConsumableArray(previousPositions), [this.tooltipRef.instance.placement]));
              }
            }
          }
        }]);

        return CalendarTooltipDirective;
      }();

      CalendarTooltipDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ComponentFactoryResolver"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["DOCUMENT"]]
          }]
        }];
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('mwlCalendarTooltip'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarTooltipDirective.prototype, "contents", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('tooltipPlacement'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarTooltipDirective.prototype, "placement", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('tooltipTemplate'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarTooltipDirective.prototype, "customTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('tooltipEvent'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarTooltipDirective.prototype, "event", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('tooltipAppendToBody'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], CalendarTooltipDirective.prototype, "appendToBody", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('tooltipDelay'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarTooltipDirective.prototype, "delay", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('mouseenter'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Function), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", []), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:returntype", void 0)], CalendarTooltipDirective.prototype, "onMouseOver", null);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('mouseleave'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Function), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", []), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:returntype", void 0)], CalendarTooltipDirective.prototype, "onMouseOut", null);
      CalendarTooltipDirective = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[mwlCalendarTooltip]'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_2__["DOCUMENT"])), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ComponentFactoryResolver"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"], Object])], CalendarTooltipDirective);

      var DateAdapter = function DateAdapter() {
        _classCallCheck(this, DateAdapter);
      };

      var CalendarView;

      (function (CalendarView) {
        CalendarView["Month"] = "month";
        CalendarView["Week"] = "week";
        CalendarView["Day"] = "day";
      })(CalendarView || (CalendarView = {}));

      var validateEvents = function validateEvents(events) {
        var warn = function warn() {
          var _console;

          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            args[_key4] = arguments[_key4];
          }

          return (_console = console).warn.apply(_console, ['angular-calendar'].concat(args));
        };

        return Object(calendar_utils__WEBPACK_IMPORTED_MODULE_6__["validateEvents"])(events, warn);
      };

      function isInside(outer, inner) {
        return Math.floor(outer.left) <= Math.ceil(inner.left) && Math.floor(inner.left) <= Math.ceil(outer.right) && Math.floor(outer.left) <= Math.ceil(inner.right) && Math.floor(inner.right) <= Math.ceil(outer.right) && Math.floor(outer.top) <= Math.ceil(inner.top) && Math.floor(inner.top) <= Math.ceil(outer.bottom) && Math.floor(outer.top) <= Math.ceil(inner.bottom) && Math.floor(inner.bottom) <= Math.ceil(outer.bottom);
      }

      function roundToNearest(amount, precision) {
        return Math.round(amount / precision) * precision;
      }

      var trackByEventId = function trackByEventId(index, event) {
        return event.id ? event.id : event;
      };

      var trackByWeekDayHeaderDate = function trackByWeekDayHeaderDate(index, day) {
        return day.date.toISOString();
      };

      var trackByHourSegment = function trackByHourSegment(index, segment) {
        return segment.date.toISOString();
      };

      var trackByHour = function trackByHour(index, hour) {
        return hour.segments[0].date.toISOString();
      };

      var trackByWeekAllDayEvent = function trackByWeekAllDayEvent(index, weekEvent) {
        return weekEvent.event.id ? weekEvent.event.id : weekEvent.event;
      };

      var trackByWeekTimeEvent = function trackByWeekTimeEvent(index, weekEvent) {
        return weekEvent.event.id ? weekEvent.event.id : weekEvent.event;
      };

      var MINUTES_IN_HOUR = 60;

      function getPixelAmountInMinutes(hourSegments, hourSegmentHeight) {
        return MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight);
      }

      function getMinutesMoved(movedY, hourSegments, hourSegmentHeight, eventSnapSize) {
        var draggedInPixelsSnapSize = roundToNearest(movedY, eventSnapSize || hourSegmentHeight);
        var pixelAmountInMinutes = getPixelAmountInMinutes(hourSegments, hourSegmentHeight);
        return draggedInPixelsSnapSize * pixelAmountInMinutes;
      }

      function getMinimumEventHeightInMinutes(hourSegments, hourSegmentHeight) {
        return getPixelAmountInMinutes(hourSegments, hourSegmentHeight) * hourSegmentHeight;
      }

      function getDefaultEventEnd(dateAdapter, event, minimumMinutes) {
        if (event.end) {
          return event.end;
        } else {
          return dateAdapter.addMinutes(event.start, minimumMinutes);
        }
      }

      function addDaysWithExclusions(dateAdapter, date, days, excluded) {
        var daysCounter = 0;
        var daysToAdd = 0;
        var changeDays = days < 0 ? dateAdapter.subDays : dateAdapter.addDays;
        var result = date;

        while (daysToAdd <= Math.abs(days)) {
          result = changeDays(date, daysCounter);
          var day = dateAdapter.getDay(result);

          if (excluded.indexOf(day) === -1) {
            daysToAdd++;
          }

          daysCounter++;
        }

        return result;
      }

      function isDraggedWithinPeriod(newStart, newEnd, period) {
        var end = newEnd || newStart;
        return period.start <= newStart && newStart <= period.end || period.start <= end && end <= period.end;
      }

      function shouldFireDroppedEvent(dropEvent, date, allDay, calendarId) {
        return dropEvent.dropData && dropEvent.dropData.event && (dropEvent.dropData.calendarId !== calendarId || dropEvent.dropData.event.allDay && !allDay || !dropEvent.dropData.event.allDay && allDay);
      }

      function getWeekViewPeriod(dateAdapter, viewDate, weekStartsOn) {
        var excluded = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
        var daysInWeek = arguments.length > 4 ? arguments[4] : undefined;
        var viewStart = daysInWeek ? dateAdapter.startOfDay(viewDate) : dateAdapter.startOfWeek(viewDate, {
          weekStartsOn: weekStartsOn
        });
        var endOfWeek = dateAdapter.endOfWeek(viewDate, {
          weekStartsOn: weekStartsOn
        });

        while (excluded.indexOf(dateAdapter.getDay(viewStart)) > -1 && viewStart < endOfWeek) {
          viewStart = dateAdapter.addDays(viewStart, 1);
        }

        if (daysInWeek) {
          var viewEnd = dateAdapter.endOfDay(addDaysWithExclusions(dateAdapter, viewStart, daysInWeek - 1, excluded));
          return {
            viewStart: viewStart,
            viewEnd: viewEnd
          };
        } else {
          var _viewEnd = endOfWeek;

          while (excluded.indexOf(dateAdapter.getDay(_viewEnd)) > -1 && _viewEnd > viewStart) {
            _viewEnd = dateAdapter.subDays(_viewEnd, 1);
          }

          return {
            viewStart: viewStart,
            viewEnd: _viewEnd
          };
        }
      }

      function isWithinThreshold(_ref15) {
        var x = _ref15.x,
            y = _ref15.y;
        var DRAG_THRESHOLD = 1;
        return Math.abs(x) > DRAG_THRESHOLD || Math.abs(y) > DRAG_THRESHOLD;
      }
      /**
       * Change the view date to the previous view. For example:
       *
       * ```typescript
       * <button
       *  mwlCalendarPreviousView
       *  [(viewDate)]="viewDate"
       *  [view]="view">
       *  Previous
       * </button>
       * ```
       */


      var CalendarPreviousViewDirective = /*#__PURE__*/function () {
        function CalendarPreviousViewDirective(dateAdapter) {
          _classCallCheck(this, CalendarPreviousViewDirective);

          this.dateAdapter = dateAdapter;
          /**
           * Days to skip when going back by 1 day
           */

          this.excludeDays = [];
          /**
           * Called when the view date is changed
           */

          this.viewDateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        }
        /**
         * @hidden
         */


        _createClass(CalendarPreviousViewDirective, [{
          key: "onClick",
          value: function onClick() {
            var subFn = {
              day: this.dateAdapter.subDays,
              week: this.dateAdapter.subWeeks,
              month: this.dateAdapter.subMonths
            }[this.view];

            if (this.view === CalendarView.Day) {
              this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, -1, this.excludeDays));
            } else if (this.view === CalendarView.Week && this.daysInWeek) {
              this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, -this.daysInWeek, this.excludeDays));
            } else {
              this.viewDateChange.emit(subFn(this.viewDate, 1));
            }
          }
        }]);

        return CalendarPreviousViewDirective;
      }();

      CalendarPreviousViewDirective.ctorParameters = function () {
        return [{
          type: DateAdapter
        }];
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarPreviousViewDirective.prototype, "view", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Date)], CalendarPreviousViewDirective.prototype, "viewDate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Array)], CalendarPreviousViewDirective.prototype, "excludeDays", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarPreviousViewDirective.prototype, "daysInWeek", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])], CalendarPreviousViewDirective.prototype, "viewDateChange", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('click'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Function), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", []), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:returntype", void 0)], CalendarPreviousViewDirective.prototype, "onClick", null);
      CalendarPreviousViewDirective = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[mwlCalendarPreviousView]'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [DateAdapter])], CalendarPreviousViewDirective);
      /**
       * Change the view date to the next view. For example:
       *
       * ```typescript
       * <button
       *  mwlCalendarNextView
       *  [(viewDate)]="viewDate"
       *  [view]="view">
       *  Next
       * </button>
       * ```
       */

      var CalendarNextViewDirective = /*#__PURE__*/function () {
        function CalendarNextViewDirective(dateAdapter) {
          _classCallCheck(this, CalendarNextViewDirective);

          this.dateAdapter = dateAdapter;
          /**
           * Days to skip when going forward by 1 day
           */

          this.excludeDays = [];
          /**
           * Called when the view date is changed
           */

          this.viewDateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        }
        /**
         * @hidden
         */


        _createClass(CalendarNextViewDirective, [{
          key: "onClick",
          value: function onClick() {
            var addFn = {
              day: this.dateAdapter.addDays,
              week: this.dateAdapter.addWeeks,
              month: this.dateAdapter.addMonths
            }[this.view];

            if (this.view === CalendarView.Day) {
              this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, 1, this.excludeDays));
            } else if (this.view === CalendarView.Week && this.daysInWeek) {
              this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, this.daysInWeek, this.excludeDays));
            } else {
              this.viewDateChange.emit(addFn(this.viewDate, 1));
            }
          }
        }]);

        return CalendarNextViewDirective;
      }();

      CalendarNextViewDirective.ctorParameters = function () {
        return [{
          type: DateAdapter
        }];
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarNextViewDirective.prototype, "view", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Date)], CalendarNextViewDirective.prototype, "viewDate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Array)], CalendarNextViewDirective.prototype, "excludeDays", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarNextViewDirective.prototype, "daysInWeek", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])], CalendarNextViewDirective.prototype, "viewDateChange", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('click'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Function), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", []), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:returntype", void 0)], CalendarNextViewDirective.prototype, "onClick", null);
      CalendarNextViewDirective = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[mwlCalendarNextView]'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [DateAdapter])], CalendarNextViewDirective);
      /**
       * Change the view date to the current day. For example:
       *
       * ```typescript
       * <button
       *  mwlCalendarToday
       *  [(viewDate)]="viewDate">
       *  Today
       * </button>
       * ```
       */

      var CalendarTodayDirective = /*#__PURE__*/function () {
        function CalendarTodayDirective(dateAdapter) {
          _classCallCheck(this, CalendarTodayDirective);

          this.dateAdapter = dateAdapter;
          /**
           * Called when the view date is changed
           */

          this.viewDateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        }
        /**
         * @hidden
         */


        _createClass(CalendarTodayDirective, [{
          key: "onClick",
          value: function onClick() {
            this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date()));
          }
        }]);

        return CalendarTodayDirective;
      }();

      CalendarTodayDirective.ctorParameters = function () {
        return [{
          type: DateAdapter
        }];
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Date)], CalendarTodayDirective.prototype, "viewDate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])], CalendarTodayDirective.prototype, "viewDateChange", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('click'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Function), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", []), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:returntype", void 0)], CalendarTodayDirective.prototype, "onClick", null);
      CalendarTodayDirective = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[mwlCalendarToday]'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [DateAdapter])], CalendarTodayDirective);
      /**
       * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.
       */

      var CalendarAngularDateFormatter = /*#__PURE__*/function () {
        function CalendarAngularDateFormatter(dateAdapter) {
          _classCallCheck(this, CalendarAngularDateFormatter);

          this.dateAdapter = dateAdapter;
        }
        /**
         * The month view header week day labels
         */


        _createClass(CalendarAngularDateFormatter, [{
          key: "monthViewColumnHeader",
          value: function monthViewColumnHeader(_ref16) {
            var date = _ref16.date,
                locale = _ref16.locale;
            return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'EEEE', locale);
          }
          /**
           * The month view cell day number
           */

        }, {
          key: "monthViewDayNumber",
          value: function monthViewDayNumber(_ref17) {
            var date = _ref17.date,
                locale = _ref17.locale;
            return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'd', locale);
          }
          /**
           * The month view title
           */

        }, {
          key: "monthViewTitle",
          value: function monthViewTitle(_ref18) {
            var date = _ref18.date,
                locale = _ref18.locale;
            return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'LLLL y', locale);
          }
          /**
           * The week view header week day labels
           */

        }, {
          key: "weekViewColumnHeader",
          value: function weekViewColumnHeader(_ref19) {
            var date = _ref19.date,
                locale = _ref19.locale;
            return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'EEEE', locale);
          }
          /**
           * The week view sub header day and month labels
           */

        }, {
          key: "weekViewColumnSubHeader",
          value: function weekViewColumnSubHeader(_ref20) {
            var date = _ref20.date,
                locale = _ref20.locale;
            return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'MMM d', locale);
          }
          /**
           * The week view title
           */

        }, {
          key: "weekViewTitle",
          value: function weekViewTitle(_ref21) {
            var date = _ref21.date,
                locale = _ref21.locale,
                weekStartsOn = _ref21.weekStartsOn,
                excludeDays = _ref21.excludeDays,
                daysInWeek = _ref21.daysInWeek;

            var _getWeekViewPeriod = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek),
                viewStart = _getWeekViewPeriod.viewStart,
                viewEnd = _getWeekViewPeriod.viewEnd;

            var format = function format(dateToFormat, showYear) {
              return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(dateToFormat, 'MMM d' + (showYear ? ', yyyy' : ''), locale);
            };

            return "".concat(format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()), " - ").concat(format(viewEnd, true));
          }
          /**
           * The time formatting down the left hand side of the week view
           */

        }, {
          key: "weekViewHour",
          value: function weekViewHour(_ref22) {
            var date = _ref22.date,
                locale = _ref22.locale;
            return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'h a', locale);
          }
          /**
           * The time formatting down the left hand side of the day view
           */

        }, {
          key: "dayViewHour",
          value: function dayViewHour(_ref23) {
            var date = _ref23.date,
                locale = _ref23.locale;
            return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'h a', locale);
          }
          /**
           * The day view title
           */

        }, {
          key: "dayViewTitle",
          value: function dayViewTitle(_ref24) {
            var date = _ref24.date,
                locale = _ref24.locale;
            return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'EEEE, MMMM d, y', locale);
          }
        }]);

        return CalendarAngularDateFormatter;
      }();

      CalendarAngularDateFormatter.ctorParameters = function () {
        return [{
          type: DateAdapter
        }];
      };

      CalendarAngularDateFormatter = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [DateAdapter])], CalendarAngularDateFormatter);
      /**
       * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href="http://momentjs.com/" target="_blank">moment</a>.
       *
       * If you wish, you may override any of the defaults via angulars DI. For example:
       *
       * ```typescript
       * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';
       * import { formatDate } from '@angular/common';
       * import { Injectable } from '@angular/core';
       *
       * @Injectable()
       * class CustomDateFormatter extends CalendarDateFormatter {
       *
       *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {
       *     return formatDate(date, 'EEE', locale); // use short week days
       *   }
       *
       * }
       *
       * // in your component that uses the calendar
       * providers: [{
       *   provide: CalendarDateFormatter,
       *   useClass: CustomDateFormatter
       * }]
       * ```
       */

      var CalendarDateFormatter = /*#__PURE__*/function (_CalendarAngularDateF) {
        _inherits(CalendarDateFormatter, _CalendarAngularDateF);

        var _super = _createSuper(CalendarDateFormatter);

        function CalendarDateFormatter() {
          _classCallCheck(this, CalendarDateFormatter);

          return _super.apply(this, arguments);
        }

        return CalendarDateFormatter;
      }(CalendarAngularDateFormatter);

      CalendarDateFormatter = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()], CalendarDateFormatter);
      /**
       * This pipe is primarily for rendering the current view title. Example usage:
       * ```typescript
       * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`
       * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}
       * ```
       */

      var CalendarDatePipe = /*#__PURE__*/function () {
        function CalendarDatePipe(dateFormatter, locale) {
          _classCallCheck(this, CalendarDatePipe);

          this.dateFormatter = dateFormatter;
          this.locale = locale;
        }

        _createClass(CalendarDatePipe, [{
          key: "transform",
          value: function transform(date, method) {
            var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.locale;
            var weekStartsOn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
            var excludeDays = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
            var daysInWeek = arguments.length > 5 ? arguments[5] : undefined;

            if (typeof this.dateFormatter[method] === 'undefined') {
              var allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarDateFormatter.prototype)).filter(function (iMethod) {
                return iMethod !== 'constructor';
              });
              throw new Error("".concat(method, " is not a valid date formatter. Can only be one of ").concat(allowedMethods.join(', ')));
            }

            return this.dateFormatter[method]({
              date: date,
              locale: locale,
              weekStartsOn: weekStartsOn,
              excludeDays: excludeDays,
              daysInWeek: daysInWeek
            });
          }
        }]);

        return CalendarDatePipe;
      }();

      CalendarDatePipe.ctorParameters = function () {
        return [{
          type: CalendarDateFormatter
        }, {
          type: String,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]]
          }]
        }];
      };

      CalendarDatePipe = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({
        name: 'calendarDate'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [CalendarDateFormatter, String])], CalendarDatePipe);
      /**
       * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:
       *
       * ```typescript
       * import { Injectable } from '@angular/core';
       * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';
       *
       * @Injectable()
       * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {
       *
       *   month(event: CalendarEvent): string {
       *     return `Custom prefix: ${event.title}`;
       *   }
       *
       * }
       *
       * // in your component
       * providers: [{
       *  provide: CalendarEventTitleFormatter,
       *  useClass: CustomEventTitleFormatter
       * }]
       * ```
       */

      var CalendarEventTitleFormatter = /*#__PURE__*/function () {
        function CalendarEventTitleFormatter() {
          _classCallCheck(this, CalendarEventTitleFormatter);
        }

        _createClass(CalendarEventTitleFormatter, [{
          key: "month",

          /**
           * The month view event title.
           */
          value: function month(event, title) {
            return event.title;
          }
          /**
           * The month view event tooltip. Return a falsey value from this to disable the tooltip.
           */

        }, {
          key: "monthTooltip",
          value: function monthTooltip(event, title) {
            return event.title;
          }
          /**
           * The week view event title.
           */

        }, {
          key: "week",
          value: function week(event, title) {
            return event.title;
          }
          /**
           * The week view event tooltip. Return a falsey value from this to disable the tooltip.
           */

        }, {
          key: "weekTooltip",
          value: function weekTooltip(event, title) {
            return event.title;
          }
          /**
           * The day view event title.
           */

        }, {
          key: "day",
          value: function day(event, title) {
            return event.title;
          }
          /**
           * The day view event tooltip. Return a falsey value from this to disable the tooltip.
           */

        }, {
          key: "dayTooltip",
          value: function dayTooltip(event, title) {
            return event.title;
          }
        }]);

        return CalendarEventTitleFormatter;
      }();

      var CalendarEventTitlePipe = /*#__PURE__*/function () {
        function CalendarEventTitlePipe(calendarEventTitle) {
          _classCallCheck(this, CalendarEventTitlePipe);

          this.calendarEventTitle = calendarEventTitle;
        }

        _createClass(CalendarEventTitlePipe, [{
          key: "transform",
          value: function transform(title, titleType, event) {
            return this.calendarEventTitle[titleType](event, title);
          }
        }]);

        return CalendarEventTitlePipe;
      }();

      CalendarEventTitlePipe.ctorParameters = function () {
        return [{
          type: CalendarEventTitleFormatter
        }];
      };

      CalendarEventTitlePipe = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({
        name: 'calendarEventTitle'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [CalendarEventTitleFormatter])], CalendarEventTitlePipe);

      var ClickDirective = /*#__PURE__*/function () {
        function ClickDirective(renderer, elm, document) {
          _classCallCheck(this, ClickDirective);

          this.renderer = renderer;
          this.elm = elm;
          this.document = document;
          this.clickListenerDisabled = false;
          this.click = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"](); // tslint:disable-line

          this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        }

        _createClass(ClickDirective, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this15 = this;

            if (!this.clickListenerDisabled) {
              this.listen().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.destroy$)).subscribe(function (event) {
                event.stopPropagation();

                _this15.click.emit(event);
              });
            }
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.destroy$.next();
          }
        }, {
          key: "listen",
          value: function listen() {
            var _this16 = this;

            return new rxjs__WEBPACK_IMPORTED_MODULE_4__["Observable"](function (observer) {
              return _this16.renderer.listen(_this16.elm.nativeElement, 'click', function (event) {
                observer.next(event);
              });
            });
          }
        }]);

        return ClickDirective;
      }();

      ClickDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["DOCUMENT"]]
          }]
        }];
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], ClickDirective.prototype, "clickListenerDisabled", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])('mwlClick'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], ClickDirective.prototype, "click", void 0);
      ClickDirective = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[mwlClick]'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_2__["DOCUMENT"])), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], Object])], ClickDirective);

      var KeydownEnterDirective = /*#__PURE__*/function () {
        function KeydownEnterDirective() {
          _classCallCheck(this, KeydownEnterDirective);

          this.keydown = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"](); // tslint:disable-line
        }

        _createClass(KeydownEnterDirective, [{
          key: "onKeyPress",
          value: function onKeyPress(event) {
            if (event.keyCode === 13 || event.which === 13 || event.key === 'Enter') {
              event.preventDefault();
              event.stopPropagation();
              this.keydown.emit(event);
            }
          }
        }]);

        return KeydownEnterDirective;
      }();

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])('mwlKeydownEnter'), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], KeydownEnterDirective.prototype, "keydown", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('keydown', ['$event']), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Function), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [KeyboardEvent]), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:returntype", void 0)], KeydownEnterDirective.prototype, "onKeyPress", null);
      KeydownEnterDirective = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[mwlKeydownEnter]'
      })], KeydownEnterDirective);

      var CalendarUtils = /*#__PURE__*/function () {
        function CalendarUtils(dateAdapter) {
          _classCallCheck(this, CalendarUtils);

          this.dateAdapter = dateAdapter;
        }

        _createClass(CalendarUtils, [{
          key: "getMonthView",
          value: function getMonthView(args) {
            return Object(calendar_utils__WEBPACK_IMPORTED_MODULE_6__["getMonthView"])(this.dateAdapter, args);
          }
        }, {
          key: "getWeekViewHeader",
          value: function getWeekViewHeader(args) {
            return Object(calendar_utils__WEBPACK_IMPORTED_MODULE_6__["getWeekViewHeader"])(this.dateAdapter, args);
          }
        }, {
          key: "getWeekView",
          value: function getWeekView(args) {
            return Object(calendar_utils__WEBPACK_IMPORTED_MODULE_6__["getWeekView"])(this.dateAdapter, args);
          }
        }]);

        return CalendarUtils;
      }();

      CalendarUtils.ctorParameters = function () {
        return [{
          type: DateAdapter
        }];
      };

      CalendarUtils = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [DateAdapter])], CalendarUtils);
      /**
       * This class is responsible for adding accessibility to the calendar.
       * You may override any of its methods via angulars DI to suit your requirements.
       * For example:
       *
       * ```typescript
       * import { A11yParams, CalendarA11y } from 'angular-calendar';
       * import { formatDate, I18nPluralPipe } from '@angular/common';
       * import { Injectable } from '@angular/core';
       *
       * // adding your own a11y params
       * export interface CustomA11yParams extends A11yParams {
       *   isDrSuess?: boolean;
       * }
       *
       * @Injectable()
       * export class CustomCalendarA11y extends CalendarA11y {
       *   constructor(protected i18nPlural: I18nPluralPipe) {
       *     super(i18nPlural);
       *   }
       *
       *   // overriding a function
       *   public openDayEventsLandmark({ date, locale, isDrSuess }: CustomA11yParams): string {
       *     if (isDrSuess) {
       *       return `
       *         ${formatDate(date, 'EEEE MMMM d', locale)}
       *          Today you are you! That is truer than true! There is no one alive
       *          who is you-er than you!
       *       `;
       *     }
       *   }
       * }
       *
       * // in your component that uses the calendar
       * providers: [{
       *  provide: CalendarA11y,
       *  useClass: CustomCalendarA11y
       * }]
       * ```
       */

      var CalendarA11y = /*#__PURE__*/function () {
        function CalendarA11y(i18nPlural) {
          _classCallCheck(this, CalendarA11y);

          this.i18nPlural = i18nPlural;
        }
        /**
         * Aria label for the badges/date of a cell
         * @example: `Saturday October 19 1 event click to expand`
         */


        _createClass(CalendarA11y, [{
          key: "monthCell",
          value: function monthCell(_ref25) {
            var day = _ref25.day,
                locale = _ref25.locale;

            if (day.badgeTotal > 0) {
              return "\n        ".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(day.date, 'EEEE MMMM d', locale), ",\n        ").concat(this.i18nPlural.transform(day.badgeTotal, {
                '=0': 'No events',
                '=1': 'One event',
                other: '# events'
              }), ",\n         click to expand\n      ");
            } else {
              return "".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(day.date, 'EEEE MMMM d', locale));
            }
          }
          /**
           * Aria label for the open day events start landmark
           * @example: `Saturday October 19 expanded view`
           */

        }, {
          key: "openDayEventsLandmark",
          value: function openDayEventsLandmark(_ref26) {
            var date = _ref26.date,
                locale = _ref26.locale;
            return "\n      Beginning of expanded view for ".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'EEEE MMMM dd', locale), "\n    ");
          }
          /**
           * Aria label for alert that a day in the month view was expanded
           * @example: `Saturday October 19 expanded`
           */

        }, {
          key: "openDayEventsAlert",
          value: function openDayEventsAlert(_ref27) {
            var date = _ref27.date,
                locale = _ref27.locale;
            return "".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'EEEE MMMM dd', locale), " expanded");
          }
          /**
           * Descriptive aria label for an event
           * @example: `Saturday October 19th, Scott's Pizza Party, from 11:00am to 5:00pm`
           */

        }, {
          key: "eventDescription",
          value: function eventDescription(_ref28) {
            var event = _ref28.event,
                locale = _ref28.locale;

            if (event.allDay === true) {
              return this.allDayEventDescription({
                event: event,
                locale: locale
              });
            }

            var aria = "\n      ".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(event.start, 'EEEE MMMM dd', locale), ",\n      ").concat(event.title, ", from ").concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(event.start, 'hh:mm a', locale), "\n    ");

            if (event.end) {
              return aria + " to ".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(event.end, 'hh:mm a', locale));
            }

            return aria;
          }
          /**
           * Descriptive aria label for an all day event
           * @example:
           * `Scott's Party, event spans multiple days: start time October 19 5:00pm, no stop time`
           */

        }, {
          key: "allDayEventDescription",
          value: function allDayEventDescription(_ref29) {
            var event = _ref29.event,
                locale = _ref29.locale;
            var aria = "\n      ".concat(event.title, ", event spans multiple days:\n      start time ").concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(event.start, 'MMMM dd hh:mm a', locale), "\n    ");

            if (event.end) {
              return aria + ", stop time ".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(event.end, 'MMMM d hh:mm a', locale));
            }

            return aria + ", no stop time";
          }
          /**
           * Aria label for the calendar event actions icons
           * @returns 'Edit' for fa-pencil icons, and 'Delete' for fa-times icons
           */

        }, {
          key: "actionButtonLabel",
          value: function actionButtonLabel(_ref30) {
            var action = _ref30.action;
            return action.a11yLabel;
          }
          /**
           * @returns {number} Tab index to be given to month cells
           */

        }, {
          key: "monthCellTabIndex",
          value: function monthCellTabIndex() {
            return 0;
          }
          /**
           * @returns true if the events inside the month cell should be aria-hidden
           */

        }, {
          key: "hideMonthCellEvents",
          value: function hideMonthCellEvents() {
            return true;
          }
          /**
           * @returns true if event titles should be aria-hidden (global)
           */

        }, {
          key: "hideEventTitle",
          value: function hideEventTitle() {
            return true;
          }
          /**
           * @returns true if hour segments in the week view should be aria-hidden
           */

        }, {
          key: "hideWeekHourSegment",
          value: function hideWeekHourSegment() {
            return true;
          }
          /**
           * @returns true if hour segments in the day view should be aria-hidden
           */

        }, {
          key: "hideDayHourSegment",
          value: function hideDayHourSegment() {
            return true;
          }
        }]);

        return CalendarA11y;
      }();

      CalendarA11y.ctorParameters = function () {
        return [{
          type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["I18nPluralPipe"]
        }];
      };

      CalendarA11y = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_2__["I18nPluralPipe"]])], CalendarA11y);
      /**
       * This pipe is primarily for rendering aria labels. Example usage:
       * ```typescript
       * // where `myEvent` is a `CalendarEvent` and myLocale is a locale identifier
       * {{ { event: myEvent, locale: myLocale } | calendarA11y: 'eventDescription' }}
       * ```
       */

      var CalendarA11yPipe = /*#__PURE__*/function () {
        function CalendarA11yPipe(calendarA11y, locale) {
          _classCallCheck(this, CalendarA11yPipe);

          this.calendarA11y = calendarA11y;
          this.locale = locale;
        }

        _createClass(CalendarA11yPipe, [{
          key: "transform",
          value: function transform(a11yParams, method) {
            a11yParams.locale = a11yParams.locale || this.locale;

            if (typeof this.calendarA11y[method] === 'undefined') {
              var allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarA11y.prototype)).filter(function (iMethod) {
                return iMethod !== 'constructor';
              });
              throw new Error("".concat(method, " is not a valid a11y method. Can only be one of ").concat(allowedMethods.join(', ')));
            }

            return this.calendarA11y[method](a11yParams);
          }
        }]);

        return CalendarA11yPipe;
      }();

      CalendarA11yPipe.ctorParameters = function () {
        return [{
          type: CalendarA11y
        }, {
          type: String,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]]
          }]
        }];
      };

      CalendarA11yPipe = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({
        name: 'calendarA11y'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [CalendarA11y, String])], CalendarA11yPipe);
      var MOMENT = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('Moment');
      /**
       * This will use <a href="http://momentjs.com/" target="_blank">moment</a> to do all date formatting. To use this class:
       *
       * ```typescript
       * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';
       * import moment from 'moment';
       *
       * // in your component
       * provide: [{
       *   provide: MOMENT, useValue: moment
       * }, {
       *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter
       * }]
       *
       * ```
       */

      var CalendarMomentDateFormatter = /*#__PURE__*/function () {
        /**
         * @hidden
         */
        function CalendarMomentDateFormatter(moment, dateAdapter) {
          _classCallCheck(this, CalendarMomentDateFormatter);

          this.moment = moment;
          this.dateAdapter = dateAdapter;
        }
        /**
         * The month view header week day labels
         */


        _createClass(CalendarMomentDateFormatter, [{
          key: "monthViewColumnHeader",
          value: function monthViewColumnHeader(_ref31) {
            var date = _ref31.date,
                locale = _ref31.locale;
            return this.moment(date).locale(locale).format('dddd');
          }
          /**
           * The month view cell day number
           */

        }, {
          key: "monthViewDayNumber",
          value: function monthViewDayNumber(_ref32) {
            var date = _ref32.date,
                locale = _ref32.locale;
            return this.moment(date).locale(locale).format('D');
          }
          /**
           * The month view title
           */

        }, {
          key: "monthViewTitle",
          value: function monthViewTitle(_ref33) {
            var date = _ref33.date,
                locale = _ref33.locale;
            return this.moment(date).locale(locale).format('MMMM YYYY');
          }
          /**
           * The week view header week day labels
           */

        }, {
          key: "weekViewColumnHeader",
          value: function weekViewColumnHeader(_ref34) {
            var date = _ref34.date,
                locale = _ref34.locale;
            return this.moment(date).locale(locale).format('dddd');
          }
          /**
           * The week view sub header day and month labels
           */

        }, {
          key: "weekViewColumnSubHeader",
          value: function weekViewColumnSubHeader(_ref35) {
            var date = _ref35.date,
                locale = _ref35.locale;
            return this.moment(date).locale(locale).format('MMM D');
          }
          /**
           * The week view title
           */

        }, {
          key: "weekViewTitle",
          value: function weekViewTitle(_ref36) {
            var _this17 = this;

            var date = _ref36.date,
                locale = _ref36.locale,
                weekStartsOn = _ref36.weekStartsOn,
                excludeDays = _ref36.excludeDays,
                daysInWeek = _ref36.daysInWeek;

            var _getWeekViewPeriod2 = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek),
                viewStart = _getWeekViewPeriod2.viewStart,
                viewEnd = _getWeekViewPeriod2.viewEnd;

            var format = function format(dateToFormat, showYear) {
              return _this17.moment(dateToFormat).locale(locale).format('MMM D' + (showYear ? ', YYYY' : ''));
            };

            return "".concat(format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()), " - ").concat(format(viewEnd, true));
          }
          /**
           * The time formatting down the left hand side of the week view
           */

        }, {
          key: "weekViewHour",
          value: function weekViewHour(_ref37) {
            var date = _ref37.date,
                locale = _ref37.locale;
            return this.moment(date).locale(locale).format('ha');
          }
          /**
           * The time formatting down the left hand side of the day view
           */

        }, {
          key: "dayViewHour",
          value: function dayViewHour(_ref38) {
            var date = _ref38.date,
                locale = _ref38.locale;
            return this.moment(date).locale(locale).format('ha');
          }
          /**
           * The day view title
           */

        }, {
          key: "dayViewTitle",
          value: function dayViewTitle(_ref39) {
            var date = _ref39.date,
                locale = _ref39.locale;
            return this.moment(date).locale(locale).format('dddd, D MMMM, YYYY');
          }
        }]);

        return CalendarMomentDateFormatter;
      }();

      CalendarMomentDateFormatter.ctorParameters = function () {
        return [{
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [MOMENT]
          }]
        }, {
          type: DateAdapter
        }];
      };

      CalendarMomentDateFormatter = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(MOMENT)), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [Object, DateAdapter])], CalendarMomentDateFormatter);
      /**
       * This will use <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank">Intl</a> API to do all date formatting.
       *
       * You will need to include a <a href="https://github.com/andyearnshaw/Intl.js/">polyfill</a> for older browsers.
       */

      var CalendarNativeDateFormatter = /*#__PURE__*/function () {
        function CalendarNativeDateFormatter(dateAdapter) {
          _classCallCheck(this, CalendarNativeDateFormatter);

          this.dateAdapter = dateAdapter;
        }
        /**
         * The month view header week day labels
         */


        _createClass(CalendarNativeDateFormatter, [{
          key: "monthViewColumnHeader",
          value: function monthViewColumnHeader(_ref40) {
            var date = _ref40.date,
                locale = _ref40.locale;
            return new Intl.DateTimeFormat(locale, {
              weekday: 'long'
            }).format(date);
          }
          /**
           * The month view cell day number
           */

        }, {
          key: "monthViewDayNumber",
          value: function monthViewDayNumber(_ref41) {
            var date = _ref41.date,
                locale = _ref41.locale;
            return new Intl.DateTimeFormat(locale, {
              day: 'numeric'
            }).format(date);
          }
          /**
           * The month view title
           */

        }, {
          key: "monthViewTitle",
          value: function monthViewTitle(_ref42) {
            var date = _ref42.date,
                locale = _ref42.locale;
            return new Intl.DateTimeFormat(locale, {
              year: 'numeric',
              month: 'long'
            }).format(date);
          }
          /**
           * The week view header week day labels
           */

        }, {
          key: "weekViewColumnHeader",
          value: function weekViewColumnHeader(_ref43) {
            var date = _ref43.date,
                locale = _ref43.locale;
            return new Intl.DateTimeFormat(locale, {
              weekday: 'long'
            }).format(date);
          }
          /**
           * The week view sub header day and month labels
           */

        }, {
          key: "weekViewColumnSubHeader",
          value: function weekViewColumnSubHeader(_ref44) {
            var date = _ref44.date,
                locale = _ref44.locale;
            return new Intl.DateTimeFormat(locale, {
              day: 'numeric',
              month: 'short'
            }).format(date);
          }
          /**
           * The week view title
           */

        }, {
          key: "weekViewTitle",
          value: function weekViewTitle(_ref45) {
            var date = _ref45.date,
                locale = _ref45.locale,
                weekStartsOn = _ref45.weekStartsOn,
                excludeDays = _ref45.excludeDays,
                daysInWeek = _ref45.daysInWeek;

            var _getWeekViewPeriod3 = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek),
                viewStart = _getWeekViewPeriod3.viewStart,
                viewEnd = _getWeekViewPeriod3.viewEnd;

            var format = function format(dateToFormat, showYear) {
              return new Intl.DateTimeFormat(locale, {
                day: 'numeric',
                month: 'short',
                year: showYear ? 'numeric' : undefined
              }).format(dateToFormat);
            };

            return "".concat(format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()), " - ").concat(format(viewEnd, true));
          }
          /**
           * The time formatting down the left hand side of the week view
           */

        }, {
          key: "weekViewHour",
          value: function weekViewHour(_ref46) {
            var date = _ref46.date,
                locale = _ref46.locale;
            return new Intl.DateTimeFormat(locale, {
              hour: 'numeric'
            }).format(date);
          }
          /**
           * The time formatting down the left hand side of the day view
           */

        }, {
          key: "dayViewHour",
          value: function dayViewHour(_ref47) {
            var date = _ref47.date,
                locale = _ref47.locale;
            return new Intl.DateTimeFormat(locale, {
              hour: 'numeric'
            }).format(date);
          }
          /**
           * The day view title
           */

        }, {
          key: "dayViewTitle",
          value: function dayViewTitle(_ref48) {
            var date = _ref48.date,
                locale = _ref48.locale;
            return new Intl.DateTimeFormat(locale, {
              day: 'numeric',
              month: 'long',
              year: 'numeric',
              weekday: 'long'
            }).format(date);
          }
        }]);

        return CalendarNativeDateFormatter;
      }();

      CalendarNativeDateFormatter.ctorParameters = function () {
        return [{
          type: DateAdapter
        }];
      };

      CalendarNativeDateFormatter = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [DateAdapter])], CalendarNativeDateFormatter);
      var CalendarEventTimesChangedEventType;

      (function (CalendarEventTimesChangedEventType) {
        CalendarEventTimesChangedEventType["Drag"] = "drag";
        CalendarEventTimesChangedEventType["Drop"] = "drop";
        CalendarEventTimesChangedEventType["Resize"] = "resize";
      })(CalendarEventTimesChangedEventType || (CalendarEventTimesChangedEventType = {}));

      var CalendarCommonModule_1;
      /**
       * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:
       *
       * ```typescript
       * import { CalendarCommonModule, CalendarMonthModule } from 'angular-calendar';
       *
       * @NgModule({
       *   imports: [
       *     CalendarCommonModule.forRoot(),
       *     CalendarMonthModule
       *   ]
       * })
       * class MyModule {}
       * ```
       *
       */

      var CalendarCommonModule = CalendarCommonModule_1 = /*#__PURE__*/function () {
        function CalendarCommonModule() {
          _classCallCheck(this, CalendarCommonModule);
        }

        _createClass(CalendarCommonModule, null, [{
          key: "forRoot",
          value: function forRoot(dateAdapter) {
            var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            return {
              ngModule: CalendarCommonModule_1,
              providers: [dateAdapter, config.eventTitleFormatter || CalendarEventTitleFormatter, config.dateFormatter || CalendarDateFormatter, config.utils || CalendarUtils, config.a11y || CalendarA11y]
            };
          }
        }]);

        return CalendarCommonModule;
      }();

      CalendarCommonModule = CalendarCommonModule_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [CalendarEventActionsComponent, CalendarEventTitleComponent, CalendarTooltipWindowComponent, CalendarTooltipDirective, CalendarPreviousViewDirective, CalendarNextViewDirective, CalendarTodayDirective, CalendarDatePipe, CalendarEventTitlePipe, CalendarA11yPipe, ClickDirective, KeydownEnterDirective],
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"]],
        exports: [CalendarEventActionsComponent, CalendarEventTitleComponent, CalendarTooltipWindowComponent, CalendarTooltipDirective, CalendarPreviousViewDirective, CalendarNextViewDirective, CalendarTodayDirective, CalendarDatePipe, CalendarEventTitlePipe, CalendarA11yPipe, ClickDirective, KeydownEnterDirective],
        providers: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["I18nPluralPipe"]],
        entryComponents: [CalendarTooltipWindowComponent]
      })], CalendarCommonModule);
      /**
       * Shows all events on a given month. Example usage:
       *
       * ```typescript
       * <mwl-calendar-month-view
       *  [viewDate]="viewDate"
       *  [events]="events">
       * </mwl-calendar-month-view>
       * ```
       */

      var CalendarMonthViewComponent = /*#__PURE__*/function () {
        /**
         * @hidden
         */
        function CalendarMonthViewComponent(cdr, utils, locale, dateAdapter) {
          var _this18 = this;

          _classCallCheck(this, CalendarMonthViewComponent);

          this.cdr = cdr;
          this.utils = utils;
          this.dateAdapter = dateAdapter;
          /**
           * An array of events to display on view.
           * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63
           */

          this.events = [];
          /**
           * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view
           */

          this.excludeDays = [];
          /**
           * Whether the events list for the day of the `viewDate` option is visible or not
           */

          this.activeDayIsOpen = false;
          /**
           * The placement of the event tooltip
           */

          this.tooltipPlacement = 'auto';
          /**
           * Whether to append tooltips to the body or next to the trigger element
           */

          this.tooltipAppendToBody = true;
          /**
           * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip
           * will be displayed immediately.
           */

          this.tooltipDelay = null;
          /**
           * An output that will be called before the view is rendered for the current month.
           * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template
           */

          this.beforeViewRender = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
          /**
           * Called when the day cell is clicked
           */

          this.dayClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
          /**
           * Called when the event title is clicked
           */

          this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
          /**
           * Called when a header week day is clicked. Returns ISO day number.
           */

          this.columnHeaderClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
          /**
           * Called when an event is dragged and dropped
           */

          this.eventTimesChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
          /**
           * @hidden
           */

          this.trackByRowOffset = function (index, offset) {
            return _this18.view.days.slice(offset, _this18.view.totalDaysVisibleInWeek).map(function (day) {
              return day.date.toISOString();
            }).join('-');
          };
          /**
           * @hidden
           */


          this.trackByDate = function (index, day) {
            return day.date.toISOString();
          };

          this.locale = locale;
        }
        /**
         * @hidden
         */


        _createClass(CalendarMonthViewComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this19 = this;

            if (this.refresh) {
              this.refreshSubscription = this.refresh.subscribe(function () {
                _this19.refreshAll();

                _this19.cdr.markForCheck();
              });
            }
          }
          /**
           * @hidden
           */

        }, {
          key: "ngOnChanges",
          value: function ngOnChanges(changes) {
            var refreshHeader = changes.viewDate || changes.excludeDays || changes.weekendDays;
            var refreshBody = changes.viewDate || changes.events || changes.excludeDays || changes.weekendDays;

            if (refreshHeader) {
              this.refreshHeader();
            }

            if (changes.events) {
              validateEvents(this.events);
            }

            if (refreshBody) {
              this.refreshBody();
            }

            if (refreshHeader || refreshBody) {
              this.emitBeforeViewRender();
            }

            if (changes.activeDayIsOpen || changes.viewDate || changes.events || changes.excludeDays || changes.activeDay) {
              this.checkActiveDayIsOpen();
            }
          }
          /**
           * @hidden
           */

        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            if (this.refreshSubscription) {
              this.refreshSubscription.unsubscribe();
            }
          }
          /**
           * @hidden
           */

        }, {
          key: "toggleDayHighlight",
          value: function toggleDayHighlight(event, isHighlighted) {
            this.view.days.forEach(function (day) {
              if (isHighlighted && day.events.indexOf(event) > -1) {
                day.backgroundColor = event.color && event.color.secondary || '#D1E8FF';
              } else {
                delete day.backgroundColor;
              }
            });
          }
          /**
           * @hidden
           */

        }, {
          key: "eventDropped",
          value: function eventDropped(droppedOn, event, draggedFrom) {
            if (droppedOn !== draggedFrom) {
              var year = this.dateAdapter.getYear(droppedOn.date);
              var month = this.dateAdapter.getMonth(droppedOn.date);
              var date = this.dateAdapter.getDate(droppedOn.date);
              var newStart = this.dateAdapter.setDate(this.dateAdapter.setMonth(this.dateAdapter.setYear(event.start, year), month), date);
              var newEnd;

              if (event.end) {
                var secondsDiff = this.dateAdapter.differenceInSeconds(newStart, event.start);
                newEnd = this.dateAdapter.addSeconds(event.end, secondsDiff);
              }

              this.eventTimesChanged.emit({
                event: event,
                newStart: newStart,
                newEnd: newEnd,
                day: droppedOn,
                type: CalendarEventTimesChangedEventType.Drop
              });
            }
          }
        }, {
          key: "refreshHeader",
          value: function refreshHeader() {
            this.columnHeaders = this.utils.getWeekViewHeader({
              viewDate: this.viewDate,
              weekStartsOn: this.weekStartsOn,
              excluded: this.excludeDays,
              weekendDays: this.weekendDays
            });
          }
        }, {
          key: "refreshBody",
          value: function refreshBody() {
            this.view = this.utils.getMonthView({
              events: this.events,
              viewDate: this.viewDate,
              weekStartsOn: this.weekStartsOn,
              excluded: this.excludeDays,
              weekendDays: this.weekendDays
            });
          }
        }, {
          key: "checkActiveDayIsOpen",
          value: function checkActiveDayIsOpen() {
            var _this20 = this;

            if (this.activeDayIsOpen === true) {
              var activeDay = this.activeDay || this.viewDate;
              this.openDay = this.view.days.find(function (day) {
                return _this20.dateAdapter.isSameDay(day.date, activeDay);
              });
              var index = this.view.days.indexOf(this.openDay);
              this.openRowIndex = Math.floor(index / this.view.totalDaysVisibleInWeek) * this.view.totalDaysVisibleInWeek;
            } else {
              this.openRowIndex = null;
              this.openDay = null;
            }
          }
        }, {
          key: "refreshAll",
          value: function refreshAll() {
            this.refreshHeader();
            this.refreshBody();
            this.emitBeforeViewRender();
            this.checkActiveDayIsOpen();
          }
        }, {
          key: "emitBeforeViewRender",
          value: function emitBeforeViewRender() {
            if (this.columnHeaders && this.view) {
              this.beforeViewRender.emit({
                header: this.columnHeaders,
                body: this.view.days,
                period: this.view.period
              });
            }
          }
        }]);

        return CalendarMonthViewComponent;
      }();

      CalendarMonthViewComponent.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]
        }, {
          type: CalendarUtils
        }, {
          type: String,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]]
          }]
        }, {
          type: DateAdapter
        }];
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Date)], CalendarMonthViewComponent.prototype, "viewDate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Array)], CalendarMonthViewComponent.prototype, "events", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Array)], CalendarMonthViewComponent.prototype, "excludeDays", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], CalendarMonthViewComponent.prototype, "activeDayIsOpen", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Date)], CalendarMonthViewComponent.prototype, "activeDay", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"])], CalendarMonthViewComponent.prototype, "refresh", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarMonthViewComponent.prototype, "locale", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarMonthViewComponent.prototype, "tooltipPlacement", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarMonthViewComponent.prototype, "tooltipTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], CalendarMonthViewComponent.prototype, "tooltipAppendToBody", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarMonthViewComponent.prototype, "tooltipDelay", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarMonthViewComponent.prototype, "weekStartsOn", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarMonthViewComponent.prototype, "headerTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarMonthViewComponent.prototype, "cellTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarMonthViewComponent.prototype, "openDayEventsTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarMonthViewComponent.prototype, "eventTitleTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarMonthViewComponent.prototype, "eventActionsTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Array)], CalendarMonthViewComponent.prototype, "weekendDays", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarMonthViewComponent.prototype, "beforeViewRender", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarMonthViewComponent.prototype, "dayClicked", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarMonthViewComponent.prototype, "eventClicked", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarMonthViewComponent.prototype, "columnHeaderClicked", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarMonthViewComponent.prototype, "eventTimesChanged", void 0);
      CalendarMonthViewComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-month-view',
        template: "\n    <div class=\"cal-month-view\" role=\"grid\">\n      <mwl-calendar-month-view-header\n        [days]=\"columnHeaders\"\n        [locale]=\"locale\"\n        (columnHeaderClicked)=\"columnHeaderClicked.emit($event)\"\n        [customTemplate]=\"headerTemplate\"\n      >\n      </mwl-calendar-month-view-header>\n      <div class=\"cal-days\">\n        <div\n          *ngFor=\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\"\n        >\n          <div class=\"cal-cell-row\">\n            <mwl-calendar-month-cell\n              *ngFor=\"\n                let day of view.days\n                  | slice: rowIndex:rowIndex + view.totalDaysVisibleInWeek;\n                trackBy: trackByDate\n              \"\n              [ngClass]=\"day?.cssClass\"\n              [day]=\"day\"\n              [openDay]=\"openDay\"\n              [locale]=\"locale\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipDelay]=\"tooltipDelay\"\n              [customTemplate]=\"cellTemplate\"\n              [ngStyle]=\"{ backgroundColor: day.backgroundColor }\"\n              (mwlClick)=\"dayClicked.emit({ day: day, sourceEvent: $event })\"\n              [clickListenerDisabled]=\"dayClicked.observers.length === 0\"\n              (mwlKeydownEnter)=\"\n                dayClicked.emit({ day: day, sourceEvent: $event })\n              \"\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\n              mwlDroppable\n              dragOverClass=\"cal-drag-over\"\n              (drop)=\"\n                eventDropped(\n                  day,\n                  $event.dropData.event,\n                  $event.dropData.draggedFrom\n                )\n              \"\n              (eventClicked)=\"\n                eventClicked.emit({\n                  event: $event.event,\n                  sourceEvent: $event.sourceEvent\n                })\n              \"\n              [attr.tabindex]=\"{} | calendarA11y: 'monthCellTabIndex'\"\n            >\n            </mwl-calendar-month-cell>\n          </div>\n          <mwl-calendar-open-day-events\n            [locale]=\"locale\"\n            [isOpen]=\"openRowIndex === rowIndex\"\n            [events]=\"openDay?.events\"\n            [date]=\"openDay?.date\"\n            [customTemplate]=\"openDayEventsTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            [eventActionsTemplate]=\"eventActionsTemplate\"\n            (eventClicked)=\"\n              eventClicked.emit({\n                event: $event.event,\n                sourceEvent: $event.sourceEvent\n              })\n            \"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            (drop)=\"\n              eventDropped(\n                openDay,\n                $event.dropData.event,\n                $event.dropData.draggedFrom\n              )\n            \"\n          >\n          </mwl-calendar-open-day-events>\n        </div>\n      </div>\n    </div>\n  "
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], CalendarUtils, String, DateAdapter])], CalendarMonthViewComponent);

      var CalendarMonthViewHeaderComponent = function CalendarMonthViewHeaderComponent() {
        _classCallCheck(this, CalendarMonthViewHeaderComponent);

        this.columnHeaderClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Array)], CalendarMonthViewHeaderComponent.prototype, "days", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarMonthViewHeaderComponent.prototype, "locale", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarMonthViewHeaderComponent.prototype, "customTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarMonthViewHeaderComponent.prototype, "columnHeaderClicked", void 0);
      CalendarMonthViewHeaderComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-month-view-header',
        template: "\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\n    >\n      <div class=\"cal-cell-row cal-header\" role=\"row\">\n        <div\n          class=\"cal-cell\"\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          (click)=\"\n            columnHeaderClicked.emit({\n              isoDayNumber: day.day,\n              sourceEvent: $event\n            })\n          \"\n          [ngClass]=\"day.cssClass\"\n          tabindex=\"0\"\n          role=\"columnheader\"\n        >\n          {{ day.date | calendarDate: 'monthViewColumnHeader':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        days: days,\n        locale: locale,\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\n      }\"\n    >\n    </ng-template>\n  "
      })], CalendarMonthViewHeaderComponent);

      var CalendarMonthCellComponent = function CalendarMonthCellComponent() {
        _classCallCheck(this, CalendarMonthCellComponent);

        this.highlightDay = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.unhighlightDay = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.trackByEventId = trackByEventId;
        this.validateDrag = isWithinThreshold;
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarMonthCellComponent.prototype, "day", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarMonthCellComponent.prototype, "openDay", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarMonthCellComponent.prototype, "locale", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarMonthCellComponent.prototype, "tooltipPlacement", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], CalendarMonthCellComponent.prototype, "tooltipAppendToBody", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarMonthCellComponent.prototype, "customTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarMonthCellComponent.prototype, "tooltipTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarMonthCellComponent.prototype, "tooltipDelay", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])], CalendarMonthCellComponent.prototype, "highlightDay", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])], CalendarMonthCellComponent.prototype, "unhighlightDay", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarMonthCellComponent.prototype, "eventClicked", void 0);
      CalendarMonthCellComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-month-cell',
        template: "\n    <ng-template\n      #defaultTemplate\n      let-day=\"day\"\n      let-openDay=\"openDay\"\n      let-locale=\"locale\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-highlightDay=\"highlightDay\"\n      let-unhighlightDay=\"unhighlightDay\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\n      let-tooltipDelay=\"tooltipDelay\"\n      let-trackByEventId=\"trackByEventId\"\n      let-validateDrag=\"validateDrag\"\n    >\n      <div\n        class=\"cal-cell-top\"\n        [attr.aria-label]=\"\n          { day: day, locale: locale } | calendarA11y: 'monthCell'\n        \"\n      >\n        <span aria-hidden=\"true\">\n          <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\n            day.badgeTotal\n          }}</span>\n          <span class=\"cal-day-number\">{{\n            day.date | calendarDate: 'monthViewDayNumber':locale\n          }}</span>\n        </span>\n      </div>\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\n        <div\n          class=\"cal-event\"\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\n          [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\n          [ngClass]=\"event?.cssClass\"\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\n          [mwlCalendarTooltip]=\"\n            event.title | calendarEventTitle: 'monthTooltip':event\n          \"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipEvent]=\"event\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          [tooltipDelay]=\"tooltipDelay\"\n          mwlDraggable\n          [class.cal-draggable]=\"event.draggable\"\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: event, draggedFrom: day }\"\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\n          [validateDrag]=\"validateDrag\"\n          (mwlClick)=\"eventClicked.emit({ event: event, sourceEvent: $event })\"\n          [attr.aria-hidden]=\"{} | calendarA11y: 'hideMonthCellEvents'\"\n        ></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        openDay: openDay,\n        locale: locale,\n        tooltipPlacement: tooltipPlacement,\n        highlightDay: highlightDay,\n        unhighlightDay: unhighlightDay,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDelay: tooltipDelay,\n        trackByEventId: trackByEventId,\n        validateDrag: validateDrag\n      }\"\n    >\n    </ng-template>\n  ",
        host: {
          "class": 'cal-cell cal-day-cell',
          '[class.cal-past]': 'day.isPast',
          '[class.cal-today]': 'day.isToday',
          '[class.cal-future]': 'day.isFuture',
          '[class.cal-weekend]': 'day.isWeekend',
          '[class.cal-in-month]': 'day.inMonth',
          '[class.cal-out-month]': '!day.inMonth',
          '[class.cal-has-events]': 'day.events.length > 0',
          '[class.cal-open]': 'day === openDay',
          '[class.cal-event-highlight]': '!!day.backgroundColor'
        }
      })], CalendarMonthCellComponent);
      var collapseAnimation = Object(_angular_animations__WEBPACK_IMPORTED_MODULE_8__["trigger"])('collapse', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_8__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_8__["style"])({
        height: 0,
        overflow: 'hidden',
        'padding-top': 0,
        'padding-bottom': 0
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_8__["state"])('*', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_8__["style"])({
        height: '*',
        overflow: 'hidden',
        'padding-top': '*',
        'padding-bottom': '*'
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_8__["transition"])('* => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_8__["animate"])('150ms ease-out')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_8__["transition"])('void => *', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_8__["animate"])('150ms ease-in'))]);

      var CalendarOpenDayEventsComponent = function CalendarOpenDayEventsComponent() {
        _classCallCheck(this, CalendarOpenDayEventsComponent);

        this.isOpen = false;
        this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.trackByEventId = trackByEventId;
        this.validateDrag = isWithinThreshold;
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarOpenDayEventsComponent.prototype, "locale", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], CalendarOpenDayEventsComponent.prototype, "isOpen", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Array)], CalendarOpenDayEventsComponent.prototype, "events", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarOpenDayEventsComponent.prototype, "customTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarOpenDayEventsComponent.prototype, "eventTitleTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarOpenDayEventsComponent.prototype, "eventActionsTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Date)], CalendarOpenDayEventsComponent.prototype, "date", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarOpenDayEventsComponent.prototype, "eventClicked", void 0);
      CalendarOpenDayEventsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-open-day-events',
        template: "\n    <ng-template\n      #defaultTemplate\n      let-events=\"events\"\n      let-eventClicked=\"eventClicked\"\n      let-isOpen=\"isOpen\"\n      let-trackByEventId=\"trackByEventId\"\n      let-validateDrag=\"validateDrag\"\n    >\n      <div\n        class=\"cal-open-day-events\"\n        [@collapse]\n        *ngIf=\"isOpen\"\n        role=\"application\"\n      >\n        <span\n          tabindex=\"-1\"\n          role=\"alert\"\n          [attr.aria-label]=\"\n            { date: date, locale: locale } | calendarA11y: 'openDayEventsAlert'\n          \"\n        ></span>\n        <span\n          tabindex=\"0\"\n          role=\"landmark\"\n          [attr.aria-label]=\"\n            { date: date, locale: locale }\n              | calendarA11y: 'openDayEventsLandmark'\n          \"\n        ></span>\n        <div\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\n          [ngClass]=\"event?.cssClass\"\n          mwlDraggable\n          [class.cal-draggable]=\"event.draggable\"\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: event }\"\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\n          [validateDrag]=\"validateDrag\"\n        >\n          <span\n            class=\"cal-event\"\n            [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\n          >\n          </span>\n          &ngsp;\n          <mwl-calendar-event-title\n            [event]=\"event\"\n            [customTemplate]=\"eventTitleTemplate\"\n            view=\"month\"\n            (mwlClick)=\"\n              eventClicked.emit({ event: event, sourceEvent: $event })\n            \"\n            (mwlKeydownEnter)=\"\n              eventClicked.emit({ event: event, sourceEvent: $event })\n            \"\n            tabindex=\"0\"\n            [attr.aria-label]=\"\n              { event: event, locale: locale }\n                | calendarA11y: 'eventDescription'\n            \"\n          >\n          </mwl-calendar-event-title>\n          &ngsp;\n          <mwl-calendar-event-actions\n            [event]=\"event\"\n            [customTemplate]=\"eventActionsTemplate\"\n          >\n          </mwl-calendar-event-actions>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        events: events,\n        eventClicked: eventClicked,\n        isOpen: isOpen,\n        trackByEventId: trackByEventId,\n        validateDrag: validateDrag\n      }\"\n    >\n    </ng-template>\n  ",
        animations: [collapseAnimation]
      })], CalendarOpenDayEventsComponent);

      var CalendarMonthModule = function CalendarMonthModule() {
        _classCallCheck(this, CalendarMonthModule);
      };

      CalendarMonthModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarCommonModule],
        declarations: [CalendarMonthViewComponent, CalendarMonthCellComponent, CalendarOpenDayEventsComponent, CalendarMonthViewHeaderComponent],
        exports: [angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarMonthViewComponent, CalendarMonthCellComponent, CalendarOpenDayEventsComponent, CalendarMonthViewHeaderComponent]
      })], CalendarMonthModule);

      var CalendarDragHelper = /*#__PURE__*/function () {
        function CalendarDragHelper(dragContainerElement, draggableElement) {
          _classCallCheck(this, CalendarDragHelper);

          this.dragContainerElement = dragContainerElement;
          this.startPosition = draggableElement.getBoundingClientRect();
        }

        _createClass(CalendarDragHelper, [{
          key: "validateDrag",
          value: function validateDrag(_ref49) {
            var x = _ref49.x,
                y = _ref49.y,
                snapDraggedEvents = _ref49.snapDraggedEvents,
                dragAlreadyMoved = _ref49.dragAlreadyMoved,
                transform = _ref49.transform;

            if (snapDraggedEvents) {
              var newRect = Object.assign({}, this.startPosition, {
                left: this.startPosition.left + transform.x,
                right: this.startPosition.right + transform.x,
                top: this.startPosition.top + transform.y,
                bottom: this.startPosition.bottom + transform.y
              });
              return (isWithinThreshold({
                x: x,
                y: y
              }) || dragAlreadyMoved) && isInside(this.dragContainerElement.getBoundingClientRect(), newRect);
            } else {
              return isWithinThreshold({
                x: x,
                y: y
              }) || dragAlreadyMoved;
            }
          }
        }]);

        return CalendarDragHelper;
      }();

      var CalendarResizeHelper = /*#__PURE__*/function () {
        function CalendarResizeHelper(resizeContainerElement, minWidth) {
          _classCallCheck(this, CalendarResizeHelper);

          this.resizeContainerElement = resizeContainerElement;
          this.minWidth = minWidth;
        }

        _createClass(CalendarResizeHelper, [{
          key: "validateResize",
          value: function validateResize(_ref50) {
            var rectangle = _ref50.rectangle;

            if (this.minWidth && Math.ceil(rectangle.width) < Math.ceil(this.minWidth)) {
              return false;
            }

            return isInside(this.resizeContainerElement.getBoundingClientRect(), rectangle);
          }
        }]);

        return CalendarResizeHelper;
      }();
      /**
       * Shows all events on a given week. Example usage:
       *
       * ```typescript
       * <mwl-calendar-week-view
       *  [viewDate]="viewDate"
       *  [events]="events">
       * </mwl-calendar-week-view>
       * ```
       */


      var CalendarWeekViewComponent = /*#__PURE__*/function () {
        /**
         * @hidden
         */
        function CalendarWeekViewComponent(cdr, utils, locale, dateAdapter) {
          _classCallCheck(this, CalendarWeekViewComponent);

          this.cdr = cdr;
          this.utils = utils;
          this.dateAdapter = dateAdapter;
          /**
           * An array of events to display on view
           * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63
           */

          this.events = [];
          /**
           * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view
           */

          this.excludeDays = [];
          /**
           * The placement of the event tooltip
           */

          this.tooltipPlacement = 'auto';
          /**
           * Whether to append tooltips to the body or next to the trigger element
           */

          this.tooltipAppendToBody = true;
          /**
           * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip
           * will be displayed immediately.
           */

          this.tooltipDelay = null;
          /**
           * The precision to display events.
           * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding
           */

          this.precision = 'days';
          /**
           * Whether to snap events to a grid when dragging
           */

          this.snapDraggedEvents = true;
          /**
           * The number of segments in an hour. Must be <= 6
           */

          this.hourSegments = 2;
          /**
           * The height in pixels of each hour segment
           */

          this.hourSegmentHeight = 30;
          /**
           * The day start hours in 24 hour time. Must be 0-23
           */

          this.dayStartHour = 0;
          /**
           * The day start minutes. Must be 0-59
           */

          this.dayStartMinute = 0;
          /**
           * The day end hours in 24 hour time. Must be 0-23
           */

          this.dayEndHour = 23;
          /**
           * The day end minutes. Must be 0-59
           */

          this.dayEndMinute = 59;
          /**
           * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element
           */

          this.dayHeaderClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
          /**
           * Called when the event title is clicked
           */

          this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
          /**
           * Called when an event is resized or dragged and dropped
           */

          this.eventTimesChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
          /**
           * An output that will be called before the view is rendered for the current week.
           * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template
           */

          this.beforeViewRender = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
          /**
           * Called when an hour segment is clicked
           */

          this.hourSegmentClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
          /**
           * @hidden
           */

          this.allDayEventResizes = new Map();
          /**
           * @hidden
           */

          this.timeEventResizes = new Map();
          /**
           * @hidden
           */

          this.eventDragEnterByType = {
            allDay: 0,
            time: 0
          };
          /**
           * @hidden
           */

          this.dragActive = false;
          /**
           * @hidden
           */

          this.dragAlreadyMoved = false;
          /**
           * @hidden
           */

          this.calendarId = Symbol('angular calendar week view id');
          /**
           * @hidden
           */

          this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;
          /**
           * @hidden
           */

          this.trackByHourSegment = trackByHourSegment;
          /**
           * @hidden
           */

          this.trackByHour = trackByHour;
          /**
           * @hidden
           */

          this.trackByWeekAllDayEvent = trackByWeekAllDayEvent;
          /**
           * @hidden
           */

          this.trackByWeekTimeEvent = trackByWeekTimeEvent;
          /**
           * @hidden
           */

          this.trackByHourColumn = function (index, column) {
            return column.hours[0] ? column.hours[0].segments[0].date.toISOString() : column;
          };
          /**
           * @hidden
           */


          this.trackById = function (index, row) {
            return row.id;
          };

          this.locale = locale;
        }
        /**
         * @hidden
         */


        _createClass(CalendarWeekViewComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this21 = this;

            if (this.refresh) {
              this.refreshSubscription = this.refresh.subscribe(function () {
                _this21.refreshAll();

                _this21.cdr.markForCheck();
              });
            }
          }
          /**
           * @hidden
           */

        }, {
          key: "ngOnChanges",
          value: function ngOnChanges(changes) {
            var refreshHeader = changes.viewDate || changes.excludeDays || changes.weekendDays || changes.daysInWeek || changes.weekStartsOn;
            var refreshBody = changes.viewDate || changes.dayStartHour || changes.dayStartMinute || changes.dayEndHour || changes.dayEndMinute || changes.hourSegments || changes.weekStartsOn || changes.weekendDays || changes.excludeDays || changes.hourSegmentHeight || changes.events || changes.daysInWeek;

            if (refreshHeader) {
              this.refreshHeader();
            }

            if (changes.events) {
              validateEvents(this.events);
            }

            if (refreshBody) {
              this.refreshBody();
            }

            if (refreshHeader || refreshBody) {
              this.emitBeforeViewRender();
            }
          }
          /**
           * @hidden
           */

        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            if (this.refreshSubscription) {
              this.refreshSubscription.unsubscribe();
            }
          }
        }, {
          key: "resizeStarted",
          value: function resizeStarted(eventsContainer, minWidth) {
            this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);
            var resizeHelper = new CalendarResizeHelper(eventsContainer, minWidth);

            this.validateResize = function (_ref51) {
              var rectangle = _ref51.rectangle;
              return resizeHelper.validateResize({
                rectangle: rectangle
              });
            };

            this.cdr.markForCheck();
          }
          /**
           * @hidden
           */

        }, {
          key: "timeEventResizeStarted",
          value: function timeEventResizeStarted(eventsContainer, timeEvent, resizeEvent) {
            this.timeEventResizes.set(timeEvent.event, resizeEvent);
            this.resizeStarted(eventsContainer);
          }
          /**
           * @hidden
           */

        }, {
          key: "timeEventResizing",
          value: function timeEventResizing(timeEvent, resizeEvent) {
            var _this22 = this;

            this.timeEventResizes.set(timeEvent.event, resizeEvent);
            var adjustedEvents = new Map();

            var tempEvents = _toConsumableArray(this.events);

            this.timeEventResizes.forEach(function (lastResizeEvent, event) {
              var newEventDates = _this22.getTimeEventResizedDates(event, lastResizeEvent);

              var adjustedEvent = Object.assign({}, event, newEventDates);
              adjustedEvents.set(adjustedEvent, event);
              var eventIndex = tempEvents.indexOf(event);
              tempEvents[eventIndex] = adjustedEvent;
            });
            this.restoreOriginalEvents(tempEvents, adjustedEvents);
          }
          /**
           * @hidden
           */

        }, {
          key: "timeEventResizeEnded",
          value: function timeEventResizeEnded(timeEvent) {
            this.view = this.getWeekView(this.events);
            var lastResizeEvent = this.timeEventResizes.get(timeEvent.event);

            if (lastResizeEvent) {
              this.timeEventResizes["delete"](timeEvent.event);
              var newEventDates = this.getTimeEventResizedDates(timeEvent.event, lastResizeEvent);
              this.eventTimesChanged.emit({
                newStart: newEventDates.start,
                newEnd: newEventDates.end,
                event: timeEvent.event,
                type: CalendarEventTimesChangedEventType.Resize
              });
            }
          }
          /**
           * @hidden
           */

        }, {
          key: "allDayEventResizeStarted",
          value: function allDayEventResizeStarted(allDayEventsContainer, allDayEvent, resizeEvent) {
            this.allDayEventResizes.set(allDayEvent, {
              originalOffset: allDayEvent.offset,
              originalSpan: allDayEvent.span,
              edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'
            });
            this.resizeStarted(allDayEventsContainer, this.getDayColumnWidth(allDayEventsContainer));
          }
          /**
           * @hidden
           */

        }, {
          key: "allDayEventResizing",
          value: function allDayEventResizing(allDayEvent, resizeEvent, dayWidth) {
            var currentResize = this.allDayEventResizes.get(allDayEvent);

            if (typeof resizeEvent.edges.left !== 'undefined') {
              var diff = Math.round(+resizeEvent.edges.left / dayWidth);
              allDayEvent.offset = currentResize.originalOffset + diff;
              allDayEvent.span = currentResize.originalSpan - diff;
            } else if (typeof resizeEvent.edges.right !== 'undefined') {
              var _diff = Math.round(+resizeEvent.edges.right / dayWidth);

              allDayEvent.span = currentResize.originalSpan + _diff;
            }
          }
          /**
           * @hidden
           */

        }, {
          key: "allDayEventResizeEnded",
          value: function allDayEventResizeEnded(allDayEvent) {
            var currentResize = this.allDayEventResizes.get(allDayEvent);

            if (currentResize) {
              var allDayEventResizingBeforeStart = currentResize.edge === 'left';
              var daysDiff;

              if (allDayEventResizingBeforeStart) {
                daysDiff = allDayEvent.offset - currentResize.originalOffset;
              } else {
                daysDiff = allDayEvent.span - currentResize.originalSpan;
              }

              allDayEvent.offset = currentResize.originalOffset;
              allDayEvent.span = currentResize.originalSpan;
              var newStart = allDayEvent.event.start;
              var newEnd = allDayEvent.event.end || allDayEvent.event.start;

              if (allDayEventResizingBeforeStart) {
                newStart = addDaysWithExclusions(this.dateAdapter, newStart, daysDiff, this.excludeDays);
              } else {
                newEnd = addDaysWithExclusions(this.dateAdapter, newEnd, daysDiff, this.excludeDays);
              }

              this.eventTimesChanged.emit({
                newStart: newStart,
                newEnd: newEnd,
                event: allDayEvent.event,
                type: CalendarEventTimesChangedEventType.Resize
              });
              this.allDayEventResizes["delete"](allDayEvent);
            }
          }
          /**
           * @hidden
           */

        }, {
          key: "getDayColumnWidth",
          value: function getDayColumnWidth(eventRowContainer) {
            return Math.floor(eventRowContainer.offsetWidth / this.days.length);
          }
          /**
           * @hidden
           */

        }, {
          key: "dateDragEnter",
          value: function dateDragEnter(date) {
            this.lastDragEnterDate = date;
          }
          /**
           * @hidden
           */

        }, {
          key: "eventDropped",
          value: function eventDropped(dropEvent, date, allDay) {
            if (shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId) && this.lastDragEnterDate.getTime() === date.getTime()) {
              this.eventTimesChanged.emit({
                type: CalendarEventTimesChangedEventType.Drop,
                event: dropEvent.dropData.event,
                newStart: date,
                allDay: allDay
              });
            }
          }
          /**
           * @hidden
           */

        }, {
          key: "dragEnter",
          value: function dragEnter(type) {
            this.eventDragEnterByType[type]++;
          }
          /**
           * @hidden
           */

        }, {
          key: "dragLeave",
          value: function dragLeave(type) {
            this.eventDragEnterByType[type]--;
          }
          /**
           * @hidden
           */

        }, {
          key: "dragStarted",
          value: function dragStarted(eventsContainer, event, dayEvent) {
            var _this23 = this;

            this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);
            var dragHelper = new CalendarDragHelper(eventsContainer, event);

            this.validateDrag = function (_ref52) {
              var x = _ref52.x,
                  y = _ref52.y,
                  transform = _ref52.transform;
              return _this23.allDayEventResizes.size === 0 && _this23.timeEventResizes.size === 0 && dragHelper.validateDrag({
                x: x,
                y: y,
                snapDraggedEvents: _this23.snapDraggedEvents,
                dragAlreadyMoved: _this23.dragAlreadyMoved,
                transform: transform
              });
            };

            this.dragActive = true;
            this.dragAlreadyMoved = false;
            this.eventDragEnterByType = {
              allDay: 0,
              time: 0
            };

            if (!this.snapDraggedEvents && dayEvent) {
              this.view.hourColumns.forEach(function (column) {
                var linkedEvent = column.events.find(function (columnEvent) {
                  return columnEvent.event === dayEvent.event && columnEvent !== dayEvent;
                }); // hide any linked events while dragging

                if (linkedEvent) {
                  linkedEvent.width = 0;
                  linkedEvent.height = 0;
                }
              });
            }

            this.cdr.markForCheck();
          }
          /**
           * @hidden
           */

        }, {
          key: "dragMove",
          value: function dragMove(dayEvent, dragEvent) {
            if (this.snapDraggedEvents) {
              var newEventTimes = this.getDragMovedEventTimes(dayEvent, dragEvent, this.dayColumnWidth, true);
              var originalEvent = dayEvent.event;
              var adjustedEvent = Object.assign({}, originalEvent, newEventTimes);
              var tempEvents = this.events.map(function (event) {
                if (event === originalEvent) {
                  return adjustedEvent;
                }

                return event;
              });
              this.restoreOriginalEvents(tempEvents, new Map([[adjustedEvent, originalEvent]]));
            }

            this.dragAlreadyMoved = true;
          }
          /**
           * @hidden
           */

        }, {
          key: "allDayEventDragMove",
          value: function allDayEventDragMove() {
            this.dragAlreadyMoved = true;
          }
          /**
           * @hidden
           */

        }, {
          key: "dragEnded",
          value: function dragEnded(weekEvent, dragEndEvent, dayWidth) {
            var useY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            this.view = this.getWeekView(this.events);
            this.dragActive = false;

            var _this$getDragMovedEve = this.getDragMovedEventTimes(weekEvent, dragEndEvent, dayWidth, useY),
                start = _this$getDragMovedEve.start,
                end = _this$getDragMovedEve.end;

            if (this.eventDragEnterByType[useY ? 'time' : 'allDay'] > 0 && isDraggedWithinPeriod(start, end, this.view.period)) {
              this.eventTimesChanged.emit({
                newStart: start,
                newEnd: end,
                event: weekEvent.event,
                type: CalendarEventTimesChangedEventType.Drag,
                allDay: !useY
              });
            }
          }
        }, {
          key: "refreshHeader",
          value: function refreshHeader() {
            this.days = this.utils.getWeekViewHeader(Object.assign({
              viewDate: this.viewDate,
              weekStartsOn: this.weekStartsOn,
              excluded: this.excludeDays,
              weekendDays: this.weekendDays
            }, getWeekViewPeriod(this.dateAdapter, this.viewDate, this.weekStartsOn, this.excludeDays, this.daysInWeek)));
          }
        }, {
          key: "refreshBody",
          value: function refreshBody() {
            this.view = this.getWeekView(this.events);
          }
        }, {
          key: "refreshAll",
          value: function refreshAll() {
            this.refreshHeader();
            this.refreshBody();
            this.emitBeforeViewRender();
          }
        }, {
          key: "emitBeforeViewRender",
          value: function emitBeforeViewRender() {
            if (this.days && this.view) {
              this.beforeViewRender.emit(Object.assign({
                header: this.days
              }, this.view));
            }
          }
        }, {
          key: "getWeekView",
          value: function getWeekView(events) {
            return this.utils.getWeekView(Object.assign({
              events: events,
              viewDate: this.viewDate,
              weekStartsOn: this.weekStartsOn,
              excluded: this.excludeDays,
              precision: this.precision,
              absolutePositionedEvents: true,
              hourSegments: this.hourSegments,
              dayStart: {
                hour: this.dayStartHour,
                minute: this.dayStartMinute
              },
              dayEnd: {
                hour: this.dayEndHour,
                minute: this.dayEndMinute
              },
              segmentHeight: this.hourSegmentHeight,
              weekendDays: this.weekendDays
            }, getWeekViewPeriod(this.dateAdapter, this.viewDate, this.weekStartsOn, this.excludeDays, this.daysInWeek)));
          }
        }, {
          key: "getDragMovedEventTimes",
          value: function getDragMovedEventTimes(weekEvent, dragEndEvent, dayWidth, useY) {
            var daysDragged = roundToNearest(dragEndEvent.x, dayWidth) / dayWidth;
            var minutesMoved = useY ? getMinutesMoved(dragEndEvent.y, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize) : 0;
            var start = this.dateAdapter.addMinutes(addDaysWithExclusions(this.dateAdapter, weekEvent.event.start, daysDragged, this.excludeDays), minutesMoved);
            var end;

            if (weekEvent.event.end) {
              end = this.dateAdapter.addMinutes(addDaysWithExclusions(this.dateAdapter, weekEvent.event.end, daysDragged, this.excludeDays), minutesMoved);
            }

            return {
              start: start,
              end: end
            };
          }
        }, {
          key: "restoreOriginalEvents",
          value: function restoreOriginalEvents(tempEvents, adjustedEvents) {
            var previousView = this.view;
            this.view = this.getWeekView(tempEvents);
            var adjustedEventsArray = tempEvents.filter(function (event) {
              return adjustedEvents.has(event);
            });
            this.view.hourColumns.forEach(function (column, columnIndex) {
              previousView.hourColumns[columnIndex].hours.forEach(function (hour, hourIndex) {
                hour.segments.forEach(function (segment, segmentIndex) {
                  column.hours[hourIndex].segments[segmentIndex].cssClass = segment.cssClass;
                });
              });
              adjustedEventsArray.forEach(function (adjustedEvent) {
                var originalEvent = adjustedEvents.get(adjustedEvent);
                var existingColumnEvent = column.events.find(function (columnEvent) {
                  return columnEvent.event === adjustedEvent;
                });

                if (existingColumnEvent) {
                  // restore the original event so trackBy kicks in and the dom isn't changed
                  existingColumnEvent.event = originalEvent;
                } else {
                  // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early
                  column.events.push({
                    event: originalEvent,
                    left: 0,
                    top: 0,
                    height: 0,
                    width: 0,
                    startsBeforeDay: false,
                    endsAfterDay: false
                  });
                }
              });
            });
            adjustedEvents.clear();
          }
        }, {
          key: "getTimeEventResizedDates",
          value: function getTimeEventResizedDates(calendarEvent, resizeEvent) {
            var minimumEventHeight = getMinimumEventHeightInMinutes(this.hourSegments, this.hourSegmentHeight);
            var newEventDates = {
              start: calendarEvent.start,
              end: getDefaultEventEnd(this.dateAdapter, calendarEvent, minimumEventHeight)
            };
            var end = calendarEvent.end,
                eventWithoutEnd = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(calendarEvent, ["end"]);
            var smallestResizes = {
              start: this.dateAdapter.addMinutes(newEventDates.end, minimumEventHeight * -1),
              end: getDefaultEventEnd(this.dateAdapter, eventWithoutEnd, minimumEventHeight)
            };

            if (typeof resizeEvent.edges.left !== 'undefined') {
              var daysDiff = Math.round(+resizeEvent.edges.left / this.dayColumnWidth);
              var newStart = addDaysWithExclusions(this.dateAdapter, newEventDates.start, daysDiff, this.excludeDays);

              if (newStart < smallestResizes.start) {
                newEventDates.start = newStart;
              } else {
                newEventDates.start = smallestResizes.start;
              }
            } else if (typeof resizeEvent.edges.right !== 'undefined') {
              var _daysDiff = Math.round(+resizeEvent.edges.right / this.dayColumnWidth);

              var newEnd = addDaysWithExclusions(this.dateAdapter, newEventDates.end, _daysDiff, this.excludeDays);

              if (newEnd > smallestResizes.end) {
                newEventDates.end = newEnd;
              } else {
                newEventDates.end = smallestResizes.end;
              }
            }

            if (typeof resizeEvent.edges.top !== 'undefined') {
              var minutesMoved = getMinutesMoved(resizeEvent.edges.top, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize);

              var _newStart = this.dateAdapter.addMinutes(newEventDates.start, minutesMoved);

              if (_newStart < smallestResizes.start) {
                newEventDates.start = _newStart;
              } else {
                newEventDates.start = smallestResizes.start;
              }
            } else if (typeof resizeEvent.edges.bottom !== 'undefined') {
              var _minutesMoved = getMinutesMoved(resizeEvent.edges.bottom, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize);

              var _newEnd = this.dateAdapter.addMinutes(newEventDates.end, _minutesMoved);

              if (_newEnd > smallestResizes.end) {
                newEventDates.end = _newEnd;
              } else {
                newEventDates.end = smallestResizes.end;
              }
            }

            return newEventDates;
          }
        }]);

        return CalendarWeekViewComponent;
      }();

      CalendarWeekViewComponent.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]
        }, {
          type: CalendarUtils
        }, {
          type: String,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]]
          }]
        }, {
          type: DateAdapter
        }];
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Date)], CalendarWeekViewComponent.prototype, "viewDate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Array)], CalendarWeekViewComponent.prototype, "events", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Array)], CalendarWeekViewComponent.prototype, "excludeDays", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"])], CalendarWeekViewComponent.prototype, "refresh", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarWeekViewComponent.prototype, "locale", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewComponent.prototype, "tooltipPlacement", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewComponent.prototype, "tooltipTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], CalendarWeekViewComponent.prototype, "tooltipAppendToBody", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewComponent.prototype, "tooltipDelay", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewComponent.prototype, "weekStartsOn", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewComponent.prototype, "headerTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewComponent.prototype, "eventTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewComponent.prototype, "eventTitleTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewComponent.prototype, "eventActionsTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarWeekViewComponent.prototype, "precision", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Array)], CalendarWeekViewComponent.prototype, "weekendDays", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], CalendarWeekViewComponent.prototype, "snapDraggedEvents", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewComponent.prototype, "hourSegments", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewComponent.prototype, "hourSegmentHeight", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewComponent.prototype, "dayStartHour", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewComponent.prototype, "dayStartMinute", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewComponent.prototype, "dayEndHour", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewComponent.prototype, "dayEndMinute", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewComponent.prototype, "hourSegmentTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewComponent.prototype, "eventSnapSize", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewComponent.prototype, "allDayEventsLabelTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewComponent.prototype, "daysInWeek", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewComponent.prototype, "currentTimeMarkerTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewComponent.prototype, "dayHeaderClicked", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewComponent.prototype, "eventClicked", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewComponent.prototype, "eventTimesChanged", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewComponent.prototype, "beforeViewRender", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewComponent.prototype, "hourSegmentClicked", void 0);
      CalendarWeekViewComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-week-view',
        template: "\n    <div class=\"cal-week-view\" role=\"grid\">\n      <mwl-calendar-week-view-header\n        [days]=\"days\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\n        (eventDropped)=\"\n          eventDropped({ dropData: $event }, $event.newStart, true)\n        \"\n        (dragEnter)=\"dateDragEnter($event.date)\"\n      >\n      </mwl-calendar-week-view-header>\n      <div\n        class=\"cal-all-day-events\"\n        #allDayEventsContainer\n        *ngIf=\"view.allDayEventRows.length > 0\"\n        mwlDroppable\n        (dragEnter)=\"dragEnter('allDay')\"\n        (dragLeave)=\"dragLeave('allDay')\"\n      >\n        <div class=\"cal-day-columns\">\n          <div\n            class=\"cal-time-label-column\"\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\n          ></div>\n          <div\n            class=\"cal-day-column\"\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            (drop)=\"eventDropped($event, day.date, true)\"\n            (dragEnter)=\"dateDragEnter(day.date)\"\n          ></div>\n        </div>\n        <div\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\n          #eventRowContainer\n          class=\"cal-events-row\"\n        >\n          <div\n            *ngFor=\"\n              let allDayEvent of eventRow.row;\n              trackBy: trackByWeekAllDayEvent\n            \"\n            #event\n            class=\"cal-event-container\"\n            [class.cal-draggable]=\"\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\n            \"\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\n            [ngClass]=\"allDayEvent.event?.cssClass\"\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\n            [style.marginLeft.%]=\"(100 / days.length) * allDayEvent.offset\"\n            mwlResizable\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\n            [validateResize]=\"validateResize\"\n            (resizeStart)=\"\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\n            \"\n            (resizing)=\"\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\n            \"\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\n            mwlDraggable\n            dragActiveClass=\"cal-drag-active\"\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\n            [dragAxis]=\"{\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\n              y:\n                !snapDraggedEvents &&\n                allDayEvent.event.draggable &&\n                allDayEventResizes.size === 0\n            }\"\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\n            [validateDrag]=\"validateDrag\"\n            (dragStart)=\"dragStarted(eventRowContainer, event)\"\n            (dragging)=\"allDayEventDragMove()\"\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\n          >\n            <div\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\n              *ngIf=\"\n                allDayEvent.event?.resizable?.beforeStart &&\n                !allDayEvent.startsBeforeWeek\n              \"\n              mwlResizeHandle\n              [resizeEdges]=\"{ left: true }\"\n            ></div>\n            <mwl-calendar-week-view-event\n              [locale]=\"locale\"\n              [weekEvent]=\"allDayEvent\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipDelay]=\"tooltipDelay\"\n              [customTemplate]=\"eventTemplate\"\n              [eventTitleTemplate]=\"eventTitleTemplate\"\n              [eventActionsTemplate]=\"eventActionsTemplate\"\n              [daysInWeek]=\"daysInWeek\"\n              (eventClicked)=\"\n                eventClicked.emit({\n                  event: allDayEvent.event,\n                  sourceEvent: $event.sourceEvent\n                })\n              \"\n            >\n            </mwl-calendar-week-view-event>\n            <div\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\n              *ngIf=\"\n                allDayEvent.event?.resizable?.afterEnd &&\n                !allDayEvent.endsAfterWeek\n              \"\n              mwlResizeHandle\n              [resizeEdges]=\"{ right: true }\"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"cal-time-events\"\n        mwlDroppable\n        (dragEnter)=\"dragEnter('time')\"\n        (dragLeave)=\"dragLeave('time')\"\n      >\n        <div\n          class=\"cal-time-label-column\"\n          *ngIf=\"view.hourColumns.length > 0 && daysInWeek !== 1\"\n        >\n          <div\n            *ngFor=\"\n              let hour of view.hourColumns[0].hours;\n              trackBy: trackByHour;\n              let odd = odd\n            \"\n            class=\"cal-hour\"\n            [class.cal-hour-odd]=\"odd\"\n          >\n            <mwl-calendar-week-view-hour-segment\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\n              [style.height.px]=\"hourSegmentHeight\"\n              [segment]=\"segment\"\n              [segmentHeight]=\"hourSegmentHeight\"\n              [locale]=\"locale\"\n              [customTemplate]=\"hourSegmentTemplate\"\n              [isTimeLabel]=\"true\"\n              [daysInWeek]=\"daysInWeek\"\n            >\n            </mwl-calendar-week-view-hour-segment>\n          </div>\n        </div>\n        <div\n          class=\"cal-day-columns\"\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\n          #dayColumns\n        >\n          <div\n            class=\"cal-day-column\"\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\n          >\n            <mwl-calendar-week-view-current-time-marker\n              [columnDate]=\"column.date\"\n              [dayStartHour]=\"dayStartHour\"\n              [dayStartMinute]=\"dayStartMinute\"\n              [dayEndHour]=\"dayEndHour\"\n              [dayEndMinute]=\"dayEndMinute\"\n              [hourSegments]=\"hourSegments\"\n              [hourSegmentHeight]=\"hourSegmentHeight\"\n              [customTemplate]=\"currentTimeMarkerTemplate\"\n            ></mwl-calendar-week-view-current-time-marker>\n            <div class=\"cal-events-container\">\n              <div\n                *ngFor=\"\n                  let timeEvent of column.events;\n                  trackBy: trackByWeekTimeEvent\n                \"\n                #event\n                class=\"cal-event-container\"\n                [class.cal-draggable]=\"\n                  timeEvent.event.draggable && timeEventResizes.size === 0\n                \"\n                [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\n                [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\n                [ngClass]=\"timeEvent.event.cssClass\"\n                [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\n                [style.top.px]=\"timeEvent.top\"\n                [style.height.px]=\"timeEvent.height\"\n                [style.left.%]=\"timeEvent.left\"\n                [style.width.%]=\"timeEvent.width\"\n                mwlResizable\n                [resizeSnapGrid]=\"{\n                  left: dayColumnWidth,\n                  right: dayColumnWidth,\n                  top: eventSnapSize || hourSegmentHeight,\n                  bottom: eventSnapSize || hourSegmentHeight\n                }\"\n                [validateResize]=\"validateResize\"\n                [allowNegativeResizes]=\"true\"\n                (resizeStart)=\"\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\n                \"\n                (resizing)=\"timeEventResizing(timeEvent, $event)\"\n                (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\n                mwlDraggable\n                dragActiveClass=\"cal-drag-active\"\n                [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\n                [dragAxis]=\"{\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\n                }\"\n                [dragSnapGrid]=\"\n                  snapDraggedEvents\n                    ? {\n                        x: dayColumnWidth,\n                        y: eventSnapSize || hourSegmentHeight\n                      }\n                    : {}\n                \"\n                [ghostDragEnabled]=\"!snapDraggedEvents\"\n                [validateDrag]=\"validateDrag\"\n                (dragStart)=\"dragStarted(dayColumns, event, timeEvent)\"\n                (dragging)=\"dragMove(timeEvent, $event)\"\n                (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\n              >\n                <div\n                  class=\"cal-resize-handle cal-resize-handle-before-start\"\n                  *ngIf=\"\n                    timeEvent.event?.resizable?.beforeStart &&\n                    !timeEvent.startsBeforeDay\n                  \"\n                  mwlResizeHandle\n                  [resizeEdges]=\"{\n                    left: true,\n                    top: true\n                  }\"\n                ></div>\n                <mwl-calendar-week-view-event\n                  [locale]=\"locale\"\n                  [weekEvent]=\"timeEvent\"\n                  [tooltipPlacement]=\"tooltipPlacement\"\n                  [tooltipTemplate]=\"tooltipTemplate\"\n                  [tooltipAppendToBody]=\"tooltipAppendToBody\"\n                  [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\n                  [tooltipDelay]=\"tooltipDelay\"\n                  [customTemplate]=\"eventTemplate\"\n                  [eventTitleTemplate]=\"eventTitleTemplate\"\n                  [eventActionsTemplate]=\"eventActionsTemplate\"\n                  [column]=\"column\"\n                  [daysInWeek]=\"daysInWeek\"\n                  (eventClicked)=\"\n                    eventClicked.emit({\n                      event: timeEvent.event,\n                      sourceEvent: $event.sourceEvent\n                    })\n                  \"\n                >\n                </mwl-calendar-week-view-event>\n                <div\n                  class=\"cal-resize-handle cal-resize-handle-after-end\"\n                  *ngIf=\"\n                    timeEvent.event?.resizable?.afterEnd &&\n                    !timeEvent.endsAfterDay\n                  \"\n                  mwlResizeHandle\n                  [resizeEdges]=\"{\n                    right: true,\n                    bottom: true\n                  }\"\n                ></div>\n              </div>\n            </div>\n\n            <div\n              *ngFor=\"\n                let hour of column.hours;\n                trackBy: trackByHour;\n                let odd = odd\n              \"\n              class=\"cal-hour\"\n              [class.cal-hour-odd]=\"odd\"\n            >\n              <mwl-calendar-week-view-hour-segment\n                *ngFor=\"\n                  let segment of hour.segments;\n                  trackBy: trackByHourSegment\n                \"\n                [style.height.px]=\"hourSegmentHeight\"\n                [segment]=\"segment\"\n                [segmentHeight]=\"hourSegmentHeight\"\n                [locale]=\"locale\"\n                [customTemplate]=\"hourSegmentTemplate\"\n                [daysInWeek]=\"daysInWeek\"\n                (mwlClick)=\"\n                  hourSegmentClicked.emit({\n                    date: segment.date,\n                    sourceEvent: $event\n                  })\n                \"\n                [clickListenerDisabled]=\"\n                  hourSegmentClicked.observers.length === 0\n                \"\n                mwlDroppable\n                [dragOverClass]=\"\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\n                \"\n                dragActiveClass=\"cal-drag-active\"\n                (drop)=\"eventDropped($event, segment.date, false)\"\n                (dragEnter)=\"dateDragEnter(segment.date)\"\n                [isTimeLabel]=\"daysInWeek === 1\"\n              >\n              </mwl-calendar-week-view-hour-segment>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  "
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"])), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], CalendarUtils, String, DateAdapter])], CalendarWeekViewComponent);

      var CalendarWeekViewHeaderComponent = function CalendarWeekViewHeaderComponent() {
        _classCallCheck(this, CalendarWeekViewHeaderComponent);

        this.dayHeaderClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.eventDropped = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.dragEnter = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Array)], CalendarWeekViewHeaderComponent.prototype, "days", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarWeekViewHeaderComponent.prototype, "locale", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewHeaderComponent.prototype, "customTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewHeaderComponent.prototype, "dayHeaderClicked", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewHeaderComponent.prototype, "eventDropped", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewHeaderComponent.prototype, "dragEnter", void 0);
      CalendarWeekViewHeaderComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-week-view-header',
        template: "\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-dayHeaderClicked=\"dayHeaderClicked\"\n      let-eventDropped=\"eventDropped\"\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\n      let-dragEnter=\"dragEnter\"\n    >\n      <div class=\"cal-day-headers\" role=\"row\">\n        <div\n          class=\"cal-header\"\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [ngClass]=\"day.cssClass\"\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\"\n          mwlDroppable\n          dragOverClass=\"cal-drag-over\"\n          (drop)=\"\n            eventDropped.emit({\n              event: $event.dropData.event,\n              newStart: day.date\n            })\n          \"\n          (dragEnter)=\"dragEnter.emit({ date: day.date })\"\n          tabindex=\"0\"\n          role=\"columnheader\"\n        >\n          <b>{{ day.date | calendarDate: 'weekViewColumnHeader':locale }}</b\n          ><br />\n          <span>{{\n            day.date | calendarDate: 'weekViewColumnSubHeader':locale\n          }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        days: days,\n        locale: locale,\n        dayHeaderClicked: dayHeaderClicked,\n        eventDropped: eventDropped,\n        dragEnter: dragEnter,\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\n      }\"\n    >\n    </ng-template>\n  "
      })], CalendarWeekViewHeaderComponent);

      var CalendarWeekViewEventComponent = function CalendarWeekViewEventComponent() {
        _classCallCheck(this, CalendarWeekViewEventComponent);

        this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarWeekViewEventComponent.prototype, "locale", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewEventComponent.prototype, "weekEvent", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewEventComponent.prototype, "tooltipPlacement", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], CalendarWeekViewEventComponent.prototype, "tooltipAppendToBody", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], CalendarWeekViewEventComponent.prototype, "tooltipDisabled", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewEventComponent.prototype, "tooltipDelay", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewEventComponent.prototype, "customTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewEventComponent.prototype, "eventTitleTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewEventComponent.prototype, "eventActionsTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewEventComponent.prototype, "tooltipTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewEventComponent.prototype, "column", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewEventComponent.prototype, "daysInWeek", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewEventComponent.prototype, "eventClicked", void 0);
      CalendarWeekViewEventComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-week-view-event',
        template: "\n    <ng-template\n      #defaultTemplate\n      let-weekEvent=\"weekEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\n      let-tooltipDisabled=\"tooltipDisabled\"\n      let-tooltipDelay=\"tooltipDelay\"\n      let-column=\"column\"\n      let-daysInWeek=\"daysInWeek\"\n    >\n      <div\n        class=\"cal-event\"\n        [ngStyle]=\"{\n          backgroundColor: weekEvent.event.color?.secondary,\n          borderColor: weekEvent.event.color?.primary\n        }\"\n        [mwlCalendarTooltip]=\"\n          !tooltipDisabled\n            ? (weekEvent.event.title\n              | calendarEventTitle\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\n                : weekEvent.event)\n            : ''\n        \"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"weekEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\n        [tooltipDelay]=\"tooltipDelay\"\n        (mwlClick)=\"eventClicked.emit({ sourceEvent: $event })\"\n        (mwlKeydownEnter)=\"eventClicked.emit({ sourceEvent: $event })\"\n        tabindex=\"0\"\n        role=\"application\"\n        [attr.aria-label]=\"\n          { event: weekEvent.event, locale: locale }\n            | calendarA11y: 'eventDescription'\n        \"\n      >\n        <mwl-calendar-event-actions\n          [event]=\"weekEvent.event\"\n          [customTemplate]=\"eventActionsTemplate\"\n        >\n        </mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"weekEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          [view]=\"daysInWeek === 1 ? 'day' : 'week'\"\n        >\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        weekEvent: weekEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDisabled: tooltipDisabled,\n        tooltipDelay: tooltipDelay,\n        column: column,\n        daysInWeek: daysInWeek\n      }\"\n    >\n    </ng-template>\n  "
      })], CalendarWeekViewEventComponent);

      var CalendarWeekViewHourSegmentComponent = function CalendarWeekViewHourSegmentComponent() {
        _classCallCheck(this, CalendarWeekViewHourSegmentComponent);
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarWeekViewHourSegmentComponent.prototype, "segment", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewHourSegmentComponent.prototype, "segmentHeight", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarWeekViewHourSegmentComponent.prototype, "locale", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], CalendarWeekViewHourSegmentComponent.prototype, "isTimeLabel", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewHourSegmentComponent.prototype, "daysInWeek", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewHourSegmentComponent.prototype, "customTemplate", void 0);
      CalendarWeekViewHourSegmentComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-week-view-hour-segment',
        template: "\n    <ng-template\n      #defaultTemplate\n      let-segment=\"segment\"\n      let-locale=\"locale\"\n      let-segmentHeight=\"segmentHeight\"\n      let-isTimeLabel=\"isTimeLabel\"\n      let-daysInWeek=\"daysInWeek\"\n    >\n      <div\n        [attr.aria-hidden]=\"\n          {}\n            | calendarA11y\n              : (daysInWeek === 1\n                  ? 'hideDayHourSegment'\n                  : 'hideWeekHourSegment')\n        \"\n        class=\"cal-hour-segment\"\n        [style.height.px]=\"segmentHeight\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\"\n      >\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\n          {{\n            segment.displayDate\n              | calendarDate\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\n                : locale\n          }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale,\n        segmentHeight: segmentHeight,\n        isTimeLabel: isTimeLabel,\n        daysInWeek: daysInWeek\n      }\"\n    >\n    </ng-template>\n  "
      })], CalendarWeekViewHourSegmentComponent);

      var CalendarWeekViewCurrentTimeMarkerComponent = /*#__PURE__*/function () {
        function CalendarWeekViewCurrentTimeMarkerComponent(dateAdapter) {
          var _this24 = this;

          _classCallCheck(this, CalendarWeekViewCurrentTimeMarkerComponent);

          this.dateAdapter = dateAdapter;
          this.columnDate$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["BehaviorSubject"](this.columnDate);
          this.marker$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["interval"])(60 * 1000).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["startWith"])(0), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["switchMapTo"])(this.columnDate$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (columnDate) {
            var startOfDay = _this24.dateAdapter.setMinutes(_this24.dateAdapter.setHours(columnDate, _this24.dayStartHour), _this24.dayStartMinute);

            var endOfDay = _this24.dateAdapter.setMinutes(_this24.dateAdapter.setHours(columnDate, _this24.dayEndHour), _this24.dayEndMinute);

            var hourHeightModifier = _this24.hourSegments * _this24.hourSegmentHeight / 60;
            var now = new Date();
            return {
              isVisible: _this24.dateAdapter.isSameDay(columnDate, now) && now >= startOfDay && now <= endOfDay,
              top: _this24.dateAdapter.differenceInMinutes(now, startOfDay) * hourHeightModifier
            };
          }));
        }

        _createClass(CalendarWeekViewCurrentTimeMarkerComponent, [{
          key: "ngOnChanges",
          value: function ngOnChanges(changes) {
            if (changes.columnDate) {
              this.columnDate$.next(changes.columnDate.currentValue);
            }
          }
        }]);

        return CalendarWeekViewCurrentTimeMarkerComponent;
      }();

      CalendarWeekViewCurrentTimeMarkerComponent.ctorParameters = function () {
        return [{
          type: DateAdapter
        }];
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Date)], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "columnDate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "dayStartHour", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "dayStartMinute", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "dayEndHour", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "dayEndMinute", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "hourSegments", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "hourSegmentHeight", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "customTemplate", void 0);
      CalendarWeekViewCurrentTimeMarkerComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-week-view-current-time-marker',
        template: "\n    <ng-template\n      #defaultTemplate\n      let-columnDate=\"columnDate\"\n      let-dayStartHour=\"dayStartHour\"\n      let-dayStartMinute=\"dayStartMinute\"\n      let-dayEndHour=\"dayEndHour\"\n      let-dayEndMinute=\"dayEndMinute\"\n      let-isVisible=\"isVisible\"\n      let-topPx=\"topPx\"\n    >\n      <div\n        class=\"cal-current-time-marker\"\n        *ngIf=\"isVisible\"\n        [style.top.px]=\"topPx\"\n      ></div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        columnDate: columnDate,\n        dayStartHour: dayStartHour,\n        dayStartMinute: dayStartMinute,\n        dayEndHour: dayEndHour,\n        dayEndMinute: dayEndMinute,\n        isVisible: (marker$ | async)?.isVisible,\n        topPx: (marker$ | async)?.top\n      }\"\n    >\n    </ng-template>\n  "
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [DateAdapter])], CalendarWeekViewCurrentTimeMarkerComponent);

      var CalendarWeekModule = function CalendarWeekModule() {
        _classCallCheck(this, CalendarWeekModule);
      };

      CalendarWeekModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], angular_resizable_element__WEBPACK_IMPORTED_MODULE_9__["ResizableModule"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarCommonModule],
        declarations: [CalendarWeekViewComponent, CalendarWeekViewHeaderComponent, CalendarWeekViewEventComponent, CalendarWeekViewHourSegmentComponent, CalendarWeekViewCurrentTimeMarkerComponent],
        exports: [angular_resizable_element__WEBPACK_IMPORTED_MODULE_9__["ResizableModule"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarWeekViewComponent, CalendarWeekViewHeaderComponent, CalendarWeekViewEventComponent, CalendarWeekViewHourSegmentComponent, CalendarWeekViewCurrentTimeMarkerComponent]
      })], CalendarWeekModule);
      /**
       * Shows all events on a given day. Example usage:
       *
       * ```typescript
       * <mwl-calendar-day-view
       *  [viewDate]="viewDate"
       *  [events]="events">
       * </mwl-calendar-day-view>
       * ```
       */

      var CalendarDayViewComponent =
      /**
       * Shows all events on a given day. Example usage:
       *
       * ```typescript
       * <mwl-calendar-day-view
       *  [viewDate]="viewDate"
       *  [events]="events">
       * </mwl-calendar-day-view>
       * ```
       */
      function CalendarDayViewComponent() {
        _classCallCheck(this, CalendarDayViewComponent);

        /**
         * An array of events to display on view
         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63
         */
        this.events = [];
        /**
         * The number of segments in an hour. Must be <= 6
         */

        this.hourSegments = 2;
        /**
         * The height in pixels of each hour segment
         */

        this.hourSegmentHeight = 30;
        /**
         * The day start hours in 24 hour time. Must be 0-23
         */

        this.dayStartHour = 0;
        /**
         * The day start minutes. Must be 0-59
         */

        this.dayStartMinute = 0;
        /**
         * The day end hours in 24 hour time. Must be 0-23
         */

        this.dayEndHour = 23;
        /**
         * The day end minutes. Must be 0-59
         */

        this.dayEndMinute = 59;
        /**
         * The placement of the event tooltip
         */

        this.tooltipPlacement = 'auto';
        /**
         * Whether to append tooltips to the body or next to the trigger element
         */

        this.tooltipAppendToBody = true;
        /**
         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip
         * will be displayed immediately.
         */

        this.tooltipDelay = null;
        /**
         * Whether to snap events to a grid when dragging
         */

        this.snapDraggedEvents = true;
        /**
         * Called when an event title is clicked
         */

        this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * Called when an hour segment is clicked
         */

        this.hourSegmentClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * Called when an event is resized or dragged and dropped
         */

        this.eventTimesChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * An output that will be called before the view is rendered for the current day.
         * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template
         */

        this.beforeViewRender = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      };

      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Date)], CalendarDayViewComponent.prototype, "viewDate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Array)], CalendarDayViewComponent.prototype, "events", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarDayViewComponent.prototype, "hourSegments", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarDayViewComponent.prototype, "hourSegmentHeight", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarDayViewComponent.prototype, "dayStartHour", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarDayViewComponent.prototype, "dayStartMinute", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarDayViewComponent.prototype, "dayEndHour", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarDayViewComponent.prototype, "dayEndMinute", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"])], CalendarDayViewComponent.prototype, "refresh", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", String)], CalendarDayViewComponent.prototype, "locale", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarDayViewComponent.prototype, "eventSnapSize", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarDayViewComponent.prototype, "tooltipPlacement", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarDayViewComponent.prototype, "tooltipTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], CalendarDayViewComponent.prototype, "tooltipAppendToBody", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Number)], CalendarDayViewComponent.prototype, "tooltipDelay", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarDayViewComponent.prototype, "hourSegmentTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarDayViewComponent.prototype, "eventTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarDayViewComponent.prototype, "eventTitleTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarDayViewComponent.prototype, "eventActionsTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Boolean)], CalendarDayViewComponent.prototype, "snapDraggedEvents", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarDayViewComponent.prototype, "allDayEventsLabelTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"])], CalendarDayViewComponent.prototype, "currentTimeMarkerTemplate", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarDayViewComponent.prototype, "eventClicked", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarDayViewComponent.prototype, "hourSegmentClicked", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarDayViewComponent.prototype, "eventTimesChanged", void 0);
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:type", Object)], CalendarDayViewComponent.prototype, "beforeViewRender", void 0);
      CalendarDayViewComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'mwl-calendar-day-view',
        template: "\n    <mwl-calendar-week-view\n      class=\"cal-day-view\"\n      [daysInWeek]=\"1\"\n      [viewDate]=\"viewDate\"\n      [events]=\"events\"\n      [hourSegments]=\"hourSegments\"\n      [hourSegmentHeight]=\"hourSegmentHeight\"\n      [dayStartHour]=\"dayStartHour\"\n      [dayStartMinute]=\"dayStartMinute\"\n      [dayEndHour]=\"dayEndHour\"\n      [dayEndMinute]=\"dayEndMinute\"\n      [refresh]=\"refresh\"\n      [locale]=\"locale\"\n      [eventSnapSize]=\"eventSnapSize\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipAppendToBody]=\"tooltipAppendToBody\"\n      [tooltipDelay]=\"tooltipDelay\"\n      [hourSegmentTemplate]=\"hourSegmentTemplate\"\n      [eventTemplate]=\"eventTemplate\"\n      [eventTitleTemplate]=\"eventTitleTemplate\"\n      [eventActionsTemplate]=\"eventActionsTemplate\"\n      [snapDraggedEvents]=\"snapDraggedEvents\"\n      [allDayEventsLabelTemplate]=\"allDayEventsLabelTemplate\"\n      [currentTimeMarkerTemplate]=\"currentTimeMarkerTemplate\"\n      (eventClicked)=\"eventClicked.emit($event)\"\n      (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\n      (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\n      (beforeViewRender)=\"beforeViewRender.emit($event)\"\n    ></mwl-calendar-week-view>\n  "
      })], CalendarDayViewComponent);

      var CalendarDayModule = function CalendarDayModule() {
        _classCallCheck(this, CalendarDayModule);
      };

      CalendarDayModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], CalendarCommonModule, CalendarWeekModule],
        declarations: [CalendarDayViewComponent],
        exports: [CalendarDayViewComponent]
      })], CalendarDayModule);
      var CalendarModule_1;
      /**
       * The main module of this library. Example usage:
       *
       * ```typescript
       * import { CalenderModule } from 'angular-calendar';
       *
       * @NgModule({
       *   imports: [
       *     CalenderModule.forRoot()
       *   ]
       * })
       * class MyModule {}
       * ```
       *
       */

      var CalendarModule = CalendarModule_1 = /*#__PURE__*/function () {
        function CalendarModule() {
          _classCallCheck(this, CalendarModule);
        }

        _createClass(CalendarModule, null, [{
          key: "forRoot",
          value: function forRoot(dateAdapter) {
            var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            return {
              ngModule: CalendarModule_1,
              providers: [dateAdapter, config.eventTitleFormatter || CalendarEventTitleFormatter, config.dateFormatter || CalendarDateFormatter, config.utils || CalendarUtils, config.a11y || CalendarA11y]
            };
          }
        }]);

        return CalendarModule;
      }();

      CalendarModule = CalendarModule_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule],
        exports: [CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule]
      })], CalendarModule);
      /*
       * Public API Surface of angular-calendar
       */

      /**
       * Generated bundle index. Do not edit.
       */
      //# sourceMappingURL=angular-calendar.js.map

      /***/
    },

    /***/
    "iMgG":
    /*!*************************************************!*\
      !*** ./src/app/guards/form-deactivate.guard.ts ***!
      \*************************************************/

    /*! exports provided: FormDeactivateGuard */

    /***/
    function iMgG(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FormDeactivateGuard", function () {
        return FormDeactivateGuard;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");

      var FormDeactivateGuard = /*#__PURE__*/function () {
        function FormDeactivateGuard() {
          _classCallCheck(this, FormDeactivateGuard);
        }

        _createClass(FormDeactivateGuard, [{
          key: "canDeactivate",
          value: function canDeactivate(component, route, state) {
            return component.formCanDeactivate();
          }
        }]);

        return FormDeactivateGuard;
      }();

      FormDeactivateGuard = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
      })], FormDeactivateGuard);
      /***/
    },

    /***/
    "iSMj":
    /*!*********************************************************!*\
      !*** ./node_modules/date-fns/esm/locale/en-US/index.js ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function iSMj(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./_lib/formatDistance/index.js */
      "1izz");
      /* harmony import */


      var _lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./_lib/formatLong/index.js */
      "xMRN");
      /* harmony import */


      var _lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./_lib/formatRelative/index.js */
      "0HXF");
      /* harmony import */


      var _lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./_lib/localize/index.js */
      "J9JN");
      /* harmony import */


      var _lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./_lib/match/index.js */
      "WYsD");
      /**
       * @type {Locale}
       * @category Locales
       * @summary English locale (United States).
       * @language English
       * @iso-639-2 eng
       * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
       * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
       */


      var locale = {
        code: 'en-US',
        formatDistance: _lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__["default"],
        formatLong: _lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__["default"],
        formatRelative: _lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__["default"],
        localize: _lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__["default"],
        match: _lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__["default"],
        options: {
          weekStartsOn: 0
          /* Sunday */
          ,
          firstWeekContainsDate: 1
        }
      };
      /* harmony default export */

      __webpack_exports__["default"] = locale;
      /***/
    },

    /***/
    "iWuq":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfTomorrow/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function iWuq(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfTomorrow;
      });
      /**
       * @name startOfTomorrow
       * @category Day Helpers
       * @summary Return the start of tomorrow.
       * @pure false
       *
       * @description
       * Return the start of tomorrow.
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @returns {Date} the start of tomorrow
       *
       * @example
       * // If today is 6 October 2014:
       * var result = startOfTomorrow()
       * //=> Tue Oct 7 2014 00:00:00
       */


      function startOfTomorrow() {
        var now = new Date();
        var year = now.getFullYear();
        var month = now.getMonth();
        var day = now.getDate();
        var date = new Date(0);
        date.setFullYear(year, month, day + 1);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "jG/O":
    /*!****************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInMinutes/index.js ***!
      \****************************************************************/

    /*! exports provided: default */

    /***/
    function jGO(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInMinutes;
      });
      /* harmony import */


      var _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../differenceInMilliseconds/index.js */
      "Orh4");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_MINUTE = 60000;
      /**
       * @name differenceInMinutes
       * @category Minute Helpers
       * @summary Get the number of minutes between the given dates.
       *
       * @description
       * Get the signed number of full (rounded towards 0) minutes between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of minutes
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?
       * var result = differenceInMinutes(
       *   new Date(2014, 6, 2, 12, 20, 0),
       *   new Date(2014, 6, 2, 12, 7, 59)
       * )
       * //=> 12
       *
       * @example
       * // How many minutes are from 10:01:59 to 10:00:00
       * var result = differenceInMinutes(
       *   new Date(2000, 0, 1, 10, 0, 0),
       *   new Date(2000, 0, 1, 10, 1, 59)
       * )
       * //=> -1
       */

      function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var diff = Object(_differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;
        return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
      }
      /***/

    },

    /***/
    "jIYg":
    /*!**************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/requiredArgs/index.js ***!
      \**************************************************************/

    /*! exports provided: default */

    /***/
    function jIYg(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return requiredArgs;
      });

      function requiredArgs(required, args) {
        if (args.length < required) {
          throw new TypeError(required + ' argument' + required > 1 ? 's' : '' + ' required, but only ' + args.length + ' present');
        }
      }
      /***/

    },

    /***/
    "jKzE":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfMonth/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function jKzE(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfMonth;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name endOfMonth
       * @category Month Helpers
       * @summary Return the end of a month for the given date.
       *
       * @description
       * Return the end of a month for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the end of a month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The end of a month for 2 September 2014 11:55:00:
       * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Tue Sep 30 2014 23:59:59.999
       */


      function endOfMonth(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var month = date.getMonth();
        date.setFullYear(date.getFullYear(), month + 1, 0);
        date.setHours(23, 59, 59, 999);
        return date;
      }
      /***/

    },

    /***/
    "jZMG":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/isTomorrow/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function jZMG(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isTomorrow;
      });
      /* harmony import */


      var _addDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../addDays/index.js */
      "9/EM");
      /* harmony import */


      var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../isSameDay/index.js */
      "G6Tw");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isTomorrow
       * @category Day Helpers
       * @summary Is the given date tomorrow?
       * @pure false
       *
       * @description
       * Is the given date tomorrow?
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is tomorrow
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?
       * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))
       * //=> true
       */


      function isTomorrow(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        return Object(_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), 1));
      }
      /***/

    },

    /***/
    "kJyz":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/isSameYear/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function kJyz(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isSameYear;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isSameYear
       * @category Year Helpers
       * @summary Are the given dates in the same year?
       *
       * @description
       * Are the given dates in the same year?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to check
       * @param {Date|Number} dateRight - the second date to check
       * @returns {Boolean} the dates are in the same year
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Are 2 September 2014 and 25 September 2014 in the same year?
       * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))
       * //=> true
       */


      function isSameYear(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        return dateLeft.getFullYear() === dateRight.getFullYear();
      }
      /***/

    },

    /***/
    "kKUf":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/lastDayOfMonth/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function kKUf(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return lastDayOfMonth;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name lastDayOfMonth
       * @category Month Helpers
       * @summary Return the last day of a month for the given date.
       *
       * @description
       * Return the last day of a month for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the last day of a month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The last day of a month for 2 September 2014 11:55:00:
       * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Tue Sep 30 2014 00:00:00
       */


      function lastDayOfMonth(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var month = date.getMonth();
        date.setFullYear(date.getFullYear(), month + 1, 0);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "kKrM":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/getDaysInYear/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function kKrM(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getDaysInYear;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _isLeapYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../isLeapYear/index.js */
      "9T1D");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getDaysInYear
       * @category Year Helpers
       * @summary Get the number of days in a year of the given date.
       *
       * @description
       * Get the number of days in a year of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the number of days in a year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // How many days are in 2012?
       * var result = getDaysInYear(new Date(2012, 0, 1))
       * //=> 366
       */


      function getDaysInYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

        if (isNaN(date)) {
          return NaN;
        }

        return Object(_isLeapYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date) ? 366 : 365;
      }
      /***/

    },

    /***/
    "kMzH":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/getWeekOfMonth/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function kMzH(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getWeekOfMonth;
      });
      /* harmony import */


      var _getDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../getDate/index.js */
      "TpeJ");
      /* harmony import */


      var _getDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../getDay/index.js */
      "GobQ");
      /* harmony import */


      var _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../startOfMonth/index.js */
      "9ig3");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getWeekOfMonth
       * @category Week Helpers
       * @summary Get the week of the month of the given date.
       *
       * @description
       * Get the week of the month of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @returns {Number} the week of month
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // Which week of the month is 9 November 2017?
       * var result = getWeekOfMonth(new Date(2017, 10, 9))
       * //=> 2
       */


      function getWeekOfMonth(date, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(1, arguments);
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
        }

        var currentDayOfMonth = Object(_getDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date);

        if (isNaN(currentDayOfMonth)) {
          return currentDayOfMonth;
        }

        var startWeekDay = Object(_getDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date));
        var lastDayOfFirstWeek = 0;

        if (startWeekDay >= weekStartsOn) {
          lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;
        } else {
          lastDayOfFirstWeek = weekStartsOn - startWeekDay;
        }

        var weekNumber = 1;

        if (currentDayOfMonth > lastDayOfFirstWeek) {
          var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;
          weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);
        }

        return weekNumber;
      }
      /***/

    },

    /***/
    "knTs":
    /*!***************************************************************!*\
      !*** ./node_modules/date-fns/esm/eachWeekOfInterval/index.js ***!
      \***************************************************************/

    /*! exports provided: default */

    /***/
    function knTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return eachWeekOfInterval;
      });
      /* harmony import */


      var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../addWeeks/index.js */
      "r4sE");
      /* harmony import */


      var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfWeek/index.js */
      "aetl");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name eachWeekOfInterval
       * @category Interval Helpers
       * @summary Return the array of weeks within the specified time interval.
       *
       * @description
       * Return the array of weeks within the specified time interval.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6
       * @throws {RangeError} The start of an interval cannot be after its end
       * @throws {RangeError} Date in interval cannot be `Invalid Date`
       *
       * @example
       * // Each week within interval 6 October 2014 - 23 November 2014:
       * var result = eachWeekOfInterval({
       *   start: new Date(2014, 9, 6),
       *   end: new Date(2014, 10, 23)
       * })
       * //=> [
       * //   Sun Oct 05 2014 00:00:00,
       * //   Sun Oct 12 2014 00:00:00,
       * //   Sun Oct 19 2014 00:00:00,
       * //   Sun Oct 26 2014 00:00:00,
       * //   Sun Nov 02 2014 00:00:00,
       * //   Sun Nov 09 2014 00:00:00,
       * //   Sun Nov 16 2014 00:00:00,
       * //   Sun Nov 23 2014 00:00:00
       * // ]
       */


      function eachWeekOfInterval(dirtyInterval, options) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var interval = dirtyInterval || {};
        var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(interval.start);
        var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(interval.end);
        var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

        if (!(startDate.getTime() <= endTime)) {
          throw new RangeError('Invalid interval');
        }

        var startDateWeek = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(startDate, options);
        var endDateWeek = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet

        startDateWeek.setHours(15);
        endDateWeek.setHours(15);
        endTime = endDateWeek.getTime();
        var weeks = [];
        var currentWeek = startDateWeek;

        while (currentWeek.getTime() <= endTime) {
          currentWeek.setHours(0);
          weeks.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(currentWeek));
          currentWeek = Object(_addWeeks_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentWeek, 1);
          currentWeek.setHours(15);
        }

        return weeks;
      }
      /***/

    },

    /***/
    "ksg9":
    /*!***************************************************!*\
      !*** ./node_modules/date-fns/esm/setDay/index.js ***!
      \***************************************************/

    /*! exports provided: default */

    /***/
    function ksg9(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setDay;
      });
      /* harmony import */


      var _addDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../addDays/index.js */
      "9/EM");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setDay
       * @category Weekday Helpers
       * @summary Set the day of the week to the given date.
       *
       * @description
       * Set the day of the week to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} day - the day of the week of the new date
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @returns {Date} the new date with the day of the week set
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // Set Sunday to 1 September 2014:
       * var result = setDay(new Date(2014, 8, 1), 0)
       * //=> Sun Aug 31 2014 00:00:00
       *
       * @example
       * // If week starts with Monday, set Sunday to 1 September 2014:
       * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })
       * //=> Sun Sep 07 2014 00:00:00
       */


      function setDay(dirtyDate, dirtyDay, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
        }

        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, options);
        var day = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDay);
        var currentDay = date.getDay();
        var remainder = day % 7;
        var dayIndex = (remainder + 7) % 7;
        var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
        return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, diff, options);
      }
      /***/

    },

    /***/
    "ku8+":
    /*!************************************************************************!*\
      !*** ./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js ***!
      \************************************************************************/

    /*! exports provided: default */

    /***/
    function ku8(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return buildLocalizeFn;
      });

      function buildLocalizeFn(args) {
        return function (dirtyIndex, dirtyOptions) {
          var options = dirtyOptions || {};
          var context = options.context ? String(options.context) : 'standalone';
          var valuesArray;

          if (context === 'formatting' && args.formattingValues) {
            var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
            var width = options.width ? String(options.width) : defaultWidth;
            valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
          } else {
            var _defaultWidth = args.defaultWidth;

            var _width = options.width ? String(options.width) : args.defaultWidth;

            valuesArray = args.values[_width] || args.values[_defaultWidth];
          }

          var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
          return valuesArray[index];
        };
      }
      /***/

    },

    /***/
    "lgZR":
    /*!***************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js ***!
      \***************************************************************/

    /*! exports provided: default */

    /***/
    function lgZR(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getUTCISOWeek;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfUTCISOWeek/index.js */
      "tpup");
      /* harmony import */


      var _startOfUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../startOfUTCISOWeekYear/index.js */
      "R8/v");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376

      function getUTCISOWeek(dirtyDate) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var diff = Object(_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date).getTime() - Object(_startOfUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date).getTime(); // Round the number of days to the nearest integer
        // because the number of milliseconds in a week is not constant
        // (e.g. it's different in the week of the daylight saving time clock shift)

        return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
      }
      /***/

    },

    /***/
    "lipz":
    /*!*********************************************!*\
      !*** ./node_modules/array-from/polyfill.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function lipz(module, exports) {
      // Production steps of ECMA-262, Edition 6, 22.1.2.1
      // Reference: http://www.ecma-international.org/ecma-262/6.0/#sec-array.from
      module.exports = function () {
        var isCallable = function isCallable(fn) {
          return typeof fn === 'function';
        };

        var toInteger = function toInteger(value) {
          var number = Number(value);

          if (isNaN(number)) {
            return 0;
          }

          if (number === 0 || !isFinite(number)) {
            return number;
          }

          return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));
        };

        var maxSafeInteger = Math.pow(2, 53) - 1;

        var toLength = function toLength(value) {
          var len = toInteger(value);
          return Math.min(Math.max(len, 0), maxSafeInteger);
        };

        var iteratorProp = function iteratorProp(value) {
          if (value != null) {
            if (['string', 'number', 'boolean', 'symbol'].indexOf(typeof value) > -1) {
              return Symbol.iterator;
            } else if (typeof Symbol !== 'undefined' && 'iterator' in Symbol && Symbol.iterator in value) {
              return Symbol.iterator;
            } // Support "@@iterator" placeholder, Gecko 27 to Gecko 35
            else if ('@@iterator' in value) {
                return '@@iterator';
              }
          }
        };

        var getMethod = function getMethod(O, P) {
          // Assert: IsPropertyKey(P) is true.
          if (O != null && P != null) {
            // Let func be GetV(O, P).
            var func = O[P]; // ReturnIfAbrupt(func).
            // If func is either undefined or null, return undefined.

            if (func == null) {
              return void 0;
            } // If IsCallable(func) is false, throw a TypeError exception.


            if (!isCallable(func)) {
              throw new TypeError(func + ' is not a function');
            }

            return func;
          }
        };

        var iteratorStep = function iteratorStep(iterator) {
          // Let result be IteratorNext(iterator).
          // ReturnIfAbrupt(result).
          var result = iterator.next(); // Let done be IteratorComplete(result).
          // ReturnIfAbrupt(done).

          var done = Boolean(result.done); // If done is true, return false.

          if (done) {
            return false;
          } // Return result.


          return result;
        }; // The length property of the from method is 1.


        return function from(items
        /*, mapFn, thisArg */
        ) {
          'use strict'; // 1. Let C be the this value.

          var C = this; // 2. If mapfn is undefined, let mapping be false.

          var mapFn = arguments.length > 1 ? arguments[1] : void 0;
          var T;

          if (typeof mapFn !== 'undefined') {
            // 3. else
            //   a. If IsCallable(mapfn) is false, throw a TypeError exception.
            if (!isCallable(mapFn)) {
              throw new TypeError('Array.from: when provided, the second argument must be a function');
            } //   b. If thisArg was supplied, let T be thisArg; else let T
            //      be undefined.


            if (arguments.length > 2) {
              T = arguments[2];
            } //   c. Let mapping be true (implied by mapFn)

          }

          var A, k; // 4. Let usingIterator be GetMethod(items, @@iterator).
          // 5. ReturnIfAbrupt(usingIterator).

          var usingIterator = getMethod(items, iteratorProp(items)); // 6. If usingIterator is not undefined, then

          if (usingIterator !== void 0) {
            // a. If IsConstructor(C) is true, then
            //   i. Let A be the result of calling the [[Construct]]
            //      internal method of C with an empty argument list.
            // b. Else,
            //   i. Let A be the result of the abstract operation ArrayCreate
            //      with argument 0.
            // c. ReturnIfAbrupt(A).
            A = isCallable(C) ? Object(new C()) : []; // d. Let iterator be GetIterator(items, usingIterator).

            var iterator = usingIterator.call(items); // e. ReturnIfAbrupt(iterator).

            if (iterator == null) {
              throw new TypeError('Array.from requires an array-like or iterable object');
            } // f. Let k be 0.


            k = 0; // g. Repeat

            var next, nextValue;

            while (true) {
              // i. Let Pk be ToString(k).
              // ii. Let next be IteratorStep(iterator).
              // iii. ReturnIfAbrupt(next).
              next = iteratorStep(iterator); // iv. If next is false, then

              if (!next) {
                // 1. Let setStatus be Set(A, "length", k, true).
                // 2. ReturnIfAbrupt(setStatus).
                A.length = k; // 3. Return A.

                return A;
              } // v. Let nextValue be IteratorValue(next).
              // vi. ReturnIfAbrupt(nextValue)


              nextValue = next.value; // vii. If mapping is true, then
              //   1. Let mappedValue be Call(mapfn, T, «nextValue, k»).
              //   2. If mappedValue is an abrupt completion, return
              //      IteratorClose(iterator, mappedValue).
              //   3. Let mappedValue be mappedValue.[[value]].
              // viii. Else, let mappedValue be nextValue.
              // ix.  Let defineStatus be the result of
              //      CreateDataPropertyOrThrow(A, Pk, mappedValue).
              // x. [TODO] If defineStatus is an abrupt completion, return
              //    IteratorClose(iterator, defineStatus).

              if (mapFn) {
                A[k] = mapFn.call(T, nextValue, k);
              } else {
                A[k] = nextValue;
              } // xi. Increase k by 1.


              k++;
            } // 7. Assert: items is not an Iterable so assume it is
            //    an array-like object.

          } else {
            // 8. Let arrayLike be ToObject(items).
            var arrayLike = Object(items); // 9. ReturnIfAbrupt(items).

            if (items == null) {
              throw new TypeError('Array.from requires an array-like object - not null or undefined');
            } // 10. Let len be ToLength(Get(arrayLike, "length")).
            // 11. ReturnIfAbrupt(len).


            var len = toLength(arrayLike.length); // 12. If IsConstructor(C) is true, then
            //     a. Let A be Construct(C, «len»).
            // 13. Else
            //     a. Let A be ArrayCreate(len).
            // 14. ReturnIfAbrupt(A).

            A = isCallable(C) ? Object(new C(len)) : new Array(len); // 15. Let k be 0.

            k = 0; // 16. Repeat, while k < len… (also steps a - h)

            var kValue;

            while (k < len) {
              kValue = arrayLike[k];

              if (mapFn) {
                A[k] = mapFn.call(T, kValue, k);
              } else {
                A[k] = kValue;
              }

              k++;
            } // 17. Let setStatus be Set(A, "length", len, true).
            // 18. ReturnIfAbrupt(setStatus).


            A.length = len; // 19. Return A.
          }

          return A;
        };
      }();
      /***/

    },

    /***/
    "lv2b":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfToday/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function lv2b(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfToday;
      });
      /* harmony import */


      var _endOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../endOfDay/index.js */
      "piIK");
      /**
       * @name endOfToday
       * @category Day Helpers
       * @summary Return the end of today.
       * @pure false
       *
       * @description
       * Return the end of today.
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @returns {Date} the end of today
       *
       * @example
       * // If today is 6 October 2014:
       * var result = endOfToday()
       * //=> Mon Oct 6 2014 23:59:59.999
       */


      function endOfToday() {
        return Object(_endOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now());
      }
      /***/

    },

    /***/
    "mDNA":
    /*!*****************************************************************************!*\
      !*** ./src/app/modules/comercial/agenda/formulario/formulario.component.ts ***!
      \*****************************************************************************/

    /*! exports provided: ComercialAgendaFormularioComponent */

    /***/
    function mDNA(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ComercialAgendaFormularioComponent", function () {
        return ComercialAgendaFormularioComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_formulario_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./formulario.component.html */
      "UUMI");
      /* harmony import */


      var _formulario_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./formulario.component.scss */
      "R9pN");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/forms */
      "s7LF");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/router */
      "iInd");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @angular/common */
      "SVse");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");
      /* harmony import */


      var ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ngx-bootstrap/datepicker */
      "ienR");
      /* harmony import */


      var ngx_bootstrap_chronos__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ngx-bootstrap/chronos */
      "xj/R");
      /* harmony import */


      var ngx_bootstrap_locale__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ngx-bootstrap/locale */
      "0b5p");
      /* harmony import */


      var src_app_shared_services_core_pnotify_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! src/app/shared/services/core/pnotify.service */
      "g+W+");
      /* harmony import */


      var src_app_shared_services_core_date_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! src/app/shared/services/core/date.service */
      "Rk3r");
      /* harmony import */


      var src_app_shared_services_requests_atividades_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! src/app/shared/services/requests/atividades.service */
      "0PD5");
      /* harmony import */


      var _formulario_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! ./formulario.service */
      "L7KI");
      /* harmony import */


      var src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! src/app/modules/comercial/agenda/agenda.service */
      "73eH");
      /* harmony import */


      var src_app_shared_services_core_title_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! src/app/shared/services/core/title.service */
      "dNnS");
      /* harmony import */


      var _ciclo_vendas_cotacoes_cotacoes_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! ../../ciclo-vendas/cotacoes/cotacoes.service */
      "uuri"); // ngx-bootstrap


      Object(ngx_bootstrap_chronos__WEBPACK_IMPORTED_MODULE_9__["defineLocale"])('pt-br', ngx_bootstrap_locale__WEBPACK_IMPORTED_MODULE_10__["ptBrLocale"]); // Services

      var ComercialAgendaFormularioComponent = /*#__PURE__*/function () {
        function ComercialAgendaFormularioComponent(activatedRoute, atividadesService, formService, agendaService, router, formBuilder, location, localeService, pnotifyService, dateService, titleService, cotacoesService) {
          _classCallCheck(this, ComercialAgendaFormularioComponent);

          this.activatedRoute = activatedRoute;
          this.atividadesService = atividadesService;
          this.formService = formService;
          this.agendaService = agendaService;
          this.router = router;
          this.formBuilder = formBuilder;
          this.location = location;
          this.localeService = localeService;
          this.pnotifyService = pnotifyService;
          this.dateService = dateService;
          this.titleService = titleService;
          this.cotacoesService = cotacoesService;
          this.colors = [{
            hex: '#FFFF01',
            descricao: 'Amarelo'
          }, {
            hex: '#0033FF',
            descricao: 'Azul'
          }, {
            hex: '#FB6602',
            descricao: 'Laranja'
          }, {
            hex: '#FF0087',
            descricao: 'Rosa'
          }, {
            hex: '#610069',
            descricao: 'Roxo'
          }, {
            hex: '#FA1100',
            descricao: 'Vermelho'
          }];
          this.loaderNavbar = false;
          this.loaderFullScreen = true;
          this.breadCrumbTree = [];
          this.formChanged = false;
          this.submittingForm = false;
          this.clientes = [];
          this.promotores = [];
          this.formasContato = [];
          this.origensContato = [];
          this.listarTitulosAgenda = [];
          this.motivosReagendamento = [];
          this.showInputClientes = true;
          this.showInputVendedores = true;
          this.isDisabledTime = false;
          this.localeService.use('pt-br');
          this.bsConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue'
          }, {
            adaptivePosition: true
          }, {
            showWeekNumbers: false
          });
          this.pnotifyService.getPNotify();
        }

        _createClass(ComercialAgendaFormularioComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.registrarAcesso();
            this.checkAcessos();
            this.checkUrlParams();
            this.getFormFields();
          }
        }, {
          key: "registrarAcesso",
          value: function registrarAcesso() {
            this.atividadesService.registrarAcesso().subscribe();
          } // checkAcessos(): void {
          //   const acessos: JsonResponse = this.activatedRoute.snapshot.data.acessos;
          //   if (acessos.success === true) {
          //     this.permissoesAcesso = acessos.data;
          //   } else {
          //     this.permissoesAcesso.simuladorVendas = false;
          //   }
          // }

        }, {
          key: "checkAcessos",
          value: function checkAcessos() {
            var acessos = this.activatedRoute.snapshot.data.detalhes;

            if (acessos.responseCode === 200) {
              this.permissoesAcesso = acessos.result;
            } else {
              this.permissoesAcesso.simuladorVendas == false;
            }
          }
        }, {
          key: "checkUrlParams",
          value: function checkUrlParams() {
            var _this25 = this;

            this.activatedRoute.params.subscribe(function (params) {
              if (params.id) {
                var routerUrl = _this25.router.url.split('/');

                _this25.action = routerUrl[routerUrl.length - 2];

                _this25.setBreadCrumb(_this25.action, params.id);
              } else {
                _this25.action = 'novo';

                _this25.setBreadCrumb(_this25.action);
              }

              _this25.setFormBuilder();
            });
          }
        }, {
          key: "appTitle",
          value: function appTitle() {
            var title;

            if (this.action == 'novo') {
              title = 'Nuevo contacto';
            } else if (this.action == 'editar') {
              title = 'Editar contato';
            } else if (this.action == 'reagendar') {
              title = 'Reagendar contato';
            }

            return title;
          }
        }, {
          key: "setFormBuilder",
          value: function setFormBuilder() {
            if (this.activatedRoute.snapshot.data.detalhes.responseCode === 200) {
              var detalhes = this.activatedRoute.snapshot.data.detalhes.result;
              var inicioData, inicioHorario, terminoData, terminoHorario;

              if (detalhes.start === null) {
                inicioData = new Date();
                inicioHorario = new Date();
                terminoData = new Date();
                terminoHorario = new Date();
              } else {
                inicioData = new Date(detalhes.start);
                inicioHorario = new Date(detalhes.start);
                terminoData = new Date(detalhes.end);
                terminoHorario = new Date(detalhes.end);
              }

              this.form = this.formBuilder.group({
                id: [detalhes.id],
                // codTitulosAgenda: [detalhes.codTitulosAgenda, [Validators.required]],
                cor: [detalhes.color.primary],
                codTitulo: [{
                  value: detalhes.codTitulo,
                  disabled: this.action == 'reagendar' ? true : false
                }, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
                cliente: [{
                  value: detalhes.codClient,
                  disabled: this.action == 'novo' ? false : true
                }],
                promotor: [{
                  value: detalhes.id_vendedor,
                  disabled: this.action == 'novo' ? false : true
                }],
                gerarCotacaoPedido: [false],
                codFormaContato: [detalhes.formContactId],
                codOrigemContato: [detalhes.typeContactId],
                inicioData: [inicioData, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
                inicioHorario: [{
                  value: inicioHorario,
                  disabled: detalhes.allDay
                }, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
                terminoData: [{
                  value: terminoData,
                  disabled: detalhes.allDay
                }],
                terminoHorario: [{
                  value: terminoHorario,
                  disabled: detalhes.allDay
                }],
                diaInteiro: [detalhes.allDay],
                motivoReagendamento: [detalhes.rescheduleId],
                observacao: [{
                  value: detalhes.description,
                  disabled: this.action == 'reagendar' ? true : false
                }]
              });

              if (detalhes.allDay) {
                this.isDisabledTime = true;
              }

              if (this.action == 'reagendar') {
                this.form.controls.motivoReagendamento.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]);
                this.form.controls.motivoReagendamento.updateValueAndValidity();
              }
            } else {
              this.pnotifyService.error();
              this.location.back();
            }
          }
        }, {
          key: "setBreadCrumb",
          value: function setBreadCrumb(action) {
            var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

            if (action == 'novo') {
              this.breadCrumbTree = [{
                descricao: 'Home',
                routerLink: '/comercial/home'
              }, {
                descricao: 'Agenda',
                routerLink: "/comercial/agenda/compromissos"
              }, {
                descricao: 'Nuevo contacto'
              }];
            } else {
              this.breadCrumbTree = [{
                descricao: 'Home',
                routerLink: '/comercial/home'
              }, {
                descricao: 'Agenda',
                routerLink: "/comercial/agenda/compromissos"
              }, {
                descricao: 'Detalles',
                routerLink: "/comercial/agenda/detalhes/".concat(id)
              }, {
                descricao: this.action == 'editar' ? 'Editar contato' : 'Reagendar contato'
              }];
            }

            this.titleService.setTitle(this.breadCrumbTree[this.breadCrumbTree.length - 1].descricao);
          }
        }, {
          key: "getFormFields",
          value: function getFormFields() {
            var _this26 = this;

            this.loaderFullScreen = true;
            this.formService.loadDependencies().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["finalize"])(function () {
              _this26.loaderFullScreen = false;
            })).subscribe(function (response) {
              console.log(response);

              if (response[0].success === true) {
                _this26.clientes = response[0].data;
              } else if (response[0].success === false) {
                _this26.showInputClientes = false;
              } else {
                _this26.handleLoadDependenciesError();
              }

              if (response[1].success === true) {
                _this26.formasContato = response[1].data;

                _this26.formasContato.unshift({
                  codFormaContato: null,
                  nomeFormaContato: ''
                });
              } else {
                _this26.handleLoadDependenciesError();
              }

              if (response[2].success === true) {
                _this26.origensContato = response[2].data;

                _this26.origensContato.unshift({
                  codOrigemContato: null,
                  nomeOrigemContato: ''
                });
              } else {
                _this26.handleLoadDependenciesError();
              }

              if (response[3].success === true) {
                _this26.motivosReagendamento = response[3].data;
              } else {
                _this26.handleLoadDependenciesError();
              }

              if (response[4].success === true) {
                _this26.listarTitulosAgenda = response[4].data;
              } else {
                _this26.handleLoadDependenciesError();
              } // @ts-ignore: Ignorar error TS2339


              if (response[5].responseCode == 200) {
                console.log(response[5].data); // @ts-ignore: Ignorar error TS2339

                _this26.promotores = response[5].result;
              } else {
                _this26.showInputVendedores = false;
              }
            });
          }
        }, {
          key: "handleLoadDependenciesError",
          value: function handleLoadDependenciesError() {
            this.pnotifyService.error();
            this.location.back();
          }
        }, {
          key: "onColorChange",
          value: function onColorChange(color) {
            this.form.controls.cor.setValue(color.hex);
          }
        }, {
          key: "triggerAllDay",
          value: function triggerAllDay() {
            this.isDisabledTime = !this.isDisabledTime;

            if (!this.isDisabledTime) {
              this.form.controls.inicioHorario.enable();
              this.form.controls.terminoHorario.enable();
              this.form.controls.terminoData.enable();
            } else {
              this.form.controls.inicioHorario.disable();
              this.form.controls.terminoHorario.disable();
              this.form.controls.terminoData.disable();
            }
          }
        }, {
          key: "checkValidatorsDate",
          value: function checkValidatorsDate() {
            var validation = true,
                inicioData,
                inicioHorario,
                terminoData,
                terminoHorario;

            if (!this.form.value.diaInteiro) {
              inicioData = this.form.value.inicioData;
              inicioHorario = this.form.value.inicioHorario;
              terminoData = this.form.value.terminoData;
              terminoHorario = this.form.value.terminoHorario;
              inicioData.setHours(inicioHorario.getHours(), inicioHorario.getMinutes());
              terminoData.setHours(terminoHorario.getHours(), terminoHorario.getMinutes());

              if (inicioData.getTime() > terminoData.getTime()) {
                validation = false;
              }
            }

            return validation;
          }
        }, {
          key: "onFieldError",
          value: function onFieldError(field) {
            if (this.onFieldInvalid(field)) {
              return 'is-invalid';
            }

            return '';
          }
        }, {
          key: "onFieldInvalid",
          value: function onFieldInvalid(field) {
            field = this.form.get(field);
            return field.status == 'INVALID' && field.touched;
          }
        }, {
          key: "onFieldRequired",
          value: function onFieldRequired(field) {
            var required = false;
            var formControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormControl"]();

            if (this.form.controls[field].validator) {
              var validationResult = this.form.controls[field].validator(formControl);
              required = validationResult !== null && validationResult.required === true;
            }

            if (required) {
              return 'is-required';
            }
          }
        }, {
          key: "onSubmit",
          value: function onSubmit() {
            var _this27 = this;

            if (!this.checkValidatorsDate()) {
              this.pnotifyService.notice('Data de término deve ser maior que início.');
              return;
            }

            if (this.form.valid) {
              this.loaderNavbar = true;
              this.submittingForm = true;
              var formValue = this.form.getRawValue();
              var client, formContactDesc, typeContactDesc, inicioData, inicioHorario, terminoData, terminoHorario;
              var promotor;
              var msgSuccess = 'Su cita fue creada.';
              var msgError = 'Ocurrio un error al crear cita.';

              if (formValue.id) {
                msgSuccess = 'Su cita fue editada.';
                msgError = 'Ocurrio un error al editar cita.';
              }

              if (formValue.cliente != '') {
                for (var index = 0; index < this.clientes.length; index++) {
                  if (this.clientes[index].id == formValue.cliente) {
                    client = this.clientes[index].razaoSocial;
                  }
                }
              }

              if (formValue.promotor != '') {
                for (var _index = 0; _index < this.promotores.length; _index++) {
                  if (this.promotores[_index].id == formValue.promotor) {
                    promotor = this.promotores[_index].nome;
                  }
                }
              }

              if (formValue.codFormaContato != '') {
                for (var _index2 = 0; _index2 < this.formasContato.length; _index2++) {
                  if (this.formasContato[_index2].codFormaContato == formValue.codFormaContato) {
                    formContactDesc = this.formasContato[_index2].nomeFormaContato;
                  }
                }
              }

              if (formValue.codOrigemContato != '') {
                for (var _index3 = 0; _index3 < this.origensContato.length; _index3++) {
                  if (this.origensContato[_index3].codOrigemContato == formValue.codFormaContato) {
                    typeContactDesc = this.origensContato[_index3].nomeOrigemContato;
                  }
                }
              }

              if (formValue.diaInteiro) {
                inicioData = formValue.inicioData;
                terminoData = inicioData;
                inicioData.setHours(0, 0, 0);
                terminoData.setHours(0, 0, 0);
              } else {
                inicioData = formValue.inicioData;
                inicioHorario = formValue.inicioHorario;
                terminoData = formValue.terminoData;
                terminoHorario = formValue.terminoHorario;
                inicioData.setHours(inicioHorario.getHours(), inicioHorario.getMinutes());
                terminoData.setHours(terminoHorario.getHours(), terminoHorario.getMinutes());
              }

              var inicio = this.dateService.convert2PhpDate(inicioData);
              var termino = this.dateService.convert2PhpDate(terminoData);
              var formObj = {
                id: formValue.id,
                color: {
                  primary: formValue.cor
                },
                // title: formValue.codTitulo,
                codTitulo: formValue.codTitulo,
                codClient: formValue.cliente,
                idVendedor: formValue.promotor,
                client: client,
                formContactId: formValue.codFormaContato,
                formContactDesc: formContactDesc,
                typeContactId: formValue.codOrigemContato,
                typeContactDesc: typeContactDesc,
                start: inicio,
                end: termino,
                allDay: formValue.diaInteiro,
                rescheduleId: formValue.motivoReagendamento,
                description: formValue.observacao ? formValue.observacao.toUpperCase() : null
              };
              this.agendaService.save(this.action, formObj).subscribe({
                next: function next(response) {
                  if (response.responseCode === 200) {
                    _this27.pnotifyService.success(msgSuccess);

                    _this27.formChanged = false;

                    if (_this27.action == 'reagendar') {
                      _this27.router.navigate(['../../compromissos'], {
                        relativeTo: _this27.activatedRoute
                      });
                    } else {
                      if (_this27.permissoesAcesso.simuladorVendas === true && _this27.form.value.gerarCotacaoPedido === true) {
                        _this27.onAddCotacaoPedido();
                      } else {
                        _this27.location.back();
                      }
                    }
                  } else {
                    _this27.handleErrorOnSubmit(msgError);
                  }
                },
                error: function error(_error3) {
                  _this27.handleErrorOnSubmit(msgError);
                }
              });
            }
          }
        }, {
          key: "handleErrorOnSubmit",
          value: function handleErrorOnSubmit(message) {
            this.loaderNavbar = false;
            this.submittingForm = false;
            this.pnotifyService.error(message);
          }
        }, {
          key: "onInput",
          value: function onInput() {
            this.formChanged = true;
          }
        }, {
          key: "formCanDeactivate",
          value: function formCanDeactivate() {
            if (this.formChanged) {
              if (confirm('La información no guardada se perderá. ¿Desea continuar?')) {
                return true;
              } else {
                return false;
              }
            }

            return true;
          }
        }, {
          key: "onCancel",
          value: function onCancel() {
            this.location.back();
          }
        }, {
          key: "onGerarCotacaoPedido",
          value: function onGerarCotacaoPedido() {
            if (this.form.value.gerarCotacaoPedido === true) {
              this.form.controls.cliente.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]);
              this.form.controls.codFormaContato.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]);
              this.form.controls.codOrigemContato.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]);

              if (this.form.value.cliente === null) {
                this.form.controls.cliente.markAsTouched();
                this.form.controls.cliente.setErrors({
                  incorrect: true
                });
              }

              if (this.form.value.promotor === null) {
                this.form.controls.promotor.markAsTouched();
                this.form.controls.promotor.setErrors({
                  incorrect: true
                });
              }

              if (this.form.value.codFormaContato === null) {
                this.form.controls.codFormaContato.markAsTouched();
                this.form.controls.codFormaContato.setErrors({
                  incorrect: true
                });
              }

              if (this.form.value.codOrigemContato === null) {
                this.form.controls.codOrigemContato.markAsTouched();
                this.form.controls.codOrigemContato.setErrors({
                  incorrect: true
                });
              }
            } else if (this.form.value.gerarCotacaoPedido === false) {
              this.form.controls.cliente.setValidators(null);
              this.form.controls.codFormaContato.setValidators(null);
              this.form.controls.codOrigemContato.setValidators(null);
            }

            this.form.controls.cliente.updateValueAndValidity();
            this.form.controls.codFormaContato.updateValueAndValidity();
            this.form.controls.codOrigemContato.updateValueAndValidity();
          }
        }, {
          key: "onAddCotacaoPedido",
          value: function onAddCotacaoPedido() {
            var _this28 = this;

            this.loaderNavbar = true;
            var params = {
              codFormaContato: this.form.value.codFormaContato,
              codOrigemContato: this.form.value.codOrigemContato
            };
            this.cotacoesService.getReservarIdCotacao().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["finalize"])(function () {
              _this28.loaderNavbar = false;
            })).subscribe(function (response) {
              if (response.hasOwnProperty('success') && response.success === true) {
                _this28.router.navigate(['/comercial/ciclo-vendas/cotacoes-pedidos/novo/', response.data.idReservado, _this28.form.value.cliente], {
                  queryParams: {
                    f: btoa(JSON.stringify(params))
                  }
                });
              } else {
                _this28.pnotifyService.error();
              }
            });
          }
        }]);

        return ComercialAgendaFormularioComponent;
      }();

      ComercialAgendaFormularioComponent.ctorParameters = function () {
        return [{
          type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
        }, {
          type: src_app_shared_services_requests_atividades_service__WEBPACK_IMPORTED_MODULE_13__["AtividadesService"]
        }, {
          type: _formulario_service__WEBPACK_IMPORTED_MODULE_14__["ComercialAgendaFormularioService"]
        }, {
          type: src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_15__["ComercialAgendaService"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"]
        }, {
          type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["Location"]
        }, {
          type: ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_8__["BsLocaleService"]
        }, {
          type: src_app_shared_services_core_pnotify_service__WEBPACK_IMPORTED_MODULE_11__["PNotifyService"]
        }, {
          type: src_app_shared_services_core_date_service__WEBPACK_IMPORTED_MODULE_12__["DateService"]
        }, {
          type: src_app_shared_services_core_title_service__WEBPACK_IMPORTED_MODULE_16__["TitleService"]
        }, {
          type: _ciclo_vendas_cotacoes_cotacoes_service__WEBPACK_IMPORTED_MODULE_17__["ComercialCicloVendasCotacoesService"]
        }];
      };

      ComercialAgendaFormularioComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'comercial-agenda-formulario',
        template: _raw_loader_formulario_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_formulario_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"], src_app_shared_services_requests_atividades_service__WEBPACK_IMPORTED_MODULE_13__["AtividadesService"], _formulario_service__WEBPACK_IMPORTED_MODULE_14__["ComercialAgendaFormularioService"], src_app_modules_comercial_agenda_agenda_service__WEBPACK_IMPORTED_MODULE_15__["ComercialAgendaService"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["Location"], ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_8__["BsLocaleService"], src_app_shared_services_core_pnotify_service__WEBPACK_IMPORTED_MODULE_11__["PNotifyService"], src_app_shared_services_core_date_service__WEBPACK_IMPORTED_MODULE_12__["DateService"], src_app_shared_services_core_title_service__WEBPACK_IMPORTED_MODULE_16__["TitleService"], _ciclo_vendas_cotacoes_cotacoes_service__WEBPACK_IMPORTED_MODULE_17__["ComercialCicloVendasCotacoesService"]])], ComercialAgendaFormularioComponent);
      /***/
    },

    /***/
    "moCM":
    /*!**************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInHours/index.js ***!
      \**************************************************************/

    /*! exports provided: default */

    /***/
    function moCM(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInHours;
      });
      /* harmony import */


      var _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../differenceInMilliseconds/index.js */
      "Orh4");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_HOUR = 3600000;
      /**
       * @name differenceInHours
       * @category Hour Helpers
       * @summary Get the number of hours between the given dates.
       *
       * @description
       * Get the number of hours between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of hours
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?
       * var result = differenceInHours(
       *   new Date(2014, 6, 2, 19, 0),
       *   new Date(2014, 6, 2, 6, 50)
       * )
       * //=> 12
       */

      function differenceInHours(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var diff = Object(_differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;
        return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
      }
      /***/

    },

    /***/
    "nFnn":
    /*!************************************************************************!*\
      !*** ./node_modules/angularx-flatpickr/fesm2015/angularx-flatpickr.js ***!
      \************************************************************************/

    /*! exports provided: FlatpickrDefaults, USER_DEFAULTS, defaultsFactory, FlatpickrModule, ɵa, ɵb */

    /***/
    function nFnn(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FlatpickrDefaults", function () {
        return FlatpickrDefaults;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "USER_DEFAULTS", function () {
        return USER_DEFAULTS;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "defaultsFactory", function () {
        return defaultsFactory;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "FlatpickrModule", function () {
        return FlatpickrModule;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵa", function () {
        return FLATPICKR_CONTROL_VALUE_ACCESSOR;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ɵb", function () {
        return FlatpickrDirective;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/forms */
      "s7LF");
      /* harmony import */


      var flatpickr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! flatpickr */
      "zwY0");
      /* harmony import */


      var flatpickr__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(flatpickr__WEBPACK_IMPORTED_MODULE_2__);
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes} checked by tsc
       */


      var FlatpickrDefaults = function FlatpickrDefaults() {
        _classCallCheck(this, FlatpickrDefaults);

        /**
         * Exactly the same as date format, but for the altInput field.
         */
        this.altFormat = 'F j, Y';
        /**
         * 	Show the user a readable date (as per altFormat), but return something totally different to the server.
         */

        this.altInput = false;
        /**
         * This class will be added to the input element created by the altInput option.
         * Note that `altInput` already inherits classes from the original input.
         */

        this.altInputClass = '';
        /**
         * Allows the user to enter a date directly input the input field. By default, direct entry is disabled.
         */

        this.allowInput = false;
        /**
         * Instead of `body`, appends the calendar to the specified node instead.
         */

        this.appendTo = undefined;
        /**
         * Defines how the date will be formatted in the aria-label for calendar days, using the same tokens as dateFormat. If you change this, you should choose a value that will make sense if a screen reader reads it out loud.
         */

        this.ariaDateFormat = 'F j, Y';
        /**
         * Whether clicking on the input should open the picker.
         * You could disable this if you wish to open the calendar manually `with.open()`.
         */

        this.clickOpens = true;
        /**
         * A string of characters which are used to define how the date will be displayed in the input box.
         * The supported characters are defined in the table below.
         */

        this.dateFormat = 'Y-m-d';
        /**
         * Initial value of the hour element.
         */

        this.defaultHour = 12;
        /**
         * Initial value of the minute element.
         */

        this.defaultMinute = 0;
        /**
         * See <a href="https://chmln.github.io/flatpickr/examples/#disabling-specific-dates">disabling dates</a>.
         */

        this.disable = [];
        /**
         * Set disableMobile to true to always use the non-native picker.
         * By default, Flatpickr utilizes native datetime widgets unless certain options (e.g. disable) are used.
         */

        this.disableMobile = false;
        /**
         * See <a href="https://chmln.github.io/flatpickr/examples/#disabling-all-dates-except-select-few">enabling dates</a>.
         */

        this.enable = [];
        /**
         * Enables time picker.
         */

        this.enableTime = false;
        /**
         * Enables seconds in the time picker.
         */

        this.enableSeconds = false;
        /**
         * Allows using a custom date formatting function instead of the built-in handling for date formats using dateFormat, altFormat, etc.
         */

        this.formatDate = undefined;
        /**
         * Adjusts the step for the hour input (incl. scrolling).
         */

        this.hourIncrement = 1;
        /**
         * Displays the calendar inline.
         */

        this.inline = false;
        /**
         * The maximum date that a user can pick to (inclusive).
         */

        this.maxDate = undefined;
        /**
         * The minimum date that a user can start picking from (inclusive).
         */

        this.minDate = undefined;
        /**
         * Adjusts the step for the minute input (incl. scrolling).
         */

        this.minuteIncrement = 5;
        /**
         * Select a single date, multiple dates or a date range.
         */

        this.mode = 'single';
        /**
         * HTML for the arrow icon, used to switch months.
         */

        this.nextArrow = '>';
        /**
         * Hides the day selection in calendar. Use it along with `enableTime` to create a time picker.
         */

        this.noCalendar = false;
        /**
         * Default now to the current date
         */

        this.now = new Date();
        /**
         * HTML for the left arrow icon.
         */

        this.prevArrow = '<';
        /**
         * Show the month using the shorthand version (ie, Sep instead of September).
         */

        this.shorthandCurrentMonth = false;
        /**
         * Position the calendar inside the wrapper and next to the input element. (Leave `false` unless you know what you're doing).
         */

        this["static"] = false;
        /**
         * Displays time picker in 24 hour mode without AM/PM selection when enabled.
         */

        this.time24hr = false;
        /**
         * When true, dates will parsed, formatted, and displayed in UTC.
         * It's recommended that date strings contain the timezone, but not necessary.
         */

        this.utc = false;
        /**
         * Enables display of week numbers in calendar.
         */

        this.weekNumbers = false;
        /**
         * Custom elements and input groups.
         */

        this.wrap = false;
        /**
         * Array of plugin instances to use.
         */

        this.plugins = [];
        /**
         * The locale object or string to use for the locale.
         */

        this.locale = 'default';
        /**
         * Auto convert the ngModel value from a string to a date / array of dates / from - to date object depending on the `mode`
         */

        this.convertModelValue = false;
        /**
         * The number of months shown.
         */

        this.showMonths = 1;
      };

      FlatpickrDefaults.decorators = [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
      }];
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes} checked by tsc
       */

      var
      /** @type {?} */
      FLATPICKR_CONTROL_VALUE_ACCESSOR = {
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
          return FlatpickrDirective;
        }),
        //tslint:disable-line
        multi: true
      };

      var FlatpickrDirective = /*#__PURE__*/function () {
        /**
         * @param {?} elm
         * @param {?} defaults
         * @param {?} renderer
         */
        function FlatpickrDirective(elm, defaults, renderer) {
          _classCallCheck(this, FlatpickrDirective);

          this.elm = elm;
          this.defaults = defaults;
          this.renderer = renderer;
          /**
           * Gets triggered once the calendar is in a ready state
           */

          this.flatpickrReady = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          /**
           * Gets triggered when the user selects a date, or changes the time on a selected date.
           */

          this.flatpickrChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          /**
           * Gets triggered when the input value is updated with a new date string.
           */

          this.flatpickrValueUpdate = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          /**
           * Gets triggered when the calendar is opened.
           */

          this.flatpickrOpen = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          /**
           * Gets triggered when the calendar is closed.
           */

          this.flatpickrClose = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          /**
           * Gets triggered when the month is changed, either by the user or programmatically.
           */

          this.flatpickrMonthChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          /**
           * Gets triggered when the year is changed, either by the user or programmatically.
           */

          this.flatpickrYearChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          /**
           * Take full control of every date cell with this output
           */

          this.flatpickrDayCreate = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.isDisabled = false;

          this.onChangeFn = function () {};

          this.onTouchedFn = function () {};
        }
        /**
         * @return {?}
         */


        _createClass(FlatpickrDirective, [{
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            var _this29 = this;

            var
            /** @type {?} */
            options = {
              altFormat: this.altFormat,
              altInput: this.altInput,
              altInputClass: this.altInputClass,
              allowInput: this.allowInput,
              appendTo: this.appendTo,
              ariaDateFormat: this.ariaDateFormat,
              clickOpens: this.clickOpens,
              dateFormat: this.dateFormat,
              defaultHour: this.defaultHour,
              defaultMinute: this.defaultMinute,
              disable: this.disable,
              disableMobile: this.disableMobile,
              enable: this.enable,
              enableTime: this.enableTime,
              enableSeconds: this.enableSeconds,
              formatDate: this.formatDate,
              hourIncrement: this.hourIncrement,
              defaultDate: this.initialValue,
              inline: this.inline,
              maxDate: this.maxDate,
              minDate: this.minDate,
              minuteIncrement: this.minuteIncrement,
              mode: this.mode,
              nextArrow: this.nextArrow,
              noCalendar: this.noCalendar,
              now: this.now,
              parseDate: this.parseDate,
              prevArrow: this.prevArrow,
              shorthandCurrentMonth: this.shorthandCurrentMonth,
              showMonths: this.showMonths,
              "static": this["static"],
              time24hr: this.time24hr,
              weekNumbers: this.weekNumbers,
              getWeek: this.getWeek,
              wrap: this.wrap,
              plugins: this.plugins,
              locale: this.locale,
              onChange: function onChange(selectedDates, dateString, instance) {
                _this29.flatpickrChange.emit({
                  selectedDates: selectedDates,
                  dateString: dateString,
                  instance: instance
                });
              },
              onOpen: function onOpen(selectedDates, dateString, instance) {
                _this29.flatpickrOpen.emit({
                  selectedDates: selectedDates,
                  dateString: dateString,
                  instance: instance
                });
              },
              onClose: function onClose(selectedDates, dateString, instance) {
                _this29.flatpickrClose.emit({
                  selectedDates: selectedDates,
                  dateString: dateString,
                  instance: instance
                });
              },
              onMonthChange: function onMonthChange(selectedDates, dateString, instance) {
                _this29.flatpickrMonthChange.emit({
                  selectedDates: selectedDates,
                  dateString: dateString,
                  instance: instance
                });
              },
              onYearChange: function onYearChange(selectedDates, dateString, instance) {
                _this29.flatpickrYearChange.emit({
                  selectedDates: selectedDates,
                  dateString: dateString,
                  instance: instance
                });
              },
              onReady: function onReady(selectedDates, dateString, instance) {
                _this29.flatpickrReady.emit({
                  selectedDates: selectedDates,
                  dateString: dateString,
                  instance: instance
                });
              },
              onValueUpdate: function onValueUpdate(selectedDates, dateString, instance) {
                _this29.flatpickrValueUpdate.emit({
                  selectedDates: selectedDates,
                  dateString: dateString,
                  instance: instance
                });
              },
              onDayCreate: function onDayCreate(selectedDates, dateString, instance, dayElement) {
                _this29.flatpickrDayCreate.emit({
                  selectedDates: selectedDates,
                  dateString: dateString,
                  instance: instance,
                  dayElement: dayElement
                });
              }
            };
            Object.keys(options).forEach(function (key) {
              if (typeof options[key] === 'undefined') {
                options[key] =
                /** @type {?} */
                _this29.defaults[key];
              }
            });
            options.time_24hr = options.time24hr;
            this.instance =
            /** @type {?} */
            flatpickr__WEBPACK_IMPORTED_MODULE_2___default()(this.elm.nativeElement, options);
            this.setDisabledState(this.isDisabled);
          }
          /**
           * @param {?} changes
           * @return {?}
           */

        }, {
          key: "ngOnChanges",
          value: function ngOnChanges(changes) {
            var _this30 = this;

            if (this.instance) {
              Object.keys(changes).forEach(function (inputKey) {
                _this30.instance.set(
                /** @type {?} */
                inputKey,
                /** @type {?} */
                _this30[inputKey]);
              });
            }
          }
          /**
           * @return {?}
           */

        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.instance.destroy();
          }
          /**
           * @param {?} value
           * @return {?}
           */

        }, {
          key: "writeValue",
          value: function writeValue(value) {
            var
            /** @type {?} */
            convertedValue = value;

            if (this.convertModelValue && this.mode === 'range' && value) {
              convertedValue = [value.from, value.to];
            }

            if (this.instance) {
              this.instance.setDate(convertedValue);
            } else {
              // flatpickr hasn't been initialised yet, store the value for later use
              this.initialValue = convertedValue;
            }
          }
          /**
           * @param {?} fn
           * @return {?}
           */

        }, {
          key: "registerOnChange",
          value: function registerOnChange(fn) {
            this.onChangeFn = fn;
          }
          /**
           * @param {?} fn
           * @return {?}
           */

        }, {
          key: "registerOnTouched",
          value: function registerOnTouched(fn) {
            this.onTouchedFn = fn;
          }
          /**
           * @param {?} isDisabled
           * @return {?}
           */

        }, {
          key: "setDisabledState",
          value: function setDisabledState(isDisabled) {
            this.isDisabled = isDisabled;

            if (this.instance) {
              if (this.isDisabled) {
                this.renderer.setProperty(this.instance._input, 'disabled', 'disabled');
              } else {
                this.renderer.removeAttribute(this.instance._input, 'disabled');
              }
            }
          }
          /**
           * @return {?}
           */

        }, {
          key: "inputChanged",
          value: function inputChanged() {
            var _this31 = this;

            var
            /** @type {?} */
            value = this.elm.nativeElement.value;

            if (this.convertModelValue && typeof value === 'string') {
              switch (this.mode) {
                case 'multiple':
                  var
                  /** @type {?} */
                  dates = value.split('; ').map(function (str) {
                    return _this31.instance.parseDate(str, _this31.instance.config.dateFormat, !_this31.instance.config.enableTime);
                  });
                  this.onChangeFn(dates);
                  break;

                case 'range':
                  var _value$split$map = value.split(this.instance.l10n.rangeSeparator).map(function (str) {
                    return _this31.instance.parseDate(str, _this31.instance.config.dateFormat, !_this31.instance.config.enableTime);
                  }),
                      _value$split$map2 = _slicedToArray(_value$split$map, 2),
                      from = _value$split$map2[0],
                      to = _value$split$map2[1];

                  this.onChangeFn({
                    from: from,
                    to: to
                  });
                  break;

                case 'single':
                default:
                  this.onChangeFn(this.instance.parseDate(value, this.instance.config.dateFormat, !this.instance.config.enableTime));
              }
            } else {
              this.onChangeFn(value);
            }
          }
        }]);

        return FlatpickrDirective;
      }();

      FlatpickrDirective.decorators = [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
          selector: '[mwlFlatpickr]',
          providers: [FLATPICKR_CONTROL_VALUE_ACCESSOR],
          host: {
            // tslint:disable-line use-host-property-decorator
            '(blur)': 'onTouchedFn()'
          }
        }]
      }];
      /** @nocollapse */

      FlatpickrDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
        }, {
          type: FlatpickrDefaults
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
        }];
      };

      FlatpickrDirective.propDecorators = {
        altFormat: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        altInput: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        altInputClass: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        allowInput: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        appendTo: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        ariaDateFormat: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        clickOpens: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        dateFormat: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        defaultHour: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        defaultMinute: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        disable: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        disableMobile: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        enable: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        enableTime: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        enableSeconds: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        formatDate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        hourIncrement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        inline: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        maxDate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        minDate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        minuteIncrement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        mode: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        nextArrow: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        noCalendar: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        now: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        parseDate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        prevArrow: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        shorthandCurrentMonth: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        showMonths: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        "static": [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        time24hr: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        weekNumbers: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        getWeek: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        wrap: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        plugins: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        locale: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        convertModelValue: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        flatpickrReady: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        flatpickrChange: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        flatpickrValueUpdate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        flatpickrOpen: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        flatpickrClose: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        flatpickrMonthChange: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        flatpickrYearChange: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        flatpickrDayCreate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        inputChanged: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
          args: ['input']
        }]
      };
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes} checked by tsc
       */

      var
      /** @type {?} */
      USER_DEFAULTS = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('flatpickr defaults');
      /**
       * @param {?} userDefaults
       * @return {?}
       */

      function defaultsFactory(userDefaults) {
        var
        /** @type {?} */
        defaults = new FlatpickrDefaults();
        Object.assign(defaults, userDefaults);
        return defaults;
      }

      var FlatpickrModule = /*#__PURE__*/function () {
        function FlatpickrModule() {
          _classCallCheck(this, FlatpickrModule);
        }

        _createClass(FlatpickrModule, null, [{
          key: "forRoot",

          /**
           * @param {?=} userDefaults
           * @return {?}
           */
          value: function forRoot() {
            var userDefaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            return {
              ngModule: FlatpickrModule,
              providers: [{
                provide: USER_DEFAULTS,
                useValue: userDefaults
              }, {
                provide: FlatpickrDefaults,
                useFactory: defaultsFactory,
                deps: [USER_DEFAULTS]
              }]
            };
          }
        }]);

        return FlatpickrModule;
      }();

      FlatpickrModule.decorators = [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
          declarations: [FlatpickrDirective],
          exports: [FlatpickrDirective]
        }]
      }];
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes} checked by tsc
       */
      //# sourceMappingURL=data:application/json;charset=utf-8;base64,

      /***/
    },

    /***/
    "nQ4q":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/setMonth/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function nQ4q(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setMonth;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../getDaysInMonth/index.js */
      "OuL/");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setMonth
       * @category Month Helpers
       * @summary Set the month to the given date.
       *
       * @description
       * Set the month to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} month - the month of the new date
       * @returns {Date} the new date with the month set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set February to 1 September 2014:
       * var result = setMonth(new Date(2014, 8, 1), 1)
       * //=> Sat Feb 01 2014 00:00:00
       */


      function setMonth(dirtyDate, dirtyMonth) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var month = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyMonth);
        var year = date.getFullYear();
        var day = date.getDate();
        var dateWithDesiredMonth = new Date(0);
        dateWithDesiredMonth.setFullYear(year, month, 15);
        dateWithDesiredMonth.setHours(0, 0, 0, 0);
        var daysInMonth = Object(_getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateWithDesiredMonth); // Set the last day of the new month
        // if the original date was the last day of the longer month

        date.setMonth(month, Math.min(day, daysInMonth));
        return date;
      }
      /***/

    },

    /***/
    "oADU":
    /*!********************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js ***!
      \********************************************************************/

    /*! exports provided: default */

    /***/
    function oADU(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfUTCWeekYear;
      });
      /* harmony import */


      var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../getUTCWeekYear/index.js */
      "Szzx");
      /* harmony import */


      var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../startOfUTCWeek/index.js */
      "1vjI");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg"); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(localeFirstWeekContainsDate);
        var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.firstWeekContainsDate);
        var year = Object(_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, dirtyOptions);
        var firstWeek = new Date(0);
        firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
        firstWeek.setUTCHours(0, 0, 0, 0);
        var date = Object(_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(firstWeek, dirtyOptions);
        return date;
      }
      /***/

    },

    /***/
    "oYTe":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/closestTo/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function oYTe(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return closestTo;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name closestTo
       * @category Common Helpers
       * @summary Return a date from the array closest to the given date.
       *
       * @description
       * Return a date from the array closest to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - Now, `closestTo` doesn't throw an exception
       *   when the second argument is not an array, and returns Invalid Date instead.
       *
       * @param {Date|Number} dateToCompare - the date to compare with
       * @param {Date[]|Number[]} datesArray - the array to search
       * @returns {Date} the date from the array closest to the given date
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?
       * var dateToCompare = new Date(2015, 8, 6)
       * var result = closestTo(dateToCompare, [
       *   new Date(2000, 0, 1),
       *   new Date(2030, 0, 1)
       * ])
       * //=> Tue Jan 01 2030 00:00:00
       */


      function closestTo(dirtyDateToCompare, dirtyDatesArray) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateToCompare = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateToCompare);

        if (isNaN(dateToCompare)) {
          return new Date(NaN);
        }

        var timeToCompare = dateToCompare.getTime();
        var datesArray; // `dirtyDatesArray` is undefined or null

        if (dirtyDatesArray == null) {
          datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
        } else if (typeof dirtyDatesArray.forEach === 'function') {
          datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array
        } else {
          datesArray = Array.prototype.slice.call(dirtyDatesArray);
        }

        var result;
        var minDistance;
        datesArray.forEach(function (dirtyDate) {
          var currentDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

          if (isNaN(currentDate)) {
            result = new Date(NaN);
            minDistance = NaN;
            return;
          }

          var distance = Math.abs(timeToCompare - currentDate.getTime());

          if (result == null || distance < minDistance) {
            result = currentDate;
            minDistance = distance;
          }
        });
        return result;
      }
      /***/

    },

    /***/
    "odh7":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/getUnixTime/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function odh7(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getUnixTime;
      });
      /* harmony import */


      var _getTime_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../getTime/index.js */
      "5wMr");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getUnixTime
       * @category Timestamp Helpers
       * @summary Get the seconds timestamp of the given date.
       *
       * @description
       * Get the seconds timestamp of the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the timestamp
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Get the timestamp of 29 February 2012 11:45:05 CET:
       * var result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))
       * //=> 1330512305
       */


      function getUnixTime(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Math.floor(Object(_getTime_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate) / 1000);
      }
      /***/

    },

    /***/
    "p+Ro":
    /*!***************************************************!*\
      !*** ./node_modules/date-fns/esm/isDate/index.js ***!
      \***************************************************/

    /*! exports provided: default */

    /***/
    function pRo(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isDate;
      });
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isDate
       * @category Common Helpers
       * @summary Is the given value a date?
       *
       * @description
       * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {*} value - the value to check
       * @returns {boolean} true if the given value is a date
       * @throws {TypeError} 1 arguments required
       *
       * @example
       * // For a valid date:
       * var result = isDate(new Date())
       * //=> true
       *
       * @example
       * // For an invalid date:
       * var result = isDate(new Date(NaN))
       * //=> true
       *
       * @example
       * // For some value:
       * var result = isDate('2014-02-31')
       * //=> false
       *
       * @example
       * // For an object:
       * var result = isDate({})
       * //=> false
       */


      function isDate(value) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
        return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';
      }
      /***/

    },

    /***/
    "p0jx":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/setWeekYear/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function p0jx(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setWeekYear;
      });
      /* harmony import */


      var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../differenceInCalendarDays/index.js */
      "gXqy");
      /* harmony import */


      var _startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfWeekYear/index.js */
      "qdtj");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setWeekYear
       * @category Week-Numbering Year Helpers
       * @summary Set the local week-numbering year to the given date.
       *
       * @description
       * Set the local week-numbering year to the given date,
       * saving the week number and the weekday number.
       * The exact calculation depends on the values of
       * `options.weekStartsOn` (which is the index of the first day of the week)
       * and `options.firstWeekContainsDate` (which is the day of January, which is always in
       * the first week of the week-numbering year)
       *
       * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} weekYear - the local week-numbering year of the new date
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
       * @returns {Date} the new date with the local week-numbering year set
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
       *
       * @example
       * // Set the local week-numbering year 2004 to 2 January 2010 with default options:
       * var result = setWeekYear(new Date(2010, 0, 2), 2004)
       * //=> Sat Jan 03 2004 00:00:00
       *
       * @example
       * // Set the local week-numbering year 2004 to 2 January 2010,
       * // if Monday is the first day of week
       * // and 4 January is always in the first week of the year:
       * var result = setWeekYear(new Date(2010, 0, 2), 2004, {
       *   weekStartsOn: 1,
       *   firstWeekContainsDate: 4
       * })
       * //=> Sat Jan 01 2005 00:00:00
       */


      function setWeekYear(dirtyDate, dirtyWeekYear, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(2, arguments);
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(localeFirstWeekContainsDate);
        var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(options.firstWeekContainsDate);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
        var weekYear = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dirtyWeekYear);
        var diff = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, Object(_startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, dirtyOptions));
        var firstWeek = new Date(0);
        firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);
        firstWeek.setHours(0, 0, 0, 0);
        date = Object(_startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(firstWeek, dirtyOptions);
        date.setDate(date.getDate() + diff);
        return date;
      }
      /***/

    },

    /***/
    "pIWV":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/subISOWeekYears/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function pIWV(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return subISOWeekYears;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addISOWeekYears/index.js */
      "GP2A");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name subISOWeekYears
       * @category ISO Week-Numbering Year Helpers
       * @summary Subtract the specified number of ISO week-numbering years from the given date.
       *
       * @description
       * Subtract the specified number of ISO week-numbering years from the given date.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `subISOYears` to `subISOWeekYears`.
       *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
       *   This change makes the name consistent with
       *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of ISO week-numbering years to be subtracted
       * @returns {Date} the new date with the ISO week-numbering years subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract 5 ISO week-numbering years from 1 September 2014:
       * var result = subISOWeekYears(new Date(2014, 8, 1), 5)
       * //=> Mon Aug 31 2009 00:00:00
       */


      function subISOWeekYears(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
      }
      /***/

    },

    /***/
    "pR7g":
    /*!***************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js ***!
      \***************************************************************/

    /*! exports provided: default */

    /***/
    function pR7g(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setUTCISOWeek;
      });
      /* harmony import */


      var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../getUTCISOWeek/index.js */
      "lgZR");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg"); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var isoWeek = Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyISOWeek);
        var diff = Object(_getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date) - isoWeek;
        date.setUTCDate(date.getUTCDate() - diff * 7);
        return date;
      }
      /***/

    },

    /***/
    "phiu":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/subMonths/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function phiu(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return subMonths;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addMonths/index.js */
      "dLU1");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name subMonths
       * @category Month Helpers
       * @summary Subtract the specified number of months from the given date.
       *
       * @description
       * Subtract the specified number of months from the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of months to be subtracted
       * @returns {Date} the new date with the months subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract 5 months from 1 February 2015:
       * var result = subMonths(new Date(2015, 1, 1), 5)
       * //=> Mon Sep 01 2014 00:00:00
       */


      function subMonths(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
      }
      /***/

    },

    /***/
    "piIK":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfDay/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function piIK(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfDay;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name endOfDay
       * @category Day Helpers
       * @summary Return the end of a day for the given date.
       *
       * @description
       * Return the end of a day for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the end of a day
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The end of a day for 2 September 2014 11:55:00:
       * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Tue Sep 02 2014 23:59:59.999
       */


      function endOfDay(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        date.setHours(23, 59, 59, 999);
        return date;
      }
      /***/

    },

    /***/
    "pl+E":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/setQuarter/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function plE(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setQuarter;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _setMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../setMonth/index.js */
      "nQ4q");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setQuarter
       * @category Quarter Helpers
       * @summary Set the year quarter to the given date.
       *
       * @description
       * Set the year quarter to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} quarter - the quarter of the new date
       * @returns {Date} the new date with the quarter set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set the 2nd quarter to 2 July 2014:
       * var result = setQuarter(new Date(2014, 6, 2), 2)
       * //=> Wed Apr 02 2014 00:00:00
       */


      function setQuarter(dirtyDate, dirtyQuarter) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var quarter = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyQuarter);
        var oldQuarter = Math.floor(date.getMonth() / 3) + 1;
        var diff = quarter - oldQuarter;
        return Object(_setMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, date.getMonth() + diff * 3);
      }
      /***/

    },

    /***/
    "pl0G":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/addMilliseconds/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function pl0G(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return addMilliseconds;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name addMilliseconds
       * @category Millisecond Helpers
       * @summary Add the specified number of milliseconds to the given date.
       *
       * @description
       * Add the specified number of milliseconds to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of milliseconds to be added
       * @returns {Date} the new date with the milliseconds added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
       * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
       * //=> Thu Jul 10 2014 12:45:30.750
       */


      function addMilliseconds(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var timestamp = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate).getTime();
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return new Date(timestamp + amount);
      }
      /***/

    },

    /***/
    "pvlY":
    /*!***********************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInCalendarMonths/index.js ***!
      \***********************************************************************/

    /*! exports provided: default */

    /***/
    function pvlY(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInCalendarMonths;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInCalendarMonths
       * @category Month Helpers
       * @summary Get the number of calendar months between the given dates.
       *
       * @description
       * Get the number of calendar months between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of calendar months
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many calendar months are between 31 January 2014 and 1 September 2014?
       * var result = differenceInCalendarMonths(
       *   new Date(2014, 8, 1),
       *   new Date(2014, 0, 31)
       * )
       * //=> 8
       */


      function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
        var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
        return yearDiff * 12 + monthDiff;
      }
      /***/

    },

    /***/
    "pxe6":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/getWeeksInMonth/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function pxe6(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getWeeksInMonth;
      });
      /* harmony import */


      var _differenceInCalendarWeeks_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../differenceInCalendarWeeks/index.js */
      "/Lp+");
      /* harmony import */


      var _lastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../lastDayOfMonth/index.js */
      "kKUf");
      /* harmony import */


      var _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../startOfMonth/index.js */
      "9ig3");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name getWeeksInMonth
       * @category Week Helpers
       * @summary Get the number of calendar weeks a month spans.
       *
       * @description
       * Get the number of calendar weeks the month in the given date spans.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @returns {Number} the number of calendar weeks
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // How many calendar weeks does February 2015 span?
       * var result = getWeeksInMonth(new Date(2015, 1, 8))
       * //=> 4
       *
       * @example
       * // If the week starts on Monday,
       * // how many calendar weeks does July 2017 span?
       * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })
       * //=> 6
       */


      function getWeeksInMonth(date, options) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        return Object(_differenceInCalendarWeeks_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_lastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date), Object(_startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date), options) + 1;
      }
      /***/

    },

    /***/
    "qVkf":
    /*!****************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInSeconds/index.js ***!
      \****************************************************************/

    /*! exports provided: default */

    /***/
    function qVkf(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInSeconds;
      });
      /* harmony import */


      var _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../differenceInMilliseconds/index.js */
      "Orh4");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInSeconds
       * @category Second Helpers
       * @summary Get the number of seconds between the given dates.
       *
       * @description
       * Get the number of seconds between the given dates.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of seconds
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many seconds are between
       * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?
       * var result = differenceInSeconds(
       *   new Date(2014, 6, 2, 12, 30, 20, 0),
       *   new Date(2014, 6, 2, 12, 30, 7, 999)
       * )
       * //=> 12
       */


      function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var diff = Object(_differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / 1000;
        return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
      }
      /***/

    },

    /***/
    "qdtj":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfWeekYear/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function qdtj(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfWeekYear;
      });
      /* harmony import */


      var _getWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../getWeekYear/index.js */
      "7gZZ");
      /* harmony import */


      var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfWeek/index.js */
      "aetl");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name startOfWeekYear
       * @category Week-Numbering Year Helpers
       * @summary Return the start of a local week-numbering year for the given date.
       *
       * @description
       * Return the start of a local week-numbering year.
       * The exact calculation depends on the values of
       * `options.weekStartsOn` (which is the index of the first day of the week)
       * and `options.firstWeekContainsDate` (which is the day of January, which is always in
       * the first week of the week-numbering year)
       *
       * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
       * @returns {Date} the start of a week-numbering year
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
       *
       * @example
       * // The start of an a week-numbering year for 2 July 2005 with default settings:
       * var result = startOfWeekYear(new Date(2005, 6, 2))
       * //=> Sun Dec 26 2004 00:00:00
       *
       * @example
       * // The start of a week-numbering year for 2 July 2005
       * // if Monday is the first day of week
       * // and 4 January is always in the first week of the year:
       * var result = startOfWeekYear(new Date(2005, 6, 2), {
       *   weekStartsOn: 1,
       *   firstWeekContainsDate: 4
       * })
       * //=> Mon Jan 03 2005 00:00:00
       */


      function startOfWeekYear(dirtyDate, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(localeFirstWeekContainsDate);
        var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(options.firstWeekContainsDate);
        var year = Object(_getWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, dirtyOptions);
        var firstWeek = new Date(0);
        firstWeek.setFullYear(year, 0, firstWeekContainsDate);
        firstWeek.setHours(0, 0, 0, 0);
        var date = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(firstWeek, dirtyOptions);
        return date;
      }
      /***/

    },

    /***/
    "qh+W":
    /*!*********************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfQuarter/index.js ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function qhW(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfQuarter;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name endOfQuarter
       * @category Quarter Helpers
       * @summary Return the end of a year quarter for the given date.
       *
       * @description
       * Return the end of a year quarter for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the end of a quarter
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The end of a quarter for 2 September 2014 11:55:00:
       * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Tue Sep 30 2014 23:59:59.999
       */


      function endOfQuarter(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var currentMonth = date.getMonth();
        var month = currentMonth - currentMonth % 3 + 3;
        date.setMonth(month, 0);
        date.setHours(23, 59, 59, 999);
        return date;
      }
      /***/

    },

    /***/
    "qzLx":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/isSameISOWeek/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function qzLx(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isSameISOWeek;
      });
      /* harmony import */


      var _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isSameWeek/index.js */
      "JO1+");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isSameISOWeek
       * @category ISO Week Helpers
       * @summary Are the given dates in the same ISO week?
       *
       * @description
       * Are the given dates in the same ISO week?
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to check
       * @param {Date|Number} dateRight - the second date to check
       * @returns {Boolean} the dates are in the same ISO week
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Are 1 September 2014 and 7 September 2014 in the same ISO week?
       * var result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))
       * //=> true
       */


      function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        return Object(_isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight, {
          weekStartsOn: 1
        });
      }
      /***/

    },

    /***/
    "r4sE":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/addWeeks/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function r4sE(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return addWeeks;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addDays/index.js */
      "9/EM");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name addWeeks
       * @category Week Helpers
       * @summary Add the specified number of weeks to the given date.
       *
       * @description
       * Add the specified number of week to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of weeks to be added
       * @returns {Date} the new date with the weeks added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 4 weeks to 1 September 2014:
       * var result = addWeeks(new Date(2014, 8, 1), 4)
       * //=> Mon Sep 29 2014 00:00:00
       */


      function addWeeks(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        var days = amount * 7;
        return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, days);
      }
      /***/

    },

    /***/
    "r5Jv":
    /*!*******************************************************!*\
      !*** ./node_modules/calendar-utils/calendar-utils.js ***!
      \*******************************************************/

    /*! exports provided: DAYS_OF_WEEK, SECONDS_IN_DAY, getEventsInPeriod, getWeekViewHeader, getDifferenceInDaysWithExclusions, getWeekView, getMonthView, EventValidationErrorMessage, validateEvents */

    /***/
    function r5Jv(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DAYS_OF_WEEK", function () {
        return DAYS_OF_WEEK;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SECONDS_IN_DAY", function () {
        return SECONDS_IN_DAY;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getEventsInPeriod", function () {
        return getEventsInPeriod;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getWeekViewHeader", function () {
        return getWeekViewHeader;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getDifferenceInDaysWithExclusions", function () {
        return getDifferenceInDaysWithExclusions;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getWeekView", function () {
        return getWeekView;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "getMonthView", function () {
        return getMonthView;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "EventValidationErrorMessage", function () {
        return EventValidationErrorMessage;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "validateEvents", function () {
        return validateEvents;
      });

      var __assign = undefined && undefined.__assign || function () {
        __assign = Object.assign || function (t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];

            for (var p in s) {
              if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
          }

          return t;
        };

        return __assign.apply(this, arguments);
      };

      var DAYS_OF_WEEK;

      (function (DAYS_OF_WEEK) {
        DAYS_OF_WEEK[DAYS_OF_WEEK["SUNDAY"] = 0] = "SUNDAY";
        DAYS_OF_WEEK[DAYS_OF_WEEK["MONDAY"] = 1] = "MONDAY";
        DAYS_OF_WEEK[DAYS_OF_WEEK["TUESDAY"] = 2] = "TUESDAY";
        DAYS_OF_WEEK[DAYS_OF_WEEK["WEDNESDAY"] = 3] = "WEDNESDAY";
        DAYS_OF_WEEK[DAYS_OF_WEEK["THURSDAY"] = 4] = "THURSDAY";
        DAYS_OF_WEEK[DAYS_OF_WEEK["FRIDAY"] = 5] = "FRIDAY";
        DAYS_OF_WEEK[DAYS_OF_WEEK["SATURDAY"] = 6] = "SATURDAY";
      })(DAYS_OF_WEEK || (DAYS_OF_WEEK = {}));

      var DEFAULT_WEEKEND_DAYS = [DAYS_OF_WEEK.SUNDAY, DAYS_OF_WEEK.SATURDAY];
      var DAYS_IN_WEEK = 7;
      var HOURS_IN_DAY = 24;
      var MINUTES_IN_HOUR = 60;
      var SECONDS_IN_DAY = 60 * 60 * 24;

      function getExcludedSeconds(dateAdapter, _a) {
        var startDate = _a.startDate,
            seconds = _a.seconds,
            excluded = _a.excluded,
            precision = _a.precision;

        if (excluded.length < 1) {
          return 0;
        }

        var addSeconds = dateAdapter.addSeconds,
            getDay = dateAdapter.getDay,
            addDays = dateAdapter.addDays;
        var endDate = addSeconds(startDate, seconds - 1);
        var dayStart = getDay(startDate);
        var dayEnd = getDay(endDate);
        var result = 0; // Calculated in seconds

        var current = startDate;

        var _loop_1 = function _loop_1() {
          var day = getDay(current);

          if (excluded.some(function (excludedDay) {
            return excludedDay === day;
          })) {
            result += calculateExcludedSeconds(dateAdapter, {
              dayStart: dayStart,
              dayEnd: dayEnd,
              day: day,
              precision: precision,
              startDate: startDate,
              endDate: endDate
            });
          }

          current = addDays(current, 1);
        };

        while (current < endDate) {
          _loop_1();
        }

        return result;
      }

      function calculateExcludedSeconds(dateAdapter, _a) {
        var precision = _a.precision,
            day = _a.day,
            dayStart = _a.dayStart,
            dayEnd = _a.dayEnd,
            startDate = _a.startDate,
            endDate = _a.endDate;
        var differenceInSeconds = dateAdapter.differenceInSeconds,
            endOfDay = dateAdapter.endOfDay,
            startOfDay = dateAdapter.startOfDay;

        if (precision === 'minutes') {
          if (day === dayStart) {
            return differenceInSeconds(endOfDay(startDate), startDate) + 1;
          } else if (day === dayEnd) {
            return differenceInSeconds(endDate, startOfDay(endDate)) + 1;
          }
        }

        return SECONDS_IN_DAY;
      }

      function getWeekViewEventSpan(dateAdapter, _a) {
        var event = _a.event,
            offset = _a.offset,
            startOfWeekDate = _a.startOfWeekDate,
            excluded = _a.excluded,
            precision = _a.precision,
            totalDaysInView = _a.totalDaysInView;
        var max = dateAdapter.max,
            differenceInSeconds = dateAdapter.differenceInSeconds,
            addDays = dateAdapter.addDays,
            endOfDay = dateAdapter.endOfDay,
            differenceInDays = dateAdapter.differenceInDays;
        var span = SECONDS_IN_DAY;
        var begin = max([event.start, startOfWeekDate]);

        if (event.end) {
          switch (precision) {
            case 'minutes':
              span = differenceInSeconds(event.end, begin);
              break;

            default:
              span = differenceInDays(addDays(endOfDay(event.end), 1), begin) * SECONDS_IN_DAY;
              break;
          }
        }

        var offsetSeconds = offset * SECONDS_IN_DAY;
        var totalLength = offsetSeconds + span; // the best way to detect if an event is outside the week-view
        // is to check if the total span beginning (from startOfWeekDay or event start) exceeds the total days in the view

        var secondsInView = totalDaysInView * SECONDS_IN_DAY;

        if (totalLength > secondsInView) {
          span = secondsInView - offsetSeconds;
        }

        span -= getExcludedSeconds(dateAdapter, {
          startDate: begin,
          seconds: span,
          excluded: excluded,
          precision: precision
        });
        return span / SECONDS_IN_DAY;
      }

      function getWeekViewEventOffset(dateAdapter, _a) {
        var event = _a.event,
            startOfWeekDate = _a.startOfWeek,
            excluded = _a.excluded,
            precision = _a.precision;
        var differenceInDays = dateAdapter.differenceInDays,
            startOfDay = dateAdapter.startOfDay,
            differenceInSeconds = dateAdapter.differenceInSeconds;

        if (event.start < startOfWeekDate) {
          return 0;
        }

        var offset = 0;

        switch (precision) {
          case 'days':
            offset = differenceInDays(startOfDay(event.start), startOfWeekDate) * SECONDS_IN_DAY;
            break;

          case 'minutes':
            offset = differenceInSeconds(event.start, startOfWeekDate);
            break;
        }

        offset -= getExcludedSeconds(dateAdapter, {
          startDate: startOfWeekDate,
          seconds: offset,
          excluded: excluded,
          precision: precision
        });
        return Math.abs(offset / SECONDS_IN_DAY);
      }

      function isEventIsPeriod(dateAdapter, _a) {
        var event = _a.event,
            periodStart = _a.periodStart,
            periodEnd = _a.periodEnd;
        var isSameSecond = dateAdapter.isSameSecond;
        var eventStart = event.start;
        var eventEnd = event.end || event.start;

        if (eventStart > periodStart && eventStart < periodEnd) {
          return true;
        }

        if (eventEnd > periodStart && eventEnd < periodEnd) {
          return true;
        }

        if (eventStart < periodStart && eventEnd > periodEnd) {
          return true;
        }

        if (isSameSecond(eventStart, periodStart) || isSameSecond(eventStart, periodEnd)) {
          return true;
        }

        if (isSameSecond(eventEnd, periodStart) || isSameSecond(eventEnd, periodEnd)) {
          return true;
        }

        return false;
      }

      function getEventsInPeriod(dateAdapter, _a) {
        var events = _a.events,
            periodStart = _a.periodStart,
            periodEnd = _a.periodEnd;
        return events.filter(function (event) {
          return isEventIsPeriod(dateAdapter, {
            event: event,
            periodStart: periodStart,
            periodEnd: periodEnd
          });
        });
      }

      function getWeekDay(dateAdapter, _a) {
        var date = _a.date,
            _b = _a.weekendDays,
            weekendDays = _b === void 0 ? DEFAULT_WEEKEND_DAYS : _b;
        var startOfDay = dateAdapter.startOfDay,
            isSameDay = dateAdapter.isSameDay,
            getDay = dateAdapter.getDay;
        var today = startOfDay(new Date());
        var day = getDay(date);
        return {
          date: date,
          day: day,
          isPast: date < today,
          isToday: isSameDay(date, today),
          isFuture: date > today,
          isWeekend: weekendDays.indexOf(day) > -1
        };
      }

      function getWeekViewHeader(dateAdapter, _a) {
        var viewDate = _a.viewDate,
            weekStartsOn = _a.weekStartsOn,
            _b = _a.excluded,
            excluded = _b === void 0 ? [] : _b,
            weekendDays = _a.weekendDays,
            _c = _a.viewStart,
            viewStart = _c === void 0 ? dateAdapter.startOfWeek(viewDate, {
          weekStartsOn: weekStartsOn
        }) : _c,
            _d = _a.viewEnd,
            viewEnd = _d === void 0 ? dateAdapter.addDays(viewStart, DAYS_IN_WEEK) : _d;
        var addDays = dateAdapter.addDays,
            getDay = dateAdapter.getDay;
        var days = [];
        var date = viewStart;

        while (date < viewEnd) {
          if (!excluded.some(function (e) {
            return getDay(date) === e;
          })) {
            days.push(getWeekDay(dateAdapter, {
              date: date,
              weekendDays: weekendDays
            }));
          }

          date = addDays(date, 1);
        }

        return days;
      }

      function getDifferenceInDaysWithExclusions(dateAdapter, _a) {
        var date1 = _a.date1,
            date2 = _a.date2,
            excluded = _a.excluded;
        var date = date1;
        var diff = 0;

        while (date < date2) {
          if (excluded.indexOf(dateAdapter.getDay(date)) === -1) {
            diff++;
          }

          date = dateAdapter.addDays(date, 1);
        }

        return diff;
      }

      function getAllDayWeekEvents(dateAdapter, _a) {
        var events = _a.events,
            excluded = _a.excluded,
            precision = _a.precision,
            absolutePositionedEvents = _a.absolutePositionedEvents,
            viewStart = _a.viewStart,
            viewEnd = _a.viewEnd,
            eventsInPeriod = _a.eventsInPeriod;
        var differenceInSeconds = dateAdapter.differenceInSeconds,
            differenceInDays = dateAdapter.differenceInDays;
        var maxRange = getDifferenceInDaysWithExclusions(dateAdapter, {
          date1: viewStart,
          date2: viewEnd,
          excluded: excluded
        });
        var totalDaysInView = differenceInDays(viewEnd, viewStart) + 1;
        var eventsMapped = eventsInPeriod.filter(function (event) {
          return event.allDay;
        }).map(function (event) {
          var offset = getWeekViewEventOffset(dateAdapter, {
            event: event,
            startOfWeek: viewStart,
            excluded: excluded,
            precision: precision
          });
          var span = getWeekViewEventSpan(dateAdapter, {
            event: event,
            offset: offset,
            startOfWeekDate: viewStart,
            excluded: excluded,
            precision: precision,
            totalDaysInView: totalDaysInView
          });
          return {
            event: event,
            offset: offset,
            span: span
          };
        }).filter(function (e) {
          return e.offset < maxRange;
        }).filter(function (e) {
          return e.span > 0;
        }).map(function (entry) {
          return {
            event: entry.event,
            offset: entry.offset,
            span: entry.span,
            startsBeforeWeek: entry.event.start < viewStart,
            endsAfterWeek: (entry.event.end || entry.event.start) > viewEnd
          };
        }).sort(function (itemA, itemB) {
          var startSecondsDiff = differenceInSeconds(itemA.event.start, itemB.event.start);

          if (startSecondsDiff === 0) {
            return differenceInSeconds(itemB.event.end || itemB.event.start, itemA.event.end || itemA.event.start);
          }

          return startSecondsDiff;
        });
        var allDayEventRows = [];
        var allocatedEvents = [];
        eventsMapped.forEach(function (event, index) {
          if (allocatedEvents.indexOf(event) === -1) {
            allocatedEvents.push(event);
            var rowSpan_1 = event.span + event.offset;
            var otherRowEvents = eventsMapped.slice(index + 1).filter(function (nextEvent) {
              if (nextEvent.offset >= rowSpan_1 && rowSpan_1 + nextEvent.span <= totalDaysInView && allocatedEvents.indexOf(nextEvent) === -1) {
                var nextEventOffset = nextEvent.offset - rowSpan_1;

                if (!absolutePositionedEvents) {
                  nextEvent.offset = nextEventOffset;
                }

                rowSpan_1 += nextEvent.span + nextEventOffset;
                allocatedEvents.push(nextEvent);
                return true;
              }
            });
            var weekEvents = [event].concat(otherRowEvents);
            var id = weekEvents.filter(function (weekEvent) {
              return weekEvent.event.id;
            }).map(function (weekEvent) {
              return weekEvent.event.id;
            }).join('-');
            allDayEventRows.push(__assign({
              row: weekEvents
            }, id ? {
              id: id
            } : {}));
          }
        });
        return allDayEventRows;
      }

      function getWeekViewHourGrid(dateAdapter, _a) {
        var events = _a.events,
            viewDate = _a.viewDate,
            hourSegments = _a.hourSegments,
            dayStart = _a.dayStart,
            dayEnd = _a.dayEnd,
            weekStartsOn = _a.weekStartsOn,
            excluded = _a.excluded,
            weekendDays = _a.weekendDays,
            segmentHeight = _a.segmentHeight,
            viewStart = _a.viewStart,
            viewEnd = _a.viewEnd;
        var dayViewHourGrid = getDayViewHourGrid(dateAdapter, {
          viewDate: viewDate,
          hourSegments: hourSegments,
          dayStart: dayStart,
          dayEnd: dayEnd
        });
        var weekDays = getWeekViewHeader(dateAdapter, {
          viewDate: viewDate,
          weekStartsOn: weekStartsOn,
          excluded: excluded,
          weekendDays: weekendDays,
          viewStart: viewStart,
          viewEnd: viewEnd
        });
        var setHours = dateAdapter.setHours,
            setMinutes = dateAdapter.setMinutes,
            getHours = dateAdapter.getHours,
            getMinutes = dateAdapter.getMinutes;
        return weekDays.map(function (day) {
          var dayView = getDayView(dateAdapter, {
            events: events,
            viewDate: day.date,
            hourSegments: hourSegments,
            dayStart: dayStart,
            dayEnd: dayEnd,
            segmentHeight: segmentHeight,
            eventWidth: 1
          });
          var hours = dayViewHourGrid.map(function (hour) {
            var segments = hour.segments.map(function (segment) {
              var date = setMinutes(setHours(day.date, getHours(segment.date)), getMinutes(segment.date));
              return __assign({}, segment, {
                date: date
              });
            });
            return __assign({}, hour, {
              segments: segments
            });
          });

          function getColumnCount(allEvents, prevOverlappingEvents) {
            var columnCount = Math.max.apply(Math, prevOverlappingEvents.map(function (iEvent) {
              return iEvent.left + 1;
            }));
            var nextOverlappingEvents = allEvents.filter(function (iEvent) {
              return iEvent.left >= columnCount;
            }).filter(function (iEvent) {
              return getOverLappingWeekViewEvents(prevOverlappingEvents, iEvent.top, iEvent.top + iEvent.height).length > 0;
            });

            if (nextOverlappingEvents.length > 0) {
              return getColumnCount(allEvents, nextOverlappingEvents);
            } else {
              return columnCount;
            }
          }

          var mappedEvents = dayView.events.map(function (event) {
            var columnCount = getColumnCount(dayView.events, getOverLappingWeekViewEvents(dayView.events, event.top, event.top + event.height));
            var width = 100 / columnCount;
            return __assign({}, event, {
              left: event.left * width,
              width: width
            });
          });
          return {
            hours: hours,
            date: day.date,
            events: mappedEvents.map(function (event) {
              var overLappingEvents = getOverLappingWeekViewEvents(mappedEvents.filter(function (otherEvent) {
                return otherEvent.left > event.left;
              }), event.top, event.top + event.height);

              if (overLappingEvents.length > 0) {
                return __assign({}, event, {
                  width: Math.min.apply(Math, overLappingEvents.map(function (otherEvent) {
                    return otherEvent.left;
                  })) - event.left
                });
              }

              return event;
            })
          };
        });
      }

      function getWeekView(dateAdapter, _a) {
        var _b = _a.events,
            events = _b === void 0 ? [] : _b,
            viewDate = _a.viewDate,
            weekStartsOn = _a.weekStartsOn,
            _c = _a.excluded,
            excluded = _c === void 0 ? [] : _c,
            _d = _a.precision,
            precision = _d === void 0 ? 'days' : _d,
            _e = _a.absolutePositionedEvents,
            absolutePositionedEvents = _e === void 0 ? false : _e,
            hourSegments = _a.hourSegments,
            dayStart = _a.dayStart,
            dayEnd = _a.dayEnd,
            weekendDays = _a.weekendDays,
            segmentHeight = _a.segmentHeight,
            _f = _a.viewStart,
            viewStart = _f === void 0 ? dateAdapter.startOfWeek(viewDate, {
          weekStartsOn: weekStartsOn
        }) : _f,
            _g = _a.viewEnd,
            viewEnd = _g === void 0 ? dateAdapter.endOfWeek(viewDate, {
          weekStartsOn: weekStartsOn
        }) : _g;

        if (!events) {
          events = [];
        }

        var startOfDay = dateAdapter.startOfDay,
            endOfDay = dateAdapter.endOfDay;
        viewStart = startOfDay(viewStart);
        viewEnd = endOfDay(viewEnd);
        var eventsInPeriod = getEventsInPeriod(dateAdapter, {
          events: events,
          periodStart: viewStart,
          periodEnd: viewEnd
        });
        var header = getWeekViewHeader(dateAdapter, {
          viewDate: viewDate,
          weekStartsOn: weekStartsOn,
          excluded: excluded,
          weekendDays: weekendDays,
          viewStart: viewStart,
          viewEnd: viewEnd
        });
        return {
          allDayEventRows: getAllDayWeekEvents(dateAdapter, {
            events: events,
            excluded: excluded,
            precision: precision,
            absolutePositionedEvents: absolutePositionedEvents,
            viewStart: viewStart,
            viewEnd: viewEnd,
            eventsInPeriod: eventsInPeriod
          }),
          period: {
            events: eventsInPeriod,
            start: header[0].date,
            end: endOfDay(header[header.length - 1].date)
          },
          hourColumns: getWeekViewHourGrid(dateAdapter, {
            events: events,
            viewDate: viewDate,
            hourSegments: hourSegments,
            dayStart: dayStart,
            dayEnd: dayEnd,
            weekStartsOn: weekStartsOn,
            excluded: excluded,
            weekendDays: weekendDays,
            segmentHeight: segmentHeight,
            viewStart: viewStart,
            viewEnd: viewEnd
          })
        };
      }

      function getMonthView(dateAdapter, _a) {
        var _b = _a.events,
            events = _b === void 0 ? [] : _b,
            viewDate = _a.viewDate,
            weekStartsOn = _a.weekStartsOn,
            _c = _a.excluded,
            excluded = _c === void 0 ? [] : _c,
            _d = _a.viewStart,
            viewStart = _d === void 0 ? dateAdapter.startOfMonth(viewDate) : _d,
            _e = _a.viewEnd,
            viewEnd = _e === void 0 ? dateAdapter.endOfMonth(viewDate) : _e,
            weekendDays = _a.weekendDays;

        if (!events) {
          events = [];
        }

        var startOfWeek = dateAdapter.startOfWeek,
            endOfWeek = dateAdapter.endOfWeek,
            differenceInDays = dateAdapter.differenceInDays,
            startOfDay = dateAdapter.startOfDay,
            addHours = dateAdapter.addHours,
            endOfDay = dateAdapter.endOfDay,
            isSameMonth = dateAdapter.isSameMonth,
            getDay = dateAdapter.getDay,
            getMonth = dateAdapter.getMonth;
        var start = startOfWeek(viewStart, {
          weekStartsOn: weekStartsOn
        });
        var end = endOfWeek(viewEnd, {
          weekStartsOn: weekStartsOn
        });
        var eventsInMonth = getEventsInPeriod(dateAdapter, {
          events: events,
          periodStart: start,
          periodEnd: end
        });
        var initialViewDays = [];
        var previousDate;

        var _loop_2 = function _loop_2(i) {
          // hacky fix for https://github.com/mattlewis92/angular-calendar/issues/173
          var date;

          if (previousDate) {
            date = startOfDay(addHours(previousDate, HOURS_IN_DAY));

            if (previousDate.getTime() === date.getTime()) {
              // DST change, so need to add 25 hours

              /* istanbul ignore next */
              date = startOfDay(addHours(previousDate, HOURS_IN_DAY + 1));
            }

            previousDate = date;
          } else {
            date = previousDate = start;
          }

          if (!excluded.some(function (e) {
            return getDay(date) === e;
          })) {
            var day = getWeekDay(dateAdapter, {
              date: date,
              weekendDays: weekendDays
            });
            var eventsInPeriod = getEventsInPeriod(dateAdapter, {
              events: eventsInMonth,
              periodStart: startOfDay(date),
              periodEnd: endOfDay(date)
            });
            day.inMonth = isSameMonth(date, viewDate);
            day.events = eventsInPeriod;
            day.badgeTotal = eventsInPeriod.length;
            initialViewDays.push(day);
          }
        };

        for (var i = 0; i < differenceInDays(end, start) + 1; i++) {
          _loop_2(i);
        }

        var days = [];
        var totalDaysVisibleInWeek = DAYS_IN_WEEK - excluded.length;

        if (totalDaysVisibleInWeek < DAYS_IN_WEEK) {
          for (var i = 0; i < initialViewDays.length; i += totalDaysVisibleInWeek) {
            var row = initialViewDays.slice(i, i + totalDaysVisibleInWeek);
            var isRowInMonth = row.some(function (day) {
              return getMonth(day.date) === getMonth(viewDate);
            });

            if (isRowInMonth) {
              days = days.concat(row);
            }
          }
        } else {
          days = initialViewDays;
        }

        var rows = Math.floor(days.length / totalDaysVisibleInWeek);
        var rowOffsets = [];

        for (var i = 0; i < rows; i++) {
          rowOffsets.push(i * totalDaysVisibleInWeek);
        }

        return {
          rowOffsets: rowOffsets,
          totalDaysVisibleInWeek: totalDaysVisibleInWeek,
          days: days,
          period: {
            start: days[0].date,
            end: endOfDay(days[days.length - 1].date),
            events: eventsInMonth
          }
        };
      }

      function getOverLappingWeekViewEvents(events, top, bottom) {
        return events.filter(function (previousEvent) {
          var previousEventTop = previousEvent.top;
          var previousEventBottom = previousEvent.top + previousEvent.height;

          if (top < previousEventBottom && previousEventBottom < bottom) {
            return true;
          } else if (top < previousEventTop && previousEventTop < bottom) {
            return true;
          } else if (previousEventTop <= top && bottom <= previousEventBottom) {
            return true;
          }

          return false;
        });
      }

      function getDayView(dateAdapter, _a) {
        var events = _a.events,
            viewDate = _a.viewDate,
            hourSegments = _a.hourSegments,
            dayStart = _a.dayStart,
            dayEnd = _a.dayEnd,
            eventWidth = _a.eventWidth,
            segmentHeight = _a.segmentHeight;
        var setMinutes = dateAdapter.setMinutes,
            setHours = dateAdapter.setHours,
            startOfDay = dateAdapter.startOfDay,
            startOfMinute = dateAdapter.startOfMinute,
            endOfDay = dateAdapter.endOfDay,
            differenceInMinutes = dateAdapter.differenceInMinutes;
        var startOfView = setMinutes(setHours(startOfDay(viewDate), sanitiseHours(dayStart.hour)), sanitiseMinutes(dayStart.minute));
        var endOfView = setMinutes(setHours(startOfMinute(endOfDay(viewDate)), sanitiseHours(dayEnd.hour)), sanitiseMinutes(dayEnd.minute));
        var previousDayEvents = [];
        var eventsInPeriod = getEventsInPeriod(dateAdapter, {
          events: events.filter(function (event) {
            return !event.allDay;
          }),
          periodStart: startOfView,
          periodEnd: endOfView
        });
        var dayViewEvents = eventsInPeriod.sort(function (eventA, eventB) {
          return eventA.start.valueOf() - eventB.start.valueOf();
        }).map(function (event) {
          var eventStart = event.start;
          var eventEnd = event.end || eventStart;
          var startsBeforeDay = eventStart < startOfView;
          var endsAfterDay = eventEnd > endOfView;
          var hourHeightModifier = hourSegments * segmentHeight / MINUTES_IN_HOUR;
          var top = 0;

          if (eventStart > startOfView) {
            // adjust the difference in minutes if the user's offset is different between the start of the day and the event (e.g. when going to or from DST)
            var eventOffset = eventStart.getTimezoneOffset();
            var startOffset = startOfView.getTimezoneOffset();
            var diff = startOffset - eventOffset;
            top += differenceInMinutes(eventStart, startOfView) + diff;
          }

          top *= hourHeightModifier;
          var startDate = startsBeforeDay ? startOfView : eventStart;
          var endDate = endsAfterDay ? endOfView : eventEnd;
          var height = differenceInMinutes(endDate, startDate);

          if (!event.end) {
            height = segmentHeight;
          } else {
            height *= hourHeightModifier;
          }

          var bottom = top + height;
          var overlappingPreviousEvents = getOverLappingWeekViewEvents(previousDayEvents, top, bottom);
          var left = 0;

          while (overlappingPreviousEvents.some(function (previousEvent) {
            return previousEvent.left === left;
          })) {
            left += eventWidth;
          }

          var dayEvent = {
            event: event,
            height: height,
            width: eventWidth,
            top: top,
            left: left,
            startsBeforeDay: startsBeforeDay,
            endsAfterDay: endsAfterDay
          };
          previousDayEvents.push(dayEvent);
          return dayEvent;
        });
        var width = Math.max.apply(Math, dayViewEvents.map(function (event) {
          return event.left + event.width;
        }));
        var allDayEvents = getEventsInPeriod(dateAdapter, {
          events: events.filter(function (event) {
            return event.allDay;
          }),
          periodStart: startOfDay(startOfView),
          periodEnd: endOfDay(endOfView)
        });
        return {
          events: dayViewEvents,
          width: width,
          allDayEvents: allDayEvents,
          period: {
            events: eventsInPeriod,
            start: startOfView,
            end: endOfView
          }
        };
      }

      function sanitiseHours(hours) {
        return Math.max(Math.min(23, hours), 0);
      }

      function sanitiseMinutes(minutes) {
        return Math.max(Math.min(59, minutes), 0);
      }

      function getDayViewHourGrid(dateAdapter, _a) {
        var viewDate = _a.viewDate,
            hourSegments = _a.hourSegments,
            dayStart = _a.dayStart,
            dayEnd = _a.dayEnd;
        var setMinutes = dateAdapter.setMinutes,
            setHours = dateAdapter.setHours,
            startOfDay = dateAdapter.startOfDay,
            startOfMinute = dateAdapter.startOfMinute,
            endOfDay = dateAdapter.endOfDay,
            addMinutes = dateAdapter.addMinutes,
            addHours = dateAdapter.addHours,
            addDays = dateAdapter.addDays;
        var hours = [];
        var startOfView = setMinutes(setHours(startOfDay(viewDate), sanitiseHours(dayStart.hour)), sanitiseMinutes(dayStart.minute));
        var endOfView = setMinutes(setHours(startOfMinute(endOfDay(viewDate)), sanitiseHours(dayEnd.hour)), sanitiseMinutes(dayEnd.minute));
        var segmentDuration = MINUTES_IN_HOUR / hourSegments;
        var startOfViewDay = startOfDay(viewDate);
        var endOfViewDay = endOfDay(viewDate);

        var dateAdjustment = function dateAdjustment(d) {
          return d;
        }; // this means that we change from or to DST on this day and that's going to cause problems so we bump the date


        if (startOfViewDay.getTimezoneOffset() !== endOfViewDay.getTimezoneOffset()) {
          startOfViewDay = addDays(startOfViewDay, 1);
          startOfView = addDays(startOfView, 1);
          endOfView = addDays(endOfView, 1);

          dateAdjustment = function dateAdjustment(d) {
            return addDays(d, -1);
          };
        }

        for (var i = 0; i < HOURS_IN_DAY; i++) {
          var segments = [];

          for (var j = 0; j < hourSegments; j++) {
            var date = addMinutes(addHours(startOfViewDay, i), j * segmentDuration);

            if (date >= startOfView && date < endOfView) {
              segments.push({
                date: dateAdjustment(date),
                displayDate: date,
                isStart: j === 0
              });
            }
          }

          if (segments.length > 0) {
            hours.push({
              segments: segments
            });
          }
        }

        return hours;
      }

      var EventValidationErrorMessage;

      (function (EventValidationErrorMessage) {
        EventValidationErrorMessage["NotArray"] = "Events must be an array";
        EventValidationErrorMessage["StartPropertyMissing"] = "Event is missing the `start` property";
        EventValidationErrorMessage["StartPropertyNotDate"] = "Event `start` property should be a javascript date object. Do `new Date(event.start)` to fix it.";
        EventValidationErrorMessage["EndPropertyNotDate"] = "Event `end` property should be a javascript date object. Do `new Date(event.end)` to fix it.";
        EventValidationErrorMessage["EndsBeforeStart"] = "Event `start` property occurs after the `end`";
      })(EventValidationErrorMessage || (EventValidationErrorMessage = {}));

      function validateEvents(events, log) {
        var isValid = true;

        function isError(msg, event) {
          log(msg, event);
          isValid = false;
        }

        if (!Array.isArray(events)) {
          log(EventValidationErrorMessage.NotArray, events);
          return false;
        }

        events.forEach(function (event) {
          if (!event.start) {
            isError(EventValidationErrorMessage.StartPropertyMissing, event);
          } else if (!(event.start instanceof Date)) {
            isError(EventValidationErrorMessage.StartPropertyNotDate, event);
          }

          if (event.end) {
            if (!(event.end instanceof Date)) {
              isError(EventValidationErrorMessage.EndPropertyNotDate, event);
            }

            if (event.start > event.end) {
              isError(EventValidationErrorMessage.EndsBeforeStart, event);
            }
          }
        });
        return isValid;
      } //# sourceMappingURL=calendar-utils.js.map

      /***/

    },

    /***/
    "rH8F":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/endOfHour/index.js ***!
      \******************************************************/

    /*! exports provided: default */

    /***/
    function rH8F(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return endOfHour;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name endOfHour
       * @category Hour Helpers
       * @summary Return the end of an hour for the given date.
       *
       * @description
       * Return the end of an hour for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the end of an hour
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The end of an hour for 2 September 2014 11:55:00:
       * var result = endOfHour(new Date(2014, 8, 2, 11, 55))
       * //=> Tue Sep 02 2014 11:59:59.999
       */


      function endOfHour(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        date.setMinutes(59, 59, 999);
        return date;
      }
      /***/

    },

    /***/
    "rJ3z":
    /*!******************************************************!*\
      !*** ./node_modules/dom-autoscroller/dist/bundle.js ***!
      \******************************************************/

    /*! no static exports found */

    /***/
    function rJ3z(module, exports, __webpack_require__) {
      "use strict";

      function _interopDefault(ex) {
        return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
      }

      var typeFunc = __webpack_require__(
      /*! type-func */
      "OJSY");

      var animationFramePolyfill = __webpack_require__(
      /*! animation-frame-polyfill */
      "c/fO");

      var domSet = __webpack_require__(
      /*! dom-set */
      "VJNc");

      var domPlane = __webpack_require__(
      /*! dom-plane */
      "PTRy");

      var mousemoveDispatcher = _interopDefault(__webpack_require__(
      /*! dom-mousemove-dispatcher */
      "uzHG"));

      function AutoScroller(elements, options) {
        if (options === void 0) options = {};
        var self = this;
        var maxSpeed = 4,
            scrolling = false;
        this.margin = options.margin || -1; //this.scrolling = false;

        this.scrollWhenOutside = options.scrollWhenOutside || false;
        var point = {},
            pointCB = domPlane.createPointCB(point),
            dispatcher = mousemoveDispatcher(),
            down = false;
        window.addEventListener('mousemove', pointCB, false);
        window.addEventListener('touchmove', pointCB, false);

        if (!isNaN(options.maxSpeed)) {
          maxSpeed = options.maxSpeed;
        }

        this.autoScroll = typeFunc["boolean"](options.autoScroll);
        this.syncMove = typeFunc["boolean"](options.syncMove, false);

        this.destroy = function (forceCleanAnimation) {
          window.removeEventListener('mousemove', pointCB, false);
          window.removeEventListener('touchmove', pointCB, false);
          window.removeEventListener('mousedown', onDown, false);
          window.removeEventListener('touchstart', onDown, false);
          window.removeEventListener('mouseup', onUp, false);
          window.removeEventListener('touchend', onUp, false);
          window.removeEventListener('pointerup', onUp, false);
          window.removeEventListener('mouseleave', onMouseOut, false);
          window.removeEventListener('mousemove', onMove, false);
          window.removeEventListener('touchmove', onMove, false);
          window.removeEventListener('scroll', setScroll, true);
          elements = [];

          if (forceCleanAnimation) {
            cleanAnimation();
          }
        };

        this.add = function () {
          var element = [],
              len = arguments.length;

          while (len--) {
            element[len] = arguments[len];
          }

          domSet.addElements.apply(void 0, [elements].concat(element));
          return this;
        };

        this.remove = function () {
          var element = [],
              len = arguments.length;

          while (len--) {
            element[len] = arguments[len];
          }

          return domSet.removeElements.apply(void 0, [elements].concat(element));
        };

        var hasWindow = null,
            windowAnimationFrame;

        if (Object.prototype.toString.call(elements) !== '[object Array]') {
          elements = [elements];
        }

        (function (temp) {
          elements = [];
          temp.forEach(function (element) {
            if (element === window) {
              hasWindow = window;
            } else {
              self.add(element);
            }
          });
        })(elements);

        Object.defineProperties(this, {
          down: {
            get: function get() {
              return down;
            }
          },
          maxSpeed: {
            get: function get() {
              return maxSpeed;
            }
          },
          point: {
            get: function get() {
              return point;
            }
          },
          scrolling: {
            get: function get() {
              return scrolling;
            }
          }
        });
        var n = 0,
            current = null,
            animationFrame;
        window.addEventListener('mousedown', onDown, false);
        window.addEventListener('touchstart', onDown, false);
        window.addEventListener('mouseup', onUp, false);
        window.addEventListener('touchend', onUp, false);
        /*
        IE does not trigger mouseup event when scrolling.
        It is a known issue that Microsoft won't fix.
        https://connect.microsoft.com/IE/feedback/details/783058/scrollbar-trigger-mousedown-but-not-mouseup
        IE supports pointer events instead
        */

        window.addEventListener('pointerup', onUp, false);
        window.addEventListener('mousemove', onMove, false);
        window.addEventListener('touchmove', onMove, false);
        window.addEventListener('mouseleave', onMouseOut, false);
        window.addEventListener('scroll', setScroll, true);

        function setScroll(e) {
          for (var i = 0; i < elements.length; i++) {
            if (elements[i] === e.target) {
              scrolling = true;
              break;
            }
          }

          if (scrolling) {
            animationFramePolyfill.requestAnimationFrame(function () {
              return scrolling = false;
            });
          }
        }

        function onDown() {
          down = true;
        }

        function onUp() {
          down = false;
          cleanAnimation();
        }

        function cleanAnimation() {
          animationFramePolyfill.cancelAnimationFrame(animationFrame);
          animationFramePolyfill.cancelAnimationFrame(windowAnimationFrame);
        }

        function onMouseOut() {
          down = false;
        }

        function getTarget(target) {
          if (!target) {
            return null;
          }

          if (current === target) {
            return target;
          }

          if (domSet.hasElement(elements, target)) {
            return target;
          }

          while (target = target.parentNode) {
            if (domSet.hasElement(elements, target)) {
              return target;
            }
          }

          return null;
        }

        function getElementUnderPoint() {
          var underPoint = null;

          for (var i = 0; i < elements.length; i++) {
            if (inside(point, elements[i])) {
              underPoint = elements[i];
            }
          }

          return underPoint;
        }

        function onMove(event) {
          if (!self.autoScroll()) {
            return;
          }

          if (event['dispatched']) {
            return;
          }

          var target = event.target,
              body = document.body;

          if (current && !inside(point, current)) {
            if (!self.scrollWhenOutside) {
              current = null;
            }
          }

          if (target && target.parentNode === body) {
            //The special condition to improve speed.
            target = getElementUnderPoint();
          } else {
            target = getTarget(target);

            if (!target) {
              target = getElementUnderPoint();
            }
          }

          if (target && target !== current) {
            current = target;
          }

          if (hasWindow) {
            animationFramePolyfill.cancelAnimationFrame(windowAnimationFrame);
            windowAnimationFrame = animationFramePolyfill.requestAnimationFrame(scrollWindow);
          }

          if (!current) {
            return;
          }

          animationFramePolyfill.cancelAnimationFrame(animationFrame);
          animationFrame = animationFramePolyfill.requestAnimationFrame(scrollTick);
        }

        function scrollWindow() {
          autoScroll(hasWindow);
          animationFramePolyfill.cancelAnimationFrame(windowAnimationFrame);
          windowAnimationFrame = animationFramePolyfill.requestAnimationFrame(scrollWindow);
        }

        function scrollTick() {
          if (!current) {
            return;
          }

          autoScroll(current);
          animationFramePolyfill.cancelAnimationFrame(animationFrame);
          animationFrame = animationFramePolyfill.requestAnimationFrame(scrollTick);
        }

        function autoScroll(el) {
          var rect = domPlane.getClientRect(el),
              scrollx,
              scrolly;

          if (point.x < rect.left + self.margin) {
            scrollx = Math.floor(Math.max(-1, (point.x - rect.left) / self.margin - 1) * self.maxSpeed);
          } else if (point.x > rect.right - self.margin) {
            scrollx = Math.ceil(Math.min(1, (point.x - rect.right) / self.margin + 1) * self.maxSpeed);
          } else {
            scrollx = 0;
          }

          if (point.y < rect.top + self.margin) {
            scrolly = Math.floor(Math.max(-1, (point.y - rect.top) / self.margin - 1) * self.maxSpeed);
          } else if (point.y > rect.bottom - self.margin) {
            scrolly = Math.ceil(Math.min(1, (point.y - rect.bottom) / self.margin + 1) * self.maxSpeed);
          } else {
            scrolly = 0;
          }

          if (self.syncMove()) {
            /*
            Notes about mousemove event dispatch.
            screen(X/Y) should need to be updated.
            Some other properties might need to be set.
            Keep the syncMove option default false until all inconsistencies are taken care of.
            */
            dispatcher.dispatch(el, {
              pageX: point.pageX + scrollx,
              pageY: point.pageY + scrolly,
              clientX: point.x + scrollx,
              clientY: point.y + scrolly
            });
          }

          setTimeout(function () {
            if (scrolly) {
              scrollY(el, scrolly);
            }

            if (scrollx) {
              scrollX(el, scrollx);
            }
          });
        }

        function scrollY(el, amount) {
          if (el === window) {
            window.scrollTo(el.pageXOffset, el.pageYOffset + amount);
          } else {
            el.scrollTop += amount;
          }
        }

        function scrollX(el, amount) {
          if (el === window) {
            window.scrollTo(el.pageXOffset + amount, el.pageYOffset);
          } else {
            el.scrollLeft += amount;
          }
        }
      }

      function AutoScrollerFactory(element, options) {
        return new AutoScroller(element, options);
      }

      function inside(point, el, rect) {
        if (!rect) {
          return domPlane.pointInside(point, el);
        } else {
          return point.y > rect.top && point.y < rect.bottom && point.x > rect.left && point.x < rect.right;
        }
      }
      /*
      git remote add origin https://github.com/hollowdoor/dom_autoscroller.git
      git push -u origin master
      */


      module.exports = AutoScrollerFactory; //# sourceMappingURL=bundle.js.map

      /***/
    },

    /***/
    "s+wp":
    /*!*********************************************************!*\
      !*** ./node_modules/date-fns/esm/isSameMinute/index.js ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function sWp(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isSameMinute;
      });
      /* harmony import */


      var _startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfMinute/index.js */
      "0LOL");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isSameMinute
       * @category Minute Helpers
       * @summary Are the given dates in the same minute?
       *
       * @description
       * Are the given dates in the same minute?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to check
       * @param {Date|Number} dateRight - the second date to check
       * @returns {Boolean} the dates are in the same minute
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15
       * // in the same minute?
       * var result = isSameMinute(
       *   new Date(2014, 8, 4, 6, 30),
       *   new Date(2014, 8, 4, 6, 30, 15)
       * )
       * //=> true
       */


      function isSameMinute(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeftStartOfMinute = Object(_startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRightStartOfMinute = Object(_startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();
      }
      /***/

    },

    /***/
    "sBI4":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/getISOWeek/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function sBI4(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getISOWeek;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../startOfISOWeek/index.js */
      "1dmy");
      /* harmony import */


      var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../startOfISOWeekYear/index.js */
      "0f5V");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_WEEK = 604800000;
      /**
       * @name getISOWeek
       * @category ISO Week Helpers
       * @summary Get the ISO week of the given date.
       *
       * @description
       * Get the ISO week of the given date.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the given date
       * @returns {Number} the ISO week
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Which week of the ISO-week numbering year is 2 January 2005?
       * var result = getISOWeek(new Date(2005, 0, 2))
       * //=> 53
       */

      function getISOWeek(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var diff = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date).getTime() - Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date).getTime(); // Round the number of days to the nearest integer
        // because the number of milliseconds in a week is not constant
        // (e.g. it's different in the week of the daylight saving time clock shift)

        return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
      }
      /***/

    },

    /***/
    "sWYD":
    /*!***************************************************!*\
      !*** ./node_modules/date-fns/esm/format/index.js ***!
      \***************************************************/

    /*! exports provided: default */

    /***/
    function sWYD(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return format;
      });
      /* harmony import */


      var _isValid_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isValid/index.js */
      "Se/U");
      /* harmony import */


      var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../locale/en-US/index.js */
      "iSMj");
      /* harmony import */


      var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../subMilliseconds/index.js */
      "g9KO");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_format_formatters_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../_lib/format/formatters/index.js */
      "DG9o");
      /* harmony import */


      var _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../_lib/format/longFormatters/index.js */
      "Ib5w");
      /* harmony import */


      var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
      "JCDJ");
      /* harmony import */


      var _lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ../_lib/protectedTokens/index.js */
      "3REe");
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg"); // This RegExp consists of three parts separated by `|`:
      // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
      //   (one of the certain letters followed by `o`)
      // - (\w)\1* matches any sequences of the same letter
      // - '' matches two quote characters in a row
      // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
      //   except a single quote symbol, which ends the sequence.
      //   Two quote characters do not end the sequence.
      //   If there is no matching single quote
      //   then the sequence will continue until the end of the string.
      // - . matches any single character unmatched by previous parts of the RegExps


      var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
      // sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

      var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
      var escapedStringRegExp = /^'([^]*?)'?$/;
      var doubleQuoteRegExp = /''/g;
      var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
      /**
       * @name format
       * @category Common Helpers
       * @summary Format the date.
       *
       * @description
       * Return the formatted date string in the given format. The result may vary by locale.
       *
       * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
       * > See: https://git.io/fxCyr
       *
       * The characters wrapped between two single quotes characters (') are escaped.
       * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
       * (see the last example)
       *
       * Format of the string is based on Unicode Technical Standard #35:
       * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
       * with a few additions (see note 7 below the table).
       *
       * Accepted patterns:
       * | Unit                            | Pattern | Result examples                   | Notes |
       * |---------------------------------|---------|-----------------------------------|-------|
       * | Era                             | G..GGG  | AD, BC                            |       |
       * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
       * |                                 | GGGGG   | A, B                              |       |
       * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
       * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
       * |                                 | yy      | 44, 01, 00, 17                    | 5     |
       * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
       * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
       * |                                 | yyyyy   | ...                               | 3,5   |
       * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
       * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
       * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
       * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
       * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
       * |                                 | YYYYY   | ...                               | 3,5   |
       * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
       * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
       * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
       * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
       * |                                 | RRRRR   | ...                               | 3,5,7 |
       * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
       * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
       * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
       * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
       * |                                 | uuuuu   | ...                               | 3,5   |
       * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
       * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
       * |                                 | QQ      | 01, 02, 03, 04                    |       |
       * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
       * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
       * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
       * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
       * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
       * |                                 | qq      | 01, 02, 03, 04                    |       |
       * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
       * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
       * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
       * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
       * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
       * |                                 | MM      | 01, 02, ..., 12                   |       |
       * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
       * |                                 | MMMM    | January, February, ..., December  | 2     |
       * |                                 | MMMMM   | J, F, ..., D                      |       |
       * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
       * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
       * |                                 | LL      | 01, 02, ..., 12                   |       |
       * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
       * |                                 | LLLL    | January, February, ..., December  | 2     |
       * |                                 | LLLLL   | J, F, ..., D                      |       |
       * | Local week of year              | w       | 1, 2, ..., 53                     |       |
       * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
       * |                                 | ww      | 01, 02, ..., 53                   |       |
       * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
       * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
       * |                                 | II      | 01, 02, ..., 53                   | 7     |
       * | Day of month                    | d       | 1, 2, ..., 31                     |       |
       * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
       * |                                 | dd      | 01, 02, ..., 31                   |       |
       * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
       * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
       * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
       * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
       * |                                 | DDDD    | ...                               | 3     |
       * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
       * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
       * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
       * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
       * |                                 | ii      | 01, 02, ..., 07                   | 7     |
       * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |
       * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
       * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
       * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |
       * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
       * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
       * |                                 | ee      | 02, 03, ..., 01                   |       |
       * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |
       * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
       * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
       * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
       * |                                 | cc      | 02, 03, ..., 01                   |       |
       * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |
       * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
       * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | AM, PM                          | a..aaa  | AM, PM                            |       |
       * |                                 | aaaa    | a.m., p.m.                        | 2     |
       * |                                 | aaaaa   | a, p                              |       |
       * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |
       * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
       * |                                 | bbbbb   | a, p, n, mi                       |       |
       * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
       * |                                 | BBBB    | at night, in the morning, ...     | 2     |
       * |                                 | BBBBB   | at night, in the morning, ...     |       |
       * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
       * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
       * |                                 | hh      | 01, 02, ..., 11, 12               |       |
       * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
       * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
       * |                                 | HH      | 00, 01, 02, ..., 23               |       |
       * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
       * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
       * |                                 | KK      | 1, 2, ..., 11, 0                  |       |
       * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
       * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
       * |                                 | kk      | 24, 01, 02, ..., 23               |       |
       * | Minute                          | m       | 0, 1, ..., 59                     |       |
       * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
       * |                                 | mm      | 00, 01, ..., 59                   |       |
       * | Second                          | s       | 0, 1, ..., 59                     |       |
       * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
       * |                                 | ss      | 00, 01, ..., 59                   |       |
       * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
       * |                                 | SS      | 00, 01, ..., 99                   |       |
       * |                                 | SSS     | 000, 0001, ..., 999               |       |
       * |                                 | SSSS    | ...                               | 3     |
       * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
       * |                                 | XX      | -0800, +0530, Z                   |       |
       * |                                 | XXX     | -08:00, +05:30, Z                 |       |
       * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
       * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
       * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
       * |                                 | xx      | -0800, +0530, +0000               |       |
       * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
       * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
       * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
       * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
       * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
       * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
       * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
       * | Seconds timestamp               | t       | 512969520                         | 7     |
       * |                                 | tt      | ...                               | 3,7   |
       * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
       * |                                 | TT      | ...                               | 3,7   |
       * | Long localized date             | P       | 05/29/1453                        | 7     |
       * |                                 | PP      | May 29, 1453                      | 7     |
       * |                                 | PPP     | May 29th, 1453                    | 7     |
       * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |
       * | Long localized time             | p       | 12:00 AM                          | 7     |
       * |                                 | pp      | 12:00:00 AM                       | 7     |
       * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
       * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
       * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |
       * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |
       * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |
       * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |
       * Notes:
       * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
       *    are the same as "stand-alone" units, but are different in some languages.
       *    "Formatting" units are declined according to the rules of the language
       *    in the context of a date. "Stand-alone" units are always nominative singular:
       *
       *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
       *
       *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
       *
       * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
       *    the single quote characters (see below).
       *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
       *    the output will be the same as default pattern for this unit, usually
       *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
       *    are marked with "2" in the last column of the table.
       *
       *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
       *
       *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
       *
       *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
       *
       *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
       *
       *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
       *
       * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
       *    The output will be padded with zeros to match the length of the pattern.
       *
       *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
       *
       * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
       *    These tokens represent the shortest form of the quarter.
       *
       * 5. The main difference between `y` and `u` patterns are B.C. years:
       *
       *    | Year | `y` | `u` |
       *    |------|-----|-----|
       *    | AC 1 |   1 |   1 |
       *    | BC 1 |   1 |   0 |
       *    | BC 2 |   2 |  -1 |
       *
       *    Also `yy` always returns the last two digits of a year,
       *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
       *
       *    | Year | `yy` | `uu` |
       *    |------|------|------|
       *    | 1    |   01 |   01 |
       *    | 14   |   14 |   14 |
       *    | 376  |   76 |  376 |
       *    | 1453 |   53 | 1453 |
       *
       *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
       *    except local week-numbering years are dependent on `options.weekStartsOn`
       *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
       *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
       *
       * 6. Specific non-location timezones are currently unavailable in `date-fns`,
       *    so right now these tokens fall back to GMT timezones.
       *
       * 7. These patterns are not in the Unicode Technical Standard #35:
       *    - `i`: ISO day of week
       *    - `I`: ISO week of year
       *    - `R`: ISO week-numbering year
       *    - `t`: seconds timestamp
       *    - `T`: milliseconds timestamp
       *    - `o`: ordinal number modifier
       *    - `P`: long localized date
       *    - `p`: long localized time
       *
       * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
       *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
       *
       * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
       *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The second argument is now required for the sake of explicitness.
       *
       *   ```javascript
       *   // Before v2.0.0
       *   format(new Date(2016, 0, 1))
       *
       *   // v2.0.0 onward
       *   format(new Date(2016, 0, 1), "yyyy-MM-dd'T'HH:mm:ss.SSSxxx")
       *   ```
       *
       * - New format string API for `format` function
       *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).
       *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.
       *
       * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.
       *
       * @param {Date|Number} date - the original date
       * @param {String} format - the string of tokens
       * @param {Object} [options] - an object with options.
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
       * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
       *   see: https://git.io/fxCyr
       * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
       *   see: https://git.io/fxCyr
       * @returns {String} the formatted date string
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `date` must not be Invalid Date
       * @throws {RangeError} `options.locale` must contain `localize` property
       * @throws {RangeError} `options.locale` must contain `formatLong` property
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
       * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr
       * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr
       * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr
       * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr
       * @throws {RangeError} format string contains an unescaped latin alphabet character
       *
       * @example
       * // Represent 11 February 2014 in middle-endian format:
       * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
       * //=> '02/11/2014'
       *
       * @example
       * // Represent 2 July 2014 in Esperanto:
       * import { eoLocale } from 'date-fns/locale/eo'
       * var result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
       *   locale: eoLocale
       * })
       * //=> '2-a de julio 2014'
       *
       * @example
       * // Escape string by single quote characters:
       * var result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
       * //=> "3 o'clock"
       */

      function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_9__["default"])(2, arguments);
        var formatStr = String(dirtyFormatStr);
        var options = dirtyOptions || {};
        var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_1__["default"];
        var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(localeFirstWeekContainsDate);
        var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

        if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
          throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
        }

        var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(localeWeekStartsOn);
        var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
        }

        if (!locale.localize) {
          throw new RangeError('locale must contain localize property');
        }

        if (!locale.formatLong) {
          throw new RangeError('locale must contain formatLong property');
        }

        var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dirtyDate);

        if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(originalDate)) {
          throw new RangeError('Invalid time value');
        } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
        // This ensures that when UTC functions will be implemented, locales will be compatible with them.
        // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376


        var timezoneOffset = Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(originalDate);
        var utcDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate, timezoneOffset);
        var formatterOptions = {
          firstWeekContainsDate: firstWeekContainsDate,
          weekStartsOn: weekStartsOn,
          locale: locale,
          _originalDate: originalDate
        };
        var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {
          var firstCharacter = substring[0];

          if (firstCharacter === 'p' || firstCharacter === 'P') {
            var longFormatter = _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_5__["default"][firstCharacter];
            return longFormatter(substring, locale.formatLong, formatterOptions);
          }

          return substring;
        }).join('').match(formattingTokensRegExp).map(function (substring) {
          // Replace two single quote characters with one single quote character
          if (substring === "''") {
            return "'";
          }

          var firstCharacter = substring[0];

          if (firstCharacter === "'") {
            return cleanEscapedString(substring);
          }

          var formatter = _lib_format_formatters_index_js__WEBPACK_IMPORTED_MODULE_4__["default"][firstCharacter];

          if (formatter) {
            if (!options.useAdditionalWeekYearTokens && Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__["isProtectedWeekYearToken"])(substring)) {
              Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__["throwProtectedError"])(substring);
            }

            if (!options.useAdditionalDayOfYearTokens && Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__["isProtectedDayOfYearToken"])(substring)) {
              Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__["throwProtectedError"])(substring);
            }

            return formatter(utcDate, substring, locale.localize, formatterOptions);
          }

          if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
            throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
          }

          return substring;
        }).join('');
        return result;
      }

      function cleanEscapedString(input) {
        return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
      }
      /***/

    },

    /***/
    "sdC+":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/subYears/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function sdC(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return subYears;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addYears/index.js */
      "zbbA");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name subYears
       * @category Year Helpers
       * @summary Subtract the specified number of years from the given date.
       *
       * @description
       * Subtract the specified number of years from the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of years to be subtracted
       * @returns {Date} the new date with the years subtracted
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Subtract 5 years from 1 September 2014:
       * var result = subYears(new Date(2014, 8, 1), 5)
       * //=> Tue Sep 01 2009 00:00:00
       */


      function subYears(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
      }
      /***/

    },

    /***/
    "tSIP":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/setDate/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function tSIP(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setDate;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setDate
       * @category Day Helpers
       * @summary Set the day of the month to the given date.
       *
       * @description
       * Set the day of the month to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} dayOfMonth - the day of the month of the new date
       * @returns {Date} the new date with the day of the month set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set the 30th day of the month to 1 September 2014:
       * var result = setDate(new Date(2014, 8, 1), 30)
       * //=> Tue Sep 30 2014 00:00:00
       */


      function setDate(dirtyDate, dirtyDayOfMonth) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var dayOfMonth = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDayOfMonth);
        date.setDate(dayOfMonth);
        return date;
      }
      /***/

    },

    /***/
    "tfX3":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/addQuarters/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function tfX3(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return addQuarters;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addMonths/index.js */
      "dLU1");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name addQuarters
       * @category Quarter Helpers
       * @summary Add the specified number of year quarters to the given date.
       *
       * @description
       * Add the specified number of year quarters to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of quarters to be added
       * @returns {Date} the new date with the quarters added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 1 quarter to 1 September 2014:
       * var result = addQuarters(new Date(2014, 8, 1), 1)
       * //=> Mon Dec 01 2014 00:00:00
       */


      function addQuarters(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        var months = amount * 3;
        return Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, months);
      }
      /***/

    },

    /***/
    "tiw6":
    /*!**************************************************************************!*\
      !*** ./node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js ***!
      \**************************************************************************/

    /*! exports provided: default */

    /***/
    function tiw6(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return getOverlappingDaysInIntervals;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");

      var MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;
      /**
       * @name getOverlappingDaysInIntervals
       * @category Interval Helpers
       * @summary Get the number of days that overlap in two time intervals
       *
       * @description
       * Get the number of days that overlap in two time intervals
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.
       *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
       *
       *   ```
       *   2.1.3
       *   time interval
       *   part of the time axis limited by two instants
       *   ```
       *
       *   Also, this function now accepts an object with `start` and `end` properties
       *   instead of two arguments as an interval.
       *   This function now throws `RangeError` if the start of the interval is after its end
       *   or if any date in the interval is `Invalid Date`.
       *
       *   ```javascript
       *   // Before v2.0.0
       *
       *   getOverlappingDaysInRanges(
       *     new Date(2014, 0, 10), new Date(2014, 0, 20),
       *     new Date(2014, 0, 17), new Date(2014, 0, 21)
       *   )
       *
       *   // v2.0.0 onward
       *
       *   getOverlappingDaysInIntervals(
       *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
       *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
       *   )
       *   ```
       *
       * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}
       * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}
       * @returns {Number} the number of days that overlap in two time intervals
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} The start of an interval cannot be after its end
       * @throws {RangeError} Date in interval cannot be `Invalid Date`
       *
       * @example
       * // For overlapping time intervals adds 1 for each started overlapping day:
       * getOverlappingDaysInIntervals(
       *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
       *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
       * )
       * //=> 3
       *
       * @example
       * // For non-overlapping time intervals returns 0:
       * getOverlappingDaysInIntervals(
       *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
       *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }
       * )
       * //=> 0
       */

      function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var intervalLeft = dirtyIntervalLeft || {};
        var intervalRight = dirtyIntervalRight || {};
        var leftStartTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalLeft.start).getTime();
        var leftEndTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalLeft.end).getTime();
        var rightStartTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalRight.start).getTime();
        var rightEndTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

        if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {
          throw new RangeError('Invalid interval');
        }

        var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;

        if (!isOverlapping) {
          return 0;
        }

        var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;
        var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;
        var differenceInMs = overlapEndDate - overlapStartDate;
        return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);
      }
      /***/

    },

    /***/
    "tpup":
    /*!*******************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js ***!
      \*******************************************************************/

    /*! exports provided: default */

    /***/
    function tpup(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfUTCISOWeek;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg"); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function startOfUTCISOWeek(dirtyDate) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var weekStartsOn = 1;
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var day = date.getUTCDay();
        var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
        date.setUTCDate(date.getUTCDate() - diff);
        date.setUTCHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "u/yc":
    /*!********************************************************!*\
      !*** ./node_modules/date-fns/esm/isThisMonth/index.js ***!
      \********************************************************/

    /*! exports provided: default */

    /***/
    function uYc(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isThisMonth;
      });
      /* harmony import */


      var _isSameMonth_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isSameMonth/index.js */
      "WIjQ");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isThisMonth
       * @category Month Helpers
       * @summary Is the given date in the same month as the current date?
       * @pure false
       *
       * @description
       * Is the given date in the same month as the current date?
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is in this month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // If today is 25 September 2014, is 15 September 2014 in this month?
       * var result = isThisMonth(new Date(2014, 8, 15))
       * //=> true
       */


      function isThisMonth(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_isSameMonth_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
      }
      /***/

    },

    /***/
    "uMIJ":
    /*!******************************************!*\
      !*** ./node_modules/array-from/index.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function uMIJ(module, exports, __webpack_require__) {
      module.exports = typeof Array.from === 'function' ? Array.from : __webpack_require__(
      /*! ./polyfill */
      "lipz");
      /***/
    },

    /***/
    "uh5Q":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/isFuture/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function uh5Q(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isFuture;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isFuture
       * @category Common Helpers
       * @summary Is the given date in the future?
       * @pure false
       *
       * @description
       * Is the given date in the future?
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is in the future
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // If today is 6 October 2014, is 31 December 2014 in the future?
       * var result = isFuture(new Date(2014, 11, 31))
       * //=> true
       */


      function isFuture(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getTime() > Date.now();
      }
      /***/

    },

    /***/
    "uzHG":
    /*!**************************************************************!*\
      !*** ./node_modules/dom-mousemove-dispatcher/dist/bundle.js ***!
      \**************************************************************/

    /*! no static exports found */

    /***/
    function uzHG(module, exports, __webpack_require__) {
      "use strict";

      var objectCreate = void 0;

      if (typeof Object.create != 'function') {
        objectCreate = function (undefined) {
          var Temp = function Temp() {};

          return function (prototype, propertiesObject) {
            if (prototype !== Object(prototype) && prototype !== null) {
              throw TypeError('Argument must be an object, or null');
            }

            Temp.prototype = prototype || {};
            var result = new Temp();
            Temp.prototype = null;

            if (propertiesObject !== undefined) {
              Object.defineProperties(result, propertiesObject);
            } // to imitate the case of Object.create(null)


            if (prototype === null) {
              result.__proto__ = null;
            }

            return result;
          };
        }();
      } else {
        objectCreate = Object.create;
      }

      var objectCreate$1 = objectCreate;
      var mouseEventProps = ['altKey', 'button', 'buttons', 'clientX', 'clientY', 'ctrlKey', 'metaKey', 'movementX', 'movementY', 'offsetX', 'offsetY', 'pageX', 'pageY', 'region', 'relatedTarget', 'screenX', 'screenY', 'shiftKey', 'which', 'x', 'y'];

      function createDispatcher(element) {
        var defaultSettings = {
          screenX: 0,
          screenY: 0,
          clientX: 0,
          clientY: 0,
          ctrlKey: false,
          shiftKey: false,
          altKey: false,
          metaKey: false,
          button: 0,
          buttons: 1,
          relatedTarget: null,
          region: null
        };

        if (element !== undefined) {
          element.addEventListener('mousemove', onMove);
        }

        function onMove(e) {
          for (var i = 0; i < mouseEventProps.length; i++) {
            defaultSettings[mouseEventProps[i]] = e[mouseEventProps[i]];
          }
        }

        var dispatch = function () {
          if (MouseEvent) {
            return function m1(element, initMove, data) {
              var evt = new MouseEvent('mousemove', createMoveInit(defaultSettings, initMove)); //evt.dispatched = 'mousemove';

              setSpecial(evt, data);
              return element.dispatchEvent(evt);
            };
          } else if (typeof document.createEvent === 'function') {
            return function m2(element, initMove, data) {
              var settings = createMoveInit(defaultSettings, initMove);
              var evt = document.createEvent('MouseEvents');
              evt.initMouseEvent("mousemove", true, //can bubble
              true, //cancelable
              window, //view
              0, //detail
              settings.screenX, //0, //screenX
              settings.screenY, //0, //screenY
              settings.clientX, //80, //clientX
              settings.clientY, //20, //clientY
              settings.ctrlKey, //false, //ctrlKey
              settings.altKey, //false, //altKey
              settings.shiftKey, //false, //shiftKey
              settings.metaKey, //false, //metaKey
              settings.button, //0, //button
              settings.relatedTarget //null //relatedTarget
              ); //evt.dispatched = 'mousemove';

              setSpecial(evt, data);
              return element.dispatchEvent(evt);
            };
          } else if (typeof document.createEventObject === 'function') {
            return function m3(element, initMove, data) {
              var evt = document.createEventObject();
              var settings = createMoveInit(defaultSettings, initMove);

              for (var name in settings) {
                evt[name] = settings[name];
              } //evt.dispatched = 'mousemove';


              setSpecial(evt, data);
              return element.dispatchEvent(evt);
            };
          }
        }();

        function destroy() {
          if (element) element.removeEventListener('mousemove', onMove, false);
          defaultSettings = null;
        }

        return {
          destroy: destroy,
          dispatch: dispatch
        };
      }

      function createMoveInit(defaultSettings, initMove) {
        initMove = initMove || {};
        var settings = objectCreate$1(defaultSettings);

        for (var i = 0; i < mouseEventProps.length; i++) {
          if (initMove[mouseEventProps[i]] !== undefined) settings[mouseEventProps[i]] = initMove[mouseEventProps[i]];
        }

        return settings;
      }

      function setSpecial(e, data) {
        console.log('data ', data);
        e.data = data || {};
        e.dispatched = 'mousemove';
      }
      /*
      http://marcgrabanski.com/simulating-mouse-click-events-in-javascript/
      */


      module.exports = createDispatcher; //# sourceMappingURL=bundle.js.map

      /***/
    },

    /***/
    "vAQ4":
    /*!*********************************************************************!*\
      !*** ./node_modules/date-fns/esm/differenceInISOWeekYears/index.js ***!
      \*********************************************************************/

    /*! exports provided: default */

    /***/
    function vAQ4(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return differenceInISOWeekYears;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _differenceInCalendarISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../differenceInCalendarISOWeekYears/index.js */
      "3zlk");
      /* harmony import */


      var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../compareAsc/index.js */
      "JhOC");
      /* harmony import */


      var _subISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../subISOWeekYears/index.js */
      "pIWV");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name differenceInISOWeekYears
       * @category ISO Week-Numbering Year Helpers
       * @summary Get the number of full ISO week-numbering years between the given dates.
       *
       * @description
       * Get the number of full ISO week-numbering years between the given dates.
       *
       * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.
       *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
       *   This change makes the name consistent with
       *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
       *
       * @param {Date|Number} dateLeft - the later date
       * @param {Date|Number} dateRight - the earlier date
       * @returns {Number} the number of full ISO week-numbering years
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?
       * var result = differenceInISOWeekYears(
       *   new Date(2012, 0, 1),
       *   new Date(2010, 0, 1)
       * )
       * //=> 1
       */


      function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        var sign = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight);
        var difference = Math.abs(Object(_differenceInCalendarISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight));
        dateLeft = Object(_subISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1
        // if last calendar ISO year is not full
        // If so, result must be decreased by 1 in absolute value

        var isLastISOWeekYearNotFull = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight) === -sign;
        var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero

        return result === 0 ? 0 : result;
      }
      /***/

    },

    /***/
    "vHCX":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/startOfQuarter/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function vHCX(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return startOfQuarter;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name startOfQuarter
       * @category Quarter Helpers
       * @summary Return the start of a year quarter for the given date.
       *
       * @description
       * Return the start of a year quarter for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the start of a quarter
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The start of a quarter for 2 September 2014 11:55:00:
       * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Tue Jul 01 2014 00:00:00
       */


      function startOfQuarter(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var currentMonth = date.getMonth();
        var month = currentMonth - currentMonth % 3;
        date.setMonth(month, 1);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "vRX4":
    /*!****************************************************************************!*\
      !*** ./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js ***!
      \****************************************************************************/

    /*! exports provided: default */

    /***/
    function vRX4(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return buildMatchPatternFn;
      });

      function buildMatchPatternFn(args) {
        return function (dirtyString, dirtyOptions) {
          var string = String(dirtyString);
          var options = dirtyOptions || {};
          var matchResult = string.match(args.matchPattern);

          if (!matchResult) {
            return null;
          }

          var matchedString = matchResult[0];
          var parseResult = string.match(args.parsePattern);

          if (!parseResult) {
            return null;
          }

          var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
          value = options.valueCallback ? options.valueCallback(value) : value;
          return {
            value: value,
            rest: string.slice(matchedString.length)
          };
        };
      }
      /***/

    },

    /***/
    "w3Pf":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/isThisQuarter/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function w3Pf(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isThisQuarter;
      });
      /* harmony import */


      var _isSameQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../isSameQuarter/index.js */
      "TGAR");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isThisQuarter
       * @category Quarter Helpers
       * @summary Is the given date in the same quarter as the current date?
       * @pure false
       *
       * @description
       * Is the given date in the same quarter as the current date?
       *
       * > ⚠️ Please note that this function is not present in the FP submodule as
       * > it uses `Date.now()` internally hence impure and can't be safely curried.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is in this quarter
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // If today is 25 September 2014, is 2 July 2014 in this quarter?
       * var result = isThisQuarter(new Date(2014, 6, 2))
       * //=> true
       */


      function isThisQuarter(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_isSameQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
      }
      /***/

    },

    /***/
    "w3qX":
    /*!******************************************************!*\
      !*** ./node_modules/date-fns/esm/constants/index.js ***!
      \******************************************************/

    /*! exports provided: maxTime, minTime */

    /***/
    function w3qX(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "maxTime", function () {
        return maxTime;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "minTime", function () {
        return minTime;
      });
      /**
       *  Maximum allowed time.
       *  @constant
       *  @type {number}
       *  @default
       */


      var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;
      /**
       *  Minimum allowed time.
       *  @constant
       *  @type {number}
       *  @default
       */

      var minTime = -maxTime;
      /***/
    },

    /***/
    "wK6H":
    /*!**************************************************************!*\
      !*** ./node_modules/date-fns/esm/isFirstDayOfMonth/index.js ***!
      \**************************************************************/

    /*! exports provided: default */

    /***/
    function wK6H(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isFirstDayOfMonth;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isFirstDayOfMonth
       * @category Month Helpers
       * @summary Is the given date the first day of a month?
       *
       * @description
       * Is the given date the first day of a month?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is the first day of a month
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Is 1 September 2014 the first day of a month?
       * var result = isFirstDayOfMonth(new Date(2014, 8, 1))
       * //=> true
       */


      function isFirstDayOfMonth(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDate() === 1;
      }
      /***/

    },

    /***/
    "wQoA":
    /*!**********************************************************!*\
      !*** ./node_modules/date-fns/esm/lastDayOfYear/index.js ***!
      \**********************************************************/

    /*! exports provided: default */

    /***/
    function wQoA(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return lastDayOfYear;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name lastDayOfYear
       * @category Year Helpers
       * @summary Return the last day of a year for the given date.
       *
       * @description
       * Return the last day of a year for the given date.
       * The result will be in the local timezone.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the original date
       * @returns {Date} the last day of a year
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // The last day of a year for 2 September 2014 11:55:00:
       * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))
       * //=> Wed Dec 31 2014 00:00:00
       */


      function lastDayOfYear(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
        var year = date.getFullYear();
        date.setFullYear(year + 1, 0, 0);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      /***/

    },

    /***/
    "wTf+":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/isMonday/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function wTf(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isMonday;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isMonday
       * @category Weekday Helpers
       * @summary Is the given date Monday?
       *
       * @description
       * Is the given date Monday?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to check
       * @returns {Boolean} the date is Monday
       * @throws {TypeError} 1 argument required
       *
       * @example
       * // Is 22 September 2014 Monday?
       * var result = isMonday(new Date(2014, 8, 22))
       * //=> true
       */


      function isMonday(dirtyDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
        return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 1;
      }
      /***/

    },

    /***/
    "wXd3":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/setSeconds/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function wXd3(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setSeconds;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name setSeconds
       * @category Second Helpers
       * @summary Set the seconds to the given date.
       *
       * @description
       * Set the seconds to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} seconds - the seconds of the new date
       * @returns {Date} the new date with the seconds set
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Set 45 seconds to 1 September 2014 11:30:40:
       * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)
       * //=> Mon Sep 01 2014 11:30:45
       */


      function setSeconds(dirtyDate, dirtySeconds) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var seconds = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtySeconds);
        date.setSeconds(seconds);
        return date;
      }
      /***/

    },

    /***/
    "wigk":
    /*!***********************************************************!*\
      !*** ./node_modules/date-fns/esm/closestIndexTo/index.js ***!
      \***********************************************************/

    /*! exports provided: default */

    /***/
    function wigk(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return closestIndexTo;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name closestIndexTo
       * @category Common Helpers
       * @summary Return an index of the closest date from the array comparing to the given date.
       *
       * @description
       * Return an index of the closest date from the array comparing to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * - Now, `closestIndexTo` doesn't throw an exception
       *   when the second argument is not an array, and returns Invalid Date instead.
       *
       * @param {Date|Number} dateToCompare - the date to compare with
       * @param {Date[]|Number[]} datesArray - the array to search
       * @returns {Number} an index of the date closest to the given date
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Which date is closer to 6 September 2015?
       * var dateToCompare = new Date(2015, 8, 6)
       * var datesArray = [
       *   new Date(2015, 0, 1),
       *   new Date(2016, 0, 1),
       *   new Date(2017, 0, 1)
       * ]
       * var result = closestIndexTo(dateToCompare, datesArray)
       * //=> 1
       */


      function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateToCompare = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateToCompare);

        if (isNaN(dateToCompare)) {
          return NaN;
        }

        var timeToCompare = dateToCompare.getTime();
        var datesArray; // `dirtyDatesArray` is undefined or null

        if (dirtyDatesArray == null) {
          datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
        } else if (typeof dirtyDatesArray.forEach === 'function') {
          datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array
        } else {
          datesArray = Array.prototype.slice.call(dirtyDatesArray);
        }

        var result;
        var minDistance;
        datesArray.forEach(function (dirtyDate, index) {
          var currentDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

          if (isNaN(currentDate)) {
            result = NaN;
            minDistance = NaN;
            return;
          }

          var distance = Math.abs(timeToCompare - currentDate.getTime());

          if (result == null || distance < minDistance) {
            result = index;
            minDistance = distance;
          }
        });
        return result;
      }
      /***/

    },

    /***/
    "wzM+":
    /*!*********************************************************************!*\
      !*** ./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js ***!
      \*********************************************************************/

    /*! exports provided: default */

    /***/
    function wzM(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return buildMatchFn;
      });

      function buildMatchFn(args) {
        return function (dirtyString, dirtyOptions) {
          var string = String(dirtyString);
          var options = dirtyOptions || {};
          var width = options.width;
          var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
          var matchResult = string.match(matchPattern);

          if (!matchResult) {
            return null;
          }

          var matchedString = matchResult[0];
          var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
          var value;

          if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {
            value = findIndex(parsePatterns, function (pattern) {
              return pattern.test(string);
            });
          } else {
            value = findKey(parsePatterns, function (pattern) {
              return pattern.test(string);
            });
          }

          value = args.valueCallback ? args.valueCallback(value) : value;
          value = options.valueCallback ? options.valueCallback(value) : value;
          return {
            value: value,
            rest: string.slice(matchedString.length)
          };
        };
      }

      function findKey(object, predicate) {
        for (var key in object) {
          if (object.hasOwnProperty(key) && predicate(object[key])) {
            return key;
          }
        }
      }

      function findIndex(array, predicate) {
        for (var key = 0; key < array.length; key++) {
          if (predicate(array[key])) {
            return key;
          }
        }
      }
      /***/

    },

    /***/
    "xMRN":
    /*!*************************************************************************!*\
      !*** ./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js ***!
      \*************************************************************************/

    /*! exports provided: default */

    /***/
    function xMRN(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */


      var _lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../../../_lib/buildFormatLongFn/index.js */
      "zMQz");

      var dateFormats = {
        full: 'EEEE, MMMM do, y',
        "long": 'MMMM do, y',
        medium: 'MMM d, y',
        "short": 'MM/dd/yyyy'
      };
      var timeFormats = {
        full: 'h:mm:ss a zzzz',
        "long": 'h:mm:ss a z',
        medium: 'h:mm:ss a',
        "short": 'h:mm a'
      };
      var dateTimeFormats = {
        full: "{{date}} 'at' {{time}}",
        "long": "{{date}} 'at' {{time}}",
        medium: '{{date}}, {{time}}',
        "short": '{{date}}, {{time}}'
      };
      var formatLong = {
        date: Object(_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
          formats: dateFormats,
          defaultWidth: 'full'
        }),
        time: Object(_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
          formats: timeFormats,
          defaultWidth: 'full'
        }),
        dateTime: Object(_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
          formats: dateTimeFormats,
          defaultWidth: 'full'
        })
      };
      /* harmony default export */

      __webpack_exports__["default"] = formatLong;
      /***/
    },

    /***/
    "xiNX":
    /*!************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/setUTCWeek/index.js ***!
      \************************************************************/

    /*! exports provided: default */

    /***/
    function xiNX(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setUTCWeek;
      });
      /* harmony import */


      var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../getUTCWeek/index.js */
      "ErpD");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg"); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function setUTCWeek(dirtyDate, dirtyWeek, options) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var week = Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyWeek);
        var diff = Object(_getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, options) - week;
        date.setUTCDate(date.getUTCDate() - diff * 7);
        return date;
      }
      /***/

    },

    /***/
    "xijO":
    /*!************************************************!*\
      !*** ./node_modules/iselement/module/index.js ***!
      \************************************************/

    /*! exports provided: default */

    /***/
    function xijO(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);

      var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
      } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
      };
      /**
       * Returns `true` if provided input is Element.
       * @name isElement
       * @param {*} [input]
       * @returns {boolean}
       */

      /* harmony default export */


      __webpack_exports__["default"] = function (input) {
        return input != null && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input.nodeType === 1 && _typeof(input.style) === 'object' && _typeof(input.ownerDocument) === 'object';
      };
      /***/

    },

    /***/
    "yZjN":
    /*!**************************************************************************************!*\
      !*** ./src/app/modules/comercial/cadastros/titulos-agenda/titulos-agenda.service.ts ***!
      \**************************************************************************************/

    /*! exports provided: ComercialCadastrosTitulosAgendaService */

    /***/
    function yZjN(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ComercialCadastrosTitulosAgendaService", function () {
        return ComercialCadastrosTitulosAgendaService;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common/http */
      "IheW");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");

      var ComercialCadastrosTitulosAgendaService = /*#__PURE__*/function () {
        function ComercialCadastrosTitulosAgendaService(http) {
          _classCallCheck(this, ComercialCadastrosTitulosAgendaService);

          this.http = http;
          this.API = "https://crm360.monterrey.com.bo/api/comercial/cadastros/titulos-agenda";
        }

        _createClass(ComercialCadastrosTitulosAgendaService, [{
          key: "getListaTitulosAgenda",
          value: function getListaTitulosAgenda(params) {
            var httpParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]();

            for (var param in params) {
              httpParams = httpParams.append(param, params[param]);
            }

            return this.http.get("".concat(this.API, "/lista"), {
              params: httpParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1));
          }
        }, {
          key: "getDetalhes",
          value: function getDetalhes(codTitulo) {
            return this.http.get("".concat(this.API, "/detalhes/").concat(codTitulo)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1));
          }
        }, {
          key: "saveTitulosAgenda",
          value: function saveTitulosAgenda(titulosAgenda) {
            return this.http.post("".concat(this.API, "/salvar"), titulosAgenda).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1));
          }
        }, {
          key: "updateTitulosAgenda",
          value: function updateTitulosAgenda(titulosAgenda) {
            return this.http.put("".concat(this.API, "/atualizar"), titulosAgenda).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1));
          }
        }, {
          key: "save",
          value: function save(titulosAgenda) {
            if (titulosAgenda.codTitulo !== null) {
              return this.updateTitulosAgenda(titulosAgenda);
            }

            return this.saveTitulosAgenda(titulosAgenda);
          }
        }, {
          key: "activateTitulosAgenda",
          value: function activateTitulosAgenda(codigo) {
            return this.http.post("".concat(this.API, "/ativar"), codigo).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1));
          }
        }, {
          key: "inactivateTitulosAgenda",
          value: function inactivateTitulosAgenda(codigo) {
            return this.http.post("".concat(this.API, "/inativar"), codigo).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1));
          }
        }]);

        return ComercialCadastrosTitulosAgendaService;
      }();

      ComercialCadastrosTitulosAgendaService.ctorParameters = function () {
        return [{
          type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]
        }];
      };

      ComercialCadastrosTitulosAgendaService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])], ComercialCadastrosTitulosAgendaService);
      /***/
    },

    /***/
    "yotz":
    /*!**************************************************************************************!*\
      !*** ./node_modules/angular-resizable-element/fesm2015/angular-resizable-element.js ***!
      \**************************************************************************************/

    /*! exports provided: ResizableDirective, ResizeHandleDirective, ResizableModule */

    /***/
    function yotz(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ResizableDirective", function () {
        return ResizableDirective;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ResizeHandleDirective", function () {
        return ResizeHandleDirective;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ResizableModule", function () {
        return ResizableModule;
      });
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/common */
      "SVse");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @param {?} value1
       * @param {?} value2
       * @param {?=} precision
       * @return {?}
       */


      function isNumberCloseTo(value1, value2) {
        var precision = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;

        /** @type {?} */
        var diff = Math.abs(value1 - value2);
        return diff < precision;
      }
      /**
       * @param {?} startingRect
       * @param {?} edges
       * @param {?} clientX
       * @param {?} clientY
       * @return {?}
       */


      function getNewBoundingRectangle(startingRect, edges, clientX, clientY) {
        /** @type {?} */
        var newBoundingRect = {
          top: startingRect.top,
          bottom: startingRect.bottom,
          left: startingRect.left,
          right: startingRect.right
        };

        if (edges.top) {
          newBoundingRect.top += clientY;
        }

        if (edges.bottom) {
          newBoundingRect.bottom += clientY;
        }

        if (edges.left) {
          newBoundingRect.left += clientX;
        }

        if (edges.right) {
          newBoundingRect.right += clientX;
        }

        newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;
        newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;
        return newBoundingRect;
      }
      /**
       * @param {?} element
       * @param {?} ghostElementPositioning
       * @return {?}
       */


      function getElementRect(element, ghostElementPositioning) {
        /** @type {?} */
        var translateX = 0;
        /** @type {?} */

        var translateY = 0;
        /** @type {?} */

        var style = element.nativeElement.style;
        /** @type {?} */

        var transformProperties = ['transform', '-ms-transform', '-moz-transform', '-o-transform'];
        /** @type {?} */

        var transform = transformProperties.map(function (property) {
          return style[property];
        }).find(function (value) {
          return !!value;
        });

        if (transform && transform.includes('translate')) {
          translateX = transform.replace(/.*translate\((.*)px, (.*)px\).*/, '$1');
          translateY = transform.replace(/.*translate\((.*)px, (.*)px\).*/, '$2');
        }

        if (ghostElementPositioning === 'absolute') {
          return {
            height: element.nativeElement.offsetHeight,
            width: element.nativeElement.offsetWidth,
            top: element.nativeElement.offsetTop - translateY,
            bottom: element.nativeElement.offsetHeight + element.nativeElement.offsetTop - translateY,
            left: element.nativeElement.offsetLeft - translateX,
            right: element.nativeElement.offsetWidth + element.nativeElement.offsetLeft - translateX
          };
        } else {
          /** @type {?} */
          var boundingRect = element.nativeElement.getBoundingClientRect();
          return {
            height: boundingRect.height,
            width: boundingRect.width,
            top: boundingRect.top - translateY,
            bottom: boundingRect.bottom - translateY,
            left: boundingRect.left - translateX,
            right: boundingRect.right - translateX,
            scrollTop: element.nativeElement.scrollTop,
            scrollLeft: element.nativeElement.scrollLeft
          };
        }
      }
      /**
       * @param {?} __0
       * @return {?}
       */


      function isWithinBoundingY(_ref53) {
        var clientY = _ref53.clientY,
            rect = _ref53.rect;
        return clientY >= rect.top && clientY <= rect.bottom;
      }
      /**
       * @param {?} __0
       * @return {?}
       */


      function isWithinBoundingX(_ref54) {
        var clientX = _ref54.clientX,
            rect = _ref54.rect;
        return clientX >= rect.left && clientX <= rect.right;
      }
      /**
       * @param {?} __0
       * @return {?}
       */


      function getResizeEdges(_ref55) {
        var clientX = _ref55.clientX,
            clientY = _ref55.clientY,
            elm = _ref55.elm,
            allowedEdges = _ref55.allowedEdges,
            cursorPrecision = _ref55.cursorPrecision;

        /** @type {?} */
        var elmPosition = elm.nativeElement.getBoundingClientRect();
        /** @type {?} */

        var edges = {};

        if (allowedEdges.left && isNumberCloseTo(clientX, elmPosition.left, cursorPrecision) && isWithinBoundingY({
          clientY: clientY,
          rect: elmPosition
        })) {
          edges.left = true;
        }

        if (allowedEdges.right && isNumberCloseTo(clientX, elmPosition.right, cursorPrecision) && isWithinBoundingY({
          clientY: clientY,
          rect: elmPosition
        })) {
          edges.right = true;
        }

        if (allowedEdges.top && isNumberCloseTo(clientY, elmPosition.top, cursorPrecision) && isWithinBoundingX({
          clientX: clientX,
          rect: elmPosition
        })) {
          edges.top = true;
        }

        if (allowedEdges.bottom && isNumberCloseTo(clientY, elmPosition.bottom, cursorPrecision) && isWithinBoundingX({
          clientX: clientX,
          rect: elmPosition
        })) {
          edges.bottom = true;
        }

        return edges;
      }
      /** @type {?} */


      var DEFAULT_RESIZE_CURSORS = Object.freeze({
        topLeft: 'nw-resize',
        topRight: 'ne-resize',
        bottomLeft: 'sw-resize',
        bottomRight: 'se-resize',
        leftOrRight: 'col-resize',
        topOrBottom: 'row-resize'
      });
      /**
       * @param {?} edges
       * @param {?} cursors
       * @return {?}
       */

      function getResizeCursor(edges, cursors) {
        if (edges.left && edges.top) {
          return cursors.topLeft;
        } else if (edges.right && edges.top) {
          return cursors.topRight;
        } else if (edges.left && edges.bottom) {
          return cursors.bottomLeft;
        } else if (edges.right && edges.bottom) {
          return cursors.bottomRight;
        } else if (edges.left || edges.right) {
          return cursors.leftOrRight;
        } else if (edges.top || edges.bottom) {
          return cursors.topOrBottom;
        } else {
          return '';
        }
      }
      /**
       * @param {?} __0
       * @return {?}
       */


      function getEdgesDiff(_ref56) {
        var edges = _ref56.edges,
            initialRectangle = _ref56.initialRectangle,
            newRectangle = _ref56.newRectangle;

        /** @type {?} */
        var edgesDiff = {};
        Object.keys(edges).forEach(function (edge) {
          edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);
        });
        return edgesDiff;
      }
      /** @type {?} */


      var RESIZE_ACTIVE_CLASS = 'resize-active';
      /** @type {?} */

      var RESIZE_LEFT_HOVER_CLASS = 'resize-left-hover';
      /** @type {?} */

      var RESIZE_RIGHT_HOVER_CLASS = 'resize-right-hover';
      /** @type {?} */

      var RESIZE_TOP_HOVER_CLASS = 'resize-top-hover';
      /** @type {?} */

      var RESIZE_BOTTOM_HOVER_CLASS = 'resize-bottom-hover';
      /** @type {?} */

      var RESIZE_GHOST_ELEMENT_CLASS = 'resize-ghost-element';
      /** @type {?} */

      var MOUSE_MOVE_THROTTLE_MS = 50;
      /**
       * Place this on an element to make it resizable. For example:
       *
       * ```html
       * <div
       *   mwlResizable
       *   [resizeEdges]="{bottom: true, right: true, top: true, left: true}"
       *   [enableGhostResize]="true">
       * </div>
       * ```
       */

      var ResizableDirective = /*#__PURE__*/function () {
        /**
         * @hidden
         * @param {?} platformId
         * @param {?} renderer
         * @param {?} elm
         * @param {?} zone
         */
        function ResizableDirective(platformId, renderer, elm, zone) {
          _classCallCheck(this, ResizableDirective);

          this.platformId = platformId;
          this.renderer = renderer;
          this.elm = elm;
          this.zone = zone;
          /**
           * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.
           * @deprecated use a resize handle instead that positions itself to the side of the element you would like to resize
           */

          this.resizeEdges = {};
          /**
           * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.
           */

          this.enableGhostResize = false;
          /**
           * A snap grid that resize events will be locked to.
           *
           * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`
           */

          this.resizeSnapGrid = {};
          /**
           * The mouse cursors that will be set on the resize edges
           */

          this.resizeCursors = DEFAULT_RESIZE_CURSORS;
          /**
           * Mouse over thickness to active cursor.
           * @deprecated invalid when you migrate to use resize handles instead of setting resizeEdges on the element
           */

          this.resizeCursorPrecision = 3;
          /**
           * Define the positioning of the ghost element (can be fixed or absolute)
           */

          this.ghostElementPositioning = 'fixed';
          /**
           * Allow elements to be resized to negative dimensions
           */

          this.allowNegativeResizes = false;
          /**
           * The mouse move throttle in milliseconds, default: 50 ms
           */

          this.mouseMoveThrottleMS = MOUSE_MOVE_THROTTLE_MS;
          /**
           * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.
           */

          this.resizeStart = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
          /**
           * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.
           */

          this.resizing = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
          /**
           * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.
           */

          this.resizeEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
          /**
           * @hidden
           */

          this.mouseup = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
          /**
           * @hidden
           */

          this.mousedown = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
          /**
           * @hidden
           */

          this.mousemove = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
          this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
          this.resizeEdges$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
          this.pointerEventListeners = PointerEventListeners.getInstance(renderer, zone);
        }
        /**
         * @hidden
         * @return {?}
         */


        _createClass(ResizableDirective, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this32 = this;

            /** @type {?} */
            var mousedown$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["merge"])(this.pointerEventListeners.pointerDown, this.mousedown);
            /** @type {?} */

            var mousemove$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["merge"])(this.pointerEventListeners.pointerMove, this.mousemove).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function (_ref57) {
              var event = _ref57.event;

              if (currentResize) {
                event.preventDefault();
              }
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["share"])());
            /** @type {?} */

            var mouseup$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["merge"])(this.pointerEventListeners.pointerUp, this.mouseup);
            /** @type {?} */

            var currentResize;
            /** @type {?} */

            var removeGhostElement = function removeGhostElement() {
              if (currentResize && currentResize.clonedNode) {
                _this32.elm.nativeElement.parentElement.removeChild(currentResize.clonedNode);

                _this32.renderer.setStyle(_this32.elm.nativeElement, 'visibility', 'inherit');
              }
            };
            /** @type {?} */


            var getResizeCursors = function getResizeCursors() {
              return Object.assign({}, DEFAULT_RESIZE_CURSORS, _this32.resizeCursors);
            };

            this.resizeEdges$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["startWith"])(this.resizeEdges), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function () {
              return _this32.resizeEdges && Object.keys(_this32.resizeEdges).some(function (edge) {
                return !!_this32.resizeEdges[edge];
              });
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["switchMap"])(function (legacyResizeEdgesEnabled) {
              return legacyResizeEdgesEnabled ? mousemove$ : rxjs__WEBPACK_IMPORTED_MODULE_1__["EMPTY"];
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["auditTime"])(this.mouseMoveThrottleMS), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["takeUntil"])(this.destroy$)).subscribe(function (_ref58) {
              var clientX = _ref58.clientX,
                  clientY = _ref58.clientY;

              /** @type {?} */
              var resizeEdges = getResizeEdges({
                clientX: clientX,
                clientY: clientY,
                elm: _this32.elm,
                allowedEdges: _this32.resizeEdges,
                cursorPrecision: _this32.resizeCursorPrecision
              });
              /** @type {?} */

              var resizeCursors = getResizeCursors();

              if (!currentResize) {
                /** @type {?} */
                var cursor = getResizeCursor(resizeEdges, resizeCursors);

                _this32.renderer.setStyle(_this32.elm.nativeElement, 'cursor', cursor);
              }

              _this32.setElementClass(_this32.elm, RESIZE_LEFT_HOVER_CLASS, resizeEdges.left === true);

              _this32.setElementClass(_this32.elm, RESIZE_RIGHT_HOVER_CLASS, resizeEdges.right === true);

              _this32.setElementClass(_this32.elm, RESIZE_TOP_HOVER_CLASS, resizeEdges.top === true);

              _this32.setElementClass(_this32.elm, RESIZE_BOTTOM_HOVER_CLASS, resizeEdges.bottom === true);
            });
            /** @type {?} */

            var mousedrag = mousedown$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(function (startCoords) {
              /**
               * @param {?} moveCoords
               * @return {?}
               */
              function getDiff(moveCoords) {
                return {
                  clientX: moveCoords.clientX - startCoords.clientX,
                  clientY: moveCoords.clientY - startCoords.clientY
                };
              }
              /** @type {?} */


              var getSnapGrid = function getSnapGrid() {
                /** @type {?} */
                var snapGrid = {
                  x: 1,
                  y: 1
                };

                if (currentResize) {
                  if (_this32.resizeSnapGrid.left && currentResize.edges.left) {
                    snapGrid.x = +_this32.resizeSnapGrid.left;
                  } else if (_this32.resizeSnapGrid.right && currentResize.edges.right) {
                    snapGrid.x = +_this32.resizeSnapGrid.right;
                  }

                  if (_this32.resizeSnapGrid.top && currentResize.edges.top) {
                    snapGrid.y = +_this32.resizeSnapGrid.top;
                  } else if (_this32.resizeSnapGrid.bottom && currentResize.edges.bottom) {
                    snapGrid.y = +_this32.resizeSnapGrid.bottom;
                  }
                }

                return snapGrid;
              };
              /**
               * @param {?} coords
               * @param {?} snapGrid
               * @return {?}
               */


              function getGrid(coords, snapGrid) {
                return {
                  x: Math.ceil(coords.clientX / snapGrid.x),
                  y: Math.ceil(coords.clientY / snapGrid.y)
                };
              }

              return (
                /** @type {?} */
                Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["merge"])(mousemove$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["take"])(1)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (coords) {
                  return [, coords];
                })), mousemove$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["pairwise"])())).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_ref59) {
                  var _ref60 = _slicedToArray(_ref59, 2),
                      previousCoords = _ref60[0],
                      newCoords = _ref60[1];

                  return [previousCoords ? getDiff(previousCoords) : previousCoords, getDiff(newCoords)];
                })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (_ref61) {
                  var _ref62 = _slicedToArray(_ref61, 2),
                      previousCoords = _ref62[0],
                      newCoords = _ref62[1];

                  if (!previousCoords) {
                    return true;
                  }
                  /** @type {?} */


                  var snapGrid = getSnapGrid();
                  /** @type {?} */

                  var previousGrid = getGrid(previousCoords, snapGrid);
                  /** @type {?} */

                  var newGrid = getGrid(newCoords, snapGrid);
                  return previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y;
                })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_ref63) {
                  var _ref64 = _slicedToArray(_ref63, 2),
                      newCoords = _ref64[1];

                  /** @type {?} */
                  var snapGrid = getSnapGrid();
                  return {
                    clientX: Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,
                    clientY: Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y
                  };
                })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["takeUntil"])(Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["merge"])(mouseup$, mousedown$)))
              );
            })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function () {
              return !!currentResize;
            }));
            mousedrag.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_ref65) {
              var clientX = _ref65.clientX,
                  clientY = _ref65.clientY;
              return getNewBoundingRectangle(
              /** @type {?} */
              currentResize.startingRect,
              /** @type {?} */
              currentResize.edges, clientX, clientY);
            })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (newBoundingRect) {
              return _this32.allowNegativeResizes || !!(newBoundingRect.height && newBoundingRect.width && newBoundingRect.height > 0 && newBoundingRect.width > 0);
            })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (newBoundingRect) {
              return _this32.validateResize ? _this32.validateResize({
                rectangle: newBoundingRect,
                edges: getEdgesDiff({
                  edges:
                  /** @type {?} */
                  currentResize.edges,
                  initialRectangle:
                  /** @type {?} */
                  currentResize.startingRect,
                  newRectangle: newBoundingRect
                })
              }) : true;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["takeUntil"])(this.destroy$)).subscribe(function (newBoundingRect) {
              if (currentResize && currentResize.clonedNode) {
                _this32.renderer.setStyle(currentResize.clonedNode, 'height', "".concat(newBoundingRect.height, "px"));

                _this32.renderer.setStyle(currentResize.clonedNode, 'width', "".concat(newBoundingRect.width, "px"));

                _this32.renderer.setStyle(currentResize.clonedNode, 'top', "".concat(newBoundingRect.top, "px"));

                _this32.renderer.setStyle(currentResize.clonedNode, 'left', "".concat(newBoundingRect.left, "px"));
              }

              _this32.zone.run(function () {
                _this32.resizing.emit({
                  edges: getEdgesDiff({
                    edges:
                    /** @type {?} */
                    currentResize.edges,
                    initialRectangle:
                    /** @type {?} */
                    currentResize.startingRect,
                    newRectangle: newBoundingRect
                  }),
                  rectangle: newBoundingRect
                });
              });

              /** @type {?} */
              currentResize.currentRect = newBoundingRect;
            });
            mousedown$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_ref66) {
              var clientX = _ref66.clientX,
                  clientY = _ref66.clientY,
                  edges = _ref66.edges;
              return edges || getResizeEdges({
                clientX: clientX,
                clientY: clientY,
                elm: _this32.elm,
                allowedEdges: _this32.resizeEdges,
                cursorPrecision: _this32.resizeCursorPrecision
              });
            })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (edges) {
              return Object.keys(edges).length > 0;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["takeUntil"])(this.destroy$)).subscribe(function (edges) {
              if (currentResize) {
                removeGhostElement();
              }
              /** @type {?} */


              var startingRect = getElementRect(_this32.elm, _this32.ghostElementPositioning);
              currentResize = {
                edges: edges,
                startingRect: startingRect,
                currentRect: startingRect
              };
              /** @type {?} */

              var resizeCursors = getResizeCursors();
              /** @type {?} */

              var cursor = getResizeCursor(currentResize.edges, resizeCursors);

              _this32.renderer.setStyle(document.body, 'cursor', cursor);

              _this32.setElementClass(_this32.elm, RESIZE_ACTIVE_CLASS, true);

              if (_this32.enableGhostResize) {
                currentResize.clonedNode = _this32.elm.nativeElement.cloneNode(true);

                _this32.elm.nativeElement.parentElement.appendChild(currentResize.clonedNode);

                _this32.renderer.setStyle(_this32.elm.nativeElement, 'visibility', 'hidden');

                _this32.renderer.setStyle(currentResize.clonedNode, 'position', _this32.ghostElementPositioning);

                _this32.renderer.setStyle(currentResize.clonedNode, 'left', "".concat(currentResize.startingRect.left, "px"));

                _this32.renderer.setStyle(currentResize.clonedNode, 'top', "".concat(currentResize.startingRect.top, "px"));

                _this32.renderer.setStyle(currentResize.clonedNode, 'height', "".concat(currentResize.startingRect.height, "px"));

                _this32.renderer.setStyle(currentResize.clonedNode, 'width', "".concat(currentResize.startingRect.width, "px"));

                _this32.renderer.setStyle(currentResize.clonedNode, 'cursor', getResizeCursor(currentResize.edges, resizeCursors));

                _this32.renderer.addClass(currentResize.clonedNode, RESIZE_GHOST_ELEMENT_CLASS);

                /** @type {?} */
                currentResize.clonedNode.scrollTop =
                /** @type {?} */
                currentResize.startingRect.scrollTop;

                /** @type {?} */
                currentResize.clonedNode.scrollLeft =
                /** @type {?} */
                currentResize.startingRect.scrollLeft;
              }

              _this32.zone.run(function () {
                _this32.resizeStart.emit({
                  edges: getEdgesDiff({
                    edges: edges,
                    initialRectangle: startingRect,
                    newRectangle: startingRect
                  }),
                  rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)
                });
              });
            });
            mouseup$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["takeUntil"])(this.destroy$)).subscribe(function () {
              if (currentResize) {
                _this32.renderer.removeClass(_this32.elm.nativeElement, RESIZE_ACTIVE_CLASS);

                _this32.renderer.setStyle(document.body, 'cursor', '');

                _this32.renderer.setStyle(_this32.elm.nativeElement, 'cursor', '');

                _this32.zone.run(function () {
                  _this32.resizeEnd.emit({
                    edges: getEdgesDiff({
                      edges:
                      /** @type {?} */
                      currentResize.edges,
                      initialRectangle:
                      /** @type {?} */
                      currentResize.startingRect,
                      newRectangle:
                      /** @type {?} */
                      currentResize.currentRect
                    }),
                    rectangle:
                    /** @type {?} */
                    currentResize.currentRect
                  });
                });

                removeGhostElement();
                currentResize = null;
              }
            });
          }
          /**
           * @hidden
           * @param {?} changes
           * @return {?}
           */

        }, {
          key: "ngOnChanges",
          value: function ngOnChanges(changes) {
            if (changes.resizeEdges) {
              this.resizeEdges$.next(this.resizeEdges);
            }
          }
          /**
           * @hidden
           * @return {?}
           */

        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            // browser check for angular universal, because it doesn't know what document is
            if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_0__["isPlatformBrowser"])(this.platformId)) {
              this.renderer.setStyle(document.body, 'cursor', '');
            }

            this.mousedown.complete();
            this.mouseup.complete();
            this.mousemove.complete();
            this.resizeEdges$.complete();
            this.destroy$.next();
          }
          /**
           * @private
           * @param {?} elm
           * @param {?} name
           * @param {?} add
           * @return {?}
           */

        }, {
          key: "setElementClass",
          value: function setElementClass(elm, name, add) {
            if (add) {
              this.renderer.addClass(elm.nativeElement, name);
            } else {
              this.renderer.removeClass(elm.nativeElement, name);
            }
          }
        }]);

        return ResizableDirective;
      }();

      ResizableDirective.decorators = [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
        args: [{
          selector: '[mwlResizable]'
        }]
      }];
      /** @nocollapse */

      ResizableDirective.ctorParameters = function () {
        return [{
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Inject"],
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["PLATFORM_ID"]]
          }]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
        }];
      };

      ResizableDirective.propDecorators = {
        validateResize: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        resizeEdges: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        enableGhostResize: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        resizeSnapGrid: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        resizeCursors: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        resizeCursorPrecision: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        ghostElementPositioning: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        allowNegativeResizes: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        mouseMoveThrottleMS: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        resizeStart: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        resizing: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        resizeEnd: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }]
      };

      var PointerEventListeners = /*#__PURE__*/function () {
        _createClass(PointerEventListeners, null, [{
          key: "getInstance",
          // tslint:disable-line

          /**
           * @param {?} renderer
           * @param {?} zone
           * @return {?}
           */
          value: function getInstance(renderer, zone) {
            if (!PointerEventListeners.instance) {
              PointerEventListeners.instance = new PointerEventListeners(renderer, zone);
            }

            return PointerEventListeners.instance;
          }
          /**
           * @param {?} renderer
           * @param {?} zone
           */

        }]);

        function PointerEventListeners(renderer, zone) {
          _classCallCheck(this, PointerEventListeners);

          this.pointerDown = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (observer) {
            /** @type {?} */
            var unsubscribeMouseDown;
            /** @type {?} */

            var unsubscribeTouchStart;
            zone.runOutsideAngular(function () {
              unsubscribeMouseDown = renderer.listen('document', 'mousedown', function (event) {
                observer.next({
                  clientX: event.clientX,
                  clientY: event.clientY,
                  event: event
                });
              });
              unsubscribeTouchStart = renderer.listen('document', 'touchstart', function (event) {
                observer.next({
                  clientX: event.touches[0].clientX,
                  clientY: event.touches[0].clientY,
                  event: event
                });
              });
            });
            return function () {
              unsubscribeMouseDown();
              unsubscribeTouchStart();
            };
          }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["share"])());
          this.pointerMove = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (observer) {
            /** @type {?} */
            var unsubscribeMouseMove;
            /** @type {?} */

            var unsubscribeTouchMove;
            zone.runOutsideAngular(function () {
              unsubscribeMouseMove = renderer.listen('document', 'mousemove', function (event) {
                observer.next({
                  clientX: event.clientX,
                  clientY: event.clientY,
                  event: event
                });
              });
              unsubscribeTouchMove = renderer.listen('document', 'touchmove', function (event) {
                observer.next({
                  clientX: event.targetTouches[0].clientX,
                  clientY: event.targetTouches[0].clientY,
                  event: event
                });
              });
            });
            return function () {
              unsubscribeMouseMove();
              unsubscribeTouchMove();
            };
          }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["share"])());
          this.pointerUp = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (observer) {
            /** @type {?} */
            var unsubscribeMouseUp;
            /** @type {?} */

            var unsubscribeTouchEnd;
            /** @type {?} */

            var unsubscribeTouchCancel;
            zone.runOutsideAngular(function () {
              unsubscribeMouseUp = renderer.listen('document', 'mouseup', function (event) {
                observer.next({
                  clientX: event.clientX,
                  clientY: event.clientY,
                  event: event
                });
              });
              unsubscribeTouchEnd = renderer.listen('document', 'touchend', function (event) {
                observer.next({
                  clientX: event.changedTouches[0].clientX,
                  clientY: event.changedTouches[0].clientY,
                  event: event
                });
              });
              unsubscribeTouchCancel = renderer.listen('document', 'touchcancel', function (event) {
                observer.next({
                  clientX: event.changedTouches[0].clientX,
                  clientY: event.changedTouches[0].clientY,
                  event: event
                });
              });
            });
            return function () {
              unsubscribeMouseUp();
              unsubscribeTouchEnd();
              unsubscribeTouchCancel();
            };
          }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["share"])());
        }

        return PointerEventListeners;
      }();
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle
       *
       * For example
       *
       * ```html
       * <div mwlResizable>
       *   <div mwlResizeHandle [resizeEdges]="{bottom: true, right: true}"></div>
       * </div>
       * ```
       */


      var ResizeHandleDirective = /*#__PURE__*/function () {
        /**
         * @param {?} renderer
         * @param {?} element
         * @param {?} zone
         * @param {?} resizable
         */
        function ResizeHandleDirective(renderer, element, zone, resizable) {
          _classCallCheck(this, ResizeHandleDirective);

          this.renderer = renderer;
          this.element = element;
          this.zone = zone;
          this.resizable = resizable;
          /**
           * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on
           */

          this.resizeEdges = {};
          this.eventListeners = {};
        }
        /**
         * @return {?}
         */


        _createClass(ResizeHandleDirective, [{
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.unsubscribeEventListeners();
          }
          /**
           * @hidden
           * @param {?} event
           * @param {?} clientX
           * @param {?} clientY
           * @return {?}
           */

        }, {
          key: "onMousedown",
          value: function onMousedown(event, clientX, clientY) {
            var _this33 = this;

            event.preventDefault();
            this.zone.runOutsideAngular(function () {
              if (!_this33.eventListeners.touchmove) {
                _this33.eventListeners.touchmove = _this33.renderer.listen(_this33.element.nativeElement, 'touchmove', function (touchMoveEvent) {
                  _this33.onMousemove(touchMoveEvent, touchMoveEvent.targetTouches[0].clientX, touchMoveEvent.targetTouches[0].clientY);
                });
              }

              if (!_this33.eventListeners.mousemove) {
                _this33.eventListeners.mousemove = _this33.renderer.listen(_this33.element.nativeElement, 'mousemove', function (mouseMoveEvent) {
                  _this33.onMousemove(mouseMoveEvent, mouseMoveEvent.clientX, mouseMoveEvent.clientY);
                });
              }

              _this33.resizable.mousedown.next({
                clientX: clientX,
                clientY: clientY,
                edges: _this33.resizeEdges
              });
            });
          }
          /**
           * @hidden
           * @param {?} clientX
           * @param {?} clientY
           * @return {?}
           */

        }, {
          key: "onMouseup",
          value: function onMouseup(clientX, clientY) {
            var _this34 = this;

            this.zone.runOutsideAngular(function () {
              _this34.unsubscribeEventListeners();

              _this34.resizable.mouseup.next({
                clientX: clientX,
                clientY: clientY,
                edges: _this34.resizeEdges
              });
            });
          }
          /**
           * @private
           * @param {?} event
           * @param {?} clientX
           * @param {?} clientY
           * @return {?}
           */

        }, {
          key: "onMousemove",
          value: function onMousemove(event, clientX, clientY) {
            this.resizable.mousemove.next({
              clientX: clientX,
              clientY: clientY,
              edges: this.resizeEdges,
              event: event
            });
          }
          /**
           * @private
           * @return {?}
           */

        }, {
          key: "unsubscribeEventListeners",
          value: function unsubscribeEventListeners() {
            var _this35 = this;

            Object.keys(this.eventListeners).forEach(function (type) {
              /** @type {?} */
              _this35.eventListeners[type]();

              delete _this35.eventListeners[type];
            });
          }
        }]);

        return ResizeHandleDirective;
      }();

      ResizeHandleDirective.decorators = [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
        args: [{
          selector: '[mwlResizeHandle]'
        }]
      }];
      /** @nocollapse */

      ResizeHandleDirective.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
        }, {
          type: ResizableDirective
        }];
      };

      ResizeHandleDirective.propDecorators = {
        resizeEdges: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        onMousedown: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
          args: ['touchstart', ['$event', '$event.touches[0].clientX', '$event.touches[0].clientY']]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
          args: ['mousedown', ['$event', '$event.clientX', '$event.clientY']]
        }],
        onMouseup: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
          args: ['touchend', ['$event.changedTouches[0].clientX', '$event.changedTouches[0].clientY']]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
          args: ['touchcancel', ['$event.changedTouches[0].clientX', '$event.changedTouches[0].clientY']]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
          args: ['mouseup', ['$event.clientX', '$event.clientY']]
        }]
      };
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      var ResizableModule = function ResizableModule() {
        _classCallCheck(this, ResizableModule);
      };

      ResizableModule.decorators = [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgModule"],
        args: [{
          declarations: [ResizableDirective, ResizeHandleDirective],
          exports: [ResizableDirective, ResizeHandleDirective]
        }]
      }];
      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */

      /**
       * @fileoverview added by tsickle
       * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
       */
      //# sourceMappingURL=angular-resizable-element.js.map

      /***/
    },

    /***/
    "yzsd":
    /*!*******************************************************!*\
      !*** ./node_modules/date-fns/esm/isSameHour/index.js ***!
      \*******************************************************/

    /*! exports provided: default */

    /***/
    function yzsd(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isSameHour;
      });
      /* harmony import */


      var _startOfHour_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../startOfHour/index.js */
      "CxvL");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isSameHour
       * @category Hour Helpers
       * @summary Are the given dates in the same hour?
       *
       * @description
       * Are the given dates in the same hour?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to check
       * @param {Date|Number} dateRight - the second date to check
       * @returns {Boolean} the dates are in the same hour
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?
       * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))
       * //=> true
       */


      function isSameHour(dirtyDateLeft, dirtyDateRight) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeftStartOfHour = Object(_startOfHour_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
        var dateRightStartOfHour = Object(_startOfHour_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
        return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();
      }
      /***/

    },

    /***/
    "zHMj":
    /*!****************************************************!*\
      !*** ./node_modules/date-fns/esm/isEqual/index.js ***!
      \****************************************************/

    /*! exports provided: default */

    /***/
    function zHMj(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return isEqual;
      });
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name isEqual
       * @category Common Helpers
       * @summary Are the given dates equal?
       *
       * @description
       * Are the given dates equal?
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} dateLeft - the first date to compare
       * @param {Date|Number} dateRight - the second date to compare
       * @returns {Boolean} the dates are equal
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
       * var result = isEqual(
       *   new Date(2014, 6, 2, 6, 30, 45, 0),
       *   new Date(2014, 6, 2, 6, 30, 45, 500)
       * )
       * //=> false
       */


      function isEqual(dirtyLeftDate, dirtyRightDate) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
        var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyLeftDate);
        var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyRightDate);
        return dateLeft.getTime() === dateRight.getTime();
      }
      /***/

    },

    /***/
    "zMQz":
    /*!**************************************************************************!*\
      !*** ./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js ***!
      \**************************************************************************/

    /*! exports provided: default */

    /***/
    function zMQz(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return buildFormatLongFn;
      });

      function buildFormatLongFn(args) {
        return function (dirtyOptions) {
          var options = dirtyOptions || {};
          var width = options.width ? String(options.width) : args.defaultWidth;
          var format = args.formats[width] || args.formats[args.defaultWidth];
          return format;
        };
      }
      /***/

    },

    /***/
    "zN97":
    /*!************************************************************************!*\
      !*** ./src/app/modules/comercial/tid-software/tid-software.service.ts ***!
      \************************************************************************/

    /*! exports provided: ComercialTidSoftwareService */

    /***/
    function zN97(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ComercialTidSoftwareService", function () {
        return ComercialTidSoftwareService;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common/http */
      "IheW");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! rxjs */
      "qCKp");

      var ComercialTidSoftwareService = /*#__PURE__*/function () {
        function ComercialTidSoftwareService(http) {
          _classCallCheck(this, ComercialTidSoftwareService);

          this.http = http;
          this.API = "https://crm360.monterrey.com.bo/api/comercial/tid-software";
        }

        _createClass(ComercialTidSoftwareService, [{
          key: "loadDependencies",
          value: function loadDependencies() {
            var empresas = this.getEmpresas('vendas');
            var linhas = this.getLinhas();
            var modulosVendas = this.getModulosVendas();
            var modulosProducaoTela = this.getModulosProducaoTela();
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["forkJoin"])([empresas, linhas, modulosVendas, modulosProducaoTela]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(2));
          }
        }, {
          key: "getEmpresas",
          value: function getEmpresas(acao) {
            return this.http.get("".concat(this.API, "/empresas/").concat(acao)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(2));
          }
        }, {
          key: "getLinhas",
          value: function getLinhas() {
            return this.http.get("".concat(this.API, "/linhas")).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(2));
          }
        }, {
          key: "getModulosVendas",
          value: function getModulosVendas() {
            return this.http.get("".concat(this.API, "/modulos/vendas")).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(2));
          }
        }, {
          key: "getModulosProducaoTela",
          value: function getModulosProducaoTela() {
            return this.http.get("".concat(this.API, "/modulos/producao-tela")).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(2));
          }
        }, {
          key: "postGerarAcesso",
          value: function postGerarAcesso(data) {
            return this.http.post("".concat(this.API, "/gerar-acesso"), data).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(2));
          }
        }]);

        return ComercialTidSoftwareService;
      }();

      ComercialTidSoftwareService.ctorParameters = function () {
        return [{
          type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]
        }];
      };

      ComercialTidSoftwareService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])], ComercialTidSoftwareService);
      /***/
    },

    /***/
    "zWh8":
    /*!**************************************************************!*\
      !*** ./node_modules/date-fns/esm/_lib/setUTCISODay/index.js ***!
      \**************************************************************/

    /*! exports provided: default */

    /***/
    function zWh8(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return setUTCISODay;
      });
      /* harmony import */


      var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../../toDate/index.js */
      "/Tr7");
      /* harmony import */


      var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../requiredArgs/index.js */
      "jIYg"); // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376


      function setUTCISODay(dirtyDate, dirtyDay) {
        Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var day = Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDay);

        if (day % 7 === 0) {
          day = day - 7;
        }

        var weekStartsOn = 1;
        var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
        var currentDay = date.getUTCDay();
        var remainder = day % 7;
        var dayIndex = (remainder + 7) % 7;
        var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
        date.setUTCDate(date.getUTCDate() + diff);
        return date;
      }
      /***/

    },

    /***/
    "zbbA":
    /*!*****************************************************!*\
      !*** ./node_modules/date-fns/esm/addYears/index.js ***!
      \*****************************************************/

    /*! exports provided: default */

    /***/
    function zbbA(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "default", function () {
        return addYears;
      });
      /* harmony import */


      var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../_lib/toInteger/index.js */
      "/h9T");
      /* harmony import */


      var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ../addMonths/index.js */
      "dLU1");
      /* harmony import */


      var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../_lib/requiredArgs/index.js */
      "jIYg");
      /**
       * @name addYears
       * @category Year Helpers
       * @summary Add the specified number of years to the given date.
       *
       * @description
       * Add the specified number of years to the given date.
       *
       * ### v2.0.0 breaking changes:
       *
       * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
       *
       * @param {Date|Number} date - the date to be changed
       * @param {Number} amount - the amount of years to be added
       * @returns {Date} the new date with the years added
       * @throws {TypeError} 2 arguments required
       *
       * @example
       * // Add 5 years to 1 September 2014:
       * var result = addYears(new Date(2014, 8, 1), 5)
       * //=> Sun Sep 01 2019 00:00:00
       */


      function addYears(dirtyDate, dirtyAmount) {
        Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
        var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
        return Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, amount * 12);
      }
      /***/

    },

    /***/
    "zwY0":
    /*!**************************************************!*\
      !*** ./node_modules/flatpickr/dist/flatpickr.js ***!
      \**************************************************/

    /*! no static exports found */

    /***/
    function zwY0(module, exports, __webpack_require__) {
      /* flatpickr v4.6.3, @license MIT */
      (function (global, factory) {
        true ? module.exports = factory() : undefined;
      })(this, function () {
        'use strict';
        /*! *****************************************************************************
        Copyright (c) Microsoft Corporation. All rights reserved.
        Licensed under the Apache License, Version 2.0 (the "License"); you may not use
        this file except in compliance with the License. You may obtain a copy of the
        License at http://www.apache.org/licenses/LICENSE-2.0
          THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
        KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
        WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
        MERCHANTABLITY OR NON-INFRINGEMENT.
          See the Apache Version 2.0 License for specific language governing permissions
        and limitations under the License.
        ***************************************************************************** */

        var _assign = function __assign() {
          _assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
              s = arguments[i];

              for (var p in s) {
                if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
              }
            }

            return t;
          };

          return _assign.apply(this, arguments);
        };

        var HOOKS = ["onChange", "onClose", "onDayCreate", "onDestroy", "onKeyDown", "onMonthChange", "onOpen", "onParseConfig", "onReady", "onValueUpdate", "onYearChange", "onPreCalendarPosition"];
        var defaults = {
          _disable: [],
          _enable: [],
          allowInput: false,
          altFormat: "F j, Y",
          altInput: false,
          altInputClass: "form-control input",
          animate: typeof window === "object" && window.navigator.userAgent.indexOf("MSIE") === -1,
          ariaDateFormat: "F j, Y",
          clickOpens: true,
          closeOnSelect: true,
          conjunction: ", ",
          dateFormat: "Y-m-d",
          defaultHour: 12,
          defaultMinute: 0,
          defaultSeconds: 0,
          disable: [],
          disableMobile: false,
          enable: [],
          enableSeconds: false,
          enableTime: false,
          errorHandler: function errorHandler(err) {
            return typeof console !== "undefined" && console.warn(err);
          },
          getWeek: function getWeek(givenDate) {
            var date = new Date(givenDate.getTime());
            date.setHours(0, 0, 0, 0); // Thursday in current week decides the year.

            date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7); // January 4 is always in week 1.

            var week1 = new Date(date.getFullYear(), 0, 4); // Adjust to Thursday in week 1 and count number of weeks from date to week1.

            return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);
          },
          hourIncrement: 1,
          ignoredFocusElements: [],
          inline: false,
          locale: "default",
          minuteIncrement: 5,
          mode: "single",
          monthSelectorType: "dropdown",
          nextArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",
          noCalendar: false,
          now: new Date(),
          onChange: [],
          onClose: [],
          onDayCreate: [],
          onDestroy: [],
          onKeyDown: [],
          onMonthChange: [],
          onOpen: [],
          onParseConfig: [],
          onReady: [],
          onValueUpdate: [],
          onYearChange: [],
          onPreCalendarPosition: [],
          plugins: [],
          position: "auto",
          positionElement: undefined,
          prevArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",
          shorthandCurrentMonth: false,
          showMonths: 1,
          "static": false,
          time_24hr: false,
          weekNumbers: false,
          wrap: false
        };
        var english = {
          weekdays: {
            shorthand: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            longhand: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
          },
          months: {
            shorthand: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            longhand: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
          },
          daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
          firstDayOfWeek: 0,
          ordinal: function ordinal(nth) {
            var s = nth % 100;
            if (s > 3 && s < 21) return "th";

            switch (s % 10) {
              case 1:
                return "st";

              case 2:
                return "nd";

              case 3:
                return "rd";

              default:
                return "th";
            }
          },
          rangeSeparator: " to ",
          weekAbbreviation: "Wk",
          scrollTitle: "Scroll to increment",
          toggleTitle: "Click to toggle",
          amPM: ["AM", "PM"],
          yearAriaLabel: "Year",
          hourAriaLabel: "Hour",
          minuteAriaLabel: "Minute",
          time_24hr: false
        };

        var pad = function pad(number) {
          return ("0" + number).slice(-2);
        };

        var _int = function _int(bool) {
          return bool === true ? 1 : 0;
        };
        /* istanbul ignore next */


        function debounce(func, wait, immediate) {
          if (immediate === void 0) {
            immediate = false;
          }

          var timeout;
          return function () {
            var context = this,
                args = arguments;
            timeout !== null && clearTimeout(timeout);
            timeout = window.setTimeout(function () {
              timeout = null;
              if (!immediate) func.apply(context, args);
            }, wait);
            if (immediate && !timeout) func.apply(context, args);
          };
        }

        var arrayify = function arrayify(obj) {
          return obj instanceof Array ? obj : [obj];
        };

        function toggleClass(elem, className, bool) {
          if (bool === true) return elem.classList.add(className);
          elem.classList.remove(className);
        }

        function createElement(tag, className, content) {
          var e = window.document.createElement(tag);
          className = className || "";
          content = content || "";
          e.className = className;
          if (content !== undefined) e.textContent = content;
          return e;
        }

        function clearNode(node) {
          while (node.firstChild) {
            node.removeChild(node.firstChild);
          }
        }

        function findParent(node, condition) {
          if (condition(node)) return node;else if (node.parentNode) return findParent(node.parentNode, condition);
          return undefined; // nothing found
        }

        function createNumberInput(inputClassName, opts) {
          var wrapper = createElement("div", "numInputWrapper"),
              numInput = createElement("input", "numInput " + inputClassName),
              arrowUp = createElement("span", "arrowUp"),
              arrowDown = createElement("span", "arrowDown");

          if (navigator.userAgent.indexOf("MSIE 9.0") === -1) {
            numInput.type = "number";
          } else {
            numInput.type = "text";
            numInput.pattern = "\\d*";
          }

          if (opts !== undefined) for (var key in opts) {
            numInput.setAttribute(key, opts[key]);
          }
          wrapper.appendChild(numInput);
          wrapper.appendChild(arrowUp);
          wrapper.appendChild(arrowDown);
          return wrapper;
        }

        function getEventTarget(event) {
          if (typeof event.composedPath === "function") {
            var path = event.composedPath();
            return path[0];
          }

          return event.target;
        }

        var doNothing = function doNothing() {
          return undefined;
        };

        var monthToStr = function monthToStr(monthNumber, shorthand, locale) {
          return locale.months[shorthand ? "shorthand" : "longhand"][monthNumber];
        };

        var revFormat = {
          D: doNothing,
          F: function F(dateObj, monthName, locale) {
            dateObj.setMonth(locale.months.longhand.indexOf(monthName));
          },
          G: function G(dateObj, hour) {
            dateObj.setHours(parseFloat(hour));
          },
          H: function H(dateObj, hour) {
            dateObj.setHours(parseFloat(hour));
          },
          J: function J(dateObj, day) {
            dateObj.setDate(parseFloat(day));
          },
          K: function K(dateObj, amPM, locale) {
            dateObj.setHours(dateObj.getHours() % 12 + 12 * _int(new RegExp(locale.amPM[1], "i").test(amPM)));
          },
          M: function M(dateObj, shortMonth, locale) {
            dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));
          },
          S: function S(dateObj, seconds) {
            dateObj.setSeconds(parseFloat(seconds));
          },
          U: function U(_, unixSeconds) {
            return new Date(parseFloat(unixSeconds) * 1000);
          },
          W: function W(dateObj, weekNum, locale) {
            var weekNumber = parseInt(weekNum);
            var date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);
            date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);
            return date;
          },
          Y: function Y(dateObj, year) {
            dateObj.setFullYear(parseFloat(year));
          },
          Z: function Z(_, ISODate) {
            return new Date(ISODate);
          },
          d: function d(dateObj, day) {
            dateObj.setDate(parseFloat(day));
          },
          h: function h(dateObj, hour) {
            dateObj.setHours(parseFloat(hour));
          },
          i: function i(dateObj, minutes) {
            dateObj.setMinutes(parseFloat(minutes));
          },
          j: function j(dateObj, day) {
            dateObj.setDate(parseFloat(day));
          },
          l: doNothing,
          m: function m(dateObj, month) {
            dateObj.setMonth(parseFloat(month) - 1);
          },
          n: function n(dateObj, month) {
            dateObj.setMonth(parseFloat(month) - 1);
          },
          s: function s(dateObj, seconds) {
            dateObj.setSeconds(parseFloat(seconds));
          },
          u: function u(_, unixMillSeconds) {
            return new Date(parseFloat(unixMillSeconds));
          },
          w: doNothing,
          y: function y(dateObj, year) {
            dateObj.setFullYear(2000 + parseFloat(year));
          }
        };
        var tokenRegex = {
          D: "(\\w+)",
          F: "(\\w+)",
          G: "(\\d\\d|\\d)",
          H: "(\\d\\d|\\d)",
          J: "(\\d\\d|\\d)\\w+",
          K: "",
          M: "(\\w+)",
          S: "(\\d\\d|\\d)",
          U: "(.+)",
          W: "(\\d\\d|\\d)",
          Y: "(\\d{4})",
          Z: "(.+)",
          d: "(\\d\\d|\\d)",
          h: "(\\d\\d|\\d)",
          i: "(\\d\\d|\\d)",
          j: "(\\d\\d|\\d)",
          l: "(\\w+)",
          m: "(\\d\\d|\\d)",
          n: "(\\d\\d|\\d)",
          s: "(\\d\\d|\\d)",
          u: "(.+)",
          w: "(\\d\\d|\\d)",
          y: "(\\d{2})"
        };
        var formats = {
          // get the date in UTC
          Z: function Z(date) {
            return date.toISOString();
          },
          // weekday name, short, e.g. Thu
          D: function D(date, locale, options) {
            return locale.weekdays.shorthand[formats.w(date, locale, options)];
          },
          // full month name e.g. January
          F: function F(date, locale, options) {
            return monthToStr(formats.n(date, locale, options) - 1, false, locale);
          },
          // padded hour 1-12
          G: function G(date, locale, options) {
            return pad(formats.h(date, locale, options));
          },
          // hours with leading zero e.g. 03
          H: function H(date) {
            return pad(date.getHours());
          },
          // day (1-30) with ordinal suffix e.g. 1st, 2nd
          J: function J(date, locale) {
            return locale.ordinal !== undefined ? date.getDate() + locale.ordinal(date.getDate()) : date.getDate();
          },
          // AM/PM
          K: function K(date, locale) {
            return locale.amPM[_int(date.getHours() > 11)];
          },
          // shorthand month e.g. Jan, Sep, Oct, etc
          M: function M(date, locale) {
            return monthToStr(date.getMonth(), true, locale);
          },
          // seconds 00-59
          S: function S(date) {
            return pad(date.getSeconds());
          },
          // unix timestamp
          U: function U(date) {
            return date.getTime() / 1000;
          },
          W: function W(date, _, options) {
            return options.getWeek(date);
          },
          // full year e.g. 2016
          Y: function Y(date) {
            return date.getFullYear();
          },
          // day in month, padded (01-30)
          d: function d(date) {
            return pad(date.getDate());
          },
          // hour from 1-12 (am/pm)
          h: function h(date) {
            return date.getHours() % 12 ? date.getHours() % 12 : 12;
          },
          // minutes, padded with leading zero e.g. 09
          i: function i(date) {
            return pad(date.getMinutes());
          },
          // day in month (1-30)
          j: function j(date) {
            return date.getDate();
          },
          // weekday name, full, e.g. Thursday
          l: function l(date, locale) {
            return locale.weekdays.longhand[date.getDay()];
          },
          // padded month number (01-12)
          m: function m(date) {
            return pad(date.getMonth() + 1);
          },
          // the month number (1-12)
          n: function n(date) {
            return date.getMonth() + 1;
          },
          // seconds 0-59
          s: function s(date) {
            return date.getSeconds();
          },
          // Unix Milliseconds
          u: function u(date) {
            return date.getTime();
          },
          // number of the day of the week
          w: function w(date) {
            return date.getDay();
          },
          // last two digits of year e.g. 16 for 2016
          y: function y(date) {
            return String(date.getFullYear()).substring(2);
          }
        };

        var createDateFormatter = function createDateFormatter(_a) {
          var _b = _a.config,
              config = _b === void 0 ? defaults : _b,
              _c = _a.l10n,
              l10n = _c === void 0 ? english : _c;
          return function (dateObj, frmt, overrideLocale) {
            var locale = overrideLocale || l10n;

            if (config.formatDate !== undefined) {
              return config.formatDate(dateObj, frmt, locale);
            }

            return frmt.split("").map(function (c, i, arr) {
              return formats[c] && arr[i - 1] !== "\\" ? formats[c](dateObj, locale, config) : c !== "\\" ? c : "";
            }).join("");
          };
        };

        var createDateParser = function createDateParser(_a) {
          var _b = _a.config,
              config = _b === void 0 ? defaults : _b,
              _c = _a.l10n,
              l10n = _c === void 0 ? english : _c;
          return function (date, givenFormat, timeless, customLocale) {
            if (date !== 0 && !date) return undefined;
            var locale = customLocale || l10n;
            var parsedDate;
            var dateOrig = date;
            if (date instanceof Date) parsedDate = new Date(date.getTime());else if (typeof date !== "string" && date.toFixed !== undefined // timestamp
            ) // create a copy
              parsedDate = new Date(date);else if (typeof date === "string") {
              // date string
              var format = givenFormat || (config || defaults).dateFormat;
              var datestr = String(date).trim();

              if (datestr === "today") {
                parsedDate = new Date();
                timeless = true;
              } else if (/Z$/.test(datestr) || /GMT$/.test(datestr) // datestrings w/ timezone
              ) parsedDate = new Date(date);else if (config && config.parseDate) parsedDate = config.parseDate(date, format);else {
                parsedDate = !config || !config.noCalendar ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0) : new Date(new Date().setHours(0, 0, 0, 0));
                var matched = void 0,
                    ops = [];

                for (var i = 0, matchIndex = 0, regexStr = ""; i < format.length; i++) {
                  var token_1 = format[i];
                  var isBackSlash = token_1 === "\\";
                  var escaped = format[i - 1] === "\\" || isBackSlash;

                  if (tokenRegex[token_1] && !escaped) {
                    regexStr += tokenRegex[token_1];
                    var match = new RegExp(regexStr).exec(date);

                    if (match && (matched = true)) {
                      ops[token_1 !== "Y" ? "push" : "unshift"]({
                        fn: revFormat[token_1],
                        val: match[++matchIndex]
                      });
                    }
                  } else if (!isBackSlash) regexStr += "."; // don't really care


                  ops.forEach(function (_a) {
                    var fn = _a.fn,
                        val = _a.val;
                    return parsedDate = fn(parsedDate, val, locale) || parsedDate;
                  });
                }

                parsedDate = matched ? parsedDate : undefined;
              }
            }
            /* istanbul ignore next */

            if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {
              config.errorHandler(new Error("Invalid date provided: " + dateOrig));
              return undefined;
            }

            if (timeless === true) parsedDate.setHours(0, 0, 0, 0);
            return parsedDate;
          };
        };
        /**
         * Compute the difference in dates, measured in ms
         */


        function compareDates(date1, date2, timeless) {
          if (timeless === void 0) {
            timeless = true;
          }

          if (timeless !== false) {
            return new Date(date1.getTime()).setHours(0, 0, 0, 0) - new Date(date2.getTime()).setHours(0, 0, 0, 0);
          }

          return date1.getTime() - date2.getTime();
        }

        var isBetween = function isBetween(ts, ts1, ts2) {
          return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);
        };

        var duration = {
          DAY: 86400000
        };

        if (typeof Object.assign !== "function") {
          Object.assign = function (target) {
            var args = [];

            for (var _i = 1; _i < arguments.length; _i++) {
              args[_i - 1] = arguments[_i];
            }

            if (!target) {
              throw TypeError("Cannot convert undefined or null to object");
            }

            var _loop_1 = function _loop_1(source) {
              if (source) {
                Object.keys(source).forEach(function (key) {
                  return target[key] = source[key];
                });
              }
            };

            for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {
              var source = args_1[_a];

              _loop_1(source);
            }

            return target;
          };
        }

        var DEBOUNCED_CHANGE_MS = 300;

        function FlatpickrInstance(element, instanceConfig) {
          var self = {
            config: _assign({}, defaults, flatpickr.defaultConfig),
            l10n: english
          };
          self.parseDate = createDateParser({
            config: self.config,
            l10n: self.l10n
          });
          self._handlers = [];
          self.pluginElements = [];
          self.loadedPlugins = [];
          self._bind = bind;
          self._setHoursFromDate = setHoursFromDate;
          self._positionCalendar = positionCalendar;
          self.changeMonth = changeMonth;
          self.changeYear = changeYear;
          self.clear = clear;
          self.close = close;
          self._createElement = createElement;
          self.destroy = destroy;
          self.isEnabled = isEnabled;
          self.jumpToDate = jumpToDate;
          self.open = open;
          self.redraw = redraw;
          self.set = set;
          self.setDate = setDate;
          self.toggle = toggle;

          function setupHelperFunctions() {
            self.utils = {
              getDaysInMonth: function getDaysInMonth(month, yr) {
                if (month === void 0) {
                  month = self.currentMonth;
                }

                if (yr === void 0) {
                  yr = self.currentYear;
                }

                if (month === 1 && (yr % 4 === 0 && yr % 100 !== 0 || yr % 400 === 0)) return 29;
                return self.l10n.daysInMonth[month];
              }
            };
          }

          function init() {
            self.element = self.input = element;
            self.isOpen = false;
            parseConfig();
            setupLocale();
            setupInputs();
            setupDates();
            setupHelperFunctions();
            if (!self.isMobile) build();
            bindEvents();

            if (self.selectedDates.length || self.config.noCalendar) {
              if (self.config.enableTime) {
                setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj || self.config.minDate : undefined);
              }

              updateValue(false);
            }

            setCalendarWidth();
            self.showTimeInput = self.selectedDates.length > 0 || self.config.noCalendar;
            var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
            /* TODO: investigate this further
                       Currently, there is weird positioning behavior in safari causing pages
              to scroll up. https://github.com/chmln/flatpickr/issues/563
                       However, most browsers are not Safari and positioning is expensive when used
              in scale. https://github.com/chmln/flatpickr/issues/1096
            */

            if (!self.isMobile && isSafari) {
              positionCalendar();
            }

            triggerEvent("onReady");
          }

          function bindToInstance(fn) {
            return fn.bind(self);
          }

          function setCalendarWidth() {
            var config = self.config;
            if (config.weekNumbers === false && config.showMonths === 1) return;else if (config.noCalendar !== true) {
              window.requestAnimationFrame(function () {
                if (self.calendarContainer !== undefined) {
                  self.calendarContainer.style.visibility = "hidden";
                  self.calendarContainer.style.display = "block";
                }

                if (self.daysContainer !== undefined) {
                  var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;
                  self.daysContainer.style.width = daysWidth + "px";
                  self.calendarContainer.style.width = daysWidth + (self.weekWrapper !== undefined ? self.weekWrapper.offsetWidth : 0) + "px";
                  self.calendarContainer.style.removeProperty("visibility");
                  self.calendarContainer.style.removeProperty("display");
                }
              });
            }
          }
          /**
           * The handler for all events targeting the time inputs
           */


          function updateTime(e) {
            if (self.selectedDates.length === 0) {
              setDefaultTime();
            }

            if (e !== undefined && e.type !== "blur") {
              timeWrapper(e);
            }

            var prevValue = self._input.value;
            setHoursFromInputs();
            updateValue();

            if (self._input.value !== prevValue) {
              self._debouncedChange();
            }
          }

          function ampm2military(hour, amPM) {
            return hour % 12 + 12 * _int(amPM === self.l10n.amPM[1]);
          }

          function military2ampm(hour) {
            switch (hour % 24) {
              case 0:
              case 12:
                return 12;

              default:
                return hour % 12;
            }
          }
          /**
           * Syncs the selected date object time with user's time input
           */


          function setHoursFromInputs() {
            if (self.hourElement === undefined || self.minuteElement === undefined) return;
            var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24,
                minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60,
                seconds = self.secondElement !== undefined ? (parseInt(self.secondElement.value, 10) || 0) % 60 : 0;

            if (self.amPM !== undefined) {
              hours = ampm2military(hours, self.amPM.textContent);
            }

            var limitMinHours = self.config.minTime !== undefined || self.config.minDate && self.minDateHasTime && self.latestSelectedDateObj && compareDates(self.latestSelectedDateObj, self.config.minDate, true) === 0;
            var limitMaxHours = self.config.maxTime !== undefined || self.config.maxDate && self.maxDateHasTime && self.latestSelectedDateObj && compareDates(self.latestSelectedDateObj, self.config.maxDate, true) === 0;

            if (limitMaxHours) {
              var maxTime = self.config.maxTime !== undefined ? self.config.maxTime : self.config.maxDate;
              hours = Math.min(hours, maxTime.getHours());
              if (hours === maxTime.getHours()) minutes = Math.min(minutes, maxTime.getMinutes());
              if (minutes === maxTime.getMinutes()) seconds = Math.min(seconds, maxTime.getSeconds());
            }

            if (limitMinHours) {
              var minTime = self.config.minTime !== undefined ? self.config.minTime : self.config.minDate;
              hours = Math.max(hours, minTime.getHours());
              if (hours === minTime.getHours()) minutes = Math.max(minutes, minTime.getMinutes());
              if (minutes === minTime.getMinutes()) seconds = Math.max(seconds, minTime.getSeconds());
            }

            setHours(hours, minutes, seconds);
          }
          /**
           * Syncs time input values with a date
           */


          function setHoursFromDate(dateObj) {
            var date = dateObj || self.latestSelectedDateObj;
            if (date) setHours(date.getHours(), date.getMinutes(), date.getSeconds());
          }

          function setDefaultHours() {
            var hours = self.config.defaultHour;
            var minutes = self.config.defaultMinute;
            var seconds = self.config.defaultSeconds;

            if (self.config.minDate !== undefined) {
              var minHr = self.config.minDate.getHours();
              var minMinutes = self.config.minDate.getMinutes();
              hours = Math.max(hours, minHr);
              if (hours === minHr) minutes = Math.max(minMinutes, minutes);
              if (hours === minHr && minutes === minMinutes) seconds = self.config.minDate.getSeconds();
            }

            if (self.config.maxDate !== undefined) {
              var maxHr = self.config.maxDate.getHours();
              var maxMinutes = self.config.maxDate.getMinutes();
              hours = Math.min(hours, maxHr);
              if (hours === maxHr) minutes = Math.min(maxMinutes, minutes);
              if (hours === maxHr && minutes === maxMinutes) seconds = self.config.maxDate.getSeconds();
            }

            setHours(hours, minutes, seconds);
          }
          /**
           * Sets the hours, minutes, and optionally seconds
           * of the latest selected date object and the
           * corresponding time inputs
           * @param {Number} hours the hour. whether its military
           *                 or am-pm gets inferred from config
           * @param {Number} minutes the minutes
           * @param {Number} seconds the seconds (optional)
           */


          function setHours(hours, minutes, seconds) {
            if (self.latestSelectedDateObj !== undefined) {
              self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);
            }

            if (!self.hourElement || !self.minuteElement || self.isMobile) return;
            self.hourElement.value = pad(!self.config.time_24hr ? (12 + hours) % 12 + 12 * _int(hours % 12 === 0) : hours);
            self.minuteElement.value = pad(minutes);
            if (self.amPM !== undefined) self.amPM.textContent = self.l10n.amPM[_int(hours >= 12)];
            if (self.secondElement !== undefined) self.secondElement.value = pad(seconds);
          }
          /**
           * Handles the year input and incrementing events
           * @param {Event} event the keyup or increment event
           */


          function onYearInput(event) {
            var year = parseInt(event.target.value) + (event.delta || 0);

            if (year / 1000 > 1 || event.key === "Enter" && !/[^\d]/.test(year.toString())) {
              changeYear(year);
            }
          }
          /**
           * Essentially addEventListener + tracking
           * @param {Element} element the element to addEventListener to
           * @param {String} event the event name
           * @param {Function} handler the event handler
           */


          function bind(element, event, handler, options) {
            if (event instanceof Array) return event.forEach(function (ev) {
              return bind(element, ev, handler, options);
            });
            if (element instanceof Array) return element.forEach(function (el) {
              return bind(el, event, handler, options);
            });
            element.addEventListener(event, handler, options);

            self._handlers.push({
              element: element,
              event: event,
              handler: handler,
              options: options
            });
          }
          /**
           * A mousedown handler which mimics click.
           * Minimizes latency, since we don't need to wait for mouseup in most cases.
           * Also, avoids handling right clicks.
           *
           * @param {Function} handler the event handler
           */


          function onClick(handler) {
            return function (evt) {
              evt.which === 1 && handler(evt);
            };
          }

          function triggerChange() {
            triggerEvent("onChange");
          }
          /**
           * Adds all the necessary event listeners
           */


          function bindEvents() {
            if (self.config.wrap) {
              ["open", "close", "toggle", "clear"].forEach(function (evt) {
                Array.prototype.forEach.call(self.element.querySelectorAll("[data-" + evt + "]"), function (el) {
                  return bind(el, "click", self[evt]);
                });
              });
            }

            if (self.isMobile) {
              setupMobile();
              return;
            }

            var debouncedResize = debounce(onResize, 50);
            self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);
            if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent)) bind(self.daysContainer, "mouseover", function (e) {
              if (self.config.mode === "range") onMouseOver(e.target);
            });
            bind(window.document.body, "keydown", onKeyDown);
            if (!self.config.inline && !self.config["static"]) bind(window, "resize", debouncedResize);
            if (window.ontouchstart !== undefined) bind(window.document, "touchstart", documentClick);else bind(window.document, "mousedown", onClick(documentClick));
            bind(window.document, "focus", documentClick, {
              capture: true
            });

            if (self.config.clickOpens === true) {
              bind(self._input, "focus", self.open);
              bind(self._input, "mousedown", onClick(self.open));
            }

            if (self.daysContainer !== undefined) {
              bind(self.monthNav, "mousedown", onClick(onMonthNavClick));
              bind(self.monthNav, ["keyup", "increment"], onYearInput);
              bind(self.daysContainer, "mousedown", onClick(selectDate));
            }

            if (self.timeContainer !== undefined && self.minuteElement !== undefined && self.hourElement !== undefined) {
              var selText = function selText(e) {
                return e.target.select();
              };

              bind(self.timeContainer, ["increment"], updateTime);
              bind(self.timeContainer, "blur", updateTime, {
                capture: true
              });
              bind(self.timeContainer, "mousedown", onClick(timeIncrement));
              bind([self.hourElement, self.minuteElement], ["focus", "click"], selText);
              if (self.secondElement !== undefined) bind(self.secondElement, "focus", function () {
                return self.secondElement && self.secondElement.select();
              });

              if (self.amPM !== undefined) {
                bind(self.amPM, "mousedown", onClick(function (e) {
                  updateTime(e);
                  triggerChange();
                }));
              }
            }
          }
          /**
           * Set the calendar view to a particular date.
           * @param {Date} jumpDate the date to set the view to
           * @param {boolean} triggerChange if change events should be triggered
           */


          function jumpToDate(jumpDate, triggerChange) {
            var jumpTo = jumpDate !== undefined ? self.parseDate(jumpDate) : self.latestSelectedDateObj || (self.config.minDate && self.config.minDate > self.now ? self.config.minDate : self.config.maxDate && self.config.maxDate < self.now ? self.config.maxDate : self.now);
            var oldYear = self.currentYear;
            var oldMonth = self.currentMonth;

            try {
              if (jumpTo !== undefined) {
                self.currentYear = jumpTo.getFullYear();
                self.currentMonth = jumpTo.getMonth();
              }
            } catch (e) {
              /* istanbul ignore next */
              e.message = "Invalid date supplied: " + jumpTo;
              self.config.errorHandler(e);
            }

            if (triggerChange && self.currentYear !== oldYear) {
              triggerEvent("onYearChange");
              buildMonthSwitch();
            }

            if (triggerChange && (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {
              triggerEvent("onMonthChange");
            }

            self.redraw();
          }
          /**
           * The up/down arrow handler for time inputs
           * @param {Event} e the click event
           */


          function timeIncrement(e) {
            if (~e.target.className.indexOf("arrow")) incrementNumInput(e, e.target.classList.contains("arrowUp") ? 1 : -1);
          }
          /**
           * Increments/decrements the value of input associ-
           * ated with the up/down arrow by dispatching an
           * "increment" event on the input.
           *
           * @param {Event} e the click event
           * @param {Number} delta the diff (usually 1 or -1)
           * @param {Element} inputElem the input element
           */


          function incrementNumInput(e, delta, inputElem) {
            var target = e && e.target;
            var input = inputElem || target && target.parentNode && target.parentNode.firstChild;
            var event = createEvent("increment");
            event.delta = delta;
            input && input.dispatchEvent(event);
          }

          function build() {
            var fragment = window.document.createDocumentFragment();
            self.calendarContainer = createElement("div", "flatpickr-calendar");
            self.calendarContainer.tabIndex = -1;

            if (!self.config.noCalendar) {
              fragment.appendChild(buildMonthNav());
              self.innerContainer = createElement("div", "flatpickr-innerContainer");

              if (self.config.weekNumbers) {
                var _a = buildWeeks(),
                    weekWrapper = _a.weekWrapper,
                    weekNumbers = _a.weekNumbers;

                self.innerContainer.appendChild(weekWrapper);
                self.weekNumbers = weekNumbers;
                self.weekWrapper = weekWrapper;
              }

              self.rContainer = createElement("div", "flatpickr-rContainer");
              self.rContainer.appendChild(buildWeekdays());

              if (!self.daysContainer) {
                self.daysContainer = createElement("div", "flatpickr-days");
                self.daysContainer.tabIndex = -1;
              }

              buildDays();
              self.rContainer.appendChild(self.daysContainer);
              self.innerContainer.appendChild(self.rContainer);
              fragment.appendChild(self.innerContainer);
            }

            if (self.config.enableTime) {
              fragment.appendChild(buildTime());
            }

            toggleClass(self.calendarContainer, "rangeMode", self.config.mode === "range");
            toggleClass(self.calendarContainer, "animate", self.config.animate === true);
            toggleClass(self.calendarContainer, "multiMonth", self.config.showMonths > 1);
            self.calendarContainer.appendChild(fragment);
            var customAppend = self.config.appendTo !== undefined && self.config.appendTo.nodeType !== undefined;

            if (self.config.inline || self.config["static"]) {
              self.calendarContainer.classList.add(self.config.inline ? "inline" : "static");

              if (self.config.inline) {
                if (!customAppend && self.element.parentNode) self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);else if (self.config.appendTo !== undefined) self.config.appendTo.appendChild(self.calendarContainer);
              }

              if (self.config["static"]) {
                var wrapper = createElement("div", "flatpickr-wrapper");
                if (self.element.parentNode) self.element.parentNode.insertBefore(wrapper, self.element);
                wrapper.appendChild(self.element);
                if (self.altInput) wrapper.appendChild(self.altInput);
                wrapper.appendChild(self.calendarContainer);
              }
            }

            if (!self.config["static"] && !self.config.inline) (self.config.appendTo !== undefined ? self.config.appendTo : window.document.body).appendChild(self.calendarContainer);
          }

          function createDay(className, date, dayNumber, i) {
            var dateIsEnabled = isEnabled(date, true),
                dayElement = createElement("span", "flatpickr-day " + className, date.getDate().toString());
            dayElement.dateObj = date;
            dayElement.$i = i;
            dayElement.setAttribute("aria-label", self.formatDate(date, self.config.ariaDateFormat));

            if (className.indexOf("hidden") === -1 && compareDates(date, self.now) === 0) {
              self.todayDateElem = dayElement;
              dayElement.classList.add("today");
              dayElement.setAttribute("aria-current", "date");
            }

            if (dateIsEnabled) {
              dayElement.tabIndex = -1;

              if (isDateSelected(date)) {
                dayElement.classList.add("selected");
                self.selectedDateElem = dayElement;

                if (self.config.mode === "range") {
                  toggleClass(dayElement, "startRange", self.selectedDates[0] && compareDates(date, self.selectedDates[0], true) === 0);
                  toggleClass(dayElement, "endRange", self.selectedDates[1] && compareDates(date, self.selectedDates[1], true) === 0);
                  if (className === "nextMonthDay") dayElement.classList.add("inRange");
                }
              }
            } else {
              dayElement.classList.add("flatpickr-disabled");
            }

            if (self.config.mode === "range") {
              if (isDateInRange(date) && !isDateSelected(date)) dayElement.classList.add("inRange");
            }

            if (self.weekNumbers && self.config.showMonths === 1 && className !== "prevMonthDay" && dayNumber % 7 === 1) {
              self.weekNumbers.insertAdjacentHTML("beforeend", "<span class='flatpickr-day'>" + self.config.getWeek(date) + "</span>");
            }

            triggerEvent("onDayCreate", dayElement);
            return dayElement;
          }

          function focusOnDayElem(targetNode) {
            targetNode.focus();
            if (self.config.mode === "range") onMouseOver(targetNode);
          }

          function getFirstAvailableDay(delta) {
            var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;
            var endMonth = delta > 0 ? self.config.showMonths : -1;

            for (var m = startMonth; m != endMonth; m += delta) {
              var month = self.daysContainer.children[m];
              var startIndex = delta > 0 ? 0 : month.children.length - 1;
              var endIndex = delta > 0 ? month.children.length : -1;

              for (var i = startIndex; i != endIndex; i += delta) {
                var c = month.children[i];
                if (c.className.indexOf("hidden") === -1 && isEnabled(c.dateObj)) return c;
              }
            }

            return undefined;
          }

          function getNextAvailableDay(current, delta) {
            var givenMonth = current.className.indexOf("Month") === -1 ? current.dateObj.getMonth() : self.currentMonth;
            var endMonth = delta > 0 ? self.config.showMonths : -1;
            var loopDelta = delta > 0 ? 1 : -1;

            for (var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {
              var month = self.daysContainer.children[m];
              var startIndex = givenMonth - self.currentMonth === m ? current.$i + delta : delta < 0 ? month.children.length - 1 : 0;
              var numMonthDays = month.children.length;

              for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {
                var c = month.children[i];
                if (c.className.indexOf("hidden") === -1 && isEnabled(c.dateObj) && Math.abs(current.$i - i) >= Math.abs(delta)) return focusOnDayElem(c);
              }
            }

            self.changeMonth(loopDelta);
            focusOnDay(getFirstAvailableDay(loopDelta), 0);
            return undefined;
          }

          function focusOnDay(current, offset) {
            var dayFocused = isInView(document.activeElement || document.body);
            var startElem = current !== undefined ? current : dayFocused ? document.activeElement : self.selectedDateElem !== undefined && isInView(self.selectedDateElem) ? self.selectedDateElem : self.todayDateElem !== undefined && isInView(self.todayDateElem) ? self.todayDateElem : getFirstAvailableDay(offset > 0 ? 1 : -1);
            if (startElem === undefined) return self._input.focus();
            if (!dayFocused) return focusOnDayElem(startElem);
            getNextAvailableDay(startElem, offset);
          }

          function buildMonthDays(year, month) {
            var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;
            var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12);
            var daysInMonth = self.utils.getDaysInMonth(month),
                days = window.document.createDocumentFragment(),
                isMultiMonth = self.config.showMonths > 1,
                prevMonthDayClass = isMultiMonth ? "prevMonthDay hidden" : "prevMonthDay",
                nextMonthDayClass = isMultiMonth ? "nextMonthDay hidden" : "nextMonthDay";
            var dayNumber = prevMonthDays + 1 - firstOfMonth,
                dayIndex = 0; // prepend days from the ending of previous month

            for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {
              days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));
            } // Start at 1 since there is no 0th day


            for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {
              days.appendChild(createDay("", new Date(year, month, dayNumber), dayNumber, dayIndex));
            } // append days from the next month


            for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth && (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {
              days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));
            } //updateNavigationCurrentMonth();


            var dayContainer = createElement("div", "dayContainer");
            dayContainer.appendChild(days);
            return dayContainer;
          }

          function buildDays() {
            if (self.daysContainer === undefined) {
              return;
            }

            clearNode(self.daysContainer); // TODO: week numbers for each month

            if (self.weekNumbers) clearNode(self.weekNumbers);
            var frag = document.createDocumentFragment();

            for (var i = 0; i < self.config.showMonths; i++) {
              var d = new Date(self.currentYear, self.currentMonth, 1);
              d.setMonth(self.currentMonth + i);
              frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));
            }

            self.daysContainer.appendChild(frag);
            self.days = self.daysContainer.firstChild;

            if (self.config.mode === "range" && self.selectedDates.length === 1) {
              onMouseOver();
            }
          }

          function buildMonthSwitch() {
            if (self.config.showMonths > 1 || self.config.monthSelectorType !== "dropdown") return;

            var shouldBuildMonth = function shouldBuildMonth(month) {
              if (self.config.minDate !== undefined && self.currentYear === self.config.minDate.getFullYear() && month < self.config.minDate.getMonth()) {
                return false;
              }

              return !(self.config.maxDate !== undefined && self.currentYear === self.config.maxDate.getFullYear() && month > self.config.maxDate.getMonth());
            };

            self.monthsDropdownContainer.tabIndex = -1;
            self.monthsDropdownContainer.innerHTML = "";

            for (var i = 0; i < 12; i++) {
              if (!shouldBuildMonth(i)) continue;
              var month = createElement("option", "flatpickr-monthDropdown-month");
              month.value = new Date(self.currentYear, i).getMonth().toString();
              month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);
              month.tabIndex = -1;

              if (self.currentMonth === i) {
                month.selected = true;
              }

              self.monthsDropdownContainer.appendChild(month);
            }
          }

          function buildMonth() {
            var container = createElement("div", "flatpickr-month");
            var monthNavFragment = window.document.createDocumentFragment();
            var monthElement;

            if (self.config.showMonths > 1 || self.config.monthSelectorType === "static") {
              monthElement = createElement("span", "cur-month");
            } else {
              self.monthsDropdownContainer = createElement("select", "flatpickr-monthDropdown-months");
              bind(self.monthsDropdownContainer, "change", function (e) {
                var target = e.target;
                var selectedMonth = parseInt(target.value, 10);
                self.changeMonth(selectedMonth - self.currentMonth);
                triggerEvent("onMonthChange");
              });
              buildMonthSwitch();
              monthElement = self.monthsDropdownContainer;
            }

            var yearInput = createNumberInput("cur-year", {
              tabindex: "-1"
            });
            var yearElement = yearInput.getElementsByTagName("input")[0];
            yearElement.setAttribute("aria-label", self.l10n.yearAriaLabel);

            if (self.config.minDate) {
              yearElement.setAttribute("min", self.config.minDate.getFullYear().toString());
            }

            if (self.config.maxDate) {
              yearElement.setAttribute("max", self.config.maxDate.getFullYear().toString());
              yearElement.disabled = !!self.config.minDate && self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();
            }

            var currentMonth = createElement("div", "flatpickr-current-month");
            currentMonth.appendChild(monthElement);
            currentMonth.appendChild(yearInput);
            monthNavFragment.appendChild(currentMonth);
            container.appendChild(monthNavFragment);
            return {
              container: container,
              yearElement: yearElement,
              monthElement: monthElement
            };
          }

          function buildMonths() {
            clearNode(self.monthNav);
            self.monthNav.appendChild(self.prevMonthNav);

            if (self.config.showMonths) {
              self.yearElements = [];
              self.monthElements = [];
            }

            for (var m = self.config.showMonths; m--;) {
              var month = buildMonth();
              self.yearElements.push(month.yearElement);
              self.monthElements.push(month.monthElement);
              self.monthNav.appendChild(month.container);
            }

            self.monthNav.appendChild(self.nextMonthNav);
          }

          function buildMonthNav() {
            self.monthNav = createElement("div", "flatpickr-months");
            self.yearElements = [];
            self.monthElements = [];
            self.prevMonthNav = createElement("span", "flatpickr-prev-month");
            self.prevMonthNav.innerHTML = self.config.prevArrow;
            self.nextMonthNav = createElement("span", "flatpickr-next-month");
            self.nextMonthNav.innerHTML = self.config.nextArrow;
            buildMonths();
            Object.defineProperty(self, "_hidePrevMonthArrow", {
              get: function get() {
                return self.__hidePrevMonthArrow;
              },
              set: function set(bool) {
                if (self.__hidePrevMonthArrow !== bool) {
                  toggleClass(self.prevMonthNav, "flatpickr-disabled", bool);
                  self.__hidePrevMonthArrow = bool;
                }
              }
            });
            Object.defineProperty(self, "_hideNextMonthArrow", {
              get: function get() {
                return self.__hideNextMonthArrow;
              },
              set: function set(bool) {
                if (self.__hideNextMonthArrow !== bool) {
                  toggleClass(self.nextMonthNav, "flatpickr-disabled", bool);
                  self.__hideNextMonthArrow = bool;
                }
              }
            });
            self.currentYearElement = self.yearElements[0];
            updateNavigationCurrentMonth();
            return self.monthNav;
          }

          function buildTime() {
            self.calendarContainer.classList.add("hasTime");
            if (self.config.noCalendar) self.calendarContainer.classList.add("noCalendar");
            self.timeContainer = createElement("div", "flatpickr-time");
            self.timeContainer.tabIndex = -1;
            var separator = createElement("span", "flatpickr-time-separator", ":");
            var hourInput = createNumberInput("flatpickr-hour", {
              "aria-label": self.l10n.hourAriaLabel
            });
            self.hourElement = hourInput.getElementsByTagName("input")[0];
            var minuteInput = createNumberInput("flatpickr-minute", {
              "aria-label": self.l10n.minuteAriaLabel
            });
            self.minuteElement = minuteInput.getElementsByTagName("input")[0];
            self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;
            self.hourElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getHours() : self.config.time_24hr ? self.config.defaultHour : military2ampm(self.config.defaultHour));
            self.minuteElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getMinutes() : self.config.defaultMinute);
            self.hourElement.setAttribute("step", self.config.hourIncrement.toString());
            self.minuteElement.setAttribute("step", self.config.minuteIncrement.toString());
            self.hourElement.setAttribute("min", self.config.time_24hr ? "0" : "1");
            self.hourElement.setAttribute("max", self.config.time_24hr ? "23" : "12");
            self.minuteElement.setAttribute("min", "0");
            self.minuteElement.setAttribute("max", "59");
            self.timeContainer.appendChild(hourInput);
            self.timeContainer.appendChild(separator);
            self.timeContainer.appendChild(minuteInput);
            if (self.config.time_24hr) self.timeContainer.classList.add("time24hr");

            if (self.config.enableSeconds) {
              self.timeContainer.classList.add("hasSeconds");
              var secondInput = createNumberInput("flatpickr-second");
              self.secondElement = secondInput.getElementsByTagName("input")[0];
              self.secondElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getSeconds() : self.config.defaultSeconds);
              self.secondElement.setAttribute("step", self.minuteElement.getAttribute("step"));
              self.secondElement.setAttribute("min", "0");
              self.secondElement.setAttribute("max", "59");
              self.timeContainer.appendChild(createElement("span", "flatpickr-time-separator", ":"));
              self.timeContainer.appendChild(secondInput);
            }

            if (!self.config.time_24hr) {
              // add self.amPM if appropriate
              self.amPM = createElement("span", "flatpickr-am-pm", self.l10n.amPM[_int((self.latestSelectedDateObj ? self.hourElement.value : self.config.defaultHour) > 11)]);
              self.amPM.title = self.l10n.toggleTitle;
              self.amPM.tabIndex = -1;
              self.timeContainer.appendChild(self.amPM);
            }

            return self.timeContainer;
          }

          function buildWeekdays() {
            if (!self.weekdayContainer) self.weekdayContainer = createElement("div", "flatpickr-weekdays");else clearNode(self.weekdayContainer);

            for (var i = self.config.showMonths; i--;) {
              var container = createElement("div", "flatpickr-weekdaycontainer");
              self.weekdayContainer.appendChild(container);
            }

            updateWeekdays();
            return self.weekdayContainer;
          }

          function updateWeekdays() {
            if (!self.weekdayContainer) {
              return;
            }

            var firstDayOfWeek = self.l10n.firstDayOfWeek;
            var weekdays = self.l10n.weekdays.shorthand.slice();

            if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {
              weekdays = weekdays.splice(firstDayOfWeek, weekdays.length).concat(weekdays.splice(0, firstDayOfWeek));
            }

            for (var i = self.config.showMonths; i--;) {
              self.weekdayContainer.children[i].innerHTML = "\n      <span class='flatpickr-weekday'>\n        " + weekdays.join("</span><span class='flatpickr-weekday'>") + "\n      </span>\n      ";
            }
          }
          /* istanbul ignore next */


          function buildWeeks() {
            self.calendarContainer.classList.add("hasWeeks");
            var weekWrapper = createElement("div", "flatpickr-weekwrapper");
            weekWrapper.appendChild(createElement("span", "flatpickr-weekday", self.l10n.weekAbbreviation));
            var weekNumbers = createElement("div", "flatpickr-weeks");
            weekWrapper.appendChild(weekNumbers);
            return {
              weekWrapper: weekWrapper,
              weekNumbers: weekNumbers
            };
          }

          function changeMonth(value, isOffset) {
            if (isOffset === void 0) {
              isOffset = true;
            }

            var delta = isOffset ? value : value - self.currentMonth;
            if (delta < 0 && self._hidePrevMonthArrow === true || delta > 0 && self._hideNextMonthArrow === true) return;
            self.currentMonth += delta;

            if (self.currentMonth < 0 || self.currentMonth > 11) {
              self.currentYear += self.currentMonth > 11 ? 1 : -1;
              self.currentMonth = (self.currentMonth + 12) % 12;
              triggerEvent("onYearChange");
              buildMonthSwitch();
            }

            buildDays();
            triggerEvent("onMonthChange");
            updateNavigationCurrentMonth();
          }

          function clear(triggerChangeEvent, toInitial) {
            if (triggerChangeEvent === void 0) {
              triggerChangeEvent = true;
            }

            if (toInitial === void 0) {
              toInitial = true;
            }

            self.input.value = "";
            if (self.altInput !== undefined) self.altInput.value = "";
            if (self.mobileInput !== undefined) self.mobileInput.value = "";
            self.selectedDates = [];
            self.latestSelectedDateObj = undefined;

            if (toInitial === true) {
              self.currentYear = self._initialDate.getFullYear();
              self.currentMonth = self._initialDate.getMonth();
            }

            self.showTimeInput = false;

            if (self.config.enableTime === true) {
              setDefaultHours();
            }

            self.redraw();
            if (triggerChangeEvent) // triggerChangeEvent is true (default) or an Event
              triggerEvent("onChange");
          }

          function close() {
            self.isOpen = false;

            if (!self.isMobile) {
              if (self.calendarContainer !== undefined) {
                self.calendarContainer.classList.remove("open");
              }

              if (self._input !== undefined) {
                self._input.classList.remove("active");
              }
            }

            triggerEvent("onClose");
          }

          function destroy() {
            if (self.config !== undefined) triggerEvent("onDestroy");

            for (var i = self._handlers.length; i--;) {
              var h = self._handlers[i];
              h.element.removeEventListener(h.event, h.handler, h.options);
            }

            self._handlers = [];

            if (self.mobileInput) {
              if (self.mobileInput.parentNode) self.mobileInput.parentNode.removeChild(self.mobileInput);
              self.mobileInput = undefined;
            } else if (self.calendarContainer && self.calendarContainer.parentNode) {
              if (self.config["static"] && self.calendarContainer.parentNode) {
                var wrapper = self.calendarContainer.parentNode;
                wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);

                if (wrapper.parentNode) {
                  while (wrapper.firstChild) {
                    wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);
                  }

                  wrapper.parentNode.removeChild(wrapper);
                }
              } else self.calendarContainer.parentNode.removeChild(self.calendarContainer);
            }

            if (self.altInput) {
              self.input.type = "text";
              if (self.altInput.parentNode) self.altInput.parentNode.removeChild(self.altInput);
              delete self.altInput;
            }

            if (self.input) {
              self.input.type = self.input._type;
              self.input.classList.remove("flatpickr-input");
              self.input.removeAttribute("readonly");
              self.input.value = "";
            }

            ["_showTimeInput", "latestSelectedDateObj", "_hideNextMonthArrow", "_hidePrevMonthArrow", "__hideNextMonthArrow", "__hidePrevMonthArrow", "isMobile", "isOpen", "selectedDateElem", "minDateHasTime", "maxDateHasTime", "days", "daysContainer", "_input", "_positionElement", "innerContainer", "rContainer", "monthNav", "todayDateElem", "calendarContainer", "weekdayContainer", "prevMonthNav", "nextMonthNav", "monthsDropdownContainer", "currentMonthElement", "currentYearElement", "navigationCurrentMonth", "selectedDateElem", "config"].forEach(function (k) {
              try {
                delete self[k];
              } catch (_) {}
            });
          }

          function isCalendarElem(elem) {
            if (self.config.appendTo && self.config.appendTo.contains(elem)) return true;
            return self.calendarContainer.contains(elem);
          }

          function documentClick(e) {
            if (self.isOpen && !self.config.inline) {
              var eventTarget_1 = getEventTarget(e);
              var isCalendarElement = isCalendarElem(eventTarget_1);
              var isInput = eventTarget_1 === self.input || eventTarget_1 === self.altInput || self.element.contains(eventTarget_1) || // web components
              // e.path is not present in all browsers. circumventing typechecks
              e.path && e.path.indexOf && (~e.path.indexOf(self.input) || ~e.path.indexOf(self.altInput));
              var lostFocus = e.type === "blur" ? isInput && e.relatedTarget && !isCalendarElem(e.relatedTarget) : !isInput && !isCalendarElement && !isCalendarElem(e.relatedTarget);
              var isIgnored = !self.config.ignoredFocusElements.some(function (elem) {
                return elem.contains(eventTarget_1);
              });

              if (lostFocus && isIgnored) {
                if (self.timeContainer !== undefined && self.minuteElement !== undefined && self.hourElement !== undefined) {
                  updateTime();
                }

                self.close();

                if (self.config.mode === "range" && self.selectedDates.length === 1) {
                  self.clear(false);
                  self.redraw();
                }
              }
            }
          }

          function changeYear(newYear) {
            if (!newYear || self.config.minDate && newYear < self.config.minDate.getFullYear() || self.config.maxDate && newYear > self.config.maxDate.getFullYear()) return;
            var newYearNum = newYear,
                isNewYear = self.currentYear !== newYearNum;
            self.currentYear = newYearNum || self.currentYear;

            if (self.config.maxDate && self.currentYear === self.config.maxDate.getFullYear()) {
              self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);
            } else if (self.config.minDate && self.currentYear === self.config.minDate.getFullYear()) {
              self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);
            }

            if (isNewYear) {
              self.redraw();
              triggerEvent("onYearChange");
              buildMonthSwitch();
            }
          }

          function isEnabled(date, timeless) {
            if (timeless === void 0) {
              timeless = true;
            }

            var dateToCheck = self.parseDate(date, undefined, timeless); // timeless

            if (self.config.minDate && dateToCheck && compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0 || self.config.maxDate && dateToCheck && compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0) return false;
            if (self.config.enable.length === 0 && self.config.disable.length === 0) return true;
            if (dateToCheck === undefined) return false;
            var bool = self.config.enable.length > 0,
                array = bool ? self.config.enable : self.config.disable;

            for (var i = 0, d = void 0; i < array.length; i++) {
              d = array[i];
              if (typeof d === "function" && d(dateToCheck) // disabled by function
              ) return bool;else if (d instanceof Date && dateToCheck !== undefined && d.getTime() === dateToCheck.getTime()) // disabled by date
                return bool;else if (typeof d === "string" && dateToCheck !== undefined) {
                // disabled by date string
                var parsed = self.parseDate(d, undefined, true);
                return parsed && parsed.getTime() === dateToCheck.getTime() ? bool : !bool;
              } else if ( // disabled by range
              typeof d === "object" && dateToCheck !== undefined && d.from && d.to && dateToCheck.getTime() >= d.from.getTime() && dateToCheck.getTime() <= d.to.getTime()) return bool;
            }

            return !bool;
          }

          function isInView(elem) {
            if (self.daysContainer !== undefined) return elem.className.indexOf("hidden") === -1 && self.daysContainer.contains(elem);
            return false;
          }

          function onKeyDown(e) {
            // e.key                      e.keyCode
            // "Backspace"                        8
            // "Tab"                              9
            // "Enter"                           13
            // "Escape"     (IE "Esc")           27
            // "ArrowLeft"  (IE "Left")          37
            // "ArrowUp"    (IE "Up")            38
            // "ArrowRight" (IE "Right")         39
            // "ArrowDown"  (IE "Down")          40
            // "Delete"     (IE "Del")           46
            var isInput = e.target === self._input;
            var allowInput = self.config.allowInput;
            var allowKeydown = self.isOpen && (!allowInput || !isInput);
            var allowInlineKeydown = self.config.inline && isInput && !allowInput;

            if (e.keyCode === 13 && isInput) {
              if (allowInput) {
                self.setDate(self._input.value, true, e.target === self.altInput ? self.config.altFormat : self.config.dateFormat);
                return e.target.blur();
              } else {
                self.open();
              }
            } else if (isCalendarElem(e.target) || allowKeydown || allowInlineKeydown) {
              var isTimeObj = !!self.timeContainer && self.timeContainer.contains(e.target);

              switch (e.keyCode) {
                case 13:
                  if (isTimeObj) {
                    e.preventDefault();
                    updateTime();
                    focusAndClose();
                  } else selectDate(e);

                  break;

                case 27:
                  // escape
                  e.preventDefault();
                  focusAndClose();
                  break;

                case 8:
                case 46:
                  if (isInput && !self.config.allowInput) {
                    e.preventDefault();
                    self.clear();
                  }

                  break;

                case 37:
                case 39:
                  if (!isTimeObj && !isInput) {
                    e.preventDefault();

                    if (self.daysContainer !== undefined && (allowInput === false || document.activeElement && isInView(document.activeElement))) {
                      var delta_1 = e.keyCode === 39 ? 1 : -1;
                      if (!e.ctrlKey) focusOnDay(undefined, delta_1);else {
                        e.stopPropagation();
                        changeMonth(delta_1);
                        focusOnDay(getFirstAvailableDay(1), 0);
                      }
                    }
                  } else if (self.hourElement) self.hourElement.focus();

                  break;

                case 38:
                case 40:
                  e.preventDefault();
                  var delta = e.keyCode === 40 ? 1 : -1;

                  if (self.daysContainer && e.target.$i !== undefined || e.target === self.input || e.target === self.altInput) {
                    if (e.ctrlKey) {
                      e.stopPropagation();
                      changeYear(self.currentYear - delta);
                      focusOnDay(getFirstAvailableDay(1), 0);
                    } else if (!isTimeObj) focusOnDay(undefined, delta * 7);
                  } else if (e.target === self.currentYearElement) {
                    changeYear(self.currentYear - delta);
                  } else if (self.config.enableTime) {
                    if (!isTimeObj && self.hourElement) self.hourElement.focus();
                    updateTime(e);

                    self._debouncedChange();
                  }

                  break;

                case 9:
                  if (isTimeObj) {
                    var elems = [self.hourElement, self.minuteElement, self.secondElement, self.amPM].concat(self.pluginElements).filter(function (x) {
                      return x;
                    });
                    var i = elems.indexOf(e.target);

                    if (i !== -1) {
                      var target = elems[i + (e.shiftKey ? -1 : 1)];
                      e.preventDefault();

                      (target || self._input).focus();
                    }
                  } else if (!self.config.noCalendar && self.daysContainer && self.daysContainer.contains(e.target) && e.shiftKey) {
                    e.preventDefault();

                    self._input.focus();
                  }

                  break;

                default:
                  break;
              }
            }

            if (self.amPM !== undefined && e.target === self.amPM) {
              switch (e.key) {
                case self.l10n.amPM[0].charAt(0):
                case self.l10n.amPM[0].charAt(0).toLowerCase():
                  self.amPM.textContent = self.l10n.amPM[0];
                  setHoursFromInputs();
                  updateValue();
                  break;

                case self.l10n.amPM[1].charAt(0):
                case self.l10n.amPM[1].charAt(0).toLowerCase():
                  self.amPM.textContent = self.l10n.amPM[1];
                  setHoursFromInputs();
                  updateValue();
                  break;
              }
            }

            if (isInput || isCalendarElem(e.target)) {
              triggerEvent("onKeyDown", e);
            }
          }

          function onMouseOver(elem) {
            if (self.selectedDates.length !== 1 || elem && (!elem.classList.contains("flatpickr-day") || elem.classList.contains("flatpickr-disabled"))) return;
            var hoverDate = elem ? elem.dateObj.getTime() : self.days.firstElementChild.dateObj.getTime(),
                initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(),
                rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()),
                rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());
            var containsDisabled = false;
            var minRange = 0,
                maxRange = 0;

            for (var t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {
              if (!isEnabled(new Date(t), true)) {
                containsDisabled = containsDisabled || t > rangeStartDate && t < rangeEndDate;
                if (t < initialDate && (!minRange || t > minRange)) minRange = t;else if (t > initialDate && (!maxRange || t < maxRange)) maxRange = t;
              }
            }

            for (var m = 0; m < self.config.showMonths; m++) {
              var month = self.daysContainer.children[m];

              var _loop_1 = function _loop_1(i, l) {
                var dayElem = month.children[i],
                    date = dayElem.dateObj;
                var timestamp = date.getTime();
                var outOfRange = minRange > 0 && timestamp < minRange || maxRange > 0 && timestamp > maxRange;

                if (outOfRange) {
                  dayElem.classList.add("notAllowed");
                  ["inRange", "startRange", "endRange"].forEach(function (c) {
                    dayElem.classList.remove(c);
                  });
                  return "continue";
                } else if (containsDisabled && !outOfRange) return "continue";

                ["startRange", "inRange", "endRange", "notAllowed"].forEach(function (c) {
                  dayElem.classList.remove(c);
                });

                if (elem !== undefined) {
                  elem.classList.add(hoverDate <= self.selectedDates[0].getTime() ? "startRange" : "endRange");
                  if (initialDate < hoverDate && timestamp === initialDate) dayElem.classList.add("startRange");else if (initialDate > hoverDate && timestamp === initialDate) dayElem.classList.add("endRange");
                  if (timestamp >= minRange && (maxRange === 0 || timestamp <= maxRange) && isBetween(timestamp, initialDate, hoverDate)) dayElem.classList.add("inRange");
                }
              };

              for (var i = 0, l = month.children.length; i < l; i++) {
                _loop_1(i, l);
              }
            }
          }

          function onResize() {
            if (self.isOpen && !self.config["static"] && !self.config.inline) positionCalendar();
          }

          function setDefaultTime() {
            self.setDate(self.config.minDate !== undefined ? new Date(self.config.minDate.getTime()) : new Date(), true);
            setDefaultHours();
            updateValue();
          }

          function open(e, positionElement) {
            if (positionElement === void 0) {
              positionElement = self._positionElement;
            }

            if (self.isMobile === true) {
              if (e) {
                e.preventDefault();
                e.target && e.target.blur();
              }

              if (self.mobileInput !== undefined) {
                self.mobileInput.focus();
                self.mobileInput.click();
              }

              triggerEvent("onOpen");
              return;
            }

            if (self._input.disabled || self.config.inline) return;
            var wasOpen = self.isOpen;
            self.isOpen = true;

            if (!wasOpen) {
              self.calendarContainer.classList.add("open");

              self._input.classList.add("active");

              triggerEvent("onOpen");
              positionCalendar(positionElement);
            }

            if (self.config.enableTime === true && self.config.noCalendar === true) {
              if (self.selectedDates.length === 0) {
                setDefaultTime();
              }

              if (self.config.allowInput === false && (e === undefined || !self.timeContainer.contains(e.relatedTarget))) {
                setTimeout(function () {
                  return self.hourElement.select();
                }, 50);
              }
            }
          }

          function minMaxDateSetter(type) {
            return function (date) {
              var dateObj = self.config["_" + type + "Date"] = self.parseDate(date, self.config.dateFormat);
              var inverseDateObj = self.config["_" + (type === "min" ? "max" : "min") + "Date"];

              if (dateObj !== undefined) {
                self[type === "min" ? "minDateHasTime" : "maxDateHasTime"] = dateObj.getHours() > 0 || dateObj.getMinutes() > 0 || dateObj.getSeconds() > 0;
              }

              if (self.selectedDates) {
                self.selectedDates = self.selectedDates.filter(function (d) {
                  return isEnabled(d);
                });
                if (!self.selectedDates.length && type === "min") setHoursFromDate(dateObj);
                updateValue();
              }

              if (self.daysContainer) {
                redraw();
                if (dateObj !== undefined) self.currentYearElement[type] = dateObj.getFullYear().toString();else self.currentYearElement.removeAttribute(type);
                self.currentYearElement.disabled = !!inverseDateObj && dateObj !== undefined && inverseDateObj.getFullYear() === dateObj.getFullYear();
              }
            };
          }

          function parseConfig() {
            var boolOpts = ["wrap", "weekNumbers", "allowInput", "clickOpens", "time_24hr", "enableTime", "noCalendar", "altInput", "shorthandCurrentMonth", "inline", "static", "enableSeconds", "disableMobile"];

            var userConfig = _assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));

            var formats = {};
            self.config.parseDate = userConfig.parseDate;
            self.config.formatDate = userConfig.formatDate;
            Object.defineProperty(self.config, "enable", {
              get: function get() {
                return self.config._enable;
              },
              set: function set(dates) {
                self.config._enable = parseDateRules(dates);
              }
            });
            Object.defineProperty(self.config, "disable", {
              get: function get() {
                return self.config._disable;
              },
              set: function set(dates) {
                self.config._disable = parseDateRules(dates);
              }
            });
            var timeMode = userConfig.mode === "time";

            if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {
              var defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaults.dateFormat;
              formats.dateFormat = userConfig.noCalendar || timeMode ? "H:i" + (userConfig.enableSeconds ? ":S" : "") : defaultDateFormat + " H:i" + (userConfig.enableSeconds ? ":S" : "");
            }

            if (userConfig.altInput && (userConfig.enableTime || timeMode) && !userConfig.altFormat) {
              var defaultAltFormat = flatpickr.defaultConfig.altFormat || defaults.altFormat;
              formats.altFormat = userConfig.noCalendar || timeMode ? "h:i" + (userConfig.enableSeconds ? ":S K" : " K") : defaultAltFormat + (" h:i" + (userConfig.enableSeconds ? ":S" : "") + " K");
            }

            if (!userConfig.altInputClass) {
              self.config.altInputClass = self.input.className + " " + self.config.altInputClass;
            }

            Object.defineProperty(self.config, "minDate", {
              get: function get() {
                return self.config._minDate;
              },
              set: minMaxDateSetter("min")
            });
            Object.defineProperty(self.config, "maxDate", {
              get: function get() {
                return self.config._maxDate;
              },
              set: minMaxDateSetter("max")
            });

            var minMaxTimeSetter = function minMaxTimeSetter(type) {
              return function (val) {
                self.config[type === "min" ? "_minTime" : "_maxTime"] = self.parseDate(val, "H:i:S");
              };
            };

            Object.defineProperty(self.config, "minTime", {
              get: function get() {
                return self.config._minTime;
              },
              set: minMaxTimeSetter("min")
            });
            Object.defineProperty(self.config, "maxTime", {
              get: function get() {
                return self.config._maxTime;
              },
              set: minMaxTimeSetter("max")
            });

            if (userConfig.mode === "time") {
              self.config.noCalendar = true;
              self.config.enableTime = true;
            }

            Object.assign(self.config, formats, userConfig);

            for (var i = 0; i < boolOpts.length; i++) {
              self.config[boolOpts[i]] = self.config[boolOpts[i]] === true || self.config[boolOpts[i]] === "true";
            }

            HOOKS.filter(function (hook) {
              return self.config[hook] !== undefined;
            }).forEach(function (hook) {
              self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);
            });
            self.isMobile = !self.config.disableMobile && !self.config.inline && self.config.mode === "single" && !self.config.disable.length && !self.config.enable.length && !self.config.weekNumbers && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);

            for (var i = 0; i < self.config.plugins.length; i++) {
              var pluginConf = self.config.plugins[i](self) || {};

              for (var key in pluginConf) {
                if (HOOKS.indexOf(key) > -1) {
                  self.config[key] = arrayify(pluginConf[key]).map(bindToInstance).concat(self.config[key]);
                } else if (typeof userConfig[key] === "undefined") self.config[key] = pluginConf[key];
              }
            }

            triggerEvent("onParseConfig");
          }

          function setupLocale() {
            if (typeof self.config.locale !== "object" && typeof flatpickr.l10ns[self.config.locale] === "undefined") self.config.errorHandler(new Error("flatpickr: invalid locale " + self.config.locale));
            self.l10n = _assign({}, flatpickr.l10ns["default"], typeof self.config.locale === "object" ? self.config.locale : self.config.locale !== "default" ? flatpickr.l10ns[self.config.locale] : undefined);
            tokenRegex.K = "(" + self.l10n.amPM[0] + "|" + self.l10n.amPM[1] + "|" + self.l10n.amPM[0].toLowerCase() + "|" + self.l10n.amPM[1].toLowerCase() + ")";

            var userConfig = _assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));

            if (userConfig.time_24hr === undefined && flatpickr.defaultConfig.time_24hr === undefined) {
              self.config.time_24hr = self.l10n.time_24hr;
            }

            self.formatDate = createDateFormatter(self);
            self.parseDate = createDateParser({
              config: self.config,
              l10n: self.l10n
            });
          }

          function positionCalendar(customPositionElement) {
            if (self.calendarContainer === undefined) return;
            triggerEvent("onPreCalendarPosition");
            var positionElement = customPositionElement || self._positionElement;
            var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, function (acc, child) {
              return acc + child.offsetHeight;
            }, 0),
                calendarWidth = self.calendarContainer.offsetWidth,
                configPos = self.config.position.split(" "),
                configPosVertical = configPos[0],
                configPosHorizontal = configPos.length > 1 ? configPos[1] : null,
                inputBounds = positionElement.getBoundingClientRect(),
                distanceFromBottom = window.innerHeight - inputBounds.bottom,
                showOnTop = configPosVertical === "above" || configPosVertical !== "below" && distanceFromBottom < calendarHeight && inputBounds.top > calendarHeight;
            var top = window.pageYOffset + inputBounds.top + (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);
            toggleClass(self.calendarContainer, "arrowTop", !showOnTop);
            toggleClass(self.calendarContainer, "arrowBottom", showOnTop);
            if (self.config.inline) return;
            var left = window.pageXOffset + inputBounds.left - (configPosHorizontal != null && configPosHorizontal === "center" ? (calendarWidth - inputBounds.width) / 2 : 0);
            var right = window.document.body.offsetWidth - (window.pageXOffset + inputBounds.right);
            var rightMost = left + calendarWidth > window.document.body.offsetWidth;
            var centerMost = right + calendarWidth > window.document.body.offsetWidth;
            toggleClass(self.calendarContainer, "rightMost", rightMost);
            if (self.config["static"]) return;
            self.calendarContainer.style.top = top + "px";

            if (!rightMost) {
              self.calendarContainer.style.left = left + "px";
              self.calendarContainer.style.right = "auto";
            } else if (!centerMost) {
              self.calendarContainer.style.left = "auto";
              self.calendarContainer.style.right = right + "px";
            } else {
              var doc = document.styleSheets[0]; // some testing environments don't have css support

              if (doc === undefined) return;
              var bodyWidth = window.document.body.offsetWidth;
              var centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);
              var centerBefore = ".flatpickr-calendar.centerMost:before";
              var centerAfter = ".flatpickr-calendar.centerMost:after";
              var centerIndex = doc.cssRules.length;
              var centerStyle = "{left:" + inputBounds.left + "px;right:auto;}";
              toggleClass(self.calendarContainer, "rightMost", false);
              toggleClass(self.calendarContainer, "centerMost", true);
              doc.insertRule(centerBefore + "," + centerAfter + centerStyle, centerIndex);
              self.calendarContainer.style.left = centerLeft + "px";
              self.calendarContainer.style.right = "auto";
            }
          }

          function redraw() {
            if (self.config.noCalendar || self.isMobile) return;
            updateNavigationCurrentMonth();
            buildDays();
          }

          function focusAndClose() {
            self._input.focus();

            if (window.navigator.userAgent.indexOf("MSIE") !== -1 || navigator.msMaxTouchPoints !== undefined) {
              // hack - bugs in the way IE handles focus keeps the calendar open
              setTimeout(self.close, 0);
            } else {
              self.close();
            }
          }

          function selectDate(e) {
            e.preventDefault();
            e.stopPropagation();

            var isSelectable = function isSelectable(day) {
              return day.classList && day.classList.contains("flatpickr-day") && !day.classList.contains("flatpickr-disabled") && !day.classList.contains("notAllowed");
            };

            var t = findParent(e.target, isSelectable);
            if (t === undefined) return;
            var target = t;
            var selectedDate = self.latestSelectedDateObj = new Date(target.dateObj.getTime());
            var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth || selectedDate.getMonth() > self.currentMonth + self.config.showMonths - 1) && self.config.mode !== "range";
            self.selectedDateElem = target;
            if (self.config.mode === "single") self.selectedDates = [selectedDate];else if (self.config.mode === "multiple") {
              var selectedIndex = isDateSelected(selectedDate);
              if (selectedIndex) self.selectedDates.splice(parseInt(selectedIndex), 1);else self.selectedDates.push(selectedDate);
            } else if (self.config.mode === "range") {
              if (self.selectedDates.length === 2) {
                self.clear(false, false);
              }

              self.latestSelectedDateObj = selectedDate;
              self.selectedDates.push(selectedDate); // unless selecting same date twice, sort ascendingly

              if (compareDates(selectedDate, self.selectedDates[0], true) !== 0) self.selectedDates.sort(function (a, b) {
                return a.getTime() - b.getTime();
              });
            }
            setHoursFromInputs();

            if (shouldChangeMonth) {
              var isNewYear = self.currentYear !== selectedDate.getFullYear();
              self.currentYear = selectedDate.getFullYear();
              self.currentMonth = selectedDate.getMonth();

              if (isNewYear) {
                triggerEvent("onYearChange");
                buildMonthSwitch();
              }

              triggerEvent("onMonthChange");
            }

            updateNavigationCurrentMonth();
            buildDays();
            updateValue();
            if (self.config.enableTime) setTimeout(function () {
              return self.showTimeInput = true;
            }, 50); // maintain focus

            if (!shouldChangeMonth && self.config.mode !== "range" && self.config.showMonths === 1) focusOnDayElem(target);else if (self.selectedDateElem !== undefined && self.hourElement === undefined) {
              self.selectedDateElem && self.selectedDateElem.focus();
            }
            if (self.hourElement !== undefined) self.hourElement !== undefined && self.hourElement.focus();

            if (self.config.closeOnSelect) {
              var single = self.config.mode === "single" && !self.config.enableTime;
              var range = self.config.mode === "range" && self.selectedDates.length === 2 && !self.config.enableTime;

              if (single || range) {
                focusAndClose();
              }
            }

            triggerChange();
          }

          var CALLBACKS = {
            locale: [setupLocale, updateWeekdays],
            showMonths: [buildMonths, setCalendarWidth, buildWeekdays],
            minDate: [jumpToDate],
            maxDate: [jumpToDate]
          };

          function set(option, value) {
            if (option !== null && typeof option === "object") {
              Object.assign(self.config, option);

              for (var key in option) {
                if (CALLBACKS[key] !== undefined) CALLBACKS[key].forEach(function (x) {
                  return x();
                });
              }
            } else {
              self.config[option] = value;
              if (CALLBACKS[option] !== undefined) CALLBACKS[option].forEach(function (x) {
                return x();
              });else if (HOOKS.indexOf(option) > -1) self.config[option] = arrayify(value);
            }

            self.redraw();
            updateValue(false);
          }

          function setSelectedDate(inputDate, format) {
            var dates = [];
            if (inputDate instanceof Array) dates = inputDate.map(function (d) {
              return self.parseDate(d, format);
            });else if (inputDate instanceof Date || typeof inputDate === "number") dates = [self.parseDate(inputDate, format)];else if (typeof inputDate === "string") {
              switch (self.config.mode) {
                case "single":
                case "time":
                  dates = [self.parseDate(inputDate, format)];
                  break;

                case "multiple":
                  dates = inputDate.split(self.config.conjunction).map(function (date) {
                    return self.parseDate(date, format);
                  });
                  break;

                case "range":
                  dates = inputDate.split(self.l10n.rangeSeparator).map(function (date) {
                    return self.parseDate(date, format);
                  });
                  break;

                default:
                  break;
              }
            } else self.config.errorHandler(new Error("Invalid date supplied: " + JSON.stringify(inputDate)));
            self.selectedDates = dates.filter(function (d) {
              return d instanceof Date && isEnabled(d, false);
            });
            if (self.config.mode === "range") self.selectedDates.sort(function (a, b) {
              return a.getTime() - b.getTime();
            });
          }

          function setDate(date, triggerChange, format) {
            if (triggerChange === void 0) {
              triggerChange = false;
            }

            if (format === void 0) {
              format = self.config.dateFormat;
            }

            if (date !== 0 && !date || date instanceof Array && date.length === 0) return self.clear(triggerChange);
            setSelectedDate(date, format);
            self.showTimeInput = self.selectedDates.length > 0;
            self.latestSelectedDateObj = self.selectedDates[self.selectedDates.length - 1];
            self.redraw();
            jumpToDate();
            setHoursFromDate();

            if (self.selectedDates.length === 0) {
              self.clear(false);
            }

            updateValue(triggerChange);
            if (triggerChange) triggerEvent("onChange");
          }

          function parseDateRules(arr) {
            return arr.slice().map(function (rule) {
              if (typeof rule === "string" || typeof rule === "number" || rule instanceof Date) {
                return self.parseDate(rule, undefined, true);
              } else if (rule && typeof rule === "object" && rule.from && rule.to) return {
                from: self.parseDate(rule.from, undefined),
                to: self.parseDate(rule.to, undefined)
              };

              return rule;
            }).filter(function (x) {
              return x;
            }); // remove falsy values
          }

          function setupDates() {
            self.selectedDates = [];
            self.now = self.parseDate(self.config.now) || new Date(); // Workaround IE11 setting placeholder as the input's value

            var preloadedDate = self.config.defaultDate || ((self.input.nodeName === "INPUT" || self.input.nodeName === "TEXTAREA") && self.input.placeholder && self.input.value === self.input.placeholder ? null : self.input.value);
            if (preloadedDate) setSelectedDate(preloadedDate, self.config.dateFormat);
            self._initialDate = self.selectedDates.length > 0 ? self.selectedDates[0] : self.config.minDate && self.config.minDate.getTime() > self.now.getTime() ? self.config.minDate : self.config.maxDate && self.config.maxDate.getTime() < self.now.getTime() ? self.config.maxDate : self.now;
            self.currentYear = self._initialDate.getFullYear();
            self.currentMonth = self._initialDate.getMonth();
            if (self.selectedDates.length > 0) self.latestSelectedDateObj = self.selectedDates[0];
            if (self.config.minTime !== undefined) self.config.minTime = self.parseDate(self.config.minTime, "H:i");
            if (self.config.maxTime !== undefined) self.config.maxTime = self.parseDate(self.config.maxTime, "H:i");
            self.minDateHasTime = !!self.config.minDate && (self.config.minDate.getHours() > 0 || self.config.minDate.getMinutes() > 0 || self.config.minDate.getSeconds() > 0);
            self.maxDateHasTime = !!self.config.maxDate && (self.config.maxDate.getHours() > 0 || self.config.maxDate.getMinutes() > 0 || self.config.maxDate.getSeconds() > 0);
            Object.defineProperty(self, "showTimeInput", {
              get: function get() {
                return self._showTimeInput;
              },
              set: function set(bool) {
                self._showTimeInput = bool;
                if (self.calendarContainer) toggleClass(self.calendarContainer, "showTimeInput", bool);
                self.isOpen && positionCalendar();
              }
            });
          }

          function setupInputs() {
            self.input = self.config.wrap ? element.querySelector("[data-input]") : element;
            /* istanbul ignore next */

            if (!self.input) {
              self.config.errorHandler(new Error("Invalid input element specified"));
              return;
            } // hack: store previous type to restore it after destroy()


            self.input._type = self.input.type;
            self.input.type = "text";
            self.input.classList.add("flatpickr-input");
            self._input = self.input;

            if (self.config.altInput) {
              // replicate self.element
              self.altInput = createElement(self.input.nodeName, self.config.altInputClass);
              self._input = self.altInput;
              self.altInput.placeholder = self.input.placeholder;
              self.altInput.disabled = self.input.disabled;
              self.altInput.required = self.input.required;
              self.altInput.tabIndex = self.input.tabIndex;
              self.altInput.type = "text";
              self.input.setAttribute("type", "hidden");
              if (!self.config["static"] && self.input.parentNode) self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);
            }

            if (!self.config.allowInput) self._input.setAttribute("readonly", "readonly");
            self._positionElement = self.config.positionElement || self._input;
          }

          function setupMobile() {
            var inputType = self.config.enableTime ? self.config.noCalendar ? "time" : "datetime-local" : "date";
            self.mobileInput = createElement("input", self.input.className + " flatpickr-mobile");
            self.mobileInput.step = self.input.getAttribute("step") || "any";
            self.mobileInput.tabIndex = 1;
            self.mobileInput.type = inputType;
            self.mobileInput.disabled = self.input.disabled;
            self.mobileInput.required = self.input.required;
            self.mobileInput.placeholder = self.input.placeholder;
            self.mobileFormatStr = inputType === "datetime-local" ? "Y-m-d\\TH:i:S" : inputType === "date" ? "Y-m-d" : "H:i:S";

            if (self.selectedDates.length > 0) {
              self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);
            }

            if (self.config.minDate) self.mobileInput.min = self.formatDate(self.config.minDate, "Y-m-d");
            if (self.config.maxDate) self.mobileInput.max = self.formatDate(self.config.maxDate, "Y-m-d");
            self.input.type = "hidden";
            if (self.altInput !== undefined) self.altInput.type = "hidden";

            try {
              if (self.input.parentNode) self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);
            } catch (_a) {}

            bind(self.mobileInput, "change", function (e) {
              self.setDate(e.target.value, false, self.mobileFormatStr);
              triggerEvent("onChange");
              triggerEvent("onClose");
            });
          }

          function toggle(e) {
            if (self.isOpen === true) return self.close();
            self.open(e);
          }

          function triggerEvent(event, data) {
            // If the instance has been destroyed already, all hooks have been removed
            if (self.config === undefined) return;
            var hooks = self.config[event];

            if (hooks !== undefined && hooks.length > 0) {
              for (var i = 0; hooks[i] && i < hooks.length; i++) {
                hooks[i](self.selectedDates, self.input.value, self, data);
              }
            }

            if (event === "onChange") {
              self.input.dispatchEvent(createEvent("change")); // many front-end frameworks bind to the input event

              self.input.dispatchEvent(createEvent("input"));
            }
          }

          function createEvent(name) {
            var e = document.createEvent("Event");
            e.initEvent(name, true, true);
            return e;
          }

          function isDateSelected(date) {
            for (var i = 0; i < self.selectedDates.length; i++) {
              if (compareDates(self.selectedDates[i], date) === 0) return "" + i;
            }

            return false;
          }

          function isDateInRange(date) {
            if (self.config.mode !== "range" || self.selectedDates.length < 2) return false;
            return compareDates(date, self.selectedDates[0]) >= 0 && compareDates(date, self.selectedDates[1]) <= 0;
          }

          function updateNavigationCurrentMonth() {
            if (self.config.noCalendar || self.isMobile || !self.monthNav) return;
            self.yearElements.forEach(function (yearElement, i) {
              var d = new Date(self.currentYear, self.currentMonth, 1);
              d.setMonth(self.currentMonth + i);

              if (self.config.showMonths > 1 || self.config.monthSelectorType === "static") {
                self.monthElements[i].textContent = monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + " ";
              } else {
                self.monthsDropdownContainer.value = d.getMonth().toString();
              }

              yearElement.value = d.getFullYear().toString();
            });
            self._hidePrevMonthArrow = self.config.minDate !== undefined && (self.currentYear === self.config.minDate.getFullYear() ? self.currentMonth <= self.config.minDate.getMonth() : self.currentYear < self.config.minDate.getFullYear());
            self._hideNextMonthArrow = self.config.maxDate !== undefined && (self.currentYear === self.config.maxDate.getFullYear() ? self.currentMonth + 1 > self.config.maxDate.getMonth() : self.currentYear > self.config.maxDate.getFullYear());
          }

          function getDateStr(format) {
            return self.selectedDates.map(function (dObj) {
              return self.formatDate(dObj, format);
            }).filter(function (d, i, arr) {
              return self.config.mode !== "range" || self.config.enableTime || arr.indexOf(d) === i;
            }).join(self.config.mode !== "range" ? self.config.conjunction : self.l10n.rangeSeparator);
          }
          /**
           * Updates the values of inputs associated with the calendar
           */


          function updateValue(triggerChange) {
            if (triggerChange === void 0) {
              triggerChange = true;
            }

            if (self.mobileInput !== undefined && self.mobileFormatStr) {
              self.mobileInput.value = self.latestSelectedDateObj !== undefined ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr) : "";
            }

            self.input.value = getDateStr(self.config.dateFormat);

            if (self.altInput !== undefined) {
              self.altInput.value = getDateStr(self.config.altFormat);
            }

            if (triggerChange !== false) triggerEvent("onValueUpdate");
          }

          function onMonthNavClick(e) {
            var isPrevMonth = self.prevMonthNav.contains(e.target);
            var isNextMonth = self.nextMonthNav.contains(e.target);

            if (isPrevMonth || isNextMonth) {
              changeMonth(isPrevMonth ? -1 : 1);
            } else if (self.yearElements.indexOf(e.target) >= 0) {
              e.target.select();
            } else if (e.target.classList.contains("arrowUp")) {
              self.changeYear(self.currentYear + 1);
            } else if (e.target.classList.contains("arrowDown")) {
              self.changeYear(self.currentYear - 1);
            }
          }

          function timeWrapper(e) {
            e.preventDefault();
            var isKeyDown = e.type === "keydown",
                input = e.target;

            if (self.amPM !== undefined && e.target === self.amPM) {
              self.amPM.textContent = self.l10n.amPM[_int(self.amPM.textContent === self.l10n.amPM[0])];
            }

            var min = parseFloat(input.getAttribute("min")),
                max = parseFloat(input.getAttribute("max")),
                step = parseFloat(input.getAttribute("step")),
                curValue = parseInt(input.value, 10),
                delta = e.delta || (isKeyDown ? e.which === 38 ? 1 : -1 : 0);
            var newValue = curValue + step * delta;

            if (typeof input.value !== "undefined" && input.value.length === 2) {
              var isHourElem = input === self.hourElement,
                  isMinuteElem = input === self.minuteElement;

              if (newValue < min) {
                newValue = max + newValue + _int(!isHourElem) + (_int(isHourElem) && _int(!self.amPM));
                if (isMinuteElem) incrementNumInput(undefined, -1, self.hourElement);
              } else if (newValue > max) {
                newValue = input === self.hourElement ? newValue - max - _int(!self.amPM) : min;
                if (isMinuteElem) incrementNumInput(undefined, 1, self.hourElement);
              }

              if (self.amPM && isHourElem && (step === 1 ? newValue + curValue === 23 : Math.abs(newValue - curValue) > step)) {
                self.amPM.textContent = self.l10n.amPM[_int(self.amPM.textContent === self.l10n.amPM[0])];
              }

              input.value = pad(newValue);
            }
          }

          init();
          return self;
        }
        /* istanbul ignore next */


        function _flatpickr(nodeList, config) {
          // static list
          var nodes = Array.prototype.slice.call(nodeList).filter(function (x) {
            return x instanceof HTMLElement;
          });
          var instances = [];

          for (var i = 0; i < nodes.length; i++) {
            var node = nodes[i];

            try {
              if (node.getAttribute("data-fp-omit") !== null) continue;

              if (node._flatpickr !== undefined) {
                node._flatpickr.destroy();

                node._flatpickr = undefined;
              }

              node._flatpickr = FlatpickrInstance(node, config || {});
              instances.push(node._flatpickr);
            } catch (e) {
              console.error(e);
            }
          }

          return instances.length === 1 ? instances[0] : instances;
        }
        /* istanbul ignore next */


        if (typeof HTMLElement !== "undefined" && typeof HTMLCollection !== "undefined" && typeof NodeList !== "undefined") {
          // browser env
          HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {
            return _flatpickr(this, config);
          };

          HTMLElement.prototype.flatpickr = function (config) {
            return _flatpickr([this], config);
          };
        }
        /* istanbul ignore next */


        var flatpickr = function flatpickr(selector, config) {
          if (typeof selector === "string") {
            return _flatpickr(window.document.querySelectorAll(selector), config);
          } else if (selector instanceof Node) {
            return _flatpickr([selector], config);
          } else {
            return _flatpickr(selector, config);
          }
        };
        /* istanbul ignore next */


        flatpickr.defaultConfig = {};
        flatpickr.l10ns = {
          en: _assign({}, english),
          "default": _assign({}, english)
        };

        flatpickr.localize = function (l10n) {
          flatpickr.l10ns["default"] = _assign({}, flatpickr.l10ns["default"], l10n);
        };

        flatpickr.setDefaults = function (config) {
          flatpickr.defaultConfig = _assign({}, flatpickr.defaultConfig, config);
        };

        flatpickr.parseDate = createDateParser({});
        flatpickr.formatDate = createDateFormatter({});
        flatpickr.compareDates = compareDates;
        /* istanbul ignore next */

        if (typeof jQuery !== "undefined" && typeof jQuery.fn !== "undefined") {
          jQuery.fn.flatpickr = function (config) {
            return _flatpickr(this, config);
          };
        } // eslint-disable-next-line @typescript-eslint/camelcase


        Date.prototype.fp_incr = function (days) {
          return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === "string" ? parseInt(days, 10) : days));
        };

        if (typeof window !== "undefined") {
          window.flatpickr = flatpickr;
        }

        return flatpickr;
      });
      /***/

    }
  }]);
})();
//# sourceMappingURL=agenda-agenda-module-es5.js.map