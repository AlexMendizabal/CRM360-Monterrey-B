{"version":3,"sources":["webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/lista/lista.component.scss","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/cadastro/cadastro.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/lista/lista.component.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/marcas-routing.module.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/tipo-produto/services/tipo-produto.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/marcas.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/lista/lista.component.html","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/cadastro/cadastro.component.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/cadastro/cadastro.component.html"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","TecnologiaInformacaoEstoqueMarcasListaComponent","route","pnotify","activatedRoute","modeloService","formBuilder","confirmModalService","routerService","dateService","tipoProdutoService","loading","loadingNavBar","loadingTipoProduto","tableConfig","subtitleBorder","border","tipos","cod","nome","subtitles","id","text","color","itemsPerPage","totalItems","currentPage","buildForm","setBreadCrumb","onActivatedRoute","$activatedRouteSubscription","unsubscribe","queryParams","subscribe","response","_response","getBase64UrlParams","form","patchValue","hasOwnProperty","TT_REGI_PAGI","getMarcas","getParams","reset","PAGI","TIME","Date","getTime","group","ID_TEIN_ESTO_PRMA","NM_MRCA","NM_PROD_TIPO","IN_STAT","snapshot","params","idSubModulo","breadCrumbTree","descricao","routerLink","onFilter","get","setValue","navigate","relativeTo","setBase64UrlParams","pipe","status","marcas","body","noResult","error","stat","confirmChange","asObservable","result","postMarcas","success","showConfirm","modelo","event","page","_params","_obj","value","prop","convertToUrlDate","selector","template","routes","path","component","TecnologiaInformacaoEstoqueMarcasModuleRoutingModule","imports","forChild","exports","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","TecnologiaInformacaoEstoqueTipoProdutosService","http","API","observe","tipoProduto","post","TecnologiaInformacaoEstoqueMarcasModule","declarations","forRoot","providers","provide","useValue","TecnologiaInformacaoEstoqueMarcasCadastroComponent","router","titleService","atividadesService","registrarAcesso","setFormBuilder","appTitle","setTitle","DS_OBSE","required","field","onFieldInvalid","touched","formControl","controls","validator","validationResult"],"mappings":"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","file":"marcas-marcas-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvbWFyY2FzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvbWFyY2FzL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { TecnologiaInformacaoEstoqueTipoProdutosService } from '../../tipo-produto/services/tipo-produto.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\n//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { TecnologiaInformacaoEstoqueMarcasService } from '../services/marcas.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//marcas\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\nimport { ITecnologiaInformacaoEstoqueMarcas } from './../models/marcas';\nimport { PageChangedEvent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'tecnologia-informacao-estoque-produtos-modelo-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class TecnologiaInformacaoEstoqueMarcasListaComponent\n  implements OnInit, OnDestroy {\n  breadCrumbTree: Array<Breadcrumb>;\n\n  idSubModulo: number;\n  marcas: Array<ITecnologiaInformacaoEstoqueMarcas>;\n  noResult: boolean;\n  loading = true; //Loading FullPage\n  loadingNavBar = false; //Loading do NAVBAR\n  loadingTipoProduto = false;\n\n  $activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n    border: true,\n  };\n\n  // Tipos de Situação dos Marcas (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '0',\n      nome: 'Inativos',\n    },\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private modeloService: TecnologiaInformacaoEstoqueMarcasService,\n    private formBuilder: FormBuilder,\n    private confirmModalService: ConfirmModalService,\n    private routerService: RouterService,\n    private dateService: DateService,\n    private tipoProdutoService: TecnologiaInformacaoEstoqueTipoProdutosService\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n \n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n        this.getMarcas(this.getParams());\n      }\n    );\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.patchValue({\n      PAGI: 1,\n      TT_REGI_PAGI: 100,\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID_TEIN_ESTO_PRMA: [null],\n      NM_MRCA: [null],\n      NM_PROD_TIPO: [null],\n      IN_STAT: [null],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/tecnologia-informacao/home`,\n      },\n      {\n        descricao: 'Estoque',\n        routerLink: `/tecnologia-informacao/estoque/${id}`,\n      },\n      {\n        descricao: 'Marcas',\n      },\n    ];\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  onFilter() {\n    this.form.get('PAGI').setValue(1);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getMarcas(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n\n    this.modeloService\n      .getMarcas(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.marcas = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.marcas = [];\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  changeType(marcas: ITecnologiaInformacaoEstoqueMarcas) {\n    const stat = marcas.IN_STAT == '1' ? '0' : '1';\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loadingNavBar = true;\n          marcas.IN_STAT = stat;\n          return this.modeloService.postMarcas(marcas);\n        }),\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotify.success();\n        },\n        (error: any) => {\n          marcas.IN_STAT = marcas.IN_STAT == '1' ? '0' : '1';\n          this.pnotify.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == '1')\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Deseja realmente prosseguir com a ativação do registro?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  openRegister(modelo: ITecnologiaInformacaoEstoqueMarcas) {\n    this.route.navigate(['../', modelo.ID_TEIN_ESTO_PRMA], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(modelo),\n    });\n  }\n\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//components\nimport { TecnologiaInformacaoEstoqueMarcasListaComponent } from './lista/lista.component';\nimport { TecnologiaInformacaoEstoqueMarcasCadastroComponent } from './cadastro/cadastro.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TecnologiaInformacaoEstoqueMarcasListaComponent,\n  },\n  {\n    path: 'novo',\n    component: TecnologiaInformacaoEstoqueMarcasCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: TecnologiaInformacaoEstoqueMarcasCadastroComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TecnologiaInformacaoEstoqueMarcasModuleRoutingModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ITecnologiaInformacaoTipoProduto } from '../models/tipoProduto';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TecnologiaInformacaoEstoqueTipoProdutosService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n  getTiposProduto(params?) {\n    return this.http.get(\n      `${this.API}/tecnologia-informacao/estoque/produtos/tipos`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n  getTipoProduto(id: number) {\n    return this.http.get(`${this.API}/tecnologia-informacao/estoque/produtos/tipos/${id}`, {\n      observe: 'response',\n    });\n  }\n\n\n  postTipoProduto(tipoProduto: ITecnologiaInformacaoTipoProduto) {\n    return this.http.post(\n      `${this.API}/tecnologia-informacao/estoque/produtos/tipos`,\n      tipoProduto,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { RouterModule } from '@angular/router';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport ptBr from '@angular/common/locales/pt';\nimport { defineLocale, ptBrLocale, BsDatepickerModule } from 'ngx-bootstrap';\nregisterLocaleData(ptBr);\ndefineLocale('pt-br', ptBrLocale);\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { TecnologiaInformacaoEstoqueMarcasListaComponent } from './lista/lista.component';\nimport { TecnologiaInformacaoEstoqueMarcasModuleRoutingModule } from './marcas-routing.module';\nimport { TecnologiaInformacaoEstoqueMarcasCadastroComponent } from './cadastro/cadastro.component';\n\n@NgModule({\n  declarations: [\n    TecnologiaInformacaoEstoqueMarcasListaComponent,\n    TecnologiaInformacaoEstoqueMarcasCadastroComponent,\n  ],\n  imports: [\n    TecnologiaInformacaoEstoqueMarcasModuleRoutingModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\n})\nexport class TecnologiaInformacaoEstoqueMarcasModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Marcas\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onReset()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\n              <label for=\\\"ID_TEIN_ESTO_PRMA\\\">ID </label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"ID_TEIN_ESTO_PRMA\\\"\\n                placeholder=\\\"Digite...\\\"\\n                formControlName=\\\"ID_TEIN_ESTO_PRMA\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-7 pl-0\\\">\\n              <label for=\\\"NM_MRCA\\\">Marcas</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"NM_MRCA\\\"\\n                placeholder=\\\"Digite...\\\"\\n                formControlName=\\\"NM_MRCA\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"tipos\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"tipo\\\"\\n                bindLabel=\\\"nome\\\"\\n                bindValue=\\\"cod\\\"\\n                id=\\\"tipo\\\"\\n                (change)=\\\"onFilter()\\\"\\n                formControlName=\\\"IN_STAT\\\"\\n                placeholder=\\\"Selecione...\\\"\\n              >\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\n              </ng-template>\\n            </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-1 p-0\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div>\\n      <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\">ID </th>\\n            <th scope=\\\"col\\\">Marcas</th>\\n            <th scope=\\\"col\\\" style=\\\"width:80px\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let marca of marcas; let i = index\\\">\\n            <td [ngClass]=\\\"marca.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n            {{marca.ID_TEIN_ESTO_PRMA}}\\n            </td>\\n            <td>{{ marca.NM_MRCA | uppercase }}</td>\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\n              <span class=\\\"mr-3\\\" [tooltip]=\\\"marca.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(marca)\\\">\\n                  <i [ngClass]=\\\"marca.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openRegister(marca)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table><br>\\n    </div>\\n    <div>\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n      <pagination\\n        [maxSize]=\\\"10\\\"\\n        [totalItems]=\\\"totalItems\\\"\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        [(ngModel)]=\\\"currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\"\\n        nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","//rxjs\nimport { finalize } from 'rxjs/operators';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\n//services\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { TecnologiaInformacaoEstoqueTipoProdutosService } from '../../tipo-produto/services/tipo-produto.service';\nimport { TecnologiaInformacaoEstoqueMarcasService } from '../services/marcas.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  AbstractControl,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//interfaces\nimport { ITecnologiaInformacaoTipoProduto } from '../../tipo-produto/models/tipoProduto';\nimport { ITecnologiaInformacaoEstoqueMarcas } from './../models/marcas';\n\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'tecnologia-informacao-estoque-produtos-modelo-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class TecnologiaInformacaoEstoqueMarcasCadastroComponent\n  implements OnInit, OnDestroy {\n  noResult: boolean;\n  loading = false;\n  loadingNavBar = false;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  bsConfig: Partial<BsDatepickerConfig>;\n  loadingTipoProduto: boolean;\n  marcas: Array<ITecnologiaInformacaoEstoqueMarcas>;\n  $activatedRouteSubscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private routerService: RouterService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n    private modeloService: TecnologiaInformacaoEstoqueMarcasService\n  ) {}\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.appTitle = 'Cadastro';\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/tecnologia-informacao/home',\n      },\n      {\n        descricao: 'Estoque',\n        routerLink: `/tecnologia-informacao/estoque/${id}`,\n      },\n      {\n        descricao: 'Marcas',\n        routerLink: `./../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //Consumir informações que estão na rota para editar\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n      }\n    );\n  }\n\n  //formulario\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      ID_TEIN_ESTO_PRMA: [null],\n      DS_OBSE: [null],\n      NM_MRCA: [null, [Validators.required]],\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  postMarcas() {\n    this.loadingNavBar = true;\n    this.modeloService\n      .postMarcas(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            this.form.reset();\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          this.pnotify.error();\n        }\n      );\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Cadastro de Marcas\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false\\\"\\n    (click)=\\\"postMarcas()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\n        <legend>Dados do Marca</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"NM_MRCA\\\">Marca</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_MRCA\\\"\\n              formControlName=\\\"NM_MRCA\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('NM_MRCA') + ' ' + onFieldRequired('NM_MRCA')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_MRCA')\\\" message=\\\"Marcas é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\n            <legend>Observação</legend>\\n            <div class=\\\"form-row justify-content-center\\\">\\n              <div class=\\\"form-group col\\\">\\n                <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n                <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n              </div>\\n            </div>\\n            <br>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n</app-body>\";"]}