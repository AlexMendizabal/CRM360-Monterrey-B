{"version":3,"sources":["webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/lista/lista.component.scss","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/cadastro/cadastro.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/lista/lista.component.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/marcas-routing.module.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/tipo-produto/services/tipo-produto.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/marcas.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/lista/lista.component.html","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/cadastro/cadastro.component.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/cadastro/cadastro.component.html"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","TecnologiaInformacaoEstoqueMarcasListaComponent","route","pnotify","activatedRoute","modeloService","formBuilder","confirmModalService","routerService","dateService","tipoProdutoService","loading","loadingNavBar","loadingTipoProduto","tableConfig","subtitleBorder","border","tipos","cod","nome","subtitles","id","text","color","itemsPerPage","totalItems","currentPage","buildForm","setBreadCrumb","onActivatedRoute","$activatedRouteSubscription","unsubscribe","queryParams","subscribe","response","_response","getBase64UrlParams","form","patchValue","hasOwnProperty","TT_REGI_PAGI","getMarcas","getParams","reset","PAGI","TIME","Date","getTime","group","ID_TEIN_ESTO_PRMA","NM_MRCA","NM_PROD_TIPO","IN_STAT","snapshot","params","idSubModulo","breadCrumbTree","descricao","routerLink","onFilter","get","setValue","navigate","relativeTo","setBase64UrlParams","pipe","status","marcas","body","noResult","error","stat","confirmChange","asObservable","result","postMarcas","success","showConfirm","modelo","event","page","_params","_obj","value","prop","convertToUrlDate","selector","template","routes","path","component","TecnologiaInformacaoEstoqueMarcasModuleRoutingModule","imports","forChild","exports","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","currentDate","startOfWeek","setDate","setHours","endOfWeek","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","TecnologiaInformacaoEstoqueTipoProdutosService","http","API","observe","tipoProduto","post","TecnologiaInformacaoEstoqueMarcasModule","declarations","forRoot","providers","provide","useValue","TecnologiaInformacaoEstoqueMarcasCadastroComponent","router","titleService","atividadesService","registrarAcesso","setFormBuilder","appTitle","setTitle","DS_OBSE","required","field","onFieldInvalid","touched","formControl","controls","validator","validationResult"],"mappings":"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","file":"marcas-marcas-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvbWFyY2FzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvbWFyY2FzL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { TecnologiaInformacaoEstoqueTipoProdutosService } from '../../tipo-produto/services/tipo-produto.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\n//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { TecnologiaInformacaoEstoqueMarcasService } from '../services/marcas.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//marcas\r\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\nimport { ITecnologiaInformacaoEstoqueMarcas } from './../models/marcas';\r\nimport { PageChangedEvent } from 'ngx-bootstrap';\r\n\r\n@Component({\r\n  selector: 'tecnologia-informacao-estoque-produtos-modelo-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class TecnologiaInformacaoEstoqueMarcasListaComponent\r\n  implements OnInit, OnDestroy {\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n\r\n  idSubModulo: number;\r\n  marcas: Array<ITecnologiaInformacaoEstoqueMarcas>;\r\n  noResult: boolean;\r\n  loading = true; //Loading FullPage\r\n  loadingNavBar = false; //Loading do NAVBAR\r\n  loadingTipoProduto = false;\r\n\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n    border: true,\r\n  };\r\n\r\n  // Tipos de Situação dos Marcas (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '0',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private modeloService: TecnologiaInformacaoEstoqueMarcasService,\r\n    private formBuilder: FormBuilder,\r\n    private confirmModalService: ConfirmModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService,\r\n    private tipoProdutoService: TecnologiaInformacaoEstoqueTipoProdutosService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n \r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n        this.getMarcas(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_TEIN_ESTO_PRMA: [null],\r\n      NM_MRCA: [null],\r\n      NM_PROD_TIPO: [null],\r\n      IN_STAT: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/tecnologia-informacao/home`,\r\n      },\r\n      {\r\n        descricao: 'Inventario',\r\n        routerLink: `/tecnologia-informacao/estoque/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Marcas',\r\n      },\r\n    ];\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getMarcas(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n\r\n    this.modeloService\r\n      .getMarcas(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.marcas = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.marcas = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  changeType(marcas: ITecnologiaInformacaoEstoqueMarcas) {\r\n    const stat = marcas.IN_STAT == '1' ? '0' : '1';\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          marcas.IN_STAT = stat;\r\n          return this.modeloService.postMarcas(marcas);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          marcas.IN_STAT = marcas.IN_STAT == '1' ? '0' : '1';\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == '1')\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  openRegister(modelo: ITecnologiaInformacaoEstoqueMarcas) {\r\n    this.route.navigate(['../', modelo.ID_TEIN_ESTO_PRMA], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(modelo),\r\n    });\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n//components\r\nimport { TecnologiaInformacaoEstoqueMarcasListaComponent } from './lista/lista.component';\r\nimport { TecnologiaInformacaoEstoqueMarcasCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TecnologiaInformacaoEstoqueMarcasListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: TecnologiaInformacaoEstoqueMarcasCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: TecnologiaInformacaoEstoqueMarcasCadastroComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TecnologiaInformacaoEstoqueMarcasModuleRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ITecnologiaInformacaoTipoProduto } from '../models/tipoProduto';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TecnologiaInformacaoEstoqueTipoProdutosService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTiposProduto(params?) {\r\n    return this.http.get(\r\n      `${this.API}/tecnologia-informacao/estoque/produtos/tipos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n  getTipoProduto(id: number) {\r\n    return this.http.get(`${this.API}/tecnologia-informacao/estoque/produtos/tipos/${id}`, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n\r\n  postTipoProduto(tipoProduto: ITecnologiaInformacaoTipoProduto) {\r\n    return this.http.post(\r\n      `${this.API}/tecnologia-informacao/estoque/produtos/tipos`,\r\n      tipoProduto,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport ptBr from '@angular/common/locales/pt';\r\nimport { defineLocale, ptBrLocale, BsDatepickerModule } from 'ngx-bootstrap';\r\nregisterLocaleData(ptBr);\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { TecnologiaInformacaoEstoqueMarcasListaComponent } from './lista/lista.component';\r\nimport { TecnologiaInformacaoEstoqueMarcasModuleRoutingModule } from './marcas-routing.module';\r\nimport { TecnologiaInformacaoEstoqueMarcasCadastroComponent } from './cadastro/cadastro.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TecnologiaInformacaoEstoqueMarcasListaComponent,\r\n    TecnologiaInformacaoEstoqueMarcasCadastroComponent,\r\n  ],\r\n  imports: [\r\n    TecnologiaInformacaoEstoqueMarcasModuleRoutingModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    NgBrazil,\r\n    TextMaskModule,\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\r\n})\r\nexport class TecnologiaInformacaoEstoqueMarcasModule {}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Marcas\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\r\\n              <label for=\\\"ID_TEIN_ESTO_PRMA\\\">ID </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"ID_TEIN_ESTO_PRMA\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n                formControlName=\\\"ID_TEIN_ESTO_PRMA\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-7 pl-0\\\">\\r\\n              <label for=\\\"NM_MRCA\\\">Marcas</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"NM_MRCA\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n                formControlName=\\\"NM_MRCA\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"tipos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"tipo\\\"\\r\\n                bindLabel=\\\"nome\\\"\\r\\n                bindValue=\\\"cod\\\"\\r\\n                id=\\\"tipo\\\"\\r\\n                (change)=\\\"onFilter()\\\"\\r\\n                formControlName=\\\"IN_STAT\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n              >\\r\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\r\\n              </ng-template>\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1 p-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div>\\r\\n      <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">ID </th>\\r\\n            <th scope=\\\"col\\\">Marcas</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:80px\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let marca of marcas; let i = index\\\">\\r\\n            <td [ngClass]=\\\"marca.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n            {{marca.ID_TEIN_ESTO_PRMA}}\\r\\n            </td>\\r\\n            <td>{{ marca.NM_MRCA | uppercase }}</td>\\r\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n              <span class=\\\"mr-3\\\" [tooltip]=\\\"marca.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(marca)\\\">\\r\\n                  <i [ngClass]=\\\"marca.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openRegister(marca)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table><br>\\r\\n    </div>\\r\\n    <div>\\r\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","//rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\r\n//services\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { TecnologiaInformacaoEstoqueTipoProdutosService } from '../../tipo-produto/services/tipo-produto.service';\r\nimport { TecnologiaInformacaoEstoqueMarcasService } from '../services/marcas.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  AbstractControl,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n//interfaces\r\nimport { ITecnologiaInformacaoTipoProduto } from '../../tipo-produto/models/tipoProduto';\r\nimport { ITecnologiaInformacaoEstoqueMarcas } from './../models/marcas';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'tecnologia-informacao-estoque-produtos-modelo-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class TecnologiaInformacaoEstoqueMarcasCadastroComponent\r\n  implements OnInit, OnDestroy {\r\n  noResult: boolean;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  loadingTipoProduto: boolean;\r\n  marcas: Array<ITecnologiaInformacaoEstoqueMarcas>;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private routerService: RouterService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n    private modeloService: TecnologiaInformacaoEstoqueMarcasService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.appTitle = 'Cadastro';\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/tecnologia-informacao/home',\r\n      },\r\n      {\r\n        descricao: 'Inventario',\r\n        routerLink: `/tecnologia-informacao/estoque/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Marcas',\r\n        routerLink: `./../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //Consumir informações que estão na rota para editar\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n      }\r\n    );\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      ID_TEIN_ESTO_PRMA: [null],\r\n      DS_OBSE: [null],\r\n      NM_MRCA: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postMarcas() {\r\n    this.loadingNavBar = true;\r\n    this.modeloService\r\n      .postMarcas(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.form.reset();\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Cadastro de Marcas\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false\\\"\\r\\n    (click)=\\\"postMarcas()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Marca</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col pl-0\\\">\\r\\n            <label for=\\\"NM_MRCA\\\">Marca</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_MRCA\\\"\\r\\n              formControlName=\\\"NM_MRCA\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_MRCA') + ' ' + onFieldRequired('NM_MRCA')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_MRCA')\\\" message=\\\"Marcas é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\r\\n            <legend>Observação</legend>\\r\\n            <div class=\\\"form-row justify-content-center\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n                <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";"]}