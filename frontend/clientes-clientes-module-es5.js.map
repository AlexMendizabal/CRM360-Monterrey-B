{"version":3,"sources":["webpack:///src/app/modules/comercial/clientes/editar/editar.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.scss","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes.component.scss","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.html","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.scss","webpack:///src/app/shared/services/core/functions.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.html","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.service.ts","webpack:///src/app/modules/comercial/clientes/clientes-routing.module.ts","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.ts","webpack:///src/app/modules/comercial/clientes/editar/editar.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.scss","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.module.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.ts","webpack:///src/app/modules/comercial/clientes/clientes.module.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.scss","webpack:///src/app/modules/comercial/clientes/clientes-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/editar/editar.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.html","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/shared/services/core/form-rules.service.ts","webpack:///src/app/modules/comercial/clientes/lista/lista.component.scss","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.scss","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.ts","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.ts","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.scss","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro-routing.module.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.html","webpack:///src/app/modules/comercial/clientes/editar/editar.component.html","webpack:///src/app/modules/comercial/clientes/cadastro/dados-faturamento/formulario/formulario-rules-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.html","webpack:///src/app/modules/comercial/clientes/lista/lista.component.html","webpack:///src/app/modules/comercial/clientes/lista/lista.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.scss","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes.component.ts","webpack:///src/app/shared/services/ws/cnpj.service.ts","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.scss","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.html"],"names":["EditarClienteComponent","_BsModalRef","pnotifyService","formBuilder","preCadastroService","fecharModal","latitudPromedio","longitudPromedio","latitud","longitud","loaderFullScreen","coloresDisponibles","nuevoContacto","contacto","nombres_contacto","apellido_contacto","direccion_contacto","celular_contacto","telefono_contacto","nuevaDireccion","ubicacion","direccion","id_ciudad","color","oferta","observacion","id_marcador","form","group","codigo_cliente","carnet","nit","nombre","nombre_factura","id_tipo_persona","email","telefono","celular","id_rubro","id_tipo_cliente","id_vendedor","categorizarUbicacion","console","log","datos_cliente","isNaN","vendedor","vendedoresList","find","v","id","nome","datos_contacto","length","push","datos_direccion","forEach","generarColorAleatorio","index","splice","indiceAleatorio","Math","floor","random","colorAleatorio","event","coords","lat","lng","actualizarMarcador","actualizarDireccion","obtenerDireccion","then","direccion_mapa","error","fetch","response","json","data","resultado","results","formatted_address","emit","idClienteInput","document","getElementById","value","codigoClienteInput","ciInput","nitInput","nombreInput","nombreFacturaInput","idTipoPersonaInput","emailInput","telefonoInput","celularInput","tipoClienteInput","idVendedorInput","contactos","enviarPeticion","updateCliente","pipe","subscribe","codigoRespuesta","setTimeout","onClose","mensagem","selector","template","ComercialClientesHistoricoFinanceiroComponent","router","activatedRoute","detalhesService","location","atividadesService","titleService","breadCrumbTree","cliente","getPNotify","snapshot","registrarAcesso","getDetalhes","notice","navigate","back","params","next","setBreadCrumb","onRouterChange","handleLoadDependenciesError","url","split","currRoute","descricao","routerLink","breadCrumbConfig","route","setTitle","events","ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent","historicoFinanceiroService","principal","historicoCobrancas","ocorrenciasDuplicatas","ocorrenciasComerciais","duplicataLoaded","queryParams","getMateriaisDuplicata","FunctionsService","valor","tamanho","toString","trim","i","providedIn","ComercialClientesPreCadastroService","vendedoresService","dadosFaturamentoService","http","BASE_URL","vendedores","getVendedores","cnaes","getCnaes","ciudades","getCiudades","post","param","observe","tap","arg0","Error","routes","path","component","resolve","rules","canDeactivate","loadChildren","m","ComercialClientesCadastroModule","ComercialClientesHistoricoFinanceiroModule","redirectTo","pathMatch","ComercialClientesRoutingModule","imports","forChild","exports","ComercialClientesUltimosPrecosComponent","localeService","ultimosPrecos","dateService","confirmModalService","detailPanelService","comercialService","loaderNavbar","showDetailPanel","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","codCliente","setFormFilter","formValue","checkRouterParams","dataInicial","required","dataFinal","getFirstDayMonth","getLastDayMonth","activatedRouteSubscription","keys","atob","JSON","parse","search","formKey","paramKey","convertStringToDate","Number","unsubscribe","field","onFieldInvalid","get","errors","hasOwnProperty","touched","formControl","controls","validator","validationResult","valid","setRouterParams","verificaParams","relativeTo","q","btoa","stringify","convertToUrlDate","Date","hide","getListaUltimosPrecos","success","slice","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialClientesPropostaAnaliseCreditoResolverGuard","clienteService","getPropostaAnaliseCredito","result","razaoSocial","codSAP","limiteCredito","setorAtividade","nomeVendedor","telefoneVendedor","nomeEscritorio","declarations","forRoot","ComercialClientesHistoricoFinanceiroDetalhesComponent","filterPipe","tableConfig","subtitleBorder","pedidos","pedidosPagination","pedidosFiltered","pedidosLoaded","parent","grupoEconomico","getPedidos","getDetalhesPedidos","status","borderClass","startItem","page","endItem","transform","numDuplicata","ComercialClientesModule","apiKey","entryComponents","providers","ComercialClientesResolverGuard","clientesService","getPermissaoAcesso","responseCode","EditarClienteService","modalAutorizacionService","modalConfig","initialState","ComercialClientesHistoricoFinanceiroCorteDobraComponent","corteDobra","corteDobraLoaded","getCorteDobra","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","currentDate","startOfWeek","setDate","setHours","endOfWeek","y","d","h","padStart","s","getSeconds","time","timeSplit","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","ComercialClientesUltimosPrecosService","API","httpParams","append","ComercialClientesHistoricoFinanceiroService","set","ComercialClientesHistoricoFinanceiroDebitosComponent","debitos","debitosLoaded","getDebitos","ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent","acumulosMensais","acumulosMensaisLoaded","getAcumulosMensais","ComercialService","FormRulesService","formRef","ComercialClientesPreCadastroComponent","cnpjService","functionsService","MASKS","formChanged","tipoPessoa","submittingForm","swActivarLatitud","maxLengthRules","maxLengthMessages","dadosCliente","tipos_clientes","index_array_ubicacion","titulo_ubicacion_array","index_array_contactos","titulo_contacto_array","nombre_contacto_array","apellido_p_contacto_array","apellido_m_contacto_array","telefono_contacto_array","celular_contacto_array","direccion_contacto_array","ubicacionCollapse","contactoCollapse","ubicacionFormularios","contactoFormularios","formObjArray","ubicaciones","ciudad_vendedor","getFormFields","obtenerTiposClientes","documento","setMaxLengthRules","setFormBuilder","formObj","array","a","getVendedorCiudad","handleFormFieldsError","getTipoClientes","loadDependencies","map","cnae","id_cnae","descripcion","codigo","apellido1","apellido2","nomeFantasia","datosUbicacion","ubicacionFormArray","datosContacto","contactoFormArray","tipoFormulario","nuevoFormulario","crearFormularioUbicacionConDatosIngresados","agregarUbicacionALaFormObj","crearFormularioContactoConDatosIngresados","agregarContactoALaFormObj","titulo_contacto","apellido2_contacto","tipo","ci","maxLength","telefone","tipopessoa","ciudad","ciudadUbi","titulo_ubicacion","nombre_ciudad","tipo_cliente","valueChanges","setValidators","clearValidators","updateValueAndValidity","tipoPessoaOptions","S","P","G","E","tipopersona","tipo_pessoa","tipo_persona","nombres","razonSocial","cnpj_cpf","sapPostClient","detalle","reset","modalDetalhesCliente","podeAcessar","onCloseDetails","atributo","confirm","ComercialClientesPropostaAnaliseCreditoComponent","pdfService","tipoVisao","dataFicha","disabled","dataSolicitacao","codClienteDBA","dataUltimaVisita","instalacoes","numFuncionarios","limiteCreditoAtual","limiteCreditoSolicitado","condicaoPagto","gestorVendas","fornecedores","clientes","vendasConcentradas","bancos","previsaoCompraTon","previsaoCompraValor","faturamentoMedio","parecerVendedor","setFormFornecedoresClientesBancos","onAddFornecedor","onAddBanco","agencia","contaCorrente","removeAt","formGroup","onNestedFieldInvalid","nestedForm","formData","getRawValue","download","ComercialClientesHistoricoFinanceiroResumoComponent","sinteticoPendenciasLoaded","sintetico","atrasoPagamento","tempoEntrega","totalAtraso","pagtoAntecipado","creditoSeguradora","grupoEconomicoLoaded","showPendenciasDetalhes","pendencias","titulos","notasDebito","notasPromissorias","chequesDevolvidos","reservaBobinas","saldo","visaoGrupoEconomico","getResumoSintetico","getGrupoEconomico","onLoadingGrupoEconomico","getResumoPedidos","toFixed","ComercialClientesDetalhesResolverGuard","children","ComercialHistoricoFinanceiroRoutingModule","ComercialClientesCadastroDadosFaturamentoRulesResolverGuard","formRulesService","getRules","ComercialClientesListaComponent","editarClienteService","setorAtividades","dataLoaded","dadosCadastraisLoaded","dadosCadastraisEmpty","contatosLoaded","contatosEmpty","direccionEmpty","searchSubmitted","showAdvancedFilter","currentUser","localStorage","getItem","matricula","ativos","inativos","potencial","arquivados","orderBy","orderType","clientesPagination","dadosCadastrais","contato","contatos","direcciones","editingMode","editedFields","editingContacto","codigoClienteSap","tipos_personas","informacionMarcador","tipoPersonaOptions","label","getFormFilters","onDetailPanelEmitter","getCenaes","showDetailPanelSubscription","config","showing","onCloseDetailPanel","getSetorAtividades","unshift","formFilter","pesquisa","buscarPor","situacao","segurado","carteira","pagina","registros","loadedFinished","clienteSelecionado","calcularPromedioUbicaciones","sumLatitud","sumLongitud","resetClienteSelecionado","aux_cartera","searchInputValue","setSubmittedSearch","listStatus","editedIdCont","id_cont","editedContacto","editedds_cont_meio","ds_cont_meio","editedDireccion","editedDsCont","ds_cont","originalDsTipoCont","ds_tipo_cont","editing","codigoCliente","id_cliente","editedData","undefined","tipo_medio","id_cont_meio","sapUpdateContacto","option","opt","showModal","originalVendedorId","mapTipoPessoaToTipoPersona","sapUpdateClient","getStatus","setStatus","column","onFilter","setValue","queryParamsHandling","buscandoPor","getClientes","replace","cpf","cnpj","ComercialClientesDetalhesComponent","badgeClass","CnpjService","e","ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent","notasPromissoriasLoaded","getNotasPromissorias"],"mappings":"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","file":"clientes-clientes-module-es5.js","sourcesContent":["import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { number } from 'ng-brazil/number/validator';\r\n\r\nimport { ComercialClientesPreCadastroService } from '../pre-cadastro/pre-cadastro.service';\r\n\r\n@Component({\r\n    selector: 'editar-cliente',\r\n    templateUrl: './editar.component.html',\r\n    styleUrls: ['./editar.component.scss']\r\n})\r\nexport class EditarClienteComponent implements OnInit {\r\n    @Output() fecharModal = new EventEmitter();\r\n    @Input() datos_cliente: any;\r\n\r\n    @Input() vendedoresList: any[];\r\n    @Input() tipos_clientes: any[];\r\n\r\n    @Input() cnaes: any[];\r\n    @Input() ciudades: any[];\r\n\r\n    @Input() latitudPromedio: number = 0;\r\n    @Input() longitudPromedio: number = 0;\r\n\r\n    @Input() tipos_personas: any[];\r\n\r\n\r\n    latitud: number = 0;\r\n    longitud: number = 0;\r\n\r\n\r\n    loaderNavbar: boolean;\r\n\r\n\r\n    loaderFullScreen = true;\r\n    form: FormGroup;\r\n    checkoutForm;\r\n\r\n\r\n    private coloresDisponibles: string[] = [\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF0000',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FC9F3A',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFF00',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00FF00',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFFFF',\r\n    ];\r\n\r\n\r\n    nuevoContacto = {\r\n        contacto: '',\r\n        nombres_contacto: '',\r\n        apellido_contacto: '',\r\n        direccion_contacto: '',\r\n        celular_contacto: '',\r\n        telefono_contacto: ''\r\n    };\r\n\r\n    nuevaDireccion = {\r\n        ubicacion: '',\r\n        direccion: '',\r\n        latitud: 0,\r\n        longitud: 0,\r\n        id_ciudad: '',\r\n        color: '',\r\n    };\r\n\r\n\r\n    constructor(\r\n        private _BsModalRef: BsModalRef,\r\n        private pnotifyService: PNotifyService,\r\n        private formBuilder: FormBuilder,\r\n        private preCadastroService: ComercialClientesPreCadastroService,\r\n\r\n    ) {\r\n        this.form = this.formBuilder.group({\r\n            //observacion: ['', Validators.required],\r\n            codigo_cliente: [''],\r\n            carnet: [''],\r\n            nit: [''],\r\n            nombre: [''],\r\n            nombre_factura: [''],\r\n            id_tipo_persona: [],\r\n            email: [''],\r\n            telefono: [''],\r\n            celular: [''],\r\n            id_rubro: [],\r\n            id_tipo_cliente: [],\r\n            id_vendedor: [''],\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    dataForm: any;\r\n    data: [];\r\n    oferta: Array<any> = [];\r\n    detalle: any[];\r\n    observacion: string = '';\r\n    id_marcador: number = 0;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.categorizarUbicacion();\r\n        console.log(this.datos_cliente);\r\n        /*  */        /* //thi        console.log(this.cnaes);\r\n        s.data[0] = this.dataForm;\r\n                this.data = this.dataForm;\r\n                this.detalle = this.dataForm.detalle; */\r\n    }\r\n\r\n    getVendedorNome(id_vendedor: number): string {\r\n        if (isNaN(id_vendedor)) {\r\n            return 'NO INFORMADO';\r\n        }\r\n\r\n        const vendedor = this.vendedoresList.find(v => v.id === id_vendedor);\r\n        return vendedor ? vendedor.nome : 'NO INFORMADO';\r\n    }\r\n\r\n\r\n    agregarContacto() {\r\n/*         console.log(this.datos_cliente)\r\n */        if (this.datos_cliente.datos_contacto > 0) {\r\n            if (this.datos_cliente.datos_contacto.length < 5) {\r\n                this.datos_cliente.datos_contacto.push({ ...this.nuevoContacto } );\r\n                this.nuevoContacto = {\r\n                    contacto: '',\r\n                    nombres_contacto:  '',\r\n                    apellido_contacto: '',\r\n                    direccion_contacto: '',\r\n                    celular_contacto: '',\r\n                    telefono_contacto: ''\r\n                };\r\n            }\r\n        } else {\r\n            this.datos_cliente.datos_contacto.push({ ...this.nuevoContacto });\r\n            this.nuevoContacto = {\r\n                contacto: '',\r\n                nombres_contacto: '',\r\n                apellido_contacto: '',\r\n                direccion_contacto: '',\r\n                celular_contacto: '',\r\n                telefono_contacto: ''\r\n            };\r\n        }\r\n    }\r\n\r\n    categorizarUbicacion() {\r\n        if (this.datos_cliente.datos_direccion && this.datos_cliente.datos_direccion.length > 0) {\r\n            this.datos_cliente.datos_direccion.forEach((direccion) => {\r\n                direccion['color'] = this.generarColorAleatorio();\r\n            });\r\n        }\r\n    }\r\n\r\n    eliminarContacto(index: number) {\r\n        this.datos_cliente.datos_contacto.splice(index, 1);\r\n    }\r\n\r\n    agregarUbicacion() {\r\n        this.nuevaDireccion = {\r\n            ubicacion: '',\r\n            direccion: '',\r\n            latitud: this.latitudPromedio,\r\n            longitud: this.longitudPromedio,\r\n            id_ciudad: '',\r\n            color: this.generarColorAleatorio(),\r\n        }\r\n\r\n        if (this.datos_cliente.datos_direccion.length < 5) {\r\n            this.datos_cliente.datos_direccion.push({ ...this.nuevaDireccion });\r\n            this.nuevaDireccion = {\r\n                ubicacion: '',\r\n                direccion: '',\r\n                latitud: 0,\r\n                longitud: 0,\r\n                id_ciudad: '',\r\n                color: '',\r\n            };\r\n        }\r\n    }\r\n\r\n    generarColorAleatorio(): string {\r\n        if (this.coloresDisponibles.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const indiceAleatorio = Math.floor(Math.random() * this.coloresDisponibles.length);\r\n        const colorAleatorio = this.coloresDisponibles.splice(indiceAleatorio, 1)[0];\r\n        return colorAleatorio;\r\n    }\r\n\r\n    eliminarUbicacion(index: number) {\r\n        this.coloresDisponibles.push(this.datos_cliente.datos_direccion[index].color);\r\n        this.datos_cliente.datos_direccion.splice(index, 1);\r\n    }\r\n\r\n    actualizarMarcador(index: number, latitud, longitud): void {\r\n        this.id_marcador = index;\r\n        this.datos_cliente.datos_direccion[index].latitud = latitud;\r\n        this.datos_cliente.datos_direccion[index].longitud = longitud;\r\n    }\r\n    actualizarUbicacion(index: number) {\r\n/*         console.log(this.datos_cliente.datos_direccion[index])\r\n */        this.datos_cliente.datos_direccion[index].latitud = this.latitud;\r\n        this.datos_cliente.datos_direccion[index].longitud = this.longitud;\r\n    }\r\n\r\n    actualizarMapa(event: any) {\r\n        this.latitud = event.coords.lat;\r\n        this.longitud = event.coords.lng;\r\n        this.actualizarMarcador(this.id_marcador, this.latitud, this.longitud);\r\n        this.actualizarDireccion(this.id_marcador, event);\r\n\r\n    }\r\n\r\n    actualizarDireccion(index, event: any) {\r\n        this.obtenerDireccion(event.coords.lat, event.coords.lng)\r\n            .then((direccion_mapa: string) => {\r\n                this.datos_cliente.datos_direccion[index].direccion = direccion_mapa;\r\n            })\r\n            .catch((error: any) => {\r\n                /*  this.form.controls['direccion'].setValue(\r\n                    'Error al obtener la dirección'\r\n                 ); */\r\n            });\r\n    }\r\n\r\n    public obtenerDireccion(latitud: number, longitud: number): Promise<string> {\r\n        return fetch(\r\n            `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitud},${longitud}&key=AIzaSyDl5b7STz9xYNDhybTTer2POVncX9FYqCc`\r\n        )\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const resultado = data.results[0];\r\n                if (resultado) {\r\n                    return resultado.formatted_address;\r\n                } else {\r\n                    return 'Dirección no encontrada';\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                return 'Error al obtener la dirección';\r\n            });\r\n    }\r\n\r\n    onClose(): void {\r\n        this.fecharModal.emit(true);\r\n    }\r\n\r\n    actualizarCiudad(index: number, id_ciudad: number) {\r\n        this.datos_cliente.datos_direccion[index].id_ciudad = id_ciudad\r\n    }\r\n\r\n    actualizarCliente() {\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var idClienteInput = document.getElementById('id_cliente').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var codigoClienteInput = document.getElementById('codigo_cliente').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var ciInput = document.getElementById('carnet').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var nitInput = document.getElementById('nit').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var nombreInput = document.getElementById('nombre').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var nombreFacturaInput = document.getElementById('nombre_factura').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var idTipoPersonaInput = document.getElementById('id_tipo_persona').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var emailInput = document.getElementById('email').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var telefonoInput = document.getElementById('telefono').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var celularInput = document.getElementById('celular').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var tipoClienteInput = document.getElementById('id_tipo_cliente').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var idVendedorInput = document.getElementById('id_vendedor').value;\r\n\r\n        const ubicacion = this.datos_cliente.datos_direccion;\r\n        const contactos = this.datos_cliente.datos_contacto\r\n        const data = {\r\n            'codigo_cliente': codigoClienteInput,\r\n            'id_cliente': idClienteInput,\r\n            'nit': nitInput,\r\n            'ci': ciInput,\r\n            'nombres': nombreInput,\r\n            'tipo_pessoa': idTipoPersonaInput,\r\n            'id_vendedor': idVendedorInput,\r\n            'situacion': 1,\r\n            'telefono': telefonoInput,\r\n            'celular': celularInput,\r\n            'nombre_factura': nombreFacturaInput,\r\n            'email': emailInput,\r\n            'id_tipo_cliente': tipoClienteInput,\r\n            'ubicacion': ubicacion,\r\n            'contactos': contactos\r\n        };\r\n        this.enviarPeticion(data);\r\n        console.log(data);\r\n    }\r\n\r\n    enviarPeticion(data: any): void {\r\n        this.preCadastroService\r\n            .updateCliente(data)\r\n            .pipe(\r\n                finalize(() => {\r\n                })\r\n            )\r\n            .subscribe(\r\n                (response: JsonResponse) => {\r\n                    if (response.codigoRespuesta == 200) {\r\n                        setTimeout(() => {\r\n                            this.onClose();\r\n                        }, 200)\r\n                    } else {\r\n                        this.pnotifyService.error(response.mensagem);\r\n                    }\r\n                },\r\n                (error: any) => {\r\n                    this.pnotifyService.error(error.error.mensagem);\r\n                }\r\n            );\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2RlYml0b3MvZGViaXRvcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Pre-Registro\\\">\\r\\n  <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Guardar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"nit\\\">CI</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ci\\\" formControlName=\\\"ci\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('ci') + ' ' + onFieldRequired('ci')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ci') == 'required'\\\"\\r\\n              message=\\\"NIT inválido.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"nit\\\">NIT</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nit\\\" formControlName=\\\"nit\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('nit') + ' ' + onFieldRequired('nit')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nit') == 'required'\\\"\\r\\n              message=\\\"NIT inválido.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"tipopessoa\\\">Tipo de persona</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"tipopessoa\\\" formControlName=\\\"tipopessoa\\\" (change)=\\\"onInput()\\\">\\r\\n              <option value=\\\"S\\\">Sociedades</option>\\r\\n              <option value=\\\"P\\\">Privado</option>\\r\\n              <option value=\\\"G\\\">Gobierno</option>\\r\\n              <option value=\\\"E\\\">Empleado</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"vendedor\\\"> Vendedor</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"vendedores\\\" [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"vendedor\\\" bindLabel=\\\"nombre\\\" bindValue=\\\"ID\\\" formControlName=\\\"vendedor\\\"\\r\\n              (change)=\\\"changeVendedor($event.ID)\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nome\\\">Nombre completo</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('nome') + ' ' + onFieldRequired('nome')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome') == 'required'\\\"\\r\\n              message=\\\"Nombre es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome') == 'maxlength'\\\"\\r\\n              [message]=\\\"maxLengthMessages.nome\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeFantasia\\\">Nombre Factura</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nombre_factura\\\" formControlName=\\\"nombre_factura\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeFantasia') + ' ' + onFieldRequired('nomeFantasia')\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"razaoSocial\\\">Razon social</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"razaoSocial\\\" formControlName=\\\"razaoSocial\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('razaoSocial') + ' ' + onFieldRequired('razaoSocial')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial') == 'required'\\\"\\r\\n              message=\\\"Razon social es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial') == 'maxlength'\\\"\\r\\n              [message]=\\\"maxLengthMessages.razaoSocial\\\"></invalid-form-control>\\r\\n          </div>\\r\\n         <!--  <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeFantasia\\\">Nombre de Fantasia</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nomeFantasia\\\" formControlName=\\\"nomeFantasia\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeFantasia') + ' ' + onFieldRequired('nomeFantasia')\\\">\\r\\n          </div> -->\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"celular\\\">Celular</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"celular\\\" formControlName=\\\"celular\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('celular') + ' ' + onFieldRequired('celular')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('celular') == 'required'\\\"\\r\\n              message=\\\"celular es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"email\\\">E-mail</label>\\r\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" formControlName=\\\"email\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('email') + ' ' + onFieldRequired('email')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email') == 'required'\\\"\\r\\n              message=\\\"E-mail es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email') == 'maxlength'\\\"\\r\\n              [message]=\\\"maxLengthMessages.email\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"telefone\\\">Telefono</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"telefone\\\" formControlName=\\\"telefone\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('telefone') + ' ' + onFieldRequired('telefone')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('telefone') == 'required'\\\"\\r\\n              message=\\\"Telefono es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-9\\\">\\r\\n            <label for=\\\"cnae\\\">Rubro (Actividad Economica)</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"cnaes\\\" [virtualScroll]=\\\"true\\\" labelForId=\\\"cnae\\\"\\r\\n              bindLabel=\\\"descripcion\\\" bindValue=\\\"id_cnae\\\" formControlName=\\\"cnae\\\" (change)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('cnae') + ' ' + onFieldRequired('cnae')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnae') == 'required'\\\"\\r\\n              message=\\\"CNAE es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"cnae\\\">Tipo de cliente</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"tipos_clientes\\\" [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"cnae\\\" bindLabel=\\\"nombre_tipo\\\" bindValue=\\\"id\\\" formControlName=\\\"tipo_cliente\\\"\\r\\n              [ngClass]=\\\"onFieldError('tipo_cliente') + ' ' + onFieldRequired('tipo_cliente')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnae') == 'required'\\\"\\r\\n              message=\\\"CNAE es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"cnae\\\">Mapa</label>\\r\\n            <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n              <agm-map (mapClick)=\\\"actualizarMapa($event)\\\" [latitude]=\\\"latitud\\\" [longitude]=\\\"longitud\\\" [zoom]=\\\"16\\\"\\r\\n                class=\\\"embed-responsive-item\\\">\\r\\n                <agm-marker *ngFor=\\\"let ubicacion of ubicaciones; let i = index\\\" [latitude]=\\\"ubicacion.latitud\\\"\\r\\n                  [longitude]=\\\"ubicacion.longitud\\\" (markerClick)=\\\"actualizarMarcador(i)\\\" [iconUrl]=\\\"ubicacion.color\\\"\\r\\n                  (markerDragEnd)=\\\"actualizarUbicacion(i, $event.coords.lat, $event.coords.lng)\\\">\\r\\n                </agm-marker>\\r\\n              </agm-map>\\r\\n              <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row mt-2\\\">\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <button data-toggle=\\\"collapse\\\" data-target=\\\"#CollapseUbicacion\\\" class=\\\"btn btn-primary\\\"\\r\\n              id=\\\"btnAgregarUbicacion\\\" (click)=\\\"repetirFormulario('Ubicacion')\\\"> <i class=\\\"fas fa-plus\\\"></i>\\r\\n              Agregar Ubicación</button>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <button data-toggle=\\\"collapse\\\" data-target=\\\"#CollapseContacto\\\" class=\\\"btn btn-success\\\"\\r\\n              id=\\\"btnAgregarContacto\\\" (click)=\\\"repetirFormulario('Contacto')\\\"> <i class=\\\"fas fa-plus\\\"></i>\\r\\n              Agregar Contacto</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div id=\\\"ContenedorFormularios\\\">\\r\\n          <div id=\\\"Ubicacion\\\" *ngFor=\\\"let ubicacionForm of ubicacionFormularios; let i = index\\\">\\r\\n            <div id=\\\"CollapseUbicacion\\\" [class.collapse]=\\\"!ubicacionCollapse\\\">\\r\\n              <div class=\\\"mt-3\\\"></div>\\r\\n              <div class=\\\"row \\\" style=\\\"border-radius: 13px; background-color: rgb(246, 243, 243);\\\">\\r\\n                <div class=\\\"form-group col-md-12 mt-2\\\" align=\\\"right\\\">\\r\\n                  <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"eliminarContacto(i, 2)\\\" style=\\\"text-decoration: none\\\">\\r\\n                    X\\r\\n                  </button>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-9 mt-1\\\">\\r\\n                  <label for=\\\"titulo_ubicacion\\\">Nombre de ubicacion</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo_ubicacion\\\" formControlName=\\\"titulo_ubicacion\\\"\\r\\n                    (input)=\\\"onInput()\\\" [value]=\\\"ubicacionForm.ubicacion\\\"\\r\\n                    (ngModelChange)=\\\"actualizarPosicion($event, i)\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-3\\\">\\r\\n                  <label for=\\\"ciudadUbi\\\">Ciudad</label>\\r\\n                  <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"ciudades\\\" [virtualScroll]=\\\"true\\\"\\r\\n                    (change)=\\\"cambiarCiudad($event.id, i)\\\" labelForId=\\\"ciudad\\\" bindLabel=\\\"nombre_ciudad\\\" bindValue=\\\"id\\\"\\r\\n                    formControlName=\\\"nombre_ciudad\\\"\\r\\n                    [ngClass]=\\\"onFieldError('nombre_ciudad') + ' ' + onFieldRequired('nombre_ciudad')\\\">\\r\\n                    <ng-option *ngFor=\\\"let ciudad of ciudades\\\"\\r\\n                      [value]=\\\"ubicacionForm.ciudad_id !== 0 ? ubicacionForm.ciudad_id : ciudad_vendedor\\\"\\r\\n                      [disabled]=\\\"ciudad.id !== ciudad_vendedor\\\">\\r\\n                      {{ ciudad.nombre_ciudad }}\\r\\n                    </ng-option>\\r\\n\\r\\n                  </ng-select>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"ubicacionForm.swActivarLatitud === true\\\">\\r\\n                  <label for=\\\"direccion\\\">Direccion</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"direccion\\\" formControlName=\\\"\\\" (input)=\\\"onInput()\\\"\\r\\n                    [(ngModel)]=\\\"ubicacionForm.direccion\\\" [value]=\\\"ubicacionForm.direccion\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"ubicacionForm.swActivarLatitud === false\\\">\\r\\n                  <label for=\\\"direccion\\\">Dirección </label> <br>\\r\\n                  <button class=\\\"btn btn-primary\\\" (click)=\\\"agregarDireccion(i)\\\"> <i class=\\\"fas fa-map-marker\\\"></i>\\r\\n                    Agregar </button>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-3\\\" *ngIf=\\\"ubicacionForm.swActivarLatitud === true\\\">\\r\\n                  <label for=\\\"ciudadUbi\\\">Latitud</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo_ubicacion\\\" formControlName=\\\"latitud\\\"\\r\\n                    (input)=\\\"onInput()\\\" [(ngModel)]=\\\"ubicacionForm.latitud\\\" [value]=\\\"ubicacionForm.latitud\\\"\\r\\n                    [readonly]=\\\"true\\\">\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-3\\\" *ngIf=\\\"ubicacionForm.swActivarLatitud === true\\\">\\r\\n                  <label for=\\\"ciudadUbi\\\">Longitud</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo_ubicacion\\\" formControlName=\\\"longitud\\\"\\r\\n                    (input)=\\\"onInput()\\\" [(ngModel)]=\\\"ubicacionForm.longitud\\\" [value]=\\\"ubicacionForm.longitud\\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div id=\\\"Contacto\\\" *ngFor=\\\"let contactoForm of contactoFormularios; let i = index\\\">\\r\\n            <div id=\\\"CollapseContacto\\\" [class.collapse]=\\\"!contactoCollapse\\\">\\r\\n              <div class=\\\"col mt-3\\\">\\r\\n                <!--  -->\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" style=\\\"border-radius: 13px; background-color: rgb(246, 243, 243);\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-12 mt-2\\\" align=\\\"right\\\">\\r\\n                      <button class=\\\"btn  btn-danger btn-sm\\\" (click)=\\\"eliminarContacto(i, 1)\\\">\\r\\n                        X\\r\\n                      </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"titulo_contacto\\\">TÍTULO DE CONTACTO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo_contacto\\\" formControlName=\\\"titulo_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\"\\r\\n                        [ngClass]=\\\"onFieldError('titulo_contacto') + ' ' + onFieldRequired('titulo_contacto')\\\"\\r\\n                        [value]=\\\"contactoForm.titulo_contacto\\\" (ngModelChange)=\\\"actualizarContacto($event, 1, i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"nombres_contacto\\\">NOMBRE</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nombres_contacto\\\" formControlName=\\\"nombres_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\" [value]=\\\"contactoForm.nombres_contacto\\\"\\r\\n                        (ngModelChange)=\\\"actualizarContacto($event, 2,  i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"apellido_contacto\\\">APELLIDO PATERNO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"apellido_contacto\\\" formControlName=\\\"apellido_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\" [value]=\\\"contactoForm.apellido_contacto\\\"\\r\\n                        (ngModelChange)=\\\"actualizarContacto($event, 3 , i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"apellido2_contacto\\\">APELLIDO MATERNO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"apellido2_contacto\\\"\\r\\n                        formControlName=\\\"apellido2_contacto\\\" (input)=\\\"onInput()\\\"\\r\\n                        [value]=\\\"contactoForm.apellido2_contacto\\\" (ngModelChange)=\\\"actualizarContacto($event, 4, i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"telefono_contacto\\\">TELÉFONO CONTACTO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"telefono_contacto\\\" formControlName=\\\"telefono_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\" [value]=\\\"contactoForm.telefono_contacto\\\"\\r\\n                        (ngModelChange)=\\\"actualizarContacto($event,5 , i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"celular_contacto\\\">CELULAR DE CONTACTO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"celular_contacto\\\" formControlName=\\\"celular_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\" [value]=\\\"contactoForm.celular_contacto\\\"\\r\\n                        (ngModelChange)=\\\"actualizarContacto($event, 6 , i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-6 mt-2\\\">\\r\\n                      <label for=\\\"direccion_contacto\\\">DIRECCIÓN DE CONTACTO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"direccion_contacto\\\"\\r\\n                        formControlName=\\\"direccion_contacto\\\" (input)=\\\"onInput()\\\"\\r\\n                        [value]=\\\"contactoForm.direccion_contacto\\\" (ngModelChange)=\\\"actualizarContacto($event, 7,  i)\\\">\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- <label>CONTACTOS</label> -->\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Detalles\\\"></app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col text-center\\\">\\r\\n      <h5 class=\\\"pt-2 mb-4\\\">{{ cliente.razaoSocial }}</h5>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mb-4\\\">\\r\\n    <div class=\\\"col d-flex justify-content-center w-100\\\">\\r\\n      <h5 tooltip=\\\"Código do cliente\\\">\\r\\n        <span class=\\\"badge badge-dark\\\">CÓD.: {{ cliente.codCliente }}</span>\\r\\n      </h5>\\r\\n      <h5 *ngIf=\\\"cliente.nomeVendedor\\\" class=\\\"ml-3\\\" tooltip=\\\"Vendedor\\\">\\r\\n        <span class=\\\"badge badge-light\\\">{{ cliente.nomeVendedor | uppercase }}</span>\\r\\n      </h5>\\r\\n      <h5 class=\\\"ml-3\\\" tooltip=\\\"Status\\\">\\r\\n        <span class=\\\"badge\\\" [ngClass]=\\\"classStatusBadge(cliente.status)\\\">{{ cliente.status | uppercase }}</span>\\r\\n      </h5>\\r\\n      <h5 *ngIf=\\\"cliente.codClienteDBA\\\" class=\\\"ml-3\\\" tooltip=\\\"Código DBA do cliente\\\">\\r\\n        <span class=\\\"badge badge-warning\\\">CÓD. DBA: {{ cliente.codClienteDBA }}</span>\\r\\n      </h5>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-9\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-folder-open\\\"\\r\\n            text=\\\"Datos de registro\\\"\\r\\n            [routerLink]=\\\"['../../cadastro', cliente.codCliente, 'dados-faturamento']\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n         <!--div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-chart-pie\\\"\\r\\n            text=\\\"Dashboard\\\"\\r\\n            [routerLink]=\\\"['../../dashboard', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div--> \\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-chart-bar\\\"\\r\\n            text=\\\"Histórico Financeiro\\\"\\r\\n            [routerLink]=\\\"['../../historico-financeiro', cliente.codCliente, 'resumo']\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-handshake\\\"\\r\\n            text=\\\"Ficha PAC\\\"\\r\\n            [routerLink]=\\\"['../../proposta-analise-credito', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div>\\r\\n      </div> -->\\r\\n      <!-- <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-shopping-cart\\\"\\r\\n            text=\\\"Vender\\\"\\r\\n            [routerLink]=\\\"['../../../ciclo-vendas/139/cotacoes-pedidos/lista/']\\\"\\r\\n            [queryParams]=\\\"{codCliente: cliente.codCliente}\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"far fa-calendar-alt\\\"\\r\\n            text=\\\"Agendar\\\"\\r\\n            [routerLink]=\\\"['../../../agenda/novo', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-tasks\\\"\\r\\n            text=\\\"Propuestas / Pedidos\\\"\\r\\n            [routerLink]=\\\"['../../../tid-software/11']\\\"\\r\\n            [queryParams]=\\\"{ codCliente: cliente.codCliente, sistema: 'vendas', modulo: 3 }\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-list\\\"\\r\\n            text=\\\"Últimos precios\\\"\\r\\n            [routerLink]=\\\"['../../../clientes/ultimos-precos', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialClientesDetalheService } from './../detalhes/detalhes.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro',\r\n  templateUrl: './historico-financeiro.component.html',\r\n  styleUrls: ['./historico-financeiro.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroComponent implements OnInit {\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  cliente: any = {};\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private detalhesService: ComercialClientesDetalheService,\r\n    private pnotifyService: PNotifyService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.activatedRoute.snapshot.data['response']['responseCode'] === 200) {\r\n      this.registrarAcesso();\r\n      this.getDetalhes();\r\n    } else if (\r\n      this.activatedRoute.snapshot.data['response']['responseCode'] === 403\r\n    ) {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\r\n      this.router.navigate(['/comercial/home']);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getDetalhes() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.detalhesService\r\n        .getDetalhes(params['id'])\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderFullScreen = false;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: any) => {\r\n            if (response['responseCode'] === 200) {\r\n              this.cliente = response['result'];\r\n              this.setBreadCrumb(params['id']);\r\n              this.onRouterChange();\r\n            } else {\r\n              this.handleLoadDependenciesError();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.handleLoadDependenciesError();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  handleLoadDependenciesError() {\r\n    this.pnotifyService.error();\r\n    this.location.back();\r\n  }\r\n\r\n  setBreadCrumb(id: number) {\r\n    let router = this.router.url.split('/');\r\n    let currRoute = router[router.length - 1];\r\n\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home'\r\n      },\r\n      {\r\n        descricao: 'Busqueda de clientes',\r\n        routerLink: '/comercial/clientes/lista'\r\n      },\r\n      {\r\n        descricao: 'Detalhes',\r\n        routerLink: `/comercial/clientes/detalhes/${id}`\r\n      },\r\n      {\r\n        descricao: 'Histórico financeiro',\r\n        routerLink: `/comercial/clientes/historico-financeiro/${id}/resumo`\r\n      },\r\n      {\r\n        descricao: this.breadCrumbConfig(currRoute)\r\n      }\r\n    ];\r\n  }\r\n\r\n  breadCrumbConfig(route: string) {\r\n    let descricao = '';\r\n\r\n    if (route == 'resumo') {\r\n      descricao = 'Resumo';\r\n    } else if (route == 'detalhes') {\r\n      descricao = 'Detalhes';\r\n    } else if (route == 'acumulos-mensais') {\r\n      descricao = 'Acúmulos mensais';\r\n    } else if (route == 'notas-promissorias') {\r\n      descricao = 'Notas promissórias';\r\n    } else if (route == 'debitos') {\r\n      descricao = 'Débitos em aberto';\r\n    } else if (route == 'corte-dobra') {\r\n      descricao = 'Corte Dobra';\r\n    } else {\r\n      descricao = 'Materiais da duplicata';\r\n    }\r\n\r\n    this.titleService.setTitle(descricao);\r\n\r\n    return descricao;\r\n  }\r\n\r\n  onRouterChange() {\r\n    this.router.events.subscribe(event => {\r\n      this.activatedRoute.params.subscribe(params => {\r\n        this.setBreadCrumb(params['id']);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-materiais-duplicata',\r\n  templateUrl: './materiais-duplicata.component.html',\r\n  styleUrls: ['./materiais-duplicata.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent\r\n  implements OnInit {\r\n  principal: any = {};\r\n  historicoCobrancas: any = {};\r\n  ocorrenciasDuplicatas: any = {};\r\n  ocorrenciasComerciais: any = {};\r\n  duplicataLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.historicoFinanceiroService\r\n        .getMateriaisDuplicata(params)\r\n        .subscribe((response: any) => {\r\n          if (response['responseCode'] === 200) {\r\n            this.principal = response['result']['principal'];\r\n            this.historicoCobrancas = response['result']['historicoCobrancas'];\r\n            this.ocorrenciasDuplicatas =\r\n              response['result']['ocorrenciasDuplicatas'];\r\n            this.ocorrenciasComerciais =\r\n              response['result']['ocorrenciasComerciais'];\r\n          }\r\n          this.duplicataLoaded = true;\r\n        });\r\n    });\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!notasPromissoriasLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de pagarés...</strong>\\r\\n    </div>\\r\\n    <custom-table [config]=\\\"tableConfig\\\">\\r\\n      <ng-template #thead let-thead *ngIf=\\\"notasPromissorias.length > 0 && notasPromissoriasLoaded\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Registro</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Bancário</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Baixa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor da baixa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencimento</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor da duplicata</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let nota of notasPromissorias\\\">\\r\\n          <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(nota.situacao)\\\">{{ nota.numRegistro }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.numBancario }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.dataBaixa }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.valorBaixa | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.dataVencimento }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.valorDuplicata | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"notasPromissorias.length > 0 && notasPromissoriasLoaded\\\">\\r\\n      <div class=\\\"col-6 d-flex justify-content-center w-100\\\">\\r\\n        <div class=\\\"d-flex justify-content-around\\\">\\r\\n          <div class=\\\"legend green\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">BAIXADA</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend blue\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">QUITADA</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result\\r\\n      message=\\\"Nenhuma informação encontrada\\\"\\r\\n      *ngIf=\\\"notasPromissorias.length == 0 && notasPromissoriasLoaded\\\">\\r\\n    </empty-result>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL25vdGFzLXByb21pc3Nvcmlhcy9ub3Rhcy1wcm9taXNzb3JpYXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL3Jlc3Vtby9yZXN1bW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FunctionsService {\r\n  completaZeroEsquerda(valor: any, tamanho: number): string {\r\n    if (valor === null) return null;\r\n\r\n    valor = valor.toString();\r\n    valor = valor.trim();\r\n\r\n    if (valor.length < tamanho) {\r\n      for (let i = valor.length; i < tamanho; i++) {\r\n        valor = `0${valor}`;\r\n      }\r\n    }\r\n\r\n    return valor;\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!pedidosLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de duplicados...</strong>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"pedidos.length > 0 && pedidosLoaded\\\">\\r\\n      <div class=\\\"row justify-content-between\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <div class=\\\"d-flex\\\">\\r\\n            <div class=\\\"legend green\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">ABIERTO</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend blue\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">QUITADA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend yellow\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">VENCIDA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend red\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">PROTESTA</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"filtro\\\" class=\\\"col-2 text-right pb-0 pt-1 pr-2\\\">Filtrar</label>\\r\\n            <div class=\\\"col-10 pl-0\\\">\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control form-control-sm\\\"\\r\\n                id=\\\"filtro\\\"\\r\\n                placeholder=\\\"Número da duplicata\\\"\\r\\n                #filtro\\r\\n                (input)=\\\"onFilter(filtro.value)\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Facturamiento</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. pedido</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicar</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencimiento</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Banco</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Baja</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Pré-datada</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Atraso</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Entrega</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let pedido of pedidosPagination\\\">\\r\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(pedido.situacao)\\\">{{ pedido.empresa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataFaturamento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numPedido }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numDuplicata }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataVencimento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.banco }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataBaixa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.tipoBaixa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataPreDatada }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.atraso }} dias</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.entrega }} dias</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <a\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Materiais da duplicata\\\"\\r\\n                container=\\\"body\\\"\\r\\n                [routerLink]=\\\"['../materiais-duplicata']\\\"\\r\\n                [queryParams]=\\\"{\\r\\n                  codEmpresa: pedido.idEmpresa,\\r\\n                  numPedido: pedido.numPedido,\\r\\n                  sequencia: pedido.sequencia\\r\\n                }\\\">\\r\\n                <i class=\\\"fas fa-search\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"pedidosLoaded\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"pedidosFiltered.length > itemsPerPage\\\">\\r\\n            <pagination\\r\\n              [maxSize]=\\\"maxSize\\\"\\r\\n              [totalItems]=\\\"pedidosFiltered.length\\\"\\r\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n              [boundaryLinks]=\\\"true\\\"\\r\\n              previousText=\\\"&lsaquo;\\\"\\r\\n              nextText=\\\"&rsaquo;\\\"\\r\\n              firstText=\\\"&laquo;\\\"\\r\\n              lastText=\\\"&raquo;\\\">\\r\\n            </pagination>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"pedidos.length == 0 && pedidosLoaded\\\"></empty-result>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"row mb-4\\\">\\r\\n  <div class=\\\"col mb-4\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-orange rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-hand-holding-usd\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.atrasoPagamento\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoAtrasoPagamento = $event\\\">\\r\\n          {{ handleCounter(countoAtrasoPagamento) }} dias\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">MÉDIA ATRASO PAGTO</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-gray rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-truck-moving\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.tempoEntrega\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoTempoEntrega = $event\\\">\\r\\n          {{ handleCounter(countoTempoEntrega) }} dias\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">MÉDIA TEMPO ENTREGA</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-red rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-dollar-sign\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.totalAtraso == 0\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.totalAtraso\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoTotalAtraso = $event\\\">\\r\\n          {{ countoTotalAtraso | currency:'BRL':'symbol':'1.2-2' }}\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">TOTAL EM ATRASO</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.totalAtraso == 0\\\">\\r\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">TOTAL EM ATRASO</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-green rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-file-invoice-dollar\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.pagtoAntecipado == 0\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.pagtoAntecipado\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoPagtoAntecipado = $event\\\">\\r\\n          {{ countoPagtoAntecipado | currency:'BRL':'symbol':'1.2-2' }}\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">ANTECIPADO DISPONÍVEL</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.pagtoAntecipado == 0\\\">\\r\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">ANTECIPADO DISPONÍVEL</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-blue rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-building\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.creditoSeguradora == 0\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.creditoSeguradora\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoCreditoSeguradora = $event\\\">\\r\\n          {{ countoCreditoSeguradora | currency:'BRL':'symbol':'1.2-2' }}\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">CRÉDITO SEGURADORA</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.creditoSeguradora == 0\\\">\\r\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">CRÉDITO SEGURADORA</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!pedidosLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carregando duplicatas...</strong>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"pedidos.length > 0 && pedidosLoaded\\\">\\r\\n      <div class=\\\"row justify-content-between\\\">\\r\\n        <div class=\\\"col-6 d-flex\\\">\\r\\n          <div class=\\\"d-flex my-auto\\\">\\r\\n            <div class=\\\"legend green\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">EM ABERTO</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend blue\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">QUITADA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend yellow\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">VENCIDA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend red\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">PROTESTO</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"filtro\\\" class=\\\"col-3 text-right pb-0 pt-1 pr-2\\\">Filtrar</label>\\r\\n            <div class=\\\"col-9 pl-0\\\">\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control form-control-sm\\\"\\r\\n                id=\\\"filtro\\\"\\r\\n                placeholder=\\\"Número da duplicata\\\"\\r\\n                #filtro\\r\\n                (input)=\\\"onFilter(filtro.value)\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Faturamento</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. pedido</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicata</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencto</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Baixa</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let pedido of pedidosPagination\\\">\\r\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(pedido.situacao)\\\">{{ pedido.empresa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataFaturamento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numPedido }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numDuplicata }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataVencimento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataBaixa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <a\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Materiais da duplicata\\\"\\r\\n                container=\\\"body\\\"\\r\\n                [routerLink]=\\\"['../materiais-duplicata']\\\"\\r\\n                [queryParams]=\\\"{\\r\\n                  codEmpresa: pedido.idEmpresa,\\r\\n                  numPedido: pedido.numPedido,\\r\\n                  sequencia: pedido.sequencia\\r\\n                }\\\">\\r\\n                <i class=\\\"fas fa-search\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"row mt-3\\\" *ngIf=\\\"pedidosLoaded\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"pedidosFiltered.length > itemsPerPage\\\">\\r\\n            <pagination\\r\\n              [maxSize]=\\\"maxSize\\\"\\r\\n              [totalItems]=\\\"pedidosFiltered.length\\\"\\r\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n              [boundaryLinks]=\\\"true\\\"\\r\\n              previousText=\\\"&lsaquo;\\\"\\r\\n              nextText=\\\"&rsaquo;\\\"\\r\\n              firstText=\\\"&laquo;\\\"\\r\\n              lastText=\\\"&raquo;\\\">\\r\\n            </pagination>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada nos últimos 12 meses. Para períodos anteriores veja em Detalhes.\\\" *ngIf=\\\"pedidos.length == 0 && pedidosLoaded\\\"></empty-result>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"d-flex justify-content-between w-100 mb-2\\\">\\r\\n      <div>\\r\\n        <h6>\\r\\n          <span class=\\\"mr-2\\\">Grupo econômico</span>\\r\\n          <a\\r\\n            href=\\\"javascript:void(0)\\\"\\r\\n            *ngIf=\\\"grupoEconomicoLoaded && grupoEconomico.length > 1\\\"\\r\\n            (click)=\\\"onGrupoEconomico(modalGrupoEconomico)\\\">(ver detalhes)\\r\\n          </a>\\r\\n        </h6>\\r\\n        <small class=\\\"form-text text-muted\\\">VISÃO DO GRUPO ECONÔMICO NO HISTÓRICO FINANCEIRO</small>\\r\\n      </div>\\r\\n      <div class=\\\"custom-control custom-switch my-auto\\\" *ngIf=\\\"grupoEconomicoLoaded && grupoEconomico.length > 1\\\">\\r\\n        <input\\r\\n        type=\\\"checkbox\\\"\\r\\n        class=\\\"custom-control-input\\\"\\r\\n        id=\\\"grupoEconomico\\\"\\r\\n        [checked]=\\\"visaoGrupoEconomico\\\"\\r\\n        (change)=\\\"onChangeGrupoEconomico()\\\"\\r\\n        [disabled]=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <label class=\\\"custom-control-label\\\" for=\\\"grupoEconomico\\\"></label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item bg-green\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong class=\\\"text-white\\\">Saldo para faturar</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-white\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.saldo\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoSaldo = $event\\\"\\r\\n            [hidden]=\\\"pendencias.saldo == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoSaldo | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-white\\\" *ngIf=\\\"pendencias.saldo == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-white\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <h6 class=\\\"my-2\\\">\\r\\n      <a\\r\\n        href=\\\"javascript:void(0)\\\"\\r\\n        (click)=\\\"showPendenciasDetalhes = !showPendenciasDetalhes\\\">\\r\\n        <span *ngIf=\\\"!showPendenciasDetalhes\\\"><i class=\\\"fas fa-chevron-up\\\"></i> ver detalhes</span>\\r\\n        <span *ngIf=\\\"showPendenciasDetalhes\\\"><i class=\\\"fas fa-chevron-down\\\"></i> esconder detalhes</span>\\r\\n      </a>\\r\\n    </h6>\\r\\n    <ul class=\\\"list-group\\\" *ngIf=\\\"showPendenciasDetalhes\\\">\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Títulos em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.titulos\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoTitulos = $event\\\"\\r\\n            [hidden]=\\\"pendencias.titulos == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoTitulos | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.titulos == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Notas de débitos em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.notasDebito\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoNotasDebito = $event\\\"\\r\\n            [hidden]=\\\"pendencias.notasDebito == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoNotasDebito | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.notasDebito == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Notas promissórias em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.notasPromissorias\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoNotasPromissorias = $event\\\"\\r\\n            [hidden]=\\\"pendencias.notasPromissorias == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoNotasPromissorias | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.notasPromissorias == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Cheques devolvidos</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.chequesDevolvidos\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoChequesDevolvidos = $event\\\"\\r\\n            [hidden]=\\\"pendencias.chequesDevolvidos == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoChequesDevolvidos | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.chequesDevolvidos == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Corte dobra liberado p/ produção</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.corteDobra\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoCorteDobra = $event\\\"\\r\\n            [hidden]=\\\"pendencias.corteDobra == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoCorteDobra | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.corteDobra == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Reserva de bobinas em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.reservaBobinas\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoReservaBobinas = $event\\\"\\r\\n            [hidden]=\\\"pendencias.reservaBobinas == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoReservaBobinas | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.reservaBobinas == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Limite de crédito</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.limiteCredito\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoLimiteCredito = $event\\\"\\r\\n            [hidden]=\\\"pendencias.limiteCredito == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoLimiteCredito | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.limiteCredito == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #modalGrupoEconomico>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\">Grupo econômico</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCloseModalGrupoEconomico()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <custom-table>\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód. cliente</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Razão social</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of grupoEconomico\\\">\\r\\n          <td class=\\\"text-center\\\">{{ item.tipo }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.codCliente }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.razaoSocial }}</td>\\r\\n          <td class=\\\"text-center\\\">\\r\\n            <a\\r\\n              class=\\\"btn-icon-sm\\\"\\r\\n              tooltip=\\\"Visualizar histórico financeiro\\\"\\r\\n              container=\\\"body\\\"\\r\\n              [routerLink]=\\\"['../../../historico-financeiro', item.codCliente, 'resumo']\\\"\\r\\n              (click)=\\\"onCloseModalGrupoEconomico()\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n            </a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\n\r\n// Services\r\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\r\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from '../cadastro/dados-faturamento/formulario/formulario.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take,  retry} from 'rxjs/operators';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesPreCadastroService {\r\n  private readonly BASE_URL: string = `http://23.254.204.187/api`   ;\r\n\r\n  constructor(\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private dadosFaturamentoService: ComercialClientesCadastroDadosFaturamentoFormularioService,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  loadDependencies() {\r\n    let vendedores = this.vendedoresService.getVendedores() ;\r\n    let cnaes = this.dadosFaturamentoService.getCnaes();\r\n    let ciudades = this.dadosFaturamentoService.getCiudades(); // Agregar esta línea\r\n    return forkJoin([vendedores, cnaes, ciudades]); // Agregar ciudades aquí\r\n  }\r\n\r\n  getCiudades() {\r\n    let ciudades = this.dadosFaturamentoService.getCiudades();\r\n    return forkJoin(ciudades);\r\n  }\r\n\r\n\r\n  getCenaes(){\r\n    let cnaes = this.dadosFaturamentoService.getCnaes();\r\n    return forkJoin(cnaes);\r\n  }\r\n\r\n  /* updateCliente(params){\r\n    return this.http.post(\r\n      `${this.BASE_URL}/sap/cliente_update`,\r\n      params,\r\n      { observe: 'response' }\r\n    );\r\n  } */\r\n\r\n  updateCliente(params: any){\r\n    return this.http\r\n      .post(`http://23.254.204.187/api/sap/cliente_update`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  postAkna(param){\r\n    return this.http.post(\r\n      `${this.BASE_URL}/sap/actualizar_item`,\r\n      param,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n}\r\nfunction tap(arg0: (data: any) => void): import(\"rxjs\").OperatorFunction<Object, unknown> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialClientesCadastroDadosFaturamentoRulesResolverGuard } from './cadastro/dados-faturamento/formulario/formulario-rules-resolver.guard';\r\nimport { ComercialClientesDetalhesResolverGuard } from './detalhes/detalhes-resolver.guard';\r\nimport { ComercialClientesResolverGuard } from './clientes-resolver.guard';\r\nimport { ComercialClientesPropostaAnaliseCreditoResolverGuard } from './proposta-analise-credito/proposta-analise-credito-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialClientesListaComponent } from './lista/lista.component';\r\nimport { ComercialClientesPreCadastroComponent } from './pre-cadastro/pre-cadastro.component';\r\nimport { ComercialClientesDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesDashboardComponent } from './dashboard/dashboard.component';\r\nimport { ComercialClientesPropostaAnaliseCreditoComponent } from './proposta-analise-credito/proposta-analise-credito.component';\r\nimport { ComercialClientesUltimosPrecosComponent } from './ultimos-precos/ultimos-precos.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialClientesListaComponent },\r\n  {\r\n    path: 'pre-cadastro',\r\n    component: ComercialClientesPreCadastroComponent,\r\n    resolve: {\r\n      rules: ComercialClientesCadastroDadosFaturamentoRulesResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'detalhes/:id',\r\n    component: ComercialClientesDetalhesComponent,\r\n    resolve: {\r\n      response: ComercialClientesDetalhesResolverGuard,\r\n    },\r\n  },\r\n  {\r\n    path: 'cadastro',\r\n    loadChildren: () =>\r\n      import('./cadastro/cadastro.module').then(\r\n        (m) => m.ComercialClientesCadastroModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'dashboard/:id',\r\n    component: ComercialClientesDashboardComponent,\r\n    resolve: {\r\n      response: ComercialClientesResolverGuard,\r\n    },\r\n  },\r\n  {\r\n    path: 'historico-financeiro',\r\n    loadChildren: () =>\r\n      import('./historico-financeiro/historico-financeiro.module').then(\r\n        (m) => m.ComercialClientesHistoricoFinanceiroModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'ultimos-precos/:id',\r\n    component: ComercialClientesUltimosPrecosComponent,\r\n  },\r\n  {\r\n    path: 'proposta-analise-credito/:id',\r\n    component: ComercialClientesPropostaAnaliseCreditoComponent,\r\n    resolve: {\r\n      data: ComercialClientesPropostaAnaliseCreditoResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/comercial/home',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialClientesRoutingModule {}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { ComercialClientesUltimosPrecosService } from '../ultimos-precos/ultimos-precos.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialService } from '../../comercial.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'ultimos-precos',\r\n  templateUrl: './ultimos-precos.component.html',\r\n  styleUrls: ['./ultimos-precos.component.scss'],\r\n})\r\nexport class ComercialClientesUltimosPrecosComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n\r\n  codCliente: number;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<any> = [];\r\n  dadosPagination: Array<any> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  ultimoPrecoSelecionado: any;\r\n  alteracoes: Array<any> = [];\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private ultimosPrecos: ComercialClientesUltimosPrecosService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private dateService: DateService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.codCliente = params.id;\r\n    });\r\n\r\n    this.registrarAcesso();\r\n    this.setFormFilter();\r\n    this.setBreadCrumb(this.codCliente);\r\n    this.titleService.setTitle('Ultimos Preços');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setFormFilter() {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      dataInicial: [formValue.dataInicial, [Validators.required]],\r\n      dataFinal: [formValue.dataFinal, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb(id: number) {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home',\r\n      },\r\n      {\r\n        descricao: 'Busqueda de clientes',\r\n        routerLink: '/comercial/clientes/lista',\r\n      },\r\n      {\r\n        descricao: 'Detalhes',\r\n        routerLink: `/comercial/clientes/detalhes/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Ultimos Preços',\r\n      },\r\n    ];\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      dataInicial: this.dateService.getFirstDayMonth(),\r\n      dataFinal: this.dateService.getLastDayMonth(),\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\r\n                  formValue[formKey] = this.dateService.convertStringToDate(\r\n                    params[paramKey],\r\n                    'pt-br'\r\n                  );\r\n                } else {\r\n                  if (!isNaN(Number(params[paramKey]))) {\r\n                    formValue[formKey] = Number(params[paramKey]);\r\n                  } else {\r\n                    formValue[formKey] = params[paramKey];\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.dataInicial) {\r\n      params.dataInicial = this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.dataInicial)\r\n      );\r\n    }\r\n\r\n    if (this.form.value.dataFinal) {\r\n      params.dataFinal = this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.dataFinal)\r\n      );\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    params.codCliente = this.codCliente;\r\n\r\n    this.ultimosPrecos\r\n      .getListaUltimosPrecos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2VkaXRhci9lZGl0YXIuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!debitosLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de débitos pendientes...</strong>\\r\\n    </div>\\r\\n    <custom-table *ngIf=\\\"debitos.length > 0 && debitosLoaded\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data Pedido</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Pedido</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Duplicata</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Duplicata</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Juros</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Cartório</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Tarifa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data Tarifa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Tarifa</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let debito of debitos\\\">\\r\\n          <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(debito.situacao)\\\">{{ debito.dataPedido }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.numPedido }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.numDuplicata }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.valorDuplicata | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.juros }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.valorCartorio | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.tarifa }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.dataTarifa }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.valorTarifa | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <empty-result\\r\\n      message=\\\"Nenhuma informação encontrada\\\"\\r\\n      *ngIf=\\\"debitos.length == 0 && debitosLoaded\\\">\\r\\n    </empty-result>\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"debitos.length > 0 && debitosLoaded\\\">\\r\\n      <div class=\\\"col-6 d-flex justify-content-center w-100\\\">\\r\\n        <div class=\\\"d-flex justify-content-around\\\">\\r\\n          <div class=\\\"legend green\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">DÉBITO CON NOTA</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend blue\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">DÉBITO CON NOTA</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3Byb3Bvc3RhLWFuYWxpc2UtY3JlZGl0by9wcm9wb3N0YS1hbmFsaXNlLWNyZWRpdG8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesPropostaAnaliseCreditoResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(private clienteService: ComercialClientesService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['id']) {\r\n      return this.clienteService.getPropostaAnaliseCredito(route.params['id']);\r\n    }\r\n\r\n    return of({\r\n      result: {\r\n        razaoSocial: null,\r\n        codCliente: null,\r\n        codSAP: null,\r\n        limiteCredito: null,\r\n        setorAtividade: null,\r\n        nomeVendedor: null,\r\n        telefoneVendedor: null,\r\n        nomeEscritorio: null\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// ngx-filter-pipe\r\nimport { FilterPipeModule } from 'ngx-filter-pipe';\r\n\r\n// Counto\r\nimport { CountoModule } from 'angular2-counto';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialHistoricoFinanceiroRoutingModule } from './historico-financeiro-routing.module';\r\n\r\n// Components\r\nimport { ComercialClientesHistoricoFinanceiroComponent } from './historico-financeiro.component';\r\nimport { ComercialClientesHistoricoFinanceiroResumoComponent } from './resumo/resumo.component';\r\nimport { ComercialClientesHistoricoFinanceiroDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent } from './materiais-duplicata/materiais-duplicata.component';\r\nimport { ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent } from './acumulos-mensais/acumulos-mensais.component';\r\nimport { ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent } from './notas-promissorias/notas-promissorias.component';\r\nimport { ComercialClientesHistoricoFinanceiroDebitosComponent } from './debitos/debitos.component';\r\nimport { ComercialClientesHistoricoFinanceiroCorteDobraComponent } from './corte-dobra/corte-dobra.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialClientesHistoricoFinanceiroComponent,\r\n    ComercialClientesHistoricoFinanceiroResumoComponent,\r\n    ComercialClientesHistoricoFinanceiroDetalhesComponent,\r\n    ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent,\r\n    ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent,\r\n    ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent,\r\n    ComercialClientesHistoricoFinanceiroDebitosComponent,\r\n    ComercialClientesHistoricoFinanceiroCorteDobraComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TooltipModule,\r\n    PaginationModule,\r\n    TabsModule,\r\n    FilterPipeModule,\r\n    CountoModule,\r\n    SharedModule,\r\n    TemplatesModule.forRoot(),\r\n    ComercialHistoricoFinanceiroRoutingModule\r\n  ]\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// ngx-filter-pipe\r\nimport { FilterPipe } from 'ngx-filter-pipe';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-detalhes',\r\n  templateUrl: './detalhes.component.html',\r\n  styleUrls: ['./detalhes.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroDetalhesComponent\r\n  implements OnInit {\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  codCliente: number;\r\n\r\n  pedidos: any = [];\r\n  pedidosPagination: any = [];\r\n  pedidosFiltered: any = [];\r\n  pedidosLoaded: boolean = false;\r\n\r\n  maxSize: number = 10;\r\n  itemsPerPage: number = 10;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService,\r\n    private filterPipe: FilterPipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(queryParams => {\r\n      this.activatedRoute.parent.params.subscribe(params => {\r\n        let grupoEconomico = false;\r\n\r\n        if (\r\n          queryParams['grupoEconomico'] &&\r\n          queryParams['grupoEconomico'] == 'true'\r\n        ) {\r\n          grupoEconomico = true;\r\n        }\r\n\r\n        this.codCliente = params['id'];\r\n        this.getPedidos(this.codCliente, grupoEconomico);\r\n      });\r\n    });\r\n  }\r\n\r\n  getPedidos(id: number, grupoEconomico: boolean) {\r\n    this.historicoFinanceiroService\r\n      .getDetalhesPedidos(id, grupoEconomico)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.pedidos = response['result'];\r\n          this.pedidosFiltered = response['result'];\r\n          this.pedidosPagination = this.pedidosFiltered.slice(\r\n            0,\r\n            this.itemsPerPage\r\n          );\r\n        }\r\n        this.pedidosLoaded = true;\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'EM ABERTO') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'QUITADA') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'VENCIDA') {\r\n      borderClass = 'border-warning';\r\n    } else if (status == 'PROTESTO') {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.pedidosPagination = this.pedidos.slice(startItem, endItem);\r\n  }\r\n\r\n  onFilter(value: string) {\r\n    if (value) {\r\n      this.pedidosFiltered = this.filterPipe.transform(this.pedidos, {\r\n        numDuplicata: value\r\n      });\r\n    } else {\r\n      this.pedidosFiltered = this.pedidos;\r\n    }\r\n\r\n    this.pedidosPagination = this.pedidosFiltered.slice(0, this.itemsPerPage);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ModalModule, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// Counto\r\nimport { CountoModule } from 'angular2-counto';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialClientesRoutingModule } from './clientes-routing.module';\r\n\r\n// Components\r\nimport { ComercialClientesListaComponent } from './lista/lista.component';\r\nimport { ComercialClientesPreCadastroComponent } from './pre-cadastro/pre-cadastro.component';\r\nimport { ComercialClientesDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesDashboardModule } from './dashboard/dashboard.module';\r\nimport { ComercialClientesHistoricoFinanceiroModule } from './historico-financeiro/historico-financeiro.module';\r\nimport { ComercialClientesPropostaAnaliseCreditoComponent } from './proposta-analise-credito/proposta-analise-credito.component';\r\nimport { ComercialClientesUltimosPrecosComponent } from './ultimos-precos/ultimos-precos.component';\r\nimport { EditarClienteComponent } from './editar/editar.component';\r\n\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialClientesListaComponent,\r\n    ComercialClientesPreCadastroComponent,\r\n    ComercialClientesDetalhesComponent,\r\n    ComercialClientesPropostaAnaliseCreditoComponent,\r\n    ComercialClientesUltimosPrecosComponent,\r\n    EditarClienteComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TooltipModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    CountoModule,\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    CurrencyMaskModule,\r\n    SharedModule,\r\n    TemplatesModule.forRoot(),\r\n    ComercialClientesRoutingModule,\r\n    ComercialClientesDashboardModule,\r\n    ComercialClientesHistoricoFinanceiroModule, \r\n  \r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyDl5b7STz9xYNDhybTTer2POVncX9FYqCc' // Reemplaza con tu propia clave de API de Google Maps\r\n    }),\r\n    \r\n  ],\r\n  exports: [EditarClienteComponent],\r\n  entryComponents: [EditarClienteComponent],\r\n  providers: [\r\n    BsModalRef\r\n  ]\r\n})\r\nexport class ComercialClientesModule {}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Histórico financeiro\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['resumo']\\\">\\r\\n    Resumen\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['detalhes']\\\">\\r\\n    Detalles\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['acumulos-mensais']\\\">\\r\\n    Acumulaciones mensuales\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['notas-promissorias']\\\">\\r\\n    Pagarés  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['debitos']\\\">\\r\\n    Débitos\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['corte-dobra']\\\">\\r\\n    Corte Doblado\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [show]=\\\"!loaderFullScreen\\\" [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h5 class=\\\"d-inline-block mb-0 mr-3\\\" tooltip=\\\"Código do cliente\\\">\\r\\n        <span class=\\\"badge badge-dark\\\">CÓD.: {{ cliente.codCliente }}</span>\\r\\n      </h5>\\r\\n      <h6 class=\\\"d-inline-block mb-0\\\">{{ cliente.razaoSocial }}</h6>\\r\\n    </div>\\r\\n  </div>\\r\\n  <router-outlet></router-outlet>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesResolverGuard implements Resolve<any> {\r\n  constructor(private clientesService: ComercialClientesService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['id']) {\r\n      return this.clientesService.getPermissaoAcesso(route.params['id']);\r\n    }\r\n\r\n    return of({\r\n      responseCode: 403\r\n    });\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n//components\r\nimport { EditarClienteComponent } from './editar.component';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EditarClienteService {\r\n    loaderNavbar: EventEmitter<boolean> = new EventEmitter();\r\n    \r\n    private modalRef: BsModalRef;\r\n\r\n    constructor(\r\n        private modalAutorizacionService: BsModalService,\r\n        private pnotifyService: PNotifyService,\r\n\r\n    ) {\r\n        this.pnotifyService.getPNotify();\r\n    }\r\n\r\n    showModal(): void {\r\n        this.loaderNavbar.emit(true);\r\n        const modalConfig = {\r\n            animated: false,\r\n            class: 'modal-lg',\r\n            ignoreBackdropClick: true,\r\n            keyboard: false,\r\n        };\r\n\r\n        this.modalAutorizacionService.show(EditarClienteComponent, {\r\n            initialState: {  },\r\n        });\r\n\r\n    }\r\n\r\n    hide() {\r\n        if (this.modalRef) {\r\n            this.modalRef.hide();\r\n        }\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL21hdGVyaWFpcy1kdXBsaWNhdGEvbWF0ZXJpYWlzLWR1cGxpY2F0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-corte-dobra',\r\n  templateUrl: './corte-dobra.component.html',\r\n  styleUrls: ['./corte-dobra.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroCorteDobraComponent\r\n  implements OnInit {\r\n  corteDobra: any = [];\r\n  corteDobraLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getCorteDobra(params['id']);\r\n    });\r\n  }\r\n\r\n  getCorteDobra(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getCorteDobra(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.corteDobra = response['result'];\r\n        }\r\n        this.corteDobraLoaded = true;\r\n      });\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!corteDobraLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carregando Corte Dobra...</strong>\\r\\n    </div>\\r\\n    <custom-table *ngIf=\\\"corteDobra.length > 0\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Identificacion</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Obra</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Discriminación</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of corteDobra\\\">\\r\\n          <td class=\\\"text-center\\\">{{ item.identificacao }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.data }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.obra }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.discriminacao }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.empresa }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <empty-result\\r\\n      message=\\\"Nenhuma informação encontrada\\\"\\r\\n      *ngIf=\\\"corteDobra.length == 0 && corteDobraLoaded\\\">\\r\\n    </empty-result>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialClientesUltimosPrecosService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/clientes/ultimos-precos`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaUltimosPrecos(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/clientes/historico-financeiro`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getPermissaoAcesso(id: any) {\r\n    return this.http.get(`${this.API}/permissao-acesso/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getResumoSintetico(id: any, grupoEconomico: any) {\r\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\r\n\r\n    return this.http\r\n      .get(`${this.API}/resumo/sintetico/${id}`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getGrupoEconomico(id: any) {\r\n    return this.http.get(`${this.API}/grupo-economico/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getResumoPedidos(id: any, grupoEconomico: any) {\r\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\r\n\r\n    return this.http\r\n      .get(`${this.API}/resumo/pedidos/${id}`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhesPedidos(id: any, grupoEconomico: any) {\r\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\r\n\r\n    return this.http\r\n      .get(`${this.API}/detalhes/pedidos/${id}`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getMateriaisDuplicata(params: any) {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais-duplicata`, {\r\n        params: httpParams\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAcumulosMensais(id: any) {\r\n    return this.http.get(`${this.API}/acumulos-mensais/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getNotasPromissorias(id: any) {\r\n    return this.http.get(`${this.API}/notas-promissorias/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getDebitos(id: any) {\r\n    return this.http.get(`${this.API}/debitos/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getCorteDobra(id: any) {\r\n    return this.http.get(`${this.API}/corte-dobra/${id}`).pipe(take(1));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-debitos',\r\n  templateUrl: './debitos.component.html',\r\n  styleUrls: ['./debitos.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroDebitosComponent\r\n  implements OnInit {\r\n  debitos: any = [];\r\n  debitosLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getDebitos(params['id']);\r\n    });\r\n  }\r\n\r\n  getDebitos(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getDebitos(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.debitos = response['result'];\r\n        }\r\n        this.debitosLoaded = true;\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'COM NOTA') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'SEM NOTA') {\r\n      borderClass = 'border-primary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-acumulos-mensais',\r\n  templateUrl: './acumulos-mensais.component.html',\r\n  styleUrls: ['./acumulos-mensais.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent\r\n  implements OnInit {\r\n  acumulosMensais: any = {};\r\n  acumulosMensaisLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getAcumulosMensais(params['id']);\r\n    });\r\n  }\r\n\r\n  getAcumulosMensais(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getAcumulosMensais(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.acumulosMensais = response['result'];\r\n        }\r\n        this.acumulosMensaisLoaded = true;\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`,  {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getUpSellService(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_suplementarios`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos() {\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormRulesService {\r\n  private readonly API = `http://23.254.204.187/api/common/services`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n    getRules(formRef: number): Observable<any> {\r\n    return this.http.get(`${this.API}/form-rules/${formRef}`).pipe(take(1));\r\n  }\r\n}\r\n","export default \".modal {\\n  display: none;\\n  position: fixed;\\n  z-index: 1;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto;\\n  background-color: rgba(0, 0, 0, 0.4);\\n}\\n\\n.modal-content {\\n  background-color: #fefefe;\\n  margin: 15% auto;\\n  padding: 20px;\\n  border: 1px solid #888;\\n  width: 80%;\\n}\\n\\n.contacto {\\n  text-transform: uppercase;\\n  font-weight: bold;\\n}\\n\\n.close {\\n  color: #aaa;\\n  float: right;\\n  font-size: 28px;\\n  font-weight: bold;\\n}\\n\\n.close:hover,\\n.close:focus {\\n  color: black;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n\\n.info-box {\\n  border: 1px solid #333;\\n  background-color: #f5f5f5;\\n  padding: 7px;\\n  margin-top: 10px;\\n}\\n\\np {\\n  margin-bottom: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2xpZW50ZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsZUFBQTtFQUNBLFVBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLG9DQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsVUFBQTtBQUNGOztBQUNBO0VBQ0UseUJBQUE7RUFDQSxpQkFBQTtBQUVGOztBQUNBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFFRjs7QUFDQTs7RUFFRSxZQUFBO0VBQ0EscUJBQUE7RUFDQSxlQUFBO0FBRUY7O0FBQUE7RUFDRSxzQkFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0FBR0Y7O0FBREE7RUFDRSxnQkFBQTtBQUlGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2xpZW50ZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kYWwge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHotaW5kZXg6IDE7XHJcbiAgbGVmdDogMDtcclxuICB0b3A6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcclxufVxyXG5cclxuLm1vZGFsLWNvbnRlbnQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZWZlZmU7XHJcbiAgbWFyZ2luOiAxNSUgYXV0bztcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7XHJcbiAgd2lkdGg6IDgwJTtcclxufVxyXG4uY29udGFjdG8ge1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5jbG9zZSB7XHJcbiAgY29sb3I6ICNhYWE7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIGZvbnQtc2l6ZTogMjhweDtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLmNsb3NlOmhvdmVyLFxyXG4uY2xvc2U6Zm9jdXMge1xyXG4gIGNvbG9yOiBibGFjaztcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi5pbmZvLWJveCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzMzMzsgXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTsgXHJcbiAgcGFkZGluZzogN3B4OyBcclxuICBtYXJnaW4tdG9wOiAxMHB4OyBcclxufVxyXG5we1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3ByZS1jYWRhc3Ryby9wcmUtY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n// ng-brazil\r\nimport { MASKS, NgBrazilValidators } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n// Services\r\nimport { ComercialClientesPreCadastroService } from './pre-cadastro.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\nimport { CnpjService } from 'src/app/shared/services/ws/cnpj.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { FunctionsService } from 'src/app/shared/services/core/functions.service';\r\nimport { array } from '@amcharts/amcharts4/core';\r\nimport { number } from 'ng-brazil/number/validator';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-pre-cadastro',\r\n  templateUrl: './pre-cadastro.component.html',\r\n  styleUrls: ['./pre-cadastro.component.scss'],\r\n})\r\nexport class ComercialClientesPreCadastroComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  @ViewChild('modalDetalhesCliente', {}) modalDetalhesCliente: TemplateRef<any>;\r\n\r\n  modalRef: BsModalRef;\r\n  modalConfig = {\r\n    ignoreBackdropClick: true,\r\n  };\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home',\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n      routerLink: '/comercial/clientes',\r\n    },\r\n    {\r\n      descricao: 'Pre-Registro',\r\n    },\r\n  ];\r\n\r\n  public MASKS = MASKS;\r\n\r\n  vendedores: any = [];\r\n  cnaes: any = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  tipoPessoa: any = {};\r\n  submittingForm = false;\r\n  latitud: number = 0;\r\n  longitud: number = 0;\r\n  swActivarLatitud: boolean = false;\r\n  maxLengthRules: any = {};\r\n  maxLengthMessages: any = {};\r\n  id_marcador: number = 0;\r\n\r\n  dadosCliente: any = {};\r\n  ciudades: any = [];\r\n\r\n  tipos_clientes: any = [];\r\n  index_array_ubicacion: number = 0;\r\n  titulo_ubicacion_array: string = '';\r\n  id_ciudad: number = 0;\r\n\r\n\r\n  index_array_contactos: number = 0;\r\n  titulo_contacto_array: string = '';\r\n  nombre_contacto_array: string = '';\r\n  apellido_p_contacto_array: string = '';\r\n  apellido_m_contacto_array: string = '';\r\n  telefono_contacto_array: string = '';\r\n  celular_contacto_array: string = '';;\r\n  direccion_contacto_array: string = '';;\r\n\r\n\r\n  ubicacionCollapse: boolean = false; // Inicialmente oculto\r\n  contactoCollapse: boolean = false; // Inicialmente oculto\r\n\r\n  ubicacionFormularios: any[] = [];\r\n  contactoFormularios: any[] = [];\r\n  formObj: FormGroup;\r\n  formObjArray: any[] = [];\r\n  ubicaciones: any[] = [];\r\n  ciudad_vendedor: number = 0;\r\n  private coloresDisponibles: string[] = [\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF0000',\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FC9F3A',\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFF00',\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00FF00',\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFFFF',\r\n  ];\r\n\r\n\r\n  constructor(\r\n    private preCadastroService: ComercialClientesPreCadastroService,\r\n    private formBuilder: FormBuilder,\r\n    private location: Location,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private clientesService: ComercialClientesService,\r\n    private pnotifyService: PNotifyService,\r\n    private cnpjService: CnpjService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private functionsService: FunctionsService,\r\n    private modalService: BsModalService\r\n\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.titleService.setTitle('Pre-Registro');\r\n    this.getFormFields();\r\n    this.obtenerTiposClientes();\r\n    this.activatedRoute.queryParams.subscribe((queryParams: any) => {\r\n      let documento = null;\r\n\r\n\r\n      this.registrarAcesso();\r\n      this.setMaxLengthRules();\r\n      this.setFormBuilder(documento);\r\n      this.formObj = this.formBuilder.group({\r\n        ubicacion: this.formBuilder.array([]), // Debes configurar esto según tu estructura\r\n        contactos: this.formBuilder.array([]), // Debes configurar esto según tu estructura\r\n        // Otros campos del formulario principal aquí\r\n\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  changeVendedor(a) {\r\n    this.clientesService.getVendedorCiudad(a)\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 200) {\r\n           // console.log(response.result.latitud);\r\n            this.latitud = response.result.latitud;\r\n            this.longitud = response.result.longitud;\r\n            this.ciudad_vendedor = response.result.id_ciudad\r\n           // console.log(this.ciudad_vendedor);\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n        },\r\n        (error) => {\r\n/*           console.error('Error al cargar dependencias:', error);\r\n */          this.handleFormFieldsError();\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n  obtenerTiposClientes() {\r\n    this.clientesService.getTipoClientes()\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 200) {\r\n            this.tipos_clientes = response.result;\r\n\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n        },\r\n        (error) => {\r\n/*           console.error('Error al cargar dependencias:', error);\r\n */          this.handleFormFieldsError();\r\n        }\r\n      )\r\n  }\r\n\r\n  /* actualizarMarcador(event: any) {\r\n    this.latitud = event.coords.lat;\r\n    this.longitud = event.coords.lng;\r\n  } */\r\n  actualizarMarcador(index: number, latitud, longitud): void {\r\n    /* console.log(this.latitud); */\r\n\r\n\r\n    this.id_marcador = index;\r\n    //this.ubicacionFormularios[index].color = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00FF00';\r\n    // Actualizar solo la ubicación del marcador en la posición 'index'\r\n    this.ubicaciones[index].latitud = latitud;\r\n    this.ubicacionFormularios[index].latitud = latitud;\r\n    this.ubicaciones[index].longitud = longitud\r\n    this.ubicacionFormularios[index].longitud = longitud;\r\n\r\n\r\n    //this.cambiarColorMarcador(index);\r\n  }\r\n\r\n  cambiarColorMarcador(i: number) {\r\n    this.ubicaciones[i].color = 'blue';\r\n  }\r\n\r\n\r\n  actualizarMapa(event: any) {\r\n    //console.log(event);\r\n    this.latitud = event.coords.lat;\r\n    this.longitud = event.coords.lng;\r\n    this.actualizarMarcador(this.id_marcador, this.latitud, this.longitud);\r\n    this.actualizarDireccion(this.id_marcador, event);\r\n  }\r\n\r\n  actualizarDireccion(index, event: any) {\r\n    this.obtenerDireccion(event.coords.lat, event.coords.lng)\r\n      .then((direccion_mapa: string) => {\r\n        this.ubicacionFormularios[index].direccion = direccion_mapa;\r\n      })\r\n      .catch((error: any) => {\r\n        /*  this.form.controls['direccion'].setValue(\r\n            'Error al obtener la dirección'\r\n         ); */\r\n      });\r\n  }\r\n\r\n  public obtenerDireccion(latitud: number, longitud: number): Promise<string> {\r\n    return fetch(\r\n      `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitud},${longitud}&key=AIzaSyDl5b7STz9xYNDhybTTer2POVncX9FYqCc`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const resultado = data.results[0];\r\n        if (resultado) {\r\n          return resultado.formatted_address;\r\n        } else {\r\n          return 'Dirección no encontrada';\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return 'Error al obtener la dirección';\r\n      });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getFormFields() {\r\n    this.preCadastroService\r\n      .loadDependencies()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          //console.log('Datos obtenidos en loadDependencies():', response[0].data);\r\n\r\n          if (response[0].responseCode === 200) {\r\n            this.vendedores = response[0].data;\r\n\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n\r\n          if (response[1].responseCode === 200) {\r\n            this.cnaes = response[1].result.map(cnae => ({\r\n              id_cnae: cnae.id,\r\n              descripcion: cnae.descricao,\r\n              codigo: cnae.codigo\r\n            })); ///console.log(\"cnaes: \", this.cnaes);\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n          if (response[2].responseCode === 200) {\r\n            this.ciudades = response[2].result;\r\n            //console.log(this.ciudades);\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          } //console.log(\"cnaes: \", this.ciudades);\r\n        },\r\n        (error) => {\r\n          //console.error('Error al cargar dependencias:', error);\r\n          this.handleFormFieldsError();\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n  handleFormFieldsError() {\r\n    this.pnotifyService.error();\r\n    this.location.back();\r\n  }\r\n\r\n  setMaxLengthRules() {\r\n    this.maxLengthRules = this.activatedRoute.snapshot.data.rules.data;\r\n    this.maxLengthMessages = {\r\n      nome: `El nombre debe contener ${this.maxLengthRules.nome} caracteres.`,\r\n      apellido1: `Apellido debe contener ${this.maxLengthRules.apellido1} caracteres.`,\r\n      apellido2: `Apellido debe contener ${this.maxLengthRules.apellido1} caracteres.`,\r\n      razaoSocial: `El nombre de la empresa debe contener ${this.maxLengthRules.razaoSocial} caracteres.`,\r\n      nomeFantasia: `El nombre comercial debe contener hasta ${this.maxLengthRules.nomeFantasia} caracteres.`,\r\n      email: `El correo electrónico debe llegar a ${this.maxLengthRules.email} caracteres.`,\r\n    };\r\n  }\r\n  agregarUbicacionALaFormObj(datosUbicacion: any) {\r\n    const ubicacionFormArray = this.formObj.get('ubicacion') as FormArray;\r\n    ubicacionFormArray.push(this.formBuilder.group(datosUbicacion));\r\n  }\r\n\r\n  // Crea una función para agregar datos de contacto al formulario principal\r\n  agregarContactoALaFormObj(datosContacto: any) {\r\n    const contactoFormArray = this.formObj.get('contactos') as FormArray;\r\n    contactoFormArray.push(this.formBuilder.group(datosContacto));\r\n  }\r\n\r\n  repetirFormulario(tipoFormulario: string) {\r\n    this.swActivarLatitud = false;\r\n\r\n\r\n    if (tipoFormulario === 'Ubicacion' && this.ubicacionFormularios.length < 5) {\r\n\r\n\r\n      const nuevoFormulario = this.crearFormularioUbicacionConDatosIngresados();\r\n\r\n      this.agregarUbicacionALaFormObj(nuevoFormulario);\r\n      this.ubicacionFormularios.push(nuevoFormulario);\r\n      if (this.ubicacionFormularios.length > 0) {\r\n        this.ubicacionFormularios[this.index_array_ubicacion].ubicacion = this.titulo_ubicacion_array;\r\n        this.ubicacionFormularios[this.index_array_ubicacion].id_ciudad = this.id_ciudad;\r\n\r\n\r\n      }\r\n      //console.log(this.index_array);\r\n\r\n      // También debes agregar este formulario al formulario principal.\r\n      this.formObjArray[0].ubicacion.push(nuevoFormulario);\r\n    } else if (tipoFormulario === 'Contacto' && this.contactoFormularios.length < 5) {\r\n      const nuevoFormulario = this.crearFormularioContactoConDatosIngresados();\r\n\r\n\r\n      this.agregarContactoALaFormObj(nuevoFormulario);\r\n      this.contactoFormularios.push(nuevoFormulario);\r\n\r\n      if (this.contactoFormularios.length > 0) {\r\n        //console.log(this.titulo_contacto_array);\r\n\r\n        this.contactoFormularios[this.index_array_contactos].titulo_contacto = this.titulo_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].nombres_contacto = this.nombre_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].apellido_contacto = this.apellido_p_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].apellido2_contacto = this.apellido_m_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].telefono_contacto = this.telefono_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].direccion_contacto = this.direccion_contacto_array;\r\n      }\r\n\r\n      //console.log(this.contactoFormularios);\r\n      (this.formObj.get('contactos') as FormArray).push(nuevoFormulario);\r\n    } else {\r\n      /* console.log('Se alcanzó el máximo de formularios permitidos para este tipo.'); */\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  eliminarContacto(index, tipo) {\r\n    if (tipo == 1) {\r\n      this.contactoFormularios.splice(index, 1);\r\n    } else if (tipo == 2) {\r\n      this.ubicacionFormularios.splice(index, 1);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  crearFormularioUbicacionConDatosIngresados(): any {\r\n\r\n    return {\r\n      ubicacion: '',\r\n      direccion: '',\r\n      id_ciudad: this.ciudad_vendedor,\r\n      latitud: '',\r\n      longitud: '',\r\n      swActivarLatitud: this.swActivarLatitud\r\n    };\r\n\r\n  }\r\n\r\n  crearFormularioContactoConDatosIngresados(): any {\r\n    return {\r\n      titulo_contacto: '',\r\n      nombres_contacto: '',\r\n      apellido_contacto: '',\r\n      apellido2_contacto: '',\r\n      telefono_contacto: '',\r\n      celular_contacto: '',\r\n      direccion_contacto: '',\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  setFormBuilder(documento: string) {\r\n\r\n    this.form = this.formBuilder.group({\r\n      //cnpj_cpf: [null,Validators.required],\r\n      nit: [null, Validators.required],\r\n      ci: [null, Validators.required],\r\n\r\n      nome: [\r\n        null,\r\n        [Validators.required, Validators.maxLength(this.maxLengthRules.nome)],\r\n      ],\r\n\r\n      contacto: [null],\r\n      razaoSocial: [null],\r\n      nomeFantasia: [null],\r\n      nombre_factura: [null],\r\n      vendedor: [null, Validators.required],\r\n      cnae: [null],\r\n      email: [null,\r\n        [\r\n          Validators.email,\r\n          Validators.maxLength(this.maxLengthRules.email),\r\n        ],\r\n      ],\r\n      telefone: [null],\r\n      celular: [null],\r\n      direccion: [null],\r\n      tipopessoa: [null],\r\n      nombres_contacto: [null],\r\n      apellido_contacto: [null],\r\n      apellido2_contacto: [null],\r\n      telefono_contacto: [null],\r\n      celular_contacto: [null],\r\n      ciudad: [null],\r\n      direccion_contacto: [null],\r\n      ciudadUbi: [null],\r\n      titulo_contacto: [null],\r\n      titulo_ubicacion: [],\r\n      ubicacion: this.formBuilder.array([]),\r\n      contactos: this.formBuilder.array([]),\r\n      nombre_ciudad: [],\r\n      tipo_cliente: []\r\n\r\n\r\n\r\n    });\r\n\r\n    this.form.get('tipopessoa').valueChanges.subscribe((value) => {\r\n      if (value === 'P' || value === 'G' || value === 'E') {\r\n        this.form.get('nit').setValidators([Validators.required]);\r\n        this.form.get('razaoSocial').setValidators([Validators.required]);\r\n      } else {\r\n        this.form.get('nit').clearValidators();\r\n        this.form.get('razaoSocial').clearValidators();\r\n      }\r\n      this.form.get('nit').updateValueAndValidity();\r\n      this.form.get('razaoSocial').updateValueAndValidity();\r\n    });\r\n\r\n  }\r\n  onSubmit() {\r\n    /* this.postAkna(20081);\r\n    return; */\r\n\r\n    const tipoPessoaOptions = {\r\n      S: 'Sociedades',\r\n      P: 'Privado',\r\n      G: 'Gobierno',\r\n      E: 'Empleado'\r\n    };\r\n    const tipopessoa = this.form.value.tipopessoa;\r\n    const tipopersona = tipoPessoaOptions[tipopessoa];\r\n    const data = {\r\n      ubicacion: [],\r\n      contactos: [],\r\n    };\r\n    /*  console.log(this.ubicacionFormularios); */\r\n    /* this.ubicacionFormularios.forEach((formulario) => {\r\n\r\n      data.ubicacion.push(formulario.value);\r\n    }); */\r\n    //console.log(this.ubicacionFormularios)\r\n    data.ubicacion = this.ubicacionFormularios\r\n\r\n    // Agregar datos de contactos desde contactoFormularios\r\n   /*  console.log(this.contactoFormularios); */\r\n    data.contactos = this.contactoFormularios\r\n\r\n\r\n\r\n    if (this.form.valid) {\r\n      this.loaderNavbar = true;\r\n      this.submittingForm = true;\r\n      let formObj = {};\r\n\r\n      formObj = {\r\n        tipo_pessoa: tipopessoa,\r\n        tipo_persona: tipopersona,\r\n        id_vendedor: this.form.value.vendedor,\r\n        nombres: this.form.value.nome,\r\n        razonSocial: this.form.value.razaoSocial,\r\n        nombre_factura: this.form.value.nombre_factura,\r\n        nit: this.form.value.nit,\r\n        cnpj_cpf: this.form.value.ci,\r\n        id_rubro: this.form.value.cnae,\r\n        email: this.form.value.email,\r\n        telefono: this.form.value.telefone,\r\n        celular: this.form.value.celular,\r\n        ubicacion: data.ubicacion, // Asigna los datos de ubicación directamente aquí\r\n        contactos: data.contactos,\r\n        id_tipo_cliente: this.form.value.tipo_cliente\r\n\r\n      }; /* console.log('Datos antes de enviarlos:', formObj);*/\r\n      this.clientesService\r\n\r\n        .sapPostClient(formObj)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderNavbar = false;\r\n            this.submittingForm = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n\r\n            if (response.response === 200) {\r\n              this.pnotifyService.success('Cliente registrado.');\r\n              this.formChanged = false;\r\n              this.router.navigate(['../cadastro', response.result], {\r\n                relativeTo: this.activatedRoute,\r\n              });\r\n            } else if (response.response === 204) {\r\n              this.pnotifyService.notice('No se registro.');\r\n            } else {\r\n              this.pnotifyService.notice(` ${response.detalle}`);\r\n            }\r\n          },\r\n          (error: any) => {\r\n            this.pnotifyService.notice('Ocurrio un error.');\r\n          }\r\n        );\r\n\r\n    }\r\n    this.form.reset()\r\n  }\r\n\r\n  setType(type: string) {\r\n    // this.tipoPessoa = type;\r\n    this.form.reset();\r\n  }\r\n\r\n\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field) != '') {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  agregarDireccion(index: number) {\r\n    //console.log(index);\r\n    this.ubicaciones[index] = { latitud: this.latitud, longitud: this.longitud, color: this.generarColorAleatorio() }\r\n    if (index >= 0) {\r\n      this.ubicacionFormularios[index].swActivarLatitud = true\r\n    } else {\r\n      this.ubicacionFormularios[index].swActivarLatitud = false\r\n    }\r\n  }\r\n\r\n  generarColorAleatorio(): string {\r\n    if (this.coloresDisponibles.length === 0) {\r\n      return null; // No quedan colores disponibles\r\n    }\r\n\r\n    const indiceAleatorio = Math.floor(Math.random() * this.coloresDisponibles.length);\r\n    const colorAleatorio = this.coloresDisponibles.splice(indiceAleatorio, 1)[0];\r\n    return colorAleatorio;\r\n  }\r\n  actualizarUbicacion(index: number) {\r\n    // Actualiza las coordenadas de la ubicación en el arreglo\r\n    this.ubicaciones[index].latitud = this.latitud;\r\n    this.ubicaciones[index].longitud = this.longitud;\r\n  }\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n\r\n      if (field.errors.hasOwnProperty('maxlength') && field.touched) {\r\n        return 'maxlength';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required ';\r\n    }\r\n  }\r\n\r\n  showDetails(): void {\r\n    this.modalRef = this.modalService.show(\r\n      this.modalDetalhesCliente,\r\n      this.modalConfig\r\n    );\r\n  }\r\n\r\n  onCloseDetails(): void {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  onNavigateDetail(): void {\r\n    if (this.dadosCliente.podeAcessar == 1) {\r\n      this.onCloseDetails();\r\n      this.router.navigate(['../detalhes', this.dadosCliente.codCliente], {\r\n        relativeTo: this.activatedRoute,\r\n      });\r\n    } else {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\r\n    }\r\n  }\r\n\r\n  onInput() {\r\n    this.formChanged = true;\r\n\r\n\r\n  }\r\n\r\n  actualizarPosicion(atributo, index) {\r\n    //console.log(atributo)\r\n    //this.ubicacionFormularios[index].titulo_ubicacion = atributo;\r\n    //console.log(this.ubicacionFormularios[index].titulo_ubicacion)\r\n   this.titulo_ubicacion_array = atributo;\r\n    this.index_array_ubicacion = index;\r\n\r\n    this.ubicacionFormularios[index].ubicacion= atributo\r\n    //console.log(this.ubicacionFormularios)\r\n  }\r\n  actualizarContacto(atributo, tipo, index) {\r\n    /*  console.log(atributo) */\r\n    this.index_array_contactos = index\r\n    switch (tipo) {\r\n      case 1:\r\n        this.titulo_contacto_array = atributo;\r\n        this.contactoFormularios[index].titulo_contacto = this.titulo_contacto_array;\r\n        break;\r\n      case 2:\r\n        this.nombre_contacto_array = atributo;\r\n        this.contactoFormularios[index].nombres_contacto = this.nombre_contacto_array;\r\n        break;\r\n      case 3:\r\n        this.apellido_p_contacto_array = atributo;\r\n        this.contactoFormularios[index].apellido_contacto = this.apellido_p_contacto_array;\r\n        break;\r\n      case 4:\r\n        this.apellido_m_contacto_array = atributo;\r\n        this.contactoFormularios[index].apellido2_contacto = this.apellido_m_contacto_array;\r\n        break;\r\n      case 5:\r\n        this.telefono_contacto_array = atributo;\r\n        this.contactoFormularios[index].telefono_contacto = this.telefono_contacto_array;\r\n        break;\r\n      case 6:\r\n        this.celular_contacto_array = atributo;\r\n        this.contactoFormularios[index].celular_contacto = this.celular_contacto_array;\r\n        break;\r\n      case 7:\r\n        this.direccion_contacto_array = atributo;\r\n        this.contactoFormularios[index].direccion_contacto = this.direccion_contacto_array ;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  cambiarCiudad(id, index) {\r\n    this.id_ciudad = id;\r\n    this.index_array_ubicacion = index;\r\n    this.ubicacionFormularios[index].id_ciudad= id\r\n\r\n\r\n    //console.log(this.id_ciudad);\r\n    \r\n  }\r\n\r\n  formCanDeactivate() {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onCancel() {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n  FormArray\r\n} from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ng-brazil\r\nimport { utilsBr } from 'js-brasil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { PdfService } from 'src/app/shared/services/core/pdf.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n@Component({\r\n  selector: 'comercia-clientes-proposta-analise-credito',\r\n  templateUrl: './proposta-analise-credito.component.html',\r\n  styleUrls: ['./proposta-analise-credito.component.scss']\r\n})\r\nexport class ComercialClientesPropostaAnaliseCreditoComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  loaderNavbar: boolean = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  codCliente: number;\r\n\r\n  tipoVisao: string = 'formulario';\r\n  dataFicha: any = [];\r\n\r\n  form: FormGroup;\r\n  formChanged: boolean = false;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private pnotifyService: PNotifyService,\r\n    private pdfService: PdfService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.codCliente = params['id'];\r\n\r\n      this.registrarAcesso();\r\n      this.setBreadCrumb(this.codCliente);\r\n      this.titleService.setTitle('Proposta para análise de crédito');\r\n\r\n      if (this.activatedRoute.snapshot.data['data']['responseCode'] === 200) {\r\n        this.setFormBuilder(\r\n          this.activatedRoute.snapshot.data['data']['result']\r\n        );\r\n      } else {\r\n        this.pnotifyService.error();\r\n        this.location.back();\r\n      }\r\n    });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(id: number) {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home'\r\n      },\r\n      {\r\n        descricao: 'Busqueda de clientes',\r\n        routerLink: '/comercial/clientes/lista'\r\n      },\r\n      {\r\n        descricao: 'Detalhes',\r\n        routerLink: `/comercial/clientes/detalhes/${id}`\r\n      },\r\n      {\r\n        descricao: 'Proposta para análise de crédito'\r\n      }\r\n    ];\r\n  }\r\n\r\n  setFormBuilder(data: any) {\r\n    this.form = this.formBuilder.group({\r\n      razaoSocial: [\r\n        { value: data['razaoSocial'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      dataSolicitacao: [new Date(), [Validators.required]],\r\n      codCliente: [\r\n        { value: data['codCliente'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      codClienteDBA: [{ value: data['codClienteDBA'], disabled: true }],\r\n      setorAtividade: [\r\n        { value: data['setorAtividade'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      dataUltimaVisita: [null],\r\n      instalacoes: [null],\r\n      numFuncionarios: [null],\r\n      limiteCreditoAtual: [data['limiteCredito']],\r\n      limiteCreditoSolicitado: [null, [Validators.required]],\r\n      condicaoPagto: [null, [Validators.required]],\r\n      nomeVendedor: [\r\n        { value: data['nomeVendedor'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      telefoneVendedor: [\r\n        { value: data['telefoneVendedor'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      gestorVendas: [null, [Validators.required]],\r\n      nomeEscritorio: [\r\n        { value: data['nomeEscritorio'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      fornecedores: this.formBuilder.array([]),\r\n      clientes: this.formBuilder.array([]),\r\n      vendasConcentradas: [null],\r\n      bancos: this.formBuilder.array([]),\r\n      previsaoCompraTon: [null],\r\n      previsaoCompraValor: [null],\r\n      faturamentoMedio: [null],\r\n      parecerVendedor: [null, [Validators.required]]\r\n    });\r\n\r\n    this.setFormFornecedoresClientesBancos();\r\n  }\r\n\r\n  setFormFornecedoresClientesBancos() {\r\n    this.onAddFornecedor();\r\n    this.onAddBanco();\r\n  }\r\n\r\n  get fornecedores() {\r\n    return this.form.get('fornecedores') as FormArray;\r\n  }\r\n\r\n  get clientes() {\r\n    return this.form.get('clientes') as FormArray;\r\n  }\r\n\r\n  get bancos() {\r\n    return this.form.get('bancos') as FormArray;\r\n  }\r\n\r\n  onAddFornecedor() {\r\n    this.fornecedores.push(\r\n      this.formBuilder.group({\r\n        nome: [null, [Validators.required]],\r\n        telefone: [null]\r\n      })\r\n    );\r\n  }\r\n\r\n  onAddCliente() {\r\n    this.clientes.push(\r\n      this.formBuilder.group({\r\n        nome: [null]\r\n      })\r\n    );\r\n  }\r\n\r\n  onAddBanco() {\r\n    this.bancos.push(\r\n      this.formBuilder.group({\r\n        nome: [null, [Validators.required]],\r\n        agencia: [null, [Validators.required]],\r\n        contaCorrente: [null, [Validators.required]],\r\n        telefone: [null, [Validators.required]]\r\n      })\r\n    );\r\n  }\r\n\r\n  onDeleteFornecedor(index: number) {\r\n    if (this.fornecedores.length > 1) {\r\n      this.fornecedores.removeAt(index);\r\n    } else {\r\n      this.pnotifyService.notice('Informe ao menos um fornecedor.');\r\n    }\r\n  }\r\n\r\n  onDeleteCliente(index: number) {\r\n    this.clientes.removeAt(index);\r\n  }\r\n\r\n  onDeleteBanco(index: number) {\r\n    if (this.bancos.length > 1) {\r\n      this.bancos.removeAt(index);\r\n    } else {\r\n      this.pnotifyService.notice('Informe ao menos um banco.');\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onNestedFieldError(formGroup: string, index: number, field: string) {\r\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n    field = nestedForm.controls[index].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n\r\n    if (nestedForm.controls[index].get(field).validator) {\r\n      let validationResult = nestedForm.controls[index]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onInput() {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate() {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      this.loaderNavbar = true;\r\n      setTimeout(() => {\r\n        const formData = this.form.getRawValue();\r\n\r\n        let dataSolicitacao = `${(formData[\r\n          'dataSolicitacao'\r\n        ] as Date).getDate()}/${(formData[\r\n          'dataSolicitacao'\r\n        ] as Date).getMonth() + 1}/${(formData[\r\n          'dataSolicitacao'\r\n        ] as Date).getFullYear()}`;\r\n\r\n        let dataUltimaVisita: string;\r\n        if (formData['dataUltimaVisita'] != null) {\r\n          dataUltimaVisita = `${(formData[\r\n            'dataUltimaVisita'\r\n          ] as Date).getDate()}/${(formData[\r\n            'dataUltimaVisita'\r\n          ] as Date).getMonth() + 1}/${(formData[\r\n            'dataUltimaVisita'\r\n          ] as Date).getFullYear()}`;\r\n        }\r\n\r\n        this.tipoVisao = 'ficha';\r\n        this.dataFicha = {\r\n          razaoSocial: formData['razaoSocial'],\r\n          dataSolicitacao: dataSolicitacao,\r\n          codCliente: formData['codCliente'],\r\n          codClienteDBA: formData['codClienteDBA'],\r\n          setorAtividade: formData['setorAtividade'],\r\n          dataUltimaVisita: dataUltimaVisita,\r\n          instalacoes: formData['instalacoes'],\r\n          numFuncionarios: formData['numFuncionarios'],\r\n          limiteCreditoAtual: formData['limiteCreditoAtual'],\r\n          limiteCreditoSolicitado: formData['limiteCreditoSolicitado'],\r\n          condicaoPagto: formData['condicaoPagto'],\r\n          nomeVendedor: formData['nomeVendedor'],\r\n          telefoneVendedor: formData['telefoneVendedor'],\r\n          gestorVendas: formData['gestorVendas'],\r\n          nomeEscritorio: formData['nomeEscritorio'],\r\n          fornecedores: formData['fornecedores'],\r\n          clientes: formData['clientes'],\r\n          bancos: formData['bancos'],\r\n          vendasConcentradas: formData['vendasConcentradas'],\r\n          previsaoCompraTon: formData['previsaoCompraTon'],\r\n          previsaoCompraValor: formData['previsaoCompraValor'],\r\n          faturamentoMedio: formData['faturamentoMedio'],\r\n          parecerVendedor: formData['parecerVendedor']\r\n        };\r\n\r\n        this.formChanged = false;\r\n        this.loaderNavbar = false;\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.loaderNavbar = true;\r\n    setTimeout(() => {\r\n      this.tipoVisao = 'formulario';\r\n      this.loaderNavbar = false;\r\n    }, 1000);\r\n  }\r\n\r\n  onDownload() {\r\n    this.loaderNavbar = true;\r\n    this.pdfService.download(\r\n      'impressao-ficha-pac',\r\n      `${this.codCliente}_PropostaAnaliseCredito`\r\n    );\r\n\r\n    setTimeout(() => {\r\n      this.loaderNavbar = false;\r\n    }, 500);\r\n  }\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// ngx-filter-pipe\r\nimport { FilterPipe } from 'ngx-filter-pipe';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-resumo',\r\n  templateUrl: './resumo.component.html',\r\n  styleUrls: ['./resumo.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroResumoComponent\r\n  implements OnInit {\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  sinteticoPendenciasLoaded: boolean = false;\r\n\r\n  codCliente: number;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  sintetico: any = {\r\n    atrasoPagamento: 0,\r\n    tempoEntrega: 0,\r\n    totalAtraso: 0,\r\n    pagtoAntecipado: 0,\r\n    creditoSeguradora: 0\r\n  };\r\n\r\n  countoAtrasoPagamento: number;\r\n  countoTempoEntrega: number;\r\n  countoTotalAtraso: number;\r\n  countoPagtoAntecipado: number;\r\n  countoCreditoSeguradora: number;\r\n  countoTitulos: number;\r\n  countoNotasDebito: number;\r\n  countoNotasPromissorias: number;\r\n  countoChequesDevolvidos: number;\r\n  countoCorteDobra: number;\r\n  countoReservaBobinas: number;\r\n  countoLimiteCredito: number;\r\n  countoSaldo: number;\r\n\r\n  grupoEconomico: any = [];\r\n  grupoEconomicoLoaded: boolean = false;\r\n\r\n  showPendenciasDetalhes: boolean = false;\r\n\r\n  pendencias: any = {\r\n    titulos: 0,\r\n    notasDebito: 0,\r\n    notasPromissorias: 0,\r\n    chequesDevolvidos: 0,\r\n    corteDobra: 0,\r\n    reservaBobinas: 0,\r\n    limiteCredito: 0,\r\n    saldo: 0\r\n  };\r\n\r\n  pedidos: any = [];\r\n  pedidosPagination: any = [];\r\n  pedidosFiltered: any = [];\r\n  pedidosLoaded: boolean = false;\r\n\r\n  maxSize: number = 8;\r\n  itemsPerPage: number = 10;\r\n\r\n  visaoGrupoEconomico: boolean = false;\r\n  queryParams: any = { grupoEconomico: this.visaoGrupoEconomico };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService,\r\n    private modalService: BsModalService,\r\n    private filterPipe: FilterPipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(queryParams => {\r\n      this.activatedRoute.parent.params.subscribe(params => {\r\n        let grupoEconomico = false;\r\n\r\n        if (\r\n          queryParams['grupoEconomico'] &&\r\n          queryParams['grupoEconomico'] == 'true'\r\n        ) {\r\n          grupoEconomico = true;\r\n          this.visaoGrupoEconomico = true;\r\n          this.queryParams = {\r\n            grupoEconomico: this.visaoGrupoEconomico\r\n          };\r\n        }\r\n\r\n        this.codCliente = params['id'];\r\n        this.getResumoSintetico(this.codCliente, grupoEconomico);\r\n        this.getGrupoEconomico(this.codCliente);\r\n        this.getPedidos(this.codCliente, grupoEconomico);\r\n      });\r\n    });\r\n  }\r\n\r\n  onChangeGrupoEconomico() {\r\n    this.onLoadingGrupoEconomico();\r\n    this.queryParams = { grupoEconomico: this.visaoGrupoEconomico };\r\n\r\n    this.router.navigate(\r\n      [`/comercial/clientes/historico-financeiro/${this.codCliente}/resumo`],\r\n      {\r\n        queryParams: this.queryParams\r\n      }\r\n    );\r\n  }\r\n\r\n  onLoadingGrupoEconomico() {\r\n    this.visaoGrupoEconomico = !this.visaoGrupoEconomico;\r\n    this.sinteticoPendenciasLoaded = false;\r\n    this.pedidosLoaded = false;\r\n  }\r\n\r\n  getResumoSintetico(id: number, grupoEconomico: boolean) {\r\n    this.historicoFinanceiroService\r\n      .getResumoSintetico(id, grupoEconomico)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.sintetico = response['result']['sintetico'];\r\n          this.pendencias = response['result']['pendencias'];\r\n        }\r\n        this.sinteticoPendenciasLoaded = true;\r\n      });\r\n  }\r\n\r\n  getGrupoEconomico(id: number) {\r\n    this.historicoFinanceiroService\r\n      .getGrupoEconomico(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.grupoEconomico = response['result'];\r\n        }\r\n        this.grupoEconomicoLoaded = true;\r\n      });\r\n  }\r\n\r\n  getPedidos(id: number, grupoEconomico: boolean) {\r\n    this.historicoFinanceiroService\r\n      .getResumoPedidos(id, grupoEconomico)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.pedidos = response['result'];\r\n          this.pedidosFiltered = response['result'];\r\n          this.pedidosPagination = this.pedidosFiltered.slice(\r\n            0,\r\n            this.itemsPerPage\r\n          );\r\n        }\r\n        this.pedidosLoaded = true;\r\n      });\r\n  }\r\n\r\n  onGrupoEconomico(modalRef: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(modalRef);\r\n  }\r\n\r\n  onCloseModalGrupoEconomico() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  handleCounter(valor: number) {\r\n    return valor.toFixed(0);\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'EM ABERTO') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'QUITADA') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'VENCIDA') {\r\n      borderClass = 'border-warning';\r\n    } else if (status == 'PROTESTO') {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.pedidosPagination = this.pedidosFiltered.slice(startItem, endItem);\r\n  }\r\n\r\n  onFilter(value: string) {\r\n    if (value) {\r\n      this.pedidosFiltered = this.filterPipe.transform(this.pedidos, {\r\n        numDuplicata: value\r\n      });\r\n    } else {\r\n      this.pedidosFiltered = this.pedidos;\r\n    }\r\n\r\n    this.pedidosPagination = this.pedidosFiltered.slice(0, this.itemsPerPage);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3VsdGltb3MtcHJlY29zL3VsdGltb3MtcHJlY29zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialClientesDetalheService } from './detalhes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesDetalhesResolverGuard implements Resolve<any> {\r\n  constructor(private detalhesService: ComercialClientesDetalheService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['id']) {\r\n      return this.detalhesService.getDetalhes(route.params['id']);\r\n    }\r\n\r\n    return of({\r\n      responseCode: 204\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { ComercialClientesResolverGuard } from '../clientes-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialClientesHistoricoFinanceiroComponent } from './historico-financeiro.component';\r\nimport { ComercialClientesHistoricoFinanceiroResumoComponent } from './resumo/resumo.component';\r\nimport { ComercialClientesHistoricoFinanceiroDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent } from './materiais-duplicata/materiais-duplicata.component';\r\nimport { ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent } from './acumulos-mensais/acumulos-mensais.component';\r\nimport { ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent } from './notas-promissorias/notas-promissorias.component';\r\nimport { ComercialClientesHistoricoFinanceiroDebitosComponent } from './debitos/debitos.component';\r\nimport { ComercialClientesHistoricoFinanceiroCorteDobraComponent } from './corte-dobra/corte-dobra.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: ':id',\r\n    component: ComercialClientesHistoricoFinanceiroComponent,\r\n    resolve: {\r\n      response: ComercialClientesResolverGuard\r\n    },\r\n    children: [\r\n      { path: '', redirectTo: 'resumo', pathMatch: 'full' },\r\n      {\r\n        path: 'resumo',\r\n        component: ComercialClientesHistoricoFinanceiroResumoComponent\r\n      },\r\n      {\r\n        path: 'detalhes',\r\n        component: ComercialClientesHistoricoFinanceiroDetalhesComponent\r\n      },\r\n      {\r\n        path: 'materiais-duplicata',\r\n        component: ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent\r\n      },\r\n      {\r\n        path: 'acumulos-mensais',\r\n        component: ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent\r\n      },\r\n      {\r\n        path: 'notas-promissorias',\r\n        component: ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent\r\n      },\r\n      {\r\n        path: 'debitos',\r\n        component: ComercialClientesHistoricoFinanceiroDebitosComponent\r\n      },\r\n      {\r\n        path: 'corte-dobra',\r\n        component: ComercialClientesHistoricoFinanceiroCorteDobraComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/comercial/home',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialHistoricoFinanceiroRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2NvcnRlLWRvYnJhL2NvcnRlLWRvYnJhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!acumulosMensaisLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de acumulaciones mensuales...</strong>\\r\\n    </div>\\r\\n    <tabset *ngIf=\\\"acumulosMensaisLoaded\\\">\\r\\n      <tab heading=\\\"Principal\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <custom-table *ngIf=\\\"acumulosMensais.principal.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Período</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor acumulado</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Média atraso</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let acumulo of acumulosMensais.principal\\\">\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.periodo }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.atraso }} dias</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n          <empty-result\\r\\n            message=\\\"Nenhuma informação encontrada\\\"\\r\\n            *ngIf=\\\"acumulosMensais.principal.length == 0\\\">\\r\\n          </empty-result>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Maior fatura\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <custom-table *ngIf=\\\"acumulosMensais.maiorFatura.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Pedido</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let acumulo of acumulosMensais.maiorFatura\\\">\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.numPedido }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.data }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.empresa }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n          <empty-result\\r\\n            message=\\\"Nenhuma informação encontrada\\\"\\r\\n            *ngIf=\\\"acumulosMensais.maiorFatura.length == 0\\\">\\r\\n          </empty-result>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"modal-content custom-modal\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h6 class=\\\"modal-title pull-left\\\">Editar datos de cliente </h6>\\r\\n        <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"form row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"col mb-0\\\">\\r\\n                        <label for=\\\"\\\"> <strong> DATOS DE CLIENTE </strong> </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-12\\\">\\r\\n                        <form [formGroup]=\\\"form\\\">\\r\\n                            <div class=\\\"card\\\">\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0\\\"> <strong> Codigo cliente </strong></label>\\r\\n\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"codigo_cliente\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.codigo_cliente }}\\\"\\r\\n                                                id=\\\"codigo_cliente\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0\\\"> <strong> CI </strong></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.carnet }}\\\" formControlName=\\\"carnet\\\"\\r\\n                                                id=\\\"carnet\\\">\\r\\n                                            <input type=\\\"hidden\\\" value=\\\"{{ datos_cliente.datos_cliente.id_cliente }}\\\"\\r\\n                                                id=\\\"id_cliente\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0\\\"> <strong> NIT </strong></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.nit }}\\\" formControlName=\\\"nit\\\"\\r\\n                                                id=\\\"nit\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Nombre completo </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.nombre }}\\\" formControlName=\\\"nombre\\\"\\r\\n                                                id=\\\"nombre\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Nombre factura </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.nombre_factura  }}\\\"\\r\\n                                                formControlName=\\\"nombre_factura\\\" id=\\\"nombre_factura\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Tipo persona </strong> </label>\\r\\n                                            <select name=\\\"\\\" id=\\\"id_tipo_persona\\\" class=\\\"form-control\\\"\\r\\n                                                >\\r\\n                                                <option *ngFor=\\\"let tipo of tipos_personas | keyvalue\\\"\\r\\n                                                    [value]=\\\"tipo.key\\\"\\r\\n                                                    [selected]=\\\"tipo.key === datos_cliente.datos_cliente.id_tipo_persona\\\">\\r\\n                                                    {{ tipo.value }}\\r\\n                                                </option>\\r\\n\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Email </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.email }}\\\" formControlName=\\\"email\\\"\\r\\n                                                id=\\\"email\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong>Teléfono </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.telefono }}\\\"\\r\\n                                                formControlName=\\\"telefono\\\" id=\\\"telefono\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Celular </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.celular }}\\\"\\r\\n                                                formControlName=\\\"celular\\\" id=\\\"celular\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Rubro </strong> </label>\\r\\n                                            <select name=\\\"\\\" id=\\\"id_rubro\\\" class=\\\"form-control\\\">\\r\\n                                                <option *ngFor=\\\"let cnae of cnaes\\\" [value]=\\\"cnae.id_cnae\\\"\\r\\n                                                    [selected]=\\\"cnae.id_cnae === datos_cliente.datos_cliente.id_rubro\\\">\\r\\n                                                    {{ cnae.descripcion }}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Tipo cliente </strong> </label>\\r\\n                                            <select name=\\\"vendedor\\\" class=\\\"form-control\\\" id=\\\"id_tipo_cliente\\\">\\r\\n                                                <option *ngFor=\\\"let tipo of tipos_clientes\\\" [value]=\\\"tipo.id\\\"\\r\\n                                                    [selected]=\\\"tipo.id === datos_cliente.datos_cliente.id_tipo_cliente\\\">\\r\\n                                                    {{ tipo.nombre_tipo }}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Vendedor </strong> </label>\\r\\n                                            <select name=\\\"vendedor\\\" class=\\\"form-control\\\" id=\\\"id_vendedor\\\">\\r\\n                                                <option *ngFor=\\\"let vendedor of vendedoresList\\\" [value]=\\\"vendedor.ID\\\"\\r\\n                                                    [selected]=\\\"vendedor.ID === datos_cliente.datos_cliente.id_vendedor\\\">\\r\\n                                                    {{ vendedor.nombre }}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"col mb-0\\\">\\r\\n                        <label for=\\\"\\\"> <strong> DATOS DE CONTACTO </strong> </label>\\r\\n                    </div>\\r\\n                    <div style=\\\"max-height: 350px; overflow-y: auto;\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\"\\r\\n                            *ngFor=\\\"let contacto of datos_cliente.datos_contacto; let i = index\\\">\\r\\n                            <div class=\\\"card\\\">\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <label>Título</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Nombre</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.nombres_contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Dirección</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.direccion_contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Celular</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.celular_contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Teléfono</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.telefono_contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <button (click)=\\\"eliminarContacto(i)\\\"\\r\\n                                        class=\\\"btn btn-danger mt-2 text-center\\\">Eliminar</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-12 text-center\\\">\\r\\n                        <button (click)=\\\"agregarContacto()\\\" class=\\\"btn btn-primary\\\"\\r\\n                            [disabled]=\\\"datos_cliente.datos_contacto.length >= 5\\\">Agregar Contacto</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"col mb-0\\\">\\r\\n                        <label for=\\\"\\\"> <strong> DATOS DE UBICACIÓN </strong> </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 mb-3\\\">\\r\\n                        <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n                            <agm-map [latitude]=\\\"latitudPromedio\\\" [longitude]=\\\"longitudPromedio\\\" [zoom]=\\\"16\\\"\\r\\n                                (mapClick)=\\\"actualizarMapa($event)\\\" class=\\\"embed-responsive-item\\\">\\r\\n                                <agm-marker *ngFor=\\\"let ubicacion of datos_cliente.datos_direccion; let i = index\\\"\\r\\n                                    [latitude]=\\\"ubicacion.latitud\\\" [longitude]=\\\"ubicacion.longitud\\\"\\r\\n                                    [iconUrl]=\\\"ubicacion.color\\\" (markerClick)=\\\"actualizarMarcador(i)\\\"\\r\\n                                    (markerDragEnd)=\\\"actualizarUbicacion(i, $event.coords.lat, $event.coords.lng)\\\">\\r\\n                                </agm-marker>\\r\\n                            </agm-map>\\r\\n                            <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div style=\\\"max-height: 150px; overflow-y: auto;\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\"\\r\\n                            *ngFor=\\\"let direccion of datos_cliente.datos_direccion; let i = index\\\">\\r\\n                            <div class=\\\"card\\\">\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <label>Título</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"direccion.ubicacion\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Ciudad</label>\\r\\n                                    <div>\\r\\n                                        <select name=\\\"\\\" id=\\\"\\\" class=\\\"form-control\\\"\\r\\n                                            (change)=\\\"actualizarCiudad(i, $event.target.value)\\\">\\r\\n                                            <option value=\\\"\\\"> SELECCIONAR...</option>\\r\\n                                            <option *ngFor=\\\"let ciudad of ciudades\\\" [value]=\\\"ciudad.id\\\"\\r\\n                                                [selected]=\\\"ciudad.id === direccion.id_ciudad\\\">\\r\\n                                                {{ ciudad.nombre_ciudad }}\\r\\n                                            </option>\\r\\n\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                    <label>Dirección</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"direccion.direccion\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <button (click)=\\\"eliminarUbicacion(i)\\\"\\r\\n                                        class=\\\"btn btn-danger mt-2 text-center\\\">Eliminar</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-12 text-center\\\">\\r\\n                        <button (click)=\\\"agregarUbicacion()\\\" class=\\\"btn btn-primary\\\"\\r\\n                            [disabled]=\\\"datos_cliente.datos_direccion.length >= 5\\\">Agregar Ubicación</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClose()\\\">\\r\\n                Cancelar\\r\\n            </button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"actualizarCliente()\\\">\\r\\n                Guardar\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Services\r\nimport { FormRulesService } from 'src/app/shared/services/core/form-rules.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesCadastroDadosFaturamentoRulesResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(private formRulesService: FormRulesService) {}\r\n\r\n  resolve(): Observable<any> {\r\n    return this.formRulesService.getRules(1);\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!duplicataLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de duplicados...</strong>\\r\\n    </div>\\r\\n    <tabset *ngIf=\\\"duplicataLoaded\\\">\\r\\n      <tab heading=\\\"Principal\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Línea:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"principal.materiais.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Descripción</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Sit. Tributária</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Qtde.</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor unidades</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor total</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Alíquota ICMS</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let material of principal.materiais\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ material.idMaterial }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.nomeMaterial }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.situacaoTributaria }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.quantidade }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.valorUnitario | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.valorTotalItem | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-center\\\" *ngIf=\\\"material.aliquotaIcms > 0\\\">{{ material.aliquotaIcms | number:'1.2-2' }}%</td>\\r\\n                    <td class=\\\"text-center\\\" *ngIf=\\\"material.aliquotaIcms == 0\\\">0,00%</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"Nenhuma informação encontrada\\\"\\r\\n                *ngIf=\\\"principal.materiais.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Condiciones de pago</div>\\r\\n                <p class=\\\"mb-0\\\"><strong></strong>{{ principal.materiais[0]['condicaoPagamento'] }}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Total productos</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Cantidad:</strong> {{ principal.total.peso | number:'1.3-3' }} TON</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Valor:</strong> {{ principal.total.valor | currency:'BRL':'symbol':'1.2-2' }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Lugar de entrega</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p><strong>Referencia:</strong> {{ principal.entrega.referencia }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Endereço:</strong> {{ principal.entrega.logradouro }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Ciudad:</strong> {{ principal.entrega.cidade }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Bairro:</strong> {{ principal.entrega.bairro }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>UF:</strong> {{ principal.entrega.uf }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Histórico de cobranças\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"historicoCobrancas.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Num. Lanzamiento</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Situación</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Fecha</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Usuário</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Comentário</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let cobranca of historicoCobrancas\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.numLancamento }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.situacao }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.data }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.nome }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.comentario }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"Nenhuma informação encontrada\\\"\\r\\n                *ngIf=\\\"historicoCobrancas.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Colección de la empresa</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Código:</strong> Nenhuma informação</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Descripcion:</strong> Nenhuma informação</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Vencimento original</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <p class=\\\"mb-0\\\">No hay información</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Ocorrências da duplicata\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"ocorrenciasDuplicatas.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicata</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Operação</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Descrição</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let ocorrencia of ocorrenciasDuplicatas\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.numDuplicata }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.operacao }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.data }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.descricao }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"No hay información encontrada\\\"\\r\\n                *ngIf=\\\"ocorrenciasDuplicatas.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Ocorrências comerciais\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicata</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"ocorrenciasComerciais.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Número</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Hora</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Usuário</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Operação</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Situação</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let ocorrencia of ocorrenciasComerciais\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.numero }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.data }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.hora }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.nome }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.operacao }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.situacao }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"No hay información encontrada\\\"\\r\\n                *ngIf=\\\"ocorrenciasComerciais.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Busqueda de clientes\\\">\\r\\n  <button type=\\\"button\\\" [routerLink]=\\\"['../pre-cadastro']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">Filtrar</button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row justify-content-center mb-2\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <ul class=\\\"list-unstyled mb-0 d-flex justify-content-around\\\">\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Ativo')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Activos</h6>\\r\\n          <div class=\\\"text-success\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"ativos\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoAtivos = $event\\\">\\r\\n                {{ handleCounter(countoAtivos) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Inativo')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Inactivos</h6>\\r\\n          <div class=\\\"text-danger\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"inativos\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoInativos = $event\\\">\\r\\n                {{ handleCounter(countoInativos) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Potenci')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Potencial</h6>\\r\\n          <div class=\\\"text-primary\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"potencial\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoPotencial = $event\\\">\\r\\n                {{ handleCounter(countoPotencial) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Arquivo')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Archivados</h6>\\r\\n          <div class=\\\"text-secondary\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"arquivados\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoArquivados = $event\\\">\\r\\n                {{ handleCounter(countoArquivados) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <advanced-filter>\\r\\n    <form [formGroup]=\\\"formFilter\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"buscarPor\\\">Buscar por</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"buscarPor\\\" formControlName=\\\"buscarPor\\\">\\r\\n            <option value=\\\"1\\\">Código, nombre o razon social</option>\\r\\n            <option value=\\\"2\\\">C.I. o NIT</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"pesquisa\\\">Termino de busqueda</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pesquisa\\\" (keydown.enter)=\\\"onFilter()\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"situacao\\\">Situacion</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"situacao\\\" formControlName=\\\"situacao\\\">\\r\\n            <option value=\\\"Ativo\\\">Activos</option>\\r\\n            <option value=\\\"Inativo\\\">Inactivos</option>\\r\\n            <option value=\\\"Potenci\\\">Potenciales</option>\\r\\n            <option value=\\\"Arquivo\\\">Archivados</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"setorAtividade\\\">Sector empresarial</label>\\r\\n          <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"setorAtividades\\\" [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"setorAtividade\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\" formControlName=\\\"setorAtividade\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n          <label for=\\\"tipoPessoa\\\">Tipo de persona</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"tipoPessoa\\\" formControlName=\\\"tipoPessoa\\\">\\r\\n            <option value=\\\"F\\\">Persona física</option>\\r\\n            <option value=\\\"J\\\">Persona jurídica</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n          <label for=\\\"grupoEconomico\\\">Esta en grupo economico</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"grupoEconomico\\\"\\r\\n            formControlName=\\\"grupoEconomico\\\">\\r\\n            <option value=\\\"S\\\">Si</option>\\r\\n            <option value=\\\"N\\\">No</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n          <label for=\\\"segurado\\\">Asegurado</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"segurado\\\"\\r\\n            formControlName=\\\"segurado\\\">\\r\\n            <option value=\\\"S\\\">Si</option>\\r\\n            <option value=\\\"N\\\">No</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\r\\n          <label for=\\\"carteira\\\">Cartera</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"carteira\\\"\\r\\n            formControlName=\\\"carteira\\\">\\r\\n            <option value=\\\"S\\\" selected>Mi cartera</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        <div class=\\\"form-group col-lg-1 mb-lg-0\\\">\\r\\n          <label for=\\\"registros\\\">Registros</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"registros\\\" formControlName=\\\"registros\\\">\\r\\n            <option>10</option>\\r\\n            <option>25</option>\\r\\n            <option>50</option>\\r\\n            <option>100</option>\\r\\n            <option>200</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"\\r\\n      dataLoaded && searchSubmitted && clientes.length == 0 && buscandoPor != 2\\r\\n    \\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <empty-result message=\\\"No se encontraron clientes para esta búsqueda.\\\" class=\\\"py-4\\\"></empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"\\r\\n      dataLoaded && searchSubmitted && clientes.length == 0 && buscandoPor == 2\\r\\n    \\\">\\r\\n    <div class=\\\"col-7 d-flex justify-content-end w-100 pr-0\\\">\\r\\n      <empty-result message=\\\"No se encontraron clientes para esta búsqueda.\\\" class=\\\"py-4\\\"></empty-result>\\r\\n    </div>\\r\\n    <div class=\\\"col-5 d-flex w-100 pl-1\\\">\\r\\n      <a [routerLink]=\\\"['../pre-cadastro']\\\" [queryParams]=\\\"onPreCadastroCpfCnpj()\\\" class=\\\"my-auto\\\">\\r\\n        <strong>Pulse aquí para registrarse..</strong>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mt-4\\\" *ngIf=\\\"dataLoaded && clientes.length > 0\\\">\\r\\n    <div [ngClass]=\\\"{ 'col-12': !showDetailPanel, 'col-7 pr-0': showDetailPanel }\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\" (click)=\\\"setOrderBy('codigo_cliente')\\\">\\r\\n              <thead-sorter value=\\\"Código Cliente\\\" [active]=\\\"orderBy == 'codigo_cliente'\\\"\\r\\n                [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\" (click)=\\\"setOrderBy('cpf')\\\">\\r\\n              <thead-sorter value=\\\"CI/NIT\\\" [active]=\\\"orderBy == 'cpf'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"setOrderBy('nomeFantasia')\\\">\\r\\n              <thead-sorter value=\\\"Nombre y apelllido\\\" [active]=\\\"orderBy == 'nomeFantasia'\\\"\\r\\n                [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"setOrderBy('razaoSocial')\\\" *ngIf=\\\"!showDetailPanel\\\">\\r\\n              <thead-sorter value=\\\"Razon Social\\\" [active]=\\\"orderBy == 'razaoSocial'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let cliente of clientes\\\" [class.table-active]=\\\"cliente.codigo_cliente == clienteSelecionado\\\">\\r\\n            <td class=\\\"text-center hover\\\" [ngClass]=\\\"classStatusBorder(cliente.situacao)\\\"\\r\\n              (click)=\\\"viewRegister(cliente)\\\">\\r\\n              <i class=\\\"text-black-50 far fa-check-square mr-3\\\" *ngIf=\\\"cliente.segurado == 0\\\"\\r\\n                tooltip=\\\"Cliente no asegurado\\\" placement=\\\"right\\\"></i>\\r\\n              <i class=\\\"text-warning fas fa-check-square mr-3\\\" *ngIf=\\\"cliente.segurado > 0\\\" tooltip=\\\"Cliente asegurado\\\"\\r\\n                placement=\\\"right\\\"></i>\\r\\n              <i class=\\\"text-black-50 far fa-folder-open\\\" *ngIf=\\\"cliente.grupoEconomico == 0\\\"\\r\\n                tooltip=\\\"No hace parte de grupo economico\\\" placement=\\\"right\\\"></i>\\r\\n              <i class=\\\"text-warning fas fa-folder-open\\\" *ngIf=\\\"cliente.grupoEconomico > 0\\\"\\r\\n                tooltip=\\\"Pertenece a un grupo economico\\\" placement=\\\"right\\\"></i>\\r\\n            </td>\\r\\n            <td class=\\\"text-center hover\\\" (click)=\\\"viewRegister(cliente)\\\">\\r\\n              {{ cliente.codigo_cliente }}\\r\\n            </td>\\r\\n            <td class=\\\"text-center hover\\\" (click)=\\\"viewRegister(cpf)\\\">\\r\\n              {{ cliente.cpf }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"viewRegister(cliente)\\\">\\r\\n              {{ cliente.nomeFantasia | uppercase }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"viewRegister(cliente)\\\" *ngIf=\\\"!showDetailPanel\\\">\\r\\n              {{ cliente.razaoSocial | uppercase }}\\r\\n            </td>\\r\\n            <td>\\r\\n              <span tooltip=\\\"Datos registrados\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"viewDetails(cliente)\\\">\\r\\n                  <i class=\\\"fas fa-user\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"clientes[0]['total'] > itemsPerPage\\\">\\r\\n        <pagination [maxSize]=\\\"maxSize\\\" [(totalItems)]=\\\"totalItems\\\" (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\" [(ngModel)]=\\\"currentPage\\\" previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <div class=\\\"sticky-top\\\">\\r\\n        <detail-panel>\\r\\n          <tabset>\\r\\n            <tab heading=\\\"Datos registrados\\\">\\r\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n                <div *ngIf=\\\"dadosCadastraisLoaded && !dadosCadastraisEmpty\\\">\\r\\n                  <div class=\\\"container\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Codigo Cliente </label>\\r\\n                        <input\\r\\n                          value=\\\"{{ dadosCadastrais.id_cliente == null ? 'NO INFORMADO' : dadosCadastrais.id_cliente }}\\\"\\r\\n                          class=\\\"form-control\\\" readonly>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Codigo Cliente SAP</label>\\r\\n                        <input\\r\\n                          value=\\\"{{ dadosCadastrais.codigo_cliente == '' ? 'NO INFORMADO' : dadosCadastrais.codigo_cliente }}\\\"\\r\\n                          class=\\\"form-control\\\" readonly>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>C.I.</label>\\r\\n                        <div>\\r\\n                          <div>\\r\\n                            <input value=\\\"{{ dadosCadastrais.carnet == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.carnet }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!--  </div>\\r\\n                    <div class=\\\"form-row\\\"> -->\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Nombre</label>\\r\\n                        <div>\\r\\n                          <div>\\r\\n                            <input value=\\\"{{ dadosCadastrais.nombre == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.nombre }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Razon social</label>\\r\\n                        <div>\\r\\n                          <div>\\r\\n\\r\\n                            <input value=\\\"{{ dadosCadastrais.razon_social == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.razon_social }}\\\" class=\\\"form-control\\\" readonly>\\r\\n\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!--  </div> -->\\r\\n                      <!-- <div class=\\\"form-row\\\"> -->\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Tipo Persona</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ getTipoPersonaLabel(dadosCadastrais.id_tipo_persona) }}\\\" class=\\\"form-control\\\"\\r\\n                            readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>NIT.</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.nit == null ? 'NO INFORMADO' :\\r\\n                          dadosCadastrais.nit }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!--  </div> -->\\r\\n                      <!--  <div class=\\\"form-row\\\"> -->\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Celular</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.celular == null ? 'NO INFORMADO' :\\r\\n                          dadosCadastrais.celular }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Telefono</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.telefono == null ? 'NO INFORMADO' :\\r\\n                          dadosCadastrais.telefono }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label for=\\\"rubro\\\">Rubro</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.rubro || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Vendedor</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.vendedor || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Tipo cliente</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.tipo_cliente || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\"\\r\\n                            readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"mb-3\\\" *ngIf=\\\"dadosCadastraisLoaded && dadosCadastraisEmpty\\\">\\r\\n                    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n                    <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!dadosCadastraisLoaded\\\">\\r\\n                      <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"editingMode\\\">\\r\\n                  <div class=\\\"text-right mt-3\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancelEditing()\\\">Cancelar</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Guardar Cambios</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!editingMode\\\">\\r\\n                  <div class=\\\"text-right mt-3\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-light mb-2 text-center\\\"\\r\\n                      (click)=\\\"openModalEditar(editarCliente)\\\">Editar\\r\\n                      Cliente</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </tab>\\r\\n            <tab heading=\\\"Contactos\\\">\\r\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n                <div *ngIf=\\\"contatosLoaded && !contatosEmpty\\\">\\r\\n                  <div *ngIf=\\\"contatos.lenght !==  0\\\">\\r\\n                    <div class=\\\"form-row\\\" *ngFor=\\\"let contato of contatos\\\">\\r\\n                      <!-- <div class=\\\"form-group col\\\" [ngClass]=\\\"{'hidden': contato.editing}\\\">\\r\\n                      <label>ID Contacto</label>\\r\\n                      <div>\\r\\n                        {{ contato.id_cont }}\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>título</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          <!-- <div *ngIf=\\\"!editingContacto\\\">{{ contato.titulo }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>Nombre</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.nombres_contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          <!-- <div *ngIf=\\\"!editingContacto\\\">{{ contato.titulo }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!-- <div class=\\\"form-group col\\\">\\r\\n                      <label>Tipo de Contacto</label>\\r\\n                      <div>\\r\\n                        <div *ngIf=\\\"!editingContacto\\\">{{ contato.ds_tipo_cont }} {{ contato.ds_cont_meio }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\">\\r\\n                          <input [(ngModel)]=\\\"contato.editedds_cont_meio\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>Dirección</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.direccion_contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\"\\r\\n                            readonly>\\r\\n                          <!--  <div *ngIf=\\\"!editingContacto\\\">{{ contato.direccion }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"><input [(ngModel)]=\\\"contato.editedDireccion\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>Celular</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.celular_contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          <!--  <div *ngIf=\\\"!editingContacto\\\">{{ contato.direccion }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"><input [(ngModel)]=\\\"contato.editedDireccion\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4 mb-3\\\">\\r\\n                        <label>Teléfono</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.telefono_contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\"\\r\\n                            readonly>\\r\\n                          <!--  <div *ngIf=\\\"!editingContacto\\\">{{ contato.direccion }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"><input [(ngModel)]=\\\"contato.editedDireccion\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                      <!-- <div class=\\\"form-group col\\\">\\r\\n                      <label>Nombre</label>\\r\\n                      <div>\\r\\n                        <ng-container *ngIf=\\\"!editingContacto\\\">\\r\\n                          <div *ngIf=\\\"contato.ds_cont && contato.ds_cont.length > 1\\\" class=\\\"mr-1\\\">{{ contato.ds_cont }}\\r\\n                          </div>\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"contato.editing\\\">\\r\\n                          <input [(ngModel)]=\\\"contato.editedDsCont\\\">\\r\\n                        </ng-container>\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n                      <!-- <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"editarContacto(contato)\\\"\\r\\n                      *ngIf=\\\"!contato.editing\\\">Editar Contacto</button>\\r\\n                    <div *ngIf=\\\"contato.editing\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"\\r\\n                        (click)=\\\"cancelEditingContact(contato)\\\">Cancelar</button>\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveEditedContact(contato)\\\">Guardar\\r\\n                        Cambios</button>\\r\\n                    </div> -->\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"contatosEmpty\\\">\\r\\n                  <label> <strong>Sin datos de contacto</strong></label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </tab>\\r\\n            <tab heading=\\\"Dirección\\\">\\r\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n                <div *ngIf=\\\"contatosLoaded && !direccionEmpty\\\">\\r\\n                  <div class=\\\"col-lg-12 mb-4\\\" *ngIf=\\\"direcciones.lenght !==  0\\\">\\r\\n                    \\r\\n                    <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n                      <agm-map [latitude]=\\\"latitudPromedio\\\" [longitude]=\\\"longitudPromedio\\\" [zoom]=\\\"16\\\"\\r\\n                        class=\\\"embed-responsive-item\\\">\\r\\n                        <agm-marker *ngFor=\\\"let ubicacion of direcciones; let i = index\\\" [latitude]=\\\"ubicacion.latitud\\\"\\r\\n                          (markerClick)=\\\"verInformacion(i)\\\" [longitude]=\\\"ubicacion.longitud\\\">\\r\\n                        </agm-marker>\\r\\n                      </agm-map>\\r\\n                      <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"informacionMarcador\\\" class=\\\"info-box mt-3\\\">\\r\\n                      <h6>Información de la ubicación</h6>\\r\\n                      <p style=\\\"font-size: 13px;\\\"> <strong>Título: </strong> {{ informacionMarcador.nombre }}</p>\\r\\n                      <p style=\\\"font-size: 13px;\\\"> <strong>Dirección: </strong> {{ informacionMarcador.direccion }}</p>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"direcciones.lenght !==  0\\\">\\r\\n                    <div class=\\\"form-row\\\" *ngFor=\\\"let direccion of direcciones\\\">\\r\\n\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>título</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ direccion.ubicacion || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>dirección</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ direccion.direccion || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4 mb-3\\\">\\r\\n                        <label>ciudad</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ direccion.ciudad || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"direccionEmpty\\\">\\r\\n                  <label> <strong>Sin datos de dirección</strong></label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </tab>\\r\\n          </tabset>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #editarCliente>\\r\\n    <editar-cliente (fecharModal)=\\\"onFecharModal($event)\\\" [datos_cliente]=\\\"cliente\\\" [vendedoresList]=\\\"vendedoresList\\\"\\r\\n      [cnaes]=\\\"cnaes\\\" [tipos_clientes]=\\\"tipos_clientes\\\" [ciudades]=\\\"ciudades\\\" [latitudPromedio]=\\\"latitudPromedio\\\"\\r\\n      [longitudPromedio]=\\\"longitudPromedio\\\" [tipos_personas] =\\\"tipos_personas\\\">\\r\\n    </editar-cliente>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</app-body>\";","import { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from '../cadastro/dados-faturamento/formulario/formulario.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialVendedoresService } from 'src/app/modules/comercial/services/vendedores.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ComercialClientesPreCadastroService } from '../pre-cadastro/pre-cadastro.service';\r\nimport { EditarClienteService } from '../editar/editar.service';\r\n\r\n\r\n\r\n\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialClientesListaComponent implements OnInit, OnDestroy {\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home',\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  setorAtividades: any = [\r\n    {\r\n      id: 'T',\r\n      descricao: 'TODOS',\r\n    },\r\n  ];\r\n\r\n  dataLoaded = false;\r\n  dadosCadastraisLoaded = false;\r\n  dadosCadastraisEmpty = false;\r\n  contatosLoaded = false;\r\n  contatosEmpty = false;\r\n  direccionEmpty = false;\r\n  searchSubmitted = false;\r\n  showAdvancedFilter = true;\r\n\r\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  matricula = this.currentUser['info']['matricula'];\r\n\r\n  ativos = 0;\r\n  inativos = 0;\r\n  potencial = 0;\r\n  arquivados = 0;\r\n\r\n  countoAtivos: number;\r\n  countoInativos: number;\r\n  countoPotencial: number;\r\n  countoArquivados: number;\r\n\r\n  formFilter: FormGroup;\r\n  buscandoPor: number;\r\n  pesquisa: string;\r\n  orderBy = 'codCliente';\r\n  orderType = 'desc';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 50;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n  modalRef: BsModalRef;\r\n  clientes: any = [];\r\n  clientesPagination: any = [];\r\n\r\n  clienteSelecionado: number;\r\n  dadosCadastrais: any = {};\r\n  contato: any = [];\r\n  contatos: any = [];\r\n  tipos_clientes: any = [];\r\n\r\n  cliente: any = [];\r\n\r\n  direcciones: any = [];\r\n  editingMode: boolean = false;\r\n  editedFields: any = {};\r\n  vendedoresList: any[] = [];\r\n  editingContacto: boolean = false;\r\n  originalVendedorId: number;\r\n  ciudades: any = [];\r\n  cnaes: any = [];\r\n  codigoClienteSap: any = [];\r\n\r\n  tipos_personas: { [key: string]: string } = {\r\n    'S': 'Sociedades',\r\n    'P': 'Privado',\r\n    'G': 'Gobierno',\r\n    'E': 'Empleado'\r\n  };\r\n\r\n\r\n  latitudPromedio: number;\r\n  longitudPromedio: number;\r\n  informacionMarcador: { ubicacion: string, direccion: string } | null = null;\r\n\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private clientesService: ComercialClientesService,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private dadosFaturamentoService: ComercialClientesCadastroDadosFaturamentoFormularioService,\r\n    private titleService: TitleService,\r\n    private detailPanelService: DetailPanelService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private modalService: BsModalService,\r\n    private preCadastroService: ComercialClientesPreCadastroService,\r\n    private editarClienteService: EditarClienteService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.getFormFilters();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Busqueda de clientes');\r\n    this.onDetailPanelEmitter();\r\n    this.getCenaes();\r\n    this.obtenerTiposClientes();\r\n    this.getCiudades();\r\n\r\n    this.vendedoresService.getVendedores().subscribe(\r\n      (response: any) => {\r\n        this.vendedoresList = response.data;\r\n        console.log(response)\r\n        if (this.vendedoresList.length > 0) {\r\n          this.editedFields.id_vendedor = this.vendedoresList[0].id;\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener la lista de vendedores:', error );\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onFecharModal(event) {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n\r\n  openModalEditar(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-lg',\r\n    });\r\n\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n\r\n        if (this.showDetailPanel === false) {\r\n          this.onCloseDetailPanel();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getCenaes(): void {\r\n    this.preCadastroService.getCenaes()\r\n      .pipe(\r\n        finalize(() => {\r\n\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response[0].responseCode === 200) {\r\n            this.cnaes = response[0].result.map(cnae => ({\r\n              id_cnae: cnae.id,\r\n              descripcion: cnae.descricao,\r\n              codigo: cnae.codigo\r\n\r\n            })\r\n            );\r\n/*             console.log(\"cnaes: \", this.cnaes);\r\n */          }\r\n        }\r\n      )\r\n  }\r\n\r\n  getCiudades(): void {\r\n    this.preCadastroService.getCiudades()\r\n      .pipe(\r\n        finalize(() => {\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response[0].responseCode === 200) {\r\n            this.ciudades = response[0].result;\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  getFormFilters(): void {\r\n    this.dadosFaturamentoService\r\n      .getSetorAtividades()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.setorAtividades.unshift({\r\n            id: 'T',\r\n            descricao: 'TODOS',\r\n          });\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.setorAtividades = response['result'];\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue = this.checkRouterParams();\r\n\r\n    this.formFilter = this.formBuilder.group({\r\n      pesquisa: [formValue['pesquisa']],\r\n      buscarPor: [formValue['buscarPor'], Validators.required],\r\n      situacao: [formValue['situacao'], Validators.required],\r\n      setorAtividade: [formValue['setorAtividade'], Validators.required],\r\n      tipoPessoa: [formValue['tipoPessoa'], Validators.required],\r\n      grupoEconomico: [formValue['grupoEconomico'], Validators.required],\r\n      segurado: [formValue['segurado'], Validators.required],\r\n      carteira: [formValue['carteira'], Validators.required],\r\n      pagina: [formValue['pagina']],\r\n      registros: [formValue['registros'], Validators.required],\r\n      cnae: [formValue['cnae'], Validators.required],\r\n    });\r\n  }\r\n  viewDetails(cliente: any): void {\r\n    this.detailPanelService.loadedFinished(false);\r\n\r\n    this.clienteSelecionado = cliente.codCliente;\r\n\r\n    this.dadosCadastraisLoaded = false;\r\n    this.dadosCadastraisEmpty = false;\r\n\r\n    this.contatosLoaded = false;\r\n    this.contatosEmpty = false;\r\n\r\n    this.clientesService\r\n      .getDetalhes(cliente.codCliente)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.dadosCadastraisLoaded = true;\r\n        })\r\n      )\r\n      .subscribe((response: JsonResponse) => {\r\n        this.informacionMarcador = null;\r\n        if (response.responseCode == 200) {\r\n          //console.log(response);\r\n          this.cliente = response.result;\r\n\r\n          this.contatosLoaded = true;\r\n          this.dadosCadastrais = response.result.datos_cliente;\r\n          if (response.result && response.result.datos_contacto && response.result.datos_contacto.length > 0) {\r\n            this.contatosEmpty = false;\r\n          } else {\r\n            this.contatos = [];\r\n            this.contatosEmpty = true;\r\n          }\r\n          if (response.result && response.result.datos_direccion && response.result.datos_direccion.length > 0) {\r\n            this.direccionEmpty = false;\r\n\r\n          } else {\r\n            this.direcciones = [];\r\n            this.direccionEmpty = true;\r\n          }\r\n          this.contatos = response.result.datos_contacto;\r\n          this.direcciones = response.result.datos_direccion;\r\n          this.editedFields.id_vendedor = this.dadosCadastrais.id_vendedor;\r\n          this.calcularPromedioUbicaciones(response.result.datos_direccion);\r\n\r\n\r\n          //console.log(\"Datos de dadosCadastrais:\", this.dadosCadastrais); // Agrega el console.log aquí\r\n        } else {\r\n          this.dadosCadastraisEmpty = true;\r\n          this.contatosEmpty = true;\r\n          this.cliente = [];\r\n\r\n        }\r\n      });\r\n\r\n    /* this.clientesService\r\n      .getContatosResumido(cliente.codCliente)\r\n      .subscribe((response: any) => {\r\n        this.contatosLoaded = true;\r\n\r\n        if (response['responseCode'] === 200) {\r\n          if (Object.keys(response['data']).length > 0) {\r\n            this.contatos = response['data'];\r\n          } else {\r\n            this.contatosEmpty = true;\r\n          }\r\n        } else {\r\n          this.contatosEmpty = true;\r\n        }\r\n      }); */\r\n  }\r\n\r\n  calcularPromedioUbicaciones(direcciones) {\r\n    let sumLatitud = 0;\r\n    let sumLongitud = 0;\r\n    if (direcciones && direcciones.length > 0) {\r\n      for (const ubicacion of direcciones) {\r\n        sumLatitud += ubicacion.latitud;\r\n        sumLongitud += ubicacion.longitud;\r\n      }\r\n      this.latitudPromedio = sumLatitud / this.direcciones.length;\r\n      this.longitudPromedio = sumLongitud / this.direcciones.length;\r\n    }\r\n\r\n  }\r\n\r\n  obtenerTiposClientes() {\r\n    this.clientesService.getTipoClientes()\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 200) {\r\n            this.tipos_clientes = response.result;\r\n\r\n          } else {\r\n\r\n          }\r\n        },\r\n        (error) => {\r\n        }\r\n      )\r\n  }\r\n\r\n  verInformacion(index: number) {\r\n    const ubicacion = this.direcciones[index];\r\n    this.informacionMarcador = {\r\n      // @ts-ignore: Ignorar error TS2339\r\n      nombre: ubicacion.ubicacion || 'NO INFORMADO',\r\n      direccion: ubicacion.direccion || 'NO INFORMADO'\r\n    };\r\n  }\r\n\r\n  onCloseDetailPanel() {\r\n    this.resetClienteSelecionado();\r\n\r\n    setTimeout(() => {\r\n      this.dadosCadastraisLoaded = false;\r\n      this.dadosCadastraisEmpty = false;\r\n      this.dadosCadastrais = {};\r\n\r\n      this.contatosEmpty = false;\r\n      this.contatosLoaded = false;\r\n      this.contatos = [];\r\n    }, 500);\r\n  }\r\n  searchInputValue: string;\r\n\r\n  checkRouterParams(): Object {\r\n    var aux_cartera;\r\n    if (this.matricula == 1) {\r\n      aux_cartera = 'T'\r\n    } else {\r\n      aux_cartera = 'S'\r\n    }\r\n    let formValue = {\r\n      pesquisa: this.searchInputValue, // aquí se actualizaría el valor de pesquisa\r\n      buscarPor: 1,\r\n      situacao: 'T',\r\n      setorAtividade: 'T',\r\n      tipoPessoa: 'T',\r\n      grupoEconomico: 'T',\r\n      segurado: 'T',\r\n      carteira: aux_cartera,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.setSubmittedSearch();\r\n          this.search(params);\r\n\r\n          if (params['registros']) {\r\n            this.itemsPerPage = params['registros'];\r\n          }\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          this.listStatus();\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  editarContacto(contato: any) {\r\n    contato.editedIdCont = contato.id_cont;\r\n    contato.editedContacto = contato.contacto;\r\n    contato.editedds_cont_meio = contato.ds_cont_meio;\r\n    contato.editedDireccion = contato.direccion;\r\n    contato.editedDsCont = contato.ds_cont;\r\n    contato.originalDsTipoCont = contato.ds_tipo_cont;\r\n    contato.editing = true;\r\n    this.editingContacto = true;\r\n  }\r\n\r\n  cancelEditingContact(contato: any) {\r\n    contato.editing = false; // Salir del modo de edición\r\n    this.editingContacto = false;\r\n  }\r\n\r\n  saveEditedContact(contato: any) {\r\n    const codigoCliente = contato.id_cliente;\r\n\r\n    const editedData = {\r\n      id_cont: contato.editedIdCont !== undefined ? contato.editedIdCont : contato.id_cont,\r\n      contacto: contato.editedContacto !== undefined ? contato.editedContacto : contato.contacto,\r\n      ds_tipo_cont: contato.originalDsTipoCont,\r\n      direccion: contato.editedDireccion !== undefined ? contato.editedDireccion : contato.direccion,\r\n      ds_cont: contato.editedDsCont !== undefined ? contato.editedDsCont : contato.ds_cont,\r\n    };\r\n\r\n    const tipo_medio = contato.originalDsTipoCont === 'TELEFONO' ? 5 : 2;\r\n\r\n    if (contato.originalDsTipoCont === 'TELEFONO') {\r\n      editedData['telefono_contacto'] = contato.editedds_cont_meio !== undefined ? contato.editedds_cont_meio : contato.ds_cont_meio;\r\n    } else {\r\n      editedData['celular_contacto'] = contato.editedds_cont_meio !== undefined ? contato.editedds_cont_meio : contato.ds_cont_meio;\r\n    }\r\n\r\n    editedData['tipo_medio'] = tipo_medio;\r\n    editedData['id_cont_meio'] = contato.id_cont_meio;\r\n    editedData['id_cont'] = contato.id_cont;\r\n\r\n    this.clientesService.sapUpdateContacto(codigoCliente, editedData).subscribe(\r\n      (response) => {\r\n        console.log('Cambios en el contacto guardados exitosamente:', response);\r\n        contato.editing = false; // Salir del modo de edición\r\n        this.editingContacto = false;\r\n        // Actualizar los valores del contacto en el objeto local\r\n        contato.contacto = editedData.contacto;\r\n        contato.ds_tipo_cont = editedData.ds_tipo_cont;\r\n        contato.ds_cont_meio = editedData['telefono_contacto'] || editedData['celular_contacto'];\r\n        contato.direccion = editedData.direccion;\r\n        contato.ds_cont = editedData.ds_cont;\r\n\r\n        this.clientesService.getDetalhes(codigoCliente);\r\n      },\r\n      (error) => {\r\n        console.error('Error al guardar cambios en el contacto:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  mapTipoPessoaToTipoPersona(tipoPessoa: string): string {\r\n    const map = {\r\n      'S': 'Sociedades',\r\n      'P': 'Privado',\r\n      'G': 'Gobierno',\r\n      'E': 'Empleado'\r\n      // Agrega más mapeos si es necesario...\r\n    };\r\n\r\n    return map[tipoPessoa] || '';\r\n  }\r\n  tipoPersonaOptions = [\r\n    { label: 'Sociedades', value: 'S' },\r\n    { label: 'Privado', value: 'P' },\r\n    { label: 'Gobierno', value: 'G' },\r\n    { label: 'Empleado', value: 'E' }\r\n  ];\r\n\r\n  getTipoPersonaLabel(value: string): string {\r\n    const option = this.tipoPersonaOptions.find(opt => opt.value === value);\r\n    return option ? option.label : 'NO INFORMADO';\r\n  }\r\n  getVendedorNome(id_vendedor: number): string {\r\n    if (isNaN(id_vendedor)) {\r\n      return 'NO INFORMADO';\r\n    }\r\n\r\n    const vendedor = this.vendedoresList.find(v => v.id_vendedor === id_vendedor);\r\n    return vendedor ? vendedor.nome : 'NO INFORMADO';\r\n  }\r\n\r\n  enableEditing() {\r\n    this.editarClienteService.showModal();\r\n\r\n\r\n    /* this.editingMode = true;\r\n\r\n    // Guardar los valores actuales de los campos editables\r\n    this.editedFields.carnet = this.dadosCadastrais.carnet;\r\n    this.editedFields.nit = this.dadosCadastrais.nit;\r\n    this.editedFields.nombres = this.dadosCadastrais.nombre;\r\n    this.editedFields.razonSocial = this.dadosCadastrais.razon_social;\r\n    this.editedFields.ciudad = this.dadosCadastrais.ciudad;\r\n    this.editedFields.NombreVendedor = this.dadosCadastrais.NombreVendedor;\r\n    this.editedFields.sucursal = this.dadosCadastrais.sucursal;\r\n    this.editedFields.direccion = this.dadosCadastrais.direccion;\r\n    this.editedFields.id_cliente = this.dadosCadastrais.id_cliente;\r\n    this.editedFields.tipo_persona = this.dadosCadastrais.id_tipo_persona;\r\n    this.editedFields.codigo_cliente = this.clientes.codigo_cliente;\r\n    this.editedFields.tipo_pessoa = this.dadosCadastrais.tipo_pessoa;\r\n    this.editedFields.telefono = this.dadosCadastrais.telefono;\r\n    this.editedFields.celular = this.dadosCadastrais.celular;\r\n    this.editedFields.id_rubro = this.dadosCadastrais.id_rubro;\r\n\r\n    // this.editedFields.nit = this.dadosCadastrais.nit;\r\n    this.editedFields.id_vendedor = this.dadosCadastrais.id_vendedor;\r\n    this.originalVendedorId = this.dadosCadastrais.id_vendedor; */\r\n    // Repite para otros campos editables...\r\n  }\r\n  cancelEditing() {\r\n    // Reinicia los campos editados a sus valores originales\r\n    this.editedFields = {};\r\n    this.originalVendedorId = null;\r\n\r\n    // Desactiva el modo de edición\r\n    this.editingMode = false;\r\n  }\r\n  saveChanges() {\r\n    const codigoCliente = this.dadosCadastrais.id_cliente;\r\n    const codigo_cliente = this.dadosCadastrais.codigo_cliente;\r\n    const editedData = {\r\n      ...this.editedFields,\r\n      codigo_cliente: this.dadosCadastrais.codigo_cliente,\r\n      ubicacion: [\r\n        {\r\n          direccion: this.editedFields.direccion\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.editedFields.tipo_persona = this.mapTipoPessoaToTipoPersona(this.editedFields.tipo_pessoa);\r\n\r\n\r\n    if (this.editedFields.id_vendedor !== this.originalVendedorId) {\r\n      editedData.id_vendedor = this.editedFields.id_vendedor;\r\n    }\r\n\r\n    console.log('Datos antes de enviarlos a sapUpdateClient:', editedData);\r\n    // Llamar a la función para guardar los cambios\r\n    this.clientesService.sapUpdateClient(codigoCliente, editedData).subscribe(\r\n      (response) => {\r\n        console.log('Cambios guardados exitosamente:', response);\r\n        // Limpiar los campos editados y desactivar el modo de edición\r\n        this.editedFields = {};\r\n        this.editingMode = false;\r\n        // Llamar a la función para obtener los detalles actualizados\r\n        this.clientesService.getDetalhes(codigoCliente);\r\n      },\r\n      (error) => {\r\n        console.error('Error al guardar cambios:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  listStatus(): void {\r\n    this.clientesService.getStatus().subscribe({\r\n      next: (response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.setStatus(response['result']);\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.pnotifyService.error();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  setStatus(status: any): void {\r\n    for (let i = 0; i < status.length; i++) {\r\n      if (status[i]['situacao'] == 'Ativo') {\r\n        this.ativos = status[i]['quantidade'];\r\n      } else if (status[i]['situacao'] == 'Inativo' || status[i]['situacao'] == null) {\r\n        this.inativos += status[i]['quantidade'];\r\n      } else if (status[i]['situacao'] == 'Potenci') {\r\n        this.potencial = status[i]['quantidade'];\r\n      } else if (status[i]['situacao'] == 'Arquivo') {\r\n        this.arquivados = status[i]['quantidade'];\r\n      }\r\n    }\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'desc') {\r\n        this.orderType = 'asc';\r\n      } else if (this.orderType == 'asc') {\r\n        this.orderType = 'desc';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'asc';\r\n    }\r\n    this.onFilter();\r\n  }\r\n\r\n  onAdvancedFilter(): void {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  filterByStatus(status: string): void {\r\n    this.formFilter.get('situacao').setValue(status);\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    let params = this.formFilter.value;\r\n    params['orderBy'] = this.orderBy;\r\n    params['orderType'] = this.orderType;\r\n\r\n    this.itemsPerPage = this.formFilter.value['registros'];\r\n    this.currentPage = 1;\r\n    this.setRouterParams(params);\r\n  }\r\n\r\n  setSubmittedSearch(): void {\r\n    this.searchSubmitted = true;\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n      queryParamsHandling: 'merge',\r\n    });\r\n    this.setSubmittedSearch();\r\n    this.search(params);\r\n  }\r\n\r\n  search(params: any): void {\r\n    if (this.searchSubmitted) {\r\n      this.loaderNavbar = true;\r\n      this.dataLoaded = false;\r\n      this.detailPanelService.hide();\r\n      this.clientes = [];\r\n      this.buscandoPor = params['buscarPor'];\r\n      this.pesquisa = params['pesquisa'];\r\n\r\n      this.clientesService\r\n        .getClientes(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderNavbar = false;\r\n            this.dataLoaded = true;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n            if (response['responseCode'] === 200) {\r\n              this.clientes = response['result']['analitico'].slice(\r\n                0,\r\n                this.itemsPerPage\r\n              );\r\n              this.totalItems = this.clientes[0]['total'];\r\n              this.setStatus(response['result']['sintetico']);\r\n            } else if (response['responseCode'] === 204) {\r\n              this.ativos = 0;\r\n              this.inativos = 0;\r\n              this.potencial = 0;\r\n              this.arquivados = 0;\r\n            }\r\n          },\r\n          (error: any) => {\r\n            this.pnotifyService.error();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  classStatusBorder(status: string): string {\r\n    let borderClass: string;\r\n\r\n    if (status == 'Ativo') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'Inativo') {\r\n      borderClass = 'border-danger';\r\n    } else if (status == 'Potenci') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'Arquivo') {\r\n      borderClass = 'border-secondary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  viewRegister(cliente: any): void {\r\n    if (cliente['podeAcessar'] == 1 || cliente['podeAcessar'] == 0) {\r\n      this.router.navigate(['../Detalles', cliente.codCliente], {\r\n        relativeTo: this.activatedRoute,\r\n\r\n      });\r\n    } else {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera.');\r\n    }\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent) {\r\n    if (this.formFilter.value['pagina'] != event.page) {\r\n      this.detailPanelService.hide();\r\n      this.resetClienteSelecionado();\r\n      this.formFilter.value['pagina'] = event.page;\r\n      this.onFilter();\r\n    }\r\n  }\r\n\r\n  onPreCadastroCpfCnpj() {\r\n    let pesquisa = this.pesquisa.replace(/\\D/g, '');\r\n\r\n    if (pesquisa.length === 11) {\r\n      return { cpf: pesquisa };\r\n    } else if (pesquisa.length === 14) {\r\n      return { cnpj: pesquisa };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  handleCounter(value: any) {\r\n    return value.toFixed(0);\r\n  }\r\n\r\n  resetClienteSelecionado() {\r\n    this.clienteSelecionado = null;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2FjdW11bG9zLW1lbnNhaXMvYWN1bXVsb3MtbWVuc2Fpcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-detalhes',\r\n  templateUrl: './detalhes.component.html',\r\n  styleUrls: ['./detalhes.component.scss']\r\n})\r\nexport class ComercialClientesDetalhesComponent implements OnInit {\r\n  loaderNavbar: boolean = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home'\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n      routerLink: '/comercial/clientes/lista'\r\n    },\r\n    {\r\n      descricao: 'Detalles'\r\n    }\r\n  ];\r\n\r\n  cliente: any = {};\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private pnotifyService: PNotifyService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.activatedRoute.snapshot.data['response']['responseCode'] === 200) {\r\n      this.cliente = this.activatedRoute.snapshot.data['response']['result'];\r\n      this.registrarAcesso();\r\n      this.titleService.setTitle('Detalhes');\r\n    } else if (\r\n      this.activatedRoute.snapshot.data['response']['responseCode'] === 403\r\n    ) {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\r\n      this.router.navigate(['/comercial/home']);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  classStatusBadge(status: string) {\r\n    let badgeClass = '';\r\n\r\n    if (status == 'Ativo') {\r\n      badgeClass = 'badge-success';\r\n    } else if (status == 'Inativo') {\r\n      badgeClass = 'badge-danger';\r\n    } else if (status == 'Potenci') {\r\n      badgeClass = 'badge-primary';\r\n    } else if (status == 'Arquivo') {\r\n      badgeClass = 'badge-secondary';\r\n    }\r\n\r\n    return badgeClass;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CnpjService {\r\n  private readonly API = `http://23.254.204.187/api/common/services/cnpj`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getData(cnpj: string) {\r\n    cnpj = cnpj.replace(/\\D/g, '');\r\n\r\n    return this.http.get(`${this.API}/${cnpj}`).pipe(\r\n      timeout(5000),\r\n      catchError(e => {\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Proposta para análise de crédito\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'formulario'\\\"\\r\\n    [disabled]=\\\"!form.valid\\\"\\r\\n    (click)=\\\"onSubmit()\\\">\\r\\n    Generar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\r\\n    (click)=\\\"onCancel()\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\r\\n    (click)=\\\"onDownload()\\\">\\r\\n    Download\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row justify-content-center\\\" *ngIf=\\\"tipoVisao == 'formulario'\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <div class=\\\"mtc-title\\\">Datos del cliente</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"razaoSocial\\\">Razon social</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"razaoSocial\\\"\\r\\n              formControlName=\\\"razaoSocial\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"dataSolicitacao\\\">Fecha de la solicitud</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataSolicitacao\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataSolicitacao\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('dataSolicitacao') + ' ' + onFieldRequired('dataSolicitacao')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataSolicitacao')\\\" message=\\\"Data de solicitação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"codCliente\\\">Código de cliente</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codCliente\\\"\\r\\n              formControlName=\\\"codCliente\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"codClienteDBA\\\">Código SAP</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codClienteDBA\\\"\\r\\n              formControlName=\\\"codClienteDBA\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"limiteCreditoAtual\\\">Limite de crédito atual</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"limiteCreditoAtual\\\"\\r\\n              formControlName=\\\"limiteCreditoAtual\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"setorAtividade\\\">Setor de atividades</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"setorAtividade\\\"\\r\\n              formControlName=\\\"setorAtividade\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"dataUltimaVisita\\\">Fecha de la última visita</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataUltimaVisita\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataUltimaVisita\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"instalacoes\\\">Instalaciones</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"instalacoes\\\"\\r\\n              formControlName=\\\"instalacoes\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"numFuncionarios\\\">Número de empleados</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"numFuncionarios\\\"\\r\\n              formControlName=\\\"numFuncionarios\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 0 }\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"limiteCreditoSolicitado\\\">Limite de crédito solicitado</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"limiteCreditoSolicitado\\\"\\r\\n              formControlName=\\\"limiteCreditoSolicitado\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('limiteCreditoSolicitado') + ' ' + onFieldRequired('limiteCreditoSolicitado')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('limiteCreditoSolicitado')\\\" message=\\\"Limite de crédito solicitado é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"condicaoPagto\\\">Condiciones de pago</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"condicaoPagto\\\"\\r\\n              formControlName=\\\"condicaoPagto\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('condicaoPagto') + ' ' + onFieldRequired('condicaoPagto')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('condicaoPagto')\\\" message=\\\"Condição de pagamento é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <hr class=\\\"mt-0\\\">\\r\\n            <div class=\\\"mtc-title\\\">Solicitud de datos</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeVendedor\\\">Vendedor(a)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeVendedor\\\"\\r\\n              formControlName=\\\"nomeVendedor\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"telefoneVendedor\\\">Teléfono</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"telefoneVendedor\\\"\\r\\n              formControlName=\\\"telefoneVendedor\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"gestorVendas\\\">Jefe de ventas</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"gestorVendas\\\"\\r\\n              formControlName=\\\"gestorVendas\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('gestorVendas') + ' ' + onFieldRequired('gestorVendas')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('gestorVendas')\\\" message=\\\"Gestor(a) de venda é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeEscritorio\\\">Oficina de ventas</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeEscritorio\\\"\\r\\n              formControlName=\\\"nomeEscritorio\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"fornecedores\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Proveedores</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddFornecedor()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of fornecedores.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-6\\\">\\r\\n                  <label for=\\\"nome\\\">Nobre</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"nome\\\"\\r\\n                    formControlName=\\\"nome\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('fornecedores', i, 'nome') + ' ' + onNestedFieldRequired('fornecedores', i, 'nome')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-5\\\">\\r\\n                  <label for=\\\"telefone\\\">Telefono</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"telefone\\\"\\r\\n                    formControlName=\\\"telefone\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteFornecedor(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"clientes\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Clientes</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddCliente()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"clientes.controls.length > 0\\\">\\r\\n            <div class=\\\"form-row\\\" *ngFor=\\\"let item of clientes.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n              <div class=\\\"form-group col mb-0\\\">\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col-11\\\">\\r\\n                    <label for=\\\"nome\\\">Nombre</label>\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      id=\\\"nome\\\"\\r\\n                      formControlName=\\\"nome\\\"\\r\\n                      (input)=\\\"onInput()\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn-icon\\\"\\r\\n                      (click)=\\\"onDeleteCliente(i)\\\">\\r\\n                      <i class=\\\"fas fa-trash\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mb-3\\\" *ngIf=\\\"clientes.controls.length == 0\\\">\\r\\n            <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"bancos\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Bancos</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddBanco()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of bancos.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"nome\\\">Nome</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"nome\\\"\\r\\n                    formControlName=\\\"nome\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'nome') + ' ' + onNestedFieldRequired('bancos', i, 'nome')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-2\\\">\\r\\n                  <label for=\\\"agencia\\\">Agencia</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"agencia\\\"\\r\\n                    formControlName=\\\"agencia\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'agencia') + ' ' + onNestedFieldRequired('bancos', i, 'agencia')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"contaCorrente\\\">Cuenta corriente</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"contaCorrente\\\"\\r\\n                    formControlName=\\\"contaCorrente\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'contaCorrente') + ' ' + onNestedFieldRequired('bancos', i, 'contaCorrente')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"telefone\\\">Telefono</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"telefone\\\"\\r\\n                    formControlName=\\\"telefone\\\"\\r\\n                    telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'telefone') + ' ' + onNestedFieldRequired('bancos', i, 'telefone')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteBanco(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <hr class=\\\"mt-0\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <label>Ventas concentradas</label>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                  <input\\r\\n                    type=\\\"radio\\\"\\r\\n                    id=\\\"vendasConcentradasSim\\\"\\r\\n                    class=\\\"custom-control-input\\\"\\r\\n                    formControlName=\\\"vendasConcentradas\\\"\\r\\n                    value=\\\"Sim\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"vendasConcentradasSim\\\">Sim</label>\\r\\n                </div>\\r\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                  <input\\r\\n                    type=\\\"radio\\\"\\r\\n                    id=\\\"vendasConcentradasNao\\\"\\r\\n                    class=\\\"custom-control-input\\\"\\r\\n                    formControlName=\\\"vendasConcentradas\\\"\\r\\n                    value=\\\"Não\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"vendasConcentradasNao\\\">Não</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"previsaoCompraTon\\\">Compra mensual estimada (Ton)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"previsaoCompraTon\\\"\\r\\n              formControlName=\\\"previsaoCompraTon\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"previsaoCompraValor\\\">Compra mensual estimada (R$)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"previsaoCompraValor\\\"\\r\\n              formControlName=\\\"previsaoCompraValor\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"faturamentoMedio\\\">Facturación media mensual</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"faturamentoMedio\\\"\\r\\n              formControlName=\\\"faturamentoMedio\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"parecerVendedor\\\">Opinión del vendedor</label>\\r\\n            <textarea\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"parecerVendedor\\\"\\r\\n              formControlName=\\\"parecerVendedor\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('parecerVendedor') + ' ' + onFieldRequired('parecerVendedor')\\\">\\r\\n            </textarea>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('parecerVendedor')\\\" message=\\\"Parecer do vendedor é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row justify-content-center pt-5\\\" id=\\\"impressao-ficha-pac\\\" *ngIf=\\\"tipoVisao == 'ficha'\\\">\\r\\n    <div class=\\\"col-9\\\">\\r\\n      <h1>Propuesta de análisis de créditos (PAC)</h1>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Dados do cliente</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Razon social:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.razaoSocial == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.razaoSocial != null\\\">{{ dataFicha.razaoSocial }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Fecha de la solicitud:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.dataSolicitacao == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.dataSolicitacao != null\\\">{{ dataFicha.dataSolicitacao }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Código de cliente (TID):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.codCliente == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.codCliente != null\\\">{{ dataFicha.codCliente }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Código de cliente (SAP):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.codClienteDBA == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.codClienteDBA != null\\\">{{ dataFicha.codClienteDBA }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Limite de crédito actual:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoAtual == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoAtual == null\\\">{{ dataFicha.limiteCreditoAtual | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Sector de actividade:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.setorAtividade == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.setorAtividade != null\\\">{{ dataFicha.setorAtividade }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Fecha de la última visita:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.dataUltimaVisita == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.dataUltimaVisita != null\\\">{{ dataFicha.dataUltimaVisita }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Instalaciones:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.instalacoes == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.instalacoes != null\\\">{{ dataFicha.instalacoes }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Número de funcionários:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.numFuncionarios == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.numFuncionarios == null\\\">{{ dataFicha.numFuncionarios }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Propuestas</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Limite de crédito solicitado:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoSolicitado == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoSolicitado != null\\\">{{ dataFicha.limiteCreditoSolicitado | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Condiciones de pago:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto != null\\\">{{ dataFicha.condicaoPagto }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Datos del solicitante</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Vendedor(a):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto != null\\\">{{ dataFicha.nomeVendedor }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Gestor(a):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas != null\\\">{{ dataFicha.gestorVendas | uppercase }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Telefono:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas != null\\\">{{ dataFicha.telefoneVendedor }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Oficina de ventas:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.nomeEscritorio == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.nomeEscritorio != null\\\">{{ dataFicha.nomeEscritorio }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Principales proveedores</div>\\r\\n        <div *ngIf=\\\"dataFicha.fornecedores.length == 0\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dataFicha.fornecedores.length > 0\\\">\\r\\n          <div class=\\\"row mt-2\\\" *ngFor=\\\"let item of dataFicha.fornecedores\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Nombre:</strong>\\r\\n                <span *ngIf=\\\"item.nome == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.nome != null\\\">{{ item.nome | uppercase }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Telefono:</strong>\\r\\n                <span *ngIf=\\\"item.telefone == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.telefone != null\\\">{{ item.telefone }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Principales clientes</div>\\r\\n        <div *ngIf=\\\"dataFicha.clientes.length == 0\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dataFicha.clientes.length > 0\\\">\\r\\n          <div *ngFor=\\\"let item of dataFicha.clientes\\\">\\r\\n            <p class=\\\"mt-2 mb-0\\\">\\r\\n              <strong class=\\\"mr-2\\\">Nome:</strong> {{ item.nome | uppercase }}\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Principaless bancos</div>\\r\\n        <div *ngIf=\\\"dataFicha.bancos.length == 0\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dataFicha.bancos.length > 0\\\">\\r\\n          <div class=\\\"row\\\" *ngFor=\\\"let item of dataFicha.bancos\\\">\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Banco:</strong>\\r\\n                <span *ngIf=\\\"item.nome == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.nome != null\\\">{{ item.nome | uppercase }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Agencia:</strong>\\r\\n                <span *ngIf=\\\"item.agencia == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.agencia != null\\\">{{ item.agencia }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Cuenta corrinte:</strong>\\r\\n                <span *ngIf=\\\"item.contaCorrente == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.contaCorrente != null\\\">{{ item.contaCorrente }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Telefono:</strong>\\r\\n                <span *ngIf=\\\"item.telefone == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.telefone != null\\\">{{ item.telefone }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Datos financieros</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Vendas concretadas:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.vendasConcentradas == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.vendasConcentradas != null\\\">{{ dataFicha.vendasConcentradas }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Previsión mensual de compras (Ton):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraTon == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraTon != null\\\">{{ dataFicha.previsaoCompraTon | number:'1.3-3' }}t</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Previsión mensual de compras (R$):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraValor == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraValor != null\\\">{{ dataFicha.previsaoCompraValor | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Facturación media mensual (R$):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.faturamentoMedio == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.faturamentoMedio != null\\\">{{ dataFicha.faturamentoMedio | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-0\\\">\\r\\n        <div class=\\\"mtc-title\\\">Opinión del vendedor</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <span *ngIf=\\\"dataFicha.parecerVendedor == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.parecerVendedor != null\\\">{{ dataFicha.parecerVendedor | uppercase }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-notas-promissorias',\r\n  templateUrl: './notas-promissorias.component.html',\r\n  styleUrls: ['./notas-promissorias.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent\r\n  implements OnInit {\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  notasPromissorias: any = [];\r\n  notasPromissoriasLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getNotasPromissorias(params['id']);\r\n    });\r\n  }\r\n\r\n  getNotasPromissorias(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getNotasPromissorias(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.notasPromissorias = response['result'];\r\n        }\r\n        this.notasPromissoriasLoaded = true;\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'BAIXADA') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'QUITADA') {\r\n      borderClass = 'border-primary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2hpc3Rvcmljby1maW5hbmNlaXJvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Dias não úteis\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dataInicial\\\">Fecha inicial</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataInicial\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataInicial\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired('dataInicial')\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial') == 'required'\\\" message=\\\"Data Inicial é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dataFinal\\\">Fecha final</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataFinal\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataFinal\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired('dataFinal')\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal') == 'required'\\\" message=\\\"Data Final é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Cod. Material</th>\\r\\n            <th scope=\\\"col\\\">Material</th>\\r\\n            <th scope=\\\"col\\\">Línea / Clase</th>\\r\\n            <th scope=\\\"col\\\">Ton. Vendidas</th>\\r\\n            <th scope=\\\"col\\\">Nota Fiscal</th>\\r\\n            <th scope=\\\"col\\\">Dt. Ultima Compra</th>\\r\\n            <th scope=\\\"col\\\">Precio Unitário</th>\\r\\n            <th scope=\\\"col\\\">Precio Total</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let ultimoPreco of dadosPagination; let i = index\\\">\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.codMaterial }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.nomeMaterial | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.linha }} / {{ ultimoPreco.classe }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.qtdeToneladasVendidas | number:'1.3-3' }} ton \\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.nrNotaFiscal }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.dataUltimaCompra | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.precoUnitarioMaterial | currency:'BRL':'symbol':'1.2-2' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.precoTotalMaterial | currency:'BRL':'symbol':'1.2-2' }}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\";"]}