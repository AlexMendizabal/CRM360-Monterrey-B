{"version":3,"sources":["webpack:///src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.scss","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes.component.scss","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.html","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.scss","webpack:///src/app/shared/services/core/functions.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.html","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.service.ts","webpack:///src/app/modules/comercial/clientes/clientes-routing.module.ts","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.scss","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.module.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.ts","webpack:///src/app/modules/comercial/clientes/clientes.module.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.scss","webpack:///src/app/modules/comercial/clientes/clientes-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.html","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/shared/services/core/form-rules.service.ts","webpack:///src/app/modules/comercial/clientes/lista/lista.component.scss","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.scss","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.ts","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.ts","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.scss","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro-routing.module.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.html","webpack:///src/app/modules/comercial/clientes/cadastro/dados-faturamento/formulario/formulario-rules-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.html","webpack:///src/app/modules/comercial/clientes/lista/lista.component.html","webpack:///src/app/modules/comercial/clientes/lista/lista.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.scss","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes.component.ts","webpack:///src/app/shared/services/ws/cnpj.service.ts","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.scss","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.html"],"names":["ComercialClientesHistoricoFinanceiroComponent","router","activatedRoute","detalhesService","pnotifyService","location","atividadesService","titleService","loaderFullScreen","breadCrumbTree","cliente","getPNotify","snapshot","data","registrarAcesso","getDetalhes","notice","navigate","error","back","subscribe","params","pipe","next","response","setBreadCrumb","onRouterChange","handleLoadDependenciesError","id","url","split","currRoute","length","descricao","routerLink","breadCrumbConfig","route","setTitle","events","event","selector","template","ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent","historicoFinanceiroService","principal","historicoCobrancas","ocorrenciasDuplicatas","ocorrenciasComerciais","duplicataLoaded","queryParams","getMateriaisDuplicata","FunctionsService","valor","tamanho","toString","trim","i","providedIn","ComercialClientesPreCadastroService","vendedoresService","dadosFaturamentoService","http","BASE_URL","vendedores","getVendedores","cnaes","getCnaes","param","post","observe","routes","path","component","resolve","rules","canDeactivate","loadChildren","then","m","ComercialClientesCadastroModule","ComercialClientesHistoricoFinanceiroModule","redirectTo","pathMatch","ComercialClientesRoutingModule","imports","forChild","exports","ComercialClientesUltimosPrecosComponent","localeService","formBuilder","ultimosPrecos","dateService","confirmModalService","detailPanelService","comercialService","loaderNavbar","showDetailPanel","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","codCliente","setFormFilter","formValue","checkRouterParams","form","group","dataInicial","required","dataFinal","getFirstDayMonth","getLastDayMonth","activatedRouteSubscription","keys","atob","JSON","parse","search","forEach","formKey","paramKey","convertStringToDate","isNaN","Number","unsubscribe","field","onFieldInvalid","get","errors","hasOwnProperty","touched","formControl","controls","validator","validationResult","valid","setRouterParams","verificaParams","relativeTo","q","btoa","stringify","value","convertToUrlDate","Date","hide","getListaUltimosPrecos","success","slice","mensagem","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialClientesPropostaAnaliseCreditoResolverGuard","clienteService","getPropostaAnaliseCredito","result","razaoSocial","codSAP","limiteCredito","setorAtividade","nomeVendedor","telefoneVendedor","nomeEscritorio","declarations","forRoot","ComercialClientesHistoricoFinanceiroDetalhesComponent","filterPipe","tableConfig","subtitleBorder","pedidos","pedidosPagination","pedidosFiltered","pedidosLoaded","parent","grupoEconomico","getPedidos","getDetalhesPedidos","status","borderClass","startItem","page","endItem","transform","numDuplicata","ComercialClientesModule","ComercialClientesResolverGuard","clientesService","getPermissaoAcesso","responseCode","ComercialClientesHistoricoFinanceiroCorteDobraComponent","corteDobra","corteDobraLoaded","getCorteDobra","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","d","h","padStart","s","getSeconds","time","timeSplit","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","ComercialClientesUltimosPrecosService","API","httpParams","append","ComercialClientesHistoricoFinanceiroService","set","ComercialClientesHistoricoFinanceiroDebitosComponent","debitos","debitosLoaded","getDebitos","ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent","acumulosMensais","acumulosMensaisLoaded","getAcumulosMensais","ComercialService","FormRulesService","formRef","ComercialClientesPreCadastroComponent","preCadastroService","cnpjService","functionsService","modalConfig","MASKS","formChanged","tipoPessoa","submittingForm","maxLengthRules","maxLengthMessages","dadosCliente","getFormFields","documento","setMaxLengthRules","setFormBuilder","loadDependencies","handleFormFieldsError","console","log","map","cnae","codigo","nome","apellido1","apellido2","nomeFantasia","email","cnpj_cpf","maxLength","nit","contacto","vendedor","telefone","celular","direccion","tipopessoa","nombrecontacto","apellido_contacto","apellido2_contacto","telefonocontacto","celularcontacto","direccion_contacto","valueChanges","setValidators","clearValidators","updateValueAndValidity","reset","modalDetalhesCliente","podeAcessar","onCloseDetails","tipoPessoaOptions","S","P","G","E","tipopersona","formObj","tipo_pessoa","tipo_persona","carnet","id_vendedor","nombre","razonSocial","id_rubro","telefono","Ubicacion","id_ciudad","nombre_factura","contactos","nombres_contacto","telefono_contacto","celular_contacto","latitude_contacto","longitude_contacto","codigo_cliente","sapPostClient","detalle","confirm","ComercialClientesPropostaAnaliseCreditoComponent","pdfService","tipoVisao","dataFicha","disabled","dataSolicitacao","codClienteDBA","dataUltimaVisita","instalacoes","numFuncionarios","limiteCreditoAtual","limiteCreditoSolicitado","condicaoPagto","gestorVendas","fornecedores","array","clientes","vendasConcentradas","bancos","previsaoCompraTon","previsaoCompraValor","faturamentoMedio","parecerVendedor","setFormFornecedoresClientesBancos","onAddFornecedor","onAddBanco","push","agencia","contaCorrente","index","removeAt","formGroup","onNestedFieldInvalid","nestedForm","setTimeout","formData","getRawValue","download","ComercialClientesHistoricoFinanceiroResumoComponent","sinteticoPendenciasLoaded","sintetico","atrasoPagamento","tempoEntrega","totalAtraso","pagtoAntecipado","creditoSeguradora","grupoEconomicoLoaded","showPendenciasDetalhes","pendencias","titulos","notasDebito","notasPromissorias","chequesDevolvidos","reservaBobinas","saldo","visaoGrupoEconomico","getResumoSintetico","getGrupoEconomico","onLoadingGrupoEconomico","getResumoPedidos","toFixed","ComercialClientesDetalhesResolverGuard","children","ComercialHistoricoFinanceiroRoutingModule","ComercialClientesCadastroDadosFaturamentoRulesResolverGuard","formRulesService","getRules","ComercialClientesListaComponent","setorAtividades","dataLoaded","dadosCadastraisLoaded","dadosCadastraisEmpty","contatosLoaded","contatosEmpty","searchSubmitted","showAdvancedFilter","currentUser","localStorage","getItem","matricula","ativos","inativos","potencial","arquivados","orderBy","orderType","clientesPagination","dadosCadastrais","contato","contatos","editingMode","editedFields","vendedoresList","editingContacto","tipoPersonaOptions","label","getFormFilters","onDetailPanelEmitter","showDetailPanelSubscription","config","showing","onCloseDetailPanel","getSetorAtividades","unshift","formFilter","pesquisa","buscarPor","situacao","segurado","carteira","pagina","registros","id_group_econ","aux_cartera","searchInputValue","setSubmittedSearch","listStatus","editedIdCont","id_cont","editedContacto","editedds_cont_meio","ds_cont_meio","editedDireccion","editedDsCont","ds_cont","originalDsTipoCont","ds_tipo_cont","editing","codigoCliente","id_cliente","editedData","undefined","tipo_medio","id_cont_meio","sapUpdateContacto","option","find","opt","v","nombres","ciudad","NombreVendedor","sucursal","originalVendedorId","ubicacion","mapTipoPessoaToTipoPersona","sapUpdateClient","getStatus","setStatus","column","onFilter","setValue","queryParamsHandling","buscandoPor","getClientes","loadedFinished","clienteSelecionado","getContatosResumido","resetClienteSelecionado","replace","cpf","cnpj","ComercialClientesDetalhesComponent","badgeClass","CnpjService","e","ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent","notasPromissoriasLoaded","getNotasPromissorias"],"mappings":"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","file":"clientes-clientes-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2RlYml0b3MvZGViaXRvcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Pre-Registro\\\">\\r\\n  <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Guardar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"cnpj_cpf\\\"> CEDULA DE IDENTIDAD </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cnpj_cpf\\\" formControlName=\\\"cnpj_cpf\\\" (input)=\\\"onInput()\\\"\\r\\n                   [ngClass]=\\\"onFieldError('cnpj_cpf') + ' ' + onFieldRequired('cnpj_cpf')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnpj_cpf') == 'cnpj_cpf'\\\"\\r\\n                                  message=\\\"CEDULA es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"tipopessoa\\\">Tipo de persona</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"tipopessoa\\\" formControlName=\\\"tipopessoa\\\" (change)=\\\"onInput()\\\">\\r\\n              <option value=\\\"S\\\">Sociedades</option>\\r\\n              <option value=\\\"P\\\">Privado</option>\\r\\n              <option value=\\\"G\\\">Gobierno</option>\\r\\n              <option value=\\\"E\\\">Empleado</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nit\\\">NIT</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nit\\\" formControlName=\\\"nit\\\" (input)=\\\"onInput()\\\"\\r\\n                   [ngClass]=\\\"onFieldError('nit') + ' ' + onFieldRequired('nit')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nit') == 'required'\\\"\\r\\n                                  message=\\\"NIT inválido.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"vendedor\\\"> Vendedor</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"vendedores\\\" [virtualScroll]=\\\"true\\\"\\r\\n                       labelForId=\\\"vendedor\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\" formControlName=\\\"vendedor\\\"\\r\\n                       (change)=\\\"onInput()\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nome\\\">Nombre</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\" (input)=\\\"onInput()\\\"\\r\\n                   [ngClass]=\\\"onFieldError('nome') + ' ' + onFieldRequired('nome')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome') == 'required'\\\"\\r\\n                                  message=\\\"Nombre es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome') == 'maxlength'\\\"\\r\\n                                  [message]=\\\"maxLengthMessages.nome\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"apellido1\\\">Apellido Paterno</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"apellido1\\\" formControlName=\\\"apellido1\\\" (input)=\\\"onInput()\\\"\\r\\n                   [ngClass]=\\\"onFieldError('apellido1') + ' ' + onFieldRequired('apellido1')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('apellido1') == 'required'\\\"\\r\\n                                  message=\\\"Apellido es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('apellido1') == 'maxlength'\\\"\\r\\n                                  [message]=\\\"maxLengthMessages.apellido1\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"apellido2\\\">Apellido Materno</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"apellido2\\\" formControlName=\\\"apellido2\\\" (input)=\\\"onInput()\\\"\\r\\n                   [ngClass]=\\\"onFieldError('apellido2') + ' ' + onFieldRequired('apellido2')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('apellido2') == 'required'\\\"\\r\\n                                  message=\\\"Apellido es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('apellido2') == 'maxlength'\\\"\\r\\n                                  [message]=\\\"maxLengthMessages.apellido2\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"razaoSocial\\\">Razon social</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"razaoSocial\\\" formControlName=\\\"razaoSocial\\\" (input)=\\\"onInput()\\\"\\r\\n                   [ngClass]=\\\"onFieldError('razaoSocial') + ' ' + onFieldRequired('razaoSocial')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial') == 'required'\\\"\\r\\n                                  message=\\\"Razon social es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial') == 'maxlength'\\\"\\r\\n                                  [message]=\\\"maxLengthMessages.razaoSocial\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeFantasia\\\">Nombre de Fantasia</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nomeFantasia\\\" formControlName=\\\"nomeFantasia\\\" (input)=\\\"onInput()\\\"\\r\\n                   [ngClass]=\\\"onFieldError('nomeFantasia') + ' ' + onFieldRequired('nomeFantasia')\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"direccion\\\">Direccion</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"direccion\\\" formControlName=\\\"direccion\\\" (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"celular\\\">Celular</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"celular\\\" formControlName=\\\"celular\\\" (input)=\\\"onInput()\\\"\\r\\n                   [ngClass]=\\\"onFieldError('celular') + ' ' + onFieldRequired('celular')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('celular') == 'required'\\\"\\r\\n                                  message=\\\"celular es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"email\\\">E-mail</label>\\r\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" formControlName=\\\"email\\\" (input)=\\\"onInput()\\\"\\r\\n                   [ngClass]=\\\"onFieldError('email') + ' ' + onFieldRequired('email')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email') == 'required'\\\"\\r\\n                                  message=\\\"E-mail es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email') == 'maxlength'\\\"\\r\\n                                  [message]=\\\"maxLengthMessages.email\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"telefone\\\">Telefono</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"telefone\\\" formControlName=\\\"telefone\\\" (input)=\\\"onInput()\\\"\\r\\n                   [ngClass]=\\\"onFieldError('telefone') + ' ' + onFieldRequired('telefone')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('telefone') == 'required'\\\"\\r\\n                                  message=\\\"Telefono es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"cnae\\\">Rubro (Actividad Economica)</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"cnaes\\\" [virtualScroll]=\\\"true\\\" labelForId=\\\"cnae\\\"\\r\\n                       bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\" formControlName=\\\"cnae\\\" (change)=\\\"onInput()\\\"\\r\\n                       [ngClass]=\\\"onFieldError('cnae') + ' ' + onFieldRequired('cnae')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnae') == 'required'\\\"\\r\\n                                  message=\\\"CNAE es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <button data-toggle=\\\"collapse\\\" data-target=\\\"#CollapseContacto\\\" class=\\\"btn btn-secondary\\\">Agregar Contacto</button>\\r\\n\\r\\n         <div id=\\\"CollapseContacto\\\" class=\\\"collapse\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <hr class=\\\"mt-2\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label>CONTACTOS</label>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"contacto\\\">TITULO DE CONTACTO</label>\\r\\n                <input type=\\\"contacto\\\" class=\\\"form-control\\\" id=\\\"contacto\\\" formControlName=\\\"contacto\\\" (input)=\\\"onInput()\\\"\\r\\n                       [ngClass]=\\\"onFieldError('contacto') + ' ' + onFieldRequired('contacto')\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"nombrecontacto\\\">NOMBRE</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nombrecontacto\\\" formControlName=\\\"nombrecontacto\\\"\\r\\n                       (input)=\\\"onInput()\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"apellido_contacto\\\">APELLIDO PATERNO</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"apellido_contacto\\\" formControlName=\\\"apellido_contacto\\\"\\r\\n                       (input)=\\\"onInput()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"apellido2_contacto\\\">APELLIDO MATERNO</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"apellido2_contacto\\\" formControlName=\\\"apellido2_contacto\\\"\\r\\n                       (input)=\\\"onInput()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"telefonocontacto\\\">TELEFONO CONTACTO</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"telefonocontacto\\\" formControlName=\\\"telefonocontacto\\\"\\r\\n                       (input)=\\\"onInput()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"celularcontacto\\\">CELULAR DE CONTACTO</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"celularcontacto\\\" formControlName=\\\"celularcontacto\\\"\\r\\n                       (input)=\\\"onInput()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"direccion_contacto\\\">DIRECCION DE CONTACTO</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"direccion_contacto\\\" formControlName=\\\"direccion_contacto\\\"\\r\\n                       (input)=\\\"onInput()\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n<ng-template #modalDetalhesCliente>\\r\\n  <!-- <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Oops! Ese cliente ya esta registrado</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCloseDetails()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"mtc-title\\\">Datos de registro</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col\\\">\\r\\n        <label>Código</label>\\r\\n        <div *ngIf=\\\"dadosCliente.codCliente == null\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dadosCliente.codCliente != null\\\">{{ dadosCliente.codCliente }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-6\\\" *ngIf=\\\"dadosCliente.tipo == 'F'\\\">\\r\\n        <label>CPF</label>\\r\\n        <div *ngIf=\\\"dadosCliente.cpf == null\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dadosCliente.cpf != null\\\">{{ dadosCliente.cpf }}</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-6\\\" *ngIf=\\\"dadosCliente.tipo == 'J'\\\">\\r\\n        <label>NIT</label>\\r\\n        <div *ngIf=\\\"dadosCliente.cnpj == null\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dadosCliente.cnpj != null\\\">{{ dadosCliente.cnpj }}</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label>Nombre fantasia</label>\\r\\n        <div *ngIf=\\\"dadosCliente.nomeFantasia == null\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dadosCliente.nomeFantasia != null\\\">{{ dadosCliente.nomeFantasia }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col\\\">\\r\\n        <label>Razon social</label>\\r\\n        <div *ngIf=\\\"dadosCliente.razaoSocial == null\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dadosCliente.razaoSocial != null\\\">{{ dadosCliente.razaoSocial }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col\\\">\\r\\n        <label>Endereço</label>\\r\\n        <div *ngIf=\\\"dadosCliente.endereco == null\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dadosCliente.endereco != null\\\">{{ dadosCliente.endereco }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label>Bairro</label>\\r\\n        <div *ngIf=\\\"dadosCliente.bairro == null\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dadosCliente.bairro != null\\\">{{ dadosCliente.bairro }}</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label>CEP</label>\\r\\n        <div *ngIf=\\\"dadosCliente.cep == null\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dadosCliente.cep != null\\\">{{ dadosCliente.cep }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label>Cidade</label>\\r\\n        <div *ngIf=\\\"dadosCliente.cidade == null\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dadosCliente.cidade != null\\\">{{ dadosCliente.cidade }}</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label>Estado</label>\\r\\n        <div *ngIf=\\\"dadosCliente.uf == null\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dadosCliente.uf != null\\\">{{ dadosCliente.uf }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col\\\">\\r\\n        <label>Segurado</label>\\r\\n        <div *ngIf=\\\"dadosCliente.segurado != ''\\\">SI</div>\\r\\n        <div *ngIf=\\\"dadosCliente.segurado == ''\\\">NO</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label>Vendedor</label>\\r\\n        <div *ngIf=\\\"dadosCliente.vendedor == null\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dadosCliente.vendedor != null\\\">{{ dadosCliente.vendedor }}</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label>Escritório</label>\\r\\n        <div *ngIf=\\\"dadosCliente.escritorio == null\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dadosCliente.escritorio != null\\\">{{ dadosCliente.escritorio }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCliente.codSAP != '' && dadosCliente.codSAP != null\\\">\\r\\n        <label>Código DBA</label>\\r\\n        <div>{{ dadosCliente.codSAP }}</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCliente.escritorioDba != '' && dadosCliente.escritorioDba != null\\\">\\r\\n        <label>Sucursal</label>\\r\\n        <div>{{ dadosCliente.escritorioDba }}</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCliente.ultimaCompraDba != '' && dadosCliente.ultimaCompraDba != null\\\">\\r\\n        <label>Última compra</label>\\r\\n        <div>{{ dadosCliente.ultimaCompraDba }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"onCloseDetails()\\\">Fechar</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      (click)=\\\"onNavigateDetail()\\\">\\r\\n      Detalles\\r\\n    </button>\\r\\n  </div> -->\\r\\n</ng-template>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Detalles\\\"></app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col text-center\\\">\\r\\n      <h5 class=\\\"pt-2 mb-4\\\">{{ cliente.razaoSocial }}</h5>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mb-4\\\">\\r\\n    <div class=\\\"col d-flex justify-content-center w-100\\\">\\r\\n      <h5 tooltip=\\\"Código do cliente\\\">\\r\\n        <span class=\\\"badge badge-dark\\\">CÓD.: {{ cliente.codCliente }}</span>\\r\\n      </h5>\\r\\n      <h5 *ngIf=\\\"cliente.nomeVendedor\\\" class=\\\"ml-3\\\" tooltip=\\\"Vendedor\\\">\\r\\n        <span class=\\\"badge badge-light\\\">{{ cliente.nomeVendedor | uppercase }}</span>\\r\\n      </h5>\\r\\n      <h5 class=\\\"ml-3\\\" tooltip=\\\"Status\\\">\\r\\n        <span class=\\\"badge\\\" [ngClass]=\\\"classStatusBadge(cliente.status)\\\">{{ cliente.status | uppercase }}</span>\\r\\n      </h5>\\r\\n      <h5 *ngIf=\\\"cliente.codClienteDBA\\\" class=\\\"ml-3\\\" tooltip=\\\"Código DBA do cliente\\\">\\r\\n        <span class=\\\"badge badge-warning\\\">CÓD. DBA: {{ cliente.codClienteDBA }}</span>\\r\\n      </h5>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-9\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-folder-open\\\"\\r\\n            text=\\\"Datos de registro\\\"\\r\\n            [routerLink]=\\\"['../../cadastro', cliente.codCliente, 'dados-faturamento']\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n         <!--div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-chart-pie\\\"\\r\\n            text=\\\"Dashboard\\\"\\r\\n            [routerLink]=\\\"['../../dashboard', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div--> \\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-chart-bar\\\"\\r\\n            text=\\\"Histórico Financeiro\\\"\\r\\n            [routerLink]=\\\"['../../historico-financeiro', cliente.codCliente, 'resumo']\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-handshake\\\"\\r\\n            text=\\\"Ficha PAC\\\"\\r\\n            [routerLink]=\\\"['../../proposta-analise-credito', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div>\\r\\n      </div> -->\\r\\n      <!-- <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-shopping-cart\\\"\\r\\n            text=\\\"Vender\\\"\\r\\n            [routerLink]=\\\"['../../../ciclo-vendas/139/cotacoes-pedidos/lista/']\\\"\\r\\n            [queryParams]=\\\"{codCliente: cliente.codCliente}\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"far fa-calendar-alt\\\"\\r\\n            text=\\\"Agendar\\\"\\r\\n            [routerLink]=\\\"['../../../agenda/novo', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-tasks\\\"\\r\\n            text=\\\"Propuestas / Pedidos\\\"\\r\\n            [routerLink]=\\\"['../../../tid-software/11']\\\"\\r\\n            [queryParams]=\\\"{ codCliente: cliente.codCliente, sistema: 'vendas', modulo: 3 }\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-list\\\"\\r\\n            text=\\\"Últimos precios\\\"\\r\\n            [routerLink]=\\\"['../../../clientes/ultimos-precos', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialClientesDetalheService } from './../detalhes/detalhes.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro',\r\n  templateUrl: './historico-financeiro.component.html',\r\n  styleUrls: ['./historico-financeiro.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroComponent implements OnInit {\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  cliente: any = {};\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private detalhesService: ComercialClientesDetalheService,\r\n    private pnotifyService: PNotifyService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.activatedRoute.snapshot.data['response']['responseCode'] === 200) {\r\n      this.registrarAcesso();\r\n      this.getDetalhes();\r\n    } else if (\r\n      this.activatedRoute.snapshot.data['response']['responseCode'] === 403\r\n    ) {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\r\n      this.router.navigate(['/comercial/home']);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getDetalhes() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.detalhesService\r\n        .getDetalhes(params['id'])\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderFullScreen = false;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: any) => {\r\n            if (response['responseCode'] === 200) {\r\n              this.cliente = response['result'];\r\n              this.setBreadCrumb(params['id']);\r\n              this.onRouterChange();\r\n            } else {\r\n              this.handleLoadDependenciesError();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.handleLoadDependenciesError();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  handleLoadDependenciesError() {\r\n    this.pnotifyService.error();\r\n    this.location.back();\r\n  }\r\n\r\n  setBreadCrumb(id: number) {\r\n    let router = this.router.url.split('/');\r\n    let currRoute = router[router.length - 1];\r\n\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home'\r\n      },\r\n      {\r\n        descricao: 'Busqueda de clientes',\r\n        routerLink: '/comercial/clientes/lista'\r\n      },\r\n      {\r\n        descricao: 'Detalhes',\r\n        routerLink: `/comercial/clientes/detalhes/${id}`\r\n      },\r\n      {\r\n        descricao: 'Histórico financeiro',\r\n        routerLink: `/comercial/clientes/historico-financeiro/${id}/resumo`\r\n      },\r\n      {\r\n        descricao: this.breadCrumbConfig(currRoute)\r\n      }\r\n    ];\r\n  }\r\n\r\n  breadCrumbConfig(route: string) {\r\n    let descricao = '';\r\n\r\n    if (route == 'resumo') {\r\n      descricao = 'Resumo';\r\n    } else if (route == 'detalhes') {\r\n      descricao = 'Detalhes';\r\n    } else if (route == 'acumulos-mensais') {\r\n      descricao = 'Acúmulos mensais';\r\n    } else if (route == 'notas-promissorias') {\r\n      descricao = 'Notas promissórias';\r\n    } else if (route == 'debitos') {\r\n      descricao = 'Débitos em aberto';\r\n    } else if (route == 'corte-dobra') {\r\n      descricao = 'Corte Dobra';\r\n    } else {\r\n      descricao = 'Materiais da duplicata';\r\n    }\r\n\r\n    this.titleService.setTitle(descricao);\r\n\r\n    return descricao;\r\n  }\r\n\r\n  onRouterChange() {\r\n    this.router.events.subscribe(event => {\r\n      this.activatedRoute.params.subscribe(params => {\r\n        this.setBreadCrumb(params['id']);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-materiais-duplicata',\r\n  templateUrl: './materiais-duplicata.component.html',\r\n  styleUrls: ['./materiais-duplicata.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent\r\n  implements OnInit {\r\n  principal: any = {};\r\n  historicoCobrancas: any = {};\r\n  ocorrenciasDuplicatas: any = {};\r\n  ocorrenciasComerciais: any = {};\r\n  duplicataLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.historicoFinanceiroService\r\n        .getMateriaisDuplicata(params)\r\n        .subscribe((response: any) => {\r\n          if (response['responseCode'] === 200) {\r\n            this.principal = response['result']['principal'];\r\n            this.historicoCobrancas = response['result']['historicoCobrancas'];\r\n            this.ocorrenciasDuplicatas =\r\n              response['result']['ocorrenciasDuplicatas'];\r\n            this.ocorrenciasComerciais =\r\n              response['result']['ocorrenciasComerciais'];\r\n          }\r\n          this.duplicataLoaded = true;\r\n        });\r\n    });\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!notasPromissoriasLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de pagarés...</strong>\\r\\n    </div>\\r\\n    <custom-table [config]=\\\"tableConfig\\\">\\r\\n      <ng-template #thead let-thead *ngIf=\\\"notasPromissorias.length > 0 && notasPromissoriasLoaded\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Registro</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Bancário</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Baixa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor da baixa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencimento</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor da duplicata</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let nota of notasPromissorias\\\">\\r\\n          <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(nota.situacao)\\\">{{ nota.numRegistro }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.numBancario }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.dataBaixa }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.valorBaixa | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.dataVencimento }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.valorDuplicata | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"notasPromissorias.length > 0 && notasPromissoriasLoaded\\\">\\r\\n      <div class=\\\"col-6 d-flex justify-content-center w-100\\\">\\r\\n        <div class=\\\"d-flex justify-content-around\\\">\\r\\n          <div class=\\\"legend green\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">BAIXADA</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend blue\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">QUITADA</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result\\r\\n      message=\\\"Nenhuma informação encontrada\\\"\\r\\n      *ngIf=\\\"notasPromissorias.length == 0 && notasPromissoriasLoaded\\\">\\r\\n    </empty-result>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL25vdGFzLXByb21pc3Nvcmlhcy9ub3Rhcy1wcm9taXNzb3JpYXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL3Jlc3Vtby9yZXN1bW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FunctionsService {\r\n  completaZeroEsquerda(valor: any, tamanho: number): string {\r\n    if (valor === null) return null;\r\n\r\n    valor = valor.toString();\r\n    valor = valor.trim();\r\n\r\n    if (valor.length < tamanho) {\r\n      for (let i = valor.length; i < tamanho; i++) {\r\n        valor = `0${valor}`;\r\n      }\r\n    }\r\n\r\n    return valor;\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!pedidosLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de duplicados...</strong>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"pedidos.length > 0 && pedidosLoaded\\\">\\r\\n      <div class=\\\"row justify-content-between\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <div class=\\\"d-flex\\\">\\r\\n            <div class=\\\"legend green\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">ABIERTO</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend blue\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">QUITADA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend yellow\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">VENCIDA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend red\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">PROTESTA</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"filtro\\\" class=\\\"col-2 text-right pb-0 pt-1 pr-2\\\">Filtrar</label>\\r\\n            <div class=\\\"col-10 pl-0\\\">\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control form-control-sm\\\"\\r\\n                id=\\\"filtro\\\"\\r\\n                placeholder=\\\"Número da duplicata\\\"\\r\\n                #filtro\\r\\n                (input)=\\\"onFilter(filtro.value)\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Facturamiento</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. pedido</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicar</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencimiento</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Banco</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Baja</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Pré-datada</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Atraso</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Entrega</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let pedido of pedidosPagination\\\">\\r\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(pedido.situacao)\\\">{{ pedido.empresa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataFaturamento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numPedido }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numDuplicata }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataVencimento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.banco }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataBaixa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.tipoBaixa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataPreDatada }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.atraso }} dias</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.entrega }} dias</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <a\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Materiais da duplicata\\\"\\r\\n                container=\\\"body\\\"\\r\\n                [routerLink]=\\\"['../materiais-duplicata']\\\"\\r\\n                [queryParams]=\\\"{\\r\\n                  codEmpresa: pedido.idEmpresa,\\r\\n                  numPedido: pedido.numPedido,\\r\\n                  sequencia: pedido.sequencia\\r\\n                }\\\">\\r\\n                <i class=\\\"fas fa-search\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"pedidosLoaded\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"pedidosFiltered.length > itemsPerPage\\\">\\r\\n            <pagination\\r\\n              [maxSize]=\\\"maxSize\\\"\\r\\n              [totalItems]=\\\"pedidosFiltered.length\\\"\\r\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n              [boundaryLinks]=\\\"true\\\"\\r\\n              previousText=\\\"&lsaquo;\\\"\\r\\n              nextText=\\\"&rsaquo;\\\"\\r\\n              firstText=\\\"&laquo;\\\"\\r\\n              lastText=\\\"&raquo;\\\">\\r\\n            </pagination>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"pedidos.length == 0 && pedidosLoaded\\\"></empty-result>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"row mb-4\\\">\\r\\n  <div class=\\\"col mb-4\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-orange rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-hand-holding-usd\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.atrasoPagamento\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoAtrasoPagamento = $event\\\">\\r\\n          {{ handleCounter(countoAtrasoPagamento) }} dias\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">MÉDIA ATRASO PAGTO</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-gray rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-truck-moving\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.tempoEntrega\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoTempoEntrega = $event\\\">\\r\\n          {{ handleCounter(countoTempoEntrega) }} dias\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">MÉDIA TEMPO ENTREGA</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-red rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-dollar-sign\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.totalAtraso == 0\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.totalAtraso\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoTotalAtraso = $event\\\">\\r\\n          {{ countoTotalAtraso | currency:'BRL':'symbol':'1.2-2' }}\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">TOTAL EM ATRASO</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.totalAtraso == 0\\\">\\r\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">TOTAL EM ATRASO</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-green rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-file-invoice-dollar\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.pagtoAntecipado == 0\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.pagtoAntecipado\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoPagtoAntecipado = $event\\\">\\r\\n          {{ countoPagtoAntecipado | currency:'BRL':'symbol':'1.2-2' }}\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">ANTECIPADO DISPONÍVEL</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.pagtoAntecipado == 0\\\">\\r\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">ANTECIPADO DISPONÍVEL</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-blue rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-building\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.creditoSeguradora == 0\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.creditoSeguradora\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoCreditoSeguradora = $event\\\">\\r\\n          {{ countoCreditoSeguradora | currency:'BRL':'symbol':'1.2-2' }}\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">CRÉDITO SEGURADORA</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.creditoSeguradora == 0\\\">\\r\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">CRÉDITO SEGURADORA</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!pedidosLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carregando duplicatas...</strong>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"pedidos.length > 0 && pedidosLoaded\\\">\\r\\n      <div class=\\\"row justify-content-between\\\">\\r\\n        <div class=\\\"col-6 d-flex\\\">\\r\\n          <div class=\\\"d-flex my-auto\\\">\\r\\n            <div class=\\\"legend green\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">EM ABERTO</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend blue\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">QUITADA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend yellow\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">VENCIDA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend red\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">PROTESTO</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"filtro\\\" class=\\\"col-3 text-right pb-0 pt-1 pr-2\\\">Filtrar</label>\\r\\n            <div class=\\\"col-9 pl-0\\\">\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control form-control-sm\\\"\\r\\n                id=\\\"filtro\\\"\\r\\n                placeholder=\\\"Número da duplicata\\\"\\r\\n                #filtro\\r\\n                (input)=\\\"onFilter(filtro.value)\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Faturamento</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. pedido</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicata</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencto</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Baixa</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let pedido of pedidosPagination\\\">\\r\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(pedido.situacao)\\\">{{ pedido.empresa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataFaturamento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numPedido }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numDuplicata }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataVencimento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataBaixa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <a\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Materiais da duplicata\\\"\\r\\n                container=\\\"body\\\"\\r\\n                [routerLink]=\\\"['../materiais-duplicata']\\\"\\r\\n                [queryParams]=\\\"{\\r\\n                  codEmpresa: pedido.idEmpresa,\\r\\n                  numPedido: pedido.numPedido,\\r\\n                  sequencia: pedido.sequencia\\r\\n                }\\\">\\r\\n                <i class=\\\"fas fa-search\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"row mt-3\\\" *ngIf=\\\"pedidosLoaded\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"pedidosFiltered.length > itemsPerPage\\\">\\r\\n            <pagination\\r\\n              [maxSize]=\\\"maxSize\\\"\\r\\n              [totalItems]=\\\"pedidosFiltered.length\\\"\\r\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n              [boundaryLinks]=\\\"true\\\"\\r\\n              previousText=\\\"&lsaquo;\\\"\\r\\n              nextText=\\\"&rsaquo;\\\"\\r\\n              firstText=\\\"&laquo;\\\"\\r\\n              lastText=\\\"&raquo;\\\">\\r\\n            </pagination>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada nos últimos 12 meses. Para períodos anteriores veja em Detalhes.\\\" *ngIf=\\\"pedidos.length == 0 && pedidosLoaded\\\"></empty-result>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"d-flex justify-content-between w-100 mb-2\\\">\\r\\n      <div>\\r\\n        <h6>\\r\\n          <span class=\\\"mr-2\\\">Grupo econômico</span>\\r\\n          <a\\r\\n            href=\\\"javascript:void(0)\\\"\\r\\n            *ngIf=\\\"grupoEconomicoLoaded && grupoEconomico.length > 1\\\"\\r\\n            (click)=\\\"onGrupoEconomico(modalGrupoEconomico)\\\">(ver detalhes)\\r\\n          </a>\\r\\n        </h6>\\r\\n        <small class=\\\"form-text text-muted\\\">VISÃO DO GRUPO ECONÔMICO NO HISTÓRICO FINANCEIRO</small>\\r\\n      </div>\\r\\n      <div class=\\\"custom-control custom-switch my-auto\\\" *ngIf=\\\"grupoEconomicoLoaded && grupoEconomico.length > 1\\\">\\r\\n        <input\\r\\n        type=\\\"checkbox\\\"\\r\\n        class=\\\"custom-control-input\\\"\\r\\n        id=\\\"grupoEconomico\\\"\\r\\n        [checked]=\\\"visaoGrupoEconomico\\\"\\r\\n        (change)=\\\"onChangeGrupoEconomico()\\\"\\r\\n        [disabled]=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <label class=\\\"custom-control-label\\\" for=\\\"grupoEconomico\\\"></label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item bg-green\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong class=\\\"text-white\\\">Saldo para faturar</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-white\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.saldo\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoSaldo = $event\\\"\\r\\n            [hidden]=\\\"pendencias.saldo == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoSaldo | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-white\\\" *ngIf=\\\"pendencias.saldo == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-white\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <h6 class=\\\"my-2\\\">\\r\\n      <a\\r\\n        href=\\\"javascript:void(0)\\\"\\r\\n        (click)=\\\"showPendenciasDetalhes = !showPendenciasDetalhes\\\">\\r\\n        <span *ngIf=\\\"!showPendenciasDetalhes\\\"><i class=\\\"fas fa-chevron-up\\\"></i> ver detalhes</span>\\r\\n        <span *ngIf=\\\"showPendenciasDetalhes\\\"><i class=\\\"fas fa-chevron-down\\\"></i> esconder detalhes</span>\\r\\n      </a>\\r\\n    </h6>\\r\\n    <ul class=\\\"list-group\\\" *ngIf=\\\"showPendenciasDetalhes\\\">\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Títulos em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.titulos\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoTitulos = $event\\\"\\r\\n            [hidden]=\\\"pendencias.titulos == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoTitulos | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.titulos == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Notas de débitos em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.notasDebito\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoNotasDebito = $event\\\"\\r\\n            [hidden]=\\\"pendencias.notasDebito == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoNotasDebito | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.notasDebito == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Notas promissórias em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.notasPromissorias\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoNotasPromissorias = $event\\\"\\r\\n            [hidden]=\\\"pendencias.notasPromissorias == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoNotasPromissorias | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.notasPromissorias == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Cheques devolvidos</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.chequesDevolvidos\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoChequesDevolvidos = $event\\\"\\r\\n            [hidden]=\\\"pendencias.chequesDevolvidos == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoChequesDevolvidos | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.chequesDevolvidos == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Corte dobra liberado p/ produção</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.corteDobra\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoCorteDobra = $event\\\"\\r\\n            [hidden]=\\\"pendencias.corteDobra == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoCorteDobra | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.corteDobra == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Reserva de bobinas em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.reservaBobinas\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoReservaBobinas = $event\\\"\\r\\n            [hidden]=\\\"pendencias.reservaBobinas == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoReservaBobinas | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.reservaBobinas == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Limite de crédito</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.limiteCredito\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoLimiteCredito = $event\\\"\\r\\n            [hidden]=\\\"pendencias.limiteCredito == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoLimiteCredito | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.limiteCredito == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #modalGrupoEconomico>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\">Grupo econômico</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCloseModalGrupoEconomico()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <custom-table>\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód. cliente</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Razão social</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of grupoEconomico\\\">\\r\\n          <td class=\\\"text-center\\\">{{ item.tipo }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.codCliente }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.razaoSocial }}</td>\\r\\n          <td class=\\\"text-center\\\">\\r\\n            <a\\r\\n              class=\\\"btn-icon-sm\\\"\\r\\n              tooltip=\\\"Visualizar histórico financeiro\\\"\\r\\n              container=\\\"body\\\"\\r\\n              [routerLink]=\\\"['../../../historico-financeiro', item.codCliente, 'resumo']\\\"\\r\\n              (click)=\\\"onCloseModalGrupoEconomico()\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n            </a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\r\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from '../cadastro/dados-faturamento/formulario/formulario.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesPreCadastroService {\r\n  private readonly BASE_URL: string = `https://127.0.0.1:8000/api`;\r\n  \r\n  constructor(\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private dadosFaturamentoService: ComercialClientesCadastroDadosFaturamentoFormularioService,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  loadDependencies() {\r\n    let vendedores = this.vendedoresService.getVendedores();\r\n    let cnaes = this.dadosFaturamentoService.getCnaes();\r\n\r\n    return forkJoin([vendedores, cnaes]);\r\n  }\r\n\r\n  postAkna(param){\r\n    return this.http.post(\r\n      `${this.BASE_URL}/comercial/integracoes/akna/log-email-boas-vindas`,\r\n      param,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialClientesCadastroDadosFaturamentoRulesResolverGuard } from './cadastro/dados-faturamento/formulario/formulario-rules-resolver.guard';\r\nimport { ComercialClientesDetalhesResolverGuard } from './detalhes/detalhes-resolver.guard';\r\nimport { ComercialClientesResolverGuard } from './clientes-resolver.guard';\r\nimport { ComercialClientesPropostaAnaliseCreditoResolverGuard } from './proposta-analise-credito/proposta-analise-credito-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialClientesListaComponent } from './lista/lista.component';\r\nimport { ComercialClientesPreCadastroComponent } from './pre-cadastro/pre-cadastro.component';\r\nimport { ComercialClientesDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesDashboardComponent } from './dashboard/dashboard.component';\r\nimport { ComercialClientesPropostaAnaliseCreditoComponent } from './proposta-analise-credito/proposta-analise-credito.component';\r\nimport { ComercialClientesUltimosPrecosComponent } from './ultimos-precos/ultimos-precos.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialClientesListaComponent },\r\n  {\r\n    path: 'pre-cadastro',\r\n    component: ComercialClientesPreCadastroComponent,\r\n    resolve: {\r\n      rules: ComercialClientesCadastroDadosFaturamentoRulesResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'detalhes/:id',\r\n    component: ComercialClientesDetalhesComponent,\r\n    resolve: {\r\n      response: ComercialClientesDetalhesResolverGuard,\r\n    },\r\n  },\r\n  {\r\n    path: 'cadastro',\r\n    loadChildren: () =>\r\n      import('./cadastro/cadastro.module').then(\r\n        (m) => m.ComercialClientesCadastroModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'dashboard/:id',\r\n    component: ComercialClientesDashboardComponent,\r\n    resolve: {\r\n      response: ComercialClientesResolverGuard,\r\n    },\r\n  },\r\n  {\r\n    path: 'historico-financeiro',\r\n    loadChildren: () =>\r\n      import('./historico-financeiro/historico-financeiro.module').then(\r\n        (m) => m.ComercialClientesHistoricoFinanceiroModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'ultimos-precos/:id',\r\n    component: ComercialClientesUltimosPrecosComponent,\r\n  },\r\n  {\r\n    path: 'proposta-analise-credito/:id',\r\n    component: ComercialClientesPropostaAnaliseCreditoComponent,\r\n    resolve: {\r\n      data: ComercialClientesPropostaAnaliseCreditoResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/comercial/home',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialClientesRoutingModule {}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { ComercialClientesUltimosPrecosService } from '../ultimos-precos/ultimos-precos.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialService } from '../../comercial.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'ultimos-precos',\r\n  templateUrl: './ultimos-precos.component.html',\r\n  styleUrls: ['./ultimos-precos.component.scss'],\r\n})\r\nexport class ComercialClientesUltimosPrecosComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n\r\n  codCliente: number;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<any> = [];\r\n  dadosPagination: Array<any> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  ultimoPrecoSelecionado: any;\r\n  alteracoes: Array<any> = [];\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private ultimosPrecos: ComercialClientesUltimosPrecosService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private dateService: DateService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.codCliente = params.id;\r\n    });\r\n\r\n    this.registrarAcesso();\r\n    this.setFormFilter();\r\n    this.setBreadCrumb(this.codCliente);\r\n    this.titleService.setTitle('Ultimos Preços');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setFormFilter() {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      dataInicial: [formValue.dataInicial, [Validators.required]],\r\n      dataFinal: [formValue.dataFinal, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb(id: number) {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home',\r\n      },\r\n      {\r\n        descricao: 'Busqueda de clientes',\r\n        routerLink: '/comercial/clientes/lista',\r\n      },\r\n      {\r\n        descricao: 'Detalhes',\r\n        routerLink: `/comercial/clientes/detalhes/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Ultimos Preços',\r\n      },\r\n    ];\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      dataInicial: this.dateService.getFirstDayMonth(),\r\n      dataFinal: this.dateService.getLastDayMonth(),\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\r\n                  formValue[formKey] = this.dateService.convertStringToDate(\r\n                    params[paramKey],\r\n                    'pt-br'\r\n                  );\r\n                } else {\r\n                  if (!isNaN(Number(params[paramKey]))) {\r\n                    formValue[formKey] = Number(params[paramKey]);\r\n                  } else {\r\n                    formValue[formKey] = params[paramKey];\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.dataInicial) {\r\n      params.dataInicial = this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.dataInicial)\r\n      );\r\n    }\r\n\r\n    if (this.form.value.dataFinal) {\r\n      params.dataFinal = this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.dataFinal)\r\n      );\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    params.codCliente = this.codCliente;\r\n\r\n    this.ultimosPrecos\r\n      .getListaUltimosPrecos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!debitosLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de débitos pendientes...</strong>\\r\\n    </div>\\r\\n    <custom-table *ngIf=\\\"debitos.length > 0 && debitosLoaded\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data Pedido</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Pedido</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Duplicata</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Duplicata</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Juros</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Cartório</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Tarifa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data Tarifa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Tarifa</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let debito of debitos\\\">\\r\\n          <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(debito.situacao)\\\">{{ debito.dataPedido }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.numPedido }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.numDuplicata }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.valorDuplicata | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.juros }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.valorCartorio | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.tarifa }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.dataTarifa }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.valorTarifa | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <empty-result\\r\\n      message=\\\"Nenhuma informação encontrada\\\"\\r\\n      *ngIf=\\\"debitos.length == 0 && debitosLoaded\\\">\\r\\n    </empty-result>\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"debitos.length > 0 && debitosLoaded\\\">\\r\\n      <div class=\\\"col-6 d-flex justify-content-center w-100\\\">\\r\\n        <div class=\\\"d-flex justify-content-around\\\">\\r\\n          <div class=\\\"legend green\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">DÉBITO CON NOTA</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend blue\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">DÉBITO CON NOTA</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3Byb3Bvc3RhLWFuYWxpc2UtY3JlZGl0by9wcm9wb3N0YS1hbmFsaXNlLWNyZWRpdG8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesPropostaAnaliseCreditoResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(private clienteService: ComercialClientesService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['id']) {\r\n      return this.clienteService.getPropostaAnaliseCredito(route.params['id']);\r\n    }\r\n\r\n    return of({\r\n      result: {\r\n        razaoSocial: null,\r\n        codCliente: null,\r\n        codSAP: null,\r\n        limiteCredito: null,\r\n        setorAtividade: null,\r\n        nomeVendedor: null,\r\n        telefoneVendedor: null,\r\n        nomeEscritorio: null\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// ngx-filter-pipe\r\nimport { FilterPipeModule } from 'ngx-filter-pipe';\r\n\r\n// Counto\r\nimport { CountoModule } from 'angular2-counto';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialHistoricoFinanceiroRoutingModule } from './historico-financeiro-routing.module';\r\n\r\n// Components\r\nimport { ComercialClientesHistoricoFinanceiroComponent } from './historico-financeiro.component';\r\nimport { ComercialClientesHistoricoFinanceiroResumoComponent } from './resumo/resumo.component';\r\nimport { ComercialClientesHistoricoFinanceiroDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent } from './materiais-duplicata/materiais-duplicata.component';\r\nimport { ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent } from './acumulos-mensais/acumulos-mensais.component';\r\nimport { ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent } from './notas-promissorias/notas-promissorias.component';\r\nimport { ComercialClientesHistoricoFinanceiroDebitosComponent } from './debitos/debitos.component';\r\nimport { ComercialClientesHistoricoFinanceiroCorteDobraComponent } from './corte-dobra/corte-dobra.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialClientesHistoricoFinanceiroComponent,\r\n    ComercialClientesHistoricoFinanceiroResumoComponent,\r\n    ComercialClientesHistoricoFinanceiroDetalhesComponent,\r\n    ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent,\r\n    ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent,\r\n    ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent,\r\n    ComercialClientesHistoricoFinanceiroDebitosComponent,\r\n    ComercialClientesHistoricoFinanceiroCorteDobraComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TooltipModule,\r\n    PaginationModule,\r\n    TabsModule,\r\n    FilterPipeModule,\r\n    CountoModule,\r\n    SharedModule,\r\n    TemplatesModule.forRoot(),\r\n    ComercialHistoricoFinanceiroRoutingModule\r\n  ]\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// ngx-filter-pipe\r\nimport { FilterPipe } from 'ngx-filter-pipe';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-detalhes',\r\n  templateUrl: './detalhes.component.html',\r\n  styleUrls: ['./detalhes.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroDetalhesComponent\r\n  implements OnInit {\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  codCliente: number;\r\n\r\n  pedidos: any = [];\r\n  pedidosPagination: any = [];\r\n  pedidosFiltered: any = [];\r\n  pedidosLoaded: boolean = false;\r\n\r\n  maxSize: number = 10;\r\n  itemsPerPage: number = 10;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService,\r\n    private filterPipe: FilterPipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(queryParams => {\r\n      this.activatedRoute.parent.params.subscribe(params => {\r\n        let grupoEconomico = false;\r\n\r\n        if (\r\n          queryParams['grupoEconomico'] &&\r\n          queryParams['grupoEconomico'] == 'true'\r\n        ) {\r\n          grupoEconomico = true;\r\n        }\r\n\r\n        this.codCliente = params['id'];\r\n        this.getPedidos(this.codCliente, grupoEconomico);\r\n      });\r\n    });\r\n  }\r\n\r\n  getPedidos(id: number, grupoEconomico: boolean) {\r\n    this.historicoFinanceiroService\r\n      .getDetalhesPedidos(id, grupoEconomico)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.pedidos = response['result'];\r\n          this.pedidosFiltered = response['result'];\r\n          this.pedidosPagination = this.pedidosFiltered.slice(\r\n            0,\r\n            this.itemsPerPage\r\n          );\r\n        }\r\n        this.pedidosLoaded = true;\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'EM ABERTO') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'QUITADA') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'VENCIDA') {\r\n      borderClass = 'border-warning';\r\n    } else if (status == 'PROTESTO') {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.pedidosPagination = this.pedidos.slice(startItem, endItem);\r\n  }\r\n\r\n  onFilter(value: string) {\r\n    if (value) {\r\n      this.pedidosFiltered = this.filterPipe.transform(this.pedidos, {\r\n        numDuplicata: value\r\n      });\r\n    } else {\r\n      this.pedidosFiltered = this.pedidos;\r\n    }\r\n\r\n    this.pedidosPagination = this.pedidosFiltered.slice(0, this.itemsPerPage);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// Counto\r\nimport { CountoModule } from 'angular2-counto';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialClientesRoutingModule } from './clientes-routing.module';\r\n\r\n// Components\r\nimport { ComercialClientesListaComponent } from './lista/lista.component';\r\nimport { ComercialClientesPreCadastroComponent } from './pre-cadastro/pre-cadastro.component';\r\nimport { ComercialClientesDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesDashboardModule } from './dashboard/dashboard.module';\r\nimport { ComercialClientesHistoricoFinanceiroModule } from './historico-financeiro/historico-financeiro.module';\r\nimport { ComercialClientesPropostaAnaliseCreditoComponent } from './proposta-analise-credito/proposta-analise-credito.component';\r\nimport { ComercialClientesUltimosPrecosComponent } from './ultimos-precos/ultimos-precos.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialClientesListaComponent,\r\n    ComercialClientesPreCadastroComponent,\r\n    ComercialClientesDetalhesComponent,\r\n    ComercialClientesPropostaAnaliseCreditoComponent,\r\n    ComercialClientesUltimosPrecosComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TooltipModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    CountoModule,\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    CurrencyMaskModule,\r\n    SharedModule,\r\n    TemplatesModule.forRoot(),\r\n    ComercialClientesRoutingModule,\r\n    ComercialClientesDashboardModule,\r\n    ComercialClientesHistoricoFinanceiroModule,\r\n    \r\n  ]\r\n})\r\nexport class ComercialClientesModule {}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Histórico financeiro\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['resumo']\\\">\\r\\n    Resumen\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['detalhes']\\\">\\r\\n    Detalles\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['acumulos-mensais']\\\">\\r\\n    Acumulaciones mensuales\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['notas-promissorias']\\\">\\r\\n    Pagarés  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['debitos']\\\">\\r\\n    Débitos\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['corte-dobra']\\\">\\r\\n    Corte Doblado\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [show]=\\\"!loaderFullScreen\\\" [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h5 class=\\\"d-inline-block mb-0 mr-3\\\" tooltip=\\\"Código do cliente\\\">\\r\\n        <span class=\\\"badge badge-dark\\\">CÓD.: {{ cliente.codCliente }}</span>\\r\\n      </h5>\\r\\n      <h6 class=\\\"d-inline-block mb-0\\\">{{ cliente.razaoSocial }}</h6>\\r\\n    </div>\\r\\n  </div>\\r\\n  <router-outlet></router-outlet>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesResolverGuard implements Resolve<any> {\r\n  constructor(private clientesService: ComercialClientesService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['id']) {\r\n      return this.clientesService.getPermissaoAcesso(route.params['id']);\r\n    }\r\n\r\n    return of({\r\n      responseCode: 403\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL21hdGVyaWFpcy1kdXBsaWNhdGEvbWF0ZXJpYWlzLWR1cGxpY2F0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-corte-dobra',\r\n  templateUrl: './corte-dobra.component.html',\r\n  styleUrls: ['./corte-dobra.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroCorteDobraComponent\r\n  implements OnInit {\r\n  corteDobra: any = [];\r\n  corteDobraLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getCorteDobra(params['id']);\r\n    });\r\n  }\r\n\r\n  getCorteDobra(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getCorteDobra(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.corteDobra = response['result'];\r\n        }\r\n        this.corteDobraLoaded = true;\r\n      });\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!corteDobraLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carregando Corte Dobra...</strong>\\r\\n    </div>\\r\\n    <custom-table *ngIf=\\\"corteDobra.length > 0\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Identificacion</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Obra</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Discriminación</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of corteDobra\\\">\\r\\n          <td class=\\\"text-center\\\">{{ item.identificacao }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.data }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.obra }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.discriminacao }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.empresa }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <empty-result\\r\\n      message=\\\"Nenhuma informação encontrada\\\"\\r\\n      *ngIf=\\\"corteDobra.length == 0 && corteDobraLoaded\\\">\\r\\n    </empty-result>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialClientesUltimosPrecosService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/clientes/ultimos-precos`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaUltimosPrecos(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/clientes/historico-financeiro`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getPermissaoAcesso(id: any) {\r\n    return this.http.get(`${this.API}/permissao-acesso/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getResumoSintetico(id: any, grupoEconomico: any) {\r\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\r\n\r\n    return this.http\r\n      .get(`${this.API}/resumo/sintetico/${id}`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getGrupoEconomico(id: any) {\r\n    return this.http.get(`${this.API}/grupo-economico/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getResumoPedidos(id: any, grupoEconomico: any) {\r\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\r\n\r\n    return this.http\r\n      .get(`${this.API}/resumo/pedidos/${id}`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhesPedidos(id: any, grupoEconomico: any) {\r\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\r\n\r\n    return this.http\r\n      .get(`${this.API}/detalhes/pedidos/${id}`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getMateriaisDuplicata(params: any) {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais-duplicata`, {\r\n        params: httpParams\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAcumulosMensais(id: any) {\r\n    return this.http.get(`${this.API}/acumulos-mensais/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getNotasPromissorias(id: any) {\r\n    return this.http.get(`${this.API}/notas-promissorias/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getDebitos(id: any) {\r\n    return this.http.get(`${this.API}/debitos/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getCorteDobra(id: any) {\r\n    return this.http.get(`${this.API}/corte-dobra/${id}`).pipe(take(1));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-debitos',\r\n  templateUrl: './debitos.component.html',\r\n  styleUrls: ['./debitos.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroDebitosComponent\r\n  implements OnInit {\r\n  debitos: any = [];\r\n  debitosLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getDebitos(params['id']);\r\n    });\r\n  }\r\n\r\n  getDebitos(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getDebitos(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.debitos = response['result'];\r\n        }\r\n        this.debitosLoaded = true;\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'COM NOTA') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'SEM NOTA') {\r\n      borderClass = 'border-primary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-acumulos-mensais',\r\n  templateUrl: './acumulos-mensais.component.html',\r\n  styleUrls: ['./acumulos-mensais.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent\r\n  implements OnInit {\r\n  acumulosMensais: any = {};\r\n  acumulosMensaisLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getAcumulosMensais(params['id']);\r\n    });\r\n  }\r\n\r\n  getAcumulosMensais(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getAcumulosMensais(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.acumulosMensais = response['result'];\r\n        }\r\n        this.acumulosMensaisLoaded = true;\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  \r\n  \r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos(){\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormRulesService {\r\n  private readonly API = `http://23.254.204.187/api/common/services`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n    getRules(formRef: number): Observable<any> {\r\n    return this.http.get(`${this.API}/form-rules/${formRef}`).pipe(take(1));\r\n  }\r\n}\r\n","export default \".modal {\\n  display: none;\\n  position: fixed;\\n  z-index: 1;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto;\\n  background-color: rgba(0, 0, 0, 0.4);\\n}\\n\\n.modal-content {\\n  background-color: #fefefe;\\n  margin: 15% auto;\\n  padding: 20px;\\n  border: 1px solid #888;\\n  width: 80%;\\n}\\n\\n.contacto {\\n  text-transform: uppercase;\\n  font-weight: bold;\\n}\\n\\n.close {\\n  color: #aaa;\\n  float: right;\\n  font-size: 28px;\\n  font-weight: bold;\\n}\\n\\n.close:hover,\\n.close:focus {\\n  color: black;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2xpZW50ZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsZUFBQTtFQUNBLFVBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLG9DQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsVUFBQTtBQUNGOztBQUNBO0VBQ0UseUJBQUE7RUFDQSxpQkFBQTtBQUVGOztBQUNBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFFRjs7QUFDQTs7RUFFRSxZQUFBO0VBQ0EscUJBQUE7RUFDQSxlQUFBO0FBRUYiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbWVyY2lhbC9jbGllbnRlcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RhbCB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgei1pbmRleDogMTtcclxuICBsZWZ0OiAwO1xyXG4gIHRvcDogMDtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xyXG59XHJcblxyXG4ubW9kYWwtY29udGVudCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZTtcclxuICBtYXJnaW46IDE1JSBhdXRvO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzg4ODtcclxuICB3aWR0aDogODAlO1xyXG59XHJcbi5jb250YWN0byB7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLmNsb3NlIHtcclxuICBjb2xvcjogI2FhYTtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgZm9udC1zaXplOiAyOHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4uY2xvc2U6aG92ZXIsXHJcbi5jbG9zZTpmb2N1cyB7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3ByZS1jYWRhc3Ryby9wcmUtY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n// ng-brazil\r\nimport { MASKS, NgBrazilValidators } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n// Services\r\nimport { ComercialClientesPreCadastroService } from './pre-cadastro.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\nimport { CnpjService } from 'src/app/shared/services/ws/cnpj.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { FunctionsService } from 'src/app/shared/services/core/functions.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-pre-cadastro',\r\n  templateUrl: './pre-cadastro.component.html',\r\n  styleUrls: ['./pre-cadastro.component.scss'],\r\n})\r\nexport class ComercialClientesPreCadastroComponent\r\n  implements OnInit, IFormCanDeactivate\r\n{\r\n  @ViewChild('modalDetalhesCliente', {}) modalDetalhesCliente: TemplateRef<any>;\r\n\r\n  modalRef: BsModalRef;\r\n  modalConfig = {\r\n    ignoreBackdropClick: true,\r\n  };\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home',\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n      routerLink: '/comercial/clientes',\r\n    },\r\n    {\r\n      descricao: 'Pre-Registro',\r\n    },\r\n  ];\r\n\r\n  public MASKS = MASKS;\r\n\r\n  vendedores: any = [];\r\n  cnaes: any = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  tipoPessoa : any = {};\r\n  submittingForm = false;\r\n\r\n  maxLengthRules: any = {};\r\n  maxLengthMessages: any = {};\r\n\r\n  dadosCliente: any = {};\r\n\r\n  constructor(\r\n    private preCadastroService: ComercialClientesPreCadastroService,\r\n    private formBuilder: FormBuilder,\r\n    private location: Location,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private clientesService: ComercialClientesService,\r\n    private pnotifyService: PNotifyService,\r\n    private cnpjService: CnpjService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private functionsService: FunctionsService,\r\n    private modalService: BsModalService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.titleService.setTitle('Pre-Registro');\r\n    this.getFormFields();\r\n    this.activatedRoute.queryParams.subscribe((queryParams: any) => {\r\n      let documento = null;\r\n\r\n      // if (Object.keys(queryParams).length > 0) {\r\n      //   if (queryParams['cpf']) {\r\n      //     this.tipoPessoa = 'F';\r\n      //     documento = queryParams['cpf'];\r\n      //   } else if (queryParams['cnpj']) {\r\n      //     this.tipoPessoa = 'J';\r\n      //     documento = queryParams['cnpj'];\r\n      //   }\r\n      // }\r\n\r\n      this.registrarAcesso();\r\n      this.setMaxLengthRules();\r\n      this.setFormBuilder(documento);\r\n    });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getFormFields() {\r\n    this.preCadastroService\r\n      .loadDependencies()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response[0].responseCode === 200) {\r\n            this.vendedores = response[0].result;\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n\r\n          if (response[1].responseCode === 200) {console.log(response);\r\n            this.cnaes = response[1].result.map(cnae => ({\r\n              \r\n              id: cnae.id,\r\n              descricao: cnae.descricao,\r\n              codigo: cnae.codigo \r\n            }));\r\n            console.log(this.cnaes);\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.handleFormFieldsError();\r\n        }\r\n      );\r\n  }\r\n\r\n  handleFormFieldsError() {\r\n    this.pnotifyService.error();\r\n    this.location.back();\r\n  }\r\n\r\n  setMaxLengthRules() {\r\n    this.maxLengthRules = this.activatedRoute.snapshot.data.rules.data;\r\n    this.maxLengthMessages = {\r\n      nome: `El nombre debe contener ${this.maxLengthRules.nome} caracteres.`,\r\n      apellido1: `Apellido debe contener ${this.maxLengthRules.apellido1} caracteres.`,\r\n      apellido2: `Apellido debe contener ${this.maxLengthRules.apellido1} caracteres.`,\r\n      razaoSocial: `El nombre de la empresa debe contener ${this.maxLengthRules.razaoSocial} caracteres.`,\r\n      nomeFantasia: `El nombre comercial debe contener hasta ${this.maxLengthRules.nomeFantasia} caracteres.`,\r\n      email: `El correo electrónico debe llegar a ${this.maxLengthRules.email} caracteres.`,\r\n    };\r\n  }\r\n\r\n  setFormBuilder(documento: string) {\r\n    \r\n\r\n    // if (documento != null) {\r\n    //   if (this.tipoPessoa == 'F') {\r\n    //     cpf = documento;\r\n    //   } else if (this.tipoPessoa == 'J') {\r\n    //     cnpj = documento;\r\n    //   }\r\n    // }\r\n\r\n    this.form = this.formBuilder.group({\r\n      cnpj_cpf: [null,Validators.required],\r\n      nome: [\r\n        null,\r\n        [Validators.required, Validators.maxLength(this.maxLengthRules.nome)],\r\n      ],\r\n      apellido1: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(this.maxLengthRules.apellido1),\r\n        ],\r\n      ],\r\n      apellido2: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(this.maxLengthRules.apellido2),\r\n        ],\r\n      ],\r\n      \r\n      nit: [null],\r\n      contacto:[null],\r\n      razaoSocial: [null],\r\n      nomeFantasia: [null],\r\n      vendedor: [null],\r\n      cnae: [null],\r\n      email: [null,\r\n        [\r\n          Validators.email,\r\n          Validators.maxLength(this.maxLengthRules.email),\r\n        ],\r\n      ],\r\n      telefone: [null],\r\n      celular: [null],\r\n      direccion: [null],\r\n      tipopessoa: [null],\r\n      // atividadePrincipal: this.formBuilder.array([]),\r\n      // atividadeSecundaria: this.formBuilder.array([]),\r\n      //CAMPOS DE CONTACTO \r\n      nombrecontacto: [null],\r\n      apellido_contacto: [null],\r\n      apellido2_contacto: [null],\r\n      telefonocontacto: [null],\r\n      celularcontacto: [null],\r\n      direccion_contacto: [null],\r\n    });\r\n\r\n    this.form.get('tipopessoa').valueChanges.subscribe((value) => {\r\n      if (value === 'P' || value === 'G' || value === 'E') {\r\n        this.form.get('nit').setValidators([Validators.required]);\r\n        this.form.get('razaoSocial').setValidators([Validators.required]);\r\n      } else {\r\n        this.form.get('nit').clearValidators();\r\n        this.form.get('razaoSocial').clearValidators();\r\n      }\r\n      this.form.get('nit').updateValueAndValidity();\r\n      this.form.get('razaoSocial').updateValueAndValidity();\r\n    });\r\n     \r\n  }\r\n\r\n  setType(type: string) {\r\n    // this.tipoPessoa = type;\r\n    this.form.reset();\r\n\r\n    // if (this.tipoPessoa == 'F') {\r\n    //   this.form.controls.cpf.setValidators([Validators.required]);\r\n    //   this.form.controls.cpf.updateValueAndValidity();\r\n    //   this.form.controls.nome.setValidators([\r\n    //     Validators.required,\r\n    //     Validators.maxLength(this.maxLengthRules.nome),\r\n    //   ]);\r\n    //   this.form.controls.nome.updateValueAndValidity();\r\n    //   this.form.controls.sobrenome.setValidators([\r\n    //     Validators.required,\r\n    //     Validators.maxLength(this.maxLengthRules.sobrenome),\r\n    //   ]);\r\n    //   this.form.controls.sobrenome.updateValueAndValidity();\r\n\r\n    //   this.form.controls.cnpj.clearValidators();\r\n    //   this.form.controls.cnpj.updateValueAndValidity();\r\n    //   this.form.controls.razaoSocial.clearValidators();\r\n    //   this.form.controls.razaoSocial.updateValueAndValidity();\r\n    //   this.form.controls.nomeFantasia.clearValidators();\r\n    //   this.form.controls.nomeFantasia.updateValueAndValidity();\r\n    //   this.form.controls.cnae.clearValidators();\r\n    //   this.form.controls.cnae.updateValueAndValidity();\r\n    // } else if (this.tipoPessoa == 'J') {\r\n    //   this.form.controls.cnpj.setValidators([Validators.required]);\r\n    //   this.form.controls.cnpj.updateValueAndValidity();\r\n    //   this.form.controls.razaoSocial.setValidators([\r\n    //     Validators.required,\r\n    //     Validators.maxLength(this.maxLengthRules.razaoSocial),\r\n    //   ]);\r\n    //   this.form.controls.razaoSocial.updateValueAndValidity();\r\n    //   this.form.controls.nomeFantasia.setValidators([\r\n    //     Validators.required,\r\n    //     Validators.maxLength(this.maxLengthRules.nomeFantasia),\r\n    //   ]);\r\n    //   this.form.controls.nomeFantasia.updateValueAndValidity();\r\n    //   this.form.controls.cnae.setValidators([Validators.required]);\r\n    //   this.form.controls.cnae.updateValueAndValidity();\r\n\r\n    //   this.form.controls.cpf.clearValidators();\r\n    //   this.form.controls.cpf.updateValueAndValidity();\r\n    //   this.form.controls.nome.clearValidators();\r\n    //   this.form.controls.nome.updateValueAndValidity();\r\n    //   this.form.controls.sobrenome.clearValidators();\r\n    //   this.form.controls.sobrenome.updateValueAndValidity();\r\n    // }\r\n  }\r\n\r\n  // get atividadePrincipal() {\r\n  //   return this.form.get('atividadePrincipal') as FormArray;\r\n  // }\r\n\r\n  // get atividadeSecundaria() {\r\n  //   return this.form.get('atividadeSecundaria') as FormArray;\r\n  // }\r\n\r\n  // pushAtividadePrincipal(atividade: any) {\r\n  //   while (this.atividadePrincipal.length !== 0) {\r\n  //     this.atividadePrincipal.removeAt(0);\r\n  //   }\r\n\r\n  //   atividade.code = atividade.code.replace(/\\D/g, '');\r\n\r\n  //   if (atividade.code != '0000000') {\r\n  //     this.atividadePrincipal.push(\r\n  //       this.formBuilder.group({\r\n  //         cnae: [atividade.code],\r\n  //         descricao: [atividade.text],\r\n  //       })\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  // pushAtividadeSecundaria(atividades: any) {\r\n  //   while (this.atividadeSecundaria.length !== 0) {\r\n  //     this.atividadeSecundaria.removeAt(0);\r\n  //   }\r\n\r\n  //   if (atividades.length > 0) {\r\n  //     for (let i = 0; i < atividades.length; i++) {\r\n  //       atividades[i].code = atividades[i].code.replace(/\\D/g, '');\r\n\r\n  //       if (atividades[i].code != '0000000') {\r\n  //         this.atividadeSecundaria.push(\r\n  //           this.formBuilder.group({\r\n  //             cnae: [atividades[i].code],\r\n  //             descricao: [atividades[i].text],\r\n  //           })\r\n  //         );\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field) != '') {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n\r\n      if (field.errors.hasOwnProperty('maxlength') && field.touched) {\r\n        return 'maxlength';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  showDetails(): void {\r\n    this.modalRef = this.modalService.show(\r\n      this.modalDetalhesCliente,\r\n      this.modalConfig\r\n    );\r\n  }\r\n\r\n  onCloseDetails(): void {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  onNavigateDetail(): void {\r\n    if (this.dadosCliente.podeAcessar == 1) {\r\n      this.onCloseDetails();\r\n      this.router.navigate(['../detalhes', this.dadosCliente.codCliente], {\r\n        relativeTo: this.activatedRoute,\r\n      });\r\n    } else {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\r\n    }\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    /* this.postAkna(20081);\r\n    return; */\r\n    \r\n    const tipoPessoaOptions = {\r\n      S: 'Sociedades',\r\n      P: 'Privado',\r\n      G: 'Gobierno',\r\n      E: 'Empleado'\r\n    };\r\n    const tipopessoa = this.form.value.tipopessoa;\r\n    const tipopersona = tipoPessoaOptions[tipopessoa];\r\n  \r\n    if (this.form.valid) {\r\n      this.loaderNavbar = true;\r\n      this.submittingForm = true;\r\n      let formObj = {};\r\n      console.log(this.cnaes);\r\n      \r\n      formObj = {\r\n        tipo_pessoa: tipopessoa,\r\n        tipo_persona: tipopersona,\r\n        carnet: this.form.value.cnpj_cpf,\r\n        id_vendedor: this.form.value.vendedor,\r\n        nombre: this.form.value.nome,\r\n        apellido1: this.form.value.apellido1,\r\n        apellido2: this.form.value.apellido2,\r\n        razonSocial: this.form.value.razaoSocial,\r\n        nomeFantasia: this.form.value.nomeFantasia,\r\n        nit: this.form.value.nit,\r\n        id_rubro: this.form.value.cnae,\r\n        email: this.form.value.email,\r\n        // emailMarketing: this.form.value.emailMarketing,\r\n        telefono: this.form.value.telefone,\r\n        celular: this.form.value.celular,\r\n        // atividadePrincipal: this.form.value.atividadePrincipal,\r\n        // atividadeSecundaria: this.form.value.atividadeSecundaria,\r\n        Ubicacion: [\r\n          {\r\n              direccion: this.form.value.direccion,\r\n              id_ciudad: ''\r\n          }\r\n        ],\r\n        nombre_factura:'',\r\n        contactos:[\r\n          {\r\n        contacto:this.form.value.contacto,\r\n        nombres_contacto:this.form.value.nombrecontacto,\r\n        apellido_contacto:this.form.value.apellido_contacto,\r\n        apellido2_contacto:this.form.value.apellido2_contacto,\r\n        telefono_contacto:this.form.value.telefonocontacto,\r\n        celular_contacto:this.form.value.celularcontacto,\r\n        direccion_contacto:this.form.value.direccion_contacto,\r\n        latitude_contacto:0,\r\n        longitude_contacto:0,\r\n        codigo_cliente:'',\r\n        }\r\n      ],\r\n        \r\n      };console.log(formObj);\r\n  \r\n      this.clientesService\r\n      \r\n        .sapPostClient(formObj)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderNavbar = false;\r\n            this.submittingForm = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n            console.log(\"test\",response);\r\n            if (response.responseCode === 200 && response.detalle === \"Se creo registro\") {\r\n              this.pnotifyService.success('Cliente registrado.');\r\n              this.formChanged = false;\r\n              this.router.navigate(['../cadastro', response.result], {\r\n                relativeTo: this.activatedRoute,\r\n              });\r\n            } else if (response.responseCode === 403) {\r\n              this.pnotifyService.notice('Falha ao atribuir vendedor ao cadastro.');\r\n            } else {  \r\n              this.pnotifyService.notice(` ${response.detalle}`);\r\n            }\r\n          },\r\n          (error: any) => {\r\n            this.pnotifyService.notice('Ocorreu um erro ao cadastrar o cliente.');\r\n          }\r\n        );\r\n        \r\n    }\r\n  }  \r\n\r\n  onInput() {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate() {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onCancel() {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n  FormArray\r\n} from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ng-brazil\r\nimport { utilsBr } from 'js-brasil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { PdfService } from 'src/app/shared/services/core/pdf.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n@Component({\r\n  selector: 'comercia-clientes-proposta-analise-credito',\r\n  templateUrl: './proposta-analise-credito.component.html',\r\n  styleUrls: ['./proposta-analise-credito.component.scss']\r\n})\r\nexport class ComercialClientesPropostaAnaliseCreditoComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  loaderNavbar: boolean = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  codCliente: number;\r\n\r\n  tipoVisao: string = 'formulario';\r\n  dataFicha: any = [];\r\n\r\n  form: FormGroup;\r\n  formChanged: boolean = false;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private pnotifyService: PNotifyService,\r\n    private pdfService: PdfService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.codCliente = params['id'];\r\n\r\n      this.registrarAcesso();\r\n      this.setBreadCrumb(this.codCliente);\r\n      this.titleService.setTitle('Proposta para análise de crédito');\r\n\r\n      if (this.activatedRoute.snapshot.data['data']['responseCode'] === 200) {\r\n        this.setFormBuilder(\r\n          this.activatedRoute.snapshot.data['data']['result']\r\n        );\r\n      } else {\r\n        this.pnotifyService.error();\r\n        this.location.back();\r\n      }\r\n    });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(id: number) {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home'\r\n      },\r\n      {\r\n        descricao: 'Busqueda de clientes',\r\n        routerLink: '/comercial/clientes/lista'\r\n      },\r\n      {\r\n        descricao: 'Detalhes',\r\n        routerLink: `/comercial/clientes/detalhes/${id}`\r\n      },\r\n      {\r\n        descricao: 'Proposta para análise de crédito'\r\n      }\r\n    ];\r\n  }\r\n\r\n  setFormBuilder(data: any) {\r\n    this.form = this.formBuilder.group({\r\n      razaoSocial: [\r\n        { value: data['razaoSocial'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      dataSolicitacao: [new Date(), [Validators.required]],\r\n      codCliente: [\r\n        { value: data['codCliente'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      codClienteDBA: [{ value: data['codClienteDBA'], disabled: true }],\r\n      setorAtividade: [\r\n        { value: data['setorAtividade'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      dataUltimaVisita: [null],\r\n      instalacoes: [null],\r\n      numFuncionarios: [null],\r\n      limiteCreditoAtual: [data['limiteCredito']],\r\n      limiteCreditoSolicitado: [null, [Validators.required]],\r\n      condicaoPagto: [null, [Validators.required]],\r\n      nomeVendedor: [\r\n        { value: data['nomeVendedor'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      telefoneVendedor: [\r\n        { value: data['telefoneVendedor'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      gestorVendas: [null, [Validators.required]],\r\n      nomeEscritorio: [\r\n        { value: data['nomeEscritorio'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      fornecedores: this.formBuilder.array([]),\r\n      clientes: this.formBuilder.array([]),\r\n      vendasConcentradas: [null],\r\n      bancos: this.formBuilder.array([]),\r\n      previsaoCompraTon: [null],\r\n      previsaoCompraValor: [null],\r\n      faturamentoMedio: [null],\r\n      parecerVendedor: [null, [Validators.required]]\r\n    });\r\n\r\n    this.setFormFornecedoresClientesBancos();\r\n  }\r\n\r\n  setFormFornecedoresClientesBancos() {\r\n    this.onAddFornecedor();\r\n    this.onAddBanco();\r\n  }\r\n\r\n  get fornecedores() {\r\n    return this.form.get('fornecedores') as FormArray;\r\n  }\r\n\r\n  get clientes() {\r\n    return this.form.get('clientes') as FormArray;\r\n  }\r\n\r\n  get bancos() {\r\n    return this.form.get('bancos') as FormArray;\r\n  }\r\n\r\n  onAddFornecedor() {\r\n    this.fornecedores.push(\r\n      this.formBuilder.group({\r\n        nome: [null, [Validators.required]],\r\n        telefone: [null]\r\n      })\r\n    );\r\n  }\r\n\r\n  onAddCliente() {\r\n    this.clientes.push(\r\n      this.formBuilder.group({\r\n        nome: [null]\r\n      })\r\n    );\r\n  }\r\n\r\n  onAddBanco() {\r\n    this.bancos.push(\r\n      this.formBuilder.group({\r\n        nome: [null, [Validators.required]],\r\n        agencia: [null, [Validators.required]],\r\n        contaCorrente: [null, [Validators.required]],\r\n        telefone: [null, [Validators.required]]\r\n      })\r\n    );\r\n  }\r\n\r\n  onDeleteFornecedor(index: number) {\r\n    if (this.fornecedores.length > 1) {\r\n      this.fornecedores.removeAt(index);\r\n    } else {\r\n      this.pnotifyService.notice('Informe ao menos um fornecedor.');\r\n    }\r\n  }\r\n\r\n  onDeleteCliente(index: number) {\r\n    this.clientes.removeAt(index);\r\n  }\r\n\r\n  onDeleteBanco(index: number) {\r\n    if (this.bancos.length > 1) {\r\n      this.bancos.removeAt(index);\r\n    } else {\r\n      this.pnotifyService.notice('Informe ao menos um banco.');\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onNestedFieldError(formGroup: string, index: number, field: string) {\r\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n    field = nestedForm.controls[index].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n\r\n    if (nestedForm.controls[index].get(field).validator) {\r\n      let validationResult = nestedForm.controls[index]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onInput() {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate() {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      this.loaderNavbar = true;\r\n      setTimeout(() => {\r\n        const formData = this.form.getRawValue();\r\n\r\n        let dataSolicitacao = `${(formData[\r\n          'dataSolicitacao'\r\n        ] as Date).getDate()}/${(formData[\r\n          'dataSolicitacao'\r\n        ] as Date).getMonth() + 1}/${(formData[\r\n          'dataSolicitacao'\r\n        ] as Date).getFullYear()}`;\r\n\r\n        let dataUltimaVisita: string;\r\n        if (formData['dataUltimaVisita'] != null) {\r\n          dataUltimaVisita = `${(formData[\r\n            'dataUltimaVisita'\r\n          ] as Date).getDate()}/${(formData[\r\n            'dataUltimaVisita'\r\n          ] as Date).getMonth() + 1}/${(formData[\r\n            'dataUltimaVisita'\r\n          ] as Date).getFullYear()}`;\r\n        }\r\n\r\n        this.tipoVisao = 'ficha';\r\n        this.dataFicha = {\r\n          razaoSocial: formData['razaoSocial'],\r\n          dataSolicitacao: dataSolicitacao,\r\n          codCliente: formData['codCliente'],\r\n          codClienteDBA: formData['codClienteDBA'],\r\n          setorAtividade: formData['setorAtividade'],\r\n          dataUltimaVisita: dataUltimaVisita,\r\n          instalacoes: formData['instalacoes'],\r\n          numFuncionarios: formData['numFuncionarios'],\r\n          limiteCreditoAtual: formData['limiteCreditoAtual'],\r\n          limiteCreditoSolicitado: formData['limiteCreditoSolicitado'],\r\n          condicaoPagto: formData['condicaoPagto'],\r\n          nomeVendedor: formData['nomeVendedor'],\r\n          telefoneVendedor: formData['telefoneVendedor'],\r\n          gestorVendas: formData['gestorVendas'],\r\n          nomeEscritorio: formData['nomeEscritorio'],\r\n          fornecedores: formData['fornecedores'],\r\n          clientes: formData['clientes'],\r\n          bancos: formData['bancos'],\r\n          vendasConcentradas: formData['vendasConcentradas'],\r\n          previsaoCompraTon: formData['previsaoCompraTon'],\r\n          previsaoCompraValor: formData['previsaoCompraValor'],\r\n          faturamentoMedio: formData['faturamentoMedio'],\r\n          parecerVendedor: formData['parecerVendedor']\r\n        };\r\n\r\n        this.formChanged = false;\r\n        this.loaderNavbar = false;\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.loaderNavbar = true;\r\n    setTimeout(() => {\r\n      this.tipoVisao = 'formulario';\r\n      this.loaderNavbar = false;\r\n    }, 1000);\r\n  }\r\n\r\n  onDownload() {\r\n    this.loaderNavbar = true;\r\n    this.pdfService.download(\r\n      'impressao-ficha-pac',\r\n      `${this.codCliente}_PropostaAnaliseCredito`\r\n    );\r\n\r\n    setTimeout(() => {\r\n      this.loaderNavbar = false;\r\n    }, 500);\r\n  }\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// ngx-filter-pipe\r\nimport { FilterPipe } from 'ngx-filter-pipe';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-resumo',\r\n  templateUrl: './resumo.component.html',\r\n  styleUrls: ['./resumo.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroResumoComponent\r\n  implements OnInit {\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  sinteticoPendenciasLoaded: boolean = false;\r\n\r\n  codCliente: number;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  sintetico: any = {\r\n    atrasoPagamento: 0,\r\n    tempoEntrega: 0,\r\n    totalAtraso: 0,\r\n    pagtoAntecipado: 0,\r\n    creditoSeguradora: 0\r\n  };\r\n\r\n  countoAtrasoPagamento: number;\r\n  countoTempoEntrega: number;\r\n  countoTotalAtraso: number;\r\n  countoPagtoAntecipado: number;\r\n  countoCreditoSeguradora: number;\r\n  countoTitulos: number;\r\n  countoNotasDebito: number;\r\n  countoNotasPromissorias: number;\r\n  countoChequesDevolvidos: number;\r\n  countoCorteDobra: number;\r\n  countoReservaBobinas: number;\r\n  countoLimiteCredito: number;\r\n  countoSaldo: number;\r\n\r\n  grupoEconomico: any = [];\r\n  grupoEconomicoLoaded: boolean = false;\r\n\r\n  showPendenciasDetalhes: boolean = false;\r\n\r\n  pendencias: any = {\r\n    titulos: 0,\r\n    notasDebito: 0,\r\n    notasPromissorias: 0,\r\n    chequesDevolvidos: 0,\r\n    corteDobra: 0,\r\n    reservaBobinas: 0,\r\n    limiteCredito: 0,\r\n    saldo: 0\r\n  };\r\n\r\n  pedidos: any = [];\r\n  pedidosPagination: any = [];\r\n  pedidosFiltered: any = [];\r\n  pedidosLoaded: boolean = false;\r\n\r\n  maxSize: number = 8;\r\n  itemsPerPage: number = 10;\r\n\r\n  visaoGrupoEconomico: boolean = false;\r\n  queryParams: any = { grupoEconomico: this.visaoGrupoEconomico };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService,\r\n    private modalService: BsModalService,\r\n    private filterPipe: FilterPipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(queryParams => {\r\n      this.activatedRoute.parent.params.subscribe(params => {\r\n        let grupoEconomico = false;\r\n\r\n        if (\r\n          queryParams['grupoEconomico'] &&\r\n          queryParams['grupoEconomico'] == 'true'\r\n        ) {\r\n          grupoEconomico = true;\r\n          this.visaoGrupoEconomico = true;\r\n          this.queryParams = {\r\n            grupoEconomico: this.visaoGrupoEconomico\r\n          };\r\n        }\r\n\r\n        this.codCliente = params['id'];\r\n        this.getResumoSintetico(this.codCliente, grupoEconomico);\r\n        this.getGrupoEconomico(this.codCliente);\r\n        this.getPedidos(this.codCliente, grupoEconomico);\r\n      });\r\n    });\r\n  }\r\n\r\n  onChangeGrupoEconomico() {\r\n    this.onLoadingGrupoEconomico();\r\n    this.queryParams = { grupoEconomico: this.visaoGrupoEconomico };\r\n\r\n    this.router.navigate(\r\n      [`/comercial/clientes/historico-financeiro/${this.codCliente}/resumo`],\r\n      {\r\n        queryParams: this.queryParams\r\n      }\r\n    );\r\n  }\r\n\r\n  onLoadingGrupoEconomico() {\r\n    this.visaoGrupoEconomico = !this.visaoGrupoEconomico;\r\n    this.sinteticoPendenciasLoaded = false;\r\n    this.pedidosLoaded = false;\r\n  }\r\n\r\n  getResumoSintetico(id: number, grupoEconomico: boolean) {\r\n    this.historicoFinanceiroService\r\n      .getResumoSintetico(id, grupoEconomico)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.sintetico = response['result']['sintetico'];\r\n          this.pendencias = response['result']['pendencias'];\r\n        }\r\n        this.sinteticoPendenciasLoaded = true;\r\n      });\r\n  }\r\n\r\n  getGrupoEconomico(id: number) {\r\n    this.historicoFinanceiroService\r\n      .getGrupoEconomico(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.grupoEconomico = response['result'];\r\n        }\r\n        this.grupoEconomicoLoaded = true;\r\n      });\r\n  }\r\n\r\n  getPedidos(id: number, grupoEconomico: boolean) {\r\n    this.historicoFinanceiroService\r\n      .getResumoPedidos(id, grupoEconomico)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.pedidos = response['result'];\r\n          this.pedidosFiltered = response['result'];\r\n          this.pedidosPagination = this.pedidosFiltered.slice(\r\n            0,\r\n            this.itemsPerPage\r\n          );\r\n        }\r\n        this.pedidosLoaded = true;\r\n      });\r\n  }\r\n\r\n  onGrupoEconomico(modalRef: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(modalRef);\r\n  }\r\n\r\n  onCloseModalGrupoEconomico() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  handleCounter(valor: number) {\r\n    return valor.toFixed(0);\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'EM ABERTO') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'QUITADA') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'VENCIDA') {\r\n      borderClass = 'border-warning';\r\n    } else if (status == 'PROTESTO') {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.pedidosPagination = this.pedidosFiltered.slice(startItem, endItem);\r\n  }\r\n\r\n  onFilter(value: string) {\r\n    if (value) {\r\n      this.pedidosFiltered = this.filterPipe.transform(this.pedidos, {\r\n        numDuplicata: value\r\n      });\r\n    } else {\r\n      this.pedidosFiltered = this.pedidos;\r\n    }\r\n\r\n    this.pedidosPagination = this.pedidosFiltered.slice(0, this.itemsPerPage);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3VsdGltb3MtcHJlY29zL3VsdGltb3MtcHJlY29zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialClientesDetalheService } from './detalhes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesDetalhesResolverGuard implements Resolve<any> {\r\n  constructor(private detalhesService: ComercialClientesDetalheService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['id']) {\r\n      return this.detalhesService.getDetalhes(route.params['id']);\r\n    }\r\n\r\n    return of({\r\n      responseCode: 204\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { ComercialClientesResolverGuard } from '../clientes-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialClientesHistoricoFinanceiroComponent } from './historico-financeiro.component';\r\nimport { ComercialClientesHistoricoFinanceiroResumoComponent } from './resumo/resumo.component';\r\nimport { ComercialClientesHistoricoFinanceiroDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent } from './materiais-duplicata/materiais-duplicata.component';\r\nimport { ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent } from './acumulos-mensais/acumulos-mensais.component';\r\nimport { ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent } from './notas-promissorias/notas-promissorias.component';\r\nimport { ComercialClientesHistoricoFinanceiroDebitosComponent } from './debitos/debitos.component';\r\nimport { ComercialClientesHistoricoFinanceiroCorteDobraComponent } from './corte-dobra/corte-dobra.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: ':id',\r\n    component: ComercialClientesHistoricoFinanceiroComponent,\r\n    resolve: {\r\n      response: ComercialClientesResolverGuard\r\n    },\r\n    children: [\r\n      { path: '', redirectTo: 'resumo', pathMatch: 'full' },\r\n      {\r\n        path: 'resumo',\r\n        component: ComercialClientesHistoricoFinanceiroResumoComponent\r\n      },\r\n      {\r\n        path: 'detalhes',\r\n        component: ComercialClientesHistoricoFinanceiroDetalhesComponent\r\n      },\r\n      {\r\n        path: 'materiais-duplicata',\r\n        component: ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent\r\n      },\r\n      {\r\n        path: 'acumulos-mensais',\r\n        component: ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent\r\n      },\r\n      {\r\n        path: 'notas-promissorias',\r\n        component: ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent\r\n      },\r\n      {\r\n        path: 'debitos',\r\n        component: ComercialClientesHistoricoFinanceiroDebitosComponent\r\n      },\r\n      {\r\n        path: 'corte-dobra',\r\n        component: ComercialClientesHistoricoFinanceiroCorteDobraComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/comercial/home',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialHistoricoFinanceiroRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2NvcnRlLWRvYnJhL2NvcnRlLWRvYnJhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!acumulosMensaisLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de acumulaciones mensuales...</strong>\\r\\n    </div>\\r\\n    <tabset *ngIf=\\\"acumulosMensaisLoaded\\\">\\r\\n      <tab heading=\\\"Principal\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <custom-table *ngIf=\\\"acumulosMensais.principal.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Período</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor acumulado</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Média atraso</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let acumulo of acumulosMensais.principal\\\">\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.periodo }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.atraso }} dias</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n          <empty-result\\r\\n            message=\\\"Nenhuma informação encontrada\\\"\\r\\n            *ngIf=\\\"acumulosMensais.principal.length == 0\\\">\\r\\n          </empty-result>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Maior fatura\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <custom-table *ngIf=\\\"acumulosMensais.maiorFatura.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Pedido</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let acumulo of acumulosMensais.maiorFatura\\\">\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.numPedido }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.data }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.empresa }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n          <empty-result\\r\\n            message=\\\"Nenhuma informação encontrada\\\"\\r\\n            *ngIf=\\\"acumulosMensais.maiorFatura.length == 0\\\">\\r\\n          </empty-result>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Services\r\nimport { FormRulesService } from 'src/app/shared/services/core/form-rules.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesCadastroDadosFaturamentoRulesResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(private formRulesService: FormRulesService) {}\r\n\r\n  resolve(): Observable<any> {\r\n    return this.formRulesService.getRules(1);\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!duplicataLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de duplicados...</strong>\\r\\n    </div>\\r\\n    <tabset *ngIf=\\\"duplicataLoaded\\\">\\r\\n      <tab heading=\\\"Principal\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Línea:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"principal.materiais.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Descripción</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Sit. Tributária</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Qtde.</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor unidades</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor total</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Alíquota ICMS</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let material of principal.materiais\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ material.idMaterial }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.nomeMaterial }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.situacaoTributaria }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.quantidade }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.valorUnitario | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.valorTotalItem | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-center\\\" *ngIf=\\\"material.aliquotaIcms > 0\\\">{{ material.aliquotaIcms | number:'1.2-2' }}%</td>\\r\\n                    <td class=\\\"text-center\\\" *ngIf=\\\"material.aliquotaIcms == 0\\\">0,00%</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"Nenhuma informação encontrada\\\"\\r\\n                *ngIf=\\\"principal.materiais.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Condiciones de pago</div>\\r\\n                <p class=\\\"mb-0\\\"><strong></strong>{{ principal.materiais[0]['condicaoPagamento'] }}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Total productos</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Cantidad:</strong> {{ principal.total.peso | number:'1.3-3' }} TON</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Valor:</strong> {{ principal.total.valor | currency:'BRL':'symbol':'1.2-2' }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Lugar de entrega</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p><strong>Referencia:</strong> {{ principal.entrega.referencia }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Endereço:</strong> {{ principal.entrega.logradouro }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Ciudad:</strong> {{ principal.entrega.cidade }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Bairro:</strong> {{ principal.entrega.bairro }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>UF:</strong> {{ principal.entrega.uf }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Histórico de cobranças\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"historicoCobrancas.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Num. Lanzamiento</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Situación</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Fecha</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Usuário</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Comentário</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let cobranca of historicoCobrancas\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.numLancamento }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.situacao }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.data }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.nome }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.comentario }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"Nenhuma informação encontrada\\\"\\r\\n                *ngIf=\\\"historicoCobrancas.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Colección de la empresa</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Código:</strong> Nenhuma informação</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Descripcion:</strong> Nenhuma informação</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Vencimento original</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <p class=\\\"mb-0\\\">No hay información</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Ocorrências da duplicata\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"ocorrenciasDuplicatas.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicata</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Operação</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Descrição</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let ocorrencia of ocorrenciasDuplicatas\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.numDuplicata }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.operacao }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.data }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.descricao }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"No hay información encontrada\\\"\\r\\n                *ngIf=\\\"ocorrenciasDuplicatas.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Ocorrências comerciais\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicata</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"ocorrenciasComerciais.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Número</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Hora</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Usuário</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Operação</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Situação</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let ocorrencia of ocorrenciasComerciais\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.numero }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.data }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.hora }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.nome }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.operacao }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.situacao }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"No hay información encontrada\\\"\\r\\n                *ngIf=\\\"ocorrenciasComerciais.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Busqueda de clientes\\\">\\r\\n  <button type=\\\"button\\\" [routerLink]=\\\"['../pre-cadastro']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">Filtrar</button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row justify-content-center mb-2\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <ul class=\\\"list-unstyled mb-0 d-flex justify-content-around\\\">\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Ativo')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Activos</h6>\\r\\n          <div class=\\\"text-success\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"ativos\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoAtivos = $event\\\">\\r\\n                {{ handleCounter(countoAtivos) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Inativo')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Inactivos</h6>\\r\\n          <div class=\\\"text-danger\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"inativos\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoInativos = $event\\\">\\r\\n                {{ handleCounter(countoInativos) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Potenci')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Potencial</h6>\\r\\n          <div class=\\\"text-primary\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"potencial\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoPotencial = $event\\\">\\r\\n                {{ handleCounter(countoPotencial) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Arquivo')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Archivados</h6>\\r\\n          <div class=\\\"text-secondary\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"arquivados\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoArquivados = $event\\\">\\r\\n                {{ handleCounter(countoArquivados) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <advanced-filter>\\r\\n    <form [formGroup]=\\\"formFilter\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"buscarPor\\\">Buscar por</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"buscarPor\\\" formControlName=\\\"buscarPor\\\">\\r\\n            <option value=\\\"1\\\">Código, nombre o razon social</option>\\r\\n            <option value=\\\"2\\\">C.I. o NIT</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"pesquisa\\\">Termino de busqueda</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pesquisa\\\" (keydown.enter)=\\\"onFilter()\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"situacao\\\">Situacion</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"situacao\\\" formControlName=\\\"situacao\\\">\\r\\n            <option value=\\\"Ativo\\\">Activos</option>\\r\\n            <option value=\\\"Inativo\\\">Inactivos</option>\\r\\n            <option value=\\\"Potenci\\\">Potenciales</option>\\r\\n            <option value=\\\"Arquivo\\\">Archivados</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"setorAtividade\\\">Sector empresarial</label>\\r\\n          <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"setorAtividades\\\" [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"setorAtividade\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\" formControlName=\\\"setorAtividade\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n          <label for=\\\"tipoPessoa\\\">Tipo de persona</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"tipoPessoa\\\" formControlName=\\\"tipoPessoa\\\">\\r\\n            <option value=\\\"F\\\">Persona física</option>\\r\\n            <option value=\\\"J\\\">Persona jurídica</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n          <label for=\\\"grupoEconomico\\\">Esta en grupo economico</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"grupoEconomico\\\"\\r\\n            formControlName=\\\"grupoEconomico\\\">\\r\\n            <option value=\\\"S\\\">Si</option>\\r\\n            <option value=\\\"N\\\">No</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n          <label for=\\\"segurado\\\">Asegurado</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"segurado\\\"\\r\\n            formControlName=\\\"segurado\\\">\\r\\n            <option value=\\\"S\\\">Si</option>\\r\\n            <option value=\\\"N\\\">No</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\r\\n          <label for=\\\"carteira\\\">Cartera</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"carteira\\\"\\r\\n            formControlName=\\\"carteira\\\">\\r\\n            <option value=\\\"S\\\" selected>Mi cartera</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        <div class=\\\"form-group col-lg-1 mb-lg-0\\\">\\r\\n          <label for=\\\"registros\\\">Registros</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"registros\\\" formControlName=\\\"registros\\\">\\r\\n            <option>10</option>\\r\\n            <option>25</option>\\r\\n            <option>50</option>\\r\\n            <option>100</option>\\r\\n            <option>200</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"\\r\\n      dataLoaded && searchSubmitted && clientes.length == 0 && buscandoPor != 2\\r\\n    \\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <empty-result message=\\\"No se encontraron clientes para esta búsqueda.\\\" class=\\\"py-4\\\"></empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"\\r\\n      dataLoaded && searchSubmitted && clientes.length == 0 && buscandoPor == 2\\r\\n    \\\">\\r\\n    <div class=\\\"col-7 d-flex justify-content-end w-100 pr-0\\\">\\r\\n      <empty-result message=\\\"No se encontraron clientes para esta búsqueda.\\\" class=\\\"py-4\\\"></empty-result>\\r\\n    </div>\\r\\n    <div class=\\\"col-5 d-flex w-100 pl-1\\\">\\r\\n      <a [routerLink]=\\\"['../pre-cadastro']\\\" [queryParams]=\\\"onPreCadastroCpfCnpj()\\\" class=\\\"my-auto\\\">\\r\\n        <strong>Pulse aquí para registrarse..</strong>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mt-4\\\" *ngIf=\\\"dataLoaded && clientes.length > 0\\\">\\r\\n    <div [ngClass]=\\\"{ 'col-12': !showDetailPanel, 'col-7 pr-0': showDetailPanel }\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\" (click)=\\\"setOrderBy('codigo_cliente')\\\">\\r\\n              <thead-sorter value=\\\"Código Cliente\\\" [active]=\\\"orderBy == 'codigo_cliente'\\\"\\r\\n                [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\" (click)=\\\"setOrderBy('cpf')\\\">\\r\\n              <thead-sorter value=\\\"CI/NIT\\\" [active]=\\\"orderBy == 'cpf'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"setOrderBy('nomeFantasia')\\\">\\r\\n              <thead-sorter value=\\\"Nombre y apelllido\\\" [active]=\\\"orderBy == 'nomeFantasia'\\\"\\r\\n                [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"setOrderBy('razaoSocial')\\\" *ngIf=\\\"!showDetailPanel\\\">\\r\\n              <thead-sorter value=\\\"Razon Social\\\" [active]=\\\"orderBy == 'razaoSocial'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let cliente of clientes\\\" [class.table-active]=\\\"cliente.codigo_cliente == clienteSelecionado\\\">\\r\\n            <td class=\\\"text-center hover\\\" [ngClass]=\\\"classStatusBorder(cliente.situacao)\\\"\\r\\n              (click)=\\\"viewRegister(cliente)\\\">\\r\\n              <i class=\\\"text-black-50 far fa-check-square mr-3\\\" *ngIf=\\\"cliente.segurado == 0\\\"\\r\\n                tooltip=\\\"Cliente no asegurado\\\" placement=\\\"right\\\"></i>\\r\\n              <i class=\\\"text-warning fas fa-check-square mr-3\\\" *ngIf=\\\"cliente.segurado > 0\\\" tooltip=\\\"Cliente asegurado\\\"\\r\\n                placement=\\\"right\\\"></i>\\r\\n              <i class=\\\"text-black-50 far fa-folder-open\\\" *ngIf=\\\"cliente.grupoEconomico == 0\\\"\\r\\n                tooltip=\\\"No hace parte de grupo economico\\\" placement=\\\"right\\\"></i>\\r\\n              <i class=\\\"text-warning fas fa-folder-open\\\" *ngIf=\\\"cliente.grupoEconomico > 0\\\"\\r\\n                tooltip=\\\"Pertenece a un grupo economico\\\" placement=\\\"right\\\"></i>\\r\\n            </td>\\r\\n            <td class=\\\"text-center hover\\\" (click)=\\\"viewRegister(cliente)\\\">\\r\\n              {{ cliente.codigo_cliente }}\\r\\n            </td>\\r\\n            <td class=\\\"text-center hover\\\" (click)=\\\"viewRegister(cpf)\\\">\\r\\n              {{ cliente.cpf }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"viewRegister(cliente)\\\">\\r\\n              {{ cliente.nomeFantasia | uppercase }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"viewRegister(cliente)\\\" *ngIf=\\\"!showDetailPanel\\\">\\r\\n              {{ cliente.razaoSocial | uppercase }}\\r\\n            </td>\\r\\n            <td>\\r\\n              <span tooltip=\\\"Datos registrados\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"viewDetails(cliente)\\\">\\r\\n                  <i class=\\\"fas fa-user\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"clientes[0]['total'] > itemsPerPage\\\">\\r\\n        <pagination [maxSize]=\\\"maxSize\\\" [(totalItems)]=\\\"totalItems\\\" (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\" [(ngModel)]=\\\"currentPage\\\" previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <div class=\\\"sticky-top\\\">\\r\\n        <detail-panel>\\r\\n          <tabset>\\r\\n            <tab heading=\\\"Datos registrados\\\">\\r\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n                <div *ngIf=\\\"dadosCadastraisLoaded && !dadosCadastraisEmpty\\\">\\r\\n                  <div class=\\\"container\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Codigo Cliente CRM360</label>\\r\\n                        <div *ngIf=\\\"!editingMode\\\">\\r\\n                          {{ dadosCadastrais.id_cliente == null ? 'NO INFORMADO' : dadosCadastrais.id_cliente }}\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"editingMode\\\">\\r\\n                          <input [(ngModel)]=\\\"editedFields.id_cliente\\\" type=\\\"hidden\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>C.I.</label>\\r\\n                        <div>\\r\\n                          <div>\\r\\n                            <div *ngIf=\\\"!editingMode\\\">{{ dadosCadastrais.cnpj_cpf == null ? 'NO INFORMADO' :\\r\\n                              dadosCadastrais.cnpj_cpf }}</div>\\r\\n                            <div *ngIf=\\\"editingMode\\\"><input [(ngModel)]=\\\"editedFields.carnet\\\"></div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Nombre</label>\\r\\n                        <div>\\r\\n                          <div>\\r\\n                            <div *ngIf=\\\"!editingMode\\\">{{ dadosCadastrais.nombres == null ? 'NO INFORMADO' :\\r\\n                              dadosCadastrais.nombres }}</div>\\r\\n                            <div *ngIf=\\\"editingMode\\\"><input [(ngModel)]=\\\"editedFields.nombres\\\"></div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col\\\">\\r\\n                        <label>Razon social</label>\\r\\n                        <div>\\r\\n                          <div>\\r\\n                            <div *ngIf=\\\"!editingMode\\\">{{ dadosCadastrais.razaoSocial == null ? 'NO INFORMADO' :\\r\\n                              dadosCadastrais.razaoSocial }}</div>\\r\\n                            <div *ngIf=\\\"editingMode\\\"><input [(ngModel)]=\\\"editedFields.razonSocial\\\"></div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"form-group col\\\">\\r\\n                        <label>Tipo Persona</label>\\r\\n                        <div>\\r\\n                          <div *ngIf=\\\"!editingMode\\\">{{ getTipoPersonaLabel(dadosCadastrais.tipo_pessoa) }}</div>\\r\\n                          <div *ngIf=\\\"editingMode\\\">\\r\\n                            <select [(ngModel)]=\\\"editedFields.tipo_pessoa\\\">\\r\\n                              <option *ngFor=\\\"let option of tipoPersonaOptions\\\" [value]=\\\"option.value\\\">{{ option.label\\r\\n                                }}</option>\\r\\n                            </select>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>NIT.</label>\\r\\n                        <div>\\r\\n                          <div *ngIf=\\\"!editingMode\\\">{{ dadosCadastrais.nit == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.nit }}</div>\\r\\n                          <div\\r\\n                            *ngIf=\\\"editingMode && (dadosCadastrais.tipo_pessoa === 'P' || dadosCadastrais.tipo_pessoa === 'G' || dadosCadastrais.tipo_pessoa === 'E')\\\">\\r\\n                            <input [(ngModel)]=\\\"editedFields.nit\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"form-group col\\\">\\r\\n                        <label>Celular</label>\\r\\n                        <div>\\r\\n                          <div *ngIf=\\\"!editingMode\\\">{{ dadosCadastrais.celular == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.celular }}</div>\\r\\n                          <div *ngIf=\\\"editingMode\\\"><input [(ngModel)]=\\\"editedFields.celular\\\"></div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col\\\">\\r\\n                        <label>Telefono</label>\\r\\n                        <div>\\r\\n                          <div *ngIf=\\\"!editingMode\\\">{{ dadosCadastrais.telefono == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.telefono }}</div>\\r\\n                          <div *ngIf=\\\"editingMode\\\"><input [(ngModel)]=\\\"editedFields.telefono\\\"></div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Sucursal</label>\\r\\n                        <div>\\r\\n                          <div *ngIf=\\\"!editingMode\\\">{{ dadosCadastrais.sucursal == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.sucursal }}</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Direccion</label>\\r\\n                        <div>\\r\\n                          <div *ngIf=\\\"!editingMode\\\">{{ dadosCadastrais.direccion == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.direccion}}</div>\\r\\n                            <div *ngIf=\\\"editingMode\\\"><input [(ngModel)]=\\\"editedFields.direccion\\\"></div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Ciudad</label>\\r\\n                        <div>\\r\\n                          <div *ngIf=\\\"!editingMode\\\">{{ dadosCadastrais.ciudad == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.ciudad }}</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Vendedor</label>\\r\\n                        <div>\\r\\n                          <ng-container *ngIf=\\\"!editingMode; else editingVendedor\\\">\\r\\n                            {{ dadosCadastrais.NombreVendedor || 'NO INFORMADO' }}\\r\\n                          </ng-container>\\r\\n                          <ng-template #editingVendedor>\\r\\n                            <select [(ngModel)]=\\\"editedFields.id_vendedor\\\">\\r\\n                              <option [value]=\\\"originalVendedorId\\\">{{ dadosCadastrais.NombreVendedor }}</option>\\r\\n                              <option *ngFor=\\\"let vendedor of vendedoresList\\\" [value]=\\\"vendedor.id\\\">{{ vendedor.nome }}</option>\\r\\n                            </select>\\r\\n                          </ng-template>                                                    \\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"mb-3\\\" *ngIf=\\\"dadosCadastraisLoaded && dadosCadastraisEmpty\\\">\\r\\n                    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n                    <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!dadosCadastraisLoaded\\\">\\r\\n                      <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"editingMode\\\">\\r\\n                  <div class=\\\"text-right mt-3\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancelEditing()\\\">Cancelar</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Guardar Cambios</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!editingMode\\\">\\r\\n                  <div class=\\\"text-right mt-3\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"enableEditing()\\\">Editar Cliente</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </tab>\\r\\n            <tab heading=\\\"Contactos\\\">\\r\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n                <div *ngIf=\\\"contatosLoaded && !contatosEmpty\\\">\\r\\n                  <div class=\\\"form-row\\\" *ngFor=\\\"let contato of contatos\\\">\\r\\n                    <!-- <div class=\\\"form-group col\\\" [ngClass]=\\\"{'hidden': contato.editing}\\\">\\r\\n                      <label>ID Contacto</label>\\r\\n                      <div>\\r\\n                        {{ contato.id_cont }}\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n                    <div class=\\\"form-group col\\\">\\r\\n                      <label>Contacto</label>\\r\\n                      <div>\\r\\n                        <div *ngIf=\\\"!editingContacto\\\">{{ contato.contacto }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"><input [(ngModel)]=\\\"contato.editedContacto\\\"></div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col\\\">\\r\\n                      <label>Tipo de Contacto</label>\\r\\n                      <div>\\r\\n                        <div *ngIf=\\\"!editingContacto\\\">{{ contato.ds_tipo_cont }} {{ contato.ds_cont_meio }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\">\\r\\n                          <input [(ngModel)]=\\\"contato.editedds_cont_meio\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col\\\">\\r\\n                      <label>Dirección</label>\\r\\n                      <div>\\r\\n                        <div *ngIf=\\\"!editingContacto\\\">{{ contato.direccion }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"><input [(ngModel)]=\\\"contato.editedDireccion\\\"></div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col\\\">\\r\\n                      <label>Nombre</label>\\r\\n                      <div>\\r\\n                        <ng-container *ngIf=\\\"!editingContacto\\\">\\r\\n                          <div *ngIf=\\\"contato.ds_cont && contato.ds_cont.length > 1\\\" class=\\\"mr-1\\\">{{ contato.ds_cont }}\\r\\n                          </div>\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"contato.editing\\\">\\r\\n                          <input [(ngModel)]=\\\"contato.editedDsCont\\\">\\r\\n                        </ng-container>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"editarContacto(contato)\\\"\\r\\n                      *ngIf=\\\"!contato.editing\\\">Editar Contacto</button>\\r\\n                    <div *ngIf=\\\"contato.editing\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"\\r\\n                        (click)=\\\"cancelEditingContact(contato)\\\">Cancelar</button>\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveEditedContact(contato)\\\">Guardar Cambios</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openAgregarContactoModal()\\\">\\r\\n                Abrir Modal\\r\\n            </button> -->\\r\\n                            \\r\\n            </tab>  \\r\\n            <!-- <ng-template #modalDetalhes>\\r\\n              <div class=\\\"modal-header\\\">\\r\\n                  <h4 class=\\\"modal-title pull-left\\\">Agregar Contacto</h4>\\r\\n                  <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal()\\\">\\r\\n                          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                      </button>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"modal-body\\\">\\r\\n\\r\\n                  <form [formGroup]=\\\"agregarContactoForm\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                          <label>Contacto</label>\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contacto\\\">\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"text-center\\\">\\r\\n                          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Cancelar</button>\\r\\n                          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"guardarContacto()\\\">Guardar Contacto</button>\\r\\n                      </div>\\r\\n                  </form>\\r\\n              </div>\\r\\n          </ng-template> -->\\r\\n            \\r\\n            \\r\\n\\r\\n          </tabset>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\";","import { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from '../cadastro/dados-faturamento/formulario/formulario.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialVendedoresService } from 'src/app/modules/comercial/services/vendedores.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialClientesListaComponent implements OnInit, OnDestroy {\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home',\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  setorAtividades: any = [\r\n    {\r\n      id: 'T',\r\n      descricao: 'TODOS',\r\n    },\r\n  ];\r\n\r\n  dataLoaded = false;\r\n  dadosCadastraisLoaded = false;\r\n  dadosCadastraisEmpty = false;\r\n  contatosLoaded = false;\r\n  contatosEmpty = false;\r\n  searchSubmitted = false;\r\n  showAdvancedFilter = true;\r\n\r\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  matricula = this.currentUser['info']['matricula'];\r\n\r\n  ativos = 0;\r\n  inativos = 0;\r\n  potencial = 0;\r\n  arquivados = 0;\r\n\r\n  countoAtivos: number;\r\n  countoInativos: number;\r\n  countoPotencial: number;\r\n  countoArquivados: number;\r\n\r\n  formFilter: FormGroup;\r\n  buscandoPor: number;\r\n  pesquisa: string;\r\n  orderBy = 'codCliente';\r\n  orderType = 'desc';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 50;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  clientes: any = [];\r\n  clientesPagination: any = [];\r\n\r\n  clienteSelecionado: number;\r\n  dadosCadastrais: any = {};\r\n  contato: any = [];\r\n  contatos: any = [];\r\n  editingMode: boolean = false;\r\n  editedFields: any = {};\r\n  vendedoresList: any[] = [];\r\n  editingContacto: boolean = false;\r\n  originalVendedorId: number;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private clientesService: ComercialClientesService,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private dadosFaturamentoService: ComercialClientesCadastroDadosFaturamentoFormularioService,\r\n    private titleService: TitleService,\r\n    private detailPanelService: DetailPanelService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private modalService: BsModalService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.getFormFilters();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Busqueda de clientes');\r\n    this.onDetailPanelEmitter();\r\n    this.vendedoresService.getVendedores().subscribe(\r\n      (response: any) => {\r\n        this.vendedoresList = response.result;\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener la lista de vendedores:', error);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n\r\n        if (this.showDetailPanel === false) {\r\n          this.onCloseDetailPanel();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  getFormFilters(): void {\r\n    this.dadosFaturamentoService\r\n      .getSetorAtividades()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.setorAtividades.unshift({\r\n            id: 'T',\r\n            descricao: 'TODOS',\r\n          });\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.setorAtividades = response['result'];\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue = this.checkRouterParams();\r\n\r\n    this.formFilter = this.formBuilder.group({\r\n      pesquisa: [formValue['pesquisa']],\r\n      buscarPor: [formValue['buscarPor'], Validators.required],\r\n      situacao: [formValue['situacao'], Validators.required],\r\n      setorAtividade: [formValue['setorAtividade'], Validators.required],\r\n      tipoPessoa: [formValue['tipoPessoa'], Validators.required],\r\n      grupoEconomico: [formValue['grupoEconomico'], Validators.required],\r\n      segurado: [formValue['segurado'], Validators.required],\r\n      carteira: [formValue['carteira'], Validators.required],\r\n      pagina: [formValue['pagina']],\r\n      registros: [formValue['registros'], Validators.required],\r\n      id_group_econ: [formValue['grupoEconomico'], Validators.required], // Se Agrega este campo\r\n    });\r\n  }\r\n  searchInputValue: string;\r\n\r\n  checkRouterParams(): Object {\r\n    var aux_cartera;\r\n    if (this.matricula == 1) {\r\n      aux_cartera = 'T'\r\n    } else {\r\n      aux_cartera = 'S'\r\n    }\r\n    let formValue = {\r\n      pesquisa: this.searchInputValue, // aquí se actualizaría el valor de pesquisa\r\n      buscarPor: 1,\r\n      situacao: 'T',\r\n      setorAtividade: 'T',\r\n      tipoPessoa: 'T',\r\n      grupoEconomico: 'T',\r\n      segurado: 'T',\r\n      carteira: aux_cartera,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.setSubmittedSearch();\r\n          this.search(params);\r\n\r\n          if (params['registros']) {\r\n            this.itemsPerPage = params['registros'];\r\n          }\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          this.listStatus();\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n  // openAgregarContactoModal() {\r\n  //   console.log(\"openAgregarContactoModal() se ha ejecutado.\");\r\n  //   // Resto del código para abrir el modal\r\n  //   this.modalRef = this.modalService.show(this.modalDetalhes, {\r\n  //     class: 'modal-x1',\r\n  //   });\r\n  // }\r\n\r\n\r\n  // closeModal() {\r\n  //   // Cierra el modal\r\n  //   this.modalRef.hide();\r\n  // }\r\n  // guardarContacto() {\r\n  //   if (this.agregarContactoForm.valid) {\r\n  //     const nuevoContacto = this.agregarContactoForm.value;\r\n  //     // Realiza aquí la lógica para guardar el nuevo contacto en el backend\r\n  //     // Luego, cierra el modal\r\n  //     this.closeModal();\r\n  //   } else {\r\n  //     // Marcar los campos inválidos en el formulario\r\n  //     this.agregarContactoForm.markAllAsTouched();\r\n  //   }\r\n  // }\r\n  editarContacto(contato: any) {\r\n    contato.editedIdCont = contato.id_cont;\r\n    contato.editedContacto = contato.contacto;\r\n    contato.editedds_cont_meio = contato.ds_cont_meio;\r\n    contato.editedDireccion = contato.direccion;\r\n    contato.editedDsCont = contato.ds_cont;\r\n    contato.originalDsTipoCont = contato.ds_tipo_cont;\r\n    contato.editing = true; // Indicar que este contacto está en modo de edición\r\n    this.editingContacto = true;\r\n  }\r\n\r\n  cancelEditingContact(contato: any) {\r\n    contato.editing = false; // Salir del modo de edición\r\n    this.editingContacto = false;\r\n  }\r\n\r\n  saveEditedContact(contato: any) {\r\n    const codigoCliente = contato.id_cliente;\r\n\r\n    const editedData = {\r\n      id_cont: contato.editedIdCont !== undefined ? contato.editedIdCont : contato.id_cont,\r\n      contacto: contato.editedContacto !== undefined ? contato.editedContacto : contato.contacto,\r\n      ds_tipo_cont: contato.originalDsTipoCont,\r\n      direccion: contato.editedDireccion !== undefined ? contato.editedDireccion : contato.direccion,\r\n      ds_cont: contato.editedDsCont !== undefined ? contato.editedDsCont : contato.ds_cont,\r\n    };\r\n\r\n    const tipo_medio = contato.originalDsTipoCont === 'TELEFONO' ? 5 : 2;\r\n\r\n    if (contato.originalDsTipoCont === 'TELEFONO') {\r\n      editedData['telefono_contacto'] = contato.editedds_cont_meio !== undefined ? contato.editedds_cont_meio : contato.ds_cont_meio;\r\n    } else {\r\n      editedData['celular_contacto'] = contato.editedds_cont_meio !== undefined ? contato.editedds_cont_meio : contato.ds_cont_meio;\r\n    }\r\n\r\n    editedData['tipo_medio'] = tipo_medio;\r\n    editedData['id_cont_meio'] = contato.id_cont_meio;\r\n    editedData['id_cont'] = contato.id_cont;\r\n\r\n    this.clientesService.sapUpdateContacto(codigoCliente, editedData).subscribe(\r\n      (response) => {\r\n        console.log('Cambios en el contacto guardados exitosamente:', response);\r\n        contato.editing = false; // Salir del modo de edición\r\n        this.editingContacto = false;\r\n        // Actualizar los valores del contacto en el objeto local\r\n        contato.contacto = editedData.contacto;\r\n        contato.ds_tipo_cont = editedData.ds_tipo_cont;\r\n        contato.ds_cont_meio = editedData['telefono_contacto'] || editedData['celular_contacto'];\r\n        contato.direccion = editedData.direccion;\r\n        contato.ds_cont = editedData.ds_cont;\r\n\r\n        this.clientesService.getDetalhes(codigoCliente);\r\n      },\r\n      (error) => {\r\n        console.error('Error al guardar cambios en el contacto:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  mapTipoPessoaToTipoPersona(tipoPessoa: string): string {\r\n    const map = {\r\n      'S': 'Sociedades',\r\n      'P': 'Privado',\r\n      'G': 'Gobierno',\r\n      'E': 'Empleado'\r\n      // Agrega más mapeos si es necesario...\r\n    };\r\n\r\n    return map[tipoPessoa] || '';\r\n  }\r\n  tipoPersonaOptions = [\r\n    { label: 'Sociedades', value: 'S' },\r\n    { label: 'Privado', value: 'P' },\r\n    { label: 'Gobierno', value: 'G' },\r\n    { label: 'Empleado', value: 'E' }\r\n  ];\r\n\r\n  getTipoPersonaLabel(value: string): string {\r\n    const option = this.tipoPersonaOptions.find(opt => opt.value === value);\r\n    return option ? option.label : 'NO INFORMADO';\r\n  }\r\n  getVendedorNome(id_vendedor: number): string {\r\n    if (isNaN(id_vendedor)) {\r\n      return 'NO INFORMADO';\r\n    }\r\n\r\n    const vendedor = this.vendedoresList.find(v => v.id_vendedor === id_vendedor);\r\n    return vendedor ? vendedor.nome : 'NO INFORMADO';\r\n  }\r\n\r\n  enableEditing() {\r\n    this.editingMode = true;\r\n\r\n    // Guardar los valores actuales de los campos editables\r\n    this.editedFields.carnet = this.dadosCadastrais.cnpj_cpf;\r\n    this.editedFields.nombres = this.dadosCadastrais.nombres;\r\n    this.editedFields.razonSocial = this.dadosCadastrais.razaoSocial;\r\n    this.editedFields.ciudad = this.dadosCadastrais.ciudad;\r\n    this.editedFields.NombreVendedor = this.dadosCadastrais.NombreVendedor;\r\n    this.editedFields.sucursal = this.dadosCadastrais.sucursal;\r\n    this.editedFields.direccion = this.dadosCadastrais.direccion;\r\n    this.editedFields.id_cliente = this.dadosCadastrais.id_cliente;\r\n    this.editedFields.tipo_persona = this.dadosCadastrais.tipo_persona;\r\n    this.editedFields.tipo_pessoa = this.dadosCadastrais.tipo_pessoa;\r\n    this.editedFields.telefono = this.dadosCadastrais.telefono;\r\n    this.editedFields.celular = this.dadosCadastrais.celular;\r\n    this.editedFields.nit = this.dadosCadastrais.nit;\r\n    this.editedFields.id_vendedor = this.dadosCadastrais.id_vendedor;\r\n\r\n    // Repite para otros campos editables...\r\n\r\n  }\r\n  cancelEditing() {\r\n    // Reinicia los campos editados a sus valores originales\r\n    this.editedFields = {};\r\n    this.originalVendedorId = null;\r\n\r\n    // Desactiva el modo de edición\r\n    this.editingMode = false;\r\n  }\r\n  saveChanges() {\r\n    const codigoCliente = this.dadosCadastrais.id_cliente;\r\n    const editedData = {\r\n      ...this.editedFields, \r\n      ubicacion: [\r\n        {\r\n          direccion: this.editedFields.direccion\r\n        }\r\n      ]\r\n    };\r\n    this.editedFields.tipo_persona = this.mapTipoPessoaToTipoPersona(this.editedFields.tipo_pessoa);\r\n  \r\n  \r\n    // Llamar a la función para guardar los cambios\r\n    this.clientesService.sapUpdateClient(codigoCliente, editedData).subscribe(\r\n      (response) => {\r\n\r\n        // Limpiar los campos editados y desactivar el modo de edición\r\n        this.editedFields = {};\r\n        this.editingMode = false;\r\n        // Llamar a la función para obtener los detalles actualizados\r\n        this.clientesService.getDetalhes(codigoCliente);\r\n      },\r\n      (error) => {\r\n        console.error('Error al guardar cambios:', error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  listStatus(): void {\r\n    this.clientesService.getStatus().subscribe({\r\n      next: (response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.setStatus(response['result']);\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.pnotifyService.error();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  setStatus(status: any): void {\r\n    for (let i = 0; i < status.length; i++) {\r\n      if (status[i]['situacao'] == 'Ativo') {\r\n        this.ativos = status[i]['quantidade'];\r\n      } else if (status[i]['situacao'] == 'Inativo' || status[i]['situacao'] == null) {\r\n        this.inativos += status[i]['quantidade'];\r\n      } else if (status[i]['situacao'] == 'Potenci') {\r\n        this.potencial = status[i]['quantidade'];\r\n      } else if (status[i]['situacao'] == 'Arquivo') {\r\n        this.arquivados = status[i]['quantidade'];\r\n      }\r\n    }\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'desc') {\r\n        this.orderType = 'asc';\r\n      } else if (this.orderType == 'asc') {\r\n        this.orderType = 'desc';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'asc';\r\n    }\r\n    this.onFilter();\r\n  }\r\n\r\n  onAdvancedFilter(): void {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  filterByStatus(status: string): void {\r\n    this.formFilter.get('situacao').setValue(status);\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    let params = this.formFilter.value;\r\n    params['orderBy'] = this.orderBy;\r\n    params['orderType'] = this.orderType;\r\n\r\n    this.itemsPerPage = this.formFilter.value['registros'];\r\n    this.currentPage = 1;\r\n    this.setRouterParams(params);\r\n  }\r\n\r\n  setSubmittedSearch(): void {\r\n    this.searchSubmitted = true;\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n      queryParamsHandling: 'merge',\r\n    });\r\n    this.setSubmittedSearch();\r\n    this.search(params);\r\n  }\r\n\r\n  search(params: any): void {\r\n    if (this.searchSubmitted) {\r\n      this.loaderNavbar = true;\r\n      this.dataLoaded = false;\r\n      this.detailPanelService.hide();\r\n      this.clientes = [];\r\n      this.buscandoPor = params['buscarPor'];\r\n      this.pesquisa = params['pesquisa'];\r\n\r\n      this.clientesService\r\n        .getClientes(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderNavbar = false;\r\n            this.dataLoaded = true;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n            if (response['responseCode'] === 200) {\r\n              this.clientes = response['result']['analitico'].slice(\r\n                0,\r\n                this.itemsPerPage\r\n              );\r\n              this.totalItems = this.clientes[0]['total'];\r\n              this.setStatus(response['result']['sintetico']);\r\n            } else if (response['responseCode'] === 204) {\r\n              this.ativos = 0;\r\n              this.inativos = 0;\r\n              this.potencial = 0;\r\n              this.arquivados = 0;\r\n            }\r\n          },\r\n          (error: any) => {\r\n            this.pnotifyService.error();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  classStatusBorder(status: string): string {\r\n    let borderClass: string;\r\n\r\n    if (status == 'Ativo') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'Inativo') {\r\n      borderClass = 'border-danger';\r\n    } else if (status == 'Potenci') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'Arquivo') {\r\n      borderClass = 'border-secondary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  viewRegister(cliente: any): void {\r\n    if (cliente['podeAcessar'] == 1 || cliente['podeAcessar'] == 0) {\r\n      this.router.navigate(['../Detalles', cliente.codCliente], {\r\n        relativeTo: this.activatedRoute,\r\n\r\n      });\r\n    } else {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera.');\r\n    }\r\n  }\r\n\r\n  viewDetails(cliente: any): void {\r\n    this.detailPanelService.loadedFinished(false);\r\n\r\n    this.clienteSelecionado = cliente.codCliente;\r\n\r\n    this.dadosCadastraisLoaded = false;\r\n    this.dadosCadastraisEmpty = false;\r\n\r\n    this.contatosLoaded = false;\r\n    this.contatosEmpty = false;\r\n\r\n    this.clientesService\r\n      .getDetalhes(cliente.codCliente)\r\n      .pipe(\r\n        finalize(() => {\r\n\r\n          this.dadosCadastraisLoaded = true;\r\n        })\r\n      )\r\n      .subscribe((response: JsonResponse) => {\r\n        if (response.data) {\r\n          this.dadosCadastrais = response.data;\r\n        } else {\r\n          this.dadosCadastraisEmpty = true;\r\n        }\r\n      });\r\n\r\n    this.clientesService\r\n      .getContatosResumido(cliente.codCliente)\r\n      .subscribe((response: any) => {\r\n        this.contatosLoaded = true;\r\n\r\n        if (response['responseCode'] === 200) {\r\n          if (Object.keys(response['data']).length > 0) {\r\n            this.contatos = response['data'];\r\n          } else {\r\n            this.contatosEmpty = true;\r\n          }\r\n        } else {\r\n          this.contatosEmpty = true;\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  onCloseDetailPanel() {\r\n    this.resetClienteSelecionado();\r\n\r\n    setTimeout(() => {\r\n      this.dadosCadastraisLoaded = false;\r\n      this.dadosCadastraisEmpty = false;\r\n      this.dadosCadastrais = {};\r\n\r\n      this.contatosEmpty = false;\r\n      this.contatosLoaded = false;\r\n      this.contatos = [];\r\n    }, 500);\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent) {\r\n    if (this.formFilter.value['pagina'] != event.page) {\r\n      this.detailPanelService.hide();\r\n      this.resetClienteSelecionado();\r\n      this.formFilter.value['pagina'] = event.page;\r\n      this.onFilter();\r\n    }\r\n  }\r\n\r\n  onPreCadastroCpfCnpj() {\r\n    let pesquisa = this.pesquisa.replace(/\\D/g, '');\r\n\r\n    if (pesquisa.length === 11) {\r\n      return { cpf: pesquisa };\r\n    } else if (pesquisa.length === 14) {\r\n      return { cnpj: pesquisa };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  handleCounter(value: any) {\r\n    return value.toFixed(0);\r\n  }\r\n\r\n  resetClienteSelecionado() {\r\n    this.clienteSelecionado = null;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2FjdW11bG9zLW1lbnNhaXMvYWN1bXVsb3MtbWVuc2Fpcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-detalhes',\r\n  templateUrl: './detalhes.component.html',\r\n  styleUrls: ['./detalhes.component.scss']\r\n})\r\nexport class ComercialClientesDetalhesComponent implements OnInit {\r\n  loaderNavbar: boolean = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home'\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n      routerLink: '/comercial/clientes/lista'\r\n    },\r\n    {\r\n      descricao: 'Detalles'\r\n    }\r\n  ];\r\n\r\n  cliente: any = {};\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private pnotifyService: PNotifyService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.activatedRoute.snapshot.data['response']['responseCode'] === 200) {\r\n      this.cliente = this.activatedRoute.snapshot.data['response']['result'];\r\n      this.registrarAcesso();\r\n      this.titleService.setTitle('Detalhes');\r\n    } else if (\r\n      this.activatedRoute.snapshot.data['response']['responseCode'] === 403\r\n    ) {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\r\n      this.router.navigate(['/comercial/home']);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  classStatusBadge(status: string) {\r\n    let badgeClass = '';\r\n\r\n    if (status == 'Ativo') {\r\n      badgeClass = 'badge-success';\r\n    } else if (status == 'Inativo') {\r\n      badgeClass = 'badge-danger';\r\n    } else if (status == 'Potenci') {\r\n      badgeClass = 'badge-primary';\r\n    } else if (status == 'Arquivo') {\r\n      badgeClass = 'badge-secondary';\r\n    }\r\n\r\n    return badgeClass;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CnpjService {\r\n  private readonly API = `http://23.254.204.187/api/common/services/cnpj`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getData(cnpj: string) {\r\n    cnpj = cnpj.replace(/\\D/g, '');\r\n\r\n    return this.http.get(`${this.API}/${cnpj}`).pipe(\r\n      timeout(5000),\r\n      catchError(e => {\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Proposta para análise de crédito\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'formulario'\\\"\\r\\n    [disabled]=\\\"!form.valid\\\"\\r\\n    (click)=\\\"onSubmit()\\\">\\r\\n    Generar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\r\\n    (click)=\\\"onCancel()\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\r\\n    (click)=\\\"onDownload()\\\">\\r\\n    Download\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row justify-content-center\\\" *ngIf=\\\"tipoVisao == 'formulario'\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <div class=\\\"mtc-title\\\">Datos del cliente</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"razaoSocial\\\">Razon social</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"razaoSocial\\\"\\r\\n              formControlName=\\\"razaoSocial\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"dataSolicitacao\\\">Fecha de la solicitud</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataSolicitacao\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataSolicitacao\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('dataSolicitacao') + ' ' + onFieldRequired('dataSolicitacao')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataSolicitacao')\\\" message=\\\"Data de solicitação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"codCliente\\\">Código de cliente</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codCliente\\\"\\r\\n              formControlName=\\\"codCliente\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"codClienteDBA\\\">Código SAP</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codClienteDBA\\\"\\r\\n              formControlName=\\\"codClienteDBA\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"limiteCreditoAtual\\\">Limite de crédito atual</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"limiteCreditoAtual\\\"\\r\\n              formControlName=\\\"limiteCreditoAtual\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"setorAtividade\\\">Setor de atividades</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"setorAtividade\\\"\\r\\n              formControlName=\\\"setorAtividade\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"dataUltimaVisita\\\">Fecha de la última visita</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataUltimaVisita\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataUltimaVisita\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"instalacoes\\\">Instalaciones</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"instalacoes\\\"\\r\\n              formControlName=\\\"instalacoes\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"numFuncionarios\\\">Número de empleados</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"numFuncionarios\\\"\\r\\n              formControlName=\\\"numFuncionarios\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 0 }\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"limiteCreditoSolicitado\\\">Limite de crédito solicitado</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"limiteCreditoSolicitado\\\"\\r\\n              formControlName=\\\"limiteCreditoSolicitado\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('limiteCreditoSolicitado') + ' ' + onFieldRequired('limiteCreditoSolicitado')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('limiteCreditoSolicitado')\\\" message=\\\"Limite de crédito solicitado é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"condicaoPagto\\\">Condiciones de pago</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"condicaoPagto\\\"\\r\\n              formControlName=\\\"condicaoPagto\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('condicaoPagto') + ' ' + onFieldRequired('condicaoPagto')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('condicaoPagto')\\\" message=\\\"Condição de pagamento é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <hr class=\\\"mt-0\\\">\\r\\n            <div class=\\\"mtc-title\\\">Solicitud de datos</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeVendedor\\\">Vendedor(a)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeVendedor\\\"\\r\\n              formControlName=\\\"nomeVendedor\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"telefoneVendedor\\\">Teléfono</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"telefoneVendedor\\\"\\r\\n              formControlName=\\\"telefoneVendedor\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"gestorVendas\\\">Jefe de ventas</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"gestorVendas\\\"\\r\\n              formControlName=\\\"gestorVendas\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('gestorVendas') + ' ' + onFieldRequired('gestorVendas')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('gestorVendas')\\\" message=\\\"Gestor(a) de venda é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeEscritorio\\\">Oficina de ventas</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeEscritorio\\\"\\r\\n              formControlName=\\\"nomeEscritorio\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"fornecedores\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Proveedores</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddFornecedor()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of fornecedores.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-6\\\">\\r\\n                  <label for=\\\"nome\\\">Nobre</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"nome\\\"\\r\\n                    formControlName=\\\"nome\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('fornecedores', i, 'nome') + ' ' + onNestedFieldRequired('fornecedores', i, 'nome')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-5\\\">\\r\\n                  <label for=\\\"telefone\\\">Telefono</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"telefone\\\"\\r\\n                    formControlName=\\\"telefone\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteFornecedor(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"clientes\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Clientes</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddCliente()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"clientes.controls.length > 0\\\">\\r\\n            <div class=\\\"form-row\\\" *ngFor=\\\"let item of clientes.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n              <div class=\\\"form-group col mb-0\\\">\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col-11\\\">\\r\\n                    <label for=\\\"nome\\\">Nombre</label>\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      id=\\\"nome\\\"\\r\\n                      formControlName=\\\"nome\\\"\\r\\n                      (input)=\\\"onInput()\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn-icon\\\"\\r\\n                      (click)=\\\"onDeleteCliente(i)\\\">\\r\\n                      <i class=\\\"fas fa-trash\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mb-3\\\" *ngIf=\\\"clientes.controls.length == 0\\\">\\r\\n            <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"bancos\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Bancos</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddBanco()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of bancos.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"nome\\\">Nome</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"nome\\\"\\r\\n                    formControlName=\\\"nome\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'nome') + ' ' + onNestedFieldRequired('bancos', i, 'nome')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-2\\\">\\r\\n                  <label for=\\\"agencia\\\">Agencia</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"agencia\\\"\\r\\n                    formControlName=\\\"agencia\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'agencia') + ' ' + onNestedFieldRequired('bancos', i, 'agencia')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"contaCorrente\\\">Cuenta corriente</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"contaCorrente\\\"\\r\\n                    formControlName=\\\"contaCorrente\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'contaCorrente') + ' ' + onNestedFieldRequired('bancos', i, 'contaCorrente')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"telefone\\\">Telefono</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"telefone\\\"\\r\\n                    formControlName=\\\"telefone\\\"\\r\\n                    telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'telefone') + ' ' + onNestedFieldRequired('bancos', i, 'telefone')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteBanco(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <hr class=\\\"mt-0\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <label>Ventas concentradas</label>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                  <input\\r\\n                    type=\\\"radio\\\"\\r\\n                    id=\\\"vendasConcentradasSim\\\"\\r\\n                    class=\\\"custom-control-input\\\"\\r\\n                    formControlName=\\\"vendasConcentradas\\\"\\r\\n                    value=\\\"Sim\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"vendasConcentradasSim\\\">Sim</label>\\r\\n                </div>\\r\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                  <input\\r\\n                    type=\\\"radio\\\"\\r\\n                    id=\\\"vendasConcentradasNao\\\"\\r\\n                    class=\\\"custom-control-input\\\"\\r\\n                    formControlName=\\\"vendasConcentradas\\\"\\r\\n                    value=\\\"Não\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"vendasConcentradasNao\\\">Não</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"previsaoCompraTon\\\">Compra mensual estimada (Ton)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"previsaoCompraTon\\\"\\r\\n              formControlName=\\\"previsaoCompraTon\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"previsaoCompraValor\\\">Compra mensual estimada (R$)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"previsaoCompraValor\\\"\\r\\n              formControlName=\\\"previsaoCompraValor\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"faturamentoMedio\\\">Facturación media mensual</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"faturamentoMedio\\\"\\r\\n              formControlName=\\\"faturamentoMedio\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"parecerVendedor\\\">Opinión del vendedor</label>\\r\\n            <textarea\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"parecerVendedor\\\"\\r\\n              formControlName=\\\"parecerVendedor\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('parecerVendedor') + ' ' + onFieldRequired('parecerVendedor')\\\">\\r\\n            </textarea>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('parecerVendedor')\\\" message=\\\"Parecer do vendedor é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row justify-content-center pt-5\\\" id=\\\"impressao-ficha-pac\\\" *ngIf=\\\"tipoVisao == 'ficha'\\\">\\r\\n    <div class=\\\"col-9\\\">\\r\\n      <h1>Propuesta de análisis de créditos (PAC)</h1>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Dados do cliente</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Razon social:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.razaoSocial == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.razaoSocial != null\\\">{{ dataFicha.razaoSocial }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Fecha de la solicitud:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.dataSolicitacao == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.dataSolicitacao != null\\\">{{ dataFicha.dataSolicitacao }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Código de cliente (TID):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.codCliente == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.codCliente != null\\\">{{ dataFicha.codCliente }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Código de cliente (SAP):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.codClienteDBA == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.codClienteDBA != null\\\">{{ dataFicha.codClienteDBA }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Limite de crédito actual:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoAtual == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoAtual == null\\\">{{ dataFicha.limiteCreditoAtual | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Sector de actividade:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.setorAtividade == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.setorAtividade != null\\\">{{ dataFicha.setorAtividade }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Fecha de la última visita:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.dataUltimaVisita == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.dataUltimaVisita != null\\\">{{ dataFicha.dataUltimaVisita }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Instalaciones:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.instalacoes == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.instalacoes != null\\\">{{ dataFicha.instalacoes }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Número de funcionários:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.numFuncionarios == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.numFuncionarios == null\\\">{{ dataFicha.numFuncionarios }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Propuestas</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Limite de crédito solicitado:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoSolicitado == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoSolicitado != null\\\">{{ dataFicha.limiteCreditoSolicitado | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Condiciones de pago:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto != null\\\">{{ dataFicha.condicaoPagto }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Datos del solicitante</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Vendedor(a):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto != null\\\">{{ dataFicha.nomeVendedor }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Gestor(a):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas != null\\\">{{ dataFicha.gestorVendas | uppercase }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Telefono:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas != null\\\">{{ dataFicha.telefoneVendedor }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Oficina de ventas:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.nomeEscritorio == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.nomeEscritorio != null\\\">{{ dataFicha.nomeEscritorio }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Principales proveedores</div>\\r\\n        <div *ngIf=\\\"dataFicha.fornecedores.length == 0\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dataFicha.fornecedores.length > 0\\\">\\r\\n          <div class=\\\"row mt-2\\\" *ngFor=\\\"let item of dataFicha.fornecedores\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Nombre:</strong>\\r\\n                <span *ngIf=\\\"item.nome == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.nome != null\\\">{{ item.nome | uppercase }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Telefono:</strong>\\r\\n                <span *ngIf=\\\"item.telefone == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.telefone != null\\\">{{ item.telefone }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Principales clientes</div>\\r\\n        <div *ngIf=\\\"dataFicha.clientes.length == 0\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dataFicha.clientes.length > 0\\\">\\r\\n          <div *ngFor=\\\"let item of dataFicha.clientes\\\">\\r\\n            <p class=\\\"mt-2 mb-0\\\">\\r\\n              <strong class=\\\"mr-2\\\">Nome:</strong> {{ item.nome | uppercase }}\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Principaless bancos</div>\\r\\n        <div *ngIf=\\\"dataFicha.bancos.length == 0\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dataFicha.bancos.length > 0\\\">\\r\\n          <div class=\\\"row\\\" *ngFor=\\\"let item of dataFicha.bancos\\\">\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Banco:</strong>\\r\\n                <span *ngIf=\\\"item.nome == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.nome != null\\\">{{ item.nome | uppercase }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Agencia:</strong>\\r\\n                <span *ngIf=\\\"item.agencia == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.agencia != null\\\">{{ item.agencia }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Cuenta corrinte:</strong>\\r\\n                <span *ngIf=\\\"item.contaCorrente == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.contaCorrente != null\\\">{{ item.contaCorrente }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Telefono:</strong>\\r\\n                <span *ngIf=\\\"item.telefone == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.telefone != null\\\">{{ item.telefone }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Datos financieros</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Vendas concretadas:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.vendasConcentradas == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.vendasConcentradas != null\\\">{{ dataFicha.vendasConcentradas }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Previsión mensual de compras (Ton):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraTon == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraTon != null\\\">{{ dataFicha.previsaoCompraTon | number:'1.3-3' }}t</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Previsión mensual de compras (R$):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraValor == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraValor != null\\\">{{ dataFicha.previsaoCompraValor | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Facturación media mensual (R$):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.faturamentoMedio == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.faturamentoMedio != null\\\">{{ dataFicha.faturamentoMedio | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-0\\\">\\r\\n        <div class=\\\"mtc-title\\\">Opinión del vendedor</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <span *ngIf=\\\"dataFicha.parecerVendedor == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.parecerVendedor != null\\\">{{ dataFicha.parecerVendedor | uppercase }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-notas-promissorias',\r\n  templateUrl: './notas-promissorias.component.html',\r\n  styleUrls: ['./notas-promissorias.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent\r\n  implements OnInit {\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  notasPromissorias: any = [];\r\n  notasPromissoriasLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getNotasPromissorias(params['id']);\r\n    });\r\n  }\r\n\r\n  getNotasPromissorias(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getNotasPromissorias(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.notasPromissorias = response['result'];\r\n        }\r\n        this.notasPromissoriasLoaded = true;\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'BAIXADA') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'QUITADA') {\r\n      borderClass = 'border-primary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2hpc3Rvcmljby1maW5hbmNlaXJvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Dias não úteis\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dataInicial\\\">Fecha inicial</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataInicial\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataInicial\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired('dataInicial')\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial') == 'required'\\\" message=\\\"Data Inicial é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dataFinal\\\">Fecha final</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataFinal\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataFinal\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired('dataFinal')\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal') == 'required'\\\" message=\\\"Data Final é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Cod. Material</th>\\r\\n            <th scope=\\\"col\\\">Material</th>\\r\\n            <th scope=\\\"col\\\">Línea / Clase</th>\\r\\n            <th scope=\\\"col\\\">Ton. Vendidas</th>\\r\\n            <th scope=\\\"col\\\">Nota Fiscal</th>\\r\\n            <th scope=\\\"col\\\">Dt. Ultima Compra</th>\\r\\n            <th scope=\\\"col\\\">Precio Unitário</th>\\r\\n            <th scope=\\\"col\\\">Precio Total</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let ultimoPreco of dadosPagination; let i = index\\\">\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.codMaterial }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.nomeMaterial | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.linha }} / {{ ultimoPreco.classe }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.qtdeToneladasVendidas | number:'1.3-3' }} ton \\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.nrNotaFiscal }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.dataUltimaCompra | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.precoUnitarioMaterial | currency:'BRL':'symbol':'1.2-2' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.precoTotalMaterial | currency:'BRL':'symbol':'1.2-2' }}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\";"]}