{"version":3,"sources":["webpack:///src/app/modules/comercial/clientes/editar/editar.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.scss","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes.component.scss","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.html","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.ts","webpack:///src/app/modules/comercial/clientes/pre-cadastro/ubicacion_contacto/ubicacion.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.scss","webpack:///src/app/shared/services/core/functions.service.ts","webpack:///src/app/modules/comercial/clientes/pre-cadastro/ubicacion_contacto/ubicacion.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.html","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.service.ts","webpack:///src/app/modules/comercial/clientes/clientes-routing.module.ts","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.ts","webpack:///src/app/modules/comercial/clientes/editar/editar.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.scss","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.module.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.ts","webpack:///src/app/modules/comercial/clientes/pre-cadastro/ubicacion_contacto/ubicacion.service.ts","webpack:///src/app/modules/comercial/clientes/clientes.module.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.scss","webpack:///src/app/modules/comercial/clientes/clientes-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/editar/editar.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.html","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/shared/services/core/form-rules.service.ts","webpack:///src/app/modules/comercial/clientes/lista/lista.component.scss","webpack:///src/app/modules/comercial/clientes/pre-cadastro/ubicacion_contacto/ubicacion.component.html","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.scss","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.ts","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.ts","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.scss","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro-routing.module.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.html","webpack:///src/app/modules/comercial/clientes/editar/editar.component.html","webpack:///src/app/modules/comercial/clientes/cadastro/dados-faturamento/formulario/formulario-rules-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.html","webpack:///src/app/modules/comercial/clientes/lista/lista.component.html","webpack:///src/app/modules/comercial/clientes/lista/lista.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.scss","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes.component.ts","webpack:///src/app/shared/services/ws/cnpj.service.ts","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.scss","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.html"],"names":["EditarClienteComponent","_BsModalRef","pnotifyService","formBuilder","preCadastroService","fecharModal","latitudPromedio","longitudPromedio","latitudPromedioContacto","longitudPromedioContacto","latitud","longitud","loaderFullScreen","coloresDisponibles","coloresDisponiblesContacto","nuevoContacto","contacto","nombres_contacto","apellido_contacto","direccion_contacto","celular_contacto","telefono_contacto","color","nuevaDireccion","ubicacion","direccion","id_ciudad","oferta","observacion","id_marcador","form","group","codigo_cliente","carnet","nit","nombre","nombre_factura","id_tipo_persona","email","telefono","celular","id_rubro","id_tipo_cliente","id_vendedor","categorizarUbicacion","categorizarContacto","undefined","isNaN","vendedor","vendedoresList","find","v","id","nome","console","log","datos_cliente","datos_contacto","length","push","generarColorAleatorioContacto","datos_direccion","forEach","generarColorAleatorio","index","splice","indiceAleatorio","Math","floor","random","colorAleatorio","latitude_contacto","longitude_contacto","event","coords","lat","lng","actualizarMarcador","actualizarDireccion","actualizarMarcadorContacto","actualizarDireccionContacto","obtenerDireccion","then","direccion_mapa","error","fetch","response","json","data","resultado","results","formatted_address","emit","idClienteInput","document","getElementById","value","codigoClienteInput","ciInput","nitInput","nombreInput","nombreFacturaInput","idTipoPersonaInput","emailInput","telefonoInput","celularInput","tipoClienteInput","idVendedorInput","contactos","enviarPeticion","updateCliente","pipe","subscribe","codigoRespuesta","setTimeout","success","onClose","location","reload","mensagem","selector","template","ComercialClientesHistoricoFinanceiroComponent","router","activatedRoute","detalhesService","atividadesService","titleService","breadCrumbTree","cliente","getPNotify","snapshot","registrarAcesso","getDetalhes","notice","navigate","back","params","next","setBreadCrumb","onRouterChange","handleLoadDependenciesError","url","split","currRoute","descricao","routerLink","breadCrumbConfig","route","setTitle","events","ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent","historicoFinanceiroService","principal","historicoCobrancas","ocorrenciasDuplicatas","ocorrenciasComerciais","duplicataLoaded","queryParams","getMateriaisDuplicata","FunctionsService","valor","tamanho","toString","trim","i","providedIn","PreCadastroUbicacionContactosComponent","bsModalRef","confirmModalService","latLngChanged","swDesactivarForm","currencyMaskOptions","align","prefix","thousands","decimal","precision","opcoesVenda","arrayPresentacion","swPresentacion","id_presentacion","showModal","showImpostos","setFormBuilder","estadoMapa","latitud_inicial","longitud_inicial","controls","setValue","direccion_mapa_act","tipo","emitLatLng","ComercialClientesPreCadastroService","vendedoresService","dadosFaturamentoService","http","BASE_URL","vendedores","getVendedores","cnaes","getCnaes","ciudades","getCiudades","post","param","observe","tap","arg0","Error","routes","path","component","resolve","rules","canDeactivate","loadChildren","m","ComercialClientesCadastroModule","ComercialClientesHistoricoFinanceiroModule","redirectTo","pathMatch","ComercialClientesRoutingModule","imports","forChild","exports","ComercialClientesUltimosPrecosComponent","localeService","ultimosPrecos","dateService","detailPanelService","comercialService","loaderNavbar","showDetailPanel","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","codCliente","setFormFilter","formValue","checkRouterParams","dataInicial","required","dataFinal","getFirstDayMonth","getLastDayMonth","activatedRouteSubscription","keys","atob","JSON","parse","search","formKey","paramKey","convertStringToDate","Number","unsubscribe","field","onFieldInvalid","get","errors","hasOwnProperty","touched","formControl","validator","validationResult","valid","setRouterParams","verificaParams","relativeTo","q","btoa","stringify","convertToUrlDate","Date","hide","getListaUltimosPrecos","slice","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialClientesPropostaAnaliseCreditoResolverGuard","clienteService","getPropostaAnaliseCredito","result","razaoSocial","codSAP","limiteCredito","setorAtividade","nomeVendedor","telefoneVendedor","nomeEscritorio","declarations","forRoot","ComercialClientesHistoricoFinanceiroDetalhesComponent","filterPipe","tableConfig","subtitleBorder","pedidos","pedidosPagination","pedidosFiltered","pedidosLoaded","parent","grupoEconomico","getPedidos","getDetalhesPedidos","status","borderClass","startItem","page","endItem","transform","numDuplicata","PreCadastroUbicacionContactosService","modalConfig","initialState","ComercialClientesModule","apiKey","entryComponents","providers","ComercialClientesResolverGuard","clientesService","getPermissaoAcesso","responseCode","EditarClienteService","modalAutorizacionService","ComercialClientesHistoricoFinanceiroCorteDobraComponent","corteDobra","corteDobraLoaded","getCorteDobra","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","currentDate","startOfWeek","setDate","setHours","endOfWeek","y","d","h","padStart","s","getSeconds","time","timeSplit","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","ComercialClientesUltimosPrecosService","API","httpParams","append","ComercialClientesHistoricoFinanceiroService","set","ComercialClientesHistoricoFinanceiroDebitosComponent","debitos","debitosLoaded","getDebitos","ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent","acumulosMensais","acumulosMensaisLoaded","getAcumulosMensais","ComercialService","FormRulesService","formRef","ComercialClientesPreCadastroComponent","cnpjService","functionsService","ubicacionService","MASKS","formChanged","tipoPessoa","submittingForm","swActivarLatitud","maxLengthRules","maxLengthMessages","disabled_form","dadosCliente","tipos_clientes","index_array_ubicacion","titulo_ubicacion_array","index_array_contactos","titulo_contacto_array","nombre_contacto_array","apellido_p_contacto_array","apellido_m_contacto_array","telefono_contacto_array","celular_contacto_array","direccion_contacto_array","latitud_contacto_array","longitud_contacto_array","tipo_peticion","ubicacionCollapse","contactoCollapse","ubicacionFormularios","contactoFormularios","formObjArray","ubicaciones","indice","ciudad_vendedor","getFormFields","obtenerTiposClientes","documento","setMaxLengthRules","formObj","array","a","getVendedorCiudad","handleFormFieldsError","getTipoClientes","loadDependencies","map","cnae","id_cnae","descripcion","codigo","apellido1","apellido2","nomeFantasia","datosUbicacion","ubicacionFormArray","datosContacto","contactoFormArray","tipoFormulario","nuevoFormulario","crearFormularioUbicacionConDatosIngresados","agregarUbicacionALaFormObj","crearFormularioContactoConDatosIngresados","agregarContactoALaFormObj","titulo_contacto","apellido2_contacto","ci","maxLength","telefone","tipopessoa","ciudad","ciudadUbi","titulo_ubicacion","nombre_ciudad","tipo_cliente","valueChanges","setValidators","clearValidators","updateValueAndValidity","tipoPessoaOptions","S","P","G","E","tipopersona","tipo_pessoa","tipo_persona","nombres","razonSocial","cnpj_cpf","sapPostClient","detalle","reset","podeAcessar","onCloseDetails","atributo","confirm","ComercialClientesPropostaAnaliseCreditoComponent","pdfService","tipoVisao","dataFicha","disabled","dataSolicitacao","codClienteDBA","dataUltimaVisita","instalacoes","numFuncionarios","limiteCreditoAtual","limiteCreditoSolicitado","condicaoPagto","gestorVendas","fornecedores","clientes","vendasConcentradas","bancos","previsaoCompraTon","previsaoCompraValor","faturamentoMedio","parecerVendedor","setFormFornecedoresClientesBancos","onAddFornecedor","onAddBanco","agencia","contaCorrente","removeAt","formGroup","onNestedFieldInvalid","nestedForm","formData","getRawValue","download","ComercialClientesHistoricoFinanceiroResumoComponent","sinteticoPendenciasLoaded","sintetico","atrasoPagamento","tempoEntrega","totalAtraso","pagtoAntecipado","creditoSeguradora","grupoEconomicoLoaded","showPendenciasDetalhes","pendencias","titulos","notasDebito","notasPromissorias","chequesDevolvidos","reservaBobinas","saldo","visaoGrupoEconomico","getResumoSintetico","getGrupoEconomico","onLoadingGrupoEconomico","getResumoPedidos","toFixed","ComercialClientesDetalhesResolverGuard","children","ComercialHistoricoFinanceiroRoutingModule","ComercialClientesCadastroDadosFaturamentoRulesResolverGuard","formRulesService","getRules","ComercialClientesListaComponent","editarClienteService","setorAtividades","dataLoaded","dadosCadastraisLoaded","dadosCadastraisEmpty","contatosLoaded","contatosEmpty","direccionEmpty","searchSubmitted","showAdvancedFilter","currentUser","localStorage","getItem","matricula","ativos","inativos","potencial","arquivados","orderBy","orderType","clientesPagination","dadosCadastrais","contato","contatos","direcciones","direcciones_contacto","editingMode","editedFields","editingContacto","codigoClienteSap","tipos_personas","informacionMarcador","tipoPersonaOptions","label","getFormFilters","onDetailPanelEmitter","getCenaes","showDetailPanelSubscription","config","showing","onCloseDetailPanel","getSetorAtividades","unshift","formFilter","pesquisa","buscarPor","situacao","segurado","carteira","pagina","registros","loadedFinished","clienteSelecionado","calcularPromedioContacto","calcularPromedioUbicaciones","sumLatitud","sumLongitud","resetClienteSelecionado","aux_cartera","searchInputValue","setSubmittedSearch","listStatus","editedIdCont","id_cont","editedContacto","editedds_cont_meio","ds_cont_meio","editedDireccion","editedDsCont","ds_cont","originalDsTipoCont","ds_tipo_cont","editing","codigoCliente","id_cliente","editedData","tipo_medio","id_cont_meio","sapUpdateContacto","option","opt","originalVendedorId","mapTipoPessoaToTipoPersona","sapUpdateClient","getStatus","setStatus","column","onFilter","queryParamsHandling","buscandoPor","getClientes","replace","cpf","cnpj","ComercialClientesDetalhesComponent","badgeClass","CnpjService","e","ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent","notasPromissoriasLoaded","getNotasPromissorias"],"mappings":"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","file":"clientes-clientes-module-es5.js","sourcesContent":["import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { number } from 'ng-brazil/number/validator';\r\n\r\nimport { ComercialClientesPreCadastroService } from '../pre-cadastro/pre-cadastro.service';\r\n\r\n@Component({\r\n    selector: 'editar-cliente',\r\n    templateUrl: './editar.component.html',\r\n    styleUrls: ['./editar.component.scss']\r\n})\r\nexport class EditarClienteComponent implements OnInit {\r\n    @Output() fecharModal = new EventEmitter();\r\n    @Input() datos_cliente: any;\r\n\r\n    @Input() vendedoresList: any[];\r\n    @Input() tipos_clientes: any[];\r\n\r\n    @Input() cnaes: any[];\r\n    @Input() ciudades: any[];\r\n\r\n    @Input() latitudPromedio: number = 0;\r\n    @Input() longitudPromedio: number = 0;\r\n\r\n    @Input() latitudPromedioContacto: number = 0;\r\n    @Input() longitudPromedioContacto: number = 0;\r\n\r\n    @Input() tipos_personas: any[];\r\n\r\n\r\n    latitud: number = 0;\r\n    longitud: number = 0;\r\n\r\n\r\n    loaderNavbar: boolean;\r\n\r\n\r\n    loaderFullScreen = true;\r\n    form: FormGroup;\r\n    checkoutForm;\r\n\r\n\r\n    private coloresDisponibles: string[] = [\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF0000',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FC9F3A',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFF00',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00FF00',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFFFF',\r\n    ];\r\n\r\n    private coloresDisponiblesContacto: string[] = [\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF0000',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FC9F3A',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFF00',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00FF00',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFFFF',\r\n    ];\r\n\r\n\r\n    nuevoContacto = {\r\n        contacto: '',\r\n        nombres_contacto: '',\r\n        apellido_contacto: '',\r\n        direccion_contacto: '',\r\n        celular_contacto: '',\r\n        telefono_contacto: '',\r\n        color: '',\r\n    };\r\n\r\n    nuevaDireccion = {\r\n        ubicacion: '',\r\n        direccion: '',\r\n        latitud: 0,\r\n        longitud: 0,\r\n        id_ciudad: '',\r\n        color: '',\r\n    };\r\n\r\n\r\n    constructor(\r\n        private _BsModalRef: BsModalRef,\r\n        private pnotifyService: PNotifyService,\r\n        private formBuilder: FormBuilder,\r\n        private preCadastroService: ComercialClientesPreCadastroService,\r\n\r\n    ) {\r\n        this.form = this.formBuilder.group({\r\n            //observacion: ['', Validators.required],\r\n            codigo_cliente: [''],\r\n            carnet: [''],\r\n            nit: [''],\r\n            nombre: [''],\r\n            nombre_factura: [''],\r\n            id_tipo_persona: [],\r\n            email: [''],\r\n            telefono: [''],\r\n            celular: [''],\r\n            id_rubro: [],\r\n            id_tipo_cliente: [],\r\n            id_vendedor: [''],\r\n        });\r\n    }\r\n\r\n    dataForm: any;\r\n    data: [];\r\n    oferta: Array<any> = [];\r\n    detalle: any[];\r\n    observacion: string = '';\r\n    id_marcador: number = 0;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.categorizarUbicacion();\r\n        this.categorizarContacto();\r\n        if (this.latitudPromedio === null || this.latitudPromedio === undefined) {\r\n            this.latitudPromedio = -17.7834799;\r\n        }\r\n        if (this.longitudPromedio === null || this.longitudPromedio === undefined) {\r\n            this.longitudPromedio = -63.1819648;\r\n        }\r\n    }\r\n\r\n    getVendedorNome(id_vendedor: number): string {\r\n        if (isNaN(id_vendedor)) {\r\n            return 'NO INFORMADO';\r\n        }\r\n\r\n        const vendedor = this.vendedoresList.find(v => v.id === id_vendedor);\r\n        return vendedor ? vendedor.nome : 'NO INFORMADO';\r\n    }\r\n\r\n\r\n    agregarContacto() {\r\n        console.log('aqui');\r\n        if (this.datos_cliente.datos_contacto > 0) {\r\n            if (this.datos_cliente.datos_contacto.length < 5) {\r\n                this.datos_cliente.datos_contacto.push({ ...this.nuevoContacto });\r\n                this.nuevoContacto = {\r\n                    contacto: '',\r\n                    nombres_contacto: '',\r\n                    apellido_contacto: '',\r\n                    direccion_contacto: '',\r\n                    celular_contacto: '',\r\n                    telefono_contacto: '',\r\n                    color: this.generarColorAleatorioContacto()\r\n                };\r\n            }\r\n        } else {\r\n            this.datos_cliente.datos_contacto.push({ ...this.nuevoContacto });\r\n            this.nuevoContacto = {\r\n                contacto: '',\r\n                nombres_contacto: '',\r\n                apellido_contacto: '',\r\n                direccion_contacto: '',\r\n                celular_contacto: '',\r\n                telefono_contacto: '',\r\n                color: '',\r\n            };\r\n        }\r\n        console.log(this.datos_cliente.datos_contacto)\r\n    }\r\n\r\n    categorizarUbicacion() {\r\n        if (this.datos_cliente.datos_direccion && this.datos_cliente.datos_direccion.length > 0) {\r\n            this.datos_cliente.datos_direccion.forEach((direccion) => {\r\n                direccion['color'] = this.generarColorAleatorio();\r\n            });\r\n        }\r\n    }\r\n\r\n    categorizarContacto() {\r\n        if (this.datos_cliente.datos_contacto && this.datos_cliente.datos_contacto.length > 0) {\r\n            this.datos_cliente.datos_contacto.forEach((direccion) => {\r\n                direccion['color'] = this.generarColorAleatorioContacto();\r\n            });\r\n        }\r\n    }\r\n\r\n    eliminarContacto(index: number) {\r\n        this.datos_cliente.datos_contacto.splice(index, 1);\r\n    }\r\n\r\n    agregarUbicacion() {\r\n        this.nuevaDireccion = {\r\n            ubicacion: '',\r\n            direccion: '',\r\n            latitud: this.latitudPromedio,\r\n            longitud: this.longitudPromedio,\r\n            id_ciudad: '',\r\n            color: this.generarColorAleatorio(),\r\n        }\r\n\r\n        if (this.datos_cliente.datos_direccion.length < 5) {\r\n            this.datos_cliente.datos_direccion.push({ ...this.nuevaDireccion });\r\n            this.nuevaDireccion = {\r\n                ubicacion: '',\r\n                direccion: '',\r\n                latitud: 0,\r\n                longitud: 0,\r\n                id_ciudad: '',\r\n                color: '',\r\n            };\r\n        }\r\n    }\r\n\r\n    generarColorAleatorio(): string {\r\n        if (this.coloresDisponibles.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const indiceAleatorio = Math.floor(Math.random() * this.coloresDisponibles.length);\r\n        const colorAleatorio = this.coloresDisponibles.splice(indiceAleatorio, 1)[0];\r\n        return colorAleatorio;\r\n    }\r\n\r\n    generarColorAleatorioContacto(): string {\r\n        console.log(this.coloresDisponiblesContacto)\r\n        if (this.coloresDisponiblesContacto.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const indiceAleatorio = Math.floor(Math.random() * this.coloresDisponiblesContacto.length);\r\n        const colorAleatorio = this.coloresDisponiblesContacto.splice(indiceAleatorio, 1)[0];\r\n        console.log(colorAleatorio);\r\n        return colorAleatorio;\r\n    }\r\n\r\n    eliminarUbicacion(index: number) {\r\n        this.coloresDisponibles.push(this.datos_cliente.datos_direccion[index].color);\r\n        this.datos_cliente.datos_direccion.splice(index, 1);\r\n    }\r\n\r\n    actualizarMarcador(index: number, latitud, longitud): void {\r\n        this.id_marcador = index;\r\n        this.datos_cliente.datos_direccion[index].latitud = latitud;\r\n        this.datos_cliente.datos_direccion[index].longitud = longitud;\r\n    }\r\n\r\n    actualizarMarcadorContacto(index: number, latitud, longitud): void {\r\n        this.id_marcador = index;\r\n        this.datos_cliente.datos_contacto[index].latitude_contacto = latitud;\r\n        this.datos_cliente.datos_contacto[index].longitude_contacto = longitud;\r\n    }\r\n    actualizarUbicacion(index: number) {\r\n        this.datos_cliente.datos_direccion[index].latitud = this.latitud;\r\n        this.datos_cliente.datos_direccion[index].longitud = this.longitud;\r\n    }\r\n\r\n    actualizarMapa(event: any) {\r\n        this.latitud = event.coords.lat;\r\n        this.longitud = event.coords.lng;\r\n        this.actualizarMarcador(this.id_marcador, this.latitud, this.longitud);\r\n        this.actualizarDireccion(this.id_marcador, event);\r\n    }\r\n\r\n    actualizarMapaContacto(event: any) {\r\n        this.latitud = event.coords.lat;\r\n        this.longitud = event.coords.lng;\r\n        this.actualizarMarcadorContacto(this.id_marcador, this.latitud, this.longitud);\r\n        this.actualizarDireccionContacto(this.id_marcador, event);\r\n    }\r\n\r\n    actualizarDireccion(index, event: any) {\r\n        this.obtenerDireccion(event.coords.lat, event.coords.lng)\r\n            .then((direccion_mapa: string) => {\r\n                this.datos_cliente.datos_direccion[index].direccion = direccion_mapa;\r\n            })\r\n            .catch((error: any) => {\r\n                /*  this.form.controls['direccion'].setValue(\r\n                    'Error al obtener la dirección'\r\n                 ); */\r\n            });\r\n    }\r\n\r\n    actualizarDireccionContacto(index, event: any) {\r\n        this.obtenerDireccion(event.coords.lat, event.coords.lng)\r\n            .then((direccion_mapa: string) => {\r\n                this.datos_cliente.datos_contacto[index].direccion = direccion_mapa;\r\n            })\r\n            .catch((error: any) => {\r\n                /*  this.form.controls['direccion'].setValue(\r\n                    'Error al obtener la dirección'\r\n                 ); */\r\n            });\r\n    }\r\n\r\n    public obtenerDireccion(latitud: number, longitud: number): Promise<string> {\r\n        return fetch(\r\n            `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitud},${longitud}&key=AIzaSyDl5b7STz9xYNDhybTTer2POVncX9FYqCc`\r\n        )\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const resultado = data.results[0];\r\n                if (resultado) {\r\n                    return resultado.formatted_address;\r\n                } else {\r\n                    return 'Dirección no encontrada';\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                return 'Error al obtener la dirección';\r\n            });\r\n    }\r\n\r\n    onClose(): void {\r\n        this.fecharModal.emit(true);\r\n    }\r\n\r\n    actualizarCiudad(index: number, id_ciudad: number) {\r\n        this.datos_cliente.datos_direccion[index].id_ciudad = id_ciudad\r\n    }\r\n\r\n    actualizarCliente() {\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var idClienteInput = document.getElementById('id_cliente').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var codigoClienteInput = document.getElementById('codigo_cliente').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var ciInput = document.getElementById('carnet').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var nitInput = document.getElementById('nit').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var nombreInput = document.getElementById('nombre').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var nombreFacturaInput = document.getElementById('nombre_factura').value;\r\n        // @ts-ignore: Ignorar error TS2339      \r\n        var idTipoPersonaInput = document.getElementById('id_tipo_persona').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var emailInput = document.getElementById('email').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var telefonoInput = document.getElementById('telefono').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var celularInput = document.getElementById('celular').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var tipoClienteInput = document.getElementById('id_tipo_cliente').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var idVendedorInput = document.getElementById('id_vendedor').value;\r\n\r\n        const ubicacion = this.datos_cliente.datos_direccion;\r\n        const contactos = this.datos_cliente.datos_contacto\r\n        const data = {\r\n            'codigo_cliente': codigoClienteInput,\r\n            'id_cliente': idClienteInput,\r\n            'nit': nitInput,\r\n            'ci': ciInput,\r\n            'nombres': nombreInput,\r\n            'tipo_pessoa': idTipoPersonaInput,\r\n            'id_vendedor': idVendedorInput,\r\n            'situacion': 1,\r\n            'telefono': telefonoInput,\r\n            'celular': celularInput,\r\n            'nombre_factura': nombreFacturaInput,\r\n            'email': emailInput,\r\n            'id_tipo_cliente': tipoClienteInput,\r\n            'ubicacion': ubicacion,\r\n            'contactos': contactos\r\n        };\r\n        this.enviarPeticion(data);\r\n    }\r\n\r\n    enviarPeticion(data: any): void {\r\n        this.preCadastroService\r\n            .updateCliente(data)\r\n            .pipe(\r\n                finalize(() => {\r\n                })\r\n            )\r\n            .subscribe(\r\n                (response: JsonResponse) => {\r\n                    if (response.codigoRespuesta == 200) {\r\n                        setTimeout(() => {\r\n                            this.pnotifyService.success('Cliente editado exitosamente');\r\n                            this.onClose();\r\n\r\n                        }, 200)\r\n                        location.reload();\r\n                    } else {\r\n                        this.pnotifyService.error(response.mensagem);\r\n                    }\r\n                },\r\n                (error: any) => {\r\n                    this.pnotifyService.error(error.error.mensagem);\r\n                }\r\n            );\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2RlYml0b3MvZGViaXRvcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Pre-Registro\\\">\\r\\n  <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Guardar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"nit\\\">CI</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ci\\\" formControlName=\\\"ci\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('ci') + ' ' + onFieldRequired('ci')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ci') == 'required'\\\"\\r\\n              message=\\\"NIT inválido.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"nit\\\">NIT</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nit\\\" formControlName=\\\"nit\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('nit') + ' ' + onFieldRequired('nit')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nit') == 'required'\\\"\\r\\n              message=\\\"NIT inválido.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"tipopessoa\\\">Tipo de persona</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"tipopessoa\\\" formControlName=\\\"tipopessoa\\\" (change)=\\\"onInput()\\\">\\r\\n              <option value=\\\"S\\\">Sociedades</option>\\r\\n              <option value=\\\"P\\\">Privado</option>\\r\\n              <option value=\\\"G\\\">Gobierno</option>\\r\\n              <option value=\\\"E\\\">Empleado</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"vendedor\\\"> Vendedor</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"vendedores\\\" [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"vendedor\\\" bindLabel=\\\"nombre\\\" bindValue=\\\"ID\\\" formControlName=\\\"vendedor\\\"\\r\\n              (change)=\\\"changeVendedor($event.ID)\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nome\\\">Nombre completo</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('nome') + ' ' + onFieldRequired('nome')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome') == 'required'\\\"\\r\\n              message=\\\"Nombre es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome') == 'maxlength'\\\"\\r\\n              [message]=\\\"maxLengthMessages.nome\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeFantasia\\\">Nombre Factura</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nombre_factura\\\" formControlName=\\\"nombre_factura\\\"\\r\\n              (input)=\\\"onInput()\\\" [ngClass]=\\\"onFieldError('nomeFantasia') + ' ' + onFieldRequired('nomeFantasia')\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"razaoSocial\\\">Razon social</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"razaoSocial\\\" formControlName=\\\"razaoSocial\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('razaoSocial') + ' ' + onFieldRequired('razaoSocial')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial') == 'required'\\\"\\r\\n              message=\\\"Razon social es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial') == 'maxlength'\\\"\\r\\n              [message]=\\\"maxLengthMessages.razaoSocial\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <!--  <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeFantasia\\\">Nombre de Fantasia</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nomeFantasia\\\" formControlName=\\\"nomeFantasia\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeFantasia') + ' ' + onFieldRequired('nomeFantasia')\\\">\\r\\n          </div> -->\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"celular\\\">Celular</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"celular\\\" formControlName=\\\"celular\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('celular') + ' ' + onFieldRequired('celular')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('celular') == 'required'\\\"\\r\\n              message=\\\"celular es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"email\\\">E-mail</label>\\r\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" formControlName=\\\"email\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('email') + ' ' + onFieldRequired('email')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email') == 'required'\\\"\\r\\n              message=\\\"E-mail es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email') == 'maxlength'\\\"\\r\\n              [message]=\\\"maxLengthMessages.email\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"telefone\\\">Telefono</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"telefone\\\" formControlName=\\\"telefone\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('telefone') + ' ' + onFieldRequired('telefone')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('telefone') == 'required'\\\"\\r\\n              message=\\\"Telefono es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-9\\\">\\r\\n            <label for=\\\"cnae\\\">Rubro (Actividad Economica)</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"cnaes\\\" [virtualScroll]=\\\"true\\\" labelForId=\\\"cnae\\\"\\r\\n              bindLabel=\\\"descripcion\\\" bindValue=\\\"id_cnae\\\" formControlName=\\\"cnae\\\" (change)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('cnae') + ' ' + onFieldRequired('cnae')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnae') == 'required'\\\"\\r\\n              message=\\\"CNAE es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"cnae\\\">Tipo de cliente</label>\\r\\n            <!-- <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"tipos_clientes\\\" [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"cnae\\\" bindLabel=\\\"nombre_tipo\\\" bindValue=\\\"id\\\" formControlName=\\\"tipo_cliente\\\"\\r\\n              [ngClass]=\\\"onFieldError('tipo_cliente') + ' ' + onFieldRequired('tipo_cliente')\\\"\\r\\n              [disabled]=\\\"this.disabled_form\\\">\\r\\n            </ng-select> -->\\r\\n            <input type=\\\"text\\\" value=\\\"REGULAR\\\" class=\\\"form-control\\\" disabled>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnae') == 'required'\\\"\\r\\n              message=\\\"CNAE es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"cnae\\\">Mapa</label>\\r\\n            <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n              <agm-map (mapClick)=\\\"actualizarMapa($event)\\\" [latitude]=\\\"latitud\\\" [longitude]=\\\"longitud\\\" [zoom]=\\\"16\\\"\\r\\n                class=\\\"embed-responsive-item\\\">\\r\\n                <agm-marker *ngFor=\\\"let ubicacion of ubicaciones; let i = index\\\" [latitude]=\\\"ubicacion.latitud\\\"\\r\\n                  [longitude]=\\\"ubicacion.longitud\\\" (markerClick)=\\\"actualizarMarcador(i)\\\" [iconUrl]=\\\"ubicacion.color\\\"\\r\\n                  (markerDragEnd)=\\\"actualizarUbicacion(i, $event.coords.lat, $event.coords.lng)\\\">\\r\\n                </agm-marker>\\r\\n              </agm-map>\\r\\n              <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div> -->\\r\\n        <div class=\\\"form-row mt-2\\\">\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <button data-toggle=\\\"collapse\\\" data-target=\\\"#CollapseUbicacion\\\" class=\\\"btn btn-primary\\\"\\r\\n              id=\\\"btnAgregarUbicacion\\\" (click)=\\\"repetirFormulario('Ubicacion')\\\"> <i class=\\\"fas fa-plus\\\"></i>\\r\\n              Agregar Ubicación</button>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <button data-toggle=\\\"collapse\\\" data-target=\\\"#CollapseContacto\\\" class=\\\"btn btn-success\\\"\\r\\n              id=\\\"btnAgregarContacto\\\" (click)=\\\"repetirFormulario('Contacto')\\\"> <i class=\\\"fas fa-plus\\\"></i>\\r\\n              Agregar Contacto</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div id=\\\"ContenedorFormularios\\\" style=\\\"max-height: 700px; overflow-y: auto;\\\" class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"alert alert-warning mt-3\\\" *ngIf=\\\"ubicacionFormularios.length > 0\\\"> <strong> La primera ubicación\\r\\n              se tomará como la principal </strong> </div>\\r\\n          <div id=\\\"Ubicacion\\\" *ngFor=\\\"let ubicacionForm of ubicacionFormularios; let i = index\\\">\\r\\n            <div id=\\\"CollapseUbicacion\\\" [class.collapse]=\\\"!ubicacionCollapse\\\">\\r\\n              <div class=\\\"mt-3\\\"></div>\\r\\n              <div class=\\\"row \\\"\\r\\n                style=\\\"border-radius: 13px; background-color: rgb(246, 243, 243);  border: 1px solid #007BFF;\\\">\\r\\n                <div class=\\\"form-group col-md-12 mt-2\\\" align=\\\"right\\\">\\r\\n                  <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"eliminarContacto(i, 2)\\\" style=\\\"text-decoration: none\\\">\\r\\n                    X\\r\\n                  </button>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-9 mt-1\\\">\\r\\n                  <label for=\\\"titulo_ubicacion\\\">Nombre de ubicacion</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo_ubicacion\\\" formControlName=\\\"titulo_ubicacion\\\"\\r\\n                    (input)=\\\"onInput()\\\" [value]=\\\"ubicacionForm.ubicacion\\\"\\r\\n                    (ngModelChange)=\\\"actualizarPosicion($event, i)\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-3\\\">\\r\\n                  <label for=\\\"ciudadUbi\\\">Ciudad</label>\\r\\n                  <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"ciudades\\\" [virtualScroll]=\\\"true\\\"\\r\\n                    (change)=\\\"cambiarCiudad($event.id, i)\\\" labelForId=\\\"ciudad\\\" bindLabel=\\\"nombre_ciudad\\\" bindValue=\\\"id\\\"\\r\\n                    formControlName=\\\"nombre_ciudad\\\"\\r\\n                    [ngClass]=\\\"onFieldError('nombre_ciudad') + ' ' + onFieldRequired('nombre_ciudad')\\\">\\r\\n                    <ng-option *ngFor=\\\"let ciudad of ciudades\\\"\\r\\n                      [value]=\\\"ubicacionForm.ciudad_id !== 0 ? ubicacionForm.ciudad_id : ciudad_vendedor\\\"\\r\\n                      [disabled]=\\\"ciudad.id !== ciudad_vendedor\\\">\\r\\n                      {{ ciudad.nombre_ciudad }}\\r\\n                    </ng-option>\\r\\n\\r\\n                  </ng-select>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-12 \\\" >\\r\\n                  <label for=\\\"direccion\\\">Direccion</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"direccion\\\" formControlName=\\\"\\\" (input)=\\\"onInput()\\\"\\r\\n                    [(ngModel)]=\\\"ubicacionForm.direccion\\\" [value]=\\\"ubicacionForm.direccion\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-12 text-center\\\" *ngIf=\\\"ubicacionForm.swActivarLatitud === false\\\">\\r\\n                  <label for=\\\"direccion\\\">Dirección </label> <br>\\r\\n                  <button class=\\\"btn btn-primary\\\" (click)=\\\"openModalUbicacion(seleccionarDireccion, i, 2)\\\" > \\r\\n                    Agregar Dirección </button>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-3\\\" *ngIf=\\\"ubicacionForm.swActivarLatitud === true\\\">\\r\\n                  <label for=\\\"ciudadUbi\\\">Latitud</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo_ubicacion\\\" formControlName=\\\"latitud\\\"\\r\\n                    (input)=\\\"onInput()\\\" [(ngModel)]=\\\"ubicacionForm.latitud\\\" [value]=\\\"ubicacionForm.latitud\\\"\\r\\n                    [readonly]=\\\"true\\\">\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-3\\\" *ngIf=\\\"ubicacionForm.swActivarLatitud === true\\\">\\r\\n                  <label for=\\\"ciudadUbi\\\">Longitud</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo_ubicacion\\\" formControlName=\\\"longitud\\\"\\r\\n                    (input)=\\\"onInput()\\\" [(ngModel)]=\\\"ubicacionForm.longitud\\\" [value]=\\\"ubicacionForm.longitud\\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div id=\\\"Contacto\\\" *ngFor=\\\"let contactoForm of contactoFormularios; let i = index\\\">\\r\\n            <div id=\\\"CollapseContacto\\\" [class.collapse]=\\\"!contactoCollapse\\\">\\r\\n              <div class=\\\"col mt-3\\\">\\r\\n                <!--  -->\\r\\n              </div>\\r\\n              <div class=\\\"row\\\"\\r\\n                style=\\\"border-radius: 13px; background-color: rgb(246, 243, 243);  border: 2px solid #33CD56;\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-12 mt-2\\\" align=\\\"right\\\">\\r\\n                      <button class=\\\"btn  btn-danger btn-sm\\\" (click)=\\\"eliminarContacto(i, 1)\\\">\\r\\n                        X\\r\\n                      </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"titulo_contacto\\\">TÍTULO DE CONTACTO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo_contacto\\\" formControlName=\\\"titulo_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\"\\r\\n                        [ngClass]=\\\"onFieldError('titulo_contacto') + ' ' + onFieldRequired('titulo_contacto')\\\"\\r\\n                        [value]=\\\"contactoForm.titulo_contacto\\\" (ngModelChange)=\\\"actualizarContacto($event, 1, i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"nombres_contacto\\\">NOMBRE</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nombres_contacto\\\" formControlName=\\\"nombres_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\" [value]=\\\"contactoForm.nombres_contacto\\\"\\r\\n                        (ngModelChange)=\\\"actualizarContacto($event, 2,  i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"apellido_contacto\\\">APELLIDO PATERNO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"apellido_contacto\\\" formControlName=\\\"apellido_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\" [value]=\\\"contactoForm.apellido_contacto\\\"\\r\\n                        (ngModelChange)=\\\"actualizarContacto($event, 3 , i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"apellido2_contacto\\\">APELLIDO MATERNO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"apellido2_contacto\\\"\\r\\n                        formControlName=\\\"apellido2_contacto\\\" (input)=\\\"onInput()\\\"\\r\\n                        [value]=\\\"contactoForm.apellido2_contacto\\\" (ngModelChange)=\\\"actualizarContacto($event, 4, i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"telefono_contacto\\\">TELÉFONO CONTACTO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"telefono_contacto\\\" formControlName=\\\"telefono_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\" [value]=\\\"contactoForm.telefono_contacto\\\"\\r\\n                        (ngModelChange)=\\\"actualizarContacto($event,5 , i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"celular_contacto\\\">CELULAR DE CONTACTO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"celular_contacto\\\" formControlName=\\\"celular_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\" [value]=\\\"contactoForm.celular_contacto\\\"\\r\\n                        (ngModelChange)=\\\"actualizarContacto($event, 6 , i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-6 mt-2\\\">\\r\\n                      <label for=\\\"direccion_contacto\\\">DIRECCIÓN DE CONTACTO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"direccion_contacto\\\"\\r\\n                        formControlName=\\\"direccion_contacto\\\" (input)=\\\"onInput()\\\"\\r\\n                        [value]=\\\"contactoForm.direccion_contacto\\\" (ngModelChange)=\\\"actualizarContacto($event, 7,  i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-12 mt-2 text-center\\\">\\r\\n                      <button class=\\\"btn btn-warning \\\" (click)=\\\"openModalUbicacion(seleccionarUbicacion, i, 1)\\\"> Agregar\\r\\n                        Ubicación </button>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- <label>CONTACTOS</label> -->\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <ng-template #seleccionarUbicacion>\\r\\n      <app-comercial-ciclo-vendas-cotacoes-precadastro-modal-ubicacion-contacto\\r\\n        (latLngChanged)=\\\"changeLatitudLongitud($event)\\\" (fecharModal)=\\\"onFecharModal($event)\\\"\\r\\n         [index]=\\\"this.indice\\\" [latitud] =\\\"this.latitud\\\"  [longitud] =\\\"this.longitud\\\" [tipo]= this.tipo_peticion\\r\\n         \\r\\n         [latitud_inicial] = \\\"this.latitud_inicial\\\" [longitud_inicial] = \\\"this.longitud_inicial\\\">\\r\\n      </app-comercial-ciclo-vendas-cotacoes-precadastro-modal-ubicacion-contacto>\\r\\n    </ng-template>\\r\\n    <ng-template #seleccionarDireccion>\\r\\n      <app-comercial-ciclo-vendas-cotacoes-precadastro-modal-ubicacion-contacto\\r\\n        (latLngChanged)=\\\"changeLatitudLongitud($event)\\\" (fecharModal)=\\\"onFecharModal($event)\\\"\\r\\n         [index]=\\\"this.indice\\\" [latitud] =\\\"this.latitud\\\"  [longitud] =\\\"this.longitud\\\" [tipo]= this.tipo_peticion\\r\\n         [latitud_inicial] = \\\"this.latitud_inicial\\\" [longitud_inicial] = \\\"this.longitud_inicial\\\"\\r\\n         >\\r\\n      </app-comercial-ciclo-vendas-cotacoes-precadastro-modal-ubicacion-contacto>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n</app-body>\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Detalles\\\"></app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col text-center\\\">\\r\\n      <h5 class=\\\"pt-2 mb-4\\\">{{ cliente.razaoSocial }}</h5>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mb-4\\\">\\r\\n    <div class=\\\"col d-flex justify-content-center w-100\\\">\\r\\n      <h5 tooltip=\\\"Código do cliente\\\">\\r\\n        <span class=\\\"badge badge-dark\\\">CÓD.: {{ cliente.codCliente }}</span>\\r\\n      </h5>\\r\\n      <h5 *ngIf=\\\"cliente.nomeVendedor\\\" class=\\\"ml-3\\\" tooltip=\\\"Vendedor\\\">\\r\\n        <span class=\\\"badge badge-light\\\">{{ cliente.nomeVendedor | uppercase }}</span>\\r\\n      </h5>\\r\\n      <h5 class=\\\"ml-3\\\" tooltip=\\\"Status\\\">\\r\\n        <span class=\\\"badge\\\" [ngClass]=\\\"classStatusBadge(cliente.status)\\\">{{ cliente.status | uppercase }}</span>\\r\\n      </h5>\\r\\n      <h5 *ngIf=\\\"cliente.codClienteDBA\\\" class=\\\"ml-3\\\" tooltip=\\\"Código DBA do cliente\\\">\\r\\n        <span class=\\\"badge badge-warning\\\">CÓD. DBA: {{ cliente.codClienteDBA }}</span>\\r\\n      </h5>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-9\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-folder-open\\\"\\r\\n            text=\\\"Datos de registro\\\"\\r\\n            [routerLink]=\\\"['../../cadastro', cliente.codCliente, 'dados-faturamento']\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n         <!--div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-chart-pie\\\"\\r\\n            text=\\\"Dashboard\\\"\\r\\n            [routerLink]=\\\"['../../dashboard', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div--> \\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-chart-bar\\\"\\r\\n            text=\\\"Histórico Financeiro\\\"\\r\\n            [routerLink]=\\\"['../../historico-financeiro', cliente.codCliente, 'resumo']\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-handshake\\\"\\r\\n            text=\\\"Ficha PAC\\\"\\r\\n            [routerLink]=\\\"['../../proposta-analise-credito', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div>\\r\\n      </div> -->\\r\\n      <!-- <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-shopping-cart\\\"\\r\\n            text=\\\"Vender\\\"\\r\\n            [routerLink]=\\\"['../../../ciclo-vendas/139/cotacoes-pedidos/lista/']\\\"\\r\\n            [queryParams]=\\\"{codCliente: cliente.codCliente}\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"far fa-calendar-alt\\\"\\r\\n            text=\\\"Agendar\\\"\\r\\n            [routerLink]=\\\"['../../../agenda/novo', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-tasks\\\"\\r\\n            text=\\\"Propuestas / Pedidos\\\"\\r\\n            [routerLink]=\\\"['../../../tid-software/11']\\\"\\r\\n            [queryParams]=\\\"{ codCliente: cliente.codCliente, sistema: 'vendas', modulo: 3 }\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-list\\\"\\r\\n            text=\\\"Últimos precios\\\"\\r\\n            [routerLink]=\\\"['../../../clientes/ultimos-precos', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialClientesDetalheService } from './../detalhes/detalhes.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro',\r\n  templateUrl: './historico-financeiro.component.html',\r\n  styleUrls: ['./historico-financeiro.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroComponent implements OnInit {\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  cliente: any = {};\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private detalhesService: ComercialClientesDetalheService,\r\n    private pnotifyService: PNotifyService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.activatedRoute.snapshot.data['response']['responseCode'] === 200) {\r\n      this.registrarAcesso();\r\n      this.getDetalhes();\r\n    } else if (\r\n      this.activatedRoute.snapshot.data['response']['responseCode'] === 403\r\n    ) {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\r\n      this.router.navigate(['/comercial/home']);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getDetalhes() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.detalhesService\r\n        .getDetalhes(params['id'])\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderFullScreen = false;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: any) => {\r\n            if (response['responseCode'] === 200) {\r\n              this.cliente = response['result'];\r\n              this.setBreadCrumb(params['id']);\r\n              this.onRouterChange();\r\n            } else {\r\n              this.handleLoadDependenciesError();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.handleLoadDependenciesError();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  handleLoadDependenciesError() {\r\n    this.pnotifyService.error();\r\n    this.location.back();\r\n  }\r\n\r\n  setBreadCrumb(id: number) {\r\n    let router = this.router.url.split('/');\r\n    let currRoute = router[router.length - 1];\r\n\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home'\r\n      },\r\n      {\r\n        descricao: 'Busqueda de clientes',\r\n        routerLink: '/comercial/clientes/lista'\r\n      },\r\n      {\r\n        descricao: 'Detalhes',\r\n        routerLink: `/comercial/clientes/detalhes/${id}`\r\n      },\r\n      {\r\n        descricao: 'Histórico financeiro',\r\n        routerLink: `/comercial/clientes/historico-financeiro/${id}/resumo`\r\n      },\r\n      {\r\n        descricao: this.breadCrumbConfig(currRoute)\r\n      }\r\n    ];\r\n  }\r\n\r\n  breadCrumbConfig(route: string) {\r\n    let descricao = '';\r\n\r\n    if (route == 'resumo') {\r\n      descricao = 'Resumo';\r\n    } else if (route == 'detalhes') {\r\n      descricao = 'Detalhes';\r\n    } else if (route == 'acumulos-mensais') {\r\n      descricao = 'Acúmulos mensais';\r\n    } else if (route == 'notas-promissorias') {\r\n      descricao = 'Notas promissórias';\r\n    } else if (route == 'debitos') {\r\n      descricao = 'Débitos em aberto';\r\n    } else if (route == 'corte-dobra') {\r\n      descricao = 'Corte Dobra';\r\n    } else {\r\n      descricao = 'Materiais da duplicata';\r\n    }\r\n\r\n    this.titleService.setTitle(descricao);\r\n\r\n    return descricao;\r\n  }\r\n\r\n  onRouterChange() {\r\n    this.router.events.subscribe(event => {\r\n      this.activatedRoute.params.subscribe(params => {\r\n        this.setBreadCrumb(params['id']);\r\n      });\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3ByZS1jYWRhc3Ryby91YmljYWNpb25fY29udGFjdG8vdWJpY2FjaW9uLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-materiais-duplicata',\r\n  templateUrl: './materiais-duplicata.component.html',\r\n  styleUrls: ['./materiais-duplicata.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent\r\n  implements OnInit {\r\n  principal: any = {};\r\n  historicoCobrancas: any = {};\r\n  ocorrenciasDuplicatas: any = {};\r\n  ocorrenciasComerciais: any = {};\r\n  duplicataLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.historicoFinanceiroService\r\n        .getMateriaisDuplicata(params)\r\n        .subscribe((response: any) => {\r\n          if (response['responseCode'] === 200) {\r\n            this.principal = response['result']['principal'];\r\n            this.historicoCobrancas = response['result']['historicoCobrancas'];\r\n            this.ocorrenciasDuplicatas =\r\n              response['result']['ocorrenciasDuplicatas'];\r\n            this.ocorrenciasComerciais =\r\n              response['result']['ocorrenciasComerciais'];\r\n          }\r\n          this.duplicataLoaded = true;\r\n        });\r\n    });\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!notasPromissoriasLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de pagarés...</strong>\\r\\n    </div>\\r\\n    <custom-table [config]=\\\"tableConfig\\\">\\r\\n      <ng-template #thead let-thead *ngIf=\\\"notasPromissorias.length > 0 && notasPromissoriasLoaded\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Registro</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Bancário</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Baixa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor da baixa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencimento</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor da duplicata</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let nota of notasPromissorias\\\">\\r\\n          <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(nota.situacao)\\\">{{ nota.numRegistro }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.numBancario }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.dataBaixa }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.valorBaixa | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.dataVencimento }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.valorDuplicata | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"notasPromissorias.length > 0 && notasPromissoriasLoaded\\\">\\r\\n      <div class=\\\"col-6 d-flex justify-content-center w-100\\\">\\r\\n        <div class=\\\"d-flex justify-content-around\\\">\\r\\n          <div class=\\\"legend green\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">BAIXADA</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend blue\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">QUITADA</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result\\r\\n      message=\\\"Nenhuma informação encontrada\\\"\\r\\n      *ngIf=\\\"notasPromissorias.length == 0 && notasPromissoriasLoaded\\\">\\r\\n    </empty-result>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL25vdGFzLXByb21pc3Nvcmlhcy9ub3Rhcy1wcm9taXNzb3JpYXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL3Jlc3Vtby9yZXN1bW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FunctionsService {\r\n  completaZeroEsquerda(valor: any, tamanho: number): string {\r\n    if (valor === null) return null;\r\n\r\n    valor = valor.toString();\r\n    valor = valor.trim();\r\n\r\n    if (valor.length < tamanho) {\r\n      for (let i = valor.length; i < tamanho; i++) {\r\n        valor = `0${valor}`;\r\n      }\r\n    }\r\n\r\n    return valor;\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { EMPTY } from 'rxjs';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-comercial-ciclo-vendas-cotacoes-precadastro-modal-ubicacion-contacto',\r\n  templateUrl: './ubicacion.component.html',\r\n  styleUrls: ['./ubicacion.component.scss']\r\n})\r\n\r\nexport class PreCadastroUbicacionContactosComponent\r\n  implements OnInit {\r\n  \r\n  @Input('tipo') tipo: number;\r\n  @Input('index') index: number;\r\n  @Input('latitud') latitud: number;\r\n  @Input('longitud') longitud: number;\r\n  @Input('latitud_inicial') latitud_inicial: number;\r\n  @Input('longitud_inicial') longitud_inicial: number;\r\n\r\n  @Output() latLngChanged = new EventEmitter<{ latitud: number, longitud: number, direccion: any, index: number, tipo:number }>();\r\n  @Output() fecharModal = new EventEmitter();\r\n\r\n\r\n  loaderModal: boolean;\r\n  swDesactivarForm = true;\r\n  form: FormGroup;\r\n\r\n  tipoCalculo: number;\r\n  descPreco: string;\r\n  descQtde: string;\r\n\r\n  currencyMaskOptions = {\r\n    align: 'left',\r\n    prefix: '',\r\n    thousands: '.',\r\n    decimal: ',',\r\n    precision: 3,\r\n  };\r\n\r\n  opcoesVenda: Array<any> = [];\r\n  arrayPresentacion: Array<any> = [];\r\n  swPresentacion = false;\r\n  id_presentacion: number = 0;\r\n\r\n  direccion: string;\r\n  direccion_mapa_act: string;\r\n  showModal: boolean = true;\r\n  showImpostos = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private bsModalRef: BsModalRef,\r\n    private pnotifyService: PNotifyService,\r\n    private confirmModalService: ConfirmModalService,\r\n\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    this.estadoMapa()\r\n    this.form = this.formBuilder.group({\r\n      latitud: [this.latitud],\r\n      longitud: [this.longitud],\r\n      direccion: [this.direccion],\r\n\r\n    });\r\n  }\r\n\r\n  estadoMapa() {\r\n    if (this.latitud === 0) {\r\n      this.latitud = this.latitud_inicial;\r\n    }\r\n    if (this.longitud === 0 ) {\r\n      this.longitud = this.longitud_inicial;\r\n    }\r\n  }\r\n\r\n  actualizarMarcador(event: any) {\r\n    this.latitud = event.coords.lat;\r\n    this.longitud = event.coords.lng;\r\n    this.form.controls['latitud'].setValue(this.latitud);\r\n    this.form.controls['longitud'].setValue(this.longitud);\r\n    this.actualizarDireccion(event);\r\n  }\r\n  actualizarDireccion(event: any) {\r\n    this.obtenerDireccion(event.coords.lat, event.coords.lng)\r\n      .then((direccion_mapa: string) => {\r\n        this.direccion_mapa_act = direccion_mapa;\r\n        this.form.controls['direccion'].setValue(direccion_mapa);\r\n      })\r\n      .catch((error: any) => {\r\n        this.form.controls['direccion'].setValue(\r\n          'Error al obtener la dirección'\r\n        );\r\n      });\r\n  }\r\n  public obtenerDireccion(latitud: number, longitud: number): Promise<string> {\r\n    return fetch(\r\n      `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitud},${longitud}&key=AIzaSyDl5b7STz9xYNDhybTTer2POVncX9FYqCc`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const resultado = data.results[0];\r\n        if (resultado) {\r\n          return resultado.formatted_address;\r\n        } else {\r\n          return 'Dirección no encontrada';\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return 'Error al obtener la dirección';\r\n      });\r\n  }\r\n\r\n  emitLatLng() {\r\n    this.latLngChanged.emit({ latitud: this.latitud, \r\n      longitud: this.longitud, direccion: this.direccion_mapa_act, index: this.index, tipo: this.tipo });\r\n    this.onClose();\r\n  }\r\n  onSubmit(): void {\r\n    this.emitLatLng();\r\n  }\r\n\r\n  onClose(): void {\r\n    this.fecharModal.emit(true);\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!pedidosLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de duplicados...</strong>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"pedidos.length > 0 && pedidosLoaded\\\">\\r\\n      <div class=\\\"row justify-content-between\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <div class=\\\"d-flex\\\">\\r\\n            <div class=\\\"legend green\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">ABIERTO</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend blue\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">QUITADA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend yellow\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">VENCIDA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend red\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">PROTESTA</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"filtro\\\" class=\\\"col-2 text-right pb-0 pt-1 pr-2\\\">Filtrar</label>\\r\\n            <div class=\\\"col-10 pl-0\\\">\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control form-control-sm\\\"\\r\\n                id=\\\"filtro\\\"\\r\\n                placeholder=\\\"Número da duplicata\\\"\\r\\n                #filtro\\r\\n                (input)=\\\"onFilter(filtro.value)\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Facturamiento</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. pedido</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicar</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencimiento</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Banco</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Baja</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Pré-datada</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Atraso</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Entrega</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let pedido of pedidosPagination\\\">\\r\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(pedido.situacao)\\\">{{ pedido.empresa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataFaturamento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numPedido }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numDuplicata }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataVencimento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.banco }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataBaixa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.tipoBaixa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataPreDatada }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.atraso }} dias</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.entrega }} dias</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <a\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Materiais da duplicata\\\"\\r\\n                container=\\\"body\\\"\\r\\n                [routerLink]=\\\"['../materiais-duplicata']\\\"\\r\\n                [queryParams]=\\\"{\\r\\n                  codEmpresa: pedido.idEmpresa,\\r\\n                  numPedido: pedido.numPedido,\\r\\n                  sequencia: pedido.sequencia\\r\\n                }\\\">\\r\\n                <i class=\\\"fas fa-search\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"pedidosLoaded\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"pedidosFiltered.length > itemsPerPage\\\">\\r\\n            <pagination\\r\\n              [maxSize]=\\\"maxSize\\\"\\r\\n              [totalItems]=\\\"pedidosFiltered.length\\\"\\r\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n              [boundaryLinks]=\\\"true\\\"\\r\\n              previousText=\\\"&lsaquo;\\\"\\r\\n              nextText=\\\"&rsaquo;\\\"\\r\\n              firstText=\\\"&laquo;\\\"\\r\\n              lastText=\\\"&raquo;\\\">\\r\\n            </pagination>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"pedidos.length == 0 && pedidosLoaded\\\"></empty-result>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"row mb-4\\\">\\r\\n  <div class=\\\"col mb-4\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-orange rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-hand-holding-usd\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.atrasoPagamento\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoAtrasoPagamento = $event\\\">\\r\\n          {{ handleCounter(countoAtrasoPagamento) }} dias\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">MÉDIA ATRASO PAGTO</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-gray rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-truck-moving\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.tempoEntrega\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoTempoEntrega = $event\\\">\\r\\n          {{ handleCounter(countoTempoEntrega) }} dias\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">MÉDIA TEMPO ENTREGA</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-red rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-dollar-sign\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.totalAtraso == 0\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.totalAtraso\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoTotalAtraso = $event\\\">\\r\\n          {{ countoTotalAtraso | currency:'BRL':'symbol':'1.2-2' }}\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">TOTAL EM ATRASO</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.totalAtraso == 0\\\">\\r\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">TOTAL EM ATRASO</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-green rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-file-invoice-dollar\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.pagtoAntecipado == 0\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.pagtoAntecipado\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoPagtoAntecipado = $event\\\">\\r\\n          {{ countoPagtoAntecipado | currency:'BRL':'symbol':'1.2-2' }}\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">ANTECIPADO DISPONÍVEL</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.pagtoAntecipado == 0\\\">\\r\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">ANTECIPADO DISPONÍVEL</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-blue rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-building\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.creditoSeguradora == 0\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.creditoSeguradora\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoCreditoSeguradora = $event\\\">\\r\\n          {{ countoCreditoSeguradora | currency:'BRL':'symbol':'1.2-2' }}\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">CRÉDITO SEGURADORA</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.creditoSeguradora == 0\\\">\\r\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">CRÉDITO SEGURADORA</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!pedidosLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carregando duplicatas...</strong>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"pedidos.length > 0 && pedidosLoaded\\\">\\r\\n      <div class=\\\"row justify-content-between\\\">\\r\\n        <div class=\\\"col-6 d-flex\\\">\\r\\n          <div class=\\\"d-flex my-auto\\\">\\r\\n            <div class=\\\"legend green\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">EM ABERTO</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend blue\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">QUITADA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend yellow\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">VENCIDA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend red\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">PROTESTO</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"filtro\\\" class=\\\"col-3 text-right pb-0 pt-1 pr-2\\\">Filtrar</label>\\r\\n            <div class=\\\"col-9 pl-0\\\">\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control form-control-sm\\\"\\r\\n                id=\\\"filtro\\\"\\r\\n                placeholder=\\\"Número da duplicata\\\"\\r\\n                #filtro\\r\\n                (input)=\\\"onFilter(filtro.value)\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Faturamento</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. pedido</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicata</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencto</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Baixa</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let pedido of pedidosPagination\\\">\\r\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(pedido.situacao)\\\">{{ pedido.empresa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataFaturamento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numPedido }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numDuplicata }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataVencimento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataBaixa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <a\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Materiais da duplicata\\\"\\r\\n                container=\\\"body\\\"\\r\\n                [routerLink]=\\\"['../materiais-duplicata']\\\"\\r\\n                [queryParams]=\\\"{\\r\\n                  codEmpresa: pedido.idEmpresa,\\r\\n                  numPedido: pedido.numPedido,\\r\\n                  sequencia: pedido.sequencia\\r\\n                }\\\">\\r\\n                <i class=\\\"fas fa-search\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"row mt-3\\\" *ngIf=\\\"pedidosLoaded\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"pedidosFiltered.length > itemsPerPage\\\">\\r\\n            <pagination\\r\\n              [maxSize]=\\\"maxSize\\\"\\r\\n              [totalItems]=\\\"pedidosFiltered.length\\\"\\r\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n              [boundaryLinks]=\\\"true\\\"\\r\\n              previousText=\\\"&lsaquo;\\\"\\r\\n              nextText=\\\"&rsaquo;\\\"\\r\\n              firstText=\\\"&laquo;\\\"\\r\\n              lastText=\\\"&raquo;\\\">\\r\\n            </pagination>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada nos últimos 12 meses. Para períodos anteriores veja em Detalhes.\\\" *ngIf=\\\"pedidos.length == 0 && pedidosLoaded\\\"></empty-result>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"d-flex justify-content-between w-100 mb-2\\\">\\r\\n      <div>\\r\\n        <h6>\\r\\n          <span class=\\\"mr-2\\\">Grupo econômico</span>\\r\\n          <a\\r\\n            href=\\\"javascript:void(0)\\\"\\r\\n            *ngIf=\\\"grupoEconomicoLoaded && grupoEconomico.length > 1\\\"\\r\\n            (click)=\\\"onGrupoEconomico(modalGrupoEconomico)\\\">(ver detalhes)\\r\\n          </a>\\r\\n        </h6>\\r\\n        <small class=\\\"form-text text-muted\\\">VISÃO DO GRUPO ECONÔMICO NO HISTÓRICO FINANCEIRO</small>\\r\\n      </div>\\r\\n      <div class=\\\"custom-control custom-switch my-auto\\\" *ngIf=\\\"grupoEconomicoLoaded && grupoEconomico.length > 1\\\">\\r\\n        <input\\r\\n        type=\\\"checkbox\\\"\\r\\n        class=\\\"custom-control-input\\\"\\r\\n        id=\\\"grupoEconomico\\\"\\r\\n        [checked]=\\\"visaoGrupoEconomico\\\"\\r\\n        (change)=\\\"onChangeGrupoEconomico()\\\"\\r\\n        [disabled]=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <label class=\\\"custom-control-label\\\" for=\\\"grupoEconomico\\\"></label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item bg-green\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong class=\\\"text-white\\\">Saldo para faturar</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-white\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.saldo\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoSaldo = $event\\\"\\r\\n            [hidden]=\\\"pendencias.saldo == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoSaldo | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-white\\\" *ngIf=\\\"pendencias.saldo == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-white\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <h6 class=\\\"my-2\\\">\\r\\n      <a\\r\\n        href=\\\"javascript:void(0)\\\"\\r\\n        (click)=\\\"showPendenciasDetalhes = !showPendenciasDetalhes\\\">\\r\\n        <span *ngIf=\\\"!showPendenciasDetalhes\\\"><i class=\\\"fas fa-chevron-up\\\"></i> ver detalhes</span>\\r\\n        <span *ngIf=\\\"showPendenciasDetalhes\\\"><i class=\\\"fas fa-chevron-down\\\"></i> esconder detalhes</span>\\r\\n      </a>\\r\\n    </h6>\\r\\n    <ul class=\\\"list-group\\\" *ngIf=\\\"showPendenciasDetalhes\\\">\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Títulos em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.titulos\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoTitulos = $event\\\"\\r\\n            [hidden]=\\\"pendencias.titulos == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoTitulos | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.titulos == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Notas de débitos em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.notasDebito\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoNotasDebito = $event\\\"\\r\\n            [hidden]=\\\"pendencias.notasDebito == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoNotasDebito | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.notasDebito == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Notas promissórias em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.notasPromissorias\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoNotasPromissorias = $event\\\"\\r\\n            [hidden]=\\\"pendencias.notasPromissorias == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoNotasPromissorias | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.notasPromissorias == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Cheques devolvidos</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.chequesDevolvidos\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoChequesDevolvidos = $event\\\"\\r\\n            [hidden]=\\\"pendencias.chequesDevolvidos == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoChequesDevolvidos | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.chequesDevolvidos == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Corte dobra liberado p/ produção</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.corteDobra\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoCorteDobra = $event\\\"\\r\\n            [hidden]=\\\"pendencias.corteDobra == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoCorteDobra | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.corteDobra == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Reserva de bobinas em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.reservaBobinas\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoReservaBobinas = $event\\\"\\r\\n            [hidden]=\\\"pendencias.reservaBobinas == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoReservaBobinas | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.reservaBobinas == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Limite de crédito</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.limiteCredito\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoLimiteCredito = $event\\\"\\r\\n            [hidden]=\\\"pendencias.limiteCredito == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoLimiteCredito | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.limiteCredito == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #modalGrupoEconomico>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\">Grupo econômico</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCloseModalGrupoEconomico()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <custom-table>\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód. cliente</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Razão social</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of grupoEconomico\\\">\\r\\n          <td class=\\\"text-center\\\">{{ item.tipo }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.codCliente }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.razaoSocial }}</td>\\r\\n          <td class=\\\"text-center\\\">\\r\\n            <a\\r\\n              class=\\\"btn-icon-sm\\\"\\r\\n              tooltip=\\\"Visualizar histórico financeiro\\\"\\r\\n              container=\\\"body\\\"\\r\\n              [routerLink]=\\\"['../../../historico-financeiro', item.codCliente, 'resumo']\\\"\\r\\n              (click)=\\\"onCloseModalGrupoEconomico()\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n            </a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\n\r\n// Services\r\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\r\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from '../cadastro/dados-faturamento/formulario/formulario.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take,  retry} from 'rxjs/operators';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesPreCadastroService {\r\n  private readonly BASE_URL: string = `http://23.254.204.187/api`   ;\r\n\r\n  constructor(\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private dadosFaturamentoService: ComercialClientesCadastroDadosFaturamentoFormularioService,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  loadDependencies() {\r\n    let vendedores = this.vendedoresService.getVendedores() ;\r\n    let cnaes = this.dadosFaturamentoService.getCnaes();\r\n    let ciudades = this.dadosFaturamentoService.getCiudades(); // Agregar esta línea\r\n    return forkJoin([vendedores, cnaes, ciudades]); // Agregar ciudades aquí\r\n  }\r\n\r\n  getCiudades() {\r\n    let ciudades = this.dadosFaturamentoService.getCiudades();\r\n    return forkJoin(ciudades);\r\n  }\r\n\r\n\r\n  getCenaes(){\r\n    let cnaes = this.dadosFaturamentoService.getCnaes();\r\n    return forkJoin(cnaes);\r\n  }\r\n\r\n  /* updateCliente(params){\r\n    return this.http.post(\r\n      `${this.BASE_URL}/sap/cliente_update`,\r\n      params,\r\n      { observe: 'response' }\r\n    );\r\n  } */\r\n\r\n  updateCliente(params: any){\r\n    return this.http\r\n      .post(`http://23.254.204.187/api/sap/cliente_update`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  postAkna(param){\r\n    return this.http.post(\r\n      `${this.BASE_URL}/sap/actualizar_item`,\r\n      param,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n}\r\nfunction tap(arg0: (data: any) => void): import(\"rxjs\").OperatorFunction<Object, unknown> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialClientesCadastroDadosFaturamentoRulesResolverGuard } from './cadastro/dados-faturamento/formulario/formulario-rules-resolver.guard';\r\nimport { ComercialClientesDetalhesResolverGuard } from './detalhes/detalhes-resolver.guard';\r\nimport { ComercialClientesResolverGuard } from './clientes-resolver.guard';\r\nimport { ComercialClientesPropostaAnaliseCreditoResolverGuard } from './proposta-analise-credito/proposta-analise-credito-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialClientesListaComponent } from './lista/lista.component';\r\nimport { ComercialClientesPreCadastroComponent } from './pre-cadastro/pre-cadastro.component';\r\nimport { ComercialClientesDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesDashboardComponent } from './dashboard/dashboard.component';\r\nimport { ComercialClientesPropostaAnaliseCreditoComponent } from './proposta-analise-credito/proposta-analise-credito.component';\r\nimport { ComercialClientesUltimosPrecosComponent } from './ultimos-precos/ultimos-precos.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialClientesListaComponent },\r\n  {\r\n    path: 'pre-cadastro',\r\n    component: ComercialClientesPreCadastroComponent,\r\n    resolve: {\r\n      rules: ComercialClientesCadastroDadosFaturamentoRulesResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'detalhes/:id',\r\n    component: ComercialClientesDetalhesComponent,\r\n    resolve: {\r\n      response: ComercialClientesDetalhesResolverGuard,\r\n    },\r\n  },\r\n  {\r\n    path: 'cadastro',\r\n    loadChildren: () =>\r\n      import('./cadastro/cadastro.module').then(\r\n        (m) => m.ComercialClientesCadastroModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'dashboard/:id',\r\n    component: ComercialClientesDashboardComponent,\r\n    resolve: {\r\n      response: ComercialClientesResolverGuard,\r\n    },\r\n  },\r\n  {\r\n    path: 'historico-financeiro',\r\n    loadChildren: () =>\r\n      import('./historico-financeiro/historico-financeiro.module').then(\r\n        (m) => m.ComercialClientesHistoricoFinanceiroModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'ultimos-precos/:id',\r\n    component: ComercialClientesUltimosPrecosComponent,\r\n  },\r\n  {\r\n    path: 'proposta-analise-credito/:id',\r\n    component: ComercialClientesPropostaAnaliseCreditoComponent,\r\n    resolve: {\r\n      data: ComercialClientesPropostaAnaliseCreditoResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/comercial/home',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialClientesRoutingModule {}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { ComercialClientesUltimosPrecosService } from '../ultimos-precos/ultimos-precos.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialService } from '../../comercial.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'ultimos-precos',\r\n  templateUrl: './ultimos-precos.component.html',\r\n  styleUrls: ['./ultimos-precos.component.scss'],\r\n})\r\nexport class ComercialClientesUltimosPrecosComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n\r\n  codCliente: number;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<any> = [];\r\n  dadosPagination: Array<any> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  ultimoPrecoSelecionado: any;\r\n  alteracoes: Array<any> = [];\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private ultimosPrecos: ComercialClientesUltimosPrecosService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private dateService: DateService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.codCliente = params.id;\r\n    });\r\n\r\n    this.registrarAcesso();\r\n    this.setFormFilter();\r\n    this.setBreadCrumb(this.codCliente);\r\n    this.titleService.setTitle('Ultimos Preços');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setFormFilter() {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      dataInicial: [formValue.dataInicial, [Validators.required]],\r\n      dataFinal: [formValue.dataFinal, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb(id: number) {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home',\r\n      },\r\n      {\r\n        descricao: 'Busqueda de clientes',\r\n        routerLink: '/comercial/clientes/lista',\r\n      },\r\n      {\r\n        descricao: 'Detalhes',\r\n        routerLink: `/comercial/clientes/detalhes/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Ultimos Preços',\r\n      },\r\n    ];\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      dataInicial: this.dateService.getFirstDayMonth(),\r\n      dataFinal: this.dateService.getLastDayMonth(),\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\r\n                  formValue[formKey] = this.dateService.convertStringToDate(\r\n                    params[paramKey],\r\n                    'pt-br'\r\n                  );\r\n                } else {\r\n                  if (!isNaN(Number(params[paramKey]))) {\r\n                    formValue[formKey] = Number(params[paramKey]);\r\n                  } else {\r\n                    formValue[formKey] = params[paramKey];\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.dataInicial) {\r\n      params.dataInicial = this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.dataInicial)\r\n      );\r\n    }\r\n\r\n    if (this.form.value.dataFinal) {\r\n      params.dataFinal = this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.dataFinal)\r\n      );\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    params.codCliente = this.codCliente;\r\n\r\n    this.ultimosPrecos\r\n      .getListaUltimosPrecos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2VkaXRhci9lZGl0YXIuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!debitosLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de débitos pendientes...</strong>\\r\\n    </div>\\r\\n    <custom-table *ngIf=\\\"debitos.length > 0 && debitosLoaded\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data Pedido</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Pedido</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Duplicata</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Duplicata</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Juros</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Cartório</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Tarifa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data Tarifa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Tarifa</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let debito of debitos\\\">\\r\\n          <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(debito.situacao)\\\">{{ debito.dataPedido }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.numPedido }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.numDuplicata }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.valorDuplicata | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.juros }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.valorCartorio | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.tarifa }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.dataTarifa }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.valorTarifa | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <empty-result\\r\\n      message=\\\"Nenhuma informação encontrada\\\"\\r\\n      *ngIf=\\\"debitos.length == 0 && debitosLoaded\\\">\\r\\n    </empty-result>\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"debitos.length > 0 && debitosLoaded\\\">\\r\\n      <div class=\\\"col-6 d-flex justify-content-center w-100\\\">\\r\\n        <div class=\\\"d-flex justify-content-around\\\">\\r\\n          <div class=\\\"legend green\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">DÉBITO CON NOTA</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend blue\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">DÉBITO CON NOTA</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3Byb3Bvc3RhLWFuYWxpc2UtY3JlZGl0by9wcm9wb3N0YS1hbmFsaXNlLWNyZWRpdG8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesPropostaAnaliseCreditoResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(private clienteService: ComercialClientesService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['id']) {\r\n      return this.clienteService.getPropostaAnaliseCredito(route.params['id']);\r\n    }\r\n\r\n    return of({\r\n      result: {\r\n        razaoSocial: null,\r\n        codCliente: null,\r\n        codSAP: null,\r\n        limiteCredito: null,\r\n        setorAtividade: null,\r\n        nomeVendedor: null,\r\n        telefoneVendedor: null,\r\n        nomeEscritorio: null\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// ngx-filter-pipe\r\nimport { FilterPipeModule } from 'ngx-filter-pipe';\r\n\r\n// Counto\r\nimport { CountoModule } from 'angular2-counto';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialHistoricoFinanceiroRoutingModule } from './historico-financeiro-routing.module';\r\n\r\n// Components\r\nimport { ComercialClientesHistoricoFinanceiroComponent } from './historico-financeiro.component';\r\nimport { ComercialClientesHistoricoFinanceiroResumoComponent } from './resumo/resumo.component';\r\nimport { ComercialClientesHistoricoFinanceiroDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent } from './materiais-duplicata/materiais-duplicata.component';\r\nimport { ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent } from './acumulos-mensais/acumulos-mensais.component';\r\nimport { ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent } from './notas-promissorias/notas-promissorias.component';\r\nimport { ComercialClientesHistoricoFinanceiroDebitosComponent } from './debitos/debitos.component';\r\nimport { ComercialClientesHistoricoFinanceiroCorteDobraComponent } from './corte-dobra/corte-dobra.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialClientesHistoricoFinanceiroComponent,\r\n    ComercialClientesHistoricoFinanceiroResumoComponent,\r\n    ComercialClientesHistoricoFinanceiroDetalhesComponent,\r\n    ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent,\r\n    ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent,\r\n    ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent,\r\n    ComercialClientesHistoricoFinanceiroDebitosComponent,\r\n    ComercialClientesHistoricoFinanceiroCorteDobraComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TooltipModule,\r\n    PaginationModule,\r\n    TabsModule,\r\n    FilterPipeModule,\r\n    CountoModule,\r\n    SharedModule,\r\n    TemplatesModule.forRoot(),\r\n    ComercialHistoricoFinanceiroRoutingModule\r\n  ]\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// ngx-filter-pipe\r\nimport { FilterPipe } from 'ngx-filter-pipe';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-detalhes',\r\n  templateUrl: './detalhes.component.html',\r\n  styleUrls: ['./detalhes.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroDetalhesComponent\r\n  implements OnInit {\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  codCliente: number;\r\n\r\n  pedidos: any = [];\r\n  pedidosPagination: any = [];\r\n  pedidosFiltered: any = [];\r\n  pedidosLoaded: boolean = false;\r\n\r\n  maxSize: number = 10;\r\n  itemsPerPage: number = 10;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService,\r\n    private filterPipe: FilterPipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(queryParams => {\r\n      this.activatedRoute.parent.params.subscribe(params => {\r\n        let grupoEconomico = false;\r\n\r\n        if (\r\n          queryParams['grupoEconomico'] &&\r\n          queryParams['grupoEconomico'] == 'true'\r\n        ) {\r\n          grupoEconomico = true;\r\n        }\r\n\r\n        this.codCliente = params['id'];\r\n        this.getPedidos(this.codCliente, grupoEconomico);\r\n      });\r\n    });\r\n  }\r\n\r\n  getPedidos(id: number, grupoEconomico: boolean) {\r\n    this.historicoFinanceiroService\r\n      .getDetalhesPedidos(id, grupoEconomico)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.pedidos = response['result'];\r\n          this.pedidosFiltered = response['result'];\r\n          this.pedidosPagination = this.pedidosFiltered.slice(\r\n            0,\r\n            this.itemsPerPage\r\n          );\r\n        }\r\n        this.pedidosLoaded = true;\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'EM ABERTO') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'QUITADA') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'VENCIDA') {\r\n      borderClass = 'border-warning';\r\n    } else if (status == 'PROTESTO') {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.pedidosPagination = this.pedidos.slice(startItem, endItem);\r\n  }\r\n\r\n  onFilter(value: string) {\r\n    if (value) {\r\n      this.pedidosFiltered = this.filterPipe.transform(this.pedidos, {\r\n        numDuplicata: value\r\n      });\r\n    } else {\r\n      this.pedidosFiltered = this.pedidos;\r\n    }\r\n\r\n    this.pedidosPagination = this.pedidosFiltered.slice(0, this.itemsPerPage);\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { PreCadastroUbicacionContactosComponent } from './ubicacion.component'; \r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n/* import { ComercialCicloVendasCotacoesService } from '../../../../cotacoes.service';\r\n */\r\n// Interfaces\r\n/* import { ICarrinhoModel } from '../../../models/carrinho'; */\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class PreCadastroUbicacionContactosService {\r\n\r\n    loaderNavbar: EventEmitter<boolean> = new EventEmitter();\r\n\r\n    constructor(\r\n        private modalService: BsModalService,\r\n        private pnotifyService: PNotifyService,\r\n\r\n    ) {\r\n        this.pnotifyService.getPNotify();\r\n    }\r\n\r\n    showModal(): void {\r\n        this.loaderNavbar.emit(true);\r\n        const modalConfig = {\r\n            animated: false,\r\n            class: 'modal-lg',\r\n            ignoreBackdropClick: true,\r\n            keyboard: false,\r\n        };\r\n        const initialState = {\r\n\r\n        };\r\n        this.modalService.show(\r\n            PreCadastroUbicacionContactosComponent,\r\n            Object.assign({}, modalConfig, {\r\n                initialState,\r\n            })\r\n        );\r\n\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ModalModule, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// Counto\r\nimport { CountoModule } from 'angular2-counto';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialClientesRoutingModule } from './clientes-routing.module';\r\n\r\n// Components\r\nimport { ComercialClientesListaComponent } from './lista/lista.component';\r\nimport { ComercialClientesPreCadastroComponent } from './pre-cadastro/pre-cadastro.component';\r\nimport { ComercialClientesDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesDashboardModule } from './dashboard/dashboard.module';\r\nimport { ComercialClientesHistoricoFinanceiroModule } from './historico-financeiro/historico-financeiro.module';\r\nimport { ComercialClientesPropostaAnaliseCreditoComponent } from './proposta-analise-credito/proposta-analise-credito.component';\r\nimport { ComercialClientesUltimosPrecosComponent } from './ultimos-precos/ultimos-precos.component';\r\nimport { EditarClienteComponent } from './editar/editar.component';\r\nimport { PreCadastroUbicacionContactosComponent } from './pre-cadastro/ubicacion_contacto/ubicacion.component';\r\n\r\n\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialClientesListaComponent,\r\n    ComercialClientesPreCadastroComponent,\r\n    ComercialClientesDetalhesComponent,\r\n    ComercialClientesPropostaAnaliseCreditoComponent,\r\n    ComercialClientesUltimosPrecosComponent,\r\n    EditarClienteComponent,\r\n    PreCadastroUbicacionContactosComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TooltipModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    CountoModule,\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    CurrencyMaskModule,\r\n    SharedModule,\r\n    TemplatesModule.forRoot(),\r\n    ComercialClientesRoutingModule,\r\n    ComercialClientesDashboardModule,\r\n    ComercialClientesHistoricoFinanceiroModule, \r\n    \r\n  \r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyDl5b7STz9xYNDhybTTer2POVncX9FYqCc' // Reemplaza con tu propia clave de API de Google Maps\r\n    }),\r\n    \r\n  ],\r\n  exports: [EditarClienteComponent],\r\n  entryComponents: [EditarClienteComponent, PreCadastroUbicacionContactosComponent],\r\n  providers: [\r\n    BsModalRef\r\n  ]\r\n})\r\nexport class ComercialClientesModule {}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Histórico financeiro\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['resumo']\\\">\\r\\n    Resumen\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['detalhes']\\\">\\r\\n    Detalles\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['acumulos-mensais']\\\">\\r\\n    Acumulaciones mensuales\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['notas-promissorias']\\\">\\r\\n    Pagarés  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['debitos']\\\">\\r\\n    Débitos\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['corte-dobra']\\\">\\r\\n    Corte Doblado\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [show]=\\\"!loaderFullScreen\\\" [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h5 class=\\\"d-inline-block mb-0 mr-3\\\" tooltip=\\\"Código do cliente\\\">\\r\\n        <span class=\\\"badge badge-dark\\\">CÓD.: {{ cliente.codCliente }}</span>\\r\\n      </h5>\\r\\n      <h6 class=\\\"d-inline-block mb-0\\\">{{ cliente.razaoSocial }}</h6>\\r\\n    </div>\\r\\n  </div>\\r\\n  <router-outlet></router-outlet>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesResolverGuard implements Resolve<any> {\r\n  constructor(private clientesService: ComercialClientesService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['id']) {\r\n      return this.clientesService.getPermissaoAcesso(route.params['id']);\r\n    }\r\n\r\n    return of({\r\n      responseCode: 403\r\n    });\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n//components\r\nimport { EditarClienteComponent } from './editar.component';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EditarClienteService {\r\n    loaderNavbar: EventEmitter<boolean> = new EventEmitter();\r\n    \r\n    private modalRef: BsModalRef;\r\n\r\n    constructor(\r\n        private modalAutorizacionService: BsModalService,\r\n        private pnotifyService: PNotifyService,\r\n\r\n    ) {\r\n        this.pnotifyService.getPNotify();\r\n    }\r\n\r\n    showModal(): void {\r\n        this.loaderNavbar.emit(true);\r\n        const modalConfig = {\r\n            animated: false,\r\n            class: 'modal-lg',\r\n            ignoreBackdropClick: true,\r\n            keyboard: false,\r\n        };\r\n\r\n        this.modalAutorizacionService.show(EditarClienteComponent, {\r\n            initialState: {  },\r\n        });\r\n\r\n    }\r\n\r\n    hide() {\r\n        if (this.modalRef) {\r\n            this.modalRef.hide();\r\n        }\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL21hdGVyaWFpcy1kdXBsaWNhdGEvbWF0ZXJpYWlzLWR1cGxpY2F0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-corte-dobra',\r\n  templateUrl: './corte-dobra.component.html',\r\n  styleUrls: ['./corte-dobra.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroCorteDobraComponent\r\n  implements OnInit {\r\n  corteDobra: any = [];\r\n  corteDobraLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getCorteDobra(params['id']);\r\n    });\r\n  }\r\n\r\n  getCorteDobra(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getCorteDobra(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.corteDobra = response['result'];\r\n        }\r\n        this.corteDobraLoaded = true;\r\n      });\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!corteDobraLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carregando Corte Dobra...</strong>\\r\\n    </div>\\r\\n    <custom-table *ngIf=\\\"corteDobra.length > 0\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Identificacion</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Obra</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Discriminación</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of corteDobra\\\">\\r\\n          <td class=\\\"text-center\\\">{{ item.identificacao }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.data }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.obra }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.discriminacao }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.empresa }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <empty-result\\r\\n      message=\\\"Nenhuma informação encontrada\\\"\\r\\n      *ngIf=\\\"corteDobra.length == 0 && corteDobraLoaded\\\">\\r\\n    </empty-result>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialClientesUltimosPrecosService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/clientes/ultimos-precos`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaUltimosPrecos(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/clientes/historico-financeiro`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getPermissaoAcesso(id: any) {\r\n    return this.http.get(`${this.API}/permissao-acesso/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getResumoSintetico(id: any, grupoEconomico: any) {\r\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\r\n\r\n    return this.http\r\n      .get(`${this.API}/resumo/sintetico/${id}`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getGrupoEconomico(id: any) {\r\n    return this.http.get(`${this.API}/grupo-economico/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getResumoPedidos(id: any, grupoEconomico: any) {\r\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\r\n\r\n    return this.http\r\n      .get(`${this.API}/resumo/pedidos/${id}`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhesPedidos(id: any, grupoEconomico: any) {\r\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\r\n\r\n    return this.http\r\n      .get(`${this.API}/detalhes/pedidos/${id}`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getMateriaisDuplicata(params: any) {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais-duplicata`, {\r\n        params: httpParams\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAcumulosMensais(id: any) {\r\n    return this.http.get(`${this.API}/acumulos-mensais/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getNotasPromissorias(id: any) {\r\n    return this.http.get(`${this.API}/notas-promissorias/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getDebitos(id: any) {\r\n    return this.http.get(`${this.API}/debitos/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getCorteDobra(id: any) {\r\n    return this.http.get(`${this.API}/corte-dobra/${id}`).pipe(take(1));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-debitos',\r\n  templateUrl: './debitos.component.html',\r\n  styleUrls: ['./debitos.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroDebitosComponent\r\n  implements OnInit {\r\n  debitos: any = [];\r\n  debitosLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getDebitos(params['id']);\r\n    });\r\n  }\r\n\r\n  getDebitos(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getDebitos(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.debitos = response['result'];\r\n        }\r\n        this.debitosLoaded = true;\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'COM NOTA') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'SEM NOTA') {\r\n      borderClass = 'border-primary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-acumulos-mensais',\r\n  templateUrl: './acumulos-mensais.component.html',\r\n  styleUrls: ['./acumulos-mensais.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent\r\n  implements OnInit {\r\n  acumulosMensais: any = {};\r\n  acumulosMensaisLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getAcumulosMensais(params['id']);\r\n    });\r\n  }\r\n\r\n  getAcumulosMensais(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getAcumulosMensais(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.acumulosMensais = response['result'];\r\n        }\r\n        this.acumulosMensaisLoaded = true;\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`,  {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getUpSellService(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_suplementarios`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos() {\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormRulesService {\r\n  private readonly API = `http://23.254.204.187/api/common/services`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n    getRules(formRef: number): Observable<any> {\r\n    return this.http.get(`${this.API}/form-rules/${formRef}`).pipe(take(1));\r\n  }\r\n}\r\n","export default \".modal {\\n  display: none;\\n  position: fixed;\\n  z-index: 1;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto;\\n  background-color: rgba(0, 0, 0, 0.4);\\n}\\n\\n.modal-content {\\n  background-color: #fefefe;\\n  margin: 15% auto;\\n  padding: 20px;\\n  border: 1px solid #888;\\n  width: 80%;\\n}\\n\\n.contacto {\\n  text-transform: uppercase;\\n  font-weight: bold;\\n}\\n\\n.close {\\n  color: #aaa;\\n  float: right;\\n  font-size: 28px;\\n  font-weight: bold;\\n}\\n\\n.close:hover,\\n.close:focus {\\n  color: black;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n\\n.info-box {\\n  border: 1px solid #333;\\n  background-color: #f5f5f5;\\n  padding: 7px;\\n  margin-top: 10px;\\n}\\n\\np {\\n  margin-bottom: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2xpZW50ZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsZUFBQTtFQUNBLFVBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLG9DQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsVUFBQTtBQUNGOztBQUNBO0VBQ0UseUJBQUE7RUFDQSxpQkFBQTtBQUVGOztBQUNBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFFRjs7QUFDQTs7RUFFRSxZQUFBO0VBQ0EscUJBQUE7RUFDQSxlQUFBO0FBRUY7O0FBQUE7RUFDRSxzQkFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0FBR0Y7O0FBREE7RUFDRSxnQkFBQTtBQUlGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2xpZW50ZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kYWwge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHotaW5kZXg6IDE7XHJcbiAgbGVmdDogMDtcclxuICB0b3A6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcclxufVxyXG5cclxuLm1vZGFsLWNvbnRlbnQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZWZlZmU7XHJcbiAgbWFyZ2luOiAxNSUgYXV0bztcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7XHJcbiAgd2lkdGg6IDgwJTtcclxufVxyXG4uY29udGFjdG8ge1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5jbG9zZSB7XHJcbiAgY29sb3I6ICNhYWE7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIGZvbnQtc2l6ZTogMjhweDtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLmNsb3NlOmhvdmVyLFxyXG4uY2xvc2U6Zm9jdXMge1xyXG4gIGNvbG9yOiBibGFjaztcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi5pbmZvLWJveCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzMzMzsgXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTsgXHJcbiAgcGFkZGluZzogN3B4OyBcclxuICBtYXJnaW4tdG9wOiAxMHB4OyBcclxufVxyXG5we1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbn0iXX0= */\";","export default \"<div class=\\\"modal-content\\\" [hidden]=\\\"!showModal\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"mtc-title mb-auto\\\">Ubicación de contacto</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onClose()\\\">\\r\\n            <span aria-hidden=\\\"true\\\" *ngIf=\\\"!loaderModal\\\">&times;</span>\\r\\n            <div class=\\\"spinner-border spinner-border-sm text-dark ml-auto\\\" *ngIf=\\\"loaderModal\\\"></div>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group col-lg-2\\\">\\r\\n                            <label for=\\\"codOrigemContato\\\">Latitud</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"latitud\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-2\\\">\\r\\n                            <label for=\\\"codOrigemContato\\\">Longitud</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"longitud\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-8\\\">\\r\\n                            <label for=\\\"codOrigemContato\\\">Dirección</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"direccion\\\" readonly />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label for=\\\"codOrigemContato\\\">Seleccione en el mapa</label>\\r\\n\\r\\n                            <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n                                <agm-map [latitude]=\\\"latitud\\\" [longitude]=\\\"longitud\\\" [zoom]=\\\"16\\\"\\r\\n                                    class=\\\"embed-responsive-item\\\" (mapClick)=\\\"actualizarMarcador($event)\\\">\\r\\n                                    <agm-marker [latitude]=\\\"latitud\\\" [longitude]=\\\"longitud\\\"\\r\\n                                        (markerDragEnd)=\\\"actualizarDireccion($event)\\\">\\r\\n                                    </agm-marker>\\r\\n                                </agm-map>\\r\\n                                <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClose()\\\">\\r\\n            Cancelar\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">\\r\\n            Confirmar\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3ByZS1jYWRhc3Ryby9wcmUtY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n// ng-brazil\r\nimport { MASKS, NgBrazilValidators } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n// Services\r\nimport { ComercialClientesPreCadastroService } from './pre-cadastro.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\nimport { CnpjService } from 'src/app/shared/services/ws/cnpj.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { FunctionsService } from 'src/app/shared/services/core/functions.service';\r\nimport { array } from '@amcharts/amcharts4/core';\r\nimport { number } from 'ng-brazil/number/validator';\r\nimport { PreCadastroUbicacionContactosService } from './ubicacion_contacto/ubicacion.service';\r\n\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-pre-cadastro',\r\n  templateUrl: './pre-cadastro.component.html',\r\n  styleUrls: ['./pre-cadastro.component.scss'],\r\n})\r\nexport class ComercialClientesPreCadastroComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  @ViewChild('modalDetalhesCliente', {}) modalDetalhesCliente: TemplateRef<any>;\r\n\r\n  modalRef: BsModalRef;\r\n  modalConfig = {\r\n    ignoreBackdropClick: true,\r\n  };\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home',\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n      routerLink: '/comercial/clientes',\r\n    },\r\n    {\r\n      descricao: 'Pre-Registro',\r\n    },\r\n  ];\r\n\r\n  public MASKS = MASKS;\r\n\r\n  vendedores: any = [];\r\n  cnaes: any = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  tipoPessoa: any = {};\r\n  submittingForm = false;\r\n  latitud: number = 0;\r\n  longitud: number = 0;\r\n  swActivarLatitud: boolean = false;\r\n  maxLengthRules: any = {};\r\n  maxLengthMessages: any = {};\r\n  id_marcador: number = 0;\r\n  disabled_form: boolean = true;\r\n\r\n  dadosCliente: any = {};\r\n  ciudades: any = [];\r\n\r\n  tipos_clientes: any = [];\r\n  index_array_ubicacion: number = 0;\r\n  titulo_ubicacion_array: string = '';\r\n  id_ciudad: number = 0;\r\n\r\n\r\n  index_array_contactos: number = 0;\r\n  titulo_contacto_array: string = '';\r\n  nombre_contacto_array: string = '';\r\n  apellido_p_contacto_array: string = '';\r\n  apellido_m_contacto_array: string = '';\r\n  telefono_contacto_array: string = '';\r\n  celular_contacto_array: string = '';\r\n  direccion_contacto_array: string = '';\r\n  latitud_contacto_array: number = 0;\r\n  longitud_contacto_array: number = 0;\r\n\r\n  direccion_mapa: string = '';\r\n  tipo_peticion: number = 0;\r\n\r\n  latitud_inicial: number = 0;\r\n  longitud_inicial: number = 0;\r\n\r\n\r\n\r\n\r\n  ubicacionCollapse: boolean = false; // Inicialmente oculto\r\n  contactoCollapse: boolean = false; // Inicialmente oculto\r\n\r\n  ubicacionFormularios: any[] = [];\r\n  contactoFormularios: any[] = [];\r\n  formObj: FormGroup;\r\n  formObjArray: any[] = [];\r\n  ubicaciones: any[] = [];\r\n  indice: number = 0;\r\n  //bloquearSeleccion: boolean = true;\r\n  ciudad_vendedor: number = 0;\r\n  private coloresDisponibles: string[] = [\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF0000',\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FC9F3A',\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFF00',\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00FF00',\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFFFF',\r\n  ];\r\n\r\n\r\n  constructor(\r\n    private preCadastroService: ComercialClientesPreCadastroService,\r\n    private formBuilder: FormBuilder,\r\n    private location: Location,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private clientesService: ComercialClientesService,\r\n    private pnotifyService: PNotifyService,\r\n    private cnpjService: CnpjService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private functionsService: FunctionsService,\r\n    private modalService: BsModalService,\r\n    private ubicacionService: PreCadastroUbicacionContactosService,\r\n    private bsModalRef: BsModalRef,\r\n\r\n\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.titleService.setTitle('Pre-Registro');\r\n    this.getFormFields();\r\n    //this.determinarBloqueo();\r\n    this.obtenerTiposClientes();\r\n    this.activatedRoute.queryParams.subscribe((queryParams: any) => {\r\n      let documento = null;\r\n\r\n\r\n      this.registrarAcesso();\r\n      this.setMaxLengthRules();\r\n      this.setFormBuilder(documento);\r\n      this.formObj = this.formBuilder.group({\r\n        ubicacion: this.formBuilder.array([]), // Debes configurar esto según tu estructura\r\n        contactos: this.formBuilder.array([]), // Debes configurar esto según tu estructura\r\n        // Otros campos del formulario principal aquí\r\n\r\n      });\r\n\r\n    });\r\n    this.disabled_form = true;\r\n  }\r\n\r\n  /* determinarBloqueo() {\r\n    if (this.miFormulario.get('tipo_cliente').value === 0) {\r\n      this.bloquearSeleccion = this.true;\r\n    }\r\n  } */\r\n\r\n  changeVendedor(a) {\r\n    this.clientesService.getVendedorCiudad(a)\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 200) {\r\n            // console.log(response.result.latitud);\r\n            this.latitud_inicial = response.result.latitud;\r\n            this.longitud_inicial = response.result.longitud;\r\n            this.ciudad_vendedor = response.result.id_ciudad\r\n            // console.log(this.ciudad_vendedor);\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n        },\r\n        (error) => {\r\n/*           console.error('Error al cargar dependencias:', error);\r\n */          this.handleFormFieldsError();\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n  obtenerTiposClientes() {\r\n    this.clientesService.getTipoClientes()\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 200) {\r\n\r\n            this.tipos_clientes = response.result;\r\n\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n        },\r\n        (error) => {\r\n/*           console.error('Error al cargar dependencias:', error);\r\n */          this.handleFormFieldsError();\r\n        }\r\n      )\r\n  }\r\n\r\n  /* actualizarMarcador(event: any) {\r\n    this.latitud = event.coords.lat;\r\n    this.longitud = event.coords.lng;\r\n  } */\r\n  /*  actualizarMarcador(index: number, latitud, longitud): void {\r\n     /* console.log(this.latitud); */\r\n\r\n\r\n  /* this.id_marcador = index;\r\n  this.ubicacionFormularios[index].color = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00FF00';\r\n   Actualizar solo la ubicación del marcador en la posición 'index'\r\n  this.ubicaciones[index].latitud = latitud;\r\n  this.ubicacionFormularios[index].latitud = latitud;\r\n  this.ubicaciones[index].longitud = longitud\r\n  this.ubicacionFormularios[index].longitud = longitud;\r\n\r\n\r\n  this.cambiarColorMarcador(index);\r\n} */\r\n\r\n  /* cambiarColorMarcador(i: number) {\r\n    this.ubicaciones[i].color = 'blue';\r\n  } */\r\n\r\n\r\n  /* actualizarMapa(event: any) {\r\n    //console.log(event);\r\n    this.latitud = event.coords.lat;\r\n    this.longitud = event.coords.lng;\r\n    this.actualizarMarcador(this.id_marcador, this.latitud, this.longitud);\r\n    this.actualizarDireccion(this.id_marcador, event);\r\n  }\r\n\r\n  actualizarDireccion(index, event: any) {\r\n    this.obtenerDireccion(event.coords.lat, event.coords.lng)\r\n      .then((direccion_mapa: string) => {\r\n        this.ubicacionFormularios[index].direccion = direccion_mapa;\r\n      })\r\n      .catch((error: any) => {\r\n        /*  this.form.controls['direccion'].setValue(\r\n            'Error al obtener la dirección'\r\n         ); */\r\n/*       });\r\n  } */ \r\n\r\n  /* public obtenerDireccion(latitud: number, longitud: number): Promise<string> {\r\n    return fetch(\r\n      `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitud},${longitud}&key=AIzaSyDl5b7STz9xYNDhybTTer2POVncX9FYqCc`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const resultado = data.results[0];\r\n        if (resultado) {\r\n          return resultado.formatted_address;\r\n        } else {\r\n          return 'Dirección no encontrada';\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return 'Error al obtener la dirección';\r\n      });\r\n  } */\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getFormFields() {\r\n    this.preCadastroService\r\n      .loadDependencies()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          //console.log('Datos obtenidos en loadDependencies():', response[0].data);\r\n\r\n          if (response[0].responseCode === 200) {\r\n            this.vendedores = response[0].data;\r\n\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n\r\n          if (response[1].responseCode === 200) {\r\n            this.cnaes = response[1].result.map(cnae => ({\r\n              id_cnae: cnae.id,\r\n              descripcion: cnae.descricao,\r\n              codigo: cnae.codigo\r\n            })); ///console.log(\"cnaes: \", this.cnaes);\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n          if (response[2].responseCode === 200) {\r\n            this.ciudades = response[2].result;\r\n            //console.log(this.ciudades);\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          } //console.log(\"cnaes: \", this.ciudades);\r\n        },\r\n        (error) => {\r\n          //console.error('Error al cargar dependencias:', error);\r\n          this.handleFormFieldsError();\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n  handleFormFieldsError() {\r\n    this.pnotifyService.error();\r\n    this.location.back();\r\n  }\r\n\r\n  setMaxLengthRules() {\r\n    this.maxLengthRules = this.activatedRoute.snapshot.data.rules.data;\r\n    this.maxLengthMessages = {\r\n      nome: `El nombre debe contener ${this.maxLengthRules.nome} caracteres.`,\r\n      apellido1: `Apellido debe contener ${this.maxLengthRules.apellido1} caracteres.`,\r\n      apellido2: `Apellido debe contener ${this.maxLengthRules.apellido1} caracteres.`,\r\n      razaoSocial: `El nombre de la empresa debe contener ${this.maxLengthRules.razaoSocial} caracteres.`,\r\n      nomeFantasia: `El nombre comercial debe contener hasta ${this.maxLengthRules.nomeFantasia} caracteres.`,\r\n      email: `El correo electrónico debe llegar a ${this.maxLengthRules.email} caracteres.`,\r\n    };\r\n  }\r\n  agregarUbicacionALaFormObj(datosUbicacion: any) {\r\n    const ubicacionFormArray = this.formObj.get('ubicacion') as FormArray;\r\n    ubicacionFormArray.push(this.formBuilder.group(datosUbicacion));\r\n  }\r\n\r\n  // Crea una función para agregar datos de contacto al formulario principal\r\n  agregarContactoALaFormObj(datosContacto: any) {\r\n    const contactoFormArray = this.formObj.get('contactos') as FormArray;\r\n    contactoFormArray.push(this.formBuilder.group(datosContacto));\r\n  }\r\n\r\n  repetirFormulario(tipoFormulario: string) {\r\n    this.swActivarLatitud = false;\r\n\r\n\r\n    if (tipoFormulario === 'Ubicacion' && this.ubicacionFormularios.length < 5) {\r\n\r\n\r\n      const nuevoFormulario = this.crearFormularioUbicacionConDatosIngresados();\r\n\r\n      this.agregarUbicacionALaFormObj(nuevoFormulario);\r\n      this.ubicacionFormularios.push(nuevoFormulario);\r\n      if (this.ubicacionFormularios.length > 0) {\r\n        this.ubicacionFormularios[this.index_array_ubicacion].ubicacion = this.titulo_ubicacion_array;\r\n        this.ubicacionFormularios[this.index_array_ubicacion].id_ciudad = this.id_ciudad;\r\n\r\n\r\n      }\r\n      //console.log(this.index_array);\r\n\r\n      // También debes agregar este formulario al formulario principal.\r\n      this.formObjArray[0].ubicacion.push(nuevoFormulario);\r\n    } else if (tipoFormulario === 'Contacto' && this.contactoFormularios.length < 5) {\r\n      const nuevoFormulario = this.crearFormularioContactoConDatosIngresados();\r\n\r\n\r\n      this.agregarContactoALaFormObj(nuevoFormulario);\r\n      this.contactoFormularios.push(nuevoFormulario);\r\n\r\n      if (this.contactoFormularios.length > 0) {\r\n        //console.log(this.titulo_contacto_array);\r\n\r\n        this.contactoFormularios[this.index_array_contactos].titulo_contacto = this.titulo_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].nombres_contacto = this.nombre_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].apellido_contacto = this.apellido_p_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].apellido2_contacto = this.apellido_m_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].telefono_contacto = this.telefono_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].direccion_contacto = this.direccion_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].latitude_contacto = this.latitud_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].longitude_contacto = this.longitud_contacto_array;\r\n\r\n\r\n\r\n      }\r\n\r\n      //console.log(this.contactoFormularios);\r\n      (this.formObj.get('contactos') as FormArray).push(nuevoFormulario);\r\n    } else {\r\n      /* console.log('Se alcanzó el máximo de formularios permitidos para este tipo.'); */\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  eliminarContacto(index, tipo) {\r\n    if (tipo == 1) {\r\n      this.contactoFormularios.splice(index, 1);\r\n    } else if (tipo == 2) {\r\n      this.ubicacionFormularios.splice(index, 1);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  crearFormularioUbicacionConDatosIngresados(): any {\r\n\r\n    return {\r\n      ubicacion: '',\r\n      direccion: '',\r\n      id_ciudad: this.ciudad_vendedor,\r\n      latitud: 0,\r\n      longitud: 0,\r\n      swActivarLatitud: this.swActivarLatitud\r\n    };\r\n\r\n  }\r\n\r\n  openModalUbicacion(template: TemplateRef<any>, index: number, tipo: number): void {\r\n\r\n    this.indice = index;\r\n    if (tipo === 1) {\r\n      this.tipo_peticion = tipo;\r\n      this.latitud = this.contactoFormularios[index].latitude_contacto;\r\n      this.longitud = this.contactoFormularios[index].longitude_contacto;\r\n    } else if (tipo === 2) {\r\n      this.tipo_peticion = tipo;\r\n      this.latitud = this.ubicacionFormularios[index].latitud\r\n      this.longitud = this.ubicacionFormularios[index].longitud;\r\n    }\r\n    //console.log(this.latitud);\r\n\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-md',\r\n    });\r\n\r\n\r\n\r\n    //this.ubicacionService.showModal();\r\n  }\r\n\r\n  onFecharModal(event) {\r\n    //console.log(this.modalRef);\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  crearFormularioContactoConDatosIngresados(): any {\r\n    return {\r\n      titulo_contacto: '',\r\n      nombres_contacto: '',\r\n      apellido_contacto: '',\r\n      apellido2_contacto: '',\r\n      telefono_contacto: '',\r\n      celular_contacto: '',\r\n      direccion_contacto: '',\r\n      latitude_contacto: 0,\r\n      longitude_contacto: 0,\r\n    }\r\n  }\r\n\r\n\r\n  changeLatitudLongitud(event: { latitud: number, longitud: number, direccion: any, index: number, tipo: number }) {\r\n    //console.log(event.tipo)\r\n\r\n    if (event.tipo === 1) {\r\n      \r\n      this.latitud_contacto_array = event.latitud;\r\n      this.longitud_contacto_array = event.longitud;\r\n      this.direccion_contacto_array = event.direccion;\r\n\r\n      this.contactoFormularios[event.index].latitude_contacto = this.latitud_contacto_array;\r\n      this.contactoFormularios[event.index].longitude_contacto = this.longitud_contacto_array;\r\n      this.contactoFormularios[event.index].direccion_contacto = this.direccion_contacto_array;\r\n\r\n    } else if (event.tipo === 2) {\r\n   \r\n\r\n      this.latitud = event.latitud;\r\n      this.longitud = event.longitud;\r\n      this.direccion_mapa = event.direccion;\r\n      this.ubicacionFormularios[event.index].latitud = this.latitud;\r\n      this.ubicacionFormularios[event.index].longitud = this.longitud;\r\n      this.ubicacionFormularios[event.index].direccion = this.direccion_mapa;\r\n    }\r\n  }\r\n\r\n\r\n  setFormBuilder(documento: string) {\r\n\r\n    this.form = this.formBuilder.group({\r\n      //cnpj_cpf: [null,Validators.required],\r\n      nit: [null, Validators.required],\r\n      ci: [null, Validators.required],\r\n\r\n      nome: [\r\n        null,\r\n        [Validators.required, Validators.maxLength(this.maxLengthRules.nome)],\r\n      ],\r\n\r\n      contacto: [null],\r\n      razaoSocial: [null],\r\n      nomeFantasia: [null],\r\n      nombre_factura: [null],\r\n      vendedor: [null, Validators.required],\r\n      cnae: [null],\r\n      email: [null,\r\n        [\r\n          Validators.email,\r\n          Validators.maxLength(this.maxLengthRules.email),\r\n        ],\r\n      ],\r\n      telefone: [null],\r\n      celular: [null],\r\n      direccion: [null],\r\n      tipopessoa: [null],\r\n      nombres_contacto: [null],\r\n      apellido_contacto: [null],\r\n      apellido2_contacto: [null],\r\n      telefono_contacto: [null],\r\n      celular_contacto: [null],\r\n      ciudad: [null],\r\n      direccion_contacto: [null],\r\n      ciudadUbi: [null],\r\n      titulo_contacto: [null],\r\n      titulo_ubicacion: [],\r\n      ubicacion: this.formBuilder.array([]),\r\n      contactos: this.formBuilder.array([]),\r\n      nombre_ciudad: [],\r\n      tipo_cliente: [0]\r\n\r\n\r\n\r\n    });\r\n\r\n    this.form.get('tipopessoa').valueChanges.subscribe((value) => {\r\n      if (value === 'P' || value === 'G' || value === 'E') {\r\n        this.form.get('nit').setValidators([Validators.required]);\r\n        this.form.get('razaoSocial').setValidators([Validators.required]);\r\n      } else {\r\n        this.form.get('nit').clearValidators();\r\n        this.form.get('razaoSocial').clearValidators();\r\n      }\r\n      this.form.get('nit').updateValueAndValidity();\r\n      this.form.get('razaoSocial').updateValueAndValidity();\r\n    });\r\n\r\n  }\r\n  onSubmit() {\r\n    /* this.postAkna(20081);\r\n    return; */\r\n\r\n    const tipoPessoaOptions = {\r\n      S: 'Sociedades',\r\n      P: 'Privado',\r\n      G: 'Gobierno',\r\n      E: 'Empleado'\r\n    };\r\n    const tipopessoa = this.form.value.tipopessoa;\r\n    const tipopersona = tipoPessoaOptions[tipopessoa];\r\n    const data = {\r\n      ubicacion: [],\r\n      contactos: [],\r\n    };\r\n    /*  console.log(this.ubicacionFormularios); */\r\n    /* this.ubicacionFormularios.forEach((formulario) => {\r\n\r\n      data.ubicacion.push(formulario.value);\r\n    }); */\r\n    //console.log(this.ubicacionFormularios)\r\n    data.ubicacion = this.ubicacionFormularios\r\n\r\n    // Agregar datos de contactos desde contactoFormularios\r\n    /*  console.log(this.contactoFormularios); */\r\n    data.contactos = this.contactoFormularios\r\n\r\n\r\n\r\n    if (this.form.valid) {\r\n      this.loaderNavbar = true;\r\n      this.submittingForm = true;\r\n      let formObj = {};\r\n\r\n      formObj = {\r\n        tipo_pessoa: tipopessoa,\r\n        tipo_persona: tipopersona,\r\n        id_vendedor: this.form.value.vendedor,\r\n        nombres: this.form.value.nome,\r\n        razonSocial: this.form.value.razaoSocial,\r\n        nombre_factura: this.form.value.nombre_factura,\r\n        nit: this.form.value.nit,\r\n        cnpj_cpf: this.form.value.ci,\r\n        id_rubro: this.form.value.cnae,\r\n        email: this.form.value.email,\r\n        telefono: this.form.value.telefone,\r\n        celular: this.form.value.celular,\r\n        ubicacion: data.ubicacion, // Asigna los datos de ubicación directamente aquí\r\n        contactos: data.contactos,\r\n        id_tipo_cliente: 0\r\n\r\n      }; /* console.log('Datos antes de enviarlos:', formObj);*/\r\n      this.clientesService\r\n\r\n        .sapPostClient(formObj)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderNavbar = false;\r\n            this.submittingForm = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n\r\n            if (response.response === 200) {\r\n              this.pnotifyService.success('Cliente registrado.');\r\n              this.formChanged = false;\r\n              this.router.navigate(['../cadastro', response.result], {\r\n                relativeTo: this.activatedRoute,\r\n              });\r\n            } else if (response.response === 204) {\r\n              this.pnotifyService.notice('No se registro.');\r\n            } else {\r\n              this.pnotifyService.notice(` ${response.detalle}`);\r\n            }\r\n          },\r\n          (error: any) => {\r\n            this.pnotifyService.notice('Ocurrio un error.');\r\n          }\r\n        );\r\n\r\n    }\r\n    this.form.reset()\r\n  }\r\n\r\n  setType(type: string) {\r\n    // this.tipoPessoa = type;\r\n    this.form.reset();\r\n  }\r\n\r\n\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field) != '') {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  agregarDireccion(index: number) {\r\n    //console.log(index);\r\n    this.ubicaciones[index] = { latitud: this.latitud, longitud: this.longitud, color: this.generarColorAleatorio() }\r\n    if (index >= 0) {\r\n      this.ubicacionFormularios[index].swActivarLatitud = true\r\n    } else {\r\n      this.ubicacionFormularios[index].swActivarLatitud = false\r\n    }\r\n  }\r\n\r\n  generarColorAleatorio(): string {\r\n    if (this.coloresDisponibles.length === 0) {\r\n      return null; // No quedan colores disponibles\r\n    }\r\n\r\n    const indiceAleatorio = Math.floor(Math.random() * this.coloresDisponibles.length);\r\n    const colorAleatorio = this.coloresDisponibles.splice(indiceAleatorio, 1)[0];\r\n    return colorAleatorio;\r\n  }\r\n  actualizarUbicacion(index: number) {\r\n    // Actualiza las coordenadas de la ubicación en el arreglo\r\n    this.ubicaciones[index].latitud = this.latitud;\r\n    this.ubicaciones[index].longitud = this.longitud;\r\n  }\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n\r\n      if (field.errors.hasOwnProperty('maxlength') && field.touched) {\r\n        return 'maxlength';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required ';\r\n    }\r\n  }\r\n\r\n  /* showDetails(): void {\r\n    this.modalRef = this.modalService.show(\r\n      this.modalDetalhesCliente,\r\n      this.modalConfig\r\n    );\r\n  }\r\n\r\n  onCloseDetails(): void {\r\n    this.modalRef.hide();\r\n  } */\r\n\r\n  onNavigateDetail(): void {\r\n    if (this.dadosCliente.podeAcessar == 1) {\r\n      // @ts-ignore: Ignorar error TS2339\r\n      this.onCloseDetails();\r\n      this.router.navigate(['../detalhes', this.dadosCliente.codCliente], {\r\n        relativeTo: this.activatedRoute,\r\n      });\r\n    } else {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\r\n    }\r\n  }\r\n\r\n  onInput() {\r\n    this.formChanged = true;\r\n\r\n\r\n  }\r\n\r\n  actualizarPosicion(atributo, index) {\r\n    //console.log(atributo)\r\n    //this.ubicacionFormularios[index].titulo_ubicacion = atributo;\r\n    //console.log(this.ubicacionFormularios[index].titulo_ubicacion)\r\n    this.titulo_ubicacion_array = atributo;\r\n    this.index_array_ubicacion = index;\r\n\r\n    this.ubicacionFormularios[index].ubicacion = atributo\r\n    //console.log(this.ubicacionFormularios)\r\n  }\r\n  actualizarContacto(atributo, tipo, index) {\r\n    /*  console.log(atributo) */\r\n    this.index_array_contactos = index\r\n    switch (tipo) {\r\n      case 1:\r\n        this.titulo_contacto_array = atributo;\r\n        this.contactoFormularios[index].titulo_contacto = this.titulo_contacto_array;\r\n        break;\r\n      case 2:\r\n        this.nombre_contacto_array = atributo;\r\n        this.contactoFormularios[index].nombres_contacto = this.nombre_contacto_array;\r\n        break;\r\n      case 3:\r\n        this.apellido_p_contacto_array = atributo;\r\n        this.contactoFormularios[index].apellido_contacto = this.apellido_p_contacto_array;\r\n        break;\r\n      case 4:\r\n        this.apellido_m_contacto_array = atributo;\r\n        this.contactoFormularios[index].apellido2_contacto = this.apellido_m_contacto_array;\r\n        break;\r\n      case 5:\r\n        this.telefono_contacto_array = atributo;\r\n        this.contactoFormularios[index].telefono_contacto = this.telefono_contacto_array;\r\n        break;\r\n      case 6:\r\n        this.celular_contacto_array = atributo;\r\n        this.contactoFormularios[index].celular_contacto = this.celular_contacto_array;\r\n        break;\r\n      case 7:\r\n        this.direccion_contacto_array = atributo;\r\n        this.contactoFormularios[index].direccion_contacto = this.direccion_contacto_array;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  cambiarCiudad(id, index) {\r\n    this.id_ciudad = id;\r\n    this.index_array_ubicacion = index;\r\n    this.ubicacionFormularios[index].id_ciudad = id\r\n\r\n\r\n    //console.log(this.id_ciudad);\r\n\r\n  }\r\n\r\n  formCanDeactivate() {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onCancel() {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n  FormArray\r\n} from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ng-brazil\r\nimport { utilsBr } from 'js-brasil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { PdfService } from 'src/app/shared/services/core/pdf.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n@Component({\r\n  selector: 'comercia-clientes-proposta-analise-credito',\r\n  templateUrl: './proposta-analise-credito.component.html',\r\n  styleUrls: ['./proposta-analise-credito.component.scss']\r\n})\r\nexport class ComercialClientesPropostaAnaliseCreditoComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  loaderNavbar: boolean = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  codCliente: number;\r\n\r\n  tipoVisao: string = 'formulario';\r\n  dataFicha: any = [];\r\n\r\n  form: FormGroup;\r\n  formChanged: boolean = false;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private pnotifyService: PNotifyService,\r\n    private pdfService: PdfService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.codCliente = params['id'];\r\n\r\n      this.registrarAcesso();\r\n      this.setBreadCrumb(this.codCliente);\r\n      this.titleService.setTitle('Proposta para análise de crédito');\r\n\r\n      if (this.activatedRoute.snapshot.data['data']['responseCode'] === 200) {\r\n        this.setFormBuilder(\r\n          this.activatedRoute.snapshot.data['data']['result']\r\n        );\r\n      } else {\r\n        this.pnotifyService.error();\r\n        this.location.back();\r\n      }\r\n    });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(id: number) {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home'\r\n      },\r\n      {\r\n        descricao: 'Busqueda de clientes',\r\n        routerLink: '/comercial/clientes/lista'\r\n      },\r\n      {\r\n        descricao: 'Detalhes',\r\n        routerLink: `/comercial/clientes/detalhes/${id}`\r\n      },\r\n      {\r\n        descricao: 'Proposta para análise de crédito'\r\n      }\r\n    ];\r\n  }\r\n\r\n  setFormBuilder(data: any) {\r\n    this.form = this.formBuilder.group({\r\n      razaoSocial: [\r\n        { value: data['razaoSocial'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      dataSolicitacao: [new Date(), [Validators.required]],\r\n      codCliente: [\r\n        { value: data['codCliente'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      codClienteDBA: [{ value: data['codClienteDBA'], disabled: true }],\r\n      setorAtividade: [\r\n        { value: data['setorAtividade'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      dataUltimaVisita: [null],\r\n      instalacoes: [null],\r\n      numFuncionarios: [null],\r\n      limiteCreditoAtual: [data['limiteCredito']],\r\n      limiteCreditoSolicitado: [null, [Validators.required]],\r\n      condicaoPagto: [null, [Validators.required]],\r\n      nomeVendedor: [\r\n        { value: data['nomeVendedor'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      telefoneVendedor: [\r\n        { value: data['telefoneVendedor'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      gestorVendas: [null, [Validators.required]],\r\n      nomeEscritorio: [\r\n        { value: data['nomeEscritorio'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      fornecedores: this.formBuilder.array([]),\r\n      clientes: this.formBuilder.array([]),\r\n      vendasConcentradas: [null],\r\n      bancos: this.formBuilder.array([]),\r\n      previsaoCompraTon: [null],\r\n      previsaoCompraValor: [null],\r\n      faturamentoMedio: [null],\r\n      parecerVendedor: [null, [Validators.required]]\r\n    });\r\n\r\n    this.setFormFornecedoresClientesBancos();\r\n  }\r\n\r\n  setFormFornecedoresClientesBancos() {\r\n    this.onAddFornecedor();\r\n    this.onAddBanco();\r\n  }\r\n\r\n  get fornecedores() {\r\n    return this.form.get('fornecedores') as FormArray;\r\n  }\r\n\r\n  get clientes() {\r\n    return this.form.get('clientes') as FormArray;\r\n  }\r\n\r\n  get bancos() {\r\n    return this.form.get('bancos') as FormArray;\r\n  }\r\n\r\n  onAddFornecedor() {\r\n    this.fornecedores.push(\r\n      this.formBuilder.group({\r\n        nome: [null, [Validators.required]],\r\n        telefone: [null]\r\n      })\r\n    );\r\n  }\r\n\r\n  onAddCliente() {\r\n    this.clientes.push(\r\n      this.formBuilder.group({\r\n        nome: [null]\r\n      })\r\n    );\r\n  }\r\n\r\n  onAddBanco() {\r\n    this.bancos.push(\r\n      this.formBuilder.group({\r\n        nome: [null, [Validators.required]],\r\n        agencia: [null, [Validators.required]],\r\n        contaCorrente: [null, [Validators.required]],\r\n        telefone: [null, [Validators.required]]\r\n      })\r\n    );\r\n  }\r\n\r\n  onDeleteFornecedor(index: number) {\r\n    if (this.fornecedores.length > 1) {\r\n      this.fornecedores.removeAt(index);\r\n    } else {\r\n      this.pnotifyService.notice('Informe ao menos um fornecedor.');\r\n    }\r\n  }\r\n\r\n  onDeleteCliente(index: number) {\r\n    this.clientes.removeAt(index);\r\n  }\r\n\r\n  onDeleteBanco(index: number) {\r\n    if (this.bancos.length > 1) {\r\n      this.bancos.removeAt(index);\r\n    } else {\r\n      this.pnotifyService.notice('Informe ao menos um banco.');\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onNestedFieldError(formGroup: string, index: number, field: string) {\r\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n    field = nestedForm.controls[index].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n\r\n    if (nestedForm.controls[index].get(field).validator) {\r\n      let validationResult = nestedForm.controls[index]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onInput() {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate() {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      this.loaderNavbar = true;\r\n      setTimeout(() => {\r\n        const formData = this.form.getRawValue();\r\n\r\n        let dataSolicitacao = `${(formData[\r\n          'dataSolicitacao'\r\n        ] as Date).getDate()}/${(formData[\r\n          'dataSolicitacao'\r\n        ] as Date).getMonth() + 1}/${(formData[\r\n          'dataSolicitacao'\r\n        ] as Date).getFullYear()}`;\r\n\r\n        let dataUltimaVisita: string;\r\n        if (formData['dataUltimaVisita'] != null) {\r\n          dataUltimaVisita = `${(formData[\r\n            'dataUltimaVisita'\r\n          ] as Date).getDate()}/${(formData[\r\n            'dataUltimaVisita'\r\n          ] as Date).getMonth() + 1}/${(formData[\r\n            'dataUltimaVisita'\r\n          ] as Date).getFullYear()}`;\r\n        }\r\n\r\n        this.tipoVisao = 'ficha';\r\n        this.dataFicha = {\r\n          razaoSocial: formData['razaoSocial'],\r\n          dataSolicitacao: dataSolicitacao,\r\n          codCliente: formData['codCliente'],\r\n          codClienteDBA: formData['codClienteDBA'],\r\n          setorAtividade: formData['setorAtividade'],\r\n          dataUltimaVisita: dataUltimaVisita,\r\n          instalacoes: formData['instalacoes'],\r\n          numFuncionarios: formData['numFuncionarios'],\r\n          limiteCreditoAtual: formData['limiteCreditoAtual'],\r\n          limiteCreditoSolicitado: formData['limiteCreditoSolicitado'],\r\n          condicaoPagto: formData['condicaoPagto'],\r\n          nomeVendedor: formData['nomeVendedor'],\r\n          telefoneVendedor: formData['telefoneVendedor'],\r\n          gestorVendas: formData['gestorVendas'],\r\n          nomeEscritorio: formData['nomeEscritorio'],\r\n          fornecedores: formData['fornecedores'],\r\n          clientes: formData['clientes'],\r\n          bancos: formData['bancos'],\r\n          vendasConcentradas: formData['vendasConcentradas'],\r\n          previsaoCompraTon: formData['previsaoCompraTon'],\r\n          previsaoCompraValor: formData['previsaoCompraValor'],\r\n          faturamentoMedio: formData['faturamentoMedio'],\r\n          parecerVendedor: formData['parecerVendedor']\r\n        };\r\n\r\n        this.formChanged = false;\r\n        this.loaderNavbar = false;\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.loaderNavbar = true;\r\n    setTimeout(() => {\r\n      this.tipoVisao = 'formulario';\r\n      this.loaderNavbar = false;\r\n    }, 1000);\r\n  }\r\n\r\n  onDownload() {\r\n    this.loaderNavbar = true;\r\n    this.pdfService.download(\r\n      'impressao-ficha-pac',\r\n      `${this.codCliente}_PropostaAnaliseCredito`\r\n    );\r\n\r\n    setTimeout(() => {\r\n      this.loaderNavbar = false;\r\n    }, 500);\r\n  }\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// ngx-filter-pipe\r\nimport { FilterPipe } from 'ngx-filter-pipe';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-resumo',\r\n  templateUrl: './resumo.component.html',\r\n  styleUrls: ['./resumo.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroResumoComponent\r\n  implements OnInit {\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  sinteticoPendenciasLoaded: boolean = false;\r\n\r\n  codCliente: number;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  sintetico: any = {\r\n    atrasoPagamento: 0,\r\n    tempoEntrega: 0,\r\n    totalAtraso: 0,\r\n    pagtoAntecipado: 0,\r\n    creditoSeguradora: 0\r\n  };\r\n\r\n  countoAtrasoPagamento: number;\r\n  countoTempoEntrega: number;\r\n  countoTotalAtraso: number;\r\n  countoPagtoAntecipado: number;\r\n  countoCreditoSeguradora: number;\r\n  countoTitulos: number;\r\n  countoNotasDebito: number;\r\n  countoNotasPromissorias: number;\r\n  countoChequesDevolvidos: number;\r\n  countoCorteDobra: number;\r\n  countoReservaBobinas: number;\r\n  countoLimiteCredito: number;\r\n  countoSaldo: number;\r\n\r\n  grupoEconomico: any = [];\r\n  grupoEconomicoLoaded: boolean = false;\r\n\r\n  showPendenciasDetalhes: boolean = false;\r\n\r\n  pendencias: any = {\r\n    titulos: 0,\r\n    notasDebito: 0,\r\n    notasPromissorias: 0,\r\n    chequesDevolvidos: 0,\r\n    corteDobra: 0,\r\n    reservaBobinas: 0,\r\n    limiteCredito: 0,\r\n    saldo: 0\r\n  };\r\n\r\n  pedidos: any = [];\r\n  pedidosPagination: any = [];\r\n  pedidosFiltered: any = [];\r\n  pedidosLoaded: boolean = false;\r\n\r\n  maxSize: number = 8;\r\n  itemsPerPage: number = 10;\r\n\r\n  visaoGrupoEconomico: boolean = false;\r\n  queryParams: any = { grupoEconomico: this.visaoGrupoEconomico };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService,\r\n    private modalService: BsModalService,\r\n    private filterPipe: FilterPipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(queryParams => {\r\n      this.activatedRoute.parent.params.subscribe(params => {\r\n        let grupoEconomico = false;\r\n\r\n        if (\r\n          queryParams['grupoEconomico'] &&\r\n          queryParams['grupoEconomico'] == 'true'\r\n        ) {\r\n          grupoEconomico = true;\r\n          this.visaoGrupoEconomico = true;\r\n          this.queryParams = {\r\n            grupoEconomico: this.visaoGrupoEconomico\r\n          };\r\n        }\r\n\r\n        this.codCliente = params['id'];\r\n        this.getResumoSintetico(this.codCliente, grupoEconomico);\r\n        this.getGrupoEconomico(this.codCliente);\r\n        this.getPedidos(this.codCliente, grupoEconomico);\r\n      });\r\n    });\r\n  }\r\n\r\n  onChangeGrupoEconomico() {\r\n    this.onLoadingGrupoEconomico();\r\n    this.queryParams = { grupoEconomico: this.visaoGrupoEconomico };\r\n\r\n    this.router.navigate(\r\n      [`/comercial/clientes/historico-financeiro/${this.codCliente}/resumo`],\r\n      {\r\n        queryParams: this.queryParams\r\n      }\r\n    );\r\n  }\r\n\r\n  onLoadingGrupoEconomico() {\r\n    this.visaoGrupoEconomico = !this.visaoGrupoEconomico;\r\n    this.sinteticoPendenciasLoaded = false;\r\n    this.pedidosLoaded = false;\r\n  }\r\n\r\n  getResumoSintetico(id: number, grupoEconomico: boolean) {\r\n    this.historicoFinanceiroService\r\n      .getResumoSintetico(id, grupoEconomico)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.sintetico = response['result']['sintetico'];\r\n          this.pendencias = response['result']['pendencias'];\r\n        }\r\n        this.sinteticoPendenciasLoaded = true;\r\n      });\r\n  }\r\n\r\n  getGrupoEconomico(id: number) {\r\n    this.historicoFinanceiroService\r\n      .getGrupoEconomico(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.grupoEconomico = response['result'];\r\n        }\r\n        this.grupoEconomicoLoaded = true;\r\n      });\r\n  }\r\n\r\n  getPedidos(id: number, grupoEconomico: boolean) {\r\n    this.historicoFinanceiroService\r\n      .getResumoPedidos(id, grupoEconomico)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.pedidos = response['result'];\r\n          this.pedidosFiltered = response['result'];\r\n          this.pedidosPagination = this.pedidosFiltered.slice(\r\n            0,\r\n            this.itemsPerPage\r\n          );\r\n        }\r\n        this.pedidosLoaded = true;\r\n      });\r\n  }\r\n\r\n  onGrupoEconomico(modalRef: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(modalRef);\r\n  }\r\n\r\n  onCloseModalGrupoEconomico() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  handleCounter(valor: number) {\r\n    return valor.toFixed(0);\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'EM ABERTO') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'QUITADA') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'VENCIDA') {\r\n      borderClass = 'border-warning';\r\n    } else if (status == 'PROTESTO') {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.pedidosPagination = this.pedidosFiltered.slice(startItem, endItem);\r\n  }\r\n\r\n  onFilter(value: string) {\r\n    if (value) {\r\n      this.pedidosFiltered = this.filterPipe.transform(this.pedidos, {\r\n        numDuplicata: value\r\n      });\r\n    } else {\r\n      this.pedidosFiltered = this.pedidos;\r\n    }\r\n\r\n    this.pedidosPagination = this.pedidosFiltered.slice(0, this.itemsPerPage);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3VsdGltb3MtcHJlY29zL3VsdGltb3MtcHJlY29zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialClientesDetalheService } from './detalhes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesDetalhesResolverGuard implements Resolve<any> {\r\n  constructor(private detalhesService: ComercialClientesDetalheService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['id']) {\r\n      return this.detalhesService.getDetalhes(route.params['id']);\r\n    }\r\n\r\n    return of({\r\n      responseCode: 204\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { ComercialClientesResolverGuard } from '../clientes-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialClientesHistoricoFinanceiroComponent } from './historico-financeiro.component';\r\nimport { ComercialClientesHistoricoFinanceiroResumoComponent } from './resumo/resumo.component';\r\nimport { ComercialClientesHistoricoFinanceiroDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent } from './materiais-duplicata/materiais-duplicata.component';\r\nimport { ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent } from './acumulos-mensais/acumulos-mensais.component';\r\nimport { ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent } from './notas-promissorias/notas-promissorias.component';\r\nimport { ComercialClientesHistoricoFinanceiroDebitosComponent } from './debitos/debitos.component';\r\nimport { ComercialClientesHistoricoFinanceiroCorteDobraComponent } from './corte-dobra/corte-dobra.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: ':id',\r\n    component: ComercialClientesHistoricoFinanceiroComponent,\r\n    resolve: {\r\n      response: ComercialClientesResolverGuard\r\n    },\r\n    children: [\r\n      { path: '', redirectTo: 'resumo', pathMatch: 'full' },\r\n      {\r\n        path: 'resumo',\r\n        component: ComercialClientesHistoricoFinanceiroResumoComponent\r\n      },\r\n      {\r\n        path: 'detalhes',\r\n        component: ComercialClientesHistoricoFinanceiroDetalhesComponent\r\n      },\r\n      {\r\n        path: 'materiais-duplicata',\r\n        component: ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent\r\n      },\r\n      {\r\n        path: 'acumulos-mensais',\r\n        component: ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent\r\n      },\r\n      {\r\n        path: 'notas-promissorias',\r\n        component: ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent\r\n      },\r\n      {\r\n        path: 'debitos',\r\n        component: ComercialClientesHistoricoFinanceiroDebitosComponent\r\n      },\r\n      {\r\n        path: 'corte-dobra',\r\n        component: ComercialClientesHistoricoFinanceiroCorteDobraComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/comercial/home',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialHistoricoFinanceiroRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2NvcnRlLWRvYnJhL2NvcnRlLWRvYnJhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!acumulosMensaisLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de acumulaciones mensuales...</strong>\\r\\n    </div>\\r\\n    <tabset *ngIf=\\\"acumulosMensaisLoaded\\\">\\r\\n      <tab heading=\\\"Principal\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <custom-table *ngIf=\\\"acumulosMensais.principal.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Período</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor acumulado</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Média atraso</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let acumulo of acumulosMensais.principal\\\">\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.periodo }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.atraso }} dias</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n          <empty-result\\r\\n            message=\\\"Nenhuma informação encontrada\\\"\\r\\n            *ngIf=\\\"acumulosMensais.principal.length == 0\\\">\\r\\n          </empty-result>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Maior fatura\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <custom-table *ngIf=\\\"acumulosMensais.maiorFatura.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Pedido</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let acumulo of acumulosMensais.maiorFatura\\\">\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.numPedido }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.data }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.empresa }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n          <empty-result\\r\\n            message=\\\"Nenhuma informação encontrada\\\"\\r\\n            *ngIf=\\\"acumulosMensais.maiorFatura.length == 0\\\">\\r\\n          </empty-result>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"modal-content custom-modal\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h6 class=\\\"modal-title pull-left\\\">Editar datos de cliente </h6>\\r\\n        <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"form row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"col mb-0\\\">\\r\\n                        <label for=\\\"\\\"> <strong> DATOS DE CLIENTE </strong> </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-12\\\">\\r\\n                        <form [formGroup]=\\\"form\\\">\\r\\n                            <div class=\\\"card\\\">\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0\\\"> <strong> Codigo cliente </strong></label>\\r\\n\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"codigo_cliente\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.codigo_cliente }}\\\"\\r\\n                                                id=\\\"codigo_cliente\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0\\\"> <strong> CI </strong></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.carnet }}\\\" formControlName=\\\"carnet\\\"\\r\\n                                                id=\\\"carnet\\\">\\r\\n                                            <input type=\\\"hidden\\\" value=\\\"{{ datos_cliente.datos_cliente.id_cliente }}\\\"\\r\\n                                                id=\\\"id_cliente\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0\\\"> <strong> NIT </strong></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.nit }}\\\" formControlName=\\\"nit\\\"\\r\\n                                                id=\\\"nit\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Nombre completo </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.nombre }}\\\" formControlName=\\\"nombre\\\"\\r\\n                                                id=\\\"nombre\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Nombre factura </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.nombre_factura  }}\\\"\\r\\n                                                formControlName=\\\"nombre_factura\\\" id=\\\"nombre_factura\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Tipo persona </strong> </label>\\r\\n                                            <select name=\\\"\\\" id=\\\"id_tipo_persona\\\" class=\\\"form-control\\\">\\r\\n                                                <option *ngFor=\\\"let tipo of tipos_personas | keyvalue\\\"\\r\\n                                                    [value]=\\\"tipo.key\\\"\\r\\n                                                    [selected]=\\\"tipo.key === datos_cliente.datos_cliente.id_tipo_persona\\\">\\r\\n                                                    {{ tipo.value }}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Email </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.email }}\\\" formControlName=\\\"email\\\"\\r\\n                                                id=\\\"email\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong>Teléfono </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.telefono }}\\\"\\r\\n                                                formControlName=\\\"telefono\\\" id=\\\"telefono\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Celular </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.celular }}\\\"\\r\\n                                                formControlName=\\\"celular\\\" id=\\\"celular\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Rubro </strong> </label>\\r\\n                                            <select name=\\\"\\\" id=\\\"id_rubro\\\" class=\\\"form-control\\\">\\r\\n                                                <option *ngFor=\\\"let cnae of cnaes\\\" [value]=\\\"cnae.id_cnae\\\"\\r\\n                                                    [selected]=\\\"cnae.id_cnae === datos_cliente.datos_cliente.id_rubro\\\">\\r\\n                                                    {{ cnae.descripcion }}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Tipo cliente </strong> </label>\\r\\n                                            <select name=\\\"vendedor\\\" class=\\\"form-control\\\" id=\\\"id_tipo_cliente\\\">\\r\\n                                                <option *ngFor=\\\"let tipo of tipos_clientes\\\" [value]=\\\"tipo.id\\\"\\r\\n                                                    [selected]=\\\"tipo.id === datos_cliente.datos_cliente.id_tipo_cliente\\\">\\r\\n                                                    {{ tipo.nombre_tipo }}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Vendedor </strong> </label>\\r\\n                                            <select name=\\\"vendedor\\\" class=\\\"form-control\\\" id=\\\"id_vendedor\\\">\\r\\n                                                <option *ngFor=\\\"let vendedor of vendedoresList\\\" [value]=\\\"vendedor.ID\\\"\\r\\n                                                    [selected]=\\\"vendedor.ID === datos_cliente.datos_cliente.id_vendedor\\\">\\r\\n                                                    {{ vendedor.nombre }}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"col mb-0\\\">\\r\\n                        <label for=\\\"\\\"> <strong> DATOS DE CONTACTO </strong> </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 mb-3\\\">\\r\\n                        <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n                            <agm-map [latitude]=\\\"latitudPromedioContacto\\\" [longitude]=\\\"longitudPromedioContacto\\\" [zoom]=\\\"16\\\"\\r\\n                                (mapClick)=\\\"actualizarMapaContacto($event)\\\" class=\\\"embed-responsive-item\\\">\\r\\n                                <agm-marker *ngFor=\\\"let ubicacion of datos_cliente.datos_contacto; let i = index\\\"\\r\\n                                    [latitude]=\\\"ubicacion.latitude_contacto\\\" [longitude]=\\\"ubicacion.longitude_contacto\\\"\\r\\n                                    [iconUrl]=\\\"ubicacion.color\\\" (markerClick)=\\\"actualizarMarcadorContacto(i)\\\"\\r\\n                                    (markerDragEnd)=\\\"actualizarUbicacion(i, $event.coords.lat, $event.coords.lng)\\\">\\r\\n                                </agm-marker>\\r\\n                            </agm-map>\\r\\n                            <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div style=\\\"max-height: 350px; overflow-y: auto;\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\"\\r\\n                            *ngFor=\\\"let contacto of datos_cliente.datos_contacto; let i = index\\\">\\r\\n                            <div class=\\\"card\\\">\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <label>Título</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Nombre</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.nombres_contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Dirección</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.direccion_contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Celular</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.celular_contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Teléfono</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.telefono_contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <button (click)=\\\"eliminarContacto(i)\\\"\\r\\n                                        class=\\\"btn btn-danger mt-2 text-center\\\">Eliminar</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-12 text-center\\\">\\r\\n                        <button (click)=\\\"agregarContacto()\\\" class=\\\"btn btn-primary\\\"\\r\\n                            [disabled]=\\\"datos_cliente.datos_contacto.length >= 5\\\">Agregar Contacto</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"col mb-0\\\">\\r\\n                        <label for=\\\"\\\"> <strong> DATOS DE UBICACIÓN </strong> </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 mb-3\\\">\\r\\n                        <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n                            <agm-map [latitude]=\\\"latitudPromedio\\\" [longitude]=\\\"longitudPromedio\\\" [zoom]=\\\"16\\\"\\r\\n                                (mapClick)=\\\"actualizarMapa($event)\\\" class=\\\"embed-responsive-item\\\">\\r\\n                                <agm-marker *ngFor=\\\"let ubicacion of datos_cliente.datos_direccion; let i = index\\\"\\r\\n                                    [latitude]=\\\"ubicacion.latitud\\\" [longitude]=\\\"ubicacion.longitud\\\"\\r\\n                                    [iconUrl]=\\\"ubicacion.color\\\" (markerClick)=\\\"actualizarMarcador(i)\\\"\\r\\n                                    (markerDragEnd)=\\\"actualizarUbicacion(i, $event.coords.lat, $event.coords.lng)\\\">\\r\\n                                </agm-marker>\\r\\n                            </agm-map>\\r\\n                            <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div style=\\\"max-height: 150px; overflow-y: auto;\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\"\\r\\n                            *ngFor=\\\"let direccion of datos_cliente.datos_direccion; let i = index\\\">\\r\\n                            <div class=\\\"card\\\">\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <label>Título</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"direccion.ubicacion\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Ciudad</label>\\r\\n                                    <div>\\r\\n                                        <select name=\\\"\\\" id=\\\"\\\" class=\\\"form-control\\\"\\r\\n                                            (change)=\\\"actualizarCiudad(i, $event.target.value)\\\">\\r\\n                                            <option value=\\\"\\\"> SELECCIONAR...</option>\\r\\n                                            <option *ngFor=\\\"let ciudad of ciudades\\\" [value]=\\\"ciudad.id\\\"\\r\\n                                                [selected]=\\\"ciudad.id === direccion.id_ciudad\\\">\\r\\n                                                {{ ciudad.nombre_ciudad }}\\r\\n                                            </option>\\r\\n\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                    <label>Dirección</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"direccion.direccion\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <button (click)=\\\"eliminarUbicacion(i)\\\"\\r\\n                                        class=\\\"btn btn-danger mt-2 text-center\\\">Eliminar</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-12 text-center\\\">\\r\\n                        <button (click)=\\\"agregarUbicacion()\\\" class=\\\"btn btn-primary\\\"\\r\\n                            [disabled]=\\\"datos_cliente.datos_direccion.length >= 5\\\">Agregar Ubicación</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClose()\\\">\\r\\n                Cancelar\\r\\n            </button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"actualizarCliente()\\\">\\r\\n                Guardar\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Services\r\nimport { FormRulesService } from 'src/app/shared/services/core/form-rules.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesCadastroDadosFaturamentoRulesResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(private formRulesService: FormRulesService) {}\r\n\r\n  resolve(): Observable<any> {\r\n    return this.formRulesService.getRules(1);\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!duplicataLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de duplicados...</strong>\\r\\n    </div>\\r\\n    <tabset *ngIf=\\\"duplicataLoaded\\\">\\r\\n      <tab heading=\\\"Principal\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Línea:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"principal.materiais.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Descripción</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Sit. Tributária</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Qtde.</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor unidades</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor total</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Alíquota ICMS</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let material of principal.materiais\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ material.idMaterial }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.nomeMaterial }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.situacaoTributaria }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.quantidade }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.valorUnitario | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.valorTotalItem | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-center\\\" *ngIf=\\\"material.aliquotaIcms > 0\\\">{{ material.aliquotaIcms | number:'1.2-2' }}%</td>\\r\\n                    <td class=\\\"text-center\\\" *ngIf=\\\"material.aliquotaIcms == 0\\\">0,00%</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"Nenhuma informação encontrada\\\"\\r\\n                *ngIf=\\\"principal.materiais.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Condiciones de pago</div>\\r\\n                <p class=\\\"mb-0\\\"><strong></strong>{{ principal.materiais[0]['condicaoPagamento'] }}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Total productos</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Cantidad:</strong> {{ principal.total.peso | number:'1.3-3' }} TON</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Valor:</strong> {{ principal.total.valor | currency:'BRL':'symbol':'1.2-2' }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Lugar de entrega</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p><strong>Referencia:</strong> {{ principal.entrega.referencia }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Endereço:</strong> {{ principal.entrega.logradouro }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Ciudad:</strong> {{ principal.entrega.cidade }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Bairro:</strong> {{ principal.entrega.bairro }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>UF:</strong> {{ principal.entrega.uf }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Histórico de cobranças\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"historicoCobrancas.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Num. Lanzamiento</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Situación</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Fecha</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Usuário</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Comentário</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let cobranca of historicoCobrancas\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.numLancamento }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.situacao }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.data }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.nome }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.comentario }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"Nenhuma informação encontrada\\\"\\r\\n                *ngIf=\\\"historicoCobrancas.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Colección de la empresa</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Código:</strong> Nenhuma informação</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Descripcion:</strong> Nenhuma informação</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Vencimento original</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <p class=\\\"mb-0\\\">No hay información</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Ocorrências da duplicata\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"ocorrenciasDuplicatas.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicata</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Operação</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Descrição</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let ocorrencia of ocorrenciasDuplicatas\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.numDuplicata }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.operacao }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.data }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.descricao }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"No hay información encontrada\\\"\\r\\n                *ngIf=\\\"ocorrenciasDuplicatas.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Ocorrências comerciais\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicata</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"ocorrenciasComerciais.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Número</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Hora</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Usuário</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Operação</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Situação</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let ocorrencia of ocorrenciasComerciais\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.numero }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.data }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.hora }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.nome }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.operacao }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.situacao }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"No hay información encontrada\\\"\\r\\n                *ngIf=\\\"ocorrenciasComerciais.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Busqueda de clientes\\\">\\r\\n  <button type=\\\"button\\\" [routerLink]=\\\"['../pre-cadastro']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">Filtrar</button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row justify-content-center mb-2\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <ul class=\\\"list-unstyled mb-0 d-flex justify-content-around\\\">\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Ativo')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Activos</h6>\\r\\n          <div class=\\\"text-success\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"ativos\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoAtivos = $event\\\">\\r\\n                {{ handleCounter(countoAtivos) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Inativo')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Inactivos</h6>\\r\\n          <div class=\\\"text-danger\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"inativos\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoInativos = $event\\\">\\r\\n                {{ handleCounter(countoInativos) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Potenci')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Potencial</h6>\\r\\n          <div class=\\\"text-primary\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"potencial\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoPotencial = $event\\\">\\r\\n                {{ handleCounter(countoPotencial) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Arquivo')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Archivados</h6>\\r\\n          <div class=\\\"text-secondary\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"arquivados\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoArquivados = $event\\\">\\r\\n                {{ handleCounter(countoArquivados) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <advanced-filter>\\r\\n    <form [formGroup]=\\\"formFilter\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"buscarPor\\\">Buscar por</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"buscarPor\\\" formControlName=\\\"buscarPor\\\">\\r\\n            <option value=\\\"1\\\">Código, nombre o razon social</option>\\r\\n            <option value=\\\"2\\\">C.I. o NIT</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"pesquisa\\\">Termino de busqueda</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pesquisa\\\" (keydown.enter)=\\\"onFilter()\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"situacao\\\">Situacion</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"situacao\\\" formControlName=\\\"situacao\\\">\\r\\n            <option value=\\\"Ativo\\\">Activos</option>\\r\\n            <option value=\\\"Inativo\\\">Inactivos</option>\\r\\n            <option value=\\\"Potenci\\\">Potenciales</option>\\r\\n            <option value=\\\"Arquivo\\\">Archivados</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"setorAtividade\\\">Sector empresarial</label>\\r\\n          <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"setorAtividades\\\" [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"setorAtividade\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\" formControlName=\\\"setorAtividade\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n          <label for=\\\"tipoPessoa\\\">Tipo de persona</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"tipoPessoa\\\" formControlName=\\\"tipoPessoa\\\">\\r\\n            <option value=\\\"F\\\">Persona física</option>\\r\\n            <option value=\\\"J\\\">Persona jurídica</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n          <label for=\\\"grupoEconomico\\\">Esta en grupo economico</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"grupoEconomico\\\"\\r\\n            formControlName=\\\"grupoEconomico\\\">\\r\\n            <option value=\\\"S\\\">Si</option>\\r\\n            <option value=\\\"N\\\">No</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n          <label for=\\\"segurado\\\">Asegurado</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"segurado\\\"\\r\\n            formControlName=\\\"segurado\\\">\\r\\n            <option value=\\\"S\\\">Si</option>\\r\\n            <option value=\\\"N\\\">No</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\r\\n          <label for=\\\"carteira\\\">Cartera</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"carteira\\\"\\r\\n            formControlName=\\\"carteira\\\">\\r\\n            <option value=\\\"S\\\" selected>Mi cartera</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        <div class=\\\"form-group col-lg-1 mb-lg-0\\\">\\r\\n          <label for=\\\"registros\\\">Registros</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"registros\\\" formControlName=\\\"registros\\\">\\r\\n            <option>10</option>\\r\\n            <option>25</option>\\r\\n            <option>50</option>\\r\\n            <option>100</option>\\r\\n            <option>200</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"\\r\\n      dataLoaded && searchSubmitted && clientes.length == 0 && buscandoPor != 2\\r\\n    \\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <empty-result message=\\\"No se encontraron clientes para esta búsqueda.\\\" class=\\\"py-4\\\"></empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"\\r\\n      dataLoaded && searchSubmitted && clientes.length == 0 && buscandoPor == 2\\r\\n    \\\">\\r\\n    <div class=\\\"col-7 d-flex justify-content-end w-100 pr-0\\\">\\r\\n      <empty-result message=\\\"No se encontraron clientes para esta búsqueda.\\\" class=\\\"py-4\\\"></empty-result>\\r\\n    </div>\\r\\n    <div class=\\\"col-5 d-flex w-100 pl-1\\\">\\r\\n      <a [routerLink]=\\\"['../pre-cadastro']\\\" [queryParams]=\\\"onPreCadastroCpfCnpj()\\\" class=\\\"my-auto\\\">\\r\\n        <strong>Pulse aquí para registrarse..</strong>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mt-4\\\" *ngIf=\\\"dataLoaded && clientes.length > 0\\\">\\r\\n    <div [ngClass]=\\\"{ 'col-12': !showDetailPanel, 'col-7 pr-0': showDetailPanel }\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\" (click)=\\\"setOrderBy('codigo_cliente')\\\">\\r\\n              <thead-sorter value=\\\"Código Cliente\\\" [active]=\\\"orderBy == 'codigo_cliente'\\\"\\r\\n                [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\" (click)=\\\"setOrderBy('cpf')\\\">\\r\\n              <thead-sorter value=\\\"CI/NIT\\\" [active]=\\\"orderBy == 'cpf'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"setOrderBy('nomeFantasia')\\\">\\r\\n              <thead-sorter value=\\\"Nombre y apelllido\\\" [active]=\\\"orderBy == 'nomeFantasia'\\\"\\r\\n                [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"setOrderBy('razaoSocial')\\\" *ngIf=\\\"!showDetailPanel\\\">\\r\\n              <thead-sorter value=\\\"Razon Social\\\" [active]=\\\"orderBy == 'razaoSocial'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let cliente of clientes\\\" [class.table-active]=\\\"cliente.codigo_cliente == clienteSelecionado\\\">\\r\\n            <td class=\\\"text-center hover\\\" [ngClass]=\\\"classStatusBorder(cliente.situacao)\\\"\\r\\n              (click)=\\\"viewRegister(cliente)\\\">\\r\\n              <i class=\\\"text-black-50 far fa-check-square mr-3\\\" *ngIf=\\\"cliente.segurado == 0\\\"\\r\\n                tooltip=\\\"Cliente no asegurado\\\" placement=\\\"right\\\"></i>\\r\\n              <i class=\\\"text-warning fas fa-check-square mr-3\\\" *ngIf=\\\"cliente.segurado > 0\\\" tooltip=\\\"Cliente asegurado\\\"\\r\\n                placement=\\\"right\\\"></i>\\r\\n              <i class=\\\"text-black-50 far fa-folder-open\\\" *ngIf=\\\"cliente.grupoEconomico == 0\\\"\\r\\n                tooltip=\\\"No hace parte de grupo economico\\\" placement=\\\"right\\\"></i>\\r\\n              <i class=\\\"text-warning fas fa-folder-open\\\" *ngIf=\\\"cliente.grupoEconomico > 0\\\"\\r\\n                tooltip=\\\"Pertenece a un grupo economico\\\" placement=\\\"right\\\"></i>\\r\\n            </td>\\r\\n            <td class=\\\"text-center hover\\\" (click)=\\\"viewRegister(cliente)\\\">\\r\\n              {{ cliente.codigo_cliente }}\\r\\n            </td>\\r\\n            <td class=\\\"text-center hover\\\" (click)=\\\"viewRegister(cpf)\\\">\\r\\n              {{ cliente.cpf }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"viewRegister(cliente)\\\">\\r\\n              {{ cliente.nomeFantasia | uppercase }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"viewRegister(cliente)\\\" *ngIf=\\\"!showDetailPanel\\\">\\r\\n              {{ cliente.razaoSocial | uppercase }}\\r\\n            </td>\\r\\n            <td>\\r\\n              <span tooltip=\\\"Datos registrados\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"viewDetails(cliente)\\\">\\r\\n                  <i class=\\\"fas fa-user\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"clientes[0]['total'] > itemsPerPage\\\">\\r\\n        <pagination [maxSize]=\\\"maxSize\\\" [(totalItems)]=\\\"totalItems\\\" (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\" [(ngModel)]=\\\"currentPage\\\" previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <div class=\\\"sticky-top\\\">\\r\\n        <detail-panel>\\r\\n          <tabset>\\r\\n            <tab heading=\\\"Datos registrados\\\">\\r\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n                <div *ngIf=\\\"dadosCadastraisLoaded && !dadosCadastraisEmpty\\\">\\r\\n                  <div class=\\\"container\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Codigo Cliente </label>\\r\\n                        <input\\r\\n                          value=\\\"{{ dadosCadastrais.id_cliente == null ? 'NO INFORMADO' : dadosCadastrais.id_cliente }}\\\"\\r\\n                          class=\\\"form-control\\\" readonly>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Codigo Cliente SAP</label>\\r\\n                        <input\\r\\n                          value=\\\"{{ dadosCadastrais.codigo_cliente == '' ? 'NO INFORMADO' : dadosCadastrais.codigo_cliente }}\\\"\\r\\n                          class=\\\"form-control\\\" readonly>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>C.I.</label>\\r\\n                        <div>\\r\\n                          <div>\\r\\n                            <input value=\\\"{{ dadosCadastrais.carnet == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.carnet }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!--  </div>\\r\\n                    <div class=\\\"form-row\\\"> -->\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Nombre</label>\\r\\n                        <div>\\r\\n                          <div>\\r\\n                            <input value=\\\"{{ dadosCadastrais.nombre == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.nombre }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Razon social</label>\\r\\n                        <div>\\r\\n                          <div>\\r\\n\\r\\n                            <input value=\\\"{{ dadosCadastrais.razon_social == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.razon_social }}\\\" class=\\\"form-control\\\" readonly>\\r\\n\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!--  </div> -->\\r\\n                      <!-- <div class=\\\"form-row\\\"> -->\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Tipo Persona</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ getTipoPersonaLabel(dadosCadastrais.id_tipo_persona) }}\\\" class=\\\"form-control\\\"\\r\\n                            readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>NIT.</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.nit == null ? 'NO INFORMADO' :\\r\\n                          dadosCadastrais.nit }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!--  </div> -->\\r\\n                      <!--  <div class=\\\"form-row\\\"> -->\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Celular</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.celular == null ? 'NO INFORMADO' :\\r\\n                          dadosCadastrais.celular }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Telefono</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.telefono == null ? 'NO INFORMADO' :\\r\\n                          dadosCadastrais.telefono }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label for=\\\"rubro\\\">Rubro</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.rubro || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Vendedor</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.vendedor || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Tipo cliente</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.tipo_cliente || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\"\\r\\n                            readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"mb-3\\\" *ngIf=\\\"dadosCadastraisLoaded && dadosCadastraisEmpty\\\">\\r\\n                    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n                    <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!dadosCadastraisLoaded\\\">\\r\\n                      <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"editingMode\\\">\\r\\n                  <div class=\\\"text-right mt-3\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancelEditing()\\\">Cancelar</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Guardar Cambios</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!editingMode\\\">\\r\\n                  <div class=\\\"text-right mt-3\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-light mb-2 text-center\\\"\\r\\n                      (click)=\\\"openModalEditar(editarCliente)\\\">Editar\\r\\n                      Cliente</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </tab>\\r\\n            <tab heading=\\\"Contactos\\\">\\r\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n                <div class=\\\"col-lg-12 mb-4\\\" *ngIf=\\\"contatos.lenght !==  0\\\">\\r\\n  \\r\\n                  <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n                    <agm-map [latitude]=\\\"latitudPromedioContacto\\\" [longitude]=\\\"longitudPromedioContacto\\\" [zoom]=\\\"16\\\"\\r\\n                      class=\\\"embed-responsive-item\\\">\\r\\n                      <agm-marker *ngFor=\\\"let ubicacion of contatos; let i = index\\\" [latitude]=\\\"ubicacion.latitude_contacto\\\"\\r\\n                        (markerClick)=\\\"verInformacionContacto(i)\\\" [longitude]=\\\"ubicacion.longitude_contacto\\\">\\r\\n                      </agm-marker>\\r\\n                    </agm-map>\\r\\n                    <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"informacionMarcador\\\" class=\\\"info-box mt-3\\\">\\r\\n                    <h6>Información de la ubicación</h6>\\r\\n                    <p style=\\\"font-size: 13px;\\\"> <strong>Título: </strong> {{ informacionMarcador.nombre }}</p>\\r\\n                    <p style=\\\"font-size: 13px;\\\"> <strong>Dirección: </strong> {{ informacionMarcador.direccion }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"contatosLoaded && !contatosEmpty\\\">\\r\\n                  <div *ngIf=\\\"contatos.lenght !==  0\\\">\\r\\n                    <div class=\\\"form-row\\\" *ngFor=\\\"let contato of contatos\\\">\\r\\n                      <!-- <div class=\\\"form-group col\\\" [ngClass]=\\\"{'hidden': contato.editing}\\\">\\r\\n                      <label>ID Contacto</label>\\r\\n                      <div>\\r\\n                        {{ contato.id_cont }}\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>título</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          <!-- <div *ngIf=\\\"!editingContacto\\\">{{ contato.titulo }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>Nombre</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.nombres_contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          <!-- <div *ngIf=\\\"!editingContacto\\\">{{ contato.titulo }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!-- <div class=\\\"form-group col\\\">\\r\\n                      <label>Tipo de Contacto</label>\\r\\n                      <div>\\r\\n                        <div *ngIf=\\\"!editingContacto\\\">{{ contato.ds_tipo_cont }} {{ contato.ds_cont_meio }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\">\\r\\n                          <input [(ngModel)]=\\\"contato.editedds_cont_meio\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>Dirección</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.direccion_contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\"\\r\\n                            readonly>\\r\\n                          <!--  <div *ngIf=\\\"!editingContacto\\\">{{ contato.direccion }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"><input [(ngModel)]=\\\"contato.editedDireccion\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>Celular</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.celular_contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          <!--  <div *ngIf=\\\"!editingContacto\\\">{{ contato.direccion }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"><input [(ngModel)]=\\\"contato.editedDireccion\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4 mb-3\\\">\\r\\n                        <label>Teléfono</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.telefono_contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\"\\r\\n                            readonly>\\r\\n                          <!--  <div *ngIf=\\\"!editingContacto\\\">{{ contato.direccion }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"><input [(ngModel)]=\\\"contato.editedDireccion\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                      <!-- <div class=\\\"form-group col\\\">\\r\\n                      <label>Nombre</label>\\r\\n                      <div>\\r\\n                        <ng-container *ngIf=\\\"!editingContacto\\\">\\r\\n                          <div *ngIf=\\\"contato.ds_cont && contato.ds_cont.length > 1\\\" class=\\\"mr-1\\\">{{ contato.ds_cont }}\\r\\n                          </div>\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"contato.editing\\\">\\r\\n                          <input [(ngModel)]=\\\"contato.editedDsCont\\\">\\r\\n                        </ng-container>\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n                      <!-- <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"editarContacto(contato)\\\"\\r\\n                      *ngIf=\\\"!contato.editing\\\">Editar Contacto</button>\\r\\n                    <div *ngIf=\\\"contato.editing\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"\\r\\n                        (click)=\\\"cancelEditingContact(contato)\\\">Cancelar</button>\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveEditedContact(contato)\\\">Guardar\\r\\n                        Cambios</button>\\r\\n                    </div> -->\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"contatosEmpty\\\">\\r\\n                  <label> <strong>Sin datos de contacto</strong></label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </tab>\\r\\n            <tab heading=\\\"Dirección\\\">\\r\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n                <div *ngIf=\\\"contatosLoaded && !direccionEmpty\\\">\\r\\n                  <div class=\\\"col-lg-12 mb-4\\\" *ngIf=\\\"direcciones.lenght !==  0\\\">\\r\\n\\r\\n                    <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n                      <agm-map [latitude]=\\\"latitudPromedio\\\" [longitude]=\\\"longitudPromedio\\\" [zoom]=\\\"16\\\"\\r\\n                        class=\\\"embed-responsive-item\\\">\\r\\n                        <agm-marker *ngFor=\\\"let ubicacion of direcciones; let i = index\\\" [latitude]=\\\"ubicacion.latitud\\\"\\r\\n                          (markerClick)=\\\"verInformacion(i)\\\" [longitude]=\\\"ubicacion.longitud\\\">\\r\\n                        </agm-marker>\\r\\n                      </agm-map>\\r\\n                      <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"informacionMarcador\\\" class=\\\"info-box mt-3\\\">\\r\\n                      <h6>Información de la ubicación</h6>\\r\\n                      <p style=\\\"font-size: 13px;\\\"> <strong>Título: </strong> {{ informacionMarcador.nombre }}</p>\\r\\n                      <p style=\\\"font-size: 13px;\\\"> <strong>Dirección: </strong> {{ informacionMarcador.direccion }}</p>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"direcciones.lenght !==  0\\\">\\r\\n                    <div class=\\\"form-row\\\" *ngFor=\\\"let direccion of direcciones\\\">\\r\\n\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>título</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ direccion.ubicacion || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>dirección</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ direccion.direccion || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4 mb-3\\\">\\r\\n                        <label>ciudad</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ direccion.ciudad || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"direccionEmpty\\\">\\r\\n                  <label> <strong>Sin datos de dirección</strong></label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </tab>\\r\\n          </tabset>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #editarCliente>\\r\\n    <editar-cliente (fecharModal)=\\\"onFecharModal($event)\\\" [datos_cliente]=\\\"cliente\\\" [vendedoresList]=\\\"vendedoresList\\\"\\r\\n      [cnaes]=\\\"cnaes\\\" [tipos_clientes]=\\\"tipos_clientes\\\" [ciudades]=\\\"ciudades\\\" [latitudPromedio]=\\\"latitudPromedio\\\"\\r\\n      [longitudPromedio]=\\\"longitudPromedio\\\"   [latitudPromedioContacto]=\\\"latitudPromedioContacto\\\"\\r\\n      [longitudPromedioContacto]=\\\"longitudPromedioContacto\\\"  [tipos_personas]=\\\"tipos_personas\\\">\\r\\n    </editar-cliente>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</app-body>\";","import { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from '../cadastro/dados-faturamento/formulario/formulario.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialVendedoresService } from 'src/app/modules/comercial/services/vendedores.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ComercialClientesPreCadastroService } from '../pre-cadastro/pre-cadastro.service';\r\nimport { EditarClienteService } from '../editar/editar.service';\r\n\r\n\r\n\r\n\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialClientesListaComponent implements OnInit, OnDestroy {\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home',\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  setorAtividades: any = [\r\n    {\r\n      id: 'T',\r\n      descricao: 'TODOS',\r\n    },\r\n  ];\r\n\r\n  dataLoaded = false;\r\n  dadosCadastraisLoaded = false;\r\n  dadosCadastraisEmpty = false;\r\n  contatosLoaded = false;\r\n  contatosEmpty = false;\r\n  direccionEmpty = false;\r\n  searchSubmitted = false;\r\n  showAdvancedFilter = true;\r\n\r\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  matricula = this.currentUser['info']['matricula'];\r\n\r\n  ativos = 0;\r\n  inativos = 0;\r\n  potencial = 0;\r\n  arquivados = 0;\r\n\r\n  countoAtivos: number;\r\n  countoInativos: number;\r\n  countoPotencial: number;\r\n  countoArquivados: number;\r\n\r\n  formFilter: FormGroup;\r\n  buscandoPor: number;\r\n  pesquisa: string;\r\n  orderBy = 'codCliente';\r\n  orderType = 'desc';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 50;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n  modalRef: BsModalRef;\r\n  clientes: any = [];\r\n  clientesPagination: any = [];\r\n\r\n  clienteSelecionado: number;\r\n  dadosCadastrais: any = {};\r\n  contato: any = [];\r\n  contatos: any = [];\r\n  tipos_clientes: any = [];\r\n\r\n  cliente: any = [];\r\n\r\n  direcciones: any = [];\r\n  direcciones_contacto: any = [];\r\n\r\n  editingMode: boolean = false;\r\n  editedFields: any = {};\r\n  vendedoresList: any[] = [];\r\n  editingContacto: boolean = false;\r\n  originalVendedorId: number;\r\n  ciudades: any = [];\r\n  cnaes: any = [];\r\n  codigoClienteSap: any = [];\r\n\r\n  tipos_personas: { [key: string]: string } = {\r\n    'S': 'Sociedades',\r\n    'P': 'Privado',\r\n    'G': 'Gobierno',\r\n    'E': 'Empleado'\r\n  };\r\n\r\n\r\n  latitudPromedio: number;\r\n  longitudPromedio: number;\r\n\r\n\r\n  latitudPromedioContacto: number;\r\n  longitudPromedioContacto: number;\r\n  informacionMarcador: { ubicacion: string, direccion: string } | null = null;\r\n\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private clientesService: ComercialClientesService,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private dadosFaturamentoService: ComercialClientesCadastroDadosFaturamentoFormularioService,\r\n    private titleService: TitleService,\r\n    private detailPanelService: DetailPanelService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private modalService: BsModalService,\r\n    private preCadastroService: ComercialClientesPreCadastroService,\r\n    private editarClienteService: EditarClienteService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.getFormFilters();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Busqueda de clientes');\r\n    this.onDetailPanelEmitter();\r\n    this.getCenaes();\r\n    this.obtenerTiposClientes();\r\n    this.getCiudades();\r\n\r\n    this.vendedoresService.getVendedores().subscribe(\r\n      (response: any) => {\r\n        this.vendedoresList = response.data;\r\n        console.log(response)\r\n        if (this.vendedoresList.length > 0) {\r\n          this.editedFields.id_vendedor = this.vendedoresList[0].id;\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener la lista de vendedores:', error );\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onFecharModal(event) {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n\r\n  openModalEditar(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-lg',\r\n    });\r\n\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n\r\n        if (this.showDetailPanel === false) {\r\n          this.onCloseDetailPanel();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getCenaes(): void {\r\n    this.preCadastroService.getCenaes()\r\n      .pipe(\r\n        finalize(() => {\r\n\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response[0].responseCode === 200) {\r\n            this.cnaes = response[0].result.map(cnae => ({\r\n              id_cnae: cnae.id,\r\n              descripcion: cnae.descricao,\r\n              codigo: cnae.codigo\r\n\r\n            })\r\n            );\r\n/*             console.log(\"cnaes: \", this.cnaes);\r\n */          }\r\n        }\r\n      )\r\n  }\r\n\r\n  getCiudades(): void {\r\n    this.preCadastroService.getCiudades()\r\n      .pipe(\r\n        finalize(() => {\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response[0].responseCode === 200) {\r\n            this.ciudades = response[0].result;\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  getFormFilters(): void {\r\n    this.dadosFaturamentoService\r\n      .getSetorAtividades()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.setorAtividades.unshift({\r\n            id: 'T',\r\n            descricao: 'TODOS',\r\n          });\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.setorAtividades = response['result'];\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue = this.checkRouterParams();\r\n\r\n    this.formFilter = this.formBuilder.group({\r\n      pesquisa: [formValue['pesquisa']],\r\n      buscarPor: [formValue['buscarPor'], Validators.required],\r\n      situacao: [formValue['situacao'], Validators.required],\r\n      setorAtividade: [formValue['setorAtividade'], Validators.required],\r\n      tipoPessoa: [formValue['tipoPessoa'], Validators.required],\r\n      grupoEconomico: [formValue['grupoEconomico'], Validators.required],\r\n      segurado: [formValue['segurado'], Validators.required],\r\n      carteira: [formValue['carteira'], Validators.required],\r\n      pagina: [formValue['pagina']],\r\n      registros: [formValue['registros'], Validators.required],\r\n      cnae: [formValue['cnae'], Validators.required],\r\n    });\r\n  }\r\n  viewDetails(cliente: any): void {\r\n    this.detailPanelService.loadedFinished(false);\r\n\r\n    this.clienteSelecionado = cliente.codCliente;\r\n\r\n    this.dadosCadastraisLoaded = false;\r\n    this.dadosCadastraisEmpty = false;\r\n\r\n    this.contatosLoaded = false;\r\n    this.contatosEmpty = false;\r\n\r\n    this.clientesService\r\n      .getDetalhes(cliente.codCliente)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.dadosCadastraisLoaded = true;\r\n        })\r\n      )\r\n      .subscribe((response: JsonResponse) => {\r\n        this.informacionMarcador = null;\r\n        if (response.responseCode == 200) {\r\n          //console.log(response);\r\n          this.cliente = response.result;\r\n\r\n          this.contatosLoaded = true;\r\n          this.dadosCadastrais = response.result.datos_cliente;\r\n          if (response.result && response.result.datos_contacto && response.result.datos_contacto.length > 0) {\r\n            this.contatosEmpty = false;\r\n          } else {\r\n            this.contatos = [];\r\n            this.contatosEmpty = true;\r\n          }\r\n          if (response.result && response.result.datos_direccion && response.result.datos_direccion.length > 0) {\r\n            this.direccionEmpty = false;\r\n\r\n          } else {\r\n            this.direcciones = [];\r\n            this.direccionEmpty = true;\r\n          }\r\n          this.contatos = response.result.datos_contacto;\r\n          this.calcularPromedioContacto(response.result.datos_contacto);\r\n\r\n          this.direcciones = response.result.datos_direccion;\r\n          this.editedFields.id_vendedor = this.dadosCadastrais.id_vendedor;\r\n          this.calcularPromedioUbicaciones(response.result.datos_direccion);\r\n\r\n\r\n          //console.log(\"Datos de dadosCadastrais:\", this.dadosCadastrais); // Agrega el console.log aquí\r\n        } else {\r\n          this.dadosCadastraisEmpty = true;\r\n          this.contatosEmpty = true;\r\n          this.cliente = [];\r\n\r\n        }\r\n      });\r\n\r\n    /* this.clientesService\r\n      .getContatosResumido(cliente.codCliente)\r\n      .subscribe((response: any) => {\r\n        this.contatosLoaded = true;\r\n\r\n        if (response['responseCode'] === 200) {\r\n          if (Object.keys(response['data']).length > 0) {\r\n            this.contatos = response['data'];\r\n          } else {\r\n            this.contatosEmpty = true;\r\n          }\r\n        } else {\r\n          this.contatosEmpty = true;\r\n        }\r\n      }); */\r\n  }\r\n\r\n  calcularPromedioUbicaciones(direcciones) {\r\n    let sumLatitud = 0;\r\n    let sumLongitud = 0;\r\n    if (direcciones && direcciones.length > 0) {\r\n      for (const ubicacion of direcciones) {\r\n        sumLatitud += ubicacion.latitud;\r\n        sumLongitud += ubicacion.longitud;\r\n      }\r\n      this.latitudPromedio = sumLatitud / this.direcciones.length;\r\n      this.longitudPromedio = sumLongitud / this.direcciones.length;\r\n    }\r\n\r\n  }\r\n\r\n  calcularPromedioContacto(contatos) {\r\n    //console.log(contatos);\r\n    let sumLatitud = 0;\r\n    let sumLongitud = 0;\r\n    if (contatos && contatos.length > 0) {\r\n      for (const ubicacion of contatos) {\r\n        sumLatitud += ubicacion.latitude_contacto;\r\n        sumLongitud += ubicacion.longitude_contacto;\r\n      }\r\n      console.log(sumLatitud)\r\n      this.latitudPromedioContacto = sumLatitud / this.contatos.length;\r\n      this.longitudPromedioContacto = sumLongitud / this.contatos.length;\r\n    }\r\n\r\n  }\r\n\r\n  obtenerTiposClientes() {\r\n    this.clientesService.getTipoClientes()\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 200) {\r\n            this.tipos_clientes = response.result;\r\n\r\n          } else {\r\n\r\n          }\r\n        },\r\n        (error) => {\r\n        }\r\n      )\r\n  }\r\n\r\n  verInformacion(index: number) {\r\n    const ubicacion = this.direcciones[index];\r\n    this.informacionMarcador = {\r\n      // @ts-ignore: Ignorar error TS2339\r\n      nombre: ubicacion.ubicacion || 'NO INFORMADO',\r\n      direccion: ubicacion.direccion || 'NO INFORMADO'\r\n    };\r\n  }\r\n\r\n  onCloseDetailPanel() {\r\n    this.resetClienteSelecionado();\r\n\r\n    setTimeout(() => {\r\n      this.dadosCadastraisLoaded = false;\r\n      this.dadosCadastraisEmpty = false;\r\n      this.dadosCadastrais = {};\r\n\r\n      this.contatosEmpty = false;\r\n      this.contatosLoaded = false;\r\n      this.contatos = [];\r\n    }, 500);\r\n  }\r\n  searchInputValue: string;\r\n\r\n  checkRouterParams(): Object {\r\n    var aux_cartera;\r\n    if (this.matricula == 1) {\r\n      aux_cartera = 'T'\r\n    } else {\r\n      aux_cartera = 'S'\r\n    }\r\n    let formValue = {\r\n      pesquisa: this.searchInputValue, // aquí se actualizaría el valor de pesquisa\r\n      buscarPor: 1,\r\n      situacao: 'T',\r\n      setorAtividade: 'T',\r\n      tipoPessoa: 'T',\r\n      grupoEconomico: 'T',\r\n      segurado: 'T',\r\n      carteira: aux_cartera,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.setSubmittedSearch();\r\n          this.search(params);\r\n\r\n          if (params['registros']) {\r\n            this.itemsPerPage = params['registros'];\r\n          }\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          this.listStatus();\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  editarContacto(contato: any) {\r\n    contato.editedIdCont = contato.id_cont;\r\n    contato.editedContacto = contato.contacto;\r\n    contato.editedds_cont_meio = contato.ds_cont_meio;\r\n    contato.editedDireccion = contato.direccion;\r\n    contato.editedDsCont = contato.ds_cont;\r\n    contato.originalDsTipoCont = contato.ds_tipo_cont;\r\n    contato.editing = true;\r\n    this.editingContacto = true;\r\n  }\r\n\r\n  cancelEditingContact(contato: any) {\r\n    contato.editing = false; // Salir del modo de edición\r\n    this.editingContacto = false;\r\n  }\r\n\r\n  saveEditedContact(contato: any) {\r\n    const codigoCliente = contato.id_cliente;\r\n\r\n    const editedData = {\r\n      id_cont: contato.editedIdCont !== undefined ? contato.editedIdCont : contato.id_cont,\r\n      contacto: contato.editedContacto !== undefined ? contato.editedContacto : contato.contacto,\r\n      ds_tipo_cont: contato.originalDsTipoCont,\r\n      direccion: contato.editedDireccion !== undefined ? contato.editedDireccion : contato.direccion,\r\n      ds_cont: contato.editedDsCont !== undefined ? contato.editedDsCont : contato.ds_cont,\r\n    };\r\n\r\n    const tipo_medio = contato.originalDsTipoCont === 'TELEFONO' ? 5 : 2;\r\n\r\n    if (contato.originalDsTipoCont === 'TELEFONO') {\r\n      editedData['telefono_contacto'] = contato.editedds_cont_meio !== undefined ? contato.editedds_cont_meio : contato.ds_cont_meio;\r\n    } else {\r\n      editedData['celular_contacto'] = contato.editedds_cont_meio !== undefined ? contato.editedds_cont_meio : contato.ds_cont_meio;\r\n    }\r\n\r\n    editedData['tipo_medio'] = tipo_medio;\r\n    editedData['id_cont_meio'] = contato.id_cont_meio;\r\n    editedData['id_cont'] = contato.id_cont;\r\n\r\n    this.clientesService.sapUpdateContacto(codigoCliente, editedData).subscribe(\r\n      (response) => {\r\n        console.log('Cambios en el contacto guardados exitosamente:', response);\r\n        contato.editing = false; // Salir del modo de edición\r\n        this.editingContacto = false;\r\n        // Actualizar los valores del contacto en el objeto local\r\n        contato.contacto = editedData.contacto;\r\n        contato.ds_tipo_cont = editedData.ds_tipo_cont;\r\n        contato.ds_cont_meio = editedData['telefono_contacto'] || editedData['celular_contacto'];\r\n        contato.direccion = editedData.direccion;\r\n        contato.ds_cont = editedData.ds_cont;\r\n\r\n        this.clientesService.getDetalhes(codigoCliente);\r\n      },\r\n      (error) => {\r\n        console.error('Error al guardar cambios en el contacto:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  mapTipoPessoaToTipoPersona(tipoPessoa: string): string {\r\n    const map = {\r\n      'S': 'Sociedades',\r\n      'P': 'Privado',\r\n      'G': 'Gobierno',\r\n      'E': 'Empleado'\r\n      // Agrega más mapeos si es necesario...\r\n    };\r\n\r\n    return map[tipoPessoa] || '';\r\n  }\r\n  tipoPersonaOptions = [\r\n    { label: 'Sociedades', value: 'S' },\r\n    { label: 'Privado', value: 'P' },\r\n    { label: 'Gobierno', value: 'G' },\r\n    { label: 'Empleado', value: 'E' }\r\n  ];\r\n\r\n  getTipoPersonaLabel(value: string): string {\r\n    const option = this.tipoPersonaOptions.find(opt => opt.value === value);\r\n    return option ? option.label : 'NO INFORMADO';\r\n  }\r\n  getVendedorNome(id_vendedor: number): string {\r\n    if (isNaN(id_vendedor)) {\r\n      return 'NO INFORMADO';\r\n    }\r\n\r\n    const vendedor = this.vendedoresList.find(v => v.id_vendedor === id_vendedor);\r\n    return vendedor ? vendedor.nome : 'NO INFORMADO';\r\n  }\r\n\r\n  enableEditing() {\r\n    this.editarClienteService.showModal();\r\n\r\n\r\n    /* this.editingMode = true;\r\n\r\n    // Guardar los valores actuales de los campos editables\r\n    this.editedFields.carnet = this.dadosCadastrais.carnet;\r\n    this.editedFields.nit = this.dadosCadastrais.nit;\r\n    this.editedFields.nombres = this.dadosCadastrais.nombre;\r\n    this.editedFields.razonSocial = this.dadosCadastrais.razon_social;\r\n    this.editedFields.ciudad = this.dadosCadastrais.ciudad;\r\n    this.editedFields.NombreVendedor = this.dadosCadastrais.NombreVendedor;\r\n    this.editedFields.sucursal = this.dadosCadastrais.sucursal;\r\n    this.editedFields.direccion = this.dadosCadastrais.direccion;\r\n    this.editedFields.id_cliente = this.dadosCadastrais.id_cliente;\r\n    this.editedFields.tipo_persona = this.dadosCadastrais.id_tipo_persona;\r\n    this.editedFields.codigo_cliente = this.clientes.codigo_cliente;\r\n    this.editedFields.tipo_pessoa = this.dadosCadastrais.tipo_pessoa;\r\n    this.editedFields.telefono = this.dadosCadastrais.telefono;\r\n    this.editedFields.celular = this.dadosCadastrais.celular;\r\n    this.editedFields.id_rubro = this.dadosCadastrais.id_rubro;\r\n\r\n    // this.editedFields.nit = this.dadosCadastrais.nit;\r\n    this.editedFields.id_vendedor = this.dadosCadastrais.id_vendedor;\r\n    this.originalVendedorId = this.dadosCadastrais.id_vendedor; */\r\n    // Repite para otros campos editables...\r\n  }\r\n  cancelEditing() {\r\n    // Reinicia los campos editados a sus valores originales\r\n    this.editedFields = {};\r\n    this.originalVendedorId = null;\r\n\r\n    // Desactiva el modo de edición\r\n    this.editingMode = false;\r\n  }\r\n  saveChanges() {\r\n    const codigoCliente = this.dadosCadastrais.id_cliente;\r\n    const codigo_cliente = this.dadosCadastrais.codigo_cliente;\r\n    const editedData = {\r\n      ...this.editedFields,\r\n      codigo_cliente: this.dadosCadastrais.codigo_cliente,\r\n      ubicacion: [\r\n        {\r\n          direccion: this.editedFields.direccion\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.editedFields.tipo_persona = this.mapTipoPessoaToTipoPersona(this.editedFields.tipo_pessoa);\r\n\r\n\r\n    if (this.editedFields.id_vendedor !== this.originalVendedorId) {\r\n      editedData.id_vendedor = this.editedFields.id_vendedor;\r\n    }\r\n\r\n    console.log('Datos antes de enviarlos a sapUpdateClient:', editedData);\r\n    // Llamar a la función para guardar los cambios\r\n    this.clientesService.sapUpdateClient(codigoCliente, editedData).subscribe(\r\n      (response) => {\r\n        console.log('Cambios guardados exitosamente:', response);\r\n        // Limpiar los campos editados y desactivar el modo de edición\r\n        this.editedFields = {};\r\n        this.editingMode = false;\r\n        // Llamar a la función para obtener los detalles actualizados\r\n        this.clientesService.getDetalhes(codigoCliente);\r\n      },\r\n      (error) => {\r\n        console.error('Error al guardar cambios:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  listStatus(): void {\r\n    this.clientesService.getStatus().subscribe({\r\n      next: (response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.setStatus(response['result']);\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.pnotifyService.error();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  setStatus(status: any): void {\r\n    for (let i = 0; i < status.length; i++) {\r\n      if (status[i]['situacao'] == 'Ativo') {\r\n        this.ativos = status[i]['quantidade'];\r\n      } else if (status[i]['situacao'] == 'Inativo' || status[i]['situacao'] == null) {\r\n        this.inativos += status[i]['quantidade'];\r\n      } else if (status[i]['situacao'] == 'Potenci') {\r\n        this.potencial = status[i]['quantidade'];\r\n      } else if (status[i]['situacao'] == 'Arquivo') {\r\n        this.arquivados = status[i]['quantidade'];\r\n      }\r\n    }\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'desc') {\r\n        this.orderType = 'asc';\r\n      } else if (this.orderType == 'asc') {\r\n        this.orderType = 'desc';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'asc';\r\n    }\r\n    this.onFilter();\r\n  }\r\n\r\n  onAdvancedFilter(): void {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  filterByStatus(status: string): void {\r\n    this.formFilter.get('situacao').setValue(status);\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    let params = this.formFilter.value;\r\n    params['orderBy'] = this.orderBy;\r\n    params['orderType'] = this.orderType;\r\n\r\n    this.itemsPerPage = this.formFilter.value['registros'];\r\n    this.currentPage = 1;\r\n    this.setRouterParams(params);\r\n  }\r\n\r\n  setSubmittedSearch(): void {\r\n    this.searchSubmitted = true;\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n      queryParamsHandling: 'merge',\r\n    });\r\n    this.setSubmittedSearch();\r\n    this.search(params);\r\n  }\r\n\r\n  search(params: any): void {\r\n    if (this.searchSubmitted) {\r\n      this.loaderNavbar = true;\r\n      this.dataLoaded = false;\r\n      this.detailPanelService.hide();\r\n      this.clientes = [];\r\n      this.buscandoPor = params['buscarPor'];\r\n      this.pesquisa = params['pesquisa'];\r\n\r\n      this.clientesService\r\n        .getClientes(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderNavbar = false;\r\n            this.dataLoaded = true;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n            if (response['responseCode'] === 200) {\r\n              this.clientes = response['result']['analitico'].slice(\r\n                0,\r\n                this.itemsPerPage\r\n              );\r\n              this.totalItems = this.clientes[0]['total'];\r\n              this.setStatus(response['result']['sintetico']);\r\n            } else if (response['responseCode'] === 204) {\r\n              this.ativos = 0;\r\n              this.inativos = 0;\r\n              this.potencial = 0;\r\n              this.arquivados = 0;\r\n            }\r\n          },\r\n          (error: any) => {\r\n            this.pnotifyService.error();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  classStatusBorder(status: string): string {\r\n    let borderClass: string;\r\n\r\n    if (status == 'Ativo') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'Inativo') {\r\n      borderClass = 'border-danger';\r\n    } else if (status == 'Potenci') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'Arquivo') {\r\n      borderClass = 'border-secondary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  viewRegister(cliente: any): void {\r\n    if (cliente['podeAcessar'] == 1 || cliente['podeAcessar'] == 0) {\r\n      this.router.navigate(['../Detalles', cliente.codCliente], {\r\n        relativeTo: this.activatedRoute,\r\n\r\n      });\r\n    } else {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera.');\r\n    }\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent) {\r\n    if (this.formFilter.value['pagina'] != event.page) {\r\n      this.detailPanelService.hide();\r\n      this.resetClienteSelecionado();\r\n      this.formFilter.value['pagina'] = event.page;\r\n      this.onFilter();\r\n    }\r\n  }\r\n\r\n  onPreCadastroCpfCnpj() {\r\n    let pesquisa = this.pesquisa.replace(/\\D/g, '');\r\n\r\n    if (pesquisa.length === 11) {\r\n      return { cpf: pesquisa };\r\n    } else if (pesquisa.length === 14) {\r\n      return { cnpj: pesquisa };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  handleCounter(value: any) {\r\n    return value.toFixed(0);\r\n  }\r\n\r\n  resetClienteSelecionado() {\r\n    this.clienteSelecionado = null;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2FjdW11bG9zLW1lbnNhaXMvYWN1bXVsb3MtbWVuc2Fpcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-detalhes',\r\n  templateUrl: './detalhes.component.html',\r\n  styleUrls: ['./detalhes.component.scss']\r\n})\r\nexport class ComercialClientesDetalhesComponent implements OnInit {\r\n  loaderNavbar: boolean = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home'\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n      routerLink: '/comercial/clientes/lista'\r\n    },\r\n    {\r\n      descricao: 'Detalles'\r\n    }\r\n  ];\r\n\r\n  cliente: any = {};\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private pnotifyService: PNotifyService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.activatedRoute.snapshot.data['response']['responseCode'] === 200) {\r\n      this.cliente = this.activatedRoute.snapshot.data['response']['result'];\r\n      this.registrarAcesso();\r\n      this.titleService.setTitle('Detalhes');\r\n    } else if (\r\n      this.activatedRoute.snapshot.data['response']['responseCode'] === 403\r\n    ) {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\r\n      this.router.navigate(['/comercial/home']);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  classStatusBadge(status: string) {\r\n    let badgeClass = '';\r\n\r\n    if (status == 'Ativo') {\r\n      badgeClass = 'badge-success';\r\n    } else if (status == 'Inativo') {\r\n      badgeClass = 'badge-danger';\r\n    } else if (status == 'Potenci') {\r\n      badgeClass = 'badge-primary';\r\n    } else if (status == 'Arquivo') {\r\n      badgeClass = 'badge-secondary';\r\n    }\r\n\r\n    return badgeClass;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CnpjService {\r\n  private readonly API = `http://23.254.204.187/api/common/services/cnpj`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getData(cnpj: string) {\r\n    cnpj = cnpj.replace(/\\D/g, '');\r\n\r\n    return this.http.get(`${this.API}/${cnpj}`).pipe(\r\n      timeout(5000),\r\n      catchError(e => {\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Proposta para análise de crédito\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'formulario'\\\"\\r\\n    [disabled]=\\\"!form.valid\\\"\\r\\n    (click)=\\\"onSubmit()\\\">\\r\\n    Generar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\r\\n    (click)=\\\"onCancel()\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\r\\n    (click)=\\\"onDownload()\\\">\\r\\n    Download\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row justify-content-center\\\" *ngIf=\\\"tipoVisao == 'formulario'\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <div class=\\\"mtc-title\\\">Datos del cliente</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"razaoSocial\\\">Razon social</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"razaoSocial\\\"\\r\\n              formControlName=\\\"razaoSocial\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"dataSolicitacao\\\">Fecha de la solicitud</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataSolicitacao\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataSolicitacao\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('dataSolicitacao') + ' ' + onFieldRequired('dataSolicitacao')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataSolicitacao')\\\" message=\\\"Data de solicitação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"codCliente\\\">Código de cliente</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codCliente\\\"\\r\\n              formControlName=\\\"codCliente\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"codClienteDBA\\\">Código SAP</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codClienteDBA\\\"\\r\\n              formControlName=\\\"codClienteDBA\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"limiteCreditoAtual\\\">Limite de crédito atual</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"limiteCreditoAtual\\\"\\r\\n              formControlName=\\\"limiteCreditoAtual\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"setorAtividade\\\">Setor de atividades</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"setorAtividade\\\"\\r\\n              formControlName=\\\"setorAtividade\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"dataUltimaVisita\\\">Fecha de la última visita</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataUltimaVisita\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataUltimaVisita\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"instalacoes\\\">Instalaciones</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"instalacoes\\\"\\r\\n              formControlName=\\\"instalacoes\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"numFuncionarios\\\">Número de empleados</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"numFuncionarios\\\"\\r\\n              formControlName=\\\"numFuncionarios\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 0 }\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"limiteCreditoSolicitado\\\">Limite de crédito solicitado</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"limiteCreditoSolicitado\\\"\\r\\n              formControlName=\\\"limiteCreditoSolicitado\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('limiteCreditoSolicitado') + ' ' + onFieldRequired('limiteCreditoSolicitado')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('limiteCreditoSolicitado')\\\" message=\\\"Limite de crédito solicitado é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"condicaoPagto\\\">Condiciones de pago</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"condicaoPagto\\\"\\r\\n              formControlName=\\\"condicaoPagto\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('condicaoPagto') + ' ' + onFieldRequired('condicaoPagto')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('condicaoPagto')\\\" message=\\\"Condição de pagamento é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <hr class=\\\"mt-0\\\">\\r\\n            <div class=\\\"mtc-title\\\">Solicitud de datos</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeVendedor\\\">Vendedor(a)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeVendedor\\\"\\r\\n              formControlName=\\\"nomeVendedor\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"telefoneVendedor\\\">Teléfono</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"telefoneVendedor\\\"\\r\\n              formControlName=\\\"telefoneVendedor\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"gestorVendas\\\">Jefe de ventas</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"gestorVendas\\\"\\r\\n              formControlName=\\\"gestorVendas\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('gestorVendas') + ' ' + onFieldRequired('gestorVendas')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('gestorVendas')\\\" message=\\\"Gestor(a) de venda é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeEscritorio\\\">Oficina de ventas</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeEscritorio\\\"\\r\\n              formControlName=\\\"nomeEscritorio\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"fornecedores\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Proveedores</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddFornecedor()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of fornecedores.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-6\\\">\\r\\n                  <label for=\\\"nome\\\">Nobre</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"nome\\\"\\r\\n                    formControlName=\\\"nome\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('fornecedores', i, 'nome') + ' ' + onNestedFieldRequired('fornecedores', i, 'nome')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-5\\\">\\r\\n                  <label for=\\\"telefone\\\">Telefono</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"telefone\\\"\\r\\n                    formControlName=\\\"telefone\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteFornecedor(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"clientes\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Clientes</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddCliente()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"clientes.controls.length > 0\\\">\\r\\n            <div class=\\\"form-row\\\" *ngFor=\\\"let item of clientes.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n              <div class=\\\"form-group col mb-0\\\">\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col-11\\\">\\r\\n                    <label for=\\\"nome\\\">Nombre</label>\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      id=\\\"nome\\\"\\r\\n                      formControlName=\\\"nome\\\"\\r\\n                      (input)=\\\"onInput()\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn-icon\\\"\\r\\n                      (click)=\\\"onDeleteCliente(i)\\\">\\r\\n                      <i class=\\\"fas fa-trash\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mb-3\\\" *ngIf=\\\"clientes.controls.length == 0\\\">\\r\\n            <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"bancos\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Bancos</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddBanco()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of bancos.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"nome\\\">Nome</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"nome\\\"\\r\\n                    formControlName=\\\"nome\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'nome') + ' ' + onNestedFieldRequired('bancos', i, 'nome')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-2\\\">\\r\\n                  <label for=\\\"agencia\\\">Agencia</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"agencia\\\"\\r\\n                    formControlName=\\\"agencia\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'agencia') + ' ' + onNestedFieldRequired('bancos', i, 'agencia')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"contaCorrente\\\">Cuenta corriente</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"contaCorrente\\\"\\r\\n                    formControlName=\\\"contaCorrente\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'contaCorrente') + ' ' + onNestedFieldRequired('bancos', i, 'contaCorrente')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"telefone\\\">Telefono</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"telefone\\\"\\r\\n                    formControlName=\\\"telefone\\\"\\r\\n                    telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'telefone') + ' ' + onNestedFieldRequired('bancos', i, 'telefone')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteBanco(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <hr class=\\\"mt-0\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <label>Ventas concentradas</label>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                  <input\\r\\n                    type=\\\"radio\\\"\\r\\n                    id=\\\"vendasConcentradasSim\\\"\\r\\n                    class=\\\"custom-control-input\\\"\\r\\n                    formControlName=\\\"vendasConcentradas\\\"\\r\\n                    value=\\\"Sim\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"vendasConcentradasSim\\\">Sim</label>\\r\\n                </div>\\r\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                  <input\\r\\n                    type=\\\"radio\\\"\\r\\n                    id=\\\"vendasConcentradasNao\\\"\\r\\n                    class=\\\"custom-control-input\\\"\\r\\n                    formControlName=\\\"vendasConcentradas\\\"\\r\\n                    value=\\\"Não\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"vendasConcentradasNao\\\">Não</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"previsaoCompraTon\\\">Compra mensual estimada (Ton)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"previsaoCompraTon\\\"\\r\\n              formControlName=\\\"previsaoCompraTon\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"previsaoCompraValor\\\">Compra mensual estimada (R$)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"previsaoCompraValor\\\"\\r\\n              formControlName=\\\"previsaoCompraValor\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"faturamentoMedio\\\">Facturación media mensual</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"faturamentoMedio\\\"\\r\\n              formControlName=\\\"faturamentoMedio\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"parecerVendedor\\\">Opinión del vendedor</label>\\r\\n            <textarea\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"parecerVendedor\\\"\\r\\n              formControlName=\\\"parecerVendedor\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('parecerVendedor') + ' ' + onFieldRequired('parecerVendedor')\\\">\\r\\n            </textarea>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('parecerVendedor')\\\" message=\\\"Parecer do vendedor é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row justify-content-center pt-5\\\" id=\\\"impressao-ficha-pac\\\" *ngIf=\\\"tipoVisao == 'ficha'\\\">\\r\\n    <div class=\\\"col-9\\\">\\r\\n      <h1>Propuesta de análisis de créditos (PAC)</h1>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Dados do cliente</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Razon social:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.razaoSocial == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.razaoSocial != null\\\">{{ dataFicha.razaoSocial }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Fecha de la solicitud:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.dataSolicitacao == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.dataSolicitacao != null\\\">{{ dataFicha.dataSolicitacao }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Código de cliente (TID):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.codCliente == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.codCliente != null\\\">{{ dataFicha.codCliente }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Código de cliente (SAP):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.codClienteDBA == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.codClienteDBA != null\\\">{{ dataFicha.codClienteDBA }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Limite de crédito actual:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoAtual == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoAtual == null\\\">{{ dataFicha.limiteCreditoAtual | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Sector de actividade:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.setorAtividade == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.setorAtividade != null\\\">{{ dataFicha.setorAtividade }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Fecha de la última visita:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.dataUltimaVisita == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.dataUltimaVisita != null\\\">{{ dataFicha.dataUltimaVisita }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Instalaciones:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.instalacoes == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.instalacoes != null\\\">{{ dataFicha.instalacoes }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Número de funcionários:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.numFuncionarios == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.numFuncionarios == null\\\">{{ dataFicha.numFuncionarios }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Propuestas</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Limite de crédito solicitado:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoSolicitado == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoSolicitado != null\\\">{{ dataFicha.limiteCreditoSolicitado | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Condiciones de pago:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto != null\\\">{{ dataFicha.condicaoPagto }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Datos del solicitante</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Vendedor(a):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto != null\\\">{{ dataFicha.nomeVendedor }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Gestor(a):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas != null\\\">{{ dataFicha.gestorVendas | uppercase }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Telefono:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas != null\\\">{{ dataFicha.telefoneVendedor }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Oficina de ventas:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.nomeEscritorio == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.nomeEscritorio != null\\\">{{ dataFicha.nomeEscritorio }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Principales proveedores</div>\\r\\n        <div *ngIf=\\\"dataFicha.fornecedores.length == 0\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dataFicha.fornecedores.length > 0\\\">\\r\\n          <div class=\\\"row mt-2\\\" *ngFor=\\\"let item of dataFicha.fornecedores\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Nombre:</strong>\\r\\n                <span *ngIf=\\\"item.nome == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.nome != null\\\">{{ item.nome | uppercase }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Telefono:</strong>\\r\\n                <span *ngIf=\\\"item.telefone == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.telefone != null\\\">{{ item.telefone }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Principales clientes</div>\\r\\n        <div *ngIf=\\\"dataFicha.clientes.length == 0\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dataFicha.clientes.length > 0\\\">\\r\\n          <div *ngFor=\\\"let item of dataFicha.clientes\\\">\\r\\n            <p class=\\\"mt-2 mb-0\\\">\\r\\n              <strong class=\\\"mr-2\\\">Nome:</strong> {{ item.nome | uppercase }}\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Principaless bancos</div>\\r\\n        <div *ngIf=\\\"dataFicha.bancos.length == 0\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dataFicha.bancos.length > 0\\\">\\r\\n          <div class=\\\"row\\\" *ngFor=\\\"let item of dataFicha.bancos\\\">\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Banco:</strong>\\r\\n                <span *ngIf=\\\"item.nome == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.nome != null\\\">{{ item.nome | uppercase }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Agencia:</strong>\\r\\n                <span *ngIf=\\\"item.agencia == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.agencia != null\\\">{{ item.agencia }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Cuenta corrinte:</strong>\\r\\n                <span *ngIf=\\\"item.contaCorrente == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.contaCorrente != null\\\">{{ item.contaCorrente }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Telefono:</strong>\\r\\n                <span *ngIf=\\\"item.telefone == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.telefone != null\\\">{{ item.telefone }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Datos financieros</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Vendas concretadas:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.vendasConcentradas == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.vendasConcentradas != null\\\">{{ dataFicha.vendasConcentradas }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Previsión mensual de compras (Ton):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraTon == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraTon != null\\\">{{ dataFicha.previsaoCompraTon | number:'1.3-3' }}t</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Previsión mensual de compras (R$):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraValor == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraValor != null\\\">{{ dataFicha.previsaoCompraValor | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Facturación media mensual (R$):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.faturamentoMedio == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.faturamentoMedio != null\\\">{{ dataFicha.faturamentoMedio | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-0\\\">\\r\\n        <div class=\\\"mtc-title\\\">Opinión del vendedor</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <span *ngIf=\\\"dataFicha.parecerVendedor == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.parecerVendedor != null\\\">{{ dataFicha.parecerVendedor | uppercase }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-notas-promissorias',\r\n  templateUrl: './notas-promissorias.component.html',\r\n  styleUrls: ['./notas-promissorias.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent\r\n  implements OnInit {\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  notasPromissorias: any = [];\r\n  notasPromissoriasLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getNotasPromissorias(params['id']);\r\n    });\r\n  }\r\n\r\n  getNotasPromissorias(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getNotasPromissorias(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.notasPromissorias = response['result'];\r\n        }\r\n        this.notasPromissoriasLoaded = true;\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'BAIXADA') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'QUITADA') {\r\n      borderClass = 'border-primary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2hpc3Rvcmljby1maW5hbmNlaXJvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Dias não úteis\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dataInicial\\\">Fecha inicial</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataInicial\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataInicial\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired('dataInicial')\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial') == 'required'\\\" message=\\\"Data Inicial é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dataFinal\\\">Fecha final</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataFinal\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataFinal\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired('dataFinal')\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal') == 'required'\\\" message=\\\"Data Final é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Cod. Material</th>\\r\\n            <th scope=\\\"col\\\">Material</th>\\r\\n            <th scope=\\\"col\\\">Línea / Clase</th>\\r\\n            <th scope=\\\"col\\\">Ton. Vendidas</th>\\r\\n            <th scope=\\\"col\\\">Nota Fiscal</th>\\r\\n            <th scope=\\\"col\\\">Dt. Ultima Compra</th>\\r\\n            <th scope=\\\"col\\\">Precio Unitário</th>\\r\\n            <th scope=\\\"col\\\">Precio Total</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let ultimoPreco of dadosPagination; let i = index\\\">\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.codMaterial }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.nomeMaterial | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.linha }} / {{ ultimoPreco.classe }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.qtdeToneladasVendidas | number:'1.3-3' }} ton \\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.nrNotaFiscal }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.dataUltimaCompra | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.precoUnitarioMaterial | currency:'BRL':'symbol':'1.2-2' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.precoTotalMaterial | currency:'BRL':'symbol':'1.2-2' }}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\";"]}