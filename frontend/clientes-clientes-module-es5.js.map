{"version":3,"sources":["webpack:///src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.scss","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes.component.scss","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.html","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.scss","webpack:///src/app/modules/comercial/services/vendedores.service.ts","webpack:///src/app/shared/services/core/functions.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.html","webpack:///src/app/modules/comercial/services/clientes.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.html","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.service.ts","webpack:///src/app/modules/comercial/clientes/clientes-routing.module.ts","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.scss","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.module.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.ts","webpack:///src/app/modules/comercial/clientes/clientes.module.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.scss","webpack:///src/app/modules/comercial/clientes/clientes-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.html","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.service.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/shared/services/core/form-rules.service.ts","webpack:///src/app/modules/comercial/clientes/lista/lista.component.scss","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.scss","webpack:///src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.ts","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.ts","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.scss","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro-routing.module.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.scss","webpack:///src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.html","webpack:///src/app/modules/comercial/clientes/cadastro/dados-faturamento/formulario/formulario-rules-resolver.guard.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.html","webpack:///src/app/modules/comercial/clientes/lista/lista.component.html","webpack:///src/app/modules/comercial/clientes/cadastro/dados-faturamento/formulario/formulario.service.ts","webpack:///src/app/modules/comercial/clientes/lista/lista.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.scss","webpack:///src/app/modules/comercial/clientes/detalhes/detalhes.component.ts","webpack:///src/app/shared/services/ws/cnpj.service.ts","webpack:///src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.html","webpack:///src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.ts","webpack:///src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.scss","webpack:///src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.html"],"names":["ComercialClientesHistoricoFinanceiroComponent","router","activatedRoute","detalhesService","pnotifyService","location","atividadesService","titleService","loaderFullScreen","breadCrumbTree","cliente","getPNotify","snapshot","data","registrarAcesso","getDetalhes","notice","navigate","error","back","subscribe","params","pipe","next","response","setBreadCrumb","onRouterChange","handleLoadDependenciesError","id","url","split","currRoute","length","descricao","routerLink","breadCrumbConfig","route","setTitle","events","event","selector","template","ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent","historicoFinanceiroService","principal","historicoCobrancas","ocorrenciasDuplicatas","ocorrenciasComerciais","duplicataLoaded","queryParams","getMateriaisDuplicata","ComercialVendedoresService","http","API","get","codCliente","providedIn","FunctionsService","valor","tamanho","toString","trim","i","ComercialClientesService","httpParams","param","append","documento","getDadosCliente","post","put","idEndereco","idSituacao","idContato","idSeqTid","idFilho","idAnexo","ComercialClientesPreCadastroService","vendedoresService","dadosFaturamentoService","BASE_URL","vendedores","getVendedores","cnaes","getCnaes","observe","routes","path","component","resolve","rules","canDeactivate","loadChildren","then","m","ComercialClientesCadastroModule","ComercialClientesHistoricoFinanceiroModule","redirectTo","pathMatch","ComercialClientesRoutingModule","imports","forChild","exports","ComercialClientesUltimosPrecosComponent","localeService","formBuilder","ultimosPrecos","dateService","confirmModalService","detailPanelService","comercialService","loaderNavbar","showDetailPanel","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","setFormFilter","formValue","checkRouterParams","form","group","dataInicial","required","dataFinal","getFirstDayMonth","getLastDayMonth","activatedRouteSubscription","keys","atob","JSON","parse","search","forEach","formKey","paramKey","convertStringToDate","isNaN","Number","unsubscribe","field","onFieldInvalid","errors","hasOwnProperty","touched","formControl","controls","validator","validationResult","valid","setRouterParams","verificaParams","relativeTo","q","btoa","stringify","value","convertToUrlDate","Date","hide","getListaUltimosPrecos","success","slice","mensagem","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialClientesPropostaAnaliseCreditoResolverGuard","clienteService","getPropostaAnaliseCredito","result","razaoSocial","codSAP","limiteCredito","setorAtividade","nomeVendedor","telefoneVendedor","nomeEscritorio","declarations","forRoot","ComercialClientesHistoricoFinanceiroDetalhesComponent","filterPipe","tableConfig","subtitleBorder","pedidos","pedidosPagination","pedidosFiltered","pedidosLoaded","parent","grupoEconomico","getPedidos","getDetalhesPedidos","status","borderClass","startItem","page","endItem","transform","numDuplicata","ComercialClientesModule","ComercialClientesResolverGuard","clientesService","getPermissaoAcesso","responseCode","ComercialClientesHistoricoFinanceiroCorteDobraComponent","corteDobra","corteDobraLoaded","getCorteDobra","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","d","h","padStart","s","getSeconds","time","timeSplit","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","ComercialClientesUltimosPrecosService","ComercialClientesHistoricoFinanceiroService","set","ComercialClientesHistoricoFinanceiroDebitosComponent","debitos","debitosLoaded","getDebitos","ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent","acumulosMensais","acumulosMensaisLoaded","getAcumulosMensais","ComercialService","FormRulesService","formRef","ComercialClientesPreCadastroComponent","preCadastroService","cnpjService","functionsService","modalConfig","MASKS","formChanged","tipoPessoa","submittingForm","maxLengthRules","maxLengthMessages","dadosCliente","getFormFields","setMaxLengthRules","setFormBuilder","loadDependencies","handleFormFieldsError","nome","sobrenome","nomeFantasia","emailNfe","cpf","cnpj","nullValidator","maxLength","vendedor","cnae","email","telefone","atividadePrincipal","array","atividadeSecundaria","setType","validateCPF","validateCNPJ","reset","setValidators","updateValueAndValidity","clearValidators","atividade","removeAt","code","replace","push","text","atividades","getExisteCpfCnpj","verificacao","setErrors","incorrect","showDetails","getCnpjData","setValue","fantasia","atividade_principal","checkCnae","pushAtividadePrincipal","pushAtividadeSecundaria","atividades_secundarias","modalDetalhesCliente","podeAcessar","onCloseDetails","exists","getData","formObj","completaZeroEsquerda","postCliente","confirm","ComercialClientesPropostaAnaliseCreditoComponent","pdfService","tipoVisao","dataFicha","disabled","dataSolicitacao","codClienteDBA","dataUltimaVisita","instalacoes","numFuncionarios","limiteCreditoAtual","limiteCreditoSolicitado","condicaoPagto","gestorVendas","fornecedores","clientes","vendasConcentradas","bancos","previsaoCompraTon","previsaoCompraValor","faturamentoMedio","parecerVendedor","setFormFornecedoresClientesBancos","onAddFornecedor","onAddBanco","agencia","contaCorrente","index","formGroup","onNestedFieldInvalid","nestedForm","setTimeout","formData","getRawValue","download","ComercialClientesHistoricoFinanceiroResumoComponent","sinteticoPendenciasLoaded","sintetico","atrasoPagamento","tempoEntrega","totalAtraso","pagtoAntecipado","creditoSeguradora","grupoEconomicoLoaded","showPendenciasDetalhes","pendencias","titulos","notasDebito","notasPromissorias","chequesDevolvidos","reservaBobinas","saldo","visaoGrupoEconomico","getResumoSintetico","getGrupoEconomico","onLoadingGrupoEconomico","getResumoPedidos","toFixed","ComercialClientesDetalhesResolverGuard","children","ComercialHistoricoFinanceiroRoutingModule","ComercialClientesCadastroDadosFaturamentoRulesResolverGuard","formRulesService","getRules","ComercialClientesCadastroDadosFaturamentoFormularioService","tiposCadastro","getTiposCadastro","contribuintes","getContribuintes","setorAtividades","getSetorAtividades","regimesTributacao","getRegimesTributacao","finalidadesMaterial","getFinalidadesMaterial","ComercialClientesListaComponent","dataLoaded","dadosCadastraisLoaded","dadosCadastraisEmpty","contatosLoaded","contatosEmpty","searchSubmitted","showAdvancedFilter","currentUser","localStorage","getItem","matricula","ativos","inativos","potencial","arquivados","orderBy","orderType","clientesPagination","dadosCadastrais","contatos","getFormFilters","onDetailPanelEmitter","showDetailPanelSubscription","config","showing","onCloseDetailPanel","unshift","formFilter","pesquisa","buscarPor","situacao","segurado","carteira","pagina","registros","id_group_econ","aux_cartera","searchInputValue","setSubmittedSearch","listStatus","getStatus","setStatus","column","onFilter","queryParamsHandling","buscandoPor","getClientes","loadedFinished","clienteSelecionado","getContatosResumido","resetClienteSelecionado","ComercialClientesDetalhesComponent","badgeClass","CnpjService","e","ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent","notasPromissoriasLoaded","getNotasPromissorias"],"mappings":"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","file":"clientes-clientes-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2RlYml0b3MvZGViaXRvcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Pre-Registro\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-6\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <div class=\\\"btn-group btn-group-sm\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-light active\\\"\\n                [ngClass]=\\\"{'active': tipoPessoa == 'F'}\\\"\\n                (click)=\\\"setType('F')\\\">\\n                <strong>Persona fisica</strong>\\n              </button>\\n              \\n              <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-light active\\\"\\n              [ngClass]=\\\"{'active': tipoPessoa == 'J'}\\\"\\n              (click)=\\\"setType('J')\\\">\\n              <strong>persona Juridica</strong>\\n            </button>\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"tipoPessoa == 'F'\\\">\\n            <label for=\\\"cpf\\\"> CARNET DE IDENTIDAD </label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"cpf\\\"\\n              formControlName=\\\"cpf\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('cpf') + ' ' + onFieldRequired('cpf')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cpf') == 'required'\\\" message=\\\"Carnet inválido.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"tipoPessoa == 'J'\\\">\\n            <label for=\\\"cnpj\\\">NIT</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"cnpj\\\"\\n              formControlName=\\\"cnpj\\\"\\n              (input)=\\\"onInput()\\\"\\n              (blur)=\\\"validateCNPJ()\\\"\\n              [ngClass]=\\\"onFieldError('cnpj') + ' ' + onFieldRequired('cnpj')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnpj') == 'required'\\\" message=\\\"NIT inválido.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"vendedor\\\">Atribuir vendedor</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"vendedores\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"vendedor\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"id\\\"\\n              formControlName=\\\"vendedor\\\"\\n              (change)=\\\"onInput()\\\">\\n            </ng-select>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"tipoPessoa == 'F'\\\">\\n            <label for=\\\"nome\\\">Nombre</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nome\\\"\\n              formControlName=\\\"nome\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('nome') + ' ' + onFieldRequired('nome')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome') == 'required'\\\" message=\\\"Nombre es obligatorio.\\\"></invalid-form-control>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome') == 'maxlength'\\\" [message]=\\\"maxLengthMessages.nome\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"tipoPessoa == 'F'\\\">\\n            <label for=\\\"sobrenome\\\">Apellido</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"sobrenome\\\"\\n              formControlName=\\\"sobrenome\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('sobrenome') + ' ' + onFieldRequired('sobrenome')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('sobrenome') == 'required'\\\" message=\\\"Apellido es obligatorio.\\\"></invalid-form-control>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('sobrenome') == 'maxlength'\\\" [message]=\\\"maxLengthMessages.sobrenome\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"tipoPessoa == 'J'\\\">\\n            <label for=\\\"razaoSocial\\\">Razon social</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"razaoSocial\\\"\\n              formControlName=\\\"razaoSocial\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('razaoSocial') + ' ' + onFieldRequired('razaoSocial')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial') == 'required'\\\" message=\\\"Razon social es obligatorio.\\\"></invalid-form-control>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial') == 'maxlength'\\\" [message]=\\\"maxLengthMessages.razaoSocial\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"tipoPessoa == 'J'\\\">\\n            <label for=\\\"nomeFantasia\\\">Nombre</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeFantasia\\\"\\n              formControlName=\\\"nomeFantasia\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('nomeFantasia') + ' ' + onFieldRequired('nomeFantasia')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeFantasia') == 'required'\\\" message=\\\"Nombre es obligatorio.\\\"></invalid-form-control>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeFantasia') == 'maxlength'\\\" [message]=\\\"maxLengthMessages.nomeFantasia\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\" *ngIf=\\\"tipoPessoa == 'J'\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"cnae\\\">CNAE (Actividad Economica)</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"cnaes\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"cnae\\\"\\n              bindLabel=\\\"descricao\\\"\\n              bindValue=\\\"id\\\"\\n              formControlName=\\\"cnae\\\"\\n              (change)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('cnae') + ' ' + onFieldRequired('cnae')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnae') == 'required'\\\" message=\\\"CNAE es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"emailNfe\\\">E-mail NFE</label>\\n            <input\\n              type=\\\"email\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"emailNfe\\\"\\n              formControlName=\\\"emailNfe\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('emailNfe') + ' ' + onFieldRequired('emailNfe')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('emailNfe') == 'required'\\\" message=\\\"E-mail NFE es obligatorio.\\\"></invalid-form-control>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('emailNfe') == 'maxlength'\\\" [message]=\\\"maxLengthMessages.emailNfe\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"telefone\\\">Telefono</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"telefone\\\"\\n              formControlName=\\\"telefone\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('telefone') + ' ' + onFieldRequired('telefone')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('telefone') == 'required'\\\" message=\\\"Telefono es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <!-- <label for=\\\"tipopessoa\\\">Tipo de persona</label> -->\\n            <!-- <select class=\\\"form-control\\\" id=\\\"tipopessoa\\\" formControlName=\\\"tipopessoa\\\" (change)=\\\"onInput()\\\">\\n              <option value=\\\"F\\\">Persona 1 </option>\\n              <option value=\\\"J\\\">Persona 2 </option>\\n              <option value=\\\"J\\\">Persona 3 </option>\\n            </select> -->\\n          </div>\\n        </div>\\n        \\n        <!-- <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"emailMarketing\\\">E-mail Marketing</label>\\n            <input\\n              type=\\\"email\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"emailMarketing\\\"\\n              formControlName=\\\"emailMarketing\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('emailMarketing') + ' ' + onFieldRequired('emailMarketing')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('emailMarketing') == 'maxlength'\\\" [message]=\\\"maxLengthMessages.emailMarketing\\\"></invalid-form-control>\\n          </div>\\n        </div> -->\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\\n<ng-template #modalDetalhesCliente>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Oops! Ese cliente ya esta registrado</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCloseDetails()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"mtc-title\\\">Datos de registro</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col\\\">\\n        <label>Código</label>\\n        <div *ngIf=\\\"dadosCliente.codCliente == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.codCliente != null\\\">{{ dadosCliente.codCliente }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-6\\\" *ngIf=\\\"dadosCliente.tipo == 'F'\\\">\\n        <label>CPF</label>\\n        <div *ngIf=\\\"dadosCliente.cpf == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.cpf != null\\\">{{ dadosCliente.cpf }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-6\\\" *ngIf=\\\"dadosCliente.tipo == 'J'\\\">\\n        <label>NIT</label>\\n        <div *ngIf=\\\"dadosCliente.cnpj == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.cnpj != null\\\">{{ dadosCliente.cnpj }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>Nombre fantasia</label>\\n        <div *ngIf=\\\"dadosCliente.nomeFantasia == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.nomeFantasia != null\\\">{{ dadosCliente.nomeFantasia }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col\\\">\\n        <label>Razon social</label>\\n        <div *ngIf=\\\"dadosCliente.razaoSocial == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.razaoSocial != null\\\">{{ dadosCliente.razaoSocial }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col\\\">\\n        <label>Endereço</label>\\n        <div *ngIf=\\\"dadosCliente.endereco == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.endereco != null\\\">{{ dadosCliente.endereco }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>Bairro</label>\\n        <div *ngIf=\\\"dadosCliente.bairro == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.bairro != null\\\">{{ dadosCliente.bairro }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>CEP</label>\\n        <div *ngIf=\\\"dadosCliente.cep == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.cep != null\\\">{{ dadosCliente.cep }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>Cidade</label>\\n        <div *ngIf=\\\"dadosCliente.cidade == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.cidade != null\\\">{{ dadosCliente.cidade }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>Estado</label>\\n        <div *ngIf=\\\"dadosCliente.uf == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.uf != null\\\">{{ dadosCliente.uf }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col\\\">\\n        <label>Segurado</label>\\n        <div *ngIf=\\\"dadosCliente.segurado != ''\\\">SI</div>\\n        <div *ngIf=\\\"dadosCliente.segurado == ''\\\">NO</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>Vendedor</label>\\n        <div *ngIf=\\\"dadosCliente.vendedor == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.vendedor != null\\\">{{ dadosCliente.vendedor }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>Escritório</label>\\n        <div *ngIf=\\\"dadosCliente.escritorio == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.escritorio != null\\\">{{ dadosCliente.escritorio }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCliente.codSAP != '' && dadosCliente.codSAP != null\\\">\\n        <label>Código DBA</label>\\n        <div>{{ dadosCliente.codSAP }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCliente.escritorioDba != '' && dadosCliente.escritorioDba != null\\\">\\n        <label>Sucursal</label>\\n        <div>{{ dadosCliente.escritorioDba }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCliente.ultimaCompraDba != '' && dadosCliente.ultimaCompraDba != null\\\">\\n        <label>Última compra</label>\\n        <div>{{ dadosCliente.ultimaCompraDba }}</div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"onCloseDetails()\\\">Fechar</button>\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"btn btn-primary\\\"\\n      (click)=\\\"onNavigateDetail()\\\">\\n      Detalles\\n    </button>\\n  </div>\\n</ng-template>\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Detalles\\\"></app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n      <h5 class=\\\"pt-2 mb-4\\\">{{ cliente.razaoSocial }}</h5>\\n    </div>\\n  </div>\\n  <div class=\\\"row mb-4\\\">\\n    <div class=\\\"col d-flex justify-content-center w-100\\\">\\n      <h5 tooltip=\\\"Código do cliente\\\">\\n        <span class=\\\"badge badge-dark\\\">CÓD.: {{ cliente.codCliente }}</span>\\n      </h5>\\n      <h5 *ngIf=\\\"cliente.nomeVendedor\\\" class=\\\"ml-3\\\" tooltip=\\\"Vendedor\\\">\\n        <span class=\\\"badge badge-light\\\">{{ cliente.nomeVendedor | uppercase }}</span>\\n      </h5>\\n      <h5 class=\\\"ml-3\\\" tooltip=\\\"Status\\\">\\n        <span class=\\\"badge\\\" [ngClass]=\\\"classStatusBadge(cliente.status)\\\">{{ cliente.status | uppercase }}</span>\\n      </h5>\\n      <h5 *ngIf=\\\"cliente.codClienteDBA\\\" class=\\\"ml-3\\\" tooltip=\\\"Código DBA do cliente\\\">\\n        <span class=\\\"badge badge-warning\\\">CÓD. DBA: {{ cliente.codClienteDBA }}</span>\\n      </h5>\\n    </div>\\n  </div>\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-9\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <!-- <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-folder-open\\\"\\n            text=\\\"Datos de registro\\\"\\n            [routerLink]=\\\"['../../cadastro', cliente.codCliente, 'dados-faturamento']\\\">\\n          </card-button>\\n        </div> -->\\n         <!--div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-chart-pie\\\"\\n            text=\\\"Dashboard\\\"\\n            [routerLink]=\\\"['../../dashboard', cliente.codCliente]\\\">\\n          </card-button>\\n        </div--> \\n        <!-- <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-chart-bar\\\"\\n            text=\\\"Histórico Financeiro\\\"\\n            [routerLink]=\\\"['../../historico-financeiro', cliente.codCliente, 'resumo']\\\">\\n          </card-button>\\n        </div> -->\\n        <!-- <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-handshake\\\"\\n            text=\\\"Ficha PAC\\\"\\n            [routerLink]=\\\"['../../proposta-analise-credito', cliente.codCliente]\\\">\\n          </card-button>\\n        </div>\\n      </div> -->\\n      <!-- <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-shopping-cart\\\"\\n            text=\\\"Vender\\\"\\n            [routerLink]=\\\"['../../../ciclo-vendas/139/cotacoes-pedidos/lista/']\\\"\\n            [queryParams]=\\\"{codCliente: cliente.codCliente}\\\">\\n          </card-button>\\n        </div> -->\\n        <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"far fa-calendar-alt\\\"\\n            text=\\\"Agendar\\\"\\n            [routerLink]=\\\"['../../../agenda/novo', cliente.codCliente]\\\">\\n          </card-button>\\n        </div>\\n        <!-- <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-tasks\\\"\\n            text=\\\"Propuestas / Pedidos\\\"\\n            [routerLink]=\\\"['../../../tid-software/11']\\\"\\n            [queryParams]=\\\"{ codCliente: cliente.codCliente, sistema: 'vendas', modulo: 3 }\\\">\\n          </card-button>\\n        </div> -->\\n        <!-- <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-list\\\"\\n            text=\\\"Últimos precios\\\"\\n            [routerLink]=\\\"['../../../clientes/ultimos-precos', cliente.codCliente]\\\">\\n          </card-button>\\n        </div> -->\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { finalize } from 'rxjs/operators';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialClientesDetalheService } from './../detalhes/detalhes.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro',\n  templateUrl: './historico-financeiro.component.html',\n  styleUrls: ['./historico-financeiro.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroComponent implements OnInit {\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  cliente: any = {};\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private detalhesService: ComercialClientesDetalheService,\n    private pnotifyService: PNotifyService,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    if (this.activatedRoute.snapshot.data['response']['responseCode'] === 200) {\n      this.registrarAcesso();\n      this.getDetalhes();\n    } else if (\n      this.activatedRoute.snapshot.data['response']['responseCode'] === 403\n    ) {\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\n      this.router.navigate(['/comercial/home']);\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getDetalhes() {\n    this.activatedRoute.params.subscribe(params => {\n      this.detalhesService\n        .getDetalhes(params['id'])\n        .pipe(\n          finalize(() => {\n            this.loaderFullScreen = false;\n          })\n        )\n        .subscribe({\n          next: (response: any) => {\n            if (response['responseCode'] === 200) {\n              this.cliente = response['result'];\n              this.setBreadCrumb(params['id']);\n              this.onRouterChange();\n            } else {\n              this.handleLoadDependenciesError();\n            }\n          },\n          error: (error: any) => {\n            this.handleLoadDependenciesError();\n          }\n        });\n    });\n  }\n\n  handleLoadDependenciesError() {\n    this.pnotifyService.error();\n    this.location.back();\n  }\n\n  setBreadCrumb(id: number) {\n    let router = this.router.url.split('/');\n    let currRoute = router[router.length - 1];\n\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home'\n      },\n      {\n        descricao: 'Busqueda de clientes',\n        routerLink: '/comercial/clientes/lista'\n      },\n      {\n        descricao: 'Detalhes',\n        routerLink: `/comercial/clientes/detalhes/${id}`\n      },\n      {\n        descricao: 'Histórico financeiro',\n        routerLink: `/comercial/clientes/historico-financeiro/${id}/resumo`\n      },\n      {\n        descricao: this.breadCrumbConfig(currRoute)\n      }\n    ];\n  }\n\n  breadCrumbConfig(route: string) {\n    let descricao = '';\n\n    if (route == 'resumo') {\n      descricao = 'Resumo';\n    } else if (route == 'detalhes') {\n      descricao = 'Detalhes';\n    } else if (route == 'acumulos-mensais') {\n      descricao = 'Acúmulos mensais';\n    } else if (route == 'notas-promissorias') {\n      descricao = 'Notas promissórias';\n    } else if (route == 'debitos') {\n      descricao = 'Débitos em aberto';\n    } else if (route == 'corte-dobra') {\n      descricao = 'Corte Dobra';\n    } else {\n      descricao = 'Materiais da duplicata';\n    }\n\n    this.titleService.setTitle(descricao);\n\n    return descricao;\n  }\n\n  onRouterChange() {\n    this.router.events.subscribe(event => {\n      this.activatedRoute.params.subscribe(params => {\n        this.setBreadCrumb(params['id']);\n      });\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-materiais-duplicata',\n  templateUrl: './materiais-duplicata.component.html',\n  styleUrls: ['./materiais-duplicata.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent\n  implements OnInit {\n  principal: any = {};\n  historicoCobrancas: any = {};\n  ocorrenciasDuplicatas: any = {};\n  ocorrenciasComerciais: any = {};\n  duplicataLoaded: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.historicoFinanceiroService\n        .getMateriaisDuplicata(params)\n        .subscribe((response: any) => {\n          if (response['responseCode'] === 200) {\n            this.principal = response['result']['principal'];\n            this.historicoCobrancas = response['result']['historicoCobrancas'];\n            this.ocorrenciasDuplicatas =\n              response['result']['ocorrenciasDuplicatas'];\n            this.ocorrenciasComerciais =\n              response['result']['ocorrenciasComerciais'];\n          }\n          this.duplicataLoaded = true;\n        });\n    });\n  }\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!notasPromissoriasLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carga de pagarés...</strong>\\n    </div>\\n    <custom-table [config]=\\\"tableConfig\\\">\\n      <ng-template #thead let-thead *ngIf=\\\"notasPromissorias.length > 0 && notasPromissoriasLoaded\\\">\\n        <tr>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Registro</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Bancário</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Baixa</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor da baixa</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencimento</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor da duplicata</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody>\\n        <tr *ngFor=\\\"let nota of notasPromissorias\\\">\\n          <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(nota.situacao)\\\">{{ nota.numRegistro }}</td>\\n          <td class=\\\"text-center\\\">{{ nota.numBancario }}</td>\\n          <td class=\\\"text-center\\\">{{ nota.dataBaixa }}</td>\\n          <td class=\\\"text-center\\\">{{ nota.valorBaixa | currency:'BRL':'symbol':'1.2-2' }}</td>\\n          <td class=\\\"text-center\\\">{{ nota.dataVencimento }}</td>\\n          <td class=\\\"text-center\\\">{{ nota.valorDuplicata | currency:'BRL':'symbol':'1.2-2' }}</td>\\n        </tr>\\n      </ng-template>\\n    </custom-table>\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"notasPromissorias.length > 0 && notasPromissoriasLoaded\\\">\\n      <div class=\\\"col-6 d-flex justify-content-center w-100\\\">\\n        <div class=\\\"d-flex justify-content-around\\\">\\n          <div class=\\\"legend green\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">BAIXADA</div>\\n          </div>\\n          <div class=\\\"legend blue\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">QUITADA</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <empty-result\\n      message=\\\"Nenhuma informação encontrada\\\"\\n      *ngIf=\\\"notasPromissorias.length == 0 && notasPromissoriasLoaded\\\">\\n    </empty-result>\\n  </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL25vdGFzLXByb21pc3Nvcmlhcy9ub3Rhcy1wcm9taXNzb3JpYXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL3Jlc3Vtby9yZXN1bW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialVendedoresService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\n\n  constructor(protected http: HttpClient) {}\n\n  getDetalhesCadastro() {\n    return this.http\n      .get(`${this.API}/detalhes-cadastro`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVendedores() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\n  }\n\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/carteira-clientes`,\n      {\n        params: params\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getValidaClienteCarteira(\n    codCliente: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVinculoOperadores() {\n    return this.http\n      .get(`${this.API}/vinculo-operadores`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FunctionsService {\n  completaZeroEsquerda(valor: any, tamanho: number): string {\n    if (valor === null) return null;\n\n    valor = valor.toString();\n    valor = valor.trim();\n\n    if (valor.length < tamanho) {\n      for (let i = valor.length; i < tamanho; i++) {\n        valor = `0${valor}`;\n      }\n    }\n\n    return valor;\n  }\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!pedidosLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carga de duplicados...</strong>\\n    </div>\\n    <div *ngIf=\\\"pedidos.length > 0 && pedidosLoaded\\\">\\n      <div class=\\\"row justify-content-between\\\">\\n        <div class=\\\"col-5\\\">\\n          <div class=\\\"d-flex\\\">\\n            <div class=\\\"legend green\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">ABIERTO</div>\\n            </div>\\n            <div class=\\\"legend blue\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">QUITADA</div>\\n            </div>\\n            <div class=\\\"legend yellow\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">VENCIDA</div>\\n            </div>\\n            <div class=\\\"legend red\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">PROTESTA</div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-5\\\">\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"filtro\\\" class=\\\"col-2 text-right pb-0 pt-1 pr-2\\\">Filtrar</label>\\n            <div class=\\\"col-10 pl-0\\\">\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control form-control-sm\\\"\\n                id=\\\"filtro\\\"\\n                placeholder=\\\"Número da duplicata\\\"\\n                #filtro\\n                (input)=\\\"onFilter(filtro.value)\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Facturamiento</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. pedido</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicar</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencimiento</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Banco</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Baja</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Pré-datada</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Atraso</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Entrega</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let pedido of pedidosPagination\\\">\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(pedido.situacao)\\\">{{ pedido.empresa }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataFaturamento }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.numPedido }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.numDuplicata }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataVencimento }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.banco }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataBaixa }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.tipoBaixa }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataPreDatada }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.atraso }} dias</td>\\n            <td class=\\\"text-center\\\">{{ pedido.entrega }} dias</td>\\n            <td class=\\\"text-center\\\">{{ pedido.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\n            <td class=\\\"text-center\\\">\\n              <a\\n                class=\\\"btn-icon-sm\\\"\\n                tooltip=\\\"Materiais da duplicata\\\"\\n                container=\\\"body\\\"\\n                [routerLink]=\\\"['../materiais-duplicata']\\\"\\n                [queryParams]=\\\"{\\n                  codEmpresa: pedido.idEmpresa,\\n                  numPedido: pedido.numPedido,\\n                  sequencia: pedido.sequencia\\n                }\\\">\\n                <i class=\\\"fas fa-search\\\"></i>\\n              </a>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"row\\\" *ngIf=\\\"pedidosLoaded\\\">\\n        <div class=\\\"col\\\">\\n          <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"pedidosFiltered.length > itemsPerPage\\\">\\n            <pagination\\n              [maxSize]=\\\"maxSize\\\"\\n              [totalItems]=\\\"pedidosFiltered.length\\\"\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n              [boundaryLinks]=\\\"true\\\"\\n              previousText=\\\"&lsaquo;\\\"\\n              nextText=\\\"&rsaquo;\\\"\\n              firstText=\\\"&laquo;\\\"\\n              lastText=\\\"&raquo;\\\">\\n            </pagination>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"pedidos.length == 0 && pedidosLoaded\\\"></empty-result>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialClientesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes`;\n\n  constructor(protected http: HttpClient) {}\n\n  getStatus(): Observable<Object> {\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1), retry(2));\n  }\n\n  getClientes(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/pesquisa/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getClientesGrupoEconomico(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/grupo-economico/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getPermissaoAcesso(id: any): Observable<Object> {\n    return this.http\n      .get(`${this.API}/permissao-acesso/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/pesquisa/detalhes/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatosResumido(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getExisteCpfCnpj(\n    documento: any,\n    getDadosCliente: boolean\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/verificar-cpf-cnpj/${documento}?getDadosCliente=${\n          getDadosCliente === true ? 1 : 0\n        }`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  postCliente(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/pre-cadastro`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPropostaAnaliseCredito(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/proposta-analise-credito/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosFaturamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-faturamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosFaturamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-faturamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteAtividadeSecundaria(\n    codCliente: number,\n    id: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/atividade-secundaria/${codCliente}/${id}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getEnderecos(\n    codCliente: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/cadastro/carregar/enderecos/${codCliente}`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getEndereco(\n    codCliente: number,\n    idEndereco: number,\n    idSituacao: number\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/endereco/${codCliente}/${idEndereco}/${idSituacao}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  updateEndereco(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/endereco`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteEndereco(codCliente: number, id: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/endereco/${codCliente}/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatos(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContato(\n    codCliente: number,\n    idContato: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contato/${codCliente}/${idContato}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateContato(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/contato`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteMeioContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/meio-contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteFilho(idFilho: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/filho/${idFilho}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosRelacionamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-relacionamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosRelacionamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-relacionamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPotencialCompra(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/potencial-compra/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updatePotencialCompra(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/potencial-compra`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getAnexos(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/anexos/${codCliente}`)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  uploadAnexo(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/cadastro/upload/anexo`, data)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  deleteAnexo(idAnexo: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/anexo/${idAnexo}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getFilial(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/filial/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getTravas(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/travas/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesFinanceiras(codCliente: number): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/informacoes-financeiras/${codCliente}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesComerciais(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/informacoes-comerciais/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getListaEmails(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/emails/lista/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n}\n","export default \"<div class=\\\"row mb-4\\\">\\n  <div class=\\\"col mb-4\\\">\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\n      <div class=\\\"bg-orange rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-hand-holding-usd\\\"></i></div>\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded\\\">\\n        <h5\\n          class=\\\"font-weight-bolder mb-1\\\"\\n          counto\\n          [step]=\\\"30\\\"\\n          [countTo]=\\\"sintetico.atrasoPagamento\\\"\\n          [countFrom]=\\\"0\\\"\\n          [duration]=\\\"3\\\"\\n          (countoChange)=\\\"countoAtrasoPagamento = $event\\\">\\n          {{ handleCounter(countoAtrasoPagamento) }} dias\\n        </h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">MÉDIA ATRASO PAGTO</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\n      <div class=\\\"bg-gray rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-truck-moving\\\"></i></div>\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded\\\">\\n        <h5\\n          class=\\\"font-weight-bolder mb-1\\\"\\n          counto\\n          [step]=\\\"30\\\"\\n          [countTo]=\\\"sintetico.tempoEntrega\\\"\\n          [countFrom]=\\\"0\\\"\\n          [duration]=\\\"3\\\"\\n          (countoChange)=\\\"countoTempoEntrega = $event\\\">\\n          {{ handleCounter(countoTempoEntrega) }} dias\\n        </h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">MÉDIA TEMPO ENTREGA</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\n      <div class=\\\"bg-red rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-dollar-sign\\\"></i></div>\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.totalAtraso == 0\\\">\\n        <h5\\n          class=\\\"font-weight-bolder mb-1\\\"\\n          counto\\n          [step]=\\\"30\\\"\\n          [countTo]=\\\"sintetico.totalAtraso\\\"\\n          [countFrom]=\\\"0\\\"\\n          [duration]=\\\"3\\\"\\n          (countoChange)=\\\"countoTotalAtraso = $event\\\">\\n          {{ countoTotalAtraso | currency:'BRL':'symbol':'1.2-2' }}\\n        </h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">TOTAL EM ATRASO</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.totalAtraso == 0\\\">\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">TOTAL EM ATRASO</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\n      <div class=\\\"bg-green rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-file-invoice-dollar\\\"></i></div>\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.pagtoAntecipado == 0\\\">\\n        <h5\\n          class=\\\"font-weight-bolder mb-1\\\"\\n          counto\\n          [step]=\\\"30\\\"\\n          [countTo]=\\\"sintetico.pagtoAntecipado\\\"\\n          [countFrom]=\\\"0\\\"\\n          [duration]=\\\"3\\\"\\n          (countoChange)=\\\"countoPagtoAntecipado = $event\\\">\\n          {{ countoPagtoAntecipado | currency:'BRL':'symbol':'1.2-2' }}\\n        </h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">ANTECIPADO DISPONÍVEL</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.pagtoAntecipado == 0\\\">\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">ANTECIPADO DISPONÍVEL</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\n      <div class=\\\"bg-blue rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-building\\\"></i></div>\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.creditoSeguradora == 0\\\">\\n        <h5\\n          class=\\\"font-weight-bolder mb-1\\\"\\n          counto\\n          [step]=\\\"30\\\"\\n          [countTo]=\\\"sintetico.creditoSeguradora\\\"\\n          [countFrom]=\\\"0\\\"\\n          [duration]=\\\"3\\\"\\n          (countoChange)=\\\"countoCreditoSeguradora = $event\\\">\\n          {{ countoCreditoSeguradora | currency:'BRL':'symbol':'1.2-2' }}\\n        </h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">CRÉDITO SEGURADORA</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.creditoSeguradora == 0\\\">\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">CRÉDITO SEGURADORA</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!pedidosLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carregando duplicatas...</strong>\\n    </div>\\n    <div *ngIf=\\\"pedidos.length > 0 && pedidosLoaded\\\">\\n      <div class=\\\"row justify-content-between\\\">\\n        <div class=\\\"col-6 d-flex\\\">\\n          <div class=\\\"d-flex my-auto\\\">\\n            <div class=\\\"legend green\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">EM ABERTO</div>\\n            </div>\\n            <div class=\\\"legend blue\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">QUITADA</div>\\n            </div>\\n            <div class=\\\"legend yellow\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">VENCIDA</div>\\n            </div>\\n            <div class=\\\"legend red\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">PROTESTO</div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-5\\\">\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"filtro\\\" class=\\\"col-3 text-right pb-0 pt-1 pr-2\\\">Filtrar</label>\\n            <div class=\\\"col-9 pl-0\\\">\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control form-control-sm\\\"\\n                id=\\\"filtro\\\"\\n                placeholder=\\\"Número da duplicata\\\"\\n                #filtro\\n                (input)=\\\"onFilter(filtro.value)\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Faturamento</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. pedido</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicata</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencto</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Baixa</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let pedido of pedidosPagination\\\">\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(pedido.situacao)\\\">{{ pedido.empresa }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataFaturamento }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.numPedido }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.numDuplicata }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataVencimento }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataBaixa }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\n            <td class=\\\"text-center\\\">\\n              <a\\n                class=\\\"btn-icon-sm\\\"\\n                tooltip=\\\"Materiais da duplicata\\\"\\n                container=\\\"body\\\"\\n                [routerLink]=\\\"['../materiais-duplicata']\\\"\\n                [queryParams]=\\\"{\\n                  codEmpresa: pedido.idEmpresa,\\n                  numPedido: pedido.numPedido,\\n                  sequencia: pedido.sequencia\\n                }\\\">\\n                <i class=\\\"fas fa-search\\\"></i>\\n              </a>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"row mt-3\\\" *ngIf=\\\"pedidosLoaded\\\">\\n        <div class=\\\"col\\\">\\n          <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"pedidosFiltered.length > itemsPerPage\\\">\\n            <pagination\\n              [maxSize]=\\\"maxSize\\\"\\n              [totalItems]=\\\"pedidosFiltered.length\\\"\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n              [boundaryLinks]=\\\"true\\\"\\n              previousText=\\\"&lsaquo;\\\"\\n              nextText=\\\"&rsaquo;\\\"\\n              firstText=\\\"&laquo;\\\"\\n              lastText=\\\"&raquo;\\\">\\n            </pagination>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <empty-result message=\\\"Nenhuma informação encontrada nos últimos 12 meses. Para períodos anteriores veja em Detalhes.\\\" *ngIf=\\\"pedidos.length == 0 && pedidosLoaded\\\"></empty-result>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"d-flex justify-content-between w-100 mb-2\\\">\\n      <div>\\n        <h6>\\n          <span class=\\\"mr-2\\\">Grupo econômico</span>\\n          <a\\n            href=\\\"javascript:void(0)\\\"\\n            *ngIf=\\\"grupoEconomicoLoaded && grupoEconomico.length > 1\\\"\\n            (click)=\\\"onGrupoEconomico(modalGrupoEconomico)\\\">(ver detalhes)\\n          </a>\\n        </h6>\\n        <small class=\\\"form-text text-muted\\\">VISÃO DO GRUPO ECONÔMICO NO HISTÓRICO FINANCEIRO</small>\\n      </div>\\n      <div class=\\\"custom-control custom-switch my-auto\\\" *ngIf=\\\"grupoEconomicoLoaded && grupoEconomico.length > 1\\\">\\n        <input\\n        type=\\\"checkbox\\\"\\n        class=\\\"custom-control-input\\\"\\n        id=\\\"grupoEconomico\\\"\\n        [checked]=\\\"visaoGrupoEconomico\\\"\\n        (change)=\\\"onChangeGrupoEconomico()\\\"\\n        [disabled]=\\\"!sinteticoPendenciasLoaded\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"grupoEconomico\\\"></label>\\n      </div>\\n    </div>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item bg-green\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong class=\\\"text-white\\\">Saldo para faturar</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-white\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.saldo\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoSaldo = $event\\\"\\n            [hidden]=\\\"pendencias.saldo == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoSaldo | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-white\\\" *ngIf=\\\"pendencias.saldo == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-white\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n    </ul>\\n    <h6 class=\\\"my-2\\\">\\n      <a\\n        href=\\\"javascript:void(0)\\\"\\n        (click)=\\\"showPendenciasDetalhes = !showPendenciasDetalhes\\\">\\n        <span *ngIf=\\\"!showPendenciasDetalhes\\\"><i class=\\\"fas fa-chevron-up\\\"></i> ver detalhes</span>\\n        <span *ngIf=\\\"showPendenciasDetalhes\\\"><i class=\\\"fas fa-chevron-down\\\"></i> esconder detalhes</span>\\n      </a>\\n    </h6>\\n    <ul class=\\\"list-group\\\" *ngIf=\\\"showPendenciasDetalhes\\\">\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Títulos em aberto</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.titulos\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoTitulos = $event\\\"\\n            [hidden]=\\\"pendencias.titulos == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoTitulos | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.titulos == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Notas de débitos em aberto</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.notasDebito\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoNotasDebito = $event\\\"\\n            [hidden]=\\\"pendencias.notasDebito == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoNotasDebito | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.notasDebito == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Notas promissórias em aberto</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.notasPromissorias\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoNotasPromissorias = $event\\\"\\n            [hidden]=\\\"pendencias.notasPromissorias == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoNotasPromissorias | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.notasPromissorias == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Cheques devolvidos</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.chequesDevolvidos\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoChequesDevolvidos = $event\\\"\\n            [hidden]=\\\"pendencias.chequesDevolvidos == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoChequesDevolvidos | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.chequesDevolvidos == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Corte dobra liberado p/ produção</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.corteDobra\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoCorteDobra = $event\\\"\\n            [hidden]=\\\"pendencias.corteDobra == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoCorteDobra | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.corteDobra == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Reserva de bobinas em aberto</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.reservaBobinas\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoReservaBobinas = $event\\\"\\n            [hidden]=\\\"pendencias.reservaBobinas == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoReservaBobinas | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.reservaBobinas == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Limite de crédito</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.limiteCredito\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoLimiteCredito = $event\\\"\\n            [hidden]=\\\"pendencias.limiteCredito == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoLimiteCredito | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.limiteCredito == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<ng-template #modalGrupoEconomico>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Grupo econômico</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCloseModalGrupoEconomico()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <custom-table>\\n      <ng-template #thead let-thead>\\n        <tr>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód. cliente</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Razão social</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody>\\n        <tr *ngFor=\\\"let item of grupoEconomico\\\">\\n          <td class=\\\"text-center\\\">{{ item.tipo }}</td>\\n          <td class=\\\"text-center\\\">{{ item.codCliente }}</td>\\n          <td class=\\\"text-center\\\">{{ item.razaoSocial }}</td>\\n          <td class=\\\"text-center\\\">\\n            <a\\n              class=\\\"btn-icon-sm\\\"\\n              tooltip=\\\"Visualizar histórico financeiro\\\"\\n              container=\\\"body\\\"\\n              [routerLink]=\\\"['../../../historico-financeiro', item.codCliente, 'resumo']\\\"\\n              (click)=\\\"onCloseModalGrupoEconomico()\\\">\\n              <i class=\\\"fas fa-search\\\"></i>\\n            </a>\\n          </td>\\n        </tr>\\n      </ng-template>\\n    </custom-table>\\n  </div>\\n</ng-template>\\n\";","import { Injectable } from '@angular/core';\nimport { forkJoin } from 'rxjs';\n\n// Services\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from '../cadastro/dados-faturamento/formulario/formulario.service';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesPreCadastroService {\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\n  \n  constructor(\n    private vendedoresService: ComercialVendedoresService,\n    private dadosFaturamentoService: ComercialClientesCadastroDadosFaturamentoFormularioService,\n    private http: HttpClient\n  ) {}\n\n  loadDependencies() {\n    let vendedores = this.vendedoresService.getVendedores();\n    let cnaes = this.dadosFaturamentoService.getCnaes();\n\n    return forkJoin([vendedores, cnaes]);\n  }\n\n  postAkna(param){\n    return this.http.post(\n      `${this.BASE_URL}/comercial/integracoes/akna/log-email-boas-vindas`,\n      param,\n      { observe: 'response' }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialClientesCadastroDadosFaturamentoRulesResolverGuard } from './cadastro/dados-faturamento/formulario/formulario-rules-resolver.guard';\nimport { ComercialClientesDetalhesResolverGuard } from './detalhes/detalhes-resolver.guard';\nimport { ComercialClientesResolverGuard } from './clientes-resolver.guard';\nimport { ComercialClientesPropostaAnaliseCreditoResolverGuard } from './proposta-analise-credito/proposta-analise-credito-resolver.guard';\n\n// Components\nimport { ComercialClientesListaComponent } from './lista/lista.component';\nimport { ComercialClientesPreCadastroComponent } from './pre-cadastro/pre-cadastro.component';\nimport { ComercialClientesDetalhesComponent } from './detalhes/detalhes.component';\nimport { ComercialClientesDashboardComponent } from './dashboard/dashboard.component';\nimport { ComercialClientesPropostaAnaliseCreditoComponent } from './proposta-analise-credito/proposta-analise-credito.component';\nimport { ComercialClientesUltimosPrecosComponent } from './ultimos-precos/ultimos-precos.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialClientesListaComponent },\n  {\n    path: 'pre-cadastro',\n    component: ComercialClientesPreCadastroComponent,\n    resolve: {\n      rules: ComercialClientesCadastroDadosFaturamentoRulesResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'detalhes/:id',\n    component: ComercialClientesDetalhesComponent,\n    resolve: {\n      response: ComercialClientesDetalhesResolverGuard,\n    },\n  },\n  {\n    path: 'cadastro',\n    loadChildren: () =>\n      import('./cadastro/cadastro.module').then(\n        (m) => m.ComercialClientesCadastroModule\n      ),\n  },\n  {\n    path: 'dashboard/:id',\n    component: ComercialClientesDashboardComponent,\n    resolve: {\n      response: ComercialClientesResolverGuard,\n    },\n  },\n  {\n    path: 'historico-financeiro',\n    loadChildren: () =>\n      import('./historico-financeiro/historico-financeiro.module').then(\n        (m) => m.ComercialClientesHistoricoFinanceiroModule\n      ),\n  },\n  {\n    path: 'ultimos-precos/:id',\n    component: ComercialClientesUltimosPrecosComponent,\n  },\n  {\n    path: 'proposta-analise-credito/:id',\n    component: ComercialClientesPropostaAnaliseCreditoComponent,\n    resolve: {\n      data: ComercialClientesPropostaAnaliseCreditoResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n  {\n    path: '**',\n    redirectTo: '/comercial/home',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialClientesRoutingModule {}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { ComercialClientesUltimosPrecosService } from '../ultimos-precos/ultimos-precos.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\nimport { ComercialService } from '../../comercial.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'ultimos-precos',\n  templateUrl: './ultimos-precos.component.html',\n  styleUrls: ['./ultimos-precos.component.scss'],\n})\nexport class ComercialClientesUltimosPrecosComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n\n  codCliente: number;\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<any> = [];\n  dadosPagination: Array<any> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  ultimoPrecoSelecionado: any;\n  alteracoes: Array<any> = [];\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(\n    private localeService: BsLocaleService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private ultimosPrecos: ComercialClientesUltimosPrecosService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private dateService: DateService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService,\n    private comercialService: ComercialService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.codCliente = params.id;\n    });\n\n    this.registrarAcesso();\n    this.setFormFilter();\n    this.setBreadCrumb(this.codCliente);\n    this.titleService.setTitle('Ultimos Preços');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setFormFilter() {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      dataInicial: [formValue.dataInicial, [Validators.required]],\n      dataFinal: [formValue.dataFinal, [Validators.required]],\n    });\n  }\n\n  setBreadCrumb(id: number) {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home',\n      },\n      {\n        descricao: 'Busqueda de clientes',\n        routerLink: '/comercial/clientes/lista',\n      },\n      {\n        descricao: 'Detalhes',\n        routerLink: `/comercial/clientes/detalhes/${id}`,\n      },\n      {\n        descricao: 'Ultimos Preços',\n      },\n    ];\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      dataInicial: this.dateService.getFirstDayMonth(),\n      dataFinal: this.dateService.getLastDayMonth(),\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\n                  formValue[formKey] = this.dateService.convertStringToDate(\n                    params[paramKey],\n                    'pt-br'\n                  );\n                } else {\n                  if (!isNaN(Number(params[paramKey]))) {\n                    formValue[formKey] = Number(params[paramKey]);\n                  } else {\n                    formValue[formKey] = params[paramKey];\n                  }\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.dataInicial) {\n      params.dataInicial = this.dateService.convertToUrlDate(\n        new Date(this.form.value.dataInicial)\n      );\n    }\n\n    if (this.form.value.dataFinal) {\n      params.dataFinal = this.dateService.convertToUrlDate(\n        new Date(this.form.value.dataFinal)\n      );\n    }\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    params.codCliente = this.codCliente;\n\n    this.ultimosPrecos\n      .getListaUltimosPrecos(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!debitosLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carga de débitos pendientes...</strong>\\n    </div>\\n    <custom-table *ngIf=\\\"debitos.length > 0 && debitosLoaded\\\">\\n      <ng-template #thead let-thead>\\n        <tr>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data Pedido</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Pedido</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Duplicata</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Duplicata</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Juros</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Cartório</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Tarifa</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data Tarifa</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Tarifa</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody>\\n        <tr *ngFor=\\\"let debito of debitos\\\">\\n          <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(debito.situacao)\\\">{{ debito.dataPedido }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.numPedido }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.numDuplicata }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.valorDuplicata | currency:'BRL':'symbol':'1.2-2' }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.juros }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.valorCartorio | currency:'BRL':'symbol':'1.2-2' }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.tarifa }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.dataTarifa }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.valorTarifa | currency:'BRL':'symbol':'1.2-2' }}</td>\\n        </tr>\\n      </ng-template>\\n    </custom-table>\\n    <empty-result\\n      message=\\\"Nenhuma informação encontrada\\\"\\n      *ngIf=\\\"debitos.length == 0 && debitosLoaded\\\">\\n    </empty-result>\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"debitos.length > 0 && debitosLoaded\\\">\\n      <div class=\\\"col-6 d-flex justify-content-center w-100\\\">\\n        <div class=\\\"d-flex justify-content-around\\\">\\n          <div class=\\\"legend green\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">DÉBITO CON NOTA</div>\\n          </div>\\n          <div class=\\\"legend blue\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">DÉBITO CON NOTA</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3Byb3Bvc3RhLWFuYWxpc2UtY3JlZGl0by9wcm9wb3N0YS1hbmFsaXNlLWNyZWRpdG8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesPropostaAnaliseCreditoResolverGuard\n  implements Resolve<any> {\n  constructor(private clienteService: ComercialClientesService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params['id']) {\n      return this.clienteService.getPropostaAnaliseCredito(route.params['id']);\n    }\n\n    return of({\n      result: {\n        razaoSocial: null,\n        codCliente: null,\n        codSAP: null,\n        limiteCredito: null,\n        setorAtividade: null,\n        nomeVendedor: null,\n        telefoneVendedor: null,\n        nomeEscritorio: null\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// ngx-bootstrap\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\n// ngx-filter-pipe\nimport { FilterPipeModule } from 'ngx-filter-pipe';\n\n// Counto\nimport { CountoModule } from 'angular2-counto';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialHistoricoFinanceiroRoutingModule } from './historico-financeiro-routing.module';\n\n// Components\nimport { ComercialClientesHistoricoFinanceiroComponent } from './historico-financeiro.component';\nimport { ComercialClientesHistoricoFinanceiroResumoComponent } from './resumo/resumo.component';\nimport { ComercialClientesHistoricoFinanceiroDetalhesComponent } from './detalhes/detalhes.component';\nimport { ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent } from './materiais-duplicata/materiais-duplicata.component';\nimport { ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent } from './acumulos-mensais/acumulos-mensais.component';\nimport { ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent } from './notas-promissorias/notas-promissorias.component';\nimport { ComercialClientesHistoricoFinanceiroDebitosComponent } from './debitos/debitos.component';\nimport { ComercialClientesHistoricoFinanceiroCorteDobraComponent } from './corte-dobra/corte-dobra.component';\n\n@NgModule({\n  declarations: [\n    ComercialClientesHistoricoFinanceiroComponent,\n    ComercialClientesHistoricoFinanceiroResumoComponent,\n    ComercialClientesHistoricoFinanceiroDetalhesComponent,\n    ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent,\n    ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent,\n    ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent,\n    ComercialClientesHistoricoFinanceiroDebitosComponent,\n    ComercialClientesHistoricoFinanceiroCorteDobraComponent\n  ],\n  imports: [\n    CommonModule,\n    TooltipModule,\n    PaginationModule,\n    TabsModule,\n    FilterPipeModule,\n    CountoModule,\n    SharedModule,\n    TemplatesModule.forRoot(),\n    ComercialHistoricoFinanceiroRoutingModule\n  ]\n})\nexport class ComercialClientesHistoricoFinanceiroModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// ngx-filter-pipe\nimport { FilterPipe } from 'ngx-filter-pipe';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n// Interfaces\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-detalhes',\n  templateUrl: './detalhes.component.html',\n  styleUrls: ['./detalhes.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroDetalhesComponent\n  implements OnInit {\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  codCliente: number;\n\n  pedidos: any = [];\n  pedidosPagination: any = [];\n  pedidosFiltered: any = [];\n  pedidosLoaded: boolean = false;\n\n  maxSize: number = 10;\n  itemsPerPage: number = 10;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService,\n    private filterPipe: FilterPipe\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(queryParams => {\n      this.activatedRoute.parent.params.subscribe(params => {\n        let grupoEconomico = false;\n\n        if (\n          queryParams['grupoEconomico'] &&\n          queryParams['grupoEconomico'] == 'true'\n        ) {\n          grupoEconomico = true;\n        }\n\n        this.codCliente = params['id'];\n        this.getPedidos(this.codCliente, grupoEconomico);\n      });\n    });\n  }\n\n  getPedidos(id: number, grupoEconomico: boolean) {\n    this.historicoFinanceiroService\n      .getDetalhesPedidos(id, grupoEconomico)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.pedidos = response['result'];\n          this.pedidosFiltered = response['result'];\n          this.pedidosPagination = this.pedidosFiltered.slice(\n            0,\n            this.itemsPerPage\n          );\n        }\n        this.pedidosLoaded = true;\n      });\n  }\n\n  classStatusBorder(status: string) {\n    let borderClass = '';\n\n    if (status == 'EM ABERTO') {\n      borderClass = 'border-success';\n    } else if (status == 'QUITADA') {\n      borderClass = 'border-primary';\n    } else if (status == 'VENCIDA') {\n      borderClass = 'border-warning';\n    } else if (status == 'PROTESTO') {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.pedidosPagination = this.pedidos.slice(startItem, endItem);\n  }\n\n  onFilter(value: string) {\n    if (value) {\n      this.pedidosFiltered = this.filterPipe.transform(this.pedidos, {\n        numDuplicata: value\n      });\n    } else {\n      this.pedidosFiltered = this.pedidos;\n    }\n\n    this.pedidosPagination = this.pedidosFiltered.slice(0, this.itemsPerPage);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// Counto\nimport { CountoModule } from 'angular2-counto';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialClientesRoutingModule } from './clientes-routing.module';\n\n// Components\nimport { ComercialClientesListaComponent } from './lista/lista.component';\nimport { ComercialClientesPreCadastroComponent } from './pre-cadastro/pre-cadastro.component';\nimport { ComercialClientesDetalhesComponent } from './detalhes/detalhes.component';\nimport { ComercialClientesDashboardModule } from './dashboard/dashboard.module';\nimport { ComercialClientesHistoricoFinanceiroModule } from './historico-financeiro/historico-financeiro.module';\nimport { ComercialClientesPropostaAnaliseCreditoComponent } from './proposta-analise-credito/proposta-analise-credito.component';\nimport { ComercialClientesUltimosPrecosComponent } from './ultimos-precos/ultimos-precos.component';\n\n@NgModule({\n  declarations: [\n    ComercialClientesListaComponent,\n    ComercialClientesPreCadastroComponent,\n    ComercialClientesDetalhesComponent,\n    ComercialClientesPropostaAnaliseCreditoComponent,\n    ComercialClientesUltimosPrecosComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TooltipModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    CountoModule,\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    CurrencyMaskModule,\n    SharedModule,\n    TemplatesModule.forRoot(),\n    ComercialClientesRoutingModule,\n    ComercialClientesDashboardModule,\n    ComercialClientesHistoricoFinanceiroModule\n  ]\n})\nexport class ComercialClientesModule {}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Histórico financeiro\\\">\\n  <button\\n    type=\\\"button\\\"\\n    routerLinkActive=\\\"active\\\"\\n    [routerLink]=\\\"['resumo']\\\">\\n    Resumen\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    routerLinkActive=\\\"active\\\"\\n    [routerLink]=\\\"['detalhes']\\\">\\n    Detalles\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    routerLinkActive=\\\"active\\\"\\n    [routerLink]=\\\"['acumulos-mensais']\\\">\\n    Acumulaciones mensuales\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    routerLinkActive=\\\"active\\\"\\n    [routerLink]=\\\"['notas-promissorias']\\\">\\n    Pagarés  </button>\\n  <button\\n    type=\\\"button\\\"\\n    routerLinkActive=\\\"active\\\"\\n    [routerLink]=\\\"['debitos']\\\">\\n    Débitos\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    routerLinkActive=\\\"active\\\"\\n    [routerLink]=\\\"['corte-dobra']\\\">\\n    Corte Doblado\\n  </button>\\n</app-header>\\n<app-body [show]=\\\"!loaderFullScreen\\\" [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row mb-3\\\">\\n    <div class=\\\"col\\\">\\n      <h5 class=\\\"d-inline-block mb-0 mr-3\\\" tooltip=\\\"Código do cliente\\\">\\n        <span class=\\\"badge badge-dark\\\">CÓD.: {{ cliente.codCliente }}</span>\\n      </h5>\\n      <h6 class=\\\"d-inline-block mb-0\\\">{{ cliente.razaoSocial }}</h6>\\n    </div>\\n  </div>\\n  <router-outlet></router-outlet>\\n</app-body>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesResolverGuard implements Resolve<any> {\n  constructor(private clientesService: ComercialClientesService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params['id']) {\n      return this.clientesService.getPermissaoAcesso(route.params['id']);\n    }\n\n    return of({\n      responseCode: 403\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL21hdGVyaWFpcy1kdXBsaWNhdGEvbWF0ZXJpYWlzLWR1cGxpY2F0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-corte-dobra',\n  templateUrl: './corte-dobra.component.html',\n  styleUrls: ['./corte-dobra.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroCorteDobraComponent\n  implements OnInit {\n  corteDobra: any = [];\n  corteDobraLoaded: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.parent.params.subscribe(params => {\n      this.getCorteDobra(params['id']);\n    });\n  }\n\n  getCorteDobra(id: any) {\n    this.historicoFinanceiroService\n      .getCorteDobra(id)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.corteDobra = response['result'];\n        }\n        this.corteDobraLoaded = true;\n      });\n  }\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!corteDobraLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carregando Corte Dobra...</strong>\\n    </div>\\n    <custom-table *ngIf=\\\"corteDobra.length > 0\\\">\\n      <ng-template #thead let-thead>\\n        <tr>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Identificacion</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Obra</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Discriminación</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody>\\n        <tr *ngFor=\\\"let item of corteDobra\\\">\\n          <td class=\\\"text-center\\\">{{ item.identificacao }}</td>\\n          <td class=\\\"text-center\\\">{{ item.data }}</td>\\n          <td class=\\\"text-center\\\">{{ item.obra }}</td>\\n          <td class=\\\"text-center\\\">{{ item.discriminacao }}</td>\\n          <td class=\\\"text-center\\\">{{ item.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\n          <td class=\\\"text-center\\\">{{ item.empresa }}</td>\\n        </tr>\\n      </ng-template>\\n    </custom-table>\\n    <empty-result\\n      message=\\\"Nenhuma informação encontrada\\\"\\n      *ngIf=\\\"corteDobra.length == 0 && corteDobraLoaded\\\">\\n    </empty-result>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialClientesUltimosPrecosService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes/ultimos-precos`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaUltimosPrecos(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesHistoricoFinanceiroService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes/historico-financeiro`;\n\n  constructor(protected http: HttpClient) {}\n\n  getPermissaoAcesso(id: any) {\n    return this.http.get(`${this.API}/permissao-acesso/${id}`).pipe(take(1));\n  }\n\n  getResumoSintetico(id: any, grupoEconomico: any) {\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\n\n    return this.http\n      .get(`${this.API}/resumo/sintetico/${id}`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getGrupoEconomico(id: any) {\n    return this.http.get(`${this.API}/grupo-economico/${id}`).pipe(take(1));\n  }\n\n  getResumoPedidos(id: any, grupoEconomico: any) {\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\n\n    return this.http\n      .get(`${this.API}/resumo/pedidos/${id}`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getDetalhesPedidos(id: any, grupoEconomico: any) {\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\n\n    return this.http\n      .get(`${this.API}/detalhes/pedidos/${id}`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getMateriaisDuplicata(params: any) {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais-duplicata`, {\n        params: httpParams\n      })\n      .pipe(take(1));\n  }\n\n  getAcumulosMensais(id: any) {\n    return this.http.get(`${this.API}/acumulos-mensais/${id}`).pipe(take(1));\n  }\n\n  getNotasPromissorias(id: any) {\n    return this.http.get(`${this.API}/notas-promissorias/${id}`).pipe(take(1));\n  }\n\n  getDebitos(id: any) {\n    return this.http.get(`${this.API}/debitos/${id}`).pipe(take(1));\n  }\n\n  getCorteDobra(id: any) {\n    return this.http.get(`${this.API}/corte-dobra/${id}`).pipe(take(1));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-debitos',\n  templateUrl: './debitos.component.html',\n  styleUrls: ['./debitos.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroDebitosComponent\n  implements OnInit {\n  debitos: any = [];\n  debitosLoaded: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.parent.params.subscribe(params => {\n      this.getDebitos(params['id']);\n    });\n  }\n\n  getDebitos(id: any) {\n    this.historicoFinanceiroService\n      .getDebitos(id)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.debitos = response['result'];\n        }\n        this.debitosLoaded = true;\n      });\n  }\n\n  classStatusBorder(status: string) {\n    let borderClass = '';\n\n    if (status == 'COM NOTA') {\n      borderClass = 'border-success';\n    } else if (status == 'SEM NOTA') {\n      borderClass = 'border-primary';\n    }\n\n    return borderClass;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-acumulos-mensais',\n  templateUrl: './acumulos-mensais.component.html',\n  styleUrls: ['./acumulos-mensais.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent\n  implements OnInit {\n  acumulosMensais: any = {};\n  acumulosMensaisLoaded: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.parent.params.subscribe(params => {\n      this.getAcumulosMensais(params['id']);\n    });\n  }\n\n  getAcumulosMensais(id: any) {\n    this.historicoFinanceiroService\n      .getAcumulosMensais(id)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.acumulosMensais = response['result'];\n        }\n        this.acumulosMensaisLoaded = true;\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormRulesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/common/services`;\n\n  constructor(protected http: HttpClient) {}\n\n  getRules(formRef: number): Observable<any> {\n    return this.http.get(`${this.API}/form-rules/${formRef}`).pipe(take(1));\n  }\n}\n","export default \".modal {\\n  display: none;\\n  position: fixed;\\n  z-index: 1;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto;\\n  background-color: rgba(0, 0, 0, 0.4);\\n}\\n\\n.modal-content {\\n  background-color: #fefefe;\\n  margin: 15% auto;\\n  padding: 20px;\\n  border: 1px solid #888;\\n  width: 80%;\\n}\\n\\n.close {\\n  color: #aaa;\\n  float: right;\\n  font-size: 28px;\\n  font-weight: bold;\\n}\\n\\n.close:hover,\\n.close:focus {\\n  color: black;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2xpZW50ZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsZUFBQTtFQUNBLFVBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLG9DQUFBO0FBQ0o7O0FBRUU7RUFDRSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsVUFBQTtBQUNKOztBQUVFO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFFRTs7RUFFRSxZQUFBO0VBQ0EscUJBQUE7RUFDQSxlQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbWVyY2lhbC9jbGllbnRlcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RhbCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogMTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICB9XG4gIFxuICAubW9kYWwtY29udGVudCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZTtcbiAgICBtYXJnaW46IDE1JSBhdXRvO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzg4ODtcbiAgICB3aWR0aDogODAlO1xuICB9XG4gIFxuICAuY2xvc2Uge1xuICAgIGNvbG9yOiAjYWFhO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbiAgXG4gIC5jbG9zZTpob3ZlcixcbiAgLmNsb3NlOmZvY3VzIHtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICBcbiAgIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3ByZS1jYWRhc3Ryby9wcmUtY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl,\n  FormArray,\n} from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n// ng-brazil\nimport { MASKS, NgBrazilValidators } from 'ng-brazil';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n// Services\nimport { ComercialClientesPreCadastroService } from './pre-cadastro.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\nimport { CnpjService } from 'src/app/shared/services/ws/cnpj.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { FunctionsService } from 'src/app/shared/services/core/functions.service';\n\n@Component({\n  selector: 'comercial-clientes-pre-cadastro',\n  templateUrl: './pre-cadastro.component.html',\n  styleUrls: ['./pre-cadastro.component.scss'],\n})\nexport class ComercialClientesPreCadastroComponent\n  implements OnInit, IFormCanDeactivate\n{\n  @ViewChild('modalDetalhesCliente', {}) modalDetalhesCliente: TemplateRef<any>;\n\n  modalRef: BsModalRef;\n  modalConfig = {\n    ignoreBackdropClick: true,\n  };\n\n  loaderFullScreen = true;\n  loaderNavbar = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home',\n    },\n    {\n      descricao: 'Busqueda de clientes',\n      routerLink: '/comercial/clientes',\n    },\n    {\n      descricao: 'Pre-Registro',\n    },\n  ];\n\n  public MASKS = MASKS;\n\n  vendedores: any = [];\n  cnaes: any = [];\n\n  form: FormGroup;\n  formChanged = false;\n  tipoPessoa = 'F';\n  submittingForm = false;\n\n  maxLengthRules: any = {};\n  maxLengthMessages: any = {};\n\n  dadosCliente: any = {};\n\n  constructor(\n    private preCadastroService: ComercialClientesPreCadastroService,\n    private formBuilder: FormBuilder,\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private clientesService: ComercialClientesService,\n    private pnotifyService: PNotifyService,\n    private cnpjService: CnpjService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private functionsService: FunctionsService,\n    private modalService: BsModalService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle('Pré-cadastro');\n    this.getFormFields();\n    this.activatedRoute.queryParams.subscribe((queryParams: any) => {\n      let documento = null;\n\n      if (Object.keys(queryParams).length > 0) {\n        if (queryParams['cpf']) {\n          this.tipoPessoa = 'F';\n          documento = queryParams['cpf'];\n        } else if (queryParams['cnpj']) {\n          this.tipoPessoa = 'J';\n          documento = queryParams['cnpj'];\n        }\n      }\n\n      this.registrarAcesso();\n      this.setMaxLengthRules();\n      this.setFormBuilder(documento);\n    });\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getFormFields() {\n    this.preCadastroService\n      .loadDependencies()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response[0].responseCode === 200) {\n            this.vendedores = response[0].result;\n          } else {\n            this.handleFormFieldsError();\n          }\n\n          if (response[1].responseCode === 200) {\n            this.cnaes = response[1].result;\n          } else {\n            this.handleFormFieldsError();\n          }\n        },\n        (error: any) => {\n          this.handleFormFieldsError();\n        }\n      );\n  }\n\n  handleFormFieldsError() {\n    this.pnotifyService.error();\n    this.location.back();\n  }\n\n  setMaxLengthRules() {\n    this.maxLengthRules = this.activatedRoute.snapshot.data.rules.data;\n    this.maxLengthMessages = {\n      nome: `Nome deve conter até ${this.maxLengthRules.nome} caracteres.`,\n      sobrenome: `Sobrenome deve conter até ${this.maxLengthRules.sobrenome} caracteres.`,\n      razaoSocial: `Razão social deve conter até ${this.maxLengthRules.razaoSocial} caracteres.`,\n      nomeFantasia: `Nome fantasia deve conter até ${this.maxLengthRules.nomeFantasia} caracteres.`,\n      emailNfe: `E-mail NF-e deve conter até ${this.maxLengthRules.emailNfe} caracteres.`,\n      // emailMarketing: `E-mail Marketing deve conter até ${this.maxLengthRules.emailNfe} caracteres.`,\n    };\n  }\n\n  setFormBuilder(documento: string) {\n    let cpf = null;\n    let cnpj = null;\n\n    if (documento != null) {\n      if (this.tipoPessoa == 'F') {\n        cpf = documento;\n      } else if (this.tipoPessoa == 'J') {\n        cnpj = documento;\n      }\n    }\n\n    this.form = this.formBuilder.group({\n      cpf: [cpf, [Validators.nullValidator]],\n      nome: [\n        null,\n        [Validators.required, Validators.maxLength(this.maxLengthRules.nome)],\n      ],\n      sobrenome: [\n        null,\n        [\n          Validators.required,\n          Validators.maxLength(this.maxLengthRules.sobrenome),\n        ],\n      ],\n      cnpj: [cnpj, [NgBrazilValidators.cnpj]],\n      razaoSocial: [null],\n      nomeFantasia: [null],\n      vendedor: [null],\n      cnae: [null],\n      emailNfe: [\n        null,\n        [\n          Validators.required,\n          Validators.email,\n          Validators.maxLength(this.maxLengthRules.emailNfe),\n        ],\n      ],\n      // emailMarketing: [\n      //   null,\n      //   [Validators.email, Validators.maxLength(this.maxLengthRules.emailNfe)],\n      // ],\n      telefone: [null, [Validators.required]],\n      atividadePrincipal: this.formBuilder.array([]),\n      atividadeSecundaria: this.formBuilder.array([]),\n    });\n\n    this.setType(this.tipoPessoa);\n\n    if (documento != null) {\n      if (this.tipoPessoa == 'F') {\n        this.validateCPF();\n      } else if (this.tipoPessoa == 'J') {\n        this.validateCNPJ();\n      }\n    }\n  }\n\n  setType(type: string) {\n    this.tipoPessoa = type;\n    this.form.reset();\n\n    if (this.tipoPessoa == 'F') {\n      this.form.controls.cpf.setValidators([Validators.required]);\n      this.form.controls.cpf.updateValueAndValidity();\n      this.form.controls.nome.setValidators([\n        Validators.required,\n        Validators.maxLength(this.maxLengthRules.nome),\n      ]);\n      this.form.controls.nome.updateValueAndValidity();\n      this.form.controls.sobrenome.setValidators([\n        Validators.required,\n        Validators.maxLength(this.maxLengthRules.sobrenome),\n      ]);\n      this.form.controls.sobrenome.updateValueAndValidity();\n\n      this.form.controls.cnpj.clearValidators();\n      this.form.controls.cnpj.updateValueAndValidity();\n      this.form.controls.razaoSocial.clearValidators();\n      this.form.controls.razaoSocial.updateValueAndValidity();\n      this.form.controls.nomeFantasia.clearValidators();\n      this.form.controls.nomeFantasia.updateValueAndValidity();\n      this.form.controls.cnae.clearValidators();\n      this.form.controls.cnae.updateValueAndValidity();\n    } else if (this.tipoPessoa == 'J') {\n      this.form.controls.cnpj.setValidators([Validators.required]);\n      this.form.controls.cnpj.updateValueAndValidity();\n      this.form.controls.razaoSocial.setValidators([\n        Validators.required,\n        Validators.maxLength(this.maxLengthRules.razaoSocial),\n      ]);\n      this.form.controls.razaoSocial.updateValueAndValidity();\n      this.form.controls.nomeFantasia.setValidators([\n        Validators.required,\n        Validators.maxLength(this.maxLengthRules.nomeFantasia),\n      ]);\n      this.form.controls.nomeFantasia.updateValueAndValidity();\n      this.form.controls.cnae.setValidators([Validators.required]);\n      this.form.controls.cnae.updateValueAndValidity();\n\n      this.form.controls.cpf.clearValidators();\n      this.form.controls.cpf.updateValueAndValidity();\n      this.form.controls.nome.clearValidators();\n      this.form.controls.nome.updateValueAndValidity();\n      this.form.controls.sobrenome.clearValidators();\n      this.form.controls.sobrenome.updateValueAndValidity();\n    }\n  }\n\n  get atividadePrincipal() {\n    return this.form.get('atividadePrincipal') as FormArray;\n  }\n\n  get atividadeSecundaria() {\n    return this.form.get('atividadeSecundaria') as FormArray;\n  }\n\n  pushAtividadePrincipal(atividade: any) {\n    while (this.atividadePrincipal.length !== 0) {\n      this.atividadePrincipal.removeAt(0);\n    }\n\n    atividade.code = atividade.code.replace(/\\D/g, '');\n\n    if (atividade.code != '0000000') {\n      this.atividadePrincipal.push(\n        this.formBuilder.group({\n          cnae: [atividade.code],\n          descricao: [atividade.text],\n        })\n      );\n    }\n  }\n\n  pushAtividadeSecundaria(atividades: any) {\n    while (this.atividadeSecundaria.length !== 0) {\n      this.atividadeSecundaria.removeAt(0);\n    }\n\n    if (atividades.length > 0) {\n      for (let i = 0; i < atividades.length; i++) {\n        atividades[i].code = atividades[i].code.replace(/\\D/g, '');\n\n        if (atividades[i].code != '0000000') {\n          this.atividadeSecundaria.push(\n            this.formBuilder.group({\n              cnae: [atividades[i].code],\n              descricao: [atividades[i].text],\n            })\n          );\n        }\n      }\n    }\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field) != '') {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n\n      if (field.errors.hasOwnProperty('maxlength') && field.touched) {\n        return 'maxlength';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  validateCPF() {\n    if (this.form.controls.cpf.valid) {\n      this.loaderNavbar = true;\n      this.dadosCliente = {};\n\n      this.clientesService\n        .getExisteCpfCnpj(this.form.value.cpf.replace(/\\D/g, ''), true)\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n          })\n        )\n        .subscribe((response: any) => {\n          if (response.responseCode === 200) {\n            if (response.result.verificacao == 1) {\n              this.form.controls.cpf.setErrors({\n                incorrect: true,\n              });\n              this.pnotifyService.notice('O CPF informado já está cadastrado.');\n\n              if (Object.keys(response.result.dadosCliente).length > 0) {\n                this.formChanged = false;\n                this.dadosCliente = response.result.dadosCliente;\n                this.showDetails();\n              }\n            }\n          }\n        });\n    }\n  }\n\n  validateCNPJ() {\n    if (this.form.controls.cnpj.valid) {\n      this.loaderNavbar = true;\n      this.dadosCliente = {};\n\n      this.clientesService\n        .getExisteCpfCnpj(this.form.value.cnpj.replace(/\\D/g, ''), true)\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n          })\n        )\n        .subscribe((response: any) => {\n          if (response.responseCode === 200) {\n            if (response.result.verificacao == 1) {\n              this.form.controls.cnpj.setErrors({\n                incorrect: true,\n              });\n              this.pnotifyService.notice(\n                'O CNPJ informado já está cadastrado.'\n              );\n\n              if (Object.keys(response.result.dadosCliente).length > 0) {\n                this.formChanged = false;\n                this.dadosCliente = response.result.dadosCliente;\n                this.showDetails();\n              }\n            } else {\n              this.loaderNavbar = true;\n\n              this.getCnpjData(this.form.value.cnpj)\n                .pipe(\n                  finalize(() => {\n                    this.loaderNavbar = false;\n                  })\n                )\n                .subscribe((response: any) => {\n                  this.form.controls.razaoSocial.setValue(response.nome);\n                  this.form.controls.nomeFantasia.setValue(response.fantasia);\n\n                  if (response.atividade_principal[0].code) {\n                    this.checkCnae(response.atividade_principal[0]);\n                  }\n\n                  this.pushAtividadePrincipal(response.atividade_principal[0]);\n                  this.pushAtividadeSecundaria(response.atividades_secundarias);\n                });\n            }\n          }\n        });\n    }\n  }\n\n  showDetails(): void {\n    this.modalRef = this.modalService.show(\n      this.modalDetalhesCliente,\n      this.modalConfig\n    );\n  }\n\n  onCloseDetails(): void {\n    this.modalRef.hide();\n  }\n\n  onNavigateDetail(): void {\n    if (this.dadosCliente.podeAcessar == 1) {\n      this.onCloseDetails();\n      this.router.navigate(['../detalhes', this.dadosCliente.codCliente], {\n        relativeTo: this.activatedRoute,\n      });\n    } else {\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\n    }\n  }\n\n  checkCnae(data: any) {\n    const cnae = {\n      id: parseInt(data.code.replace(/\\D/g, '')),\n      descricao: data.text,\n    };\n\n    let exists = false;\n\n    for (let i = 0; i < this.cnaes.length; i++) {\n      if (this.cnaes[i].id == cnae.id) {\n        exists = true;\n      }\n    }\n\n    if (!exists) {\n      this.cnaes.push(cnae);\n    }\n\n    this.form.controls.cnae.setValue(cnae.id);\n  }\n\n  getCnpjData(cnpj: string) {\n    return this.cnpjService.getData(cnpj);\n  }\n\n  onSubmit() {\n    /* this.postAkna(20081);\n    return; */\n\n    if (this.form.valid) {\n      this.loaderNavbar = true;\n      this.submittingForm = true;\n      let formObj = {};\n\n      if (this.tipoPessoa == 'F') {\n        formObj = {\n          tipoPessoa: this.tipoPessoa,\n          cpf: this.form.value.cpf,\n          vendedor: this.form.value.vendedor,\n          nome: this.form.value.nome,\n          sobrenome: this.form.value.sobrenome,\n          emailNfe: this.form.value.emailNfe,\n          // emailMarketing: this.form.value.emailMarketing,\n          telefone: this.form.value.telefone,\n        };\n      } else if (this.tipoPessoa == 'J') {\n        formObj = {\n          tipoPessoa: this.tipoPessoa,\n          cnpj: this.form.value.cnpj,\n          vendedor: this.form.value.vendedor,\n          razaoSocial: this.form.value.razaoSocial,\n          nomeFantasia: this.form.value.nomeFantasia,\n          cnae: this.functionsService.completaZeroEsquerda(\n            this.form.value.cnae,\n            7\n          ),\n          emailNfe: this.form.value.emailNfe,\n          // emailMarketing: this.form.value.emailMarketing,\n          telefone: this.form.value.telefone,\n          atividadePrincipal: this.form.value.atividadePrincipal,\n          atividadeSecundaria: this.form.value.atividadeSecundaria,\n        };\n      }\n\n      this.clientesService\n        .postCliente(formObj)\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n            this.submittingForm = false;\n          })\n        )\n        .subscribe(\n          (response: any) => {\n            if (response.responseCode === 200) {\n              this.pnotifyService.success('O cliente foi cadastrado.');\n              this.formChanged = false;\n\n              /* this.postAkna(response.result); */\n              this.router.navigate(['../cadastro', response.result], {\n                relativeTo: this.activatedRoute,\n              });\n            } else if (response.responseCode === 403) {\n              this.pnotifyService.notice(\n                'Falha ao atribuir vendedor ao cadastro.'\n              );\n            } else {\n              this.pnotifyService.error(\n                'Ocorreu um erro ao cadastrar o cliente.'\n              );\n            }\n          },\n          (error: any) => {\n            this.pnotifyService.error(\n              'Ocorreu um erro ao cadastrar o cliente.'\n            );\n          }\n        );\n    }\n  }\n\n  onInput() {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate() {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onCancel() {\n    this.location.back();\n  }\n\n  // Função que envia e-mail de boas vindas  para um novo cliente e grava o log dessa ação.\n  /* postAkna(cliente){\n    let param = {};\n\n    if(this.form.value['nome']){\n      param = {\n        'codigoCliente'   : cliente,\n        'nomeRemetente'   : this.form.value['nome'] + ' ' + this.form.value['sobrenome'],\n        'emailRemetente'  : this.form.value['emailNfe']\n      }\n    } else {\n      param = {\n        'codigoCliente'   : cliente,\n        'nomeRemetente'   : this.form.value['razaoSocial'],\n        'emailRemetente'  : this.form.value['emailNfe']\n      }\n    }\n\n    this.preCadastroService\n      .postAkna(param)\n      .subscribe((response) => {\n      console.log(response)\n    });\n  } */\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  FormArray\n} from '@angular/forms';\nimport { Location } from '@angular/common';\n\n// ngx-bootstrap\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\ndefineLocale('pt-br', ptBrLocale);\n\n// ng-brazil\nimport { utilsBr } from 'js-brasil';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { PdfService } from 'src/app/shared/services/core/pdf.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n@Component({\n  selector: 'comercia-clientes-proposta-analise-credito',\n  templateUrl: './proposta-analise-credito.component.html',\n  styleUrls: ['./proposta-analise-credito.component.scss']\n})\nexport class ComercialClientesPropostaAnaliseCreditoComponent\n  implements OnInit, IFormCanDeactivate {\n  public MASKS = utilsBr.MASKS;\n\n  loaderNavbar: boolean = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  codCliente: number;\n\n  tipoVisao: string = 'formulario';\n  dataFicha: any = [];\n\n  form: FormGroup;\n  formChanged: boolean = false;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private localeService: BsLocaleService,\n    private pnotifyService: PNotifyService,\n    private pdfService: PdfService,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.codCliente = params['id'];\n\n      this.registrarAcesso();\n      this.setBreadCrumb(this.codCliente);\n      this.titleService.setTitle('Proposta para análise de crédito');\n\n      if (this.activatedRoute.snapshot.data['data']['responseCode'] === 200) {\n        this.setFormBuilder(\n          this.activatedRoute.snapshot.data['data']['result']\n        );\n      } else {\n        this.pnotifyService.error();\n        this.location.back();\n      }\n    });\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(id: number) {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home'\n      },\n      {\n        descricao: 'Busqueda de clientes',\n        routerLink: '/comercial/clientes/lista'\n      },\n      {\n        descricao: 'Detalhes',\n        routerLink: `/comercial/clientes/detalhes/${id}`\n      },\n      {\n        descricao: 'Proposta para análise de crédito'\n      }\n    ];\n  }\n\n  setFormBuilder(data: any) {\n    this.form = this.formBuilder.group({\n      razaoSocial: [\n        { value: data['razaoSocial'], disabled: true },\n        [Validators.required]\n      ],\n      dataSolicitacao: [new Date(), [Validators.required]],\n      codCliente: [\n        { value: data['codCliente'], disabled: true },\n        [Validators.required]\n      ],\n      codClienteDBA: [{ value: data['codClienteDBA'], disabled: true }],\n      setorAtividade: [\n        { value: data['setorAtividade'], disabled: true },\n        [Validators.required]\n      ],\n      dataUltimaVisita: [null],\n      instalacoes: [null],\n      numFuncionarios: [null],\n      limiteCreditoAtual: [data['limiteCredito']],\n      limiteCreditoSolicitado: [null, [Validators.required]],\n      condicaoPagto: [null, [Validators.required]],\n      nomeVendedor: [\n        { value: data['nomeVendedor'], disabled: true },\n        [Validators.required]\n      ],\n      telefoneVendedor: [\n        { value: data['telefoneVendedor'], disabled: true },\n        [Validators.required]\n      ],\n      gestorVendas: [null, [Validators.required]],\n      nomeEscritorio: [\n        { value: data['nomeEscritorio'], disabled: true },\n        [Validators.required]\n      ],\n      fornecedores: this.formBuilder.array([]),\n      clientes: this.formBuilder.array([]),\n      vendasConcentradas: [null],\n      bancos: this.formBuilder.array([]),\n      previsaoCompraTon: [null],\n      previsaoCompraValor: [null],\n      faturamentoMedio: [null],\n      parecerVendedor: [null, [Validators.required]]\n    });\n\n    this.setFormFornecedoresClientesBancos();\n  }\n\n  setFormFornecedoresClientesBancos() {\n    this.onAddFornecedor();\n    this.onAddBanco();\n  }\n\n  get fornecedores() {\n    return this.form.get('fornecedores') as FormArray;\n  }\n\n  get clientes() {\n    return this.form.get('clientes') as FormArray;\n  }\n\n  get bancos() {\n    return this.form.get('bancos') as FormArray;\n  }\n\n  onAddFornecedor() {\n    this.fornecedores.push(\n      this.formBuilder.group({\n        nome: [null, [Validators.required]],\n        telefone: [null]\n      })\n    );\n  }\n\n  onAddCliente() {\n    this.clientes.push(\n      this.formBuilder.group({\n        nome: [null]\n      })\n    );\n  }\n\n  onAddBanco() {\n    this.bancos.push(\n      this.formBuilder.group({\n        nome: [null, [Validators.required]],\n        agencia: [null, [Validators.required]],\n        contaCorrente: [null, [Validators.required]],\n        telefone: [null, [Validators.required]]\n      })\n    );\n  }\n\n  onDeleteFornecedor(index: number) {\n    if (this.fornecedores.length > 1) {\n      this.fornecedores.removeAt(index);\n    } else {\n      this.pnotifyService.notice('Informe ao menos um fornecedor.');\n    }\n  }\n\n  onDeleteCliente(index: number) {\n    this.clientes.removeAt(index);\n  }\n\n  onDeleteBanco(index: number) {\n    if (this.bancos.length > 1) {\n      this.bancos.removeAt(index);\n    } else {\n      this.pnotifyService.notice('Informe ao menos um banco.');\n    }\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onNestedFieldError(formGroup: string, index: number, field: string) {\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\n    let nestedForm: any = this.form.controls[formGroup];\n    field = nestedForm.controls[index].get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\n    let required = false;\n    let formControl = new FormControl();\n    let nestedForm: any = this.form.controls[formGroup];\n\n    if (nestedForm.controls[index].get(field).validator) {\n      let validationResult = nestedForm.controls[index]\n        .get(field)\n        .validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onInput() {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate() {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.loaderNavbar = true;\n      setTimeout(() => {\n        const formData = this.form.getRawValue();\n\n        let dataSolicitacao = `${(formData[\n          'dataSolicitacao'\n        ] as Date).getDate()}/${(formData[\n          'dataSolicitacao'\n        ] as Date).getMonth() + 1}/${(formData[\n          'dataSolicitacao'\n        ] as Date).getFullYear()}`;\n\n        let dataUltimaVisita: string;\n        if (formData['dataUltimaVisita'] != null) {\n          dataUltimaVisita = `${(formData[\n            'dataUltimaVisita'\n          ] as Date).getDate()}/${(formData[\n            'dataUltimaVisita'\n          ] as Date).getMonth() + 1}/${(formData[\n            'dataUltimaVisita'\n          ] as Date).getFullYear()}`;\n        }\n\n        this.tipoVisao = 'ficha';\n        this.dataFicha = {\n          razaoSocial: formData['razaoSocial'],\n          dataSolicitacao: dataSolicitacao,\n          codCliente: formData['codCliente'],\n          codClienteDBA: formData['codClienteDBA'],\n          setorAtividade: formData['setorAtividade'],\n          dataUltimaVisita: dataUltimaVisita,\n          instalacoes: formData['instalacoes'],\n          numFuncionarios: formData['numFuncionarios'],\n          limiteCreditoAtual: formData['limiteCreditoAtual'],\n          limiteCreditoSolicitado: formData['limiteCreditoSolicitado'],\n          condicaoPagto: formData['condicaoPagto'],\n          nomeVendedor: formData['nomeVendedor'],\n          telefoneVendedor: formData['telefoneVendedor'],\n          gestorVendas: formData['gestorVendas'],\n          nomeEscritorio: formData['nomeEscritorio'],\n          fornecedores: formData['fornecedores'],\n          clientes: formData['clientes'],\n          bancos: formData['bancos'],\n          vendasConcentradas: formData['vendasConcentradas'],\n          previsaoCompraTon: formData['previsaoCompraTon'],\n          previsaoCompraValor: formData['previsaoCompraValor'],\n          faturamentoMedio: formData['faturamentoMedio'],\n          parecerVendedor: formData['parecerVendedor']\n        };\n\n        this.formChanged = false;\n        this.loaderNavbar = false;\n      }, 1000);\n    }\n  }\n\n  onCancel() {\n    this.loaderNavbar = true;\n    setTimeout(() => {\n      this.tipoVisao = 'formulario';\n      this.loaderNavbar = false;\n    }, 1000);\n  }\n\n  onDownload() {\n    this.loaderNavbar = true;\n    this.pdfService.download(\n      'impressao-ficha-pac',\n      `${this.codCliente}_PropostaAnaliseCredito`\n    );\n\n    setTimeout(() => {\n      this.loaderNavbar = false;\n    }, 500);\n  }\n}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n// ngx-filter-pipe\nimport { FilterPipe } from 'ngx-filter-pipe';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n// Interfaces\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-resumo',\n  templateUrl: './resumo.component.html',\n  styleUrls: ['./resumo.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroResumoComponent\n  implements OnInit {\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  sinteticoPendenciasLoaded: boolean = false;\n\n  codCliente: number;\n\n  modalRef: BsModalRef;\n\n  sintetico: any = {\n    atrasoPagamento: 0,\n    tempoEntrega: 0,\n    totalAtraso: 0,\n    pagtoAntecipado: 0,\n    creditoSeguradora: 0\n  };\n\n  countoAtrasoPagamento: number;\n  countoTempoEntrega: number;\n  countoTotalAtraso: number;\n  countoPagtoAntecipado: number;\n  countoCreditoSeguradora: number;\n  countoTitulos: number;\n  countoNotasDebito: number;\n  countoNotasPromissorias: number;\n  countoChequesDevolvidos: number;\n  countoCorteDobra: number;\n  countoReservaBobinas: number;\n  countoLimiteCredito: number;\n  countoSaldo: number;\n\n  grupoEconomico: any = [];\n  grupoEconomicoLoaded: boolean = false;\n\n  showPendenciasDetalhes: boolean = false;\n\n  pendencias: any = {\n    titulos: 0,\n    notasDebito: 0,\n    notasPromissorias: 0,\n    chequesDevolvidos: 0,\n    corteDobra: 0,\n    reservaBobinas: 0,\n    limiteCredito: 0,\n    saldo: 0\n  };\n\n  pedidos: any = [];\n  pedidosPagination: any = [];\n  pedidosFiltered: any = [];\n  pedidosLoaded: boolean = false;\n\n  maxSize: number = 8;\n  itemsPerPage: number = 10;\n\n  visaoGrupoEconomico: boolean = false;\n  queryParams: any = { grupoEconomico: this.visaoGrupoEconomico };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService,\n    private modalService: BsModalService,\n    private filterPipe: FilterPipe\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(queryParams => {\n      this.activatedRoute.parent.params.subscribe(params => {\n        let grupoEconomico = false;\n\n        if (\n          queryParams['grupoEconomico'] &&\n          queryParams['grupoEconomico'] == 'true'\n        ) {\n          grupoEconomico = true;\n          this.visaoGrupoEconomico = true;\n          this.queryParams = {\n            grupoEconomico: this.visaoGrupoEconomico\n          };\n        }\n\n        this.codCliente = params['id'];\n        this.getResumoSintetico(this.codCliente, grupoEconomico);\n        this.getGrupoEconomico(this.codCliente);\n        this.getPedidos(this.codCliente, grupoEconomico);\n      });\n    });\n  }\n\n  onChangeGrupoEconomico() {\n    this.onLoadingGrupoEconomico();\n    this.queryParams = { grupoEconomico: this.visaoGrupoEconomico };\n\n    this.router.navigate(\n      [`/comercial/clientes/historico-financeiro/${this.codCliente}/resumo`],\n      {\n        queryParams: this.queryParams\n      }\n    );\n  }\n\n  onLoadingGrupoEconomico() {\n    this.visaoGrupoEconomico = !this.visaoGrupoEconomico;\n    this.sinteticoPendenciasLoaded = false;\n    this.pedidosLoaded = false;\n  }\n\n  getResumoSintetico(id: number, grupoEconomico: boolean) {\n    this.historicoFinanceiroService\n      .getResumoSintetico(id, grupoEconomico)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.sintetico = response['result']['sintetico'];\n          this.pendencias = response['result']['pendencias'];\n        }\n        this.sinteticoPendenciasLoaded = true;\n      });\n  }\n\n  getGrupoEconomico(id: number) {\n    this.historicoFinanceiroService\n      .getGrupoEconomico(id)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.grupoEconomico = response['result'];\n        }\n        this.grupoEconomicoLoaded = true;\n      });\n  }\n\n  getPedidos(id: number, grupoEconomico: boolean) {\n    this.historicoFinanceiroService\n      .getResumoPedidos(id, grupoEconomico)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.pedidos = response['result'];\n          this.pedidosFiltered = response['result'];\n          this.pedidosPagination = this.pedidosFiltered.slice(\n            0,\n            this.itemsPerPage\n          );\n        }\n        this.pedidosLoaded = true;\n      });\n  }\n\n  onGrupoEconomico(modalRef: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(modalRef);\n  }\n\n  onCloseModalGrupoEconomico() {\n    this.modalRef.hide();\n  }\n\n  handleCounter(valor: number) {\n    return valor.toFixed(0);\n  }\n\n  classStatusBorder(status: string) {\n    let borderClass = '';\n\n    if (status == 'EM ABERTO') {\n      borderClass = 'border-success';\n    } else if (status == 'QUITADA') {\n      borderClass = 'border-primary';\n    } else if (status == 'VENCIDA') {\n      borderClass = 'border-warning';\n    } else if (status == 'PROTESTO') {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.pedidosPagination = this.pedidosFiltered.slice(startItem, endItem);\n  }\n\n  onFilter(value: string) {\n    if (value) {\n      this.pedidosFiltered = this.filterPipe.transform(this.pedidos, {\n        numDuplicata: value\n      });\n    } else {\n      this.pedidosFiltered = this.pedidos;\n    }\n\n    this.pedidosPagination = this.pedidosFiltered.slice(0, this.itemsPerPage);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3VsdGltb3MtcHJlY29zL3VsdGltb3MtcHJlY29zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialClientesDetalheService } from './detalhes.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesDetalhesResolverGuard implements Resolve<any> {\n  constructor(private detalhesService: ComercialClientesDetalheService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params['id']) {\n      return this.detalhesService.getDetalhes(route.params['id']);\n    }\n\n    return of({\n      responseCode: 204\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { ComercialClientesResolverGuard } from '../clientes-resolver.guard';\n\n// Components\nimport { ComercialClientesHistoricoFinanceiroComponent } from './historico-financeiro.component';\nimport { ComercialClientesHistoricoFinanceiroResumoComponent } from './resumo/resumo.component';\nimport { ComercialClientesHistoricoFinanceiroDetalhesComponent } from './detalhes/detalhes.component';\nimport { ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent } from './materiais-duplicata/materiais-duplicata.component';\nimport { ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent } from './acumulos-mensais/acumulos-mensais.component';\nimport { ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent } from './notas-promissorias/notas-promissorias.component';\nimport { ComercialClientesHistoricoFinanceiroDebitosComponent } from './debitos/debitos.component';\nimport { ComercialClientesHistoricoFinanceiroCorteDobraComponent } from './corte-dobra/corte-dobra.component';\n\nconst routes: Routes = [\n  {\n    path: ':id',\n    component: ComercialClientesHistoricoFinanceiroComponent,\n    resolve: {\n      response: ComercialClientesResolverGuard\n    },\n    children: [\n      { path: '', redirectTo: 'resumo', pathMatch: 'full' },\n      {\n        path: 'resumo',\n        component: ComercialClientesHistoricoFinanceiroResumoComponent\n      },\n      {\n        path: 'detalhes',\n        component: ComercialClientesHistoricoFinanceiroDetalhesComponent\n      },\n      {\n        path: 'materiais-duplicata',\n        component: ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent\n      },\n      {\n        path: 'acumulos-mensais',\n        component: ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent\n      },\n      {\n        path: 'notas-promissorias',\n        component: ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent\n      },\n      {\n        path: 'debitos',\n        component: ComercialClientesHistoricoFinanceiroDebitosComponent\n      },\n      {\n        path: 'corte-dobra',\n        component: ComercialClientesHistoricoFinanceiroCorteDobraComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: '/comercial/home',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialHistoricoFinanceiroRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2NvcnRlLWRvYnJhL2NvcnRlLWRvYnJhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!acumulosMensaisLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carga de acumulaciones mensuales...</strong>\\n    </div>\\n    <tabset *ngIf=\\\"acumulosMensaisLoaded\\\">\\n      <tab heading=\\\"Principal\\\">\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\n          <custom-table *ngIf=\\\"acumulosMensais.principal.length > 0\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Período</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor acumulado</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Média atraso</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let acumulo of acumulosMensais.principal\\\">\\n                <td class=\\\"text-center\\\">{{ acumulo.periodo }}</td>\\n                <td class=\\\"text-center\\\">{{ acumulo.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\n                <td class=\\\"text-center\\\">{{ acumulo.atraso }} dias</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n          <empty-result\\n            message=\\\"Nenhuma informação encontrada\\\"\\n            *ngIf=\\\"acumulosMensais.principal.length == 0\\\">\\n          </empty-result>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Maior fatura\\\">\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\n          <custom-table *ngIf=\\\"acumulosMensais.maiorFatura.length > 0\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Pedido</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let acumulo of acumulosMensais.maiorFatura\\\">\\n                <td class=\\\"text-center\\\">{{ acumulo.numPedido }}</td>\\n                <td class=\\\"text-center\\\">{{ acumulo.data }}</td>\\n                <td class=\\\"text-center\\\">{{ acumulo.empresa }}</td>\\n                <td class=\\\"text-center\\\">{{ acumulo.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n          <empty-result\\n            message=\\\"Nenhuma informação encontrada\\\"\\n            *ngIf=\\\"acumulosMensais.maiorFatura.length == 0\\\">\\n          </empty-result>\\n        </div>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Services\nimport { FormRulesService } from 'src/app/shared/services/core/form-rules.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesCadastroDadosFaturamentoRulesResolverGuard\n  implements Resolve<any> {\n  constructor(private formRulesService: FormRulesService) {}\n\n  resolve(): Observable<any> {\n    return this.formRulesService.getRules(1);\n  }\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!duplicataLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carga de duplicados...</strong>\\n    </div>\\n    <tabset *ngIf=\\\"duplicataLoaded\\\">\\n      <tab heading=\\\"Principal\\\">\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Línea:</strong> {{ principal.duplicata.linhaNota }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table *ngIf=\\\"principal.materiais.length > 0\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Descripción</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Sit. Tributária</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Qtde.</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor unidades</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor total</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Alíquota ICMS</th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let material of principal.materiais\\\">\\n                    <td class=\\\"text-center\\\">{{ material.idMaterial }}</td>\\n                    <td class=\\\"text-center\\\">{{ material.nomeMaterial }}</td>\\n                    <td class=\\\"text-center\\\">{{ material.situacaoTributaria }}</td>\\n                    <td class=\\\"text-center\\\">{{ material.quantidade }}</td>\\n                    <td class=\\\"text-center\\\">{{ material.valorUnitario | currency:'BRL':'symbol':'1.2-2' }}</td>\\n                    <td class=\\\"text-center\\\">{{ material.valorTotalItem | currency:'BRL':'symbol':'1.2-2' }}</td>\\n                    <td class=\\\"text-center\\\" *ngIf=\\\"material.aliquotaIcms > 0\\\">{{ material.aliquotaIcms | number:'1.2-2' }}%</td>\\n                    <td class=\\\"text-center\\\" *ngIf=\\\"material.aliquotaIcms == 0\\\">0,00%</td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n              <empty-result\\n                message=\\\"Nenhuma informação encontrada\\\"\\n                *ngIf=\\\"principal.materiais.length == 0\\\">\\n              </empty-result>\\n            </div>\\n          </div>\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Condiciones de pago</div>\\n                <p class=\\\"mb-0\\\"><strong></strong>{{ principal.materiais[0]['condicaoPagamento'] }}</p>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Total productos</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <p class=\\\"mb-0\\\"><strong>Cantidad:</strong> {{ principal.total.peso | number:'1.3-3' }} TON</p>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <p class=\\\"mb-0\\\"><strong>Valor:</strong> {{ principal.total.valor | currency:'BRL':'symbol':'1.2-2' }}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Lugar de entrega</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <p><strong>Referencia:</strong> {{ principal.entrega.referencia }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Endereço:</strong> {{ principal.entrega.logradouro }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Ciudad:</strong> {{ principal.entrega.cidade }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Bairro:</strong> {{ principal.entrega.bairro }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <p class=\\\"mb-0\\\"><strong>UF:</strong> {{ principal.entrega.uf }}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Histórico de cobranças\\\">\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table *ngIf=\\\"historicoCobrancas.length > 0\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Num. Lanzamiento</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Situación</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Fecha</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Usuário</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Comentário</th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let cobranca of historicoCobrancas\\\">\\n                    <td class=\\\"text-center\\\">{{ cobranca.numLancamento }}</td>\\n                    <td class=\\\"text-center\\\">{{ cobranca.situacao }}</td>\\n                    <td class=\\\"text-center\\\">{{ cobranca.data }}</td>\\n                    <td class=\\\"text-center\\\">{{ cobranca.nome }}</td>\\n                    <td class=\\\"text-center\\\">{{ cobranca.comentario }}</td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n              <empty-result\\n                message=\\\"Nenhuma informação encontrada\\\"\\n                *ngIf=\\\"historicoCobrancas.length == 0\\\">\\n              </empty-result>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Colección de la empresa</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <p class=\\\"mb-0\\\"><strong>Código:</strong> Nenhuma informação</p>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <p class=\\\"mb-0\\\"><strong>Descripcion:</strong> Nenhuma informação</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Vencimento original</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <p class=\\\"mb-0\\\">No hay información</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Ocorrências da duplicata\\\">\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table *ngIf=\\\"ocorrenciasDuplicatas.length > 0\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicata</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Operação</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Descrição</th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let ocorrencia of ocorrenciasDuplicatas\\\">\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.numDuplicata }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.operacao }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.data }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.descricao }}</td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n              <empty-result\\n                message=\\\"No hay información encontrada\\\"\\n                *ngIf=\\\"ocorrenciasDuplicatas.length == 0\\\">\\n              </empty-result>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Ocorrências comerciais\\\">\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Duplicata</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table *ngIf=\\\"ocorrenciasComerciais.length > 0\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Número</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Hora</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Usuário</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Operação</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Situação</th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let ocorrencia of ocorrenciasComerciais\\\">\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.numero }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.data }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.hora }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.nome }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.operacao }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.situacao }}</td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n              <empty-result\\n                message=\\\"No hay información encontrada\\\"\\n                *ngIf=\\\"ocorrenciasComerciais.length == 0\\\">\\n              </empty-result>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Busqueda de clientes\\\">\\n  <!-- <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../pre-cadastro']\\\">\\n    Adicionar\\n  </button> -->\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n\\n\\n\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row justify-content-center mb-2\\\">\\n     <div class=\\\"col-lg-6\\\">\\n      <ul class=\\\"list-unstyled mb-0 d-flex justify-content-around\\\">\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Ativo')\\\">\\n          <h6 class=\\\"text-muted font-weight-light\\\">Activos</h6>\\n          <div class=\\\"text-success\\\">\\n            <h4>\\n              <strong\\n                counto\\n                [step]=\\\"30\\\"\\n                [countTo]=\\\"ativos\\\"\\n                [countFrom]=\\\"0\\\"\\n                [duration]=\\\"3\\\"\\n                (countoChange)=\\\"countoAtivos = $event\\\">\\n                {{ handleCounter(countoAtivos) }}\\n              </strong>\\n            </h4>\\n          </div>\\n        </li>\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Inativo')\\\">\\n          <h6 class=\\\"text-muted font-weight-light\\\">Inactivos</h6>\\n          <div class=\\\"text-danger\\\">\\n            <h4>\\n              <strong\\n                counto\\n                [step]=\\\"30\\\"\\n                [countTo]=\\\"inativos\\\"\\n                [countFrom]=\\\"0\\\"\\n                [duration]=\\\"3\\\"\\n                (countoChange)=\\\"countoInativos = $event\\\">\\n                {{ handleCounter(countoInativos) }}\\n              </strong>\\n            </h4>\\n          </div>\\n        </li>\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Potenci')\\\">\\n          <h6 class=\\\"text-muted font-weight-light\\\">Potencial</h6>\\n          <div class=\\\"text-primary\\\">\\n            <h4>\\n              <strong\\n                counto\\n                [step]=\\\"30\\\"\\n                [countTo]=\\\"potencial\\\"\\n                [countFrom]=\\\"0\\\"\\n                [duration]=\\\"3\\\"\\n                (countoChange)=\\\"countoPotencial = $event\\\">\\n                {{ handleCounter(countoPotencial) }}\\n              </strong>\\n            </h4>\\n          </div>\\n        </li>\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Arquivo')\\\">\\n          <h6 class=\\\"text-muted font-weight-light\\\">Archivados</h6>\\n          <div class=\\\"text-secondary\\\">\\n            <h4>\\n              <strong\\n                counto\\n                [step]=\\\"30\\\"\\n                [countTo]=\\\"arquivados\\\"\\n                [countFrom]=\\\"0\\\"\\n                [duration]=\\\"3\\\"\\n                (countoChange)=\\\"countoArquivados = $event\\\">\\n                {{ handleCounter(countoArquivados) }}\\n              </strong>\\n            </h4>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n  <advanced-filter>\\n    <form [formGroup]=\\\"formFilter\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"buscarPor\\\">Buscar por</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"buscarPor\\\"\\n            formControlName=\\\"buscarPor\\\">\\n            <option value=\\\"1\\\">Código, nombre o razon social</option>\\n            <option value=\\\"2\\\">C.I. o NIT</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"pesquisa\\\">Termino de busqueda</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"pesquisa\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"situacao\\\">Situacion</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"situacao\\\"\\n            formControlName=\\\"situacao\\\">\\n            <option value=\\\"Ativo\\\">Activos</option>\\n            <option value=\\\"Inativo\\\">Inactivos</option>\\n            <option value=\\\"Potenci\\\">Potenciales</option>\\n            <option value=\\\"Arquivo\\\">Archivados</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"setorAtividade\\\">Sector empresarial</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"setorAtividades\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"setorAtividade\\\"\\n            bindLabel=\\\"descricao\\\"\\n            bindValue=\\\"id\\\"\\n            formControlName=\\\"setorAtividade\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\n          <label for=\\\"tipoPessoa\\\">Tipo de persona</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"tipoPessoa\\\"\\n            formControlName=\\\"tipoPessoa\\\">\\n            <option value=\\\"F\\\">Persona física</option>\\n            <option value=\\\"J\\\">Persona jurídica</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div>\\n        <!-- <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\n          <label for=\\\"grupoEconomico\\\">Esta en grupo economico</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"grupoEconomico\\\"\\n            formControlName=\\\"grupoEconomico\\\">\\n            <option value=\\\"S\\\">Si</option>\\n            <option value=\\\"N\\\">No</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\n          <label for=\\\"segurado\\\">Asegurado</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"segurado\\\"\\n            formControlName=\\\"segurado\\\">\\n            <option value=\\\"S\\\">Si</option>\\n            <option value=\\\"N\\\">No</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div> -->\\n        <!-- <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\n          <label for=\\\"carteira\\\">Cartera</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"carteira\\\"\\n            formControlName=\\\"carteira\\\">\\n            <option value=\\\"S\\\" selected>Mi cartera</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div> -->\\n        <div class=\\\"form-group col-lg-1 mb-lg-0\\\">\\n          <label for=\\\"registros\\\">Registros</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"registros\\\"\\n            formControlName=\\\"registros\\\">\\n            <option>10</option>\\n            <option>25</option>\\n            <option>50</option>\\n            <option>100</option>\\n            <option>200</option>\\n          </select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"dataLoaded && searchSubmitted && clientes.length == 0 && buscandoPor != 2\\\">\\n    <div class=\\\"col-12\\\">\\n      <empty-result message=\\\"No se encontraron clientes para esta búsqueda.\\\" class=\\\"py-4\\\"></empty-result>\\n    </div>\\n  </div>\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"dataLoaded && searchSubmitted && clientes.length == 0 && buscandoPor == 2\\\">\\n    <div class=\\\"col-7 d-flex justify-content-end w-100 pr-0\\\">\\n      <empty-result message=\\\"No se encontraron clientes para esta búsqueda.\\\" class=\\\"py-4\\\"></empty-result>\\n    </div>\\n    <div class=\\\"col-5 d-flex w-100 pl-1\\\">\\n      <a [routerLink]=\\\"['../pre-cadastro']\\\" [queryParams]=\\\"onPreCadastroCpfCnpj()\\\" class=\\\"my-auto\\\">\\n        <strong>Pulse aquí para registrarse..</strong>\\n      </a>\\n    </div>\\n  </div>\\n  <div class=\\\"row mt-4\\\" *ngIf=\\\"dataLoaded && clientes.length > 0\\\">\\n    <div [ngClass]=\\\"{'col-12': !showDetailPanel, 'col-7 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\"></th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"setOrderBy('codigo_cliente')\\\">\\n              <thead-sorter value=\\\"Código Cliente\\\" [active]=\\\"orderBy == 'codigo_cliente'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"setOrderBy('cpf')\\\">\\n              <thead-sorter value=\\\"CI/NIT\\\" [active]=\\\"orderBy == 'cpf'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"hover\\\"\\n              (click)=\\\"setOrderBy('nomeFantasia')\\\">\\n              <thead-sorter value=\\\"Nombre y apelllido\\\" [active]=\\\"orderBy == 'nomeFantasia'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"hover\\\"\\n              (click)=\\\"setOrderBy('razaoSocial')\\\"\\n              *ngIf=\\\"!showDetailPanel\\\">\\n              <thead-sorter value=\\\"Razon Social\\\" [active]=\\\"orderBy == 'razaoSocial'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let cliente of clientes\\\" [class.table-active]=\\\"cliente.codigo_cliente == clienteSelecionado\\\">\\n            <td class=\\\"text-center hover\\\" [ngClass]=\\\"classStatusBorder(cliente.situacao)\\\" (click)=\\\"viewRegister(cliente)\\\">\\n              <i class=\\\"text-black-50 far fa-check-square mr-3\\\" *ngIf=\\\"cliente.segurado == 0\\\" tooltip=\\\"Cliente no asegurado\\\" placement=\\\"right\\\"></i>\\n              <i class=\\\"text-warning fas fa-check-square mr-3\\\" *ngIf=\\\"cliente.segurado > 0\\\" tooltip=\\\"Cliente asegurado\\\" placement=\\\"right\\\"></i>\\n              <i class=\\\"text-black-50 far fa-folder-open\\\" *ngIf=\\\"cliente.grupoEconomico == 0\\\" tooltip=\\\"No hace parte de grupo economico\\\" placement=\\\"right\\\"></i>\\n              <i class=\\\"text-warning fas fa-folder-open\\\" *ngIf=\\\"cliente.grupoEconomico > 0\\\" tooltip=\\\"Pertenece a un grupo economico\\\" placement=\\\"right\\\"></i>\\n            </td>\\n            <td class=\\\"text-center hover\\\" (click)=\\\"viewRegister(cliente)\\\">{{ cliente.codigo_cliente }}</td>\\n            <td class=\\\"text-center hover\\\" (click)=\\\"viewRegister(cpf)\\\">{{ cliente.cpf }}</td>\\n            <td class=\\\"hover\\\" (click)=\\\"viewRegister(cliente)\\\">{{ cliente.nomeFantasia | uppercase }}</td>\\n            <td class=\\\"hover\\\" (click)=\\\"viewRegister(cliente)\\\" *ngIf=\\\"!showDetailPanel\\\">{{ cliente.razaoSocial | uppercase }}</td>\\n            <td>\\n              <span tooltip=\\\"Datos registrados\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"viewDetails(cliente)\\\">\\n                  <i class=\\\"fas fa-user\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"clientes[0]['total'] > itemsPerPage\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <div class=\\\"sticky-top\\\">\\n        <detail-panel>\\n          <tabset>\\n            <tab heading=\\\"Datos registrados\\\">\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n                <div *ngIf=\\\"dadosCadastraisLoaded && !dadosCadastraisEmpty\\\">\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-lg-6\\\" *ngIf=\\\"dadosCadastrais.tipoPessoa == 'F'\\\">\\n                      <label>C.I. o NIT</label>\\n                      <div *ngIf=\\\"dadosCadastrais.cpf == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.cpf != null\\\">{{ dadosCadastrais.cpf }}</div>\\n                    </div>\\n                    <div class=\\\"form-group col-lg-6\\\" *ngIf=\\\"dadosCadastrais.tipoPessoa == 'J'\\\">\\n                      <label>CNPJ</label>\\n                      <div *ngIf=\\\"dadosCadastrais.cnpj == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.cnpj != null\\\">{{ dadosCadastrais.cnpj }}</div>\\n                    </div>\\n                    <div class=\\\"form-group col-lg-6\\\">\\n                      <label>Nombre</label>\\n                      <div *ngIf=\\\"dadosCadastrais.nomeFantasia == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.nomeFantasia != null\\\">{{ dadosCadastrais.nomeFantasia }}</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                      <label>Razon social</label>\\n                      <div *ngIf=\\\"dadosCadastrais.razaoSocial == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.razaoSocial != null\\\">{{ dadosCadastrais.razaoSocial }}</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                      <label>Direccion</label>\\n                      <div *ngIf=\\\"dadosCadastrais.endereco == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.endereco != null\\\">{{ dadosCadastrais.endereco }}</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-lg-6\\\">\\n                      <label>Barrio</label>\\n                      <div *ngIf=\\\"dadosCadastrais.bairro == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.bairro != null\\\">{{ dadosCadastrais.bairro }}</div>\\n                    </div>\\n                    <!-- <div class=\\\"form-group col-lg-6\\\">\\n                      <label>CEP</label>\\n                      <div *ngIf=\\\"dadosCadastrais.cep == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.cep != null\\\">{{ dadosCadastrais.cep }}</div>\\n                    </div> -->\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-lg-6\\\">\\n                      <label>Ciudad</label>\\n                      <div *ngIf=\\\"dadosCadastrais.cidade == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.cidade != null\\\">{{ dadosCadastrais.cidade }}</div>\\n                    </div>\\n                    <div class=\\\"form-group col-lg-6\\\">\\n                      <label>Departamento</label>\\n                      <div *ngIf=\\\"dadosCadastrais.uf == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.uf != null\\\">{{ dadosCadastrais.uf }}</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                      <label>Asegurado</label>\\n                      <div *ngIf=\\\"dadosCadastrais.segurado != ''\\\">Si</div>\\n                      <div *ngIf=\\\"dadosCadastrais.segurado == ''\\\">NO</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-lg-6\\\">\\n                      <label>Vendedor</label>\\n                      <div *ngIf=\\\"dadosCadastrais.vendedor == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.vendedor != null\\\">{{ dadosCadastrais.vendedor }}</div>\\n                    </div>\\n                    <div class=\\\"form-group col-lg-6\\\">\\n                      <label>Sucursal</label>\\n                      <div *ngIf=\\\"dadosCadastrais.escritorio == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.escritorio != null\\\">{{ dadosCadastrais.escritorio }}</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCadastrais.codSAP != '' && dadosCadastrais.codSAP != null\\\">\\n                      <label>Código DBA</label>\\n                      <div>{{ dadosCadastrais.codSAP }}</div>\\n                    </div>\\n                    <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCadastrais.escritorioDba != '' && dadosCadastrais.escritorioDba != null\\\">\\n                      <label>Sucursal</label>\\n                      <div>{{ dadosCadastrais.escritorioDba }}</div>\\n                    </div>\\n                    <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCadastrais.ultimaCompraDba != '' && dadosCadastrais.ultimaCompraDba != null\\\">\\n                      <label>Última compra</label>\\n                      <div>{{ dadosCadastrais.ultimaCompraDba }}</div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"mb-3\\\" *ngIf=\\\"dadosCadastraisLoaded && dadosCadastraisEmpty\\\">\\n                  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n                </div>\\n                <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!dadosCadastraisLoaded\\\">\\n                  <div class=\\\"spinner-border text-dark\\\"></div>\\n                </div>\\n              </div>\\n            </tab>\\n            <tab heading=\\\"Contatos\\\">\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n                <div *ngIf=\\\"contatosLoaded && !contatosEmpty\\\">\\n                  <div class=\\\"form-row\\\" *ngFor=\\\"let contato of contatos\\\">\\n                    <div class=\\\"form-group col\\\">\\n                      <label>{{ contato.tipoContato }}</label>\\n                      <div>\\n                        <span *ngIf=\\\"contato.nomeContato.length > 1\\\" class=\\\"mr-1\\\">{{ contato.nomeContato }} :</span>\\n                        <span\\n                          *ngIf=\\\"(contato.tipoContato != 'Email NFe') &&\\n                                (contato.tipoContato != 'E-mail NFe') &&\\n                                (contato.tipoContato != 'MalaDireta') &&\\n                                (contato.tipoContato != 'E-Mail')\\\">\\n                          {{ contato.contato }}\\n                        </span>\\n                        <span\\n                          *ngIf=\\\"(contato.tipoContato == 'Email NFe') ||\\n                                (contato.tipoContato == 'E-mail NFe') ||\\n                                (contato.tipoContato == 'MalaDireta') ||\\n                                (contato.tipoContato == 'E-Mail')\\\">\\n                          <a [href]=\\\"'mailto:' + contato.contato\\\">{{ contato.contato | lowercase }}</a>\\n                        </span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"mb-3\\\" *ngIf=\\\"contatosLoaded && contatosEmpty\\\">\\n                  <empty-result message=\\\"Ningun contacto encontrado\\\"></empty-result>\\n                </div>\\n                <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!contatosLoaded\\\">\\n                  <div class=\\\"spinner-border text-dark\\\"></div>\\n                </div>\\n              </div>\\n            </tab>\\n          </tabset>\\n        </detail-panel>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { take } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesCadastroDadosFaturamentoFormularioService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes/cadastro/formulario/dados-faturamento`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependenciesPF() {\n    const tiposCadastro = this.getTiposCadastro();\n    const contribuintes = this.getContribuintes();\n    const setorAtividades = this.getSetorAtividades();\n\n    return forkJoin([tiposCadastro, contribuintes, setorAtividades]).pipe(\n      take(1)\n    );\n  }\n\n  loadDependenciesPJ() {\n    const tiposCadastro = this.getTiposCadastro();\n    const regimesTributacao = this.getRegimesTributacao();\n    const contribuintes = this.getContribuintes();\n    const setorAtividades = this.getSetorAtividades();\n    const finalidadesMaterial = this.getFinalidadesMaterial();\n    const cnaes = this.getCnaes();\n\n    return forkJoin([\n      tiposCadastro,\n      regimesTributacao,\n      contribuintes,\n      setorAtividades,\n      finalidadesMaterial,\n      cnaes\n    ]).pipe(take(1));\n  }\n\n  getTiposCadastro() {\n    return this.http.get(`${this.API}/tipos-cadastro`).pipe(take(1));\n  }\n\n  getRegimesTributacao() {\n    return this.http.get(`${this.API}/regimes-tributacao`).pipe(take(1));\n  }\n\n  getContribuintes() {\n    return this.http.get(`${this.API}/contribuintes`).pipe(take(1));\n  }\n\n  getSetorAtividades() {\n    return this.http.get(`${this.API}/setor-atividades`).pipe(take(1));\n  }\n\n  getFinalidadesMaterial() {\n    return this.http.get(`${this.API}/finalidades-material`).pipe(take(1));\n  }\n\n  getCnaes() {\n    return this.http.get(`${this.API}/cnaes`).pipe(take(1));\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from '../cadastro/dados-faturamento/formulario/formulario.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-clientes-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialClientesListaComponent implements OnInit, OnDestroy {\n  loaderNavbar = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home',\n    },\n    {\n      descricao: 'Busqueda de clientes',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  setorAtividades: any = [\n    {\n      id: 'T',\n      descricao: 'EXIBIR TODOS',\n    },\n  ];\n\n  dataLoaded = false;\n  dadosCadastraisLoaded = false;\n  dadosCadastraisEmpty = false;\n  contatosLoaded = false;\n  contatosEmpty = false;\n  searchSubmitted = false;\n  showAdvancedFilter = true;\n\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  matricula = this.currentUser['info']['matricula'];\n\n  ativos = 0;\n  inativos = 0;\n  potencial = 0;\n  arquivados = 0;\n\n  countoAtivos: number;\n  countoInativos: number;\n  countoPotencial: number;\n  countoArquivados: number;\n\n  formFilter: FormGroup;\n  buscandoPor: number;\n  pesquisa: string;\n  orderBy = 'codCliente';\n  orderType = 'desc';\n\n  maxSize = 10;\n  itemsPerPage = 50;\n  currentPage = 1;\n  totalItems = 0;\n\n  clientes: any = [];\n  clientesPagination: any = [];\n\n  clienteSelecionado: number;\n  dadosCadastrais: any = {};\n  contatos: any = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private clientesService: ComercialClientesService,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private dadosFaturamentoService: ComercialClientesCadastroDadosFaturamentoFormularioService,\n    private titleService: TitleService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.getFormFilters();\n    this.setFormFilter();\n    this.titleService.setTitle('Busqueda de clientes');\n    this.onDetailPanelEmitter();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n\n        if (this.showDetailPanel === false) {\n          this.onCloseDetailPanel();\n        }\n      }\n    );\n  }\n\n  getFormFilters(): void {\n    this.dadosFaturamentoService\n      .getSetorAtividades()\n      .pipe(\n        finalize(() => {\n          this.setorAtividades.unshift({\n            id: 'T',\n            descricao: 'EXIBIR TODOS',\n          });\n        })\n      )\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.setorAtividades = response['result'];\n        }\n      });\n  }\n\n  setFormFilter(): void {\n    const formValue = this.checkRouterParams();\n\n    this.formFilter = this.formBuilder.group({\n      pesquisa: [formValue['pesquisa']],\n      buscarPor: [formValue['buscarPor'], Validators.required],\n      situacao: [formValue['situacao'], Validators.required],\n      setorAtividade: [formValue['setorAtividade'], Validators.required],\n      tipoPessoa: [formValue['tipoPessoa'], Validators.required],\n      grupoEconomico: [formValue['grupoEconomico'], Validators.required],\n      segurado: [formValue['segurado'], Validators.required],\n      carteira: [formValue['carteira'], Validators.required],\n      pagina: [formValue['pagina']],\n      registros: [formValue['registros'], Validators.required],\n      id_group_econ: [formValue['grupoEconomico'], Validators.required], // Se Agrega este campo\n    });\n  }\n  searchInputValue: string;\n\n  checkRouterParams(): Object {\n    var aux_cartera;\n    if (this.matricula == 1){\n      aux_cartera ='T'\n    }else{\n      aux_cartera = 'S'\n    }\n    let formValue = {\n      pesquisa: this.searchInputValue, // aquí se actualizaría el valor de pesquisa\n      buscarPor: 1,\n      situacao: 'T',\n      setorAtividade: 'T',\n      tipoPessoa: 'T',\n      grupoEconomico: 'T',\n      segurado: 'T',\n      carteira: aux_cartera,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.setSubmittedSearch();\n          this.search(params);\n\n          if (params['registros']) {\n            this.itemsPerPage = params['registros'];\n          }\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        } else {\n          this.listStatus();\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  listStatus(): void {\n    this.clientesService.getStatus().subscribe({\n      next: (response: any) => {\n        if (response['responseCode'] === 200) {\n          this.setStatus(response['result']);\n        }\n      },\n      error: (error: any) => {\n        this.pnotifyService.error();\n      }\n    });\n  }\n\n  setStatus(status: any): void {\n    for (let i = 0; i < status.length; i++) {\n      if (status[i]['situacao'] == 'Ativo') {\n        this.ativos = status[i]['quantidade'];\n      } else if (status[i]['situacao'] == 'Inativo'|| status[i]['situacao'] == null) {\n        this.inativos += status[i]['quantidade'];\n      } else if (status[i]['situacao'] == 'Potenci') {\n        this.potencial = status[i]['quantidade'];\n      } else if (status[i]['situacao'] == 'Arquivo') {\n        this.arquivados = status[i]['quantidade'];\n      }\n    }\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'desc') {\n        this.orderType = 'asc';\n      } else if (this.orderType == 'asc') {\n        this.orderType = 'desc';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'asc';\n    }\n    this.onFilter();\n  }\n\n  onAdvancedFilter(): void {\n    this.showAdvancedFilter = !this.showAdvancedFilter;\n  }\n\n  filterByStatus(status: string): void {\n    this.formFilter.get('situacao').setValue(status);\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    let params = this.formFilter.value;\n    params['orderBy'] = this.orderBy;\n    params['orderType'] = this.orderType;\n\n    this.itemsPerPage = this.formFilter.value['registros'];\n    this.currentPage = 1;\n    this.setRouterParams(params);\n  }\n\n  setSubmittedSearch(): void {\n    this.searchSubmitted = true;\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n      queryParamsHandling: 'merge',\n    });\n    this.setSubmittedSearch();\n    this.search(params);\n  }\n\n  search(params: any): void {\n    if (this.searchSubmitted) {\n      this.loaderNavbar = true;\n      this.dataLoaded = false;\n      this.detailPanelService.hide();\n      this.clientes = [];\n      this.buscandoPor = params['buscarPor'];\n      this.pesquisa = params['pesquisa'];\n\n      this.clientesService\n        .getClientes(params)\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n            this.dataLoaded = true;\n          })\n        )\n        .subscribe(\n          (response: any) => {\n            if (response['responseCode'] === 200) {\n              this.clientes = response['result']['analitico'].slice(\n                0,\n                this.itemsPerPage\n              );\n              this.totalItems = this.clientes[0]['total'];\n              this.setStatus(response['result']['sintetico']);\n            } else if (response['responseCode'] === 204) {\n              this.ativos = 0;\n              this.inativos = 0;\n              this.potencial = 0;\n              this.arquivados = 0;\n            }\n          },\n          (error: any) => {\n            this.pnotifyService.error();\n          }\n        );\n    }\n  }\n\n  classStatusBorder(status: string): string {\n    let borderClass: string;\n\n    if (status == 'Ativo') {\n      borderClass = 'border-success';\n    } else if (status == 'Inativo') {\n      borderClass = 'border-danger';\n    } else if (status == 'Potenci') {\n      borderClass = 'border-primary';\n    } else if (status == 'Arquivo') {\n      borderClass = 'border-secondary';\n    }\n\n    return borderClass;\n  }\n\n  viewRegister(cliente: any): void {\n    if (cliente['podeAcessar'] == 1 || cliente['podeAcessar'] == 0) {\n      this.router.navigate(['../detalhes', cliente.codCliente], {\n        relativeTo: this.activatedRoute,\n        \n      });\n    } else {\n      this.pnotifyService.notice('Esse cliente não faz parte da sua carteira.');\n    }\n  }\n\n  viewDetails(cliente: any): void {\n    this.detailPanelService.loadedFinished(false);\n\n    this.clienteSelecionado = cliente.codCliente;\n\n    this.dadosCadastraisLoaded = false;\n    this.dadosCadastraisEmpty = false;\n\n    this.contatosLoaded = false;\n    this.contatosEmpty = false;\n\n    this.clientesService\n      .getDetalhes(cliente.codCliente)\n      .pipe(\n        finalize(() => {\n          this.dadosCadastraisLoaded = true;\n        })\n      )\n      .subscribe((response: JsonResponse) => {\n        if (response.success === true) {\n          this.dadosCadastrais = response.data;\n        } else {\n          this.dadosCadastraisEmpty = true;\n        }\n      });\n\n    this.clientesService\n      .getContatosResumido(cliente.codCliente)\n      .subscribe((response: any) => {\n        this.contatosLoaded = true;\n\n        if (response['responseCode'] === 200) {\n          if (Object.keys(response['result']).length > 0) {\n            this.contatos = response['result'];\n          } else {\n            this.contatosEmpty = true;\n          }\n        } else {\n          this.contatosEmpty = true;\n        }\n      });\n  }\n\n  onCloseDetailPanel() {\n    this.resetClienteSelecionado();\n\n    setTimeout(() => {\n      this.dadosCadastraisLoaded = false;\n      this.dadosCadastraisEmpty = false;\n      this.dadosCadastrais = {};\n\n      this.contatosEmpty = false;\n      this.contatosLoaded = false;\n      this.contatos = [];\n    }, 500);\n  }\n\n  onPageChanged(event: PageChangedEvent) {\n    if (this.formFilter.value['pagina'] != event.page) {\n      this.detailPanelService.hide();\n      this.resetClienteSelecionado();\n      this.formFilter.value['pagina'] = event.page;\n      this.onFilter();\n    }\n  }\n\n  onPreCadastroCpfCnpj() {\n    let pesquisa = this.pesquisa.replace(/\\D/g, '');\n\n    if (pesquisa.length === 11) {\n      return { cpf: pesquisa };\n    } else if (pesquisa.length === 14) {\n      return { cnpj: pesquisa };\n    }\n\n    return {};\n  }\n\n  handleCounter(value: any) {\n    return value.toFixed(0);\n  }\n\n  resetClienteSelecionado() {\n    this.clienteSelecionado = null;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2FjdW11bG9zLW1lbnNhaXMvYWN1bXVsb3MtbWVuc2Fpcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-clientes-detalhes',\n  templateUrl: './detalhes.component.html',\n  styleUrls: ['./detalhes.component.scss']\n})\nexport class ComercialClientesDetalhesComponent implements OnInit {\n  loaderNavbar: boolean = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home'\n    },\n    {\n      descricao: 'Busqueda de clientes',\n      routerLink: '/comercial/clientes/lista'\n    },\n    {\n      descricao: 'Detalhes'\n    }\n  ];\n\n  cliente: any = {};\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pnotifyService: PNotifyService,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    if (this.activatedRoute.snapshot.data['response']['responseCode'] === 200) {\n      this.cliente = this.activatedRoute.snapshot.data['response']['result'];\n      this.registrarAcesso();\n      this.titleService.setTitle('Detalhes');\n    } else if (\n      this.activatedRoute.snapshot.data['response']['responseCode'] === 403\n    ) {\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\n      this.router.navigate(['/comercial/home']);\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  classStatusBadge(status: string) {\n    let badgeClass = '';\n\n    if (status == 'Ativo') {\n      badgeClass = 'badge-success';\n    } else if (status == 'Inativo') {\n      badgeClass = 'badge-danger';\n    } else if (status == 'Potenci') {\n      badgeClass = 'badge-primary';\n    } else if (status == 'Arquivo') {\n      badgeClass = 'badge-secondary';\n    }\n\n    return badgeClass;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { timeout, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CnpjService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/common/services/cnpj`;\n\n  constructor(protected http: HttpClient) {}\n\n  getData(cnpj: string) {\n    cnpj = cnpj.replace(/\\D/g, '');\n\n    return this.http.get(`${this.API}/${cnpj}`).pipe(\n      timeout(5000),\n      catchError(e => {\n        return of(null);\n      })\n    );\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Proposta para análise de crédito\\\">\\n  <button\\n    type=\\\"button\\\"\\n    *ngIf=\\\"tipoVisao == 'formulario'\\\"\\n    [disabled]=\\\"!form.valid\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    Generar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\n    (click)=\\\"onCancel()\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\n    (click)=\\\"onDownload()\\\">\\n    Download\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row justify-content-center\\\" *ngIf=\\\"tipoVisao == 'formulario'\\\">\\n    <div class=\\\"col-6\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col mb-0\\\">\\n            <div class=\\\"mtc-title\\\">Datos del cliente</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"razaoSocial\\\">Razon social</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"razaoSocial\\\"\\n              formControlName=\\\"razaoSocial\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"dataSolicitacao\\\">Fecha de la solicitud</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"dataSolicitacao\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataSolicitacao\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('dataSolicitacao') + ' ' + onFieldRequired('dataSolicitacao')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataSolicitacao')\\\" message=\\\"Data de solicitação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"codCliente\\\">Código de cliente</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"codCliente\\\"\\n              formControlName=\\\"codCliente\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"codClienteDBA\\\">Código SAP</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"codClienteDBA\\\"\\n              formControlName=\\\"codClienteDBA\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"limiteCreditoAtual\\\">Limite de crédito atual</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"limiteCreditoAtual\\\"\\n              formControlName=\\\"limiteCreditoAtual\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\n              (input)=\\\"onInput()\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"setorAtividade\\\">Setor de atividades</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"setorAtividade\\\"\\n              formControlName=\\\"setorAtividade\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"dataUltimaVisita\\\">Fecha de la última visita</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"dataUltimaVisita\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataUltimaVisita\\\"\\n              (input)=\\\"onInput()\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"instalacoes\\\">Instalaciones</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"instalacoes\\\"\\n              formControlName=\\\"instalacoes\\\"\\n              (input)=\\\"onInput()\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"numFuncionarios\\\">Número de empleados</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"numFuncionarios\\\"\\n              formControlName=\\\"numFuncionarios\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 0 }\\\"\\n              (input)=\\\"onInput()\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"limiteCreditoSolicitado\\\">Limite de crédito solicitado</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"limiteCreditoSolicitado\\\"\\n              formControlName=\\\"limiteCreditoSolicitado\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('limiteCreditoSolicitado') + ' ' + onFieldRequired('limiteCreditoSolicitado')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('limiteCreditoSolicitado')\\\" message=\\\"Limite de crédito solicitado é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"condicaoPagto\\\">Condiciones de pago</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"condicaoPagto\\\"\\n              formControlName=\\\"condicaoPagto\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('condicaoPagto') + ' ' + onFieldRequired('condicaoPagto')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('condicaoPagto')\\\" message=\\\"Condição de pagamento é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col mb-0\\\">\\n            <hr class=\\\"mt-0\\\">\\n            <div class=\\\"mtc-title\\\">Solicitud de datos</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"nomeVendedor\\\">Vendedor(a)</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeVendedor\\\"\\n              formControlName=\\\"nomeVendedor\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"telefoneVendedor\\\">Teléfono</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"telefoneVendedor\\\"\\n              formControlName=\\\"telefoneVendedor\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"gestorVendas\\\">Jefe de ventas</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"gestorVendas\\\"\\n              formControlName=\\\"gestorVendas\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('gestorVendas') + ' ' + onFieldRequired('gestorVendas')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('gestorVendas')\\\" message=\\\"Gestor(a) de venda é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"nomeEscritorio\\\">Oficina de ventas</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeEscritorio\\\"\\n              formControlName=\\\"nomeEscritorio\\\">\\n          </div>\\n        </div>\\n        <div formArrayName=\\\"fornecedores\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <hr class=\\\"mt-0\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\n              <div class=\\\"mtc-title\\\">Proveedores</div>\\n              <div>\\n                <a\\n                  class=\\\"text-secondary\\\"\\n                  (click)=\\\"onAddFornecedor()\\\"\\n                  href=\\\"javascript:void(0)\\\">\\n                  <b>Adicionar</b>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of fornecedores.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-6\\\">\\n                  <label for=\\\"nome\\\">Nobre</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nome\\\"\\n                    formControlName=\\\"nome\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    [ngClass]=\\\"onNestedFieldError('fornecedores', i, 'nome') + ' ' + onNestedFieldRequired('fornecedores', i, 'nome')\\\">\\n                </div>\\n                <div class=\\\"form-group col-5\\\">\\n                  <label for=\\\"telefone\\\">Telefono</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"telefone\\\"\\n                    formControlName=\\\"telefone\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\n                </div>\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon\\\"\\n                    (click)=\\\"onDeleteFornecedor(i)\\\">\\n                    <i class=\\\"fas fa-trash\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div formArrayName=\\\"clientes\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <hr class=\\\"mt-0\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\n              <div class=\\\"mtc-title\\\">Clientes</div>\\n              <div>\\n                <a\\n                  class=\\\"text-secondary\\\"\\n                  (click)=\\\"onAddCliente()\\\"\\n                  href=\\\"javascript:void(0)\\\">\\n                  <b>Adicionar</b>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"clientes.controls.length > 0\\\">\\n            <div class=\\\"form-row\\\" *ngFor=\\\"let item of clientes.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n              <div class=\\\"form-group col mb-0\\\">\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-11\\\">\\n                    <label for=\\\"nome\\\">Nombre</label>\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      id=\\\"nome\\\"\\n                      formControlName=\\\"nome\\\"\\n                      (input)=\\\"onInput()\\\">\\n                  </div>\\n                  <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn-icon\\\"\\n                      (click)=\\\"onDeleteCliente(i)\\\">\\n                      <i class=\\\"fas fa-trash\\\"></i>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"mb-3\\\" *ngIf=\\\"clientes.controls.length == 0\\\">\\n            <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n          </div>\\n        </div>\\n        <div formArrayName=\\\"bancos\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <hr class=\\\"mt-0\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\n              <div class=\\\"mtc-title\\\">Bancos</div>\\n              <div>\\n                <a\\n                  class=\\\"text-secondary\\\"\\n                  (click)=\\\"onAddBanco()\\\"\\n                  href=\\\"javascript:void(0)\\\">\\n                  <b>Adicionar</b>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of bancos.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-3\\\">\\n                  <label for=\\\"nome\\\">Nome</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nome\\\"\\n                    formControlName=\\\"nome\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'nome') + ' ' + onNestedFieldRequired('bancos', i, 'nome')\\\">\\n                </div>\\n                <div class=\\\"form-group col-2\\\">\\n                  <label for=\\\"agencia\\\">Agencia</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"agencia\\\"\\n                    formControlName=\\\"agencia\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'agencia') + ' ' + onNestedFieldRequired('bancos', i, 'agencia')\\\">\\n                </div>\\n                <div class=\\\"form-group col-3\\\">\\n                  <label for=\\\"contaCorrente\\\">Cuenta corriente</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"contaCorrente\\\"\\n                    formControlName=\\\"contaCorrente\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'contaCorrente') + ' ' + onNestedFieldRequired('bancos', i, 'contaCorrente')\\\">\\n                </div>\\n                <div class=\\\"form-group col-3\\\">\\n                  <label for=\\\"telefone\\\">Telefono</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"telefone\\\"\\n                    formControlName=\\\"telefone\\\"\\n                    telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'telefone') + ' ' + onNestedFieldRequired('bancos', i, 'telefone')\\\">\\n                </div>\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon\\\"\\n                    (click)=\\\"onDeleteBanco(i)\\\">\\n                    <i class=\\\"fas fa-trash\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col mb-0\\\">\\n            <hr class=\\\"mt-0\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col mb-0\\\">\\n            <label>Ventas concentradas</label>\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col\\\">\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                  <input\\n                    type=\\\"radio\\\"\\n                    id=\\\"vendasConcentradasSim\\\"\\n                    class=\\\"custom-control-input\\\"\\n                    formControlName=\\\"vendasConcentradas\\\"\\n                    value=\\\"Sim\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"vendasConcentradasSim\\\">Sim</label>\\n                </div>\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                  <input\\n                    type=\\\"radio\\\"\\n                    id=\\\"vendasConcentradasNao\\\"\\n                    class=\\\"custom-control-input\\\"\\n                    formControlName=\\\"vendasConcentradas\\\"\\n                    value=\\\"Não\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"vendasConcentradasNao\\\">Não</label>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"previsaoCompraTon\\\">Compra mensual estimada (Ton)</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"previsaoCompraTon\\\"\\n              formControlName=\\\"previsaoCompraTon\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"previsaoCompraValor\\\">Compra mensual estimada (R$)</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"previsaoCompraValor\\\"\\n              formControlName=\\\"previsaoCompraValor\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"faturamentoMedio\\\">Facturación media mensual</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"faturamentoMedio\\\"\\n              formControlName=\\\"faturamentoMedio\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"parecerVendedor\\\">Opinión del vendedor</label>\\n            <textarea\\n              class=\\\"form-control\\\"\\n              id=\\\"parecerVendedor\\\"\\n              formControlName=\\\"parecerVendedor\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('parecerVendedor') + ' ' + onFieldRequired('parecerVendedor')\\\">\\n            </textarea>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('parecerVendedor')\\\" message=\\\"Parecer do vendedor é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"row justify-content-center pt-5\\\" id=\\\"impressao-ficha-pac\\\" *ngIf=\\\"tipoVisao == 'ficha'\\\">\\n    <div class=\\\"col-9\\\">\\n      <h1>Propuesta de análisis de créditos (PAC)</h1>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Dados do cliente</div>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Razon social:</strong>\\n          <span *ngIf=\\\"dataFicha.razaoSocial == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.razaoSocial != null\\\">{{ dataFicha.razaoSocial }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Fecha de la solicitud:</strong>\\n          <span *ngIf=\\\"dataFicha.dataSolicitacao == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.dataSolicitacao != null\\\">{{ dataFicha.dataSolicitacao }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Código de cliente (TID):</strong>\\n          <span *ngIf=\\\"dataFicha.codCliente == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.codCliente != null\\\">{{ dataFicha.codCliente }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Código de cliente (SAP):</strong>\\n          <span *ngIf=\\\"dataFicha.codClienteDBA == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.codClienteDBA != null\\\">{{ dataFicha.codClienteDBA }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Limite de crédito actual:</strong>\\n          <span *ngIf=\\\"dataFicha.limiteCreditoAtual == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.limiteCreditoAtual == null\\\">{{ dataFicha.limiteCreditoAtual | currency:'BRL':'symbol':'1.2-2' }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Sector de actividade:</strong>\\n          <span *ngIf=\\\"dataFicha.setorAtividade == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.setorAtividade != null\\\">{{ dataFicha.setorAtividade }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Fecha de la última visita:</strong>\\n          <span *ngIf=\\\"dataFicha.dataUltimaVisita == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.dataUltimaVisita != null\\\">{{ dataFicha.dataUltimaVisita }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Instalaciones:</strong>\\n          <span *ngIf=\\\"dataFicha.instalacoes == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.instalacoes != null\\\">{{ dataFicha.instalacoes }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Número de funcionários:</strong>\\n          <span *ngIf=\\\"dataFicha.numFuncionarios == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.numFuncionarios == null\\\">{{ dataFicha.numFuncionarios }}</span>\\n        </p>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Propuestas</div>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Limite de crédito solicitado:</strong>\\n          <span *ngIf=\\\"dataFicha.limiteCreditoSolicitado == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.limiteCreditoSolicitado != null\\\">{{ dataFicha.limiteCreditoSolicitado | currency:'BRL':'symbol':'1.2-2' }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Condiciones de pago:</strong>\\n          <span *ngIf=\\\"dataFicha.condicaoPagto == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.condicaoPagto != null\\\">{{ dataFicha.condicaoPagto }}</span>\\n        </p>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Datos del solicitante</div>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Vendedor(a):</strong>\\n          <span *ngIf=\\\"dataFicha.condicaoPagto == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.condicaoPagto != null\\\">{{ dataFicha.nomeVendedor }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Gestor(a):</strong>\\n          <span *ngIf=\\\"dataFicha.gestorVendas == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.gestorVendas != null\\\">{{ dataFicha.gestorVendas | uppercase }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Telefono:</strong>\\n          <span *ngIf=\\\"dataFicha.gestorVendas == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.gestorVendas != null\\\">{{ dataFicha.telefoneVendedor }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Oficina de ventas:</strong>\\n          <span *ngIf=\\\"dataFicha.nomeEscritorio == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.nomeEscritorio != null\\\">{{ dataFicha.nomeEscritorio }}</span>\\n        </p>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Principales proveedores</div>\\n        <div *ngIf=\\\"dataFicha.fornecedores.length == 0\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dataFicha.fornecedores.length > 0\\\">\\n          <div class=\\\"row mt-2\\\" *ngFor=\\\"let item of dataFicha.fornecedores\\\">\\n            <div class=\\\"col-6\\\">\\n              <p class=\\\"mt-2 mb-0\\\">\\n                <strong class=\\\"mr-2\\\">Nombre:</strong>\\n                <span *ngIf=\\\"item.nome == null\\\">Sin informacion</span>\\n                <span *ngIf=\\\"item.nome != null\\\">{{ item.nome | uppercase }}</span>\\n              </p>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <p class=\\\"mt-2 mb-0\\\">\\n                <strong class=\\\"mr-2\\\">Telefono:</strong>\\n                <span *ngIf=\\\"item.telefone == null\\\">Sin informacion</span>\\n                <span *ngIf=\\\"item.telefone != null\\\">{{ item.telefone }}</span>\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Principales clientes</div>\\n        <div *ngIf=\\\"dataFicha.clientes.length == 0\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dataFicha.clientes.length > 0\\\">\\n          <div *ngFor=\\\"let item of dataFicha.clientes\\\">\\n            <p class=\\\"mt-2 mb-0\\\">\\n              <strong class=\\\"mr-2\\\">Nome:</strong> {{ item.nome | uppercase }}\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Principaless bancos</div>\\n        <div *ngIf=\\\"dataFicha.bancos.length == 0\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dataFicha.bancos.length > 0\\\">\\n          <div class=\\\"row\\\" *ngFor=\\\"let item of dataFicha.bancos\\\">\\n            <div class=\\\"col-3\\\">\\n              <p class=\\\"mt-2 mb-0\\\">\\n                <strong class=\\\"mr-2\\\">Banco:</strong>\\n                <span *ngIf=\\\"item.nome == null\\\">Sin informacion</span>\\n                <span *ngIf=\\\"item.nome != null\\\">{{ item.nome | uppercase }}</span>\\n              </p>\\n            </div>\\n            <div class=\\\"col-3\\\">\\n              <p class=\\\"mt-2 mb-0\\\">\\n                <strong class=\\\"mr-2\\\">Agencia:</strong>\\n                <span *ngIf=\\\"item.agencia == null\\\">Sin informacion</span>\\n                <span *ngIf=\\\"item.agencia != null\\\">{{ item.agencia }}</span>\\n              </p>\\n            </div>\\n            <div class=\\\"col-3\\\">\\n              <p class=\\\"mt-2 mb-0\\\">\\n                <strong class=\\\"mr-2\\\">Cuenta corrinte:</strong>\\n                <span *ngIf=\\\"item.contaCorrente == null\\\">Sin informacion</span>\\n                <span *ngIf=\\\"item.contaCorrente != null\\\">{{ item.contaCorrente }}</span>\\n              </p>\\n            </div>\\n            <div class=\\\"col-3\\\">\\n              <p class=\\\"mt-2 mb-0\\\">\\n                <strong class=\\\"mr-2\\\">Telefono:</strong>\\n                <span *ngIf=\\\"item.telefone == null\\\">Sin informacion</span>\\n                <span *ngIf=\\\"item.telefone != null\\\">{{ item.telefone }}</span>\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Datos financieros</div>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Vendas concretadas:</strong>\\n          <span *ngIf=\\\"dataFicha.vendasConcentradas == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.vendasConcentradas != null\\\">{{ dataFicha.vendasConcentradas }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Previsión mensual de compras (Ton):</strong>\\n          <span *ngIf=\\\"dataFicha.previsaoCompraTon == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.previsaoCompraTon != null\\\">{{ dataFicha.previsaoCompraTon | number:'1.3-3' }}t</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Previsión mensual de compras (R$):</strong>\\n          <span *ngIf=\\\"dataFicha.previsaoCompraValor == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.previsaoCompraValor != null\\\">{{ dataFicha.previsaoCompraValor | currency:'BRL':'symbol':'1.2-2' }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Facturación media mensual (R$):</strong>\\n          <span *ngIf=\\\"dataFicha.faturamentoMedio == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.faturamentoMedio != null\\\">{{ dataFicha.faturamentoMedio | currency:'BRL':'symbol':'1.2-2' }}</span>\\n        </p>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-0\\\">\\n        <div class=\\\"mtc-title\\\">Opinión del vendedor</div>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <span *ngIf=\\\"dataFicha.parecerVendedor == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.parecerVendedor != null\\\">{{ dataFicha.parecerVendedor | uppercase }}</span>\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n// Interfaces\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-notas-promissorias',\n  templateUrl: './notas-promissorias.component.html',\n  styleUrls: ['./notas-promissorias.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent\n  implements OnInit {\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  notasPromissorias: any = [];\n  notasPromissoriasLoaded: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.parent.params.subscribe(params => {\n      this.getNotasPromissorias(params['id']);\n    });\n  }\n\n  getNotasPromissorias(id: any) {\n    this.historicoFinanceiroService\n      .getNotasPromissorias(id)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.notasPromissorias = response['result'];\n        }\n        this.notasPromissoriasLoaded = true;\n      });\n  }\n\n  classStatusBorder(status: string) {\n    let borderClass = '';\n\n    if (status == 'BAIXADA') {\n      borderClass = 'border-success';\n    } else if (status == 'QUITADA') {\n      borderClass = 'border-primary';\n    }\n\n    return borderClass;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2hpc3Rvcmljby1maW5hbmNlaXJvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Dias não úteis\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"dataInicial\\\">Fecha inicial</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataInicial\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataInicial\\\"\\n                [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired('dataInicial')\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial') == 'required'\\\" message=\\\"Data Inicial é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"dataFinal\\\">Fecha final</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataFinal\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataFinal\\\"\\n                [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired('dataFinal')\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal') == 'required'\\\" message=\\\"Data Final é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Cod. Material</th>\\n            <th scope=\\\"col\\\">Material</th>\\n            <th scope=\\\"col\\\">Línea / Clase</th>\\n            <th scope=\\\"col\\\">Ton. Vendidas</th>\\n            <th scope=\\\"col\\\">Nota Fiscal</th>\\n            <th scope=\\\"col\\\">Dt. Ultima Compra</th>\\n            <th scope=\\\"col\\\">Precio Unitário</th>\\n            <th scope=\\\"col\\\">Precio Total</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let ultimoPreco of dadosPagination; let i = index\\\">\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.codMaterial }}\\n            </td>\\n            <td class=\\\"hover\\\">\\n              {{ ultimoPreco.nomeMaterial | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.linha }} / {{ ultimoPreco.classe }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.qtdeToneladasVendidas | number:'1.3-3' }} ton \\n            </td>\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.nrNotaFiscal }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.dataUltimaCompra | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.precoUnitarioMaterial | currency:'BRL':'symbol':'1.2-2' }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.precoTotalMaterial | currency:'BRL':'symbol':'1.2-2' }}\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"dadosEmpty\\\">\\n      </empty-result>\\n    </div>\\n  </div>\\n</app-body>\";"]}