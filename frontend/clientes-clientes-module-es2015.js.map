{"version":3,"sources":["./src/app/modules/comercial/clientes/editar/editar.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.scss","./src/app/modules/comercial/clientes/detalhes/detalhes.component.scss","./src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.html","./src/app/modules/comercial/clientes/detalhes/detalhes.component.html","./src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.html","./src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.scss","./src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.scss","./src/app/shared/services/core/functions.service.ts","./src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.html","./src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.html","./src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.service.ts","./src/app/modules/comercial/clientes/clientes-routing.module.ts","./src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.ts","./src/app/modules/comercial/clientes/editar/editar.component.scss","./src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.html","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.scss","./src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito-resolver.guard.ts","./src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.module.ts","./src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.ts","./src/app/modules/comercial/clientes/clientes.module.ts","./src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.html","./src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.scss","./src/app/modules/comercial/clientes/clientes-resolver.guard.ts","./src/app/modules/comercial/clientes/editar/editar.service.ts","./src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.scss","./src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.html","./src/app/shared/services/core/date.service.ts","./src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.service.ts","./src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.service.ts","./src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.ts","./src/app/modules/comercial/comercial.service.ts","./src/app/shared/services/core/form-rules.service.ts","./src/app/modules/comercial/clientes/lista/lista.component.scss","./src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.scss","./src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.ts","./src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.ts","./src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.scss","./src/app/modules/comercial/clientes/detalhes/detalhes-resolver.guard.ts","./src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro-routing.module.ts","./src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.scss","./src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.html","./src/app/modules/comercial/clientes/editar/editar.component.html","./src/app/modules/comercial/clientes/cadastro/dados-faturamento/formulario/formulario-rules-resolver.guard.ts","./src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.html","./src/app/modules/comercial/clientes/lista/lista.component.html","./src/app/modules/comercial/clientes/lista/lista.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.scss","./src/app/modules/comercial/clientes/detalhes/detalhes.component.ts","./src/app/shared/services/ws/cnpj.service.ts","./src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.html","./src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.scss","./src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.html"],"names":[],"mappings":"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","file":"clientes-clientes-module-es2015.js","sourcesContent":["import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { number } from 'ng-brazil/number/validator';\r\n\r\nimport { ComercialClientesPreCadastroService } from '../pre-cadastro/pre-cadastro.service';\r\n\r\n@Component({\r\n    selector: 'editar-cliente',\r\n    templateUrl: './editar.component.html',\r\n    styleUrls: ['./editar.component.scss']\r\n})\r\nexport class EditarClienteComponent implements OnInit {\r\n    @Output() fecharModal = new EventEmitter();\r\n    @Input() datos_cliente: any;\r\n\r\n    @Input() vendedoresList: any[];\r\n    @Input() tipos_clientes: any[];\r\n\r\n    @Input() cnaes: any[];\r\n    @Input() ciudades: any[];\r\n\r\n    @Input() latitudPromedio: number = 0;\r\n    @Input() longitudPromedio: number = 0;\r\n\r\n    @Input() tipos_personas: any[];\r\n\r\n\r\n    latitud: number = 0;\r\n    longitud: number = 0;\r\n\r\n\r\n    loaderNavbar: boolean;\r\n\r\n\r\n    loaderFullScreen = true;\r\n    form: FormGroup;\r\n    checkoutForm;\r\n\r\n\r\n    private coloresDisponibles: string[] = [\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF0000',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FC9F3A',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFF00',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00FF00',\r\n        'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFFFF',\r\n    ];\r\n\r\n\r\n    nuevoContacto = {\r\n        contacto: '',\r\n        nombres_contacto: '',\r\n        apellido_contacto: '',\r\n        direccion_contacto: '',\r\n        celular_contacto: '',\r\n        telefono_contacto: ''\r\n    };\r\n\r\n    nuevaDireccion = {\r\n        ubicacion: '',\r\n        direccion: '',\r\n        latitud: 0,\r\n        longitud: 0,\r\n        id_ciudad: '',\r\n        color: '',\r\n    };\r\n\r\n\r\n    constructor(\r\n        private _BsModalRef: BsModalRef,\r\n        private pnotifyService: PNotifyService,\r\n        private formBuilder: FormBuilder,\r\n        private preCadastroService: ComercialClientesPreCadastroService,\r\n\r\n    ) {\r\n        this.form = this.formBuilder.group({\r\n            //observacion: ['', Validators.required],\r\n            codigo_cliente: [''],\r\n            carnet: [''],\r\n            nit: [''],\r\n            nombre: [''],\r\n            nombre_factura: [''],\r\n            id_tipo_persona: [],\r\n            email: [''],\r\n            telefono: [''],\r\n            celular: [''],\r\n            id_rubro: [],\r\n            id_tipo_cliente: [],\r\n            id_vendedor: [''],\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    dataForm: any;\r\n    data: [];\r\n    oferta: Array<any> = [];\r\n    detalle: any[];\r\n    observacion: string = '';\r\n    id_marcador: number = 0;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.categorizarUbicacion();\r\n        console.log(this.datos_cliente);\r\n        /*  */        /* //thi        console.log(this.cnaes);\r\n        s.data[0] = this.dataForm;\r\n                this.data = this.dataForm;\r\n                this.detalle = this.dataForm.detalle; */\r\n    }\r\n\r\n    getVendedorNome(id_vendedor: number): string {\r\n        if (isNaN(id_vendedor)) {\r\n            return 'NO INFORMADO';\r\n        }\r\n\r\n        const vendedor = this.vendedoresList.find(v => v.id === id_vendedor);\r\n        return vendedor ? vendedor.nome : 'NO INFORMADO';\r\n    }\r\n\r\n\r\n    agregarContacto() {\r\n/*         console.log(this.datos_cliente)\r\n */        if (this.datos_cliente.datos_contacto > 0) {\r\n            if (this.datos_cliente.datos_contacto.length < 5) {\r\n                this.datos_cliente.datos_contacto.push({ ...this.nuevoContacto } );\r\n                this.nuevoContacto = {\r\n                    contacto: '',\r\n                    nombres_contacto:  '',\r\n                    apellido_contacto: '',\r\n                    direccion_contacto: '',\r\n                    celular_contacto: '',\r\n                    telefono_contacto: ''\r\n                };\r\n            }\r\n        } else {\r\n            this.datos_cliente.datos_contacto.push({ ...this.nuevoContacto });\r\n            this.nuevoContacto = {\r\n                contacto: '',\r\n                nombres_contacto: '',\r\n                apellido_contacto: '',\r\n                direccion_contacto: '',\r\n                celular_contacto: '',\r\n                telefono_contacto: ''\r\n            };\r\n        }\r\n    }\r\n\r\n    categorizarUbicacion() {\r\n        if (this.datos_cliente.datos_direccion && this.datos_cliente.datos_direccion.length > 0) {\r\n            this.datos_cliente.datos_direccion.forEach((direccion) => {\r\n                direccion['color'] = this.generarColorAleatorio();\r\n            });\r\n        }\r\n    }\r\n\r\n    eliminarContacto(index: number) {\r\n        this.datos_cliente.datos_contacto.splice(index, 1);\r\n    }\r\n\r\n    agregarUbicacion() {\r\n        this.nuevaDireccion = {\r\n            ubicacion: '',\r\n            direccion: '',\r\n            latitud: this.latitudPromedio,\r\n            longitud: this.longitudPromedio,\r\n            id_ciudad: '',\r\n            color: this.generarColorAleatorio(),\r\n        }\r\n\r\n        if (this.datos_cliente.datos_direccion.length < 5) {\r\n            this.datos_cliente.datos_direccion.push({ ...this.nuevaDireccion });\r\n            this.nuevaDireccion = {\r\n                ubicacion: '',\r\n                direccion: '',\r\n                latitud: 0,\r\n                longitud: 0,\r\n                id_ciudad: '',\r\n                color: '',\r\n            };\r\n        }\r\n    }\r\n\r\n    generarColorAleatorio(): string {\r\n        if (this.coloresDisponibles.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const indiceAleatorio = Math.floor(Math.random() * this.coloresDisponibles.length);\r\n        const colorAleatorio = this.coloresDisponibles.splice(indiceAleatorio, 1)[0];\r\n        return colorAleatorio;\r\n    }\r\n\r\n    eliminarUbicacion(index: number) {\r\n        this.coloresDisponibles.push(this.datos_cliente.datos_direccion[index].color);\r\n        this.datos_cliente.datos_direccion.splice(index, 1);\r\n    }\r\n\r\n    actualizarMarcador(index: number, latitud, longitud): void {\r\n        this.id_marcador = index;\r\n        this.datos_cliente.datos_direccion[index].latitud = latitud;\r\n        this.datos_cliente.datos_direccion[index].longitud = longitud;\r\n    }\r\n    actualizarUbicacion(index: number) {\r\n/*         console.log(this.datos_cliente.datos_direccion[index])\r\n */        this.datos_cliente.datos_direccion[index].latitud = this.latitud;\r\n        this.datos_cliente.datos_direccion[index].longitud = this.longitud;\r\n    }\r\n\r\n    actualizarMapa(event: any) {\r\n        this.latitud = event.coords.lat;\r\n        this.longitud = event.coords.lng;\r\n        this.actualizarMarcador(this.id_marcador, this.latitud, this.longitud);\r\n        this.actualizarDireccion(this.id_marcador, event);\r\n\r\n    }\r\n\r\n    actualizarDireccion(index, event: any) {\r\n        this.obtenerDireccion(event.coords.lat, event.coords.lng)\r\n            .then((direccion_mapa: string) => {\r\n                this.datos_cliente.datos_direccion[index].direccion = direccion_mapa;\r\n            })\r\n            .catch((error: any) => {\r\n                /*  this.form.controls['direccion'].setValue(\r\n                    'Error al obtener la dirección'\r\n                 ); */\r\n            });\r\n    }\r\n\r\n    public obtenerDireccion(latitud: number, longitud: number): Promise<string> {\r\n        return fetch(\r\n            `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitud},${longitud}&key=AIzaSyDl5b7STz9xYNDhybTTer2POVncX9FYqCc`\r\n        )\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const resultado = data.results[0];\r\n                if (resultado) {\r\n                    return resultado.formatted_address;\r\n                } else {\r\n                    return 'Dirección no encontrada';\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                return 'Error al obtener la dirección';\r\n            });\r\n    }\r\n\r\n    onClose(): void {\r\n        this.fecharModal.emit(true);\r\n    }\r\n\r\n    actualizarCiudad(index: number, id_ciudad: number) {\r\n        this.datos_cliente.datos_direccion[index].id_ciudad = id_ciudad\r\n    }\r\n\r\n    actualizarCliente() {\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var idClienteInput = document.getElementById('id_cliente').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var codigoClienteInput = document.getElementById('codigo_cliente').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var ciInput = document.getElementById('carnet').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var nitInput = document.getElementById('nit').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var nombreInput = document.getElementById('nombre').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var nombreFacturaInput = document.getElementById('nombre_factura').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var idTipoPersonaInput = document.getElementById('id_tipo_persona').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var emailInput = document.getElementById('email').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var telefonoInput = document.getElementById('telefono').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var celularInput = document.getElementById('celular').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var tipoClienteInput = document.getElementById('id_tipo_cliente').value;\r\n        // @ts-ignore: Ignorar error TS2339\r\n        var idVendedorInput = document.getElementById('id_vendedor').value;\r\n\r\n        const ubicacion = this.datos_cliente.datos_direccion;\r\n        const contactos = this.datos_cliente.datos_contacto\r\n        const data = {\r\n            'codigo_cliente': codigoClienteInput,\r\n            'id_cliente': idClienteInput,\r\n            'nit': nitInput,\r\n            'ci': ciInput,\r\n            'nombres': nombreInput,\r\n            'tipo_pessoa': idTipoPersonaInput,\r\n            'id_vendedor': idVendedorInput,\r\n            'situacion': 1,\r\n            'telefono': telefonoInput,\r\n            'celular': celularInput,\r\n            'nombre_factura': nombreFacturaInput,\r\n            'email': emailInput,\r\n            'id_tipo_cliente': tipoClienteInput,\r\n            'ubicacion': ubicacion,\r\n            'contactos': contactos\r\n        };\r\n        this.enviarPeticion(data);\r\n        console.log(data);\r\n    }\r\n\r\n    enviarPeticion(data: any): void {\r\n        this.preCadastroService\r\n            .updateCliente(data)\r\n            .pipe(\r\n                finalize(() => {\r\n                })\r\n            )\r\n            .subscribe(\r\n                (response: JsonResponse) => {\r\n                    if (response.codigoRespuesta == 200) {\r\n                        setTimeout(() => {\r\n                            this.onClose();\r\n                        }, 200)\r\n                    } else {\r\n                        this.pnotifyService.error(response.mensagem);\r\n                    }\r\n                },\r\n                (error: any) => {\r\n                    this.pnotifyService.error(error.error.mensagem);\r\n                }\r\n            );\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2RlYml0b3MvZGViaXRvcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Pre-Registro\\\">\\r\\n  <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Guardar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"nit\\\">CI</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ci\\\" formControlName=\\\"ci\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('ci') + ' ' + onFieldRequired('ci')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ci') == 'required'\\\"\\r\\n              message=\\\"NIT inválido.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"nit\\\">NIT</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nit\\\" formControlName=\\\"nit\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('nit') + ' ' + onFieldRequired('nit')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nit') == 'required'\\\"\\r\\n              message=\\\"NIT inválido.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"tipopessoa\\\">Tipo de persona</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"tipopessoa\\\" formControlName=\\\"tipopessoa\\\" (change)=\\\"onInput()\\\">\\r\\n              <option value=\\\"S\\\">Sociedades</option>\\r\\n              <option value=\\\"P\\\">Privado</option>\\r\\n              <option value=\\\"G\\\">Gobierno</option>\\r\\n              <option value=\\\"E\\\">Empleado</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"vendedor\\\"> Vendedor</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"vendedores\\\" [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"vendedor\\\" bindLabel=\\\"nombre\\\" bindValue=\\\"ID\\\" formControlName=\\\"vendedor\\\"\\r\\n              (change)=\\\"changeVendedor($event.ID)\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nome\\\">Nombre completo</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('nome') + ' ' + onFieldRequired('nome')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome') == 'required'\\\"\\r\\n              message=\\\"Nombre es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome') == 'maxlength'\\\"\\r\\n              [message]=\\\"maxLengthMessages.nome\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeFantasia\\\">Nombre Factura</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nombre_factura\\\" formControlName=\\\"nombre_factura\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeFantasia') + ' ' + onFieldRequired('nomeFantasia')\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"razaoSocial\\\">Razon social</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"razaoSocial\\\" formControlName=\\\"razaoSocial\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('razaoSocial') + ' ' + onFieldRequired('razaoSocial')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial') == 'required'\\\"\\r\\n              message=\\\"Razon social es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial') == 'maxlength'\\\"\\r\\n              [message]=\\\"maxLengthMessages.razaoSocial\\\"></invalid-form-control>\\r\\n          </div>\\r\\n         <!--  <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeFantasia\\\">Nombre de Fantasia</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nomeFantasia\\\" formControlName=\\\"nomeFantasia\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeFantasia') + ' ' + onFieldRequired('nomeFantasia')\\\">\\r\\n          </div> -->\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"celular\\\">Celular</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"celular\\\" formControlName=\\\"celular\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('celular') + ' ' + onFieldRequired('celular')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('celular') == 'required'\\\"\\r\\n              message=\\\"celular es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"email\\\">E-mail</label>\\r\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" formControlName=\\\"email\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('email') + ' ' + onFieldRequired('email')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email') == 'required'\\\"\\r\\n              message=\\\"E-mail es obligatorio.\\\"></invalid-form-control>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email') == 'maxlength'\\\"\\r\\n              [message]=\\\"maxLengthMessages.email\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"telefone\\\">Telefono</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"telefone\\\" formControlName=\\\"telefone\\\" (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('telefone') + ' ' + onFieldRequired('telefone')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('telefone') == 'required'\\\"\\r\\n              message=\\\"Telefono es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-9\\\">\\r\\n            <label for=\\\"cnae\\\">Rubro (Actividad Economica)</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"cnaes\\\" [virtualScroll]=\\\"true\\\" labelForId=\\\"cnae\\\"\\r\\n              bindLabel=\\\"descripcion\\\" bindValue=\\\"id_cnae\\\" formControlName=\\\"cnae\\\" (change)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('cnae') + ' ' + onFieldRequired('cnae')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnae') == 'required'\\\"\\r\\n              message=\\\"CNAE es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"cnae\\\">Tipo de cliente</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"tipos_clientes\\\" [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"cnae\\\" bindLabel=\\\"nombre_tipo\\\" bindValue=\\\"id\\\" formControlName=\\\"tipo_cliente\\\"\\r\\n              [ngClass]=\\\"onFieldError('tipo_cliente') + ' ' + onFieldRequired('tipo_cliente')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnae') == 'required'\\\"\\r\\n              message=\\\"CNAE es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"cnae\\\">Mapa</label>\\r\\n            <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n              <agm-map (mapClick)=\\\"actualizarMapa($event)\\\" [latitude]=\\\"latitud\\\" [longitude]=\\\"longitud\\\" [zoom]=\\\"16\\\"\\r\\n                class=\\\"embed-responsive-item\\\">\\r\\n                <agm-marker *ngFor=\\\"let ubicacion of ubicaciones; let i = index\\\" [latitude]=\\\"ubicacion.latitud\\\"\\r\\n                  [longitude]=\\\"ubicacion.longitud\\\" (markerClick)=\\\"actualizarMarcador(i)\\\" [iconUrl]=\\\"ubicacion.color\\\"\\r\\n                  (markerDragEnd)=\\\"actualizarUbicacion(i, $event.coords.lat, $event.coords.lng)\\\">\\r\\n                </agm-marker>\\r\\n              </agm-map>\\r\\n              <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row mt-2\\\">\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <button data-toggle=\\\"collapse\\\" data-target=\\\"#CollapseUbicacion\\\" class=\\\"btn btn-primary\\\"\\r\\n              id=\\\"btnAgregarUbicacion\\\" (click)=\\\"repetirFormulario('Ubicacion')\\\"> <i class=\\\"fas fa-plus\\\"></i>\\r\\n              Agregar Ubicación</button>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <button data-toggle=\\\"collapse\\\" data-target=\\\"#CollapseContacto\\\" class=\\\"btn btn-success\\\"\\r\\n              id=\\\"btnAgregarContacto\\\" (click)=\\\"repetirFormulario('Contacto')\\\"> <i class=\\\"fas fa-plus\\\"></i>\\r\\n              Agregar Contacto</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div id=\\\"ContenedorFormularios\\\">\\r\\n          <div id=\\\"Ubicacion\\\" *ngFor=\\\"let ubicacionForm of ubicacionFormularios; let i = index\\\">\\r\\n            <div id=\\\"CollapseUbicacion\\\" [class.collapse]=\\\"!ubicacionCollapse\\\">\\r\\n              <div class=\\\"mt-3\\\"></div>\\r\\n              <div class=\\\"row \\\" style=\\\"border-radius: 13px; background-color: rgb(246, 243, 243);\\\">\\r\\n                <div class=\\\"form-group col-md-12 mt-2\\\" align=\\\"right\\\">\\r\\n                  <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"eliminarContacto(i, 2)\\\" style=\\\"text-decoration: none\\\">\\r\\n                    X\\r\\n                  </button>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-9 mt-1\\\">\\r\\n                  <label for=\\\"titulo_ubicacion\\\">Nombre de ubicacion</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo_ubicacion\\\" formControlName=\\\"titulo_ubicacion\\\"\\r\\n                    (input)=\\\"onInput()\\\" [value]=\\\"ubicacionForm.ubicacion\\\"\\r\\n                    (ngModelChange)=\\\"actualizarPosicion($event, i)\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-3\\\">\\r\\n                  <label for=\\\"ciudadUbi\\\">Ciudad</label>\\r\\n                  <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"ciudades\\\" [virtualScroll]=\\\"true\\\"\\r\\n                    (change)=\\\"cambiarCiudad($event.id, i)\\\" labelForId=\\\"ciudad\\\" bindLabel=\\\"nombre_ciudad\\\" bindValue=\\\"id\\\"\\r\\n                    formControlName=\\\"nombre_ciudad\\\"\\r\\n                    [ngClass]=\\\"onFieldError('nombre_ciudad') + ' ' + onFieldRequired('nombre_ciudad')\\\">\\r\\n                    <ng-option *ngFor=\\\"let ciudad of ciudades\\\"\\r\\n                      [value]=\\\"ubicacionForm.ciudad_id !== 0 ? ubicacionForm.ciudad_id : ciudad_vendedor\\\"\\r\\n                      [disabled]=\\\"ciudad.id !== ciudad_vendedor\\\">\\r\\n                      {{ ciudad.nombre_ciudad }}\\r\\n                    </ng-option>\\r\\n\\r\\n                  </ng-select>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"ubicacionForm.swActivarLatitud === true\\\">\\r\\n                  <label for=\\\"direccion\\\">Direccion</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"direccion\\\" formControlName=\\\"\\\" (input)=\\\"onInput()\\\"\\r\\n                    [(ngModel)]=\\\"ubicacionForm.direccion\\\" [value]=\\\"ubicacionForm.direccion\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"ubicacionForm.swActivarLatitud === false\\\">\\r\\n                  <label for=\\\"direccion\\\">Dirección </label> <br>\\r\\n                  <button class=\\\"btn btn-primary\\\" (click)=\\\"agregarDireccion(i)\\\"> <i class=\\\"fas fa-map-marker\\\"></i>\\r\\n                    Agregar </button>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-3\\\" *ngIf=\\\"ubicacionForm.swActivarLatitud === true\\\">\\r\\n                  <label for=\\\"ciudadUbi\\\">Latitud</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo_ubicacion\\\" formControlName=\\\"latitud\\\"\\r\\n                    (input)=\\\"onInput()\\\" [(ngModel)]=\\\"ubicacionForm.latitud\\\" [value]=\\\"ubicacionForm.latitud\\\"\\r\\n                    [readonly]=\\\"true\\\">\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-3\\\" *ngIf=\\\"ubicacionForm.swActivarLatitud === true\\\">\\r\\n                  <label for=\\\"ciudadUbi\\\">Longitud</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo_ubicacion\\\" formControlName=\\\"longitud\\\"\\r\\n                    (input)=\\\"onInput()\\\" [(ngModel)]=\\\"ubicacionForm.longitud\\\" [value]=\\\"ubicacionForm.longitud\\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div id=\\\"Contacto\\\" *ngFor=\\\"let contactoForm of contactoFormularios; let i = index\\\">\\r\\n            <div id=\\\"CollapseContacto\\\" [class.collapse]=\\\"!contactoCollapse\\\">\\r\\n              <div class=\\\"col mt-3\\\">\\r\\n                <!--  -->\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" style=\\\"border-radius: 13px; background-color: rgb(246, 243, 243);\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-12 mt-2\\\" align=\\\"right\\\">\\r\\n                      <button class=\\\"btn  btn-danger btn-sm\\\" (click)=\\\"eliminarContacto(i, 1)\\\">\\r\\n                        X\\r\\n                      </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"titulo_contacto\\\">TÍTULO DE CONTACTO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo_contacto\\\" formControlName=\\\"titulo_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\"\\r\\n                        [ngClass]=\\\"onFieldError('titulo_contacto') + ' ' + onFieldRequired('titulo_contacto')\\\"\\r\\n                        [value]=\\\"contactoForm.titulo_contacto\\\" (ngModelChange)=\\\"actualizarContacto($event, 1, i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"nombres_contacto\\\">NOMBRE</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nombres_contacto\\\" formControlName=\\\"nombres_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\" [value]=\\\"contactoForm.nombres_contacto\\\"\\r\\n                        (ngModelChange)=\\\"actualizarContacto($event, 2,  i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"apellido_contacto\\\">APELLIDO PATERNO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"apellido_contacto\\\" formControlName=\\\"apellido_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\" [value]=\\\"contactoForm.apellido_contacto\\\"\\r\\n                        (ngModelChange)=\\\"actualizarContacto($event, 3 , i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"apellido2_contacto\\\">APELLIDO MATERNO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"apellido2_contacto\\\"\\r\\n                        formControlName=\\\"apellido2_contacto\\\" (input)=\\\"onInput()\\\"\\r\\n                        [value]=\\\"contactoForm.apellido2_contacto\\\" (ngModelChange)=\\\"actualizarContacto($event, 4, i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"telefono_contacto\\\">TELÉFONO CONTACTO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"telefono_contacto\\\" formControlName=\\\"telefono_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\" [value]=\\\"contactoForm.telefono_contacto\\\"\\r\\n                        (ngModelChange)=\\\"actualizarContacto($event,5 , i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3 mt-2\\\">\\r\\n                      <label for=\\\"celular_contacto\\\">CELULAR DE CONTACTO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"celular_contacto\\\" formControlName=\\\"celular_contacto\\\"\\r\\n                        (input)=\\\"onInput()\\\" [value]=\\\"contactoForm.celular_contacto\\\"\\r\\n                        (ngModelChange)=\\\"actualizarContacto($event, 6 , i)\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-6 mt-2\\\">\\r\\n                      <label for=\\\"direccion_contacto\\\">DIRECCIÓN DE CONTACTO</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"direccion_contacto\\\"\\r\\n                        formControlName=\\\"direccion_contacto\\\" (input)=\\\"onInput()\\\"\\r\\n                        [value]=\\\"contactoForm.direccion_contacto\\\" (ngModelChange)=\\\"actualizarContacto($event, 7,  i)\\\">\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- <label>CONTACTOS</label> -->\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Detalles\\\"></app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col text-center\\\">\\r\\n      <h5 class=\\\"pt-2 mb-4\\\">{{ cliente.razaoSocial }}</h5>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mb-4\\\">\\r\\n    <div class=\\\"col d-flex justify-content-center w-100\\\">\\r\\n      <h5 tooltip=\\\"Código do cliente\\\">\\r\\n        <span class=\\\"badge badge-dark\\\">CÓD.: {{ cliente.codCliente }}</span>\\r\\n      </h5>\\r\\n      <h5 *ngIf=\\\"cliente.nomeVendedor\\\" class=\\\"ml-3\\\" tooltip=\\\"Vendedor\\\">\\r\\n        <span class=\\\"badge badge-light\\\">{{ cliente.nomeVendedor | uppercase }}</span>\\r\\n      </h5>\\r\\n      <h5 class=\\\"ml-3\\\" tooltip=\\\"Status\\\">\\r\\n        <span class=\\\"badge\\\" [ngClass]=\\\"classStatusBadge(cliente.status)\\\">{{ cliente.status | uppercase }}</span>\\r\\n      </h5>\\r\\n      <h5 *ngIf=\\\"cliente.codClienteDBA\\\" class=\\\"ml-3\\\" tooltip=\\\"Código DBA do cliente\\\">\\r\\n        <span class=\\\"badge badge-warning\\\">CÓD. DBA: {{ cliente.codClienteDBA }}</span>\\r\\n      </h5>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-9\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-folder-open\\\"\\r\\n            text=\\\"Datos de registro\\\"\\r\\n            [routerLink]=\\\"['../../cadastro', cliente.codCliente, 'dados-faturamento']\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n         <!--div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-chart-pie\\\"\\r\\n            text=\\\"Dashboard\\\"\\r\\n            [routerLink]=\\\"['../../dashboard', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div--> \\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-chart-bar\\\"\\r\\n            text=\\\"Histórico Financeiro\\\"\\r\\n            [routerLink]=\\\"['../../historico-financeiro', cliente.codCliente, 'resumo']\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-handshake\\\"\\r\\n            text=\\\"Ficha PAC\\\"\\r\\n            [routerLink]=\\\"['../../proposta-analise-credito', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div>\\r\\n      </div> -->\\r\\n      <!-- <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-shopping-cart\\\"\\r\\n            text=\\\"Vender\\\"\\r\\n            [routerLink]=\\\"['../../../ciclo-vendas/139/cotacoes-pedidos/lista/']\\\"\\r\\n            [queryParams]=\\\"{codCliente: cliente.codCliente}\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"far fa-calendar-alt\\\"\\r\\n            text=\\\"Agendar\\\"\\r\\n            [routerLink]=\\\"['../../../agenda/novo', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-tasks\\\"\\r\\n            text=\\\"Propuestas / Pedidos\\\"\\r\\n            [routerLink]=\\\"['../../../tid-software/11']\\\"\\r\\n            [queryParams]=\\\"{ codCliente: cliente.codCliente, sistema: 'vendas', modulo: 3 }\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-list\\\"\\r\\n            text=\\\"Últimos precios\\\"\\r\\n            [routerLink]=\\\"['../../../clientes/ultimos-precos', cliente.codCliente]\\\">\\r\\n          </card-button>\\r\\n        </div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialClientesDetalheService } from './../detalhes/detalhes.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro',\r\n  templateUrl: './historico-financeiro.component.html',\r\n  styleUrls: ['./historico-financeiro.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroComponent implements OnInit {\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  cliente: any = {};\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private detalhesService: ComercialClientesDetalheService,\r\n    private pnotifyService: PNotifyService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.activatedRoute.snapshot.data['response']['responseCode'] === 200) {\r\n      this.registrarAcesso();\r\n      this.getDetalhes();\r\n    } else if (\r\n      this.activatedRoute.snapshot.data['response']['responseCode'] === 403\r\n    ) {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\r\n      this.router.navigate(['/comercial/home']);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getDetalhes() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.detalhesService\r\n        .getDetalhes(params['id'])\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderFullScreen = false;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: any) => {\r\n            if (response['responseCode'] === 200) {\r\n              this.cliente = response['result'];\r\n              this.setBreadCrumb(params['id']);\r\n              this.onRouterChange();\r\n            } else {\r\n              this.handleLoadDependenciesError();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.handleLoadDependenciesError();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  handleLoadDependenciesError() {\r\n    this.pnotifyService.error();\r\n    this.location.back();\r\n  }\r\n\r\n  setBreadCrumb(id: number) {\r\n    let router = this.router.url.split('/');\r\n    let currRoute = router[router.length - 1];\r\n\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home'\r\n      },\r\n      {\r\n        descricao: 'Busqueda de clientes',\r\n        routerLink: '/comercial/clientes/lista'\r\n      },\r\n      {\r\n        descricao: 'Detalhes',\r\n        routerLink: `/comercial/clientes/detalhes/${id}`\r\n      },\r\n      {\r\n        descricao: 'Histórico financeiro',\r\n        routerLink: `/comercial/clientes/historico-financeiro/${id}/resumo`\r\n      },\r\n      {\r\n        descricao: this.breadCrumbConfig(currRoute)\r\n      }\r\n    ];\r\n  }\r\n\r\n  breadCrumbConfig(route: string) {\r\n    let descricao = '';\r\n\r\n    if (route == 'resumo') {\r\n      descricao = 'Resumo';\r\n    } else if (route == 'detalhes') {\r\n      descricao = 'Detalhes';\r\n    } else if (route == 'acumulos-mensais') {\r\n      descricao = 'Acúmulos mensais';\r\n    } else if (route == 'notas-promissorias') {\r\n      descricao = 'Notas promissórias';\r\n    } else if (route == 'debitos') {\r\n      descricao = 'Débitos em aberto';\r\n    } else if (route == 'corte-dobra') {\r\n      descricao = 'Corte Dobra';\r\n    } else {\r\n      descricao = 'Materiais da duplicata';\r\n    }\r\n\r\n    this.titleService.setTitle(descricao);\r\n\r\n    return descricao;\r\n  }\r\n\r\n  onRouterChange() {\r\n    this.router.events.subscribe(event => {\r\n      this.activatedRoute.params.subscribe(params => {\r\n        this.setBreadCrumb(params['id']);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-materiais-duplicata',\r\n  templateUrl: './materiais-duplicata.component.html',\r\n  styleUrls: ['./materiais-duplicata.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent\r\n  implements OnInit {\r\n  principal: any = {};\r\n  historicoCobrancas: any = {};\r\n  ocorrenciasDuplicatas: any = {};\r\n  ocorrenciasComerciais: any = {};\r\n  duplicataLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.historicoFinanceiroService\r\n        .getMateriaisDuplicata(params)\r\n        .subscribe((response: any) => {\r\n          if (response['responseCode'] === 200) {\r\n            this.principal = response['result']['principal'];\r\n            this.historicoCobrancas = response['result']['historicoCobrancas'];\r\n            this.ocorrenciasDuplicatas =\r\n              response['result']['ocorrenciasDuplicatas'];\r\n            this.ocorrenciasComerciais =\r\n              response['result']['ocorrenciasComerciais'];\r\n          }\r\n          this.duplicataLoaded = true;\r\n        });\r\n    });\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!notasPromissoriasLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de pagarés...</strong>\\r\\n    </div>\\r\\n    <custom-table [config]=\\\"tableConfig\\\">\\r\\n      <ng-template #thead let-thead *ngIf=\\\"notasPromissorias.length > 0 && notasPromissoriasLoaded\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Registro</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Bancário</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Baixa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor da baixa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencimento</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor da duplicata</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let nota of notasPromissorias\\\">\\r\\n          <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(nota.situacao)\\\">{{ nota.numRegistro }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.numBancario }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.dataBaixa }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.valorBaixa | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.dataVencimento }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ nota.valorDuplicata | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"notasPromissorias.length > 0 && notasPromissoriasLoaded\\\">\\r\\n      <div class=\\\"col-6 d-flex justify-content-center w-100\\\">\\r\\n        <div class=\\\"d-flex justify-content-around\\\">\\r\\n          <div class=\\\"legend green\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">BAIXADA</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend blue\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">QUITADA</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result\\r\\n      message=\\\"Nenhuma informação encontrada\\\"\\r\\n      *ngIf=\\\"notasPromissorias.length == 0 && notasPromissoriasLoaded\\\">\\r\\n    </empty-result>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL25vdGFzLXByb21pc3Nvcmlhcy9ub3Rhcy1wcm9taXNzb3JpYXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL3Jlc3Vtby9yZXN1bW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FunctionsService {\r\n  completaZeroEsquerda(valor: any, tamanho: number): string {\r\n    if (valor === null) return null;\r\n\r\n    valor = valor.toString();\r\n    valor = valor.trim();\r\n\r\n    if (valor.length < tamanho) {\r\n      for (let i = valor.length; i < tamanho; i++) {\r\n        valor = `0${valor}`;\r\n      }\r\n    }\r\n\r\n    return valor;\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!pedidosLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de duplicados...</strong>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"pedidos.length > 0 && pedidosLoaded\\\">\\r\\n      <div class=\\\"row justify-content-between\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <div class=\\\"d-flex\\\">\\r\\n            <div class=\\\"legend green\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">ABIERTO</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend blue\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">QUITADA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend yellow\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">VENCIDA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend red\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">PROTESTA</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"filtro\\\" class=\\\"col-2 text-right pb-0 pt-1 pr-2\\\">Filtrar</label>\\r\\n            <div class=\\\"col-10 pl-0\\\">\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control form-control-sm\\\"\\r\\n                id=\\\"filtro\\\"\\r\\n                placeholder=\\\"Número da duplicata\\\"\\r\\n                #filtro\\r\\n                (input)=\\\"onFilter(filtro.value)\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Facturamiento</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. pedido</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicar</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencimiento</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Banco</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Baja</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Pré-datada</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Atraso</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Entrega</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let pedido of pedidosPagination\\\">\\r\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(pedido.situacao)\\\">{{ pedido.empresa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataFaturamento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numPedido }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numDuplicata }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataVencimento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.banco }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataBaixa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.tipoBaixa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataPreDatada }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.atraso }} dias</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.entrega }} dias</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <a\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Materiais da duplicata\\\"\\r\\n                container=\\\"body\\\"\\r\\n                [routerLink]=\\\"['../materiais-duplicata']\\\"\\r\\n                [queryParams]=\\\"{\\r\\n                  codEmpresa: pedido.idEmpresa,\\r\\n                  numPedido: pedido.numPedido,\\r\\n                  sequencia: pedido.sequencia\\r\\n                }\\\">\\r\\n                <i class=\\\"fas fa-search\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"pedidosLoaded\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"pedidosFiltered.length > itemsPerPage\\\">\\r\\n            <pagination\\r\\n              [maxSize]=\\\"maxSize\\\"\\r\\n              [totalItems]=\\\"pedidosFiltered.length\\\"\\r\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n              [boundaryLinks]=\\\"true\\\"\\r\\n              previousText=\\\"&lsaquo;\\\"\\r\\n              nextText=\\\"&rsaquo;\\\"\\r\\n              firstText=\\\"&laquo;\\\"\\r\\n              lastText=\\\"&raquo;\\\">\\r\\n            </pagination>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"pedidos.length == 0 && pedidosLoaded\\\"></empty-result>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"row mb-4\\\">\\r\\n  <div class=\\\"col mb-4\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-orange rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-hand-holding-usd\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.atrasoPagamento\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoAtrasoPagamento = $event\\\">\\r\\n          {{ handleCounter(countoAtrasoPagamento) }} dias\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">MÉDIA ATRASO PAGTO</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-gray rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-truck-moving\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.tempoEntrega\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoTempoEntrega = $event\\\">\\r\\n          {{ handleCounter(countoTempoEntrega) }} dias\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">MÉDIA TEMPO ENTREGA</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-red rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-dollar-sign\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.totalAtraso == 0\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.totalAtraso\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoTotalAtraso = $event\\\">\\r\\n          {{ countoTotalAtraso | currency:'BRL':'symbol':'1.2-2' }}\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">TOTAL EM ATRASO</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.totalAtraso == 0\\\">\\r\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">TOTAL EM ATRASO</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-green rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-file-invoice-dollar\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.pagtoAntecipado == 0\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.pagtoAntecipado\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoPagtoAntecipado = $event\\\">\\r\\n          {{ countoPagtoAntecipado | currency:'BRL':'symbol':'1.2-2' }}\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">ANTECIPADO DISPONÍVEL</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.pagtoAntecipado == 0\\\">\\r\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">ANTECIPADO DISPONÍVEL</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n      <div class=\\\"bg-blue rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-building\\\"></i></div>\\r\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.creditoSeguradora == 0\\\">\\r\\n        <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"sintetico.creditoSeguradora\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"3\\\"\\r\\n          (countoChange)=\\\"countoCreditoSeguradora = $event\\\">\\r\\n          {{ countoCreditoSeguradora | currency:'BRL':'symbol':'1.2-2' }}\\r\\n        </h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">CRÉDITO SEGURADORA</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.creditoSeguradora == 0\\\">\\r\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\r\\n        <div class=\\\"text-muted small font-weight-bold\\\">CRÉDITO SEGURADORA</div>\\r\\n      </div>\\r\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!pedidosLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carregando duplicatas...</strong>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"pedidos.length > 0 && pedidosLoaded\\\">\\r\\n      <div class=\\\"row justify-content-between\\\">\\r\\n        <div class=\\\"col-6 d-flex\\\">\\r\\n          <div class=\\\"d-flex my-auto\\\">\\r\\n            <div class=\\\"legend green\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">EM ABERTO</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend blue\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">QUITADA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend yellow\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">VENCIDA</div>\\r\\n            </div>\\r\\n            <div class=\\\"legend red\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">PROTESTO</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-5\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"filtro\\\" class=\\\"col-3 text-right pb-0 pt-1 pr-2\\\">Filtrar</label>\\r\\n            <div class=\\\"col-9 pl-0\\\">\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control form-control-sm\\\"\\r\\n                id=\\\"filtro\\\"\\r\\n                placeholder=\\\"Número da duplicata\\\"\\r\\n                #filtro\\r\\n                (input)=\\\"onFilter(filtro.value)\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Faturamento</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. pedido</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicata</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencto</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Baixa</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let pedido of pedidosPagination\\\">\\r\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(pedido.situacao)\\\">{{ pedido.empresa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataFaturamento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numPedido }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.numDuplicata }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataVencimento }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.dataBaixa }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ pedido.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n              <a\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Materiais da duplicata\\\"\\r\\n                container=\\\"body\\\"\\r\\n                [routerLink]=\\\"['../materiais-duplicata']\\\"\\r\\n                [queryParams]=\\\"{\\r\\n                  codEmpresa: pedido.idEmpresa,\\r\\n                  numPedido: pedido.numPedido,\\r\\n                  sequencia: pedido.sequencia\\r\\n                }\\\">\\r\\n                <i class=\\\"fas fa-search\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"row mt-3\\\" *ngIf=\\\"pedidosLoaded\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"pedidosFiltered.length > itemsPerPage\\\">\\r\\n            <pagination\\r\\n              [maxSize]=\\\"maxSize\\\"\\r\\n              [totalItems]=\\\"pedidosFiltered.length\\\"\\r\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n              [boundaryLinks]=\\\"true\\\"\\r\\n              previousText=\\\"&lsaquo;\\\"\\r\\n              nextText=\\\"&rsaquo;\\\"\\r\\n              firstText=\\\"&laquo;\\\"\\r\\n              lastText=\\\"&raquo;\\\">\\r\\n            </pagination>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada nos últimos 12 meses. Para períodos anteriores veja em Detalhes.\\\" *ngIf=\\\"pedidos.length == 0 && pedidosLoaded\\\"></empty-result>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"d-flex justify-content-between w-100 mb-2\\\">\\r\\n      <div>\\r\\n        <h6>\\r\\n          <span class=\\\"mr-2\\\">Grupo econômico</span>\\r\\n          <a\\r\\n            href=\\\"javascript:void(0)\\\"\\r\\n            *ngIf=\\\"grupoEconomicoLoaded && grupoEconomico.length > 1\\\"\\r\\n            (click)=\\\"onGrupoEconomico(modalGrupoEconomico)\\\">(ver detalhes)\\r\\n          </a>\\r\\n        </h6>\\r\\n        <small class=\\\"form-text text-muted\\\">VISÃO DO GRUPO ECONÔMICO NO HISTÓRICO FINANCEIRO</small>\\r\\n      </div>\\r\\n      <div class=\\\"custom-control custom-switch my-auto\\\" *ngIf=\\\"grupoEconomicoLoaded && grupoEconomico.length > 1\\\">\\r\\n        <input\\r\\n        type=\\\"checkbox\\\"\\r\\n        class=\\\"custom-control-input\\\"\\r\\n        id=\\\"grupoEconomico\\\"\\r\\n        [checked]=\\\"visaoGrupoEconomico\\\"\\r\\n        (change)=\\\"onChangeGrupoEconomico()\\\"\\r\\n        [disabled]=\\\"!sinteticoPendenciasLoaded\\\">\\r\\n        <label class=\\\"custom-control-label\\\" for=\\\"grupoEconomico\\\"></label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item bg-green\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong class=\\\"text-white\\\">Saldo para faturar</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-white\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.saldo\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoSaldo = $event\\\"\\r\\n            [hidden]=\\\"pendencias.saldo == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoSaldo | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-white\\\" *ngIf=\\\"pendencias.saldo == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-white\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <h6 class=\\\"my-2\\\">\\r\\n      <a\\r\\n        href=\\\"javascript:void(0)\\\"\\r\\n        (click)=\\\"showPendenciasDetalhes = !showPendenciasDetalhes\\\">\\r\\n        <span *ngIf=\\\"!showPendenciasDetalhes\\\"><i class=\\\"fas fa-chevron-up\\\"></i> ver detalhes</span>\\r\\n        <span *ngIf=\\\"showPendenciasDetalhes\\\"><i class=\\\"fas fa-chevron-down\\\"></i> esconder detalhes</span>\\r\\n      </a>\\r\\n    </h6>\\r\\n    <ul class=\\\"list-group\\\" *ngIf=\\\"showPendenciasDetalhes\\\">\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Títulos em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.titulos\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoTitulos = $event\\\"\\r\\n            [hidden]=\\\"pendencias.titulos == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoTitulos | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.titulos == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Notas de débitos em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.notasDebito\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoNotasDebito = $event\\\"\\r\\n            [hidden]=\\\"pendencias.notasDebito == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoNotasDebito | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.notasDebito == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Notas promissórias em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.notasPromissorias\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoNotasPromissorias = $event\\\"\\r\\n            [hidden]=\\\"pendencias.notasPromissorias == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoNotasPromissorias | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.notasPromissorias == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Cheques devolvidos</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.chequesDevolvidos\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoChequesDevolvidos = $event\\\"\\r\\n            [hidden]=\\\"pendencias.chequesDevolvidos == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoChequesDevolvidos | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.chequesDevolvidos == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Corte dobra liberado p/ produção</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.corteDobra\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoCorteDobra = $event\\\"\\r\\n            [hidden]=\\\"pendencias.corteDobra == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoCorteDobra | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.corteDobra == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Reserva de bobinas em aberto</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.reservaBobinas\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoReservaBobinas = $event\\\"\\r\\n            [hidden]=\\\"pendencias.reservaBobinas == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoReservaBobinas | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.reservaBobinas == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\r\\n          <div class=\\\"my-auto\\\">\\r\\n            <strong>Limite de crédito</strong>\\r\\n          </div>\\r\\n          <strong\\r\\n            class=\\\"text-secondary\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"pendencias.limiteCredito\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"3\\\"\\r\\n            (countoChange)=\\\"countoLimiteCredito = $event\\\"\\r\\n            [hidden]=\\\"pendencias.limiteCredito == 0 || !sinteticoPendenciasLoaded\\\">\\r\\n            {{ countoLimiteCredito | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </strong>\\r\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.limiteCredito == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #modalGrupoEconomico>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\">Grupo econômico</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCloseModalGrupoEconomico()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <custom-table>\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód. cliente</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Razão social</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of grupoEconomico\\\">\\r\\n          <td class=\\\"text-center\\\">{{ item.tipo }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.codCliente }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.razaoSocial }}</td>\\r\\n          <td class=\\\"text-center\\\">\\r\\n            <a\\r\\n              class=\\\"btn-icon-sm\\\"\\r\\n              tooltip=\\\"Visualizar histórico financeiro\\\"\\r\\n              container=\\\"body\\\"\\r\\n              [routerLink]=\\\"['../../../historico-financeiro', item.codCliente, 'resumo']\\\"\\r\\n              (click)=\\\"onCloseModalGrupoEconomico()\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n            </a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\n\r\n// Services\r\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\r\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from '../cadastro/dados-faturamento/formulario/formulario.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take,  retry} from 'rxjs/operators';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesPreCadastroService {\r\n  private readonly BASE_URL: string = `http://23.254.204.187/api`   ;\r\n\r\n  constructor(\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private dadosFaturamentoService: ComercialClientesCadastroDadosFaturamentoFormularioService,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  loadDependencies() {\r\n    let vendedores = this.vendedoresService.getVendedores() ;\r\n    let cnaes = this.dadosFaturamentoService.getCnaes();\r\n    let ciudades = this.dadosFaturamentoService.getCiudades(); // Agregar esta línea\r\n    return forkJoin([vendedores, cnaes, ciudades]); // Agregar ciudades aquí\r\n  }\r\n\r\n  getCiudades() {\r\n    let ciudades = this.dadosFaturamentoService.getCiudades();\r\n    return forkJoin(ciudades);\r\n  }\r\n\r\n\r\n  getCenaes(){\r\n    let cnaes = this.dadosFaturamentoService.getCnaes();\r\n    return forkJoin(cnaes);\r\n  }\r\n\r\n  /* updateCliente(params){\r\n    return this.http.post(\r\n      `${this.BASE_URL}/sap/cliente_update`,\r\n      params,\r\n      { observe: 'response' }\r\n    );\r\n  } */\r\n\r\n  updateCliente(params: any){\r\n    return this.http\r\n      .post(`http://23.254.204.187/api/sap/cliente_update`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  postAkna(param){\r\n    return this.http.post(\r\n      `${this.BASE_URL}/sap/actualizar_item`,\r\n      param,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n}\r\nfunction tap(arg0: (data: any) => void): import(\"rxjs\").OperatorFunction<Object, unknown> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialClientesCadastroDadosFaturamentoRulesResolverGuard } from './cadastro/dados-faturamento/formulario/formulario-rules-resolver.guard';\r\nimport { ComercialClientesDetalhesResolverGuard } from './detalhes/detalhes-resolver.guard';\r\nimport { ComercialClientesResolverGuard } from './clientes-resolver.guard';\r\nimport { ComercialClientesPropostaAnaliseCreditoResolverGuard } from './proposta-analise-credito/proposta-analise-credito-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialClientesListaComponent } from './lista/lista.component';\r\nimport { ComercialClientesPreCadastroComponent } from './pre-cadastro/pre-cadastro.component';\r\nimport { ComercialClientesDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesDashboardComponent } from './dashboard/dashboard.component';\r\nimport { ComercialClientesPropostaAnaliseCreditoComponent } from './proposta-analise-credito/proposta-analise-credito.component';\r\nimport { ComercialClientesUltimosPrecosComponent } from './ultimos-precos/ultimos-precos.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialClientesListaComponent },\r\n  {\r\n    path: 'pre-cadastro',\r\n    component: ComercialClientesPreCadastroComponent,\r\n    resolve: {\r\n      rules: ComercialClientesCadastroDadosFaturamentoRulesResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'detalhes/:id',\r\n    component: ComercialClientesDetalhesComponent,\r\n    resolve: {\r\n      response: ComercialClientesDetalhesResolverGuard,\r\n    },\r\n  },\r\n  {\r\n    path: 'cadastro',\r\n    loadChildren: () =>\r\n      import('./cadastro/cadastro.module').then(\r\n        (m) => m.ComercialClientesCadastroModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'dashboard/:id',\r\n    component: ComercialClientesDashboardComponent,\r\n    resolve: {\r\n      response: ComercialClientesResolverGuard,\r\n    },\r\n  },\r\n  {\r\n    path: 'historico-financeiro',\r\n    loadChildren: () =>\r\n      import('./historico-financeiro/historico-financeiro.module').then(\r\n        (m) => m.ComercialClientesHistoricoFinanceiroModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'ultimos-precos/:id',\r\n    component: ComercialClientesUltimosPrecosComponent,\r\n  },\r\n  {\r\n    path: 'proposta-analise-credito/:id',\r\n    component: ComercialClientesPropostaAnaliseCreditoComponent,\r\n    resolve: {\r\n      data: ComercialClientesPropostaAnaliseCreditoResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/comercial/home',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialClientesRoutingModule {}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { ComercialClientesUltimosPrecosService } from '../ultimos-precos/ultimos-precos.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialService } from '../../comercial.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'ultimos-precos',\r\n  templateUrl: './ultimos-precos.component.html',\r\n  styleUrls: ['./ultimos-precos.component.scss'],\r\n})\r\nexport class ComercialClientesUltimosPrecosComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n\r\n  codCliente: number;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<any> = [];\r\n  dadosPagination: Array<any> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  ultimoPrecoSelecionado: any;\r\n  alteracoes: Array<any> = [];\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private ultimosPrecos: ComercialClientesUltimosPrecosService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private dateService: DateService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.codCliente = params.id;\r\n    });\r\n\r\n    this.registrarAcesso();\r\n    this.setFormFilter();\r\n    this.setBreadCrumb(this.codCliente);\r\n    this.titleService.setTitle('Ultimos Preços');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setFormFilter() {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      dataInicial: [formValue.dataInicial, [Validators.required]],\r\n      dataFinal: [formValue.dataFinal, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb(id: number) {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home',\r\n      },\r\n      {\r\n        descricao: 'Busqueda de clientes',\r\n        routerLink: '/comercial/clientes/lista',\r\n      },\r\n      {\r\n        descricao: 'Detalhes',\r\n        routerLink: `/comercial/clientes/detalhes/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Ultimos Preços',\r\n      },\r\n    ];\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      dataInicial: this.dateService.getFirstDayMonth(),\r\n      dataFinal: this.dateService.getLastDayMonth(),\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\r\n                  formValue[formKey] = this.dateService.convertStringToDate(\r\n                    params[paramKey],\r\n                    'pt-br'\r\n                  );\r\n                } else {\r\n                  if (!isNaN(Number(params[paramKey]))) {\r\n                    formValue[formKey] = Number(params[paramKey]);\r\n                  } else {\r\n                    formValue[formKey] = params[paramKey];\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.dataInicial) {\r\n      params.dataInicial = this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.dataInicial)\r\n      );\r\n    }\r\n\r\n    if (this.form.value.dataFinal) {\r\n      params.dataFinal = this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.dataFinal)\r\n      );\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    params.codCliente = this.codCliente;\r\n\r\n    this.ultimosPrecos\r\n      .getListaUltimosPrecos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2VkaXRhci9lZGl0YXIuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!debitosLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de débitos pendientes...</strong>\\r\\n    </div>\\r\\n    <custom-table *ngIf=\\\"debitos.length > 0 && debitosLoaded\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data Pedido</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Pedido</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Duplicata</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Duplicata</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Juros</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Cartório</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Tarifa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data Tarifa</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Tarifa</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let debito of debitos\\\">\\r\\n          <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(debito.situacao)\\\">{{ debito.dataPedido }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.numPedido }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.numDuplicata }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.valorDuplicata | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.juros }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.valorCartorio | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.tarifa }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.dataTarifa }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ debito.valorTarifa | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <empty-result\\r\\n      message=\\\"Nenhuma informação encontrada\\\"\\r\\n      *ngIf=\\\"debitos.length == 0 && debitosLoaded\\\">\\r\\n    </empty-result>\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"debitos.length > 0 && debitosLoaded\\\">\\r\\n      <div class=\\\"col-6 d-flex justify-content-center w-100\\\">\\r\\n        <div class=\\\"d-flex justify-content-around\\\">\\r\\n          <div class=\\\"legend green\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">DÉBITO CON NOTA</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend blue\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">DÉBITO CON NOTA</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3Byb3Bvc3RhLWFuYWxpc2UtY3JlZGl0by9wcm9wb3N0YS1hbmFsaXNlLWNyZWRpdG8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesPropostaAnaliseCreditoResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(private clienteService: ComercialClientesService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['id']) {\r\n      return this.clienteService.getPropostaAnaliseCredito(route.params['id']);\r\n    }\r\n\r\n    return of({\r\n      result: {\r\n        razaoSocial: null,\r\n        codCliente: null,\r\n        codSAP: null,\r\n        limiteCredito: null,\r\n        setorAtividade: null,\r\n        nomeVendedor: null,\r\n        telefoneVendedor: null,\r\n        nomeEscritorio: null\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// ngx-filter-pipe\r\nimport { FilterPipeModule } from 'ngx-filter-pipe';\r\n\r\n// Counto\r\nimport { CountoModule } from 'angular2-counto';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialHistoricoFinanceiroRoutingModule } from './historico-financeiro-routing.module';\r\n\r\n// Components\r\nimport { ComercialClientesHistoricoFinanceiroComponent } from './historico-financeiro.component';\r\nimport { ComercialClientesHistoricoFinanceiroResumoComponent } from './resumo/resumo.component';\r\nimport { ComercialClientesHistoricoFinanceiroDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent } from './materiais-duplicata/materiais-duplicata.component';\r\nimport { ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent } from './acumulos-mensais/acumulos-mensais.component';\r\nimport { ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent } from './notas-promissorias/notas-promissorias.component';\r\nimport { ComercialClientesHistoricoFinanceiroDebitosComponent } from './debitos/debitos.component';\r\nimport { ComercialClientesHistoricoFinanceiroCorteDobraComponent } from './corte-dobra/corte-dobra.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialClientesHistoricoFinanceiroComponent,\r\n    ComercialClientesHistoricoFinanceiroResumoComponent,\r\n    ComercialClientesHistoricoFinanceiroDetalhesComponent,\r\n    ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent,\r\n    ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent,\r\n    ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent,\r\n    ComercialClientesHistoricoFinanceiroDebitosComponent,\r\n    ComercialClientesHistoricoFinanceiroCorteDobraComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TooltipModule,\r\n    PaginationModule,\r\n    TabsModule,\r\n    FilterPipeModule,\r\n    CountoModule,\r\n    SharedModule,\r\n    TemplatesModule.forRoot(),\r\n    ComercialHistoricoFinanceiroRoutingModule\r\n  ]\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// ngx-filter-pipe\r\nimport { FilterPipe } from 'ngx-filter-pipe';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-detalhes',\r\n  templateUrl: './detalhes.component.html',\r\n  styleUrls: ['./detalhes.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroDetalhesComponent\r\n  implements OnInit {\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  codCliente: number;\r\n\r\n  pedidos: any = [];\r\n  pedidosPagination: any = [];\r\n  pedidosFiltered: any = [];\r\n  pedidosLoaded: boolean = false;\r\n\r\n  maxSize: number = 10;\r\n  itemsPerPage: number = 10;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService,\r\n    private filterPipe: FilterPipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(queryParams => {\r\n      this.activatedRoute.parent.params.subscribe(params => {\r\n        let grupoEconomico = false;\r\n\r\n        if (\r\n          queryParams['grupoEconomico'] &&\r\n          queryParams['grupoEconomico'] == 'true'\r\n        ) {\r\n          grupoEconomico = true;\r\n        }\r\n\r\n        this.codCliente = params['id'];\r\n        this.getPedidos(this.codCliente, grupoEconomico);\r\n      });\r\n    });\r\n  }\r\n\r\n  getPedidos(id: number, grupoEconomico: boolean) {\r\n    this.historicoFinanceiroService\r\n      .getDetalhesPedidos(id, grupoEconomico)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.pedidos = response['result'];\r\n          this.pedidosFiltered = response['result'];\r\n          this.pedidosPagination = this.pedidosFiltered.slice(\r\n            0,\r\n            this.itemsPerPage\r\n          );\r\n        }\r\n        this.pedidosLoaded = true;\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'EM ABERTO') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'QUITADA') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'VENCIDA') {\r\n      borderClass = 'border-warning';\r\n    } else if (status == 'PROTESTO') {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.pedidosPagination = this.pedidos.slice(startItem, endItem);\r\n  }\r\n\r\n  onFilter(value: string) {\r\n    if (value) {\r\n      this.pedidosFiltered = this.filterPipe.transform(this.pedidos, {\r\n        numDuplicata: value\r\n      });\r\n    } else {\r\n      this.pedidosFiltered = this.pedidos;\r\n    }\r\n\r\n    this.pedidosPagination = this.pedidosFiltered.slice(0, this.itemsPerPage);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ModalModule, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// Counto\r\nimport { CountoModule } from 'angular2-counto';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialClientesRoutingModule } from './clientes-routing.module';\r\n\r\n// Components\r\nimport { ComercialClientesListaComponent } from './lista/lista.component';\r\nimport { ComercialClientesPreCadastroComponent } from './pre-cadastro/pre-cadastro.component';\r\nimport { ComercialClientesDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesDashboardModule } from './dashboard/dashboard.module';\r\nimport { ComercialClientesHistoricoFinanceiroModule } from './historico-financeiro/historico-financeiro.module';\r\nimport { ComercialClientesPropostaAnaliseCreditoComponent } from './proposta-analise-credito/proposta-analise-credito.component';\r\nimport { ComercialClientesUltimosPrecosComponent } from './ultimos-precos/ultimos-precos.component';\r\nimport { EditarClienteComponent } from './editar/editar.component';\r\n\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialClientesListaComponent,\r\n    ComercialClientesPreCadastroComponent,\r\n    ComercialClientesDetalhesComponent,\r\n    ComercialClientesPropostaAnaliseCreditoComponent,\r\n    ComercialClientesUltimosPrecosComponent,\r\n    EditarClienteComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TooltipModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    CountoModule,\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    CurrencyMaskModule,\r\n    SharedModule,\r\n    TemplatesModule.forRoot(),\r\n    ComercialClientesRoutingModule,\r\n    ComercialClientesDashboardModule,\r\n    ComercialClientesHistoricoFinanceiroModule, \r\n  \r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyDl5b7STz9xYNDhybTTer2POVncX9FYqCc' // Reemplaza con tu propia clave de API de Google Maps\r\n    }),\r\n    \r\n  ],\r\n  exports: [EditarClienteComponent],\r\n  entryComponents: [EditarClienteComponent],\r\n  providers: [\r\n    BsModalRef\r\n  ]\r\n})\r\nexport class ComercialClientesModule {}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Histórico financeiro\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['resumo']\\\">\\r\\n    Resumen\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['detalhes']\\\">\\r\\n    Detalles\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['acumulos-mensais']\\\">\\r\\n    Acumulaciones mensuales\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['notas-promissorias']\\\">\\r\\n    Pagarés  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['debitos']\\\">\\r\\n    Débitos\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    routerLinkActive=\\\"active\\\"\\r\\n    [routerLink]=\\\"['corte-dobra']\\\">\\r\\n    Corte Doblado\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [show]=\\\"!loaderFullScreen\\\" [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h5 class=\\\"d-inline-block mb-0 mr-3\\\" tooltip=\\\"Código do cliente\\\">\\r\\n        <span class=\\\"badge badge-dark\\\">CÓD.: {{ cliente.codCliente }}</span>\\r\\n      </h5>\\r\\n      <h6 class=\\\"d-inline-block mb-0\\\">{{ cliente.razaoSocial }}</h6>\\r\\n    </div>\\r\\n  </div>\\r\\n  <router-outlet></router-outlet>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesResolverGuard implements Resolve<any> {\r\n  constructor(private clientesService: ComercialClientesService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['id']) {\r\n      return this.clientesService.getPermissaoAcesso(route.params['id']);\r\n    }\r\n\r\n    return of({\r\n      responseCode: 403\r\n    });\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n//components\r\nimport { EditarClienteComponent } from './editar.component';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EditarClienteService {\r\n    loaderNavbar: EventEmitter<boolean> = new EventEmitter();\r\n    \r\n    private modalRef: BsModalRef;\r\n\r\n    constructor(\r\n        private modalAutorizacionService: BsModalService,\r\n        private pnotifyService: PNotifyService,\r\n\r\n    ) {\r\n        this.pnotifyService.getPNotify();\r\n    }\r\n\r\n    showModal(): void {\r\n        this.loaderNavbar.emit(true);\r\n        const modalConfig = {\r\n            animated: false,\r\n            class: 'modal-lg',\r\n            ignoreBackdropClick: true,\r\n            keyboard: false,\r\n        };\r\n\r\n        this.modalAutorizacionService.show(EditarClienteComponent, {\r\n            initialState: {  },\r\n        });\r\n\r\n    }\r\n\r\n    hide() {\r\n        if (this.modalRef) {\r\n            this.modalRef.hide();\r\n        }\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL21hdGVyaWFpcy1kdXBsaWNhdGEvbWF0ZXJpYWlzLWR1cGxpY2F0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-corte-dobra',\r\n  templateUrl: './corte-dobra.component.html',\r\n  styleUrls: ['./corte-dobra.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroCorteDobraComponent\r\n  implements OnInit {\r\n  corteDobra: any = [];\r\n  corteDobraLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getCorteDobra(params['id']);\r\n    });\r\n  }\r\n\r\n  getCorteDobra(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getCorteDobra(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.corteDobra = response['result'];\r\n        }\r\n        this.corteDobraLoaded = true;\r\n      });\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!corteDobraLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carregando Corte Dobra...</strong>\\r\\n    </div>\\r\\n    <custom-table *ngIf=\\\"corteDobra.length > 0\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Identificacion</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Obra</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Discriminación</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of corteDobra\\\">\\r\\n          <td class=\\\"text-center\\\">{{ item.identificacao }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.data }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.obra }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.discriminacao }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n          <td class=\\\"text-center\\\">{{ item.empresa }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <empty-result\\r\\n      message=\\\"Nenhuma informação encontrada\\\"\\r\\n      *ngIf=\\\"corteDobra.length == 0 && corteDobraLoaded\\\">\\r\\n    </empty-result>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialClientesUltimosPrecosService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/clientes/ultimos-precos`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaUltimosPrecos(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/clientes/historico-financeiro`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getPermissaoAcesso(id: any) {\r\n    return this.http.get(`${this.API}/permissao-acesso/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getResumoSintetico(id: any, grupoEconomico: any) {\r\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\r\n\r\n    return this.http\r\n      .get(`${this.API}/resumo/sintetico/${id}`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getGrupoEconomico(id: any) {\r\n    return this.http.get(`${this.API}/grupo-economico/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getResumoPedidos(id: any, grupoEconomico: any) {\r\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\r\n\r\n    return this.http\r\n      .get(`${this.API}/resumo/pedidos/${id}`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhesPedidos(id: any, grupoEconomico: any) {\r\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\r\n\r\n    return this.http\r\n      .get(`${this.API}/detalhes/pedidos/${id}`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getMateriaisDuplicata(params: any) {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais-duplicata`, {\r\n        params: httpParams\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAcumulosMensais(id: any) {\r\n    return this.http.get(`${this.API}/acumulos-mensais/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getNotasPromissorias(id: any) {\r\n    return this.http.get(`${this.API}/notas-promissorias/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getDebitos(id: any) {\r\n    return this.http.get(`${this.API}/debitos/${id}`).pipe(take(1));\r\n  }\r\n\r\n  getCorteDobra(id: any) {\r\n    return this.http.get(`${this.API}/corte-dobra/${id}`).pipe(take(1));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-debitos',\r\n  templateUrl: './debitos.component.html',\r\n  styleUrls: ['./debitos.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroDebitosComponent\r\n  implements OnInit {\r\n  debitos: any = [];\r\n  debitosLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getDebitos(params['id']);\r\n    });\r\n  }\r\n\r\n  getDebitos(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getDebitos(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.debitos = response['result'];\r\n        }\r\n        this.debitosLoaded = true;\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'COM NOTA') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'SEM NOTA') {\r\n      borderClass = 'border-primary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-acumulos-mensais',\r\n  templateUrl: './acumulos-mensais.component.html',\r\n  styleUrls: ['./acumulos-mensais.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent\r\n  implements OnInit {\r\n  acumulosMensais: any = {};\r\n  acumulosMensaisLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getAcumulosMensais(params['id']);\r\n    });\r\n  }\r\n\r\n  getAcumulosMensais(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getAcumulosMensais(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.acumulosMensais = response['result'];\r\n        }\r\n        this.acumulosMensaisLoaded = true;\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`,  {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getUpSellService(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_suplementarios`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos() {\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormRulesService {\r\n  private readonly API = `http://23.254.204.187/api/common/services`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n    getRules(formRef: number): Observable<any> {\r\n    return this.http.get(`${this.API}/form-rules/${formRef}`).pipe(take(1));\r\n  }\r\n}\r\n","export default \".modal {\\n  display: none;\\n  position: fixed;\\n  z-index: 1;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto;\\n  background-color: rgba(0, 0, 0, 0.4);\\n}\\n\\n.modal-content {\\n  background-color: #fefefe;\\n  margin: 15% auto;\\n  padding: 20px;\\n  border: 1px solid #888;\\n  width: 80%;\\n}\\n\\n.contacto {\\n  text-transform: uppercase;\\n  font-weight: bold;\\n}\\n\\n.close {\\n  color: #aaa;\\n  float: right;\\n  font-size: 28px;\\n  font-weight: bold;\\n}\\n\\n.close:hover,\\n.close:focus {\\n  color: black;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n\\n.info-box {\\n  border: 1px solid #333;\\n  background-color: #f5f5f5;\\n  padding: 7px;\\n  margin-top: 10px;\\n}\\n\\np {\\n  margin-bottom: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2xpZW50ZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsZUFBQTtFQUNBLFVBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLG9DQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsVUFBQTtBQUNGOztBQUNBO0VBQ0UseUJBQUE7RUFDQSxpQkFBQTtBQUVGOztBQUNBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFFRjs7QUFDQTs7RUFFRSxZQUFBO0VBQ0EscUJBQUE7RUFDQSxlQUFBO0FBRUY7O0FBQUE7RUFDRSxzQkFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0FBR0Y7O0FBREE7RUFDRSxnQkFBQTtBQUlGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2xpZW50ZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kYWwge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHotaW5kZXg6IDE7XHJcbiAgbGVmdDogMDtcclxuICB0b3A6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcclxufVxyXG5cclxuLm1vZGFsLWNvbnRlbnQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZWZlZmU7XHJcbiAgbWFyZ2luOiAxNSUgYXV0bztcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7XHJcbiAgd2lkdGg6IDgwJTtcclxufVxyXG4uY29udGFjdG8ge1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5jbG9zZSB7XHJcbiAgY29sb3I6ICNhYWE7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIGZvbnQtc2l6ZTogMjhweDtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLmNsb3NlOmhvdmVyLFxyXG4uY2xvc2U6Zm9jdXMge1xyXG4gIGNvbG9yOiBibGFjaztcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi5pbmZvLWJveCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzMzMzsgXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTsgXHJcbiAgcGFkZGluZzogN3B4OyBcclxuICBtYXJnaW4tdG9wOiAxMHB4OyBcclxufVxyXG5we1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3ByZS1jYWRhc3Ryby9wcmUtY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n// ng-brazil\r\nimport { MASKS, NgBrazilValidators } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n// Services\r\nimport { ComercialClientesPreCadastroService } from './pre-cadastro.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\nimport { CnpjService } from 'src/app/shared/services/ws/cnpj.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { FunctionsService } from 'src/app/shared/services/core/functions.service';\r\nimport { array } from '@amcharts/amcharts4/core';\r\nimport { number } from 'ng-brazil/number/validator';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-pre-cadastro',\r\n  templateUrl: './pre-cadastro.component.html',\r\n  styleUrls: ['./pre-cadastro.component.scss'],\r\n})\r\nexport class ComercialClientesPreCadastroComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  @ViewChild('modalDetalhesCliente', {}) modalDetalhesCliente: TemplateRef<any>;\r\n\r\n  modalRef: BsModalRef;\r\n  modalConfig = {\r\n    ignoreBackdropClick: true,\r\n  };\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home',\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n      routerLink: '/comercial/clientes',\r\n    },\r\n    {\r\n      descricao: 'Pre-Registro',\r\n    },\r\n  ];\r\n\r\n  public MASKS = MASKS;\r\n\r\n  vendedores: any = [];\r\n  cnaes: any = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  tipoPessoa: any = {};\r\n  submittingForm = false;\r\n  latitud: number = 0;\r\n  longitud: number = 0;\r\n  swActivarLatitud: boolean = false;\r\n  maxLengthRules: any = {};\r\n  maxLengthMessages: any = {};\r\n  id_marcador: number = 0;\r\n\r\n  dadosCliente: any = {};\r\n  ciudades: any = [];\r\n\r\n  tipos_clientes: any = [];\r\n  index_array_ubicacion: number = 0;\r\n  titulo_ubicacion_array: string = '';\r\n  id_ciudad: number = 0;\r\n\r\n\r\n  index_array_contactos: number = 0;\r\n  titulo_contacto_array: string = '';\r\n  nombre_contacto_array: string = '';\r\n  apellido_p_contacto_array: string = '';\r\n  apellido_m_contacto_array: string = '';\r\n  telefono_contacto_array: string = '';\r\n  celular_contacto_array: string = '';;\r\n  direccion_contacto_array: string = '';;\r\n\r\n\r\n  ubicacionCollapse: boolean = false; // Inicialmente oculto\r\n  contactoCollapse: boolean = false; // Inicialmente oculto\r\n\r\n  ubicacionFormularios: any[] = [];\r\n  contactoFormularios: any[] = [];\r\n  formObj: FormGroup;\r\n  formObjArray: any[] = [];\r\n  ubicaciones: any[] = [];\r\n  ciudad_vendedor: number = 0;\r\n  private coloresDisponibles: string[] = [\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF0000',\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FC9F3A',\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFF00',\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00FF00',\r\n    'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFFFF',\r\n  ];\r\n\r\n\r\n  constructor(\r\n    private preCadastroService: ComercialClientesPreCadastroService,\r\n    private formBuilder: FormBuilder,\r\n    private location: Location,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private clientesService: ComercialClientesService,\r\n    private pnotifyService: PNotifyService,\r\n    private cnpjService: CnpjService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private functionsService: FunctionsService,\r\n    private modalService: BsModalService\r\n\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.titleService.setTitle('Pre-Registro');\r\n    this.getFormFields();\r\n    this.obtenerTiposClientes();\r\n    this.activatedRoute.queryParams.subscribe((queryParams: any) => {\r\n      let documento = null;\r\n\r\n\r\n      this.registrarAcesso();\r\n      this.setMaxLengthRules();\r\n      this.setFormBuilder(documento);\r\n      this.formObj = this.formBuilder.group({\r\n        ubicacion: this.formBuilder.array([]), // Debes configurar esto según tu estructura\r\n        contactos: this.formBuilder.array([]), // Debes configurar esto según tu estructura\r\n        // Otros campos del formulario principal aquí\r\n\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  changeVendedor(a) {\r\n    this.clientesService.getVendedorCiudad(a)\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 200) {\r\n           // console.log(response.result.latitud);\r\n            this.latitud = response.result.latitud;\r\n            this.longitud = response.result.longitud;\r\n            this.ciudad_vendedor = response.result.id_ciudad\r\n           // console.log(this.ciudad_vendedor);\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n        },\r\n        (error) => {\r\n/*           console.error('Error al cargar dependencias:', error);\r\n */          this.handleFormFieldsError();\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n  obtenerTiposClientes() {\r\n    this.clientesService.getTipoClientes()\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 200) {\r\n            this.tipos_clientes = response.result;\r\n\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n        },\r\n        (error) => {\r\n/*           console.error('Error al cargar dependencias:', error);\r\n */          this.handleFormFieldsError();\r\n        }\r\n      )\r\n  }\r\n\r\n  /* actualizarMarcador(event: any) {\r\n    this.latitud = event.coords.lat;\r\n    this.longitud = event.coords.lng;\r\n  } */\r\n  actualizarMarcador(index: number, latitud, longitud): void {\r\n    /* console.log(this.latitud); */\r\n\r\n\r\n    this.id_marcador = index;\r\n    //this.ubicacionFormularios[index].color = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00FF00';\r\n    // Actualizar solo la ubicación del marcador en la posición 'index'\r\n    this.ubicaciones[index].latitud = latitud;\r\n    this.ubicacionFormularios[index].latitud = latitud;\r\n    this.ubicaciones[index].longitud = longitud\r\n    this.ubicacionFormularios[index].longitud = longitud;\r\n\r\n\r\n    //this.cambiarColorMarcador(index);\r\n  }\r\n\r\n  cambiarColorMarcador(i: number) {\r\n    this.ubicaciones[i].color = 'blue';\r\n  }\r\n\r\n\r\n  actualizarMapa(event: any) {\r\n    //console.log(event);\r\n    this.latitud = event.coords.lat;\r\n    this.longitud = event.coords.lng;\r\n    this.actualizarMarcador(this.id_marcador, this.latitud, this.longitud);\r\n    this.actualizarDireccion(this.id_marcador, event);\r\n  }\r\n\r\n  actualizarDireccion(index, event: any) {\r\n    this.obtenerDireccion(event.coords.lat, event.coords.lng)\r\n      .then((direccion_mapa: string) => {\r\n        this.ubicacionFormularios[index].direccion = direccion_mapa;\r\n      })\r\n      .catch((error: any) => {\r\n        /*  this.form.controls['direccion'].setValue(\r\n            'Error al obtener la dirección'\r\n         ); */\r\n      });\r\n  }\r\n\r\n  public obtenerDireccion(latitud: number, longitud: number): Promise<string> {\r\n    return fetch(\r\n      `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitud},${longitud}&key=AIzaSyDl5b7STz9xYNDhybTTer2POVncX9FYqCc`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const resultado = data.results[0];\r\n        if (resultado) {\r\n          return resultado.formatted_address;\r\n        } else {\r\n          return 'Dirección no encontrada';\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return 'Error al obtener la dirección';\r\n      });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getFormFields() {\r\n    this.preCadastroService\r\n      .loadDependencies()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          //console.log('Datos obtenidos en loadDependencies():', response[0].data);\r\n\r\n          if (response[0].responseCode === 200) {\r\n            this.vendedores = response[0].data;\r\n\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n\r\n          if (response[1].responseCode === 200) {\r\n            this.cnaes = response[1].result.map(cnae => ({\r\n              id_cnae: cnae.id,\r\n              descripcion: cnae.descricao,\r\n              codigo: cnae.codigo\r\n            })); ///console.log(\"cnaes: \", this.cnaes);\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          }\r\n          if (response[2].responseCode === 200) {\r\n            this.ciudades = response[2].result;\r\n            //console.log(this.ciudades);\r\n          } else {\r\n            this.handleFormFieldsError();\r\n          } //console.log(\"cnaes: \", this.ciudades);\r\n        },\r\n        (error) => {\r\n          //console.error('Error al cargar dependencias:', error);\r\n          this.handleFormFieldsError();\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n  handleFormFieldsError() {\r\n    this.pnotifyService.error();\r\n    this.location.back();\r\n  }\r\n\r\n  setMaxLengthRules() {\r\n    this.maxLengthRules = this.activatedRoute.snapshot.data.rules.data;\r\n    this.maxLengthMessages = {\r\n      nome: `El nombre debe contener ${this.maxLengthRules.nome} caracteres.`,\r\n      apellido1: `Apellido debe contener ${this.maxLengthRules.apellido1} caracteres.`,\r\n      apellido2: `Apellido debe contener ${this.maxLengthRules.apellido1} caracteres.`,\r\n      razaoSocial: `El nombre de la empresa debe contener ${this.maxLengthRules.razaoSocial} caracteres.`,\r\n      nomeFantasia: `El nombre comercial debe contener hasta ${this.maxLengthRules.nomeFantasia} caracteres.`,\r\n      email: `El correo electrónico debe llegar a ${this.maxLengthRules.email} caracteres.`,\r\n    };\r\n  }\r\n  agregarUbicacionALaFormObj(datosUbicacion: any) {\r\n    const ubicacionFormArray = this.formObj.get('ubicacion') as FormArray;\r\n    ubicacionFormArray.push(this.formBuilder.group(datosUbicacion));\r\n  }\r\n\r\n  // Crea una función para agregar datos de contacto al formulario principal\r\n  agregarContactoALaFormObj(datosContacto: any) {\r\n    const contactoFormArray = this.formObj.get('contactos') as FormArray;\r\n    contactoFormArray.push(this.formBuilder.group(datosContacto));\r\n  }\r\n\r\n  repetirFormulario(tipoFormulario: string) {\r\n    this.swActivarLatitud = false;\r\n\r\n\r\n    if (tipoFormulario === 'Ubicacion' && this.ubicacionFormularios.length < 5) {\r\n\r\n\r\n      const nuevoFormulario = this.crearFormularioUbicacionConDatosIngresados();\r\n\r\n      this.agregarUbicacionALaFormObj(nuevoFormulario);\r\n      this.ubicacionFormularios.push(nuevoFormulario);\r\n      if (this.ubicacionFormularios.length > 0) {\r\n        this.ubicacionFormularios[this.index_array_ubicacion].ubicacion = this.titulo_ubicacion_array;\r\n        this.ubicacionFormularios[this.index_array_ubicacion].id_ciudad = this.id_ciudad;\r\n\r\n\r\n      }\r\n      //console.log(this.index_array);\r\n\r\n      // También debes agregar este formulario al formulario principal.\r\n      this.formObjArray[0].ubicacion.push(nuevoFormulario);\r\n    } else if (tipoFormulario === 'Contacto' && this.contactoFormularios.length < 5) {\r\n      const nuevoFormulario = this.crearFormularioContactoConDatosIngresados();\r\n\r\n\r\n      this.agregarContactoALaFormObj(nuevoFormulario);\r\n      this.contactoFormularios.push(nuevoFormulario);\r\n\r\n      if (this.contactoFormularios.length > 0) {\r\n        //console.log(this.titulo_contacto_array);\r\n\r\n        this.contactoFormularios[this.index_array_contactos].titulo_contacto = this.titulo_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].nombres_contacto = this.nombre_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].apellido_contacto = this.apellido_p_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].apellido2_contacto = this.apellido_m_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].telefono_contacto = this.telefono_contacto_array;\r\n        this.contactoFormularios[this.index_array_contactos].direccion_contacto = this.direccion_contacto_array;\r\n      }\r\n\r\n      //console.log(this.contactoFormularios);\r\n      (this.formObj.get('contactos') as FormArray).push(nuevoFormulario);\r\n    } else {\r\n      /* console.log('Se alcanzó el máximo de formularios permitidos para este tipo.'); */\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  eliminarContacto(index, tipo) {\r\n    if (tipo == 1) {\r\n      this.contactoFormularios.splice(index, 1);\r\n    } else if (tipo == 2) {\r\n      this.ubicacionFormularios.splice(index, 1);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  crearFormularioUbicacionConDatosIngresados(): any {\r\n\r\n    return {\r\n      ubicacion: '',\r\n      direccion: '',\r\n      id_ciudad: this.ciudad_vendedor,\r\n      latitud: '',\r\n      longitud: '',\r\n      swActivarLatitud: this.swActivarLatitud\r\n    };\r\n\r\n  }\r\n\r\n  crearFormularioContactoConDatosIngresados(): any {\r\n    return {\r\n      titulo_contacto: '',\r\n      nombres_contacto: '',\r\n      apellido_contacto: '',\r\n      apellido2_contacto: '',\r\n      telefono_contacto: '',\r\n      celular_contacto: '',\r\n      direccion_contacto: '',\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  setFormBuilder(documento: string) {\r\n\r\n    this.form = this.formBuilder.group({\r\n      //cnpj_cpf: [null,Validators.required],\r\n      nit: [null, Validators.required],\r\n      ci: [null, Validators.required],\r\n\r\n      nome: [\r\n        null,\r\n        [Validators.required, Validators.maxLength(this.maxLengthRules.nome)],\r\n      ],\r\n\r\n      contacto: [null],\r\n      razaoSocial: [null],\r\n      nomeFantasia: [null],\r\n      nombre_factura: [null],\r\n      vendedor: [null, Validators.required],\r\n      cnae: [null],\r\n      email: [null,\r\n        [\r\n          Validators.email,\r\n          Validators.maxLength(this.maxLengthRules.email),\r\n        ],\r\n      ],\r\n      telefone: [null],\r\n      celular: [null],\r\n      direccion: [null],\r\n      tipopessoa: [null],\r\n      nombres_contacto: [null],\r\n      apellido_contacto: [null],\r\n      apellido2_contacto: [null],\r\n      telefono_contacto: [null],\r\n      celular_contacto: [null],\r\n      ciudad: [null],\r\n      direccion_contacto: [null],\r\n      ciudadUbi: [null],\r\n      titulo_contacto: [null],\r\n      titulo_ubicacion: [],\r\n      ubicacion: this.formBuilder.array([]),\r\n      contactos: this.formBuilder.array([]),\r\n      nombre_ciudad: [],\r\n      tipo_cliente: []\r\n\r\n\r\n\r\n    });\r\n\r\n    this.form.get('tipopessoa').valueChanges.subscribe((value) => {\r\n      if (value === 'P' || value === 'G' || value === 'E') {\r\n        this.form.get('nit').setValidators([Validators.required]);\r\n        this.form.get('razaoSocial').setValidators([Validators.required]);\r\n      } else {\r\n        this.form.get('nit').clearValidators();\r\n        this.form.get('razaoSocial').clearValidators();\r\n      }\r\n      this.form.get('nit').updateValueAndValidity();\r\n      this.form.get('razaoSocial').updateValueAndValidity();\r\n    });\r\n\r\n  }\r\n  onSubmit() {\r\n    /* this.postAkna(20081);\r\n    return; */\r\n\r\n    const tipoPessoaOptions = {\r\n      S: 'Sociedades',\r\n      P: 'Privado',\r\n      G: 'Gobierno',\r\n      E: 'Empleado'\r\n    };\r\n    const tipopessoa = this.form.value.tipopessoa;\r\n    const tipopersona = tipoPessoaOptions[tipopessoa];\r\n    const data = {\r\n      ubicacion: [],\r\n      contactos: [],\r\n    };\r\n    /*  console.log(this.ubicacionFormularios); */\r\n    /* this.ubicacionFormularios.forEach((formulario) => {\r\n\r\n      data.ubicacion.push(formulario.value);\r\n    }); */\r\n    //console.log(this.ubicacionFormularios)\r\n    data.ubicacion = this.ubicacionFormularios\r\n\r\n    // Agregar datos de contactos desde contactoFormularios\r\n   /*  console.log(this.contactoFormularios); */\r\n    data.contactos = this.contactoFormularios\r\n\r\n\r\n\r\n    if (this.form.valid) {\r\n      this.loaderNavbar = true;\r\n      this.submittingForm = true;\r\n      let formObj = {};\r\n\r\n      formObj = {\r\n        tipo_pessoa: tipopessoa,\r\n        tipo_persona: tipopersona,\r\n        id_vendedor: this.form.value.vendedor,\r\n        nombres: this.form.value.nome,\r\n        razonSocial: this.form.value.razaoSocial,\r\n        nombre_factura: this.form.value.nombre_factura,\r\n        nit: this.form.value.nit,\r\n        cnpj_cpf: this.form.value.ci,\r\n        id_rubro: this.form.value.cnae,\r\n        email: this.form.value.email,\r\n        telefono: this.form.value.telefone,\r\n        celular: this.form.value.celular,\r\n        ubicacion: data.ubicacion, // Asigna los datos de ubicación directamente aquí\r\n        contactos: data.contactos,\r\n        id_tipo_cliente: this.form.value.tipo_cliente\r\n\r\n      }; /* console.log('Datos antes de enviarlos:', formObj);*/\r\n      this.clientesService\r\n\r\n        .sapPostClient(formObj)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderNavbar = false;\r\n            this.submittingForm = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n\r\n            if (response.response === 200) {\r\n              this.pnotifyService.success('Cliente registrado.');\r\n              this.formChanged = false;\r\n              this.router.navigate(['../cadastro', response.result], {\r\n                relativeTo: this.activatedRoute,\r\n              });\r\n            } else if (response.response === 204) {\r\n              this.pnotifyService.notice('No se registro.');\r\n            } else {\r\n              this.pnotifyService.notice(` ${response.detalle}`);\r\n            }\r\n          },\r\n          (error: any) => {\r\n            this.pnotifyService.notice('Ocurrio un error.');\r\n          }\r\n        );\r\n\r\n    }\r\n    this.form.reset()\r\n  }\r\n\r\n  setType(type: string) {\r\n    // this.tipoPessoa = type;\r\n    this.form.reset();\r\n  }\r\n\r\n\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field) != '') {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  agregarDireccion(index: number) {\r\n    //console.log(index);\r\n    this.ubicaciones[index] = { latitud: this.latitud, longitud: this.longitud, color: this.generarColorAleatorio() }\r\n    if (index >= 0) {\r\n      this.ubicacionFormularios[index].swActivarLatitud = true\r\n    } else {\r\n      this.ubicacionFormularios[index].swActivarLatitud = false\r\n    }\r\n  }\r\n\r\n  generarColorAleatorio(): string {\r\n    if (this.coloresDisponibles.length === 0) {\r\n      return null; // No quedan colores disponibles\r\n    }\r\n\r\n    const indiceAleatorio = Math.floor(Math.random() * this.coloresDisponibles.length);\r\n    const colorAleatorio = this.coloresDisponibles.splice(indiceAleatorio, 1)[0];\r\n    return colorAleatorio;\r\n  }\r\n  actualizarUbicacion(index: number) {\r\n    // Actualiza las coordenadas de la ubicación en el arreglo\r\n    this.ubicaciones[index].latitud = this.latitud;\r\n    this.ubicaciones[index].longitud = this.longitud;\r\n  }\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n\r\n      if (field.errors.hasOwnProperty('maxlength') && field.touched) {\r\n        return 'maxlength';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required ';\r\n    }\r\n  }\r\n\r\n  showDetails(): void {\r\n    this.modalRef = this.modalService.show(\r\n      this.modalDetalhesCliente,\r\n      this.modalConfig\r\n    );\r\n  }\r\n\r\n  onCloseDetails(): void {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  onNavigateDetail(): void {\r\n    if (this.dadosCliente.podeAcessar == 1) {\r\n      this.onCloseDetails();\r\n      this.router.navigate(['../detalhes', this.dadosCliente.codCliente], {\r\n        relativeTo: this.activatedRoute,\r\n      });\r\n    } else {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\r\n    }\r\n  }\r\n\r\n  onInput() {\r\n    this.formChanged = true;\r\n\r\n\r\n  }\r\n\r\n  actualizarPosicion(atributo, index) {\r\n    //console.log(atributo)\r\n    //this.ubicacionFormularios[index].titulo_ubicacion = atributo;\r\n    //console.log(this.ubicacionFormularios[index].titulo_ubicacion)\r\n   this.titulo_ubicacion_array = atributo;\r\n    this.index_array_ubicacion = index;\r\n\r\n    this.ubicacionFormularios[index].ubicacion= atributo\r\n    //console.log(this.ubicacionFormularios)\r\n  }\r\n  actualizarContacto(atributo, tipo, index) {\r\n    /*  console.log(atributo) */\r\n    this.index_array_contactos = index\r\n    switch (tipo) {\r\n      case 1:\r\n        this.titulo_contacto_array = atributo;\r\n        this.contactoFormularios[index].titulo_contacto = this.titulo_contacto_array;\r\n        break;\r\n      case 2:\r\n        this.nombre_contacto_array = atributo;\r\n        this.contactoFormularios[index].nombres_contacto = this.nombre_contacto_array;\r\n        break;\r\n      case 3:\r\n        this.apellido_p_contacto_array = atributo;\r\n        this.contactoFormularios[index].apellido_contacto = this.apellido_p_contacto_array;\r\n        break;\r\n      case 4:\r\n        this.apellido_m_contacto_array = atributo;\r\n        this.contactoFormularios[index].apellido2_contacto = this.apellido_m_contacto_array;\r\n        break;\r\n      case 5:\r\n        this.telefono_contacto_array = atributo;\r\n        this.contactoFormularios[index].telefono_contacto = this.telefono_contacto_array;\r\n        break;\r\n      case 6:\r\n        this.celular_contacto_array = atributo;\r\n        this.contactoFormularios[index].celular_contacto = this.celular_contacto_array;\r\n        break;\r\n      case 7:\r\n        this.direccion_contacto_array = atributo;\r\n        this.contactoFormularios[index].direccion_contacto = this.direccion_contacto_array ;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  cambiarCiudad(id, index) {\r\n    this.id_ciudad = id;\r\n    this.index_array_ubicacion = index;\r\n    this.ubicacionFormularios[index].id_ciudad= id\r\n\r\n\r\n    //console.log(this.id_ciudad);\r\n    \r\n  }\r\n\r\n  formCanDeactivate() {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onCancel() {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n  FormArray\r\n} from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ng-brazil\r\nimport { utilsBr } from 'js-brasil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { PdfService } from 'src/app/shared/services/core/pdf.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n@Component({\r\n  selector: 'comercia-clientes-proposta-analise-credito',\r\n  templateUrl: './proposta-analise-credito.component.html',\r\n  styleUrls: ['./proposta-analise-credito.component.scss']\r\n})\r\nexport class ComercialClientesPropostaAnaliseCreditoComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  loaderNavbar: boolean = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  codCliente: number;\r\n\r\n  tipoVisao: string = 'formulario';\r\n  dataFicha: any = [];\r\n\r\n  form: FormGroup;\r\n  formChanged: boolean = false;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private pnotifyService: PNotifyService,\r\n    private pdfService: PdfService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.codCliente = params['id'];\r\n\r\n      this.registrarAcesso();\r\n      this.setBreadCrumb(this.codCliente);\r\n      this.titleService.setTitle('Proposta para análise de crédito');\r\n\r\n      if (this.activatedRoute.snapshot.data['data']['responseCode'] === 200) {\r\n        this.setFormBuilder(\r\n          this.activatedRoute.snapshot.data['data']['result']\r\n        );\r\n      } else {\r\n        this.pnotifyService.error();\r\n        this.location.back();\r\n      }\r\n    });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(id: number) {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home'\r\n      },\r\n      {\r\n        descricao: 'Busqueda de clientes',\r\n        routerLink: '/comercial/clientes/lista'\r\n      },\r\n      {\r\n        descricao: 'Detalhes',\r\n        routerLink: `/comercial/clientes/detalhes/${id}`\r\n      },\r\n      {\r\n        descricao: 'Proposta para análise de crédito'\r\n      }\r\n    ];\r\n  }\r\n\r\n  setFormBuilder(data: any) {\r\n    this.form = this.formBuilder.group({\r\n      razaoSocial: [\r\n        { value: data['razaoSocial'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      dataSolicitacao: [new Date(), [Validators.required]],\r\n      codCliente: [\r\n        { value: data['codCliente'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      codClienteDBA: [{ value: data['codClienteDBA'], disabled: true }],\r\n      setorAtividade: [\r\n        { value: data['setorAtividade'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      dataUltimaVisita: [null],\r\n      instalacoes: [null],\r\n      numFuncionarios: [null],\r\n      limiteCreditoAtual: [data['limiteCredito']],\r\n      limiteCreditoSolicitado: [null, [Validators.required]],\r\n      condicaoPagto: [null, [Validators.required]],\r\n      nomeVendedor: [\r\n        { value: data['nomeVendedor'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      telefoneVendedor: [\r\n        { value: data['telefoneVendedor'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      gestorVendas: [null, [Validators.required]],\r\n      nomeEscritorio: [\r\n        { value: data['nomeEscritorio'], disabled: true },\r\n        [Validators.required]\r\n      ],\r\n      fornecedores: this.formBuilder.array([]),\r\n      clientes: this.formBuilder.array([]),\r\n      vendasConcentradas: [null],\r\n      bancos: this.formBuilder.array([]),\r\n      previsaoCompraTon: [null],\r\n      previsaoCompraValor: [null],\r\n      faturamentoMedio: [null],\r\n      parecerVendedor: [null, [Validators.required]]\r\n    });\r\n\r\n    this.setFormFornecedoresClientesBancos();\r\n  }\r\n\r\n  setFormFornecedoresClientesBancos() {\r\n    this.onAddFornecedor();\r\n    this.onAddBanco();\r\n  }\r\n\r\n  get fornecedores() {\r\n    return this.form.get('fornecedores') as FormArray;\r\n  }\r\n\r\n  get clientes() {\r\n    return this.form.get('clientes') as FormArray;\r\n  }\r\n\r\n  get bancos() {\r\n    return this.form.get('bancos') as FormArray;\r\n  }\r\n\r\n  onAddFornecedor() {\r\n    this.fornecedores.push(\r\n      this.formBuilder.group({\r\n        nome: [null, [Validators.required]],\r\n        telefone: [null]\r\n      })\r\n    );\r\n  }\r\n\r\n  onAddCliente() {\r\n    this.clientes.push(\r\n      this.formBuilder.group({\r\n        nome: [null]\r\n      })\r\n    );\r\n  }\r\n\r\n  onAddBanco() {\r\n    this.bancos.push(\r\n      this.formBuilder.group({\r\n        nome: [null, [Validators.required]],\r\n        agencia: [null, [Validators.required]],\r\n        contaCorrente: [null, [Validators.required]],\r\n        telefone: [null, [Validators.required]]\r\n      })\r\n    );\r\n  }\r\n\r\n  onDeleteFornecedor(index: number) {\r\n    if (this.fornecedores.length > 1) {\r\n      this.fornecedores.removeAt(index);\r\n    } else {\r\n      this.pnotifyService.notice('Informe ao menos um fornecedor.');\r\n    }\r\n  }\r\n\r\n  onDeleteCliente(index: number) {\r\n    this.clientes.removeAt(index);\r\n  }\r\n\r\n  onDeleteBanco(index: number) {\r\n    if (this.bancos.length > 1) {\r\n      this.bancos.removeAt(index);\r\n    } else {\r\n      this.pnotifyService.notice('Informe ao menos um banco.');\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onNestedFieldError(formGroup: string, index: number, field: string) {\r\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n    field = nestedForm.controls[index].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n\r\n    if (nestedForm.controls[index].get(field).validator) {\r\n      let validationResult = nestedForm.controls[index]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onInput() {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate() {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      this.loaderNavbar = true;\r\n      setTimeout(() => {\r\n        const formData = this.form.getRawValue();\r\n\r\n        let dataSolicitacao = `${(formData[\r\n          'dataSolicitacao'\r\n        ] as Date).getDate()}/${(formData[\r\n          'dataSolicitacao'\r\n        ] as Date).getMonth() + 1}/${(formData[\r\n          'dataSolicitacao'\r\n        ] as Date).getFullYear()}`;\r\n\r\n        let dataUltimaVisita: string;\r\n        if (formData['dataUltimaVisita'] != null) {\r\n          dataUltimaVisita = `${(formData[\r\n            'dataUltimaVisita'\r\n          ] as Date).getDate()}/${(formData[\r\n            'dataUltimaVisita'\r\n          ] as Date).getMonth() + 1}/${(formData[\r\n            'dataUltimaVisita'\r\n          ] as Date).getFullYear()}`;\r\n        }\r\n\r\n        this.tipoVisao = 'ficha';\r\n        this.dataFicha = {\r\n          razaoSocial: formData['razaoSocial'],\r\n          dataSolicitacao: dataSolicitacao,\r\n          codCliente: formData['codCliente'],\r\n          codClienteDBA: formData['codClienteDBA'],\r\n          setorAtividade: formData['setorAtividade'],\r\n          dataUltimaVisita: dataUltimaVisita,\r\n          instalacoes: formData['instalacoes'],\r\n          numFuncionarios: formData['numFuncionarios'],\r\n          limiteCreditoAtual: formData['limiteCreditoAtual'],\r\n          limiteCreditoSolicitado: formData['limiteCreditoSolicitado'],\r\n          condicaoPagto: formData['condicaoPagto'],\r\n          nomeVendedor: formData['nomeVendedor'],\r\n          telefoneVendedor: formData['telefoneVendedor'],\r\n          gestorVendas: formData['gestorVendas'],\r\n          nomeEscritorio: formData['nomeEscritorio'],\r\n          fornecedores: formData['fornecedores'],\r\n          clientes: formData['clientes'],\r\n          bancos: formData['bancos'],\r\n          vendasConcentradas: formData['vendasConcentradas'],\r\n          previsaoCompraTon: formData['previsaoCompraTon'],\r\n          previsaoCompraValor: formData['previsaoCompraValor'],\r\n          faturamentoMedio: formData['faturamentoMedio'],\r\n          parecerVendedor: formData['parecerVendedor']\r\n        };\r\n\r\n        this.formChanged = false;\r\n        this.loaderNavbar = false;\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.loaderNavbar = true;\r\n    setTimeout(() => {\r\n      this.tipoVisao = 'formulario';\r\n      this.loaderNavbar = false;\r\n    }, 1000);\r\n  }\r\n\r\n  onDownload() {\r\n    this.loaderNavbar = true;\r\n    this.pdfService.download(\r\n      'impressao-ficha-pac',\r\n      `${this.codCliente}_PropostaAnaliseCredito`\r\n    );\r\n\r\n    setTimeout(() => {\r\n      this.loaderNavbar = false;\r\n    }, 500);\r\n  }\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// ngx-filter-pipe\r\nimport { FilterPipe } from 'ngx-filter-pipe';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-resumo',\r\n  templateUrl: './resumo.component.html',\r\n  styleUrls: ['./resumo.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroResumoComponent\r\n  implements OnInit {\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  sinteticoPendenciasLoaded: boolean = false;\r\n\r\n  codCliente: number;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  sintetico: any = {\r\n    atrasoPagamento: 0,\r\n    tempoEntrega: 0,\r\n    totalAtraso: 0,\r\n    pagtoAntecipado: 0,\r\n    creditoSeguradora: 0\r\n  };\r\n\r\n  countoAtrasoPagamento: number;\r\n  countoTempoEntrega: number;\r\n  countoTotalAtraso: number;\r\n  countoPagtoAntecipado: number;\r\n  countoCreditoSeguradora: number;\r\n  countoTitulos: number;\r\n  countoNotasDebito: number;\r\n  countoNotasPromissorias: number;\r\n  countoChequesDevolvidos: number;\r\n  countoCorteDobra: number;\r\n  countoReservaBobinas: number;\r\n  countoLimiteCredito: number;\r\n  countoSaldo: number;\r\n\r\n  grupoEconomico: any = [];\r\n  grupoEconomicoLoaded: boolean = false;\r\n\r\n  showPendenciasDetalhes: boolean = false;\r\n\r\n  pendencias: any = {\r\n    titulos: 0,\r\n    notasDebito: 0,\r\n    notasPromissorias: 0,\r\n    chequesDevolvidos: 0,\r\n    corteDobra: 0,\r\n    reservaBobinas: 0,\r\n    limiteCredito: 0,\r\n    saldo: 0\r\n  };\r\n\r\n  pedidos: any = [];\r\n  pedidosPagination: any = [];\r\n  pedidosFiltered: any = [];\r\n  pedidosLoaded: boolean = false;\r\n\r\n  maxSize: number = 8;\r\n  itemsPerPage: number = 10;\r\n\r\n  visaoGrupoEconomico: boolean = false;\r\n  queryParams: any = { grupoEconomico: this.visaoGrupoEconomico };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService,\r\n    private modalService: BsModalService,\r\n    private filterPipe: FilterPipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(queryParams => {\r\n      this.activatedRoute.parent.params.subscribe(params => {\r\n        let grupoEconomico = false;\r\n\r\n        if (\r\n          queryParams['grupoEconomico'] &&\r\n          queryParams['grupoEconomico'] == 'true'\r\n        ) {\r\n          grupoEconomico = true;\r\n          this.visaoGrupoEconomico = true;\r\n          this.queryParams = {\r\n            grupoEconomico: this.visaoGrupoEconomico\r\n          };\r\n        }\r\n\r\n        this.codCliente = params['id'];\r\n        this.getResumoSintetico(this.codCliente, grupoEconomico);\r\n        this.getGrupoEconomico(this.codCliente);\r\n        this.getPedidos(this.codCliente, grupoEconomico);\r\n      });\r\n    });\r\n  }\r\n\r\n  onChangeGrupoEconomico() {\r\n    this.onLoadingGrupoEconomico();\r\n    this.queryParams = { grupoEconomico: this.visaoGrupoEconomico };\r\n\r\n    this.router.navigate(\r\n      [`/comercial/clientes/historico-financeiro/${this.codCliente}/resumo`],\r\n      {\r\n        queryParams: this.queryParams\r\n      }\r\n    );\r\n  }\r\n\r\n  onLoadingGrupoEconomico() {\r\n    this.visaoGrupoEconomico = !this.visaoGrupoEconomico;\r\n    this.sinteticoPendenciasLoaded = false;\r\n    this.pedidosLoaded = false;\r\n  }\r\n\r\n  getResumoSintetico(id: number, grupoEconomico: boolean) {\r\n    this.historicoFinanceiroService\r\n      .getResumoSintetico(id, grupoEconomico)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.sintetico = response['result']['sintetico'];\r\n          this.pendencias = response['result']['pendencias'];\r\n        }\r\n        this.sinteticoPendenciasLoaded = true;\r\n      });\r\n  }\r\n\r\n  getGrupoEconomico(id: number) {\r\n    this.historicoFinanceiroService\r\n      .getGrupoEconomico(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.grupoEconomico = response['result'];\r\n        }\r\n        this.grupoEconomicoLoaded = true;\r\n      });\r\n  }\r\n\r\n  getPedidos(id: number, grupoEconomico: boolean) {\r\n    this.historicoFinanceiroService\r\n      .getResumoPedidos(id, grupoEconomico)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.pedidos = response['result'];\r\n          this.pedidosFiltered = response['result'];\r\n          this.pedidosPagination = this.pedidosFiltered.slice(\r\n            0,\r\n            this.itemsPerPage\r\n          );\r\n        }\r\n        this.pedidosLoaded = true;\r\n      });\r\n  }\r\n\r\n  onGrupoEconomico(modalRef: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(modalRef);\r\n  }\r\n\r\n  onCloseModalGrupoEconomico() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  handleCounter(valor: number) {\r\n    return valor.toFixed(0);\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'EM ABERTO') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'QUITADA') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'VENCIDA') {\r\n      borderClass = 'border-warning';\r\n    } else if (status == 'PROTESTO') {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.pedidosPagination = this.pedidosFiltered.slice(startItem, endItem);\r\n  }\r\n\r\n  onFilter(value: string) {\r\n    if (value) {\r\n      this.pedidosFiltered = this.filterPipe.transform(this.pedidos, {\r\n        numDuplicata: value\r\n      });\r\n    } else {\r\n      this.pedidosFiltered = this.pedidos;\r\n    }\r\n\r\n    this.pedidosPagination = this.pedidosFiltered.slice(0, this.itemsPerPage);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3VsdGltb3MtcHJlY29zL3VsdGltb3MtcHJlY29zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialClientesDetalheService } from './detalhes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesDetalhesResolverGuard implements Resolve<any> {\r\n  constructor(private detalhesService: ComercialClientesDetalheService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['id']) {\r\n      return this.detalhesService.getDetalhes(route.params['id']);\r\n    }\r\n\r\n    return of({\r\n      responseCode: 204\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { ComercialClientesResolverGuard } from '../clientes-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialClientesHistoricoFinanceiroComponent } from './historico-financeiro.component';\r\nimport { ComercialClientesHistoricoFinanceiroResumoComponent } from './resumo/resumo.component';\r\nimport { ComercialClientesHistoricoFinanceiroDetalhesComponent } from './detalhes/detalhes.component';\r\nimport { ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent } from './materiais-duplicata/materiais-duplicata.component';\r\nimport { ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent } from './acumulos-mensais/acumulos-mensais.component';\r\nimport { ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent } from './notas-promissorias/notas-promissorias.component';\r\nimport { ComercialClientesHistoricoFinanceiroDebitosComponent } from './debitos/debitos.component';\r\nimport { ComercialClientesHistoricoFinanceiroCorteDobraComponent } from './corte-dobra/corte-dobra.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: ':id',\r\n    component: ComercialClientesHistoricoFinanceiroComponent,\r\n    resolve: {\r\n      response: ComercialClientesResolverGuard\r\n    },\r\n    children: [\r\n      { path: '', redirectTo: 'resumo', pathMatch: 'full' },\r\n      {\r\n        path: 'resumo',\r\n        component: ComercialClientesHistoricoFinanceiroResumoComponent\r\n      },\r\n      {\r\n        path: 'detalhes',\r\n        component: ComercialClientesHistoricoFinanceiroDetalhesComponent\r\n      },\r\n      {\r\n        path: 'materiais-duplicata',\r\n        component: ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent\r\n      },\r\n      {\r\n        path: 'acumulos-mensais',\r\n        component: ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent\r\n      },\r\n      {\r\n        path: 'notas-promissorias',\r\n        component: ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent\r\n      },\r\n      {\r\n        path: 'debitos',\r\n        component: ComercialClientesHistoricoFinanceiroDebitosComponent\r\n      },\r\n      {\r\n        path: 'corte-dobra',\r\n        component: ComercialClientesHistoricoFinanceiroCorteDobraComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/comercial/home',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialHistoricoFinanceiroRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2NvcnRlLWRvYnJhL2NvcnRlLWRvYnJhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!acumulosMensaisLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de acumulaciones mensuales...</strong>\\r\\n    </div>\\r\\n    <tabset *ngIf=\\\"acumulosMensaisLoaded\\\">\\r\\n      <tab heading=\\\"Principal\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <custom-table *ngIf=\\\"acumulosMensais.principal.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Período</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor acumulado</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Média atraso</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let acumulo of acumulosMensais.principal\\\">\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.periodo }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.atraso }} dias</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n          <empty-result\\r\\n            message=\\\"Nenhuma informação encontrada\\\"\\r\\n            *ngIf=\\\"acumulosMensais.principal.length == 0\\\">\\r\\n          </empty-result>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Maior fatura\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <custom-table *ngIf=\\\"acumulosMensais.maiorFatura.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Pedido</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let acumulo of acumulosMensais.maiorFatura\\\">\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.numPedido }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.data }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.empresa }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ acumulo.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n          <empty-result\\r\\n            message=\\\"Nenhuma informação encontrada\\\"\\r\\n            *ngIf=\\\"acumulosMensais.maiorFatura.length == 0\\\">\\r\\n          </empty-result>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"modal-content custom-modal\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h6 class=\\\"modal-title pull-left\\\">Editar datos de cliente </h6>\\r\\n        <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"form row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"col mb-0\\\">\\r\\n                        <label for=\\\"\\\"> <strong> DATOS DE CLIENTE </strong> </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-12\\\">\\r\\n                        <form [formGroup]=\\\"form\\\">\\r\\n                            <div class=\\\"card\\\">\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0\\\"> <strong> Codigo cliente </strong></label>\\r\\n\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"codigo_cliente\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.codigo_cliente }}\\\"\\r\\n                                                id=\\\"codigo_cliente\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0\\\"> <strong> CI </strong></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.carnet }}\\\" formControlName=\\\"carnet\\\"\\r\\n                                                id=\\\"carnet\\\">\\r\\n                                            <input type=\\\"hidden\\\" value=\\\"{{ datos_cliente.datos_cliente.id_cliente }}\\\"\\r\\n                                                id=\\\"id_cliente\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0\\\"> <strong> NIT </strong></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.nit }}\\\" formControlName=\\\"nit\\\"\\r\\n                                                id=\\\"nit\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Nombre completo </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.nombre }}\\\" formControlName=\\\"nombre\\\"\\r\\n                                                id=\\\"nombre\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Nombre factura </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.nombre_factura  }}\\\"\\r\\n                                                formControlName=\\\"nombre_factura\\\" id=\\\"nombre_factura\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Tipo persona </strong> </label>\\r\\n                                            <select name=\\\"\\\" id=\\\"id_tipo_persona\\\" class=\\\"form-control\\\"\\r\\n                                                >\\r\\n                                                <option *ngFor=\\\"let tipo of tipos_personas | keyvalue\\\"\\r\\n                                                    [value]=\\\"tipo.key\\\"\\r\\n                                                    [selected]=\\\"tipo.key === datos_cliente.datos_cliente.id_tipo_persona\\\">\\r\\n                                                    {{ tipo.value }}\\r\\n                                                </option>\\r\\n\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Email </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.email }}\\\" formControlName=\\\"email\\\"\\r\\n                                                id=\\\"email\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong>Teléfono </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.telefono }}\\\"\\r\\n                                                formControlName=\\\"telefono\\\" id=\\\"telefono\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Celular </strong> </label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                value=\\\"{{datos_cliente.datos_cliente.celular }}\\\"\\r\\n                                                formControlName=\\\"celular\\\" id=\\\"celular\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Rubro </strong> </label>\\r\\n                                            <select name=\\\"\\\" id=\\\"id_rubro\\\" class=\\\"form-control\\\">\\r\\n                                                <option *ngFor=\\\"let cnae of cnaes\\\" [value]=\\\"cnae.id_cnae\\\"\\r\\n                                                    [selected]=\\\"cnae.id_cnae === datos_cliente.datos_cliente.id_rubro\\\">\\r\\n                                                    {{ cnae.descripcion }}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Tipo cliente </strong> </label>\\r\\n                                            <select name=\\\"vendedor\\\" class=\\\"form-control\\\" id=\\\"id_tipo_cliente\\\">\\r\\n                                                <option *ngFor=\\\"let tipo of tipos_clientes\\\" [value]=\\\"tipo.id\\\"\\r\\n                                                    [selected]=\\\"tipo.id === datos_cliente.datos_cliente.id_tipo_cliente\\\">\\r\\n                                                    {{ tipo.nombre_tipo }}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"mb-0 mt-2\\\"> <strong> Vendedor </strong> </label>\\r\\n                                            <select name=\\\"vendedor\\\" class=\\\"form-control\\\" id=\\\"id_vendedor\\\">\\r\\n                                                <option *ngFor=\\\"let vendedor of vendedoresList\\\" [value]=\\\"vendedor.ID\\\"\\r\\n                                                    [selected]=\\\"vendedor.ID === datos_cliente.datos_cliente.id_vendedor\\\">\\r\\n                                                    {{ vendedor.nombre }}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"col mb-0\\\">\\r\\n                        <label for=\\\"\\\"> <strong> DATOS DE CONTACTO </strong> </label>\\r\\n                    </div>\\r\\n                    <div style=\\\"max-height: 350px; overflow-y: auto;\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\"\\r\\n                            *ngFor=\\\"let contacto of datos_cliente.datos_contacto; let i = index\\\">\\r\\n                            <div class=\\\"card\\\">\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <label>Título</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Nombre</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.nombres_contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Dirección</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.direccion_contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Celular</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.celular_contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Teléfono</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"contacto.telefono_contacto\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <button (click)=\\\"eliminarContacto(i)\\\"\\r\\n                                        class=\\\"btn btn-danger mt-2 text-center\\\">Eliminar</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-12 text-center\\\">\\r\\n                        <button (click)=\\\"agregarContacto()\\\" class=\\\"btn btn-primary\\\"\\r\\n                            [disabled]=\\\"datos_cliente.datos_contacto.length >= 5\\\">Agregar Contacto</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"col mb-0\\\">\\r\\n                        <label for=\\\"\\\"> <strong> DATOS DE UBICACIÓN </strong> </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 mb-3\\\">\\r\\n                        <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n                            <agm-map [latitude]=\\\"latitudPromedio\\\" [longitude]=\\\"longitudPromedio\\\" [zoom]=\\\"16\\\"\\r\\n                                (mapClick)=\\\"actualizarMapa($event)\\\" class=\\\"embed-responsive-item\\\">\\r\\n                                <agm-marker *ngFor=\\\"let ubicacion of datos_cliente.datos_direccion; let i = index\\\"\\r\\n                                    [latitude]=\\\"ubicacion.latitud\\\" [longitude]=\\\"ubicacion.longitud\\\"\\r\\n                                    [iconUrl]=\\\"ubicacion.color\\\" (markerClick)=\\\"actualizarMarcador(i)\\\"\\r\\n                                    (markerDragEnd)=\\\"actualizarUbicacion(i, $event.coords.lat, $event.coords.lng)\\\">\\r\\n                                </agm-marker>\\r\\n                            </agm-map>\\r\\n                            <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div style=\\\"max-height: 150px; overflow-y: auto;\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\"\\r\\n                            *ngFor=\\\"let direccion of datos_cliente.datos_direccion; let i = index\\\">\\r\\n                            <div class=\\\"card\\\">\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <label>Título</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"direccion.ubicacion\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <label>Ciudad</label>\\r\\n                                    <div>\\r\\n                                        <select name=\\\"\\\" id=\\\"\\\" class=\\\"form-control\\\"\\r\\n                                            (change)=\\\"actualizarCiudad(i, $event.target.value)\\\">\\r\\n                                            <option value=\\\"\\\"> SELECCIONAR...</option>\\r\\n                                            <option *ngFor=\\\"let ciudad of ciudades\\\" [value]=\\\"ciudad.id\\\"\\r\\n                                                [selected]=\\\"ciudad.id === direccion.id_ciudad\\\">\\r\\n                                                {{ ciudad.nombre_ciudad }}\\r\\n                                            </option>\\r\\n\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                    <label>Dirección</label>\\r\\n                                    <div>\\r\\n                                        <input [(ngModel)]=\\\"direccion.direccion\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                    <button (click)=\\\"eliminarUbicacion(i)\\\"\\r\\n                                        class=\\\"btn btn-danger mt-2 text-center\\\">Eliminar</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-12 text-center\\\">\\r\\n                        <button (click)=\\\"agregarUbicacion()\\\" class=\\\"btn btn-primary\\\"\\r\\n                            [disabled]=\\\"datos_cliente.datos_direccion.length >= 5\\\">Agregar Ubicación</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClose()\\\">\\r\\n                Cancelar\\r\\n            </button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"actualizarCliente()\\\">\\r\\n                Guardar\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Services\r\nimport { FormRulesService } from 'src/app/shared/services/core/form-rules.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialClientesCadastroDadosFaturamentoRulesResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(private formRulesService: FormRulesService) {}\r\n\r\n  resolve(): Observable<any> {\r\n    return this.formRulesService.getRules(1);\r\n  }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!duplicataLoaded\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carga de duplicados...</strong>\\r\\n    </div>\\r\\n    <tabset *ngIf=\\\"duplicataLoaded\\\">\\r\\n      <tab heading=\\\"Principal\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Línea:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"principal.materiais.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Descripción</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Sit. Tributária</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Qtde.</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor unidades</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor total</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Alíquota ICMS</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let material of principal.materiais\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ material.idMaterial }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.nomeMaterial }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.situacaoTributaria }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.quantidade }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.valorUnitario | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ material.valorTotalItem | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-center\\\" *ngIf=\\\"material.aliquotaIcms > 0\\\">{{ material.aliquotaIcms | number:'1.2-2' }}%</td>\\r\\n                    <td class=\\\"text-center\\\" *ngIf=\\\"material.aliquotaIcms == 0\\\">0,00%</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"Nenhuma informação encontrada\\\"\\r\\n                *ngIf=\\\"principal.materiais.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Condiciones de pago</div>\\r\\n                <p class=\\\"mb-0\\\"><strong></strong>{{ principal.materiais[0]['condicaoPagamento'] }}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Total productos</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Cantidad:</strong> {{ principal.total.peso | number:'1.3-3' }} TON</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Valor:</strong> {{ principal.total.valor | currency:'BRL':'symbol':'1.2-2' }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Lugar de entrega</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p><strong>Referencia:</strong> {{ principal.entrega.referencia }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Endereço:</strong> {{ principal.entrega.logradouro }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Ciudad:</strong> {{ principal.entrega.cidade }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Bairro:</strong> {{ principal.entrega.bairro }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>UF:</strong> {{ principal.entrega.uf }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Histórico de cobranças\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"historicoCobrancas.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Num. Lanzamiento</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Situación</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Fecha</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Usuário</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Comentário</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let cobranca of historicoCobrancas\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.numLancamento }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.situacao }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.data }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.nome }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ cobranca.comentario }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"Nenhuma informação encontrada\\\"\\r\\n                *ngIf=\\\"historicoCobrancas.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Colección de la empresa</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Código:</strong> Nenhuma informação</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <p class=\\\"mb-0\\\"><strong>Descripcion:</strong> Nenhuma informação</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Vencimento original</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <p class=\\\"mb-0\\\">No hay información</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Ocorrências da duplicata\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"ocorrenciasDuplicatas.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicata</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Operação</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Descrição</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let ocorrencia of ocorrenciasDuplicatas\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.numDuplicata }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.operacao }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.data }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.descricao }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"No hay información encontrada\\\"\\r\\n                *ngIf=\\\"ocorrenciasDuplicatas.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Ocorrências comerciais\\\">\\r\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"bg-light rounded p-4\\\">\\r\\n                <div class=\\\"mtc-title\\\">Duplicata</div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\r\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table *ngIf=\\\"ocorrenciasComerciais.length > 0\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Número</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Hora</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Usuário</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Operação</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Situação</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let ocorrencia of ocorrenciasComerciais\\\">\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.numero }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.data }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.hora }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.nome }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.operacao }}</td>\\r\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.situacao }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <empty-result\\r\\n                message=\\\"No hay información encontrada\\\"\\r\\n                *ngIf=\\\"ocorrenciasComerciais.length == 0\\\">\\r\\n              </empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Busqueda de clientes\\\">\\r\\n  <button type=\\\"button\\\" [routerLink]=\\\"['../pre-cadastro']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">Filtrar</button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row justify-content-center mb-2\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <ul class=\\\"list-unstyled mb-0 d-flex justify-content-around\\\">\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Ativo')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Activos</h6>\\r\\n          <div class=\\\"text-success\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"ativos\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoAtivos = $event\\\">\\r\\n                {{ handleCounter(countoAtivos) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Inativo')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Inactivos</h6>\\r\\n          <div class=\\\"text-danger\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"inativos\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoInativos = $event\\\">\\r\\n                {{ handleCounter(countoInativos) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Potenci')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Potencial</h6>\\r\\n          <div class=\\\"text-primary\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"potencial\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoPotencial = $event\\\">\\r\\n                {{ handleCounter(countoPotencial) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Arquivo')\\\">\\r\\n          <h6 class=\\\"text-muted font-weight-light\\\">Archivados</h6>\\r\\n          <div class=\\\"text-secondary\\\">\\r\\n            <h4>\\r\\n              <strong counto [step]=\\\"30\\\" [countTo]=\\\"arquivados\\\" [countFrom]=\\\"0\\\" [duration]=\\\"3\\\"\\r\\n                (countoChange)=\\\"countoArquivados = $event\\\">\\r\\n                {{ handleCounter(countoArquivados) }}\\r\\n              </strong>\\r\\n            </h4>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <advanced-filter>\\r\\n    <form [formGroup]=\\\"formFilter\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"buscarPor\\\">Buscar por</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"buscarPor\\\" formControlName=\\\"buscarPor\\\">\\r\\n            <option value=\\\"1\\\">Código, nombre o razon social</option>\\r\\n            <option value=\\\"2\\\">C.I. o NIT</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"pesquisa\\\">Termino de busqueda</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pesquisa\\\" (keydown.enter)=\\\"onFilter()\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"situacao\\\">Situacion</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"situacao\\\" formControlName=\\\"situacao\\\">\\r\\n            <option value=\\\"Ativo\\\">Activos</option>\\r\\n            <option value=\\\"Inativo\\\">Inactivos</option>\\r\\n            <option value=\\\"Potenci\\\">Potenciales</option>\\r\\n            <option value=\\\"Arquivo\\\">Archivados</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"setorAtividade\\\">Sector empresarial</label>\\r\\n          <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"setorAtividades\\\" [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"setorAtividade\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\" formControlName=\\\"setorAtividade\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n          <label for=\\\"tipoPessoa\\\">Tipo de persona</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"tipoPessoa\\\" formControlName=\\\"tipoPessoa\\\">\\r\\n            <option value=\\\"F\\\">Persona física</option>\\r\\n            <option value=\\\"J\\\">Persona jurídica</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n          <label for=\\\"grupoEconomico\\\">Esta en grupo economico</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"grupoEconomico\\\"\\r\\n            formControlName=\\\"grupoEconomico\\\">\\r\\n            <option value=\\\"S\\\">Si</option>\\r\\n            <option value=\\\"N\\\">No</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n          <label for=\\\"segurado\\\">Asegurado</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"segurado\\\"\\r\\n            formControlName=\\\"segurado\\\">\\r\\n            <option value=\\\"S\\\">Si</option>\\r\\n            <option value=\\\"N\\\">No</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\r\\n          <label for=\\\"carteira\\\">Cartera</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"carteira\\\"\\r\\n            formControlName=\\\"carteira\\\">\\r\\n            <option value=\\\"S\\\" selected>Mi cartera</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        <div class=\\\"form-group col-lg-1 mb-lg-0\\\">\\r\\n          <label for=\\\"registros\\\">Registros</label>\\r\\n          <select class=\\\"form-control custom-select\\\" id=\\\"registros\\\" formControlName=\\\"registros\\\">\\r\\n            <option>10</option>\\r\\n            <option>25</option>\\r\\n            <option>50</option>\\r\\n            <option>100</option>\\r\\n            <option>200</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"\\r\\n      dataLoaded && searchSubmitted && clientes.length == 0 && buscandoPor != 2\\r\\n    \\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <empty-result message=\\\"No se encontraron clientes para esta búsqueda.\\\" class=\\\"py-4\\\"></empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"\\r\\n      dataLoaded && searchSubmitted && clientes.length == 0 && buscandoPor == 2\\r\\n    \\\">\\r\\n    <div class=\\\"col-7 d-flex justify-content-end w-100 pr-0\\\">\\r\\n      <empty-result message=\\\"No se encontraron clientes para esta búsqueda.\\\" class=\\\"py-4\\\"></empty-result>\\r\\n    </div>\\r\\n    <div class=\\\"col-5 d-flex w-100 pl-1\\\">\\r\\n      <a [routerLink]=\\\"['../pre-cadastro']\\\" [queryParams]=\\\"onPreCadastroCpfCnpj()\\\" class=\\\"my-auto\\\">\\r\\n        <strong>Pulse aquí para registrarse..</strong>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mt-4\\\" *ngIf=\\\"dataLoaded && clientes.length > 0\\\">\\r\\n    <div [ngClass]=\\\"{ 'col-12': !showDetailPanel, 'col-7 pr-0': showDetailPanel }\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\" (click)=\\\"setOrderBy('codigo_cliente')\\\">\\r\\n              <thead-sorter value=\\\"Código Cliente\\\" [active]=\\\"orderBy == 'codigo_cliente'\\\"\\r\\n                [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\" (click)=\\\"setOrderBy('cpf')\\\">\\r\\n              <thead-sorter value=\\\"CI/NIT\\\" [active]=\\\"orderBy == 'cpf'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"setOrderBy('nomeFantasia')\\\">\\r\\n              <thead-sorter value=\\\"Nombre y apelllido\\\" [active]=\\\"orderBy == 'nomeFantasia'\\\"\\r\\n                [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"setOrderBy('razaoSocial')\\\" *ngIf=\\\"!showDetailPanel\\\">\\r\\n              <thead-sorter value=\\\"Razon Social\\\" [active]=\\\"orderBy == 'razaoSocial'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let cliente of clientes\\\" [class.table-active]=\\\"cliente.codigo_cliente == clienteSelecionado\\\">\\r\\n            <td class=\\\"text-center hover\\\" [ngClass]=\\\"classStatusBorder(cliente.situacao)\\\"\\r\\n              (click)=\\\"viewRegister(cliente)\\\">\\r\\n              <i class=\\\"text-black-50 far fa-check-square mr-3\\\" *ngIf=\\\"cliente.segurado == 0\\\"\\r\\n                tooltip=\\\"Cliente no asegurado\\\" placement=\\\"right\\\"></i>\\r\\n              <i class=\\\"text-warning fas fa-check-square mr-3\\\" *ngIf=\\\"cliente.segurado > 0\\\" tooltip=\\\"Cliente asegurado\\\"\\r\\n                placement=\\\"right\\\"></i>\\r\\n              <i class=\\\"text-black-50 far fa-folder-open\\\" *ngIf=\\\"cliente.grupoEconomico == 0\\\"\\r\\n                tooltip=\\\"No hace parte de grupo economico\\\" placement=\\\"right\\\"></i>\\r\\n              <i class=\\\"text-warning fas fa-folder-open\\\" *ngIf=\\\"cliente.grupoEconomico > 0\\\"\\r\\n                tooltip=\\\"Pertenece a un grupo economico\\\" placement=\\\"right\\\"></i>\\r\\n            </td>\\r\\n            <td class=\\\"text-center hover\\\" (click)=\\\"viewRegister(cliente)\\\">\\r\\n              {{ cliente.codigo_cliente }}\\r\\n            </td>\\r\\n            <td class=\\\"text-center hover\\\" (click)=\\\"viewRegister(cpf)\\\">\\r\\n              {{ cliente.cpf }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"viewRegister(cliente)\\\">\\r\\n              {{ cliente.nomeFantasia | uppercase }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"viewRegister(cliente)\\\" *ngIf=\\\"!showDetailPanel\\\">\\r\\n              {{ cliente.razaoSocial | uppercase }}\\r\\n            </td>\\r\\n            <td>\\r\\n              <span tooltip=\\\"Datos registrados\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"viewDetails(cliente)\\\">\\r\\n                  <i class=\\\"fas fa-user\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"clientes[0]['total'] > itemsPerPage\\\">\\r\\n        <pagination [maxSize]=\\\"maxSize\\\" [(totalItems)]=\\\"totalItems\\\" (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\" [(ngModel)]=\\\"currentPage\\\" previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <div class=\\\"sticky-top\\\">\\r\\n        <detail-panel>\\r\\n          <tabset>\\r\\n            <tab heading=\\\"Datos registrados\\\">\\r\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n                <div *ngIf=\\\"dadosCadastraisLoaded && !dadosCadastraisEmpty\\\">\\r\\n                  <div class=\\\"container\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Codigo Cliente </label>\\r\\n                        <input\\r\\n                          value=\\\"{{ dadosCadastrais.id_cliente == null ? 'NO INFORMADO' : dadosCadastrais.id_cliente }}\\\"\\r\\n                          class=\\\"form-control\\\" readonly>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Codigo Cliente SAP</label>\\r\\n                        <input\\r\\n                          value=\\\"{{ dadosCadastrais.codigo_cliente == '' ? 'NO INFORMADO' : dadosCadastrais.codigo_cliente }}\\\"\\r\\n                          class=\\\"form-control\\\" readonly>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>C.I.</label>\\r\\n                        <div>\\r\\n                          <div>\\r\\n                            <input value=\\\"{{ dadosCadastrais.carnet == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.carnet }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!--  </div>\\r\\n                    <div class=\\\"form-row\\\"> -->\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Nombre</label>\\r\\n                        <div>\\r\\n                          <div>\\r\\n                            <input value=\\\"{{ dadosCadastrais.nombre == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.nombre }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Razon social</label>\\r\\n                        <div>\\r\\n                          <div>\\r\\n\\r\\n                            <input value=\\\"{{ dadosCadastrais.razon_social == null ? 'NO INFORMADO' :\\r\\n                            dadosCadastrais.razon_social }}\\\" class=\\\"form-control\\\" readonly>\\r\\n\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!--  </div> -->\\r\\n                      <!-- <div class=\\\"form-row\\\"> -->\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Tipo Persona</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ getTipoPersonaLabel(dadosCadastrais.id_tipo_persona) }}\\\" class=\\\"form-control\\\"\\r\\n                            readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>NIT.</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.nit == null ? 'NO INFORMADO' :\\r\\n                          dadosCadastrais.nit }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!--  </div> -->\\r\\n                      <!--  <div class=\\\"form-row\\\"> -->\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Celular</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.celular == null ? 'NO INFORMADO' :\\r\\n                          dadosCadastrais.celular }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Telefono</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.telefono == null ? 'NO INFORMADO' :\\r\\n                          dadosCadastrais.telefono }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label for=\\\"rubro\\\">Rubro</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.rubro || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Vendedor</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.vendedor || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-6\\\">\\r\\n                        <label>Tipo cliente</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ dadosCadastrais.tipo_cliente || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\"\\r\\n                            readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"mb-3\\\" *ngIf=\\\"dadosCadastraisLoaded && dadosCadastraisEmpty\\\">\\r\\n                    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n                    <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!dadosCadastraisLoaded\\\">\\r\\n                      <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"editingMode\\\">\\r\\n                  <div class=\\\"text-right mt-3\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancelEditing()\\\">Cancelar</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Guardar Cambios</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!editingMode\\\">\\r\\n                  <div class=\\\"text-right mt-3\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-light mb-2 text-center\\\"\\r\\n                      (click)=\\\"openModalEditar(editarCliente)\\\">Editar\\r\\n                      Cliente</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </tab>\\r\\n            <tab heading=\\\"Contactos\\\">\\r\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n                <div *ngIf=\\\"contatosLoaded && !contatosEmpty\\\">\\r\\n                  <div *ngIf=\\\"contatos.lenght !==  0\\\">\\r\\n                    <div class=\\\"form-row\\\" *ngFor=\\\"let contato of contatos\\\">\\r\\n                      <!-- <div class=\\\"form-group col\\\" [ngClass]=\\\"{'hidden': contato.editing}\\\">\\r\\n                      <label>ID Contacto</label>\\r\\n                      <div>\\r\\n                        {{ contato.id_cont }}\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>título</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          <!-- <div *ngIf=\\\"!editingContacto\\\">{{ contato.titulo }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>Nombre</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.nombres_contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          <!-- <div *ngIf=\\\"!editingContacto\\\">{{ contato.titulo }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!-- <div class=\\\"form-group col\\\">\\r\\n                      <label>Tipo de Contacto</label>\\r\\n                      <div>\\r\\n                        <div *ngIf=\\\"!editingContacto\\\">{{ contato.ds_tipo_cont }} {{ contato.ds_cont_meio }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\">\\r\\n                          <input [(ngModel)]=\\\"contato.editedds_cont_meio\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>Dirección</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.direccion_contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\"\\r\\n                            readonly>\\r\\n                          <!--  <div *ngIf=\\\"!editingContacto\\\">{{ contato.direccion }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"><input [(ngModel)]=\\\"contato.editedDireccion\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>Celular</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.celular_contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                          <!--  <div *ngIf=\\\"!editingContacto\\\">{{ contato.direccion }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"><input [(ngModel)]=\\\"contato.editedDireccion\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4 mb-3\\\">\\r\\n                        <label>Teléfono</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ contato.telefono_contacto || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\"\\r\\n                            readonly>\\r\\n                          <!--  <div *ngIf=\\\"!editingContacto\\\">{{ contato.direccion }}</div>\\r\\n                        <div *ngIf=\\\"contato.editing\\\"><input [(ngModel)]=\\\"contato.editedDireccion\\\"></div> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                      <!-- <div class=\\\"form-group col\\\">\\r\\n                      <label>Nombre</label>\\r\\n                      <div>\\r\\n                        <ng-container *ngIf=\\\"!editingContacto\\\">\\r\\n                          <div *ngIf=\\\"contato.ds_cont && contato.ds_cont.length > 1\\\" class=\\\"mr-1\\\">{{ contato.ds_cont }}\\r\\n                          </div>\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"contato.editing\\\">\\r\\n                          <input [(ngModel)]=\\\"contato.editedDsCont\\\">\\r\\n                        </ng-container>\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n                      <!-- <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"editarContacto(contato)\\\"\\r\\n                      *ngIf=\\\"!contato.editing\\\">Editar Contacto</button>\\r\\n                    <div *ngIf=\\\"contato.editing\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"\\r\\n                        (click)=\\\"cancelEditingContact(contato)\\\">Cancelar</button>\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveEditedContact(contato)\\\">Guardar\\r\\n                        Cambios</button>\\r\\n                    </div> -->\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"contatosEmpty\\\">\\r\\n                  <label> <strong>Sin datos de contacto</strong></label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </tab>\\r\\n            <tab heading=\\\"Dirección\\\">\\r\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n                <div *ngIf=\\\"contatosLoaded && !direccionEmpty\\\">\\r\\n                  <div class=\\\"col-lg-12 mb-4\\\" *ngIf=\\\"direcciones.lenght !==  0\\\">\\r\\n                    \\r\\n                    <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n                      <agm-map [latitude]=\\\"latitudPromedio\\\" [longitude]=\\\"longitudPromedio\\\" [zoom]=\\\"16\\\"\\r\\n                        class=\\\"embed-responsive-item\\\">\\r\\n                        <agm-marker *ngFor=\\\"let ubicacion of direcciones; let i = index\\\" [latitude]=\\\"ubicacion.latitud\\\"\\r\\n                          (markerClick)=\\\"verInformacion(i)\\\" [longitude]=\\\"ubicacion.longitud\\\">\\r\\n                        </agm-marker>\\r\\n                      </agm-map>\\r\\n                      <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"informacionMarcador\\\" class=\\\"info-box mt-3\\\">\\r\\n                      <h6>Información de la ubicación</h6>\\r\\n                      <p style=\\\"font-size: 13px;\\\"> <strong>Título: </strong> {{ informacionMarcador.nombre }}</p>\\r\\n                      <p style=\\\"font-size: 13px;\\\"> <strong>Dirección: </strong> {{ informacionMarcador.direccion }}</p>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"direcciones.lenght !==  0\\\">\\r\\n                    <div class=\\\"form-row\\\" *ngFor=\\\"let direccion of direcciones\\\">\\r\\n\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>título</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ direccion.ubicacion || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4\\\">\\r\\n                        <label>dirección</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ direccion.direccion || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group col-lg-4 mb-3\\\">\\r\\n                        <label>ciudad</label>\\r\\n                        <div>\\r\\n                          <input value=\\\"{{ direccion.ciudad || 'NO INFORMADO' }}\\\" class=\\\"form-control\\\" readonly>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"direccionEmpty\\\">\\r\\n                  <label> <strong>Sin datos de dirección</strong></label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </tab>\\r\\n          </tabset>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #editarCliente>\\r\\n    <editar-cliente (fecharModal)=\\\"onFecharModal($event)\\\" [datos_cliente]=\\\"cliente\\\" [vendedoresList]=\\\"vendedoresList\\\"\\r\\n      [cnaes]=\\\"cnaes\\\" [tipos_clientes]=\\\"tipos_clientes\\\" [ciudades]=\\\"ciudades\\\" [latitudPromedio]=\\\"latitudPromedio\\\"\\r\\n      [longitudPromedio]=\\\"longitudPromedio\\\" [tipos_personas] =\\\"tipos_personas\\\">\\r\\n    </editar-cliente>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</app-body>\";","import { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from '../cadastro/dados-faturamento/formulario/formulario.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialVendedoresService } from 'src/app/modules/comercial/services/vendedores.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ComercialClientesPreCadastroService } from '../pre-cadastro/pre-cadastro.service';\r\nimport { EditarClienteService } from '../editar/editar.service';\r\n\r\n\r\n\r\n\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialClientesListaComponent implements OnInit, OnDestroy {\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home',\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  setorAtividades: any = [\r\n    {\r\n      id: 'T',\r\n      descricao: 'TODOS',\r\n    },\r\n  ];\r\n\r\n  dataLoaded = false;\r\n  dadosCadastraisLoaded = false;\r\n  dadosCadastraisEmpty = false;\r\n  contatosLoaded = false;\r\n  contatosEmpty = false;\r\n  direccionEmpty = false;\r\n  searchSubmitted = false;\r\n  showAdvancedFilter = true;\r\n\r\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  matricula = this.currentUser['info']['matricula'];\r\n\r\n  ativos = 0;\r\n  inativos = 0;\r\n  potencial = 0;\r\n  arquivados = 0;\r\n\r\n  countoAtivos: number;\r\n  countoInativos: number;\r\n  countoPotencial: number;\r\n  countoArquivados: number;\r\n\r\n  formFilter: FormGroup;\r\n  buscandoPor: number;\r\n  pesquisa: string;\r\n  orderBy = 'codCliente';\r\n  orderType = 'desc';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 50;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n  modalRef: BsModalRef;\r\n  clientes: any = [];\r\n  clientesPagination: any = [];\r\n\r\n  clienteSelecionado: number;\r\n  dadosCadastrais: any = {};\r\n  contato: any = [];\r\n  contatos: any = [];\r\n  tipos_clientes: any = [];\r\n\r\n  cliente: any = [];\r\n\r\n  direcciones: any = [];\r\n  editingMode: boolean = false;\r\n  editedFields: any = {};\r\n  vendedoresList: any[] = [];\r\n  editingContacto: boolean = false;\r\n  originalVendedorId: number;\r\n  ciudades: any = [];\r\n  cnaes: any = [];\r\n  codigoClienteSap: any = [];\r\n\r\n  tipos_personas: { [key: string]: string } = {\r\n    'S': 'Sociedades',\r\n    'P': 'Privado',\r\n    'G': 'Gobierno',\r\n    'E': 'Empleado'\r\n  };\r\n\r\n\r\n  latitudPromedio: number;\r\n  longitudPromedio: number;\r\n  informacionMarcador: { ubicacion: string, direccion: string } | null = null;\r\n\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private clientesService: ComercialClientesService,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private dadosFaturamentoService: ComercialClientesCadastroDadosFaturamentoFormularioService,\r\n    private titleService: TitleService,\r\n    private detailPanelService: DetailPanelService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private modalService: BsModalService,\r\n    private preCadastroService: ComercialClientesPreCadastroService,\r\n    private editarClienteService: EditarClienteService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.getFormFilters();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Busqueda de clientes');\r\n    this.onDetailPanelEmitter();\r\n    this.getCenaes();\r\n    this.obtenerTiposClientes();\r\n    this.getCiudades();\r\n\r\n    this.vendedoresService.getVendedores().subscribe(\r\n      (response: any) => {\r\n        this.vendedoresList = response.data;\r\n        console.log(response)\r\n        if (this.vendedoresList.length > 0) {\r\n          this.editedFields.id_vendedor = this.vendedoresList[0].id;\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener la lista de vendedores:', error );\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onFecharModal(event) {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n\r\n  openModalEditar(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-lg',\r\n    });\r\n\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n\r\n        if (this.showDetailPanel === false) {\r\n          this.onCloseDetailPanel();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getCenaes(): void {\r\n    this.preCadastroService.getCenaes()\r\n      .pipe(\r\n        finalize(() => {\r\n\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response[0].responseCode === 200) {\r\n            this.cnaes = response[0].result.map(cnae => ({\r\n              id_cnae: cnae.id,\r\n              descripcion: cnae.descricao,\r\n              codigo: cnae.codigo\r\n\r\n            })\r\n            );\r\n/*             console.log(\"cnaes: \", this.cnaes);\r\n */          }\r\n        }\r\n      )\r\n  }\r\n\r\n  getCiudades(): void {\r\n    this.preCadastroService.getCiudades()\r\n      .pipe(\r\n        finalize(() => {\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response[0].responseCode === 200) {\r\n            this.ciudades = response[0].result;\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  getFormFilters(): void {\r\n    this.dadosFaturamentoService\r\n      .getSetorAtividades()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.setorAtividades.unshift({\r\n            id: 'T',\r\n            descricao: 'TODOS',\r\n          });\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.setorAtividades = response['result'];\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue = this.checkRouterParams();\r\n\r\n    this.formFilter = this.formBuilder.group({\r\n      pesquisa: [formValue['pesquisa']],\r\n      buscarPor: [formValue['buscarPor'], Validators.required],\r\n      situacao: [formValue['situacao'], Validators.required],\r\n      setorAtividade: [formValue['setorAtividade'], Validators.required],\r\n      tipoPessoa: [formValue['tipoPessoa'], Validators.required],\r\n      grupoEconomico: [formValue['grupoEconomico'], Validators.required],\r\n      segurado: [formValue['segurado'], Validators.required],\r\n      carteira: [formValue['carteira'], Validators.required],\r\n      pagina: [formValue['pagina']],\r\n      registros: [formValue['registros'], Validators.required],\r\n      cnae: [formValue['cnae'], Validators.required],\r\n    });\r\n  }\r\n  viewDetails(cliente: any): void {\r\n    this.detailPanelService.loadedFinished(false);\r\n\r\n    this.clienteSelecionado = cliente.codCliente;\r\n\r\n    this.dadosCadastraisLoaded = false;\r\n    this.dadosCadastraisEmpty = false;\r\n\r\n    this.contatosLoaded = false;\r\n    this.contatosEmpty = false;\r\n\r\n    this.clientesService\r\n      .getDetalhes(cliente.codCliente)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.dadosCadastraisLoaded = true;\r\n        })\r\n      )\r\n      .subscribe((response: JsonResponse) => {\r\n        this.informacionMarcador = null;\r\n        if (response.responseCode == 200) {\r\n          //console.log(response);\r\n          this.cliente = response.result;\r\n\r\n          this.contatosLoaded = true;\r\n          this.dadosCadastrais = response.result.datos_cliente;\r\n          if (response.result && response.result.datos_contacto && response.result.datos_contacto.length > 0) {\r\n            this.contatosEmpty = false;\r\n          } else {\r\n            this.contatos = [];\r\n            this.contatosEmpty = true;\r\n          }\r\n          if (response.result && response.result.datos_direccion && response.result.datos_direccion.length > 0) {\r\n            this.direccionEmpty = false;\r\n\r\n          } else {\r\n            this.direcciones = [];\r\n            this.direccionEmpty = true;\r\n          }\r\n          this.contatos = response.result.datos_contacto;\r\n          this.direcciones = response.result.datos_direccion;\r\n          this.editedFields.id_vendedor = this.dadosCadastrais.id_vendedor;\r\n          this.calcularPromedioUbicaciones(response.result.datos_direccion);\r\n\r\n\r\n          //console.log(\"Datos de dadosCadastrais:\", this.dadosCadastrais); // Agrega el console.log aquí\r\n        } else {\r\n          this.dadosCadastraisEmpty = true;\r\n          this.contatosEmpty = true;\r\n          this.cliente = [];\r\n\r\n        }\r\n      });\r\n\r\n    /* this.clientesService\r\n      .getContatosResumido(cliente.codCliente)\r\n      .subscribe((response: any) => {\r\n        this.contatosLoaded = true;\r\n\r\n        if (response['responseCode'] === 200) {\r\n          if (Object.keys(response['data']).length > 0) {\r\n            this.contatos = response['data'];\r\n          } else {\r\n            this.contatosEmpty = true;\r\n          }\r\n        } else {\r\n          this.contatosEmpty = true;\r\n        }\r\n      }); */\r\n  }\r\n\r\n  calcularPromedioUbicaciones(direcciones) {\r\n    let sumLatitud = 0;\r\n    let sumLongitud = 0;\r\n    if (direcciones && direcciones.length > 0) {\r\n      for (const ubicacion of direcciones) {\r\n        sumLatitud += ubicacion.latitud;\r\n        sumLongitud += ubicacion.longitud;\r\n      }\r\n      this.latitudPromedio = sumLatitud / this.direcciones.length;\r\n      this.longitudPromedio = sumLongitud / this.direcciones.length;\r\n    }\r\n\r\n  }\r\n\r\n  obtenerTiposClientes() {\r\n    this.clientesService.getTipoClientes()\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 200) {\r\n            this.tipos_clientes = response.result;\r\n\r\n          } else {\r\n\r\n          }\r\n        },\r\n        (error) => {\r\n        }\r\n      )\r\n  }\r\n\r\n  verInformacion(index: number) {\r\n    const ubicacion = this.direcciones[index];\r\n    this.informacionMarcador = {\r\n      // @ts-ignore: Ignorar error TS2339\r\n      nombre: ubicacion.ubicacion || 'NO INFORMADO',\r\n      direccion: ubicacion.direccion || 'NO INFORMADO'\r\n    };\r\n  }\r\n\r\n  onCloseDetailPanel() {\r\n    this.resetClienteSelecionado();\r\n\r\n    setTimeout(() => {\r\n      this.dadosCadastraisLoaded = false;\r\n      this.dadosCadastraisEmpty = false;\r\n      this.dadosCadastrais = {};\r\n\r\n      this.contatosEmpty = false;\r\n      this.contatosLoaded = false;\r\n      this.contatos = [];\r\n    }, 500);\r\n  }\r\n  searchInputValue: string;\r\n\r\n  checkRouterParams(): Object {\r\n    var aux_cartera;\r\n    if (this.matricula == 1) {\r\n      aux_cartera = 'T'\r\n    } else {\r\n      aux_cartera = 'S'\r\n    }\r\n    let formValue = {\r\n      pesquisa: this.searchInputValue, // aquí se actualizaría el valor de pesquisa\r\n      buscarPor: 1,\r\n      situacao: 'T',\r\n      setorAtividade: 'T',\r\n      tipoPessoa: 'T',\r\n      grupoEconomico: 'T',\r\n      segurado: 'T',\r\n      carteira: aux_cartera,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.setSubmittedSearch();\r\n          this.search(params);\r\n\r\n          if (params['registros']) {\r\n            this.itemsPerPage = params['registros'];\r\n          }\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          this.listStatus();\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  editarContacto(contato: any) {\r\n    contato.editedIdCont = contato.id_cont;\r\n    contato.editedContacto = contato.contacto;\r\n    contato.editedds_cont_meio = contato.ds_cont_meio;\r\n    contato.editedDireccion = contato.direccion;\r\n    contato.editedDsCont = contato.ds_cont;\r\n    contato.originalDsTipoCont = contato.ds_tipo_cont;\r\n    contato.editing = true;\r\n    this.editingContacto = true;\r\n  }\r\n\r\n  cancelEditingContact(contato: any) {\r\n    contato.editing = false; // Salir del modo de edición\r\n    this.editingContacto = false;\r\n  }\r\n\r\n  saveEditedContact(contato: any) {\r\n    const codigoCliente = contato.id_cliente;\r\n\r\n    const editedData = {\r\n      id_cont: contato.editedIdCont !== undefined ? contato.editedIdCont : contato.id_cont,\r\n      contacto: contato.editedContacto !== undefined ? contato.editedContacto : contato.contacto,\r\n      ds_tipo_cont: contato.originalDsTipoCont,\r\n      direccion: contato.editedDireccion !== undefined ? contato.editedDireccion : contato.direccion,\r\n      ds_cont: contato.editedDsCont !== undefined ? contato.editedDsCont : contato.ds_cont,\r\n    };\r\n\r\n    const tipo_medio = contato.originalDsTipoCont === 'TELEFONO' ? 5 : 2;\r\n\r\n    if (contato.originalDsTipoCont === 'TELEFONO') {\r\n      editedData['telefono_contacto'] = contato.editedds_cont_meio !== undefined ? contato.editedds_cont_meio : contato.ds_cont_meio;\r\n    } else {\r\n      editedData['celular_contacto'] = contato.editedds_cont_meio !== undefined ? contato.editedds_cont_meio : contato.ds_cont_meio;\r\n    }\r\n\r\n    editedData['tipo_medio'] = tipo_medio;\r\n    editedData['id_cont_meio'] = contato.id_cont_meio;\r\n    editedData['id_cont'] = contato.id_cont;\r\n\r\n    this.clientesService.sapUpdateContacto(codigoCliente, editedData).subscribe(\r\n      (response) => {\r\n        console.log('Cambios en el contacto guardados exitosamente:', response);\r\n        contato.editing = false; // Salir del modo de edición\r\n        this.editingContacto = false;\r\n        // Actualizar los valores del contacto en el objeto local\r\n        contato.contacto = editedData.contacto;\r\n        contato.ds_tipo_cont = editedData.ds_tipo_cont;\r\n        contato.ds_cont_meio = editedData['telefono_contacto'] || editedData['celular_contacto'];\r\n        contato.direccion = editedData.direccion;\r\n        contato.ds_cont = editedData.ds_cont;\r\n\r\n        this.clientesService.getDetalhes(codigoCliente);\r\n      },\r\n      (error) => {\r\n        console.error('Error al guardar cambios en el contacto:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  mapTipoPessoaToTipoPersona(tipoPessoa: string): string {\r\n    const map = {\r\n      'S': 'Sociedades',\r\n      'P': 'Privado',\r\n      'G': 'Gobierno',\r\n      'E': 'Empleado'\r\n      // Agrega más mapeos si es necesario...\r\n    };\r\n\r\n    return map[tipoPessoa] || '';\r\n  }\r\n  tipoPersonaOptions = [\r\n    { label: 'Sociedades', value: 'S' },\r\n    { label: 'Privado', value: 'P' },\r\n    { label: 'Gobierno', value: 'G' },\r\n    { label: 'Empleado', value: 'E' }\r\n  ];\r\n\r\n  getTipoPersonaLabel(value: string): string {\r\n    const option = this.tipoPersonaOptions.find(opt => opt.value === value);\r\n    return option ? option.label : 'NO INFORMADO';\r\n  }\r\n  getVendedorNome(id_vendedor: number): string {\r\n    if (isNaN(id_vendedor)) {\r\n      return 'NO INFORMADO';\r\n    }\r\n\r\n    const vendedor = this.vendedoresList.find(v => v.id_vendedor === id_vendedor);\r\n    return vendedor ? vendedor.nome : 'NO INFORMADO';\r\n  }\r\n\r\n  enableEditing() {\r\n    this.editarClienteService.showModal();\r\n\r\n\r\n    /* this.editingMode = true;\r\n\r\n    // Guardar los valores actuales de los campos editables\r\n    this.editedFields.carnet = this.dadosCadastrais.carnet;\r\n    this.editedFields.nit = this.dadosCadastrais.nit;\r\n    this.editedFields.nombres = this.dadosCadastrais.nombre;\r\n    this.editedFields.razonSocial = this.dadosCadastrais.razon_social;\r\n    this.editedFields.ciudad = this.dadosCadastrais.ciudad;\r\n    this.editedFields.NombreVendedor = this.dadosCadastrais.NombreVendedor;\r\n    this.editedFields.sucursal = this.dadosCadastrais.sucursal;\r\n    this.editedFields.direccion = this.dadosCadastrais.direccion;\r\n    this.editedFields.id_cliente = this.dadosCadastrais.id_cliente;\r\n    this.editedFields.tipo_persona = this.dadosCadastrais.id_tipo_persona;\r\n    this.editedFields.codigo_cliente = this.clientes.codigo_cliente;\r\n    this.editedFields.tipo_pessoa = this.dadosCadastrais.tipo_pessoa;\r\n    this.editedFields.telefono = this.dadosCadastrais.telefono;\r\n    this.editedFields.celular = this.dadosCadastrais.celular;\r\n    this.editedFields.id_rubro = this.dadosCadastrais.id_rubro;\r\n\r\n    // this.editedFields.nit = this.dadosCadastrais.nit;\r\n    this.editedFields.id_vendedor = this.dadosCadastrais.id_vendedor;\r\n    this.originalVendedorId = this.dadosCadastrais.id_vendedor; */\r\n    // Repite para otros campos editables...\r\n  }\r\n  cancelEditing() {\r\n    // Reinicia los campos editados a sus valores originales\r\n    this.editedFields = {};\r\n    this.originalVendedorId = null;\r\n\r\n    // Desactiva el modo de edición\r\n    this.editingMode = false;\r\n  }\r\n  saveChanges() {\r\n    const codigoCliente = this.dadosCadastrais.id_cliente;\r\n    const codigo_cliente = this.dadosCadastrais.codigo_cliente;\r\n    const editedData = {\r\n      ...this.editedFields,\r\n      codigo_cliente: this.dadosCadastrais.codigo_cliente,\r\n      ubicacion: [\r\n        {\r\n          direccion: this.editedFields.direccion\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.editedFields.tipo_persona = this.mapTipoPessoaToTipoPersona(this.editedFields.tipo_pessoa);\r\n\r\n\r\n    if (this.editedFields.id_vendedor !== this.originalVendedorId) {\r\n      editedData.id_vendedor = this.editedFields.id_vendedor;\r\n    }\r\n\r\n    console.log('Datos antes de enviarlos a sapUpdateClient:', editedData);\r\n    // Llamar a la función para guardar los cambios\r\n    this.clientesService.sapUpdateClient(codigoCliente, editedData).subscribe(\r\n      (response) => {\r\n        console.log('Cambios guardados exitosamente:', response);\r\n        // Limpiar los campos editados y desactivar el modo de edición\r\n        this.editedFields = {};\r\n        this.editingMode = false;\r\n        // Llamar a la función para obtener los detalles actualizados\r\n        this.clientesService.getDetalhes(codigoCliente);\r\n      },\r\n      (error) => {\r\n        console.error('Error al guardar cambios:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  listStatus(): void {\r\n    this.clientesService.getStatus().subscribe({\r\n      next: (response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.setStatus(response['result']);\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.pnotifyService.error();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  setStatus(status: any): void {\r\n    for (let i = 0; i < status.length; i++) {\r\n      if (status[i]['situacao'] == 'Ativo') {\r\n        this.ativos = status[i]['quantidade'];\r\n      } else if (status[i]['situacao'] == 'Inativo' || status[i]['situacao'] == null) {\r\n        this.inativos += status[i]['quantidade'];\r\n      } else if (status[i]['situacao'] == 'Potenci') {\r\n        this.potencial = status[i]['quantidade'];\r\n      } else if (status[i]['situacao'] == 'Arquivo') {\r\n        this.arquivados = status[i]['quantidade'];\r\n      }\r\n    }\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'desc') {\r\n        this.orderType = 'asc';\r\n      } else if (this.orderType == 'asc') {\r\n        this.orderType = 'desc';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'asc';\r\n    }\r\n    this.onFilter();\r\n  }\r\n\r\n  onAdvancedFilter(): void {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  filterByStatus(status: string): void {\r\n    this.formFilter.get('situacao').setValue(status);\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    let params = this.formFilter.value;\r\n    params['orderBy'] = this.orderBy;\r\n    params['orderType'] = this.orderType;\r\n\r\n    this.itemsPerPage = this.formFilter.value['registros'];\r\n    this.currentPage = 1;\r\n    this.setRouterParams(params);\r\n  }\r\n\r\n  setSubmittedSearch(): void {\r\n    this.searchSubmitted = true;\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n      queryParamsHandling: 'merge',\r\n    });\r\n    this.setSubmittedSearch();\r\n    this.search(params);\r\n  }\r\n\r\n  search(params: any): void {\r\n    if (this.searchSubmitted) {\r\n      this.loaderNavbar = true;\r\n      this.dataLoaded = false;\r\n      this.detailPanelService.hide();\r\n      this.clientes = [];\r\n      this.buscandoPor = params['buscarPor'];\r\n      this.pesquisa = params['pesquisa'];\r\n\r\n      this.clientesService\r\n        .getClientes(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderNavbar = false;\r\n            this.dataLoaded = true;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n            if (response['responseCode'] === 200) {\r\n              this.clientes = response['result']['analitico'].slice(\r\n                0,\r\n                this.itemsPerPage\r\n              );\r\n              this.totalItems = this.clientes[0]['total'];\r\n              this.setStatus(response['result']['sintetico']);\r\n            } else if (response['responseCode'] === 204) {\r\n              this.ativos = 0;\r\n              this.inativos = 0;\r\n              this.potencial = 0;\r\n              this.arquivados = 0;\r\n            }\r\n          },\r\n          (error: any) => {\r\n            this.pnotifyService.error();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  classStatusBorder(status: string): string {\r\n    let borderClass: string;\r\n\r\n    if (status == 'Ativo') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'Inativo') {\r\n      borderClass = 'border-danger';\r\n    } else if (status == 'Potenci') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'Arquivo') {\r\n      borderClass = 'border-secondary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  viewRegister(cliente: any): void {\r\n    if (cliente['podeAcessar'] == 1 || cliente['podeAcessar'] == 0) {\r\n      this.router.navigate(['../Detalles', cliente.codCliente], {\r\n        relativeTo: this.activatedRoute,\r\n\r\n      });\r\n    } else {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera.');\r\n    }\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent) {\r\n    if (this.formFilter.value['pagina'] != event.page) {\r\n      this.detailPanelService.hide();\r\n      this.resetClienteSelecionado();\r\n      this.formFilter.value['pagina'] = event.page;\r\n      this.onFilter();\r\n    }\r\n  }\r\n\r\n  onPreCadastroCpfCnpj() {\r\n    let pesquisa = this.pesquisa.replace(/\\D/g, '');\r\n\r\n    if (pesquisa.length === 11) {\r\n      return { cpf: pesquisa };\r\n    } else if (pesquisa.length === 14) {\r\n      return { cnpj: pesquisa };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  handleCounter(value: any) {\r\n    return value.toFixed(0);\r\n  }\r\n\r\n  resetClienteSelecionado() {\r\n    this.clienteSelecionado = null;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2FjdW11bG9zLW1lbnNhaXMvYWN1bXVsb3MtbWVuc2Fpcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-detalhes',\r\n  templateUrl: './detalhes.component.html',\r\n  styleUrls: ['./detalhes.component.scss']\r\n})\r\nexport class ComercialClientesDetalhesComponent implements OnInit {\r\n  loaderNavbar: boolean = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home'\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n      routerLink: '/comercial/clientes/lista'\r\n    },\r\n    {\r\n      descricao: 'Detalles'\r\n    }\r\n  ];\r\n\r\n  cliente: any = {};\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private pnotifyService: PNotifyService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.activatedRoute.snapshot.data['response']['responseCode'] === 200) {\r\n      this.cliente = this.activatedRoute.snapshot.data['response']['result'];\r\n      this.registrarAcesso();\r\n      this.titleService.setTitle('Detalhes');\r\n    } else if (\r\n      this.activatedRoute.snapshot.data['response']['responseCode'] === 403\r\n    ) {\r\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\r\n      this.router.navigate(['/comercial/home']);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  classStatusBadge(status: string) {\r\n    let badgeClass = '';\r\n\r\n    if (status == 'Ativo') {\r\n      badgeClass = 'badge-success';\r\n    } else if (status == 'Inativo') {\r\n      badgeClass = 'badge-danger';\r\n    } else if (status == 'Potenci') {\r\n      badgeClass = 'badge-primary';\r\n    } else if (status == 'Arquivo') {\r\n      badgeClass = 'badge-secondary';\r\n    }\r\n\r\n    return badgeClass;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CnpjService {\r\n  private readonly API = `http://23.254.204.187/api/common/services/cnpj`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getData(cnpj: string) {\r\n    cnpj = cnpj.replace(/\\D/g, '');\r\n\r\n    return this.http.get(`${this.API}/${cnpj}`).pipe(\r\n      timeout(5000),\r\n      catchError(e => {\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Proposta para análise de crédito\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'formulario'\\\"\\r\\n    [disabled]=\\\"!form.valid\\\"\\r\\n    (click)=\\\"onSubmit()\\\">\\r\\n    Generar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\r\\n    (click)=\\\"onCancel()\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\r\\n    (click)=\\\"onDownload()\\\">\\r\\n    Download\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row justify-content-center\\\" *ngIf=\\\"tipoVisao == 'formulario'\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <div class=\\\"mtc-title\\\">Datos del cliente</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"razaoSocial\\\">Razon social</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"razaoSocial\\\"\\r\\n              formControlName=\\\"razaoSocial\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"dataSolicitacao\\\">Fecha de la solicitud</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataSolicitacao\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataSolicitacao\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('dataSolicitacao') + ' ' + onFieldRequired('dataSolicitacao')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataSolicitacao')\\\" message=\\\"Data de solicitação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"codCliente\\\">Código de cliente</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codCliente\\\"\\r\\n              formControlName=\\\"codCliente\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"codClienteDBA\\\">Código SAP</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codClienteDBA\\\"\\r\\n              formControlName=\\\"codClienteDBA\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"limiteCreditoAtual\\\">Limite de crédito atual</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"limiteCreditoAtual\\\"\\r\\n              formControlName=\\\"limiteCreditoAtual\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"setorAtividade\\\">Setor de atividades</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"setorAtividade\\\"\\r\\n              formControlName=\\\"setorAtividade\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"dataUltimaVisita\\\">Fecha de la última visita</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataUltimaVisita\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataUltimaVisita\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"instalacoes\\\">Instalaciones</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"instalacoes\\\"\\r\\n              formControlName=\\\"instalacoes\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"numFuncionarios\\\">Número de empleados</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"numFuncionarios\\\"\\r\\n              formControlName=\\\"numFuncionarios\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 0 }\\\"\\r\\n              (input)=\\\"onInput()\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"limiteCreditoSolicitado\\\">Limite de crédito solicitado</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"limiteCreditoSolicitado\\\"\\r\\n              formControlName=\\\"limiteCreditoSolicitado\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('limiteCreditoSolicitado') + ' ' + onFieldRequired('limiteCreditoSolicitado')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('limiteCreditoSolicitado')\\\" message=\\\"Limite de crédito solicitado é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"condicaoPagto\\\">Condiciones de pago</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"condicaoPagto\\\"\\r\\n              formControlName=\\\"condicaoPagto\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('condicaoPagto') + ' ' + onFieldRequired('condicaoPagto')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('condicaoPagto')\\\" message=\\\"Condição de pagamento é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <hr class=\\\"mt-0\\\">\\r\\n            <div class=\\\"mtc-title\\\">Solicitud de datos</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeVendedor\\\">Vendedor(a)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeVendedor\\\"\\r\\n              formControlName=\\\"nomeVendedor\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"telefoneVendedor\\\">Teléfono</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"telefoneVendedor\\\"\\r\\n              formControlName=\\\"telefoneVendedor\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"gestorVendas\\\">Jefe de ventas</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"gestorVendas\\\"\\r\\n              formControlName=\\\"gestorVendas\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('gestorVendas') + ' ' + onFieldRequired('gestorVendas')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('gestorVendas')\\\" message=\\\"Gestor(a) de venda é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeEscritorio\\\">Oficina de ventas</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeEscritorio\\\"\\r\\n              formControlName=\\\"nomeEscritorio\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"fornecedores\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Proveedores</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddFornecedor()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of fornecedores.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-6\\\">\\r\\n                  <label for=\\\"nome\\\">Nobre</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"nome\\\"\\r\\n                    formControlName=\\\"nome\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('fornecedores', i, 'nome') + ' ' + onNestedFieldRequired('fornecedores', i, 'nome')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-5\\\">\\r\\n                  <label for=\\\"telefone\\\">Telefono</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"telefone\\\"\\r\\n                    formControlName=\\\"telefone\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteFornecedor(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"clientes\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Clientes</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddCliente()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"clientes.controls.length > 0\\\">\\r\\n            <div class=\\\"form-row\\\" *ngFor=\\\"let item of clientes.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n              <div class=\\\"form-group col mb-0\\\">\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col-11\\\">\\r\\n                    <label for=\\\"nome\\\">Nombre</label>\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      id=\\\"nome\\\"\\r\\n                      formControlName=\\\"nome\\\"\\r\\n                      (input)=\\\"onInput()\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn-icon\\\"\\r\\n                      (click)=\\\"onDeleteCliente(i)\\\">\\r\\n                      <i class=\\\"fas fa-trash\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mb-3\\\" *ngIf=\\\"clientes.controls.length == 0\\\">\\r\\n            <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"bancos\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Bancos</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddBanco()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of bancos.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"nome\\\">Nome</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"nome\\\"\\r\\n                    formControlName=\\\"nome\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'nome') + ' ' + onNestedFieldRequired('bancos', i, 'nome')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-2\\\">\\r\\n                  <label for=\\\"agencia\\\">Agencia</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"agencia\\\"\\r\\n                    formControlName=\\\"agencia\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'agencia') + ' ' + onNestedFieldRequired('bancos', i, 'agencia')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"contaCorrente\\\">Cuenta corriente</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"contaCorrente\\\"\\r\\n                    formControlName=\\\"contaCorrente\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'contaCorrente') + ' ' + onNestedFieldRequired('bancos', i, 'contaCorrente')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"telefone\\\">Telefono</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"telefone\\\"\\r\\n                    formControlName=\\\"telefone\\\"\\r\\n                    telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'telefone') + ' ' + onNestedFieldRequired('bancos', i, 'telefone')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteBanco(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <hr class=\\\"mt-0\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <label>Ventas concentradas</label>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                  <input\\r\\n                    type=\\\"radio\\\"\\r\\n                    id=\\\"vendasConcentradasSim\\\"\\r\\n                    class=\\\"custom-control-input\\\"\\r\\n                    formControlName=\\\"vendasConcentradas\\\"\\r\\n                    value=\\\"Sim\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"vendasConcentradasSim\\\">Sim</label>\\r\\n                </div>\\r\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                  <input\\r\\n                    type=\\\"radio\\\"\\r\\n                    id=\\\"vendasConcentradasNao\\\"\\r\\n                    class=\\\"custom-control-input\\\"\\r\\n                    formControlName=\\\"vendasConcentradas\\\"\\r\\n                    value=\\\"Não\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"vendasConcentradasNao\\\">Não</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"previsaoCompraTon\\\">Compra mensual estimada (Ton)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"previsaoCompraTon\\\"\\r\\n              formControlName=\\\"previsaoCompraTon\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"previsaoCompraValor\\\">Compra mensual estimada (R$)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"previsaoCompraValor\\\"\\r\\n              formControlName=\\\"previsaoCompraValor\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"faturamentoMedio\\\">Facturación media mensual</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"faturamentoMedio\\\"\\r\\n              formControlName=\\\"faturamentoMedio\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"parecerVendedor\\\">Opinión del vendedor</label>\\r\\n            <textarea\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"parecerVendedor\\\"\\r\\n              formControlName=\\\"parecerVendedor\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('parecerVendedor') + ' ' + onFieldRequired('parecerVendedor')\\\">\\r\\n            </textarea>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('parecerVendedor')\\\" message=\\\"Parecer do vendedor é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row justify-content-center pt-5\\\" id=\\\"impressao-ficha-pac\\\" *ngIf=\\\"tipoVisao == 'ficha'\\\">\\r\\n    <div class=\\\"col-9\\\">\\r\\n      <h1>Propuesta de análisis de créditos (PAC)</h1>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Dados do cliente</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Razon social:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.razaoSocial == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.razaoSocial != null\\\">{{ dataFicha.razaoSocial }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Fecha de la solicitud:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.dataSolicitacao == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.dataSolicitacao != null\\\">{{ dataFicha.dataSolicitacao }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Código de cliente (TID):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.codCliente == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.codCliente != null\\\">{{ dataFicha.codCliente }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Código de cliente (SAP):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.codClienteDBA == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.codClienteDBA != null\\\">{{ dataFicha.codClienteDBA }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Limite de crédito actual:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoAtual == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoAtual == null\\\">{{ dataFicha.limiteCreditoAtual | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Sector de actividade:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.setorAtividade == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.setorAtividade != null\\\">{{ dataFicha.setorAtividade }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Fecha de la última visita:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.dataUltimaVisita == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.dataUltimaVisita != null\\\">{{ dataFicha.dataUltimaVisita }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Instalaciones:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.instalacoes == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.instalacoes != null\\\">{{ dataFicha.instalacoes }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Número de funcionários:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.numFuncionarios == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.numFuncionarios == null\\\">{{ dataFicha.numFuncionarios }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Propuestas</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Limite de crédito solicitado:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoSolicitado == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.limiteCreditoSolicitado != null\\\">{{ dataFicha.limiteCreditoSolicitado | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Condiciones de pago:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto != null\\\">{{ dataFicha.condicaoPagto }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Datos del solicitante</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Vendedor(a):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.condicaoPagto != null\\\">{{ dataFicha.nomeVendedor }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Gestor(a):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas != null\\\">{{ dataFicha.gestorVendas | uppercase }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Telefono:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.gestorVendas != null\\\">{{ dataFicha.telefoneVendedor }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Oficina de ventas:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.nomeEscritorio == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.nomeEscritorio != null\\\">{{ dataFicha.nomeEscritorio }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Principales proveedores</div>\\r\\n        <div *ngIf=\\\"dataFicha.fornecedores.length == 0\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dataFicha.fornecedores.length > 0\\\">\\r\\n          <div class=\\\"row mt-2\\\" *ngFor=\\\"let item of dataFicha.fornecedores\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Nombre:</strong>\\r\\n                <span *ngIf=\\\"item.nome == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.nome != null\\\">{{ item.nome | uppercase }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Telefono:</strong>\\r\\n                <span *ngIf=\\\"item.telefone == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.telefone != null\\\">{{ item.telefone }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Principales clientes</div>\\r\\n        <div *ngIf=\\\"dataFicha.clientes.length == 0\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dataFicha.clientes.length > 0\\\">\\r\\n          <div *ngFor=\\\"let item of dataFicha.clientes\\\">\\r\\n            <p class=\\\"mt-2 mb-0\\\">\\r\\n              <strong class=\\\"mr-2\\\">Nome:</strong> {{ item.nome | uppercase }}\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Principaless bancos</div>\\r\\n        <div *ngIf=\\\"dataFicha.bancos.length == 0\\\">Sin informacion</div>\\r\\n        <div *ngIf=\\\"dataFicha.bancos.length > 0\\\">\\r\\n          <div class=\\\"row\\\" *ngFor=\\\"let item of dataFicha.bancos\\\">\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Banco:</strong>\\r\\n                <span *ngIf=\\\"item.nome == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.nome != null\\\">{{ item.nome | uppercase }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Agencia:</strong>\\r\\n                <span *ngIf=\\\"item.agencia == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.agencia != null\\\">{{ item.agencia }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Cuenta corrinte:</strong>\\r\\n                <span *ngIf=\\\"item.contaCorrente == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.contaCorrente != null\\\">{{ item.contaCorrente }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <p class=\\\"mt-2 mb-0\\\">\\r\\n                <strong class=\\\"mr-2\\\">Telefono:</strong>\\r\\n                <span *ngIf=\\\"item.telefone == null\\\">Sin informacion</span>\\r\\n                <span *ngIf=\\\"item.telefone != null\\\">{{ item.telefone }}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\r\\n        <div class=\\\"mtc-title\\\">Datos financieros</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Vendas concretadas:</strong>\\r\\n          <span *ngIf=\\\"dataFicha.vendasConcentradas == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.vendasConcentradas != null\\\">{{ dataFicha.vendasConcentradas }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Previsión mensual de compras (Ton):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraTon == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraTon != null\\\">{{ dataFicha.previsaoCompraTon | number:'1.3-3' }}t</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Previsión mensual de compras (R$):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraValor == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.previsaoCompraValor != null\\\">{{ dataFicha.previsaoCompraValor | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <strong class=\\\"mr-2\\\">Facturación media mensual (R$):</strong>\\r\\n          <span *ngIf=\\\"dataFicha.faturamentoMedio == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.faturamentoMedio != null\\\">{{ dataFicha.faturamentoMedio | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"jumbotron p-3 mb-0\\\">\\r\\n        <div class=\\\"mtc-title\\\">Opinión del vendedor</div>\\r\\n        <p class=\\\"mt-2 mb-0\\\">\\r\\n          <span *ngIf=\\\"dataFicha.parecerVendedor == null\\\">Sin informacion</span>\\r\\n          <span *ngIf=\\\"dataFicha.parecerVendedor != null\\\">{{ dataFicha.parecerVendedor | uppercase }}</span>\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// Services\r\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-clientes-historico-financeiro-notas-promissorias',\r\n  templateUrl: './notas-promissorias.component.html',\r\n  styleUrls: ['./notas-promissorias.component.scss']\r\n})\r\nexport class ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent\r\n  implements OnInit {\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  notasPromissorias: any = [];\r\n  notasPromissoriasLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.parent.params.subscribe(params => {\r\n      this.getNotasPromissorias(params['id']);\r\n    });\r\n  }\r\n\r\n  getNotasPromissorias(id: any) {\r\n    this.historicoFinanceiroService\r\n      .getNotasPromissorias(id)\r\n      .subscribe((response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.notasPromissorias = response['result'];\r\n        }\r\n        this.notasPromissoriasLoaded = true;\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string) {\r\n    let borderClass = '';\r\n\r\n    if (status == 'BAIXADA') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'QUITADA') {\r\n      borderClass = 'border-primary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2hpc3Rvcmljby1maW5hbmNlaXJvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Dias não úteis\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dataInicial\\\">Fecha inicial</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataInicial\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataInicial\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired('dataInicial')\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial') == 'required'\\\" message=\\\"Data Inicial é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dataFinal\\\">Fecha final</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataFinal\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataFinal\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired('dataFinal')\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal') == 'required'\\\" message=\\\"Data Final é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Cod. Material</th>\\r\\n            <th scope=\\\"col\\\">Material</th>\\r\\n            <th scope=\\\"col\\\">Línea / Clase</th>\\r\\n            <th scope=\\\"col\\\">Ton. Vendidas</th>\\r\\n            <th scope=\\\"col\\\">Nota Fiscal</th>\\r\\n            <th scope=\\\"col\\\">Dt. Ultima Compra</th>\\r\\n            <th scope=\\\"col\\\">Precio Unitário</th>\\r\\n            <th scope=\\\"col\\\">Precio Total</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let ultimoPreco of dadosPagination; let i = index\\\">\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.codMaterial }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.nomeMaterial | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.linha }} / {{ ultimoPreco.classe }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.qtdeToneladasVendidas | number:'1.3-3' }} ton \\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.nrNotaFiscal }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.dataUltimaCompra | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.precoUnitarioMaterial | currency:'BRL':'symbol':'1.2-2' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\">\\r\\n              {{ ultimoPreco.precoTotalMaterial | currency:'BRL':'symbol':'1.2-2' }}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\";"],"sourceRoot":"webpack:///"}