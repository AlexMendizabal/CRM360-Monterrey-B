{"version":3,"sources":["./src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.scss","./src/app/modules/comercial/clientes/detalhes/detalhes.component.scss","./src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.html","./src/app/modules/comercial/clientes/detalhes/detalhes.component.html","./src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.html","./src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.scss","./src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.scss","./src/app/modules/comercial/services/vendedores.service.ts","./src/app/shared/services/core/functions.service.ts","./src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.html","./src/app/modules/comercial/services/clientes.service.ts","./src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.html","./src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.service.ts","./src/app/modules/comercial/clientes/clientes-routing.module.ts","./src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.html","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.scss","./src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito-resolver.guard.ts","./src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.module.ts","./src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.ts","./src/app/modules/comercial/clientes/clientes.module.ts","./src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.html","./src/app/modules/comercial/clientes/historico-financeiro/detalhes/detalhes.component.scss","./src/app/modules/comercial/clientes/clientes-resolver.guard.ts","./src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.scss","./src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.html","./src/app/shared/services/core/date.service.ts","./src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.service.ts","./src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.service.ts","./src/app/modules/comercial/clientes/historico-financeiro/debitos/debitos.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.ts","./src/app/modules/comercial/comercial.service.ts","./src/app/shared/services/core/form-rules.service.ts","./src/app/modules/comercial/clientes/lista/lista.component.scss","./src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.scss","./src/app/modules/comercial/clientes/pre-cadastro/pre-cadastro.component.ts","./src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/resumo/resumo.component.ts","./src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.scss","./src/app/modules/comercial/clientes/detalhes/detalhes-resolver.guard.ts","./src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro-routing.module.ts","./src/app/modules/comercial/clientes/historico-financeiro/corte-dobra/corte-dobra.component.scss","./src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.html","./src/app/modules/comercial/clientes/cadastro/dados-faturamento/formulario/formulario-rules-resolver.guard.ts","./src/app/modules/comercial/clientes/historico-financeiro/materiais-duplicata/materiais-duplicata.component.html","./src/app/modules/comercial/clientes/lista/lista.component.html","./src/app/modules/comercial/clientes/cadastro/dados-faturamento/formulario/formulario.service.ts","./src/app/modules/comercial/clientes/lista/lista.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/acumulos-mensais/acumulos-mensais.component.scss","./src/app/modules/comercial/clientes/detalhes/detalhes.component.ts","./src/app/shared/services/ws/cnpj.service.ts","./src/app/modules/comercial/clientes/proposta-analise-credito/proposta-analise-credito.component.html","./src/app/modules/comercial/clientes/historico-financeiro/notas-promissorias/notas-promissorias.component.ts","./src/app/modules/comercial/clientes/historico-financeiro/historico-financeiro.component.scss","./src/app/modules/comercial/clientes/ultimos-precos/ultimos-precos.component.html"],"names":[],"mappings":"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","file":"clientes-clientes-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2RlYml0b3MvZGViaXRvcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Pre-Registro\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-6\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <div class=\\\"btn-group btn-group-sm\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-light active\\\"\\n                [ngClass]=\\\"{'active': tipoPessoa == 'F'}\\\"\\n                (click)=\\\"setType('F')\\\">\\n                <strong>Persona fisica</strong>\\n              </button>\\n              \\n              <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-light active\\\"\\n              [ngClass]=\\\"{'active': tipoPessoa == 'J'}\\\"\\n              (click)=\\\"setType('J')\\\">\\n              <strong>persona Juridica</strong>\\n            </button>\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"tipoPessoa == 'F'\\\">\\n            <label for=\\\"cpf\\\"> CARNET DE IDENTIDAD </label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"cpf\\\"\\n              formControlName=\\\"cpf\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('cpf') + ' ' + onFieldRequired('cpf')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cpf') == 'required'\\\" message=\\\"Carnet inválido.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"tipoPessoa == 'J'\\\">\\n            <label for=\\\"cnpj\\\">NIT</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"cnpj\\\"\\n              formControlName=\\\"cnpj\\\"\\n              (input)=\\\"onInput()\\\"\\n              (blur)=\\\"validateCNPJ()\\\"\\n              [ngClass]=\\\"onFieldError('cnpj') + ' ' + onFieldRequired('cnpj')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnpj') == 'required'\\\" message=\\\"NIT inválido.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"vendedor\\\">Atribuir vendedor</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"vendedores\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"vendedor\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"id\\\"\\n              formControlName=\\\"vendedor\\\"\\n              (change)=\\\"onInput()\\\">\\n            </ng-select>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"tipoPessoa == 'F'\\\">\\n            <label for=\\\"nome\\\">Nombre</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nome\\\"\\n              formControlName=\\\"nome\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('nome') + ' ' + onFieldRequired('nome')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome') == 'required'\\\" message=\\\"Nombre es obligatorio.\\\"></invalid-form-control>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome') == 'maxlength'\\\" [message]=\\\"maxLengthMessages.nome\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"tipoPessoa == 'F'\\\">\\n            <label for=\\\"sobrenome\\\">Apellido</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"sobrenome\\\"\\n              formControlName=\\\"sobrenome\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('sobrenome') + ' ' + onFieldRequired('sobrenome')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('sobrenome') == 'required'\\\" message=\\\"Apellido es obligatorio.\\\"></invalid-form-control>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('sobrenome') == 'maxlength'\\\" [message]=\\\"maxLengthMessages.sobrenome\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"tipoPessoa == 'J'\\\">\\n            <label for=\\\"razaoSocial\\\">Razon social</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"razaoSocial\\\"\\n              formControlName=\\\"razaoSocial\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('razaoSocial') + ' ' + onFieldRequired('razaoSocial')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial') == 'required'\\\" message=\\\"Razon social es obligatorio.\\\"></invalid-form-control>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial') == 'maxlength'\\\" [message]=\\\"maxLengthMessages.razaoSocial\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"tipoPessoa == 'J'\\\">\\n            <label for=\\\"nomeFantasia\\\">Nombre</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeFantasia\\\"\\n              formControlName=\\\"nomeFantasia\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('nomeFantasia') + ' ' + onFieldRequired('nomeFantasia')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeFantasia') == 'required'\\\" message=\\\"Nombre es obligatorio.\\\"></invalid-form-control>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeFantasia') == 'maxlength'\\\" [message]=\\\"maxLengthMessages.nomeFantasia\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\" *ngIf=\\\"tipoPessoa == 'J'\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"cnae\\\">CNAE (Actividad Economica)</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"cnaes\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"cnae\\\"\\n              bindLabel=\\\"descricao\\\"\\n              bindValue=\\\"id\\\"\\n              formControlName=\\\"cnae\\\"\\n              (change)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('cnae') + ' ' + onFieldRequired('cnae')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnae') == 'required'\\\" message=\\\"CNAE es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"emailNfe\\\">E-mail NFE</label>\\n            <input\\n              type=\\\"email\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"emailNfe\\\"\\n              formControlName=\\\"emailNfe\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('emailNfe') + ' ' + onFieldRequired('emailNfe')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('emailNfe') == 'required'\\\" message=\\\"E-mail NFE es obligatorio.\\\"></invalid-form-control>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('emailNfe') == 'maxlength'\\\" [message]=\\\"maxLengthMessages.emailNfe\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"telefone\\\">Telefono</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"telefone\\\"\\n              formControlName=\\\"telefone\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('telefone') + ' ' + onFieldRequired('telefone')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('telefone') == 'required'\\\" message=\\\"Telefono es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <!-- <label for=\\\"tipopessoa\\\">Tipo de persona</label> -->\\n            <!-- <select class=\\\"form-control\\\" id=\\\"tipopessoa\\\" formControlName=\\\"tipopessoa\\\" (change)=\\\"onInput()\\\">\\n              <option value=\\\"F\\\">Persona 1 </option>\\n              <option value=\\\"J\\\">Persona 2 </option>\\n              <option value=\\\"J\\\">Persona 3 </option>\\n            </select> -->\\n          </div>\\n        </div>\\n        \\n        <!-- <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"emailMarketing\\\">E-mail Marketing</label>\\n            <input\\n              type=\\\"email\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"emailMarketing\\\"\\n              formControlName=\\\"emailMarketing\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('emailMarketing') + ' ' + onFieldRequired('emailMarketing')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('emailMarketing') == 'maxlength'\\\" [message]=\\\"maxLengthMessages.emailMarketing\\\"></invalid-form-control>\\n          </div>\\n        </div> -->\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\\n<ng-template #modalDetalhesCliente>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Oops! Ese cliente ya esta registrado</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCloseDetails()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"mtc-title\\\">Datos de registro</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col\\\">\\n        <label>Código</label>\\n        <div *ngIf=\\\"dadosCliente.codCliente == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.codCliente != null\\\">{{ dadosCliente.codCliente }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-6\\\" *ngIf=\\\"dadosCliente.tipo == 'F'\\\">\\n        <label>CPF</label>\\n        <div *ngIf=\\\"dadosCliente.cpf == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.cpf != null\\\">{{ dadosCliente.cpf }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-6\\\" *ngIf=\\\"dadosCliente.tipo == 'J'\\\">\\n        <label>NIT</label>\\n        <div *ngIf=\\\"dadosCliente.cnpj == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.cnpj != null\\\">{{ dadosCliente.cnpj }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>Nombre fantasia</label>\\n        <div *ngIf=\\\"dadosCliente.nomeFantasia == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.nomeFantasia != null\\\">{{ dadosCliente.nomeFantasia }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col\\\">\\n        <label>Razon social</label>\\n        <div *ngIf=\\\"dadosCliente.razaoSocial == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.razaoSocial != null\\\">{{ dadosCliente.razaoSocial }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col\\\">\\n        <label>Endereço</label>\\n        <div *ngIf=\\\"dadosCliente.endereco == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.endereco != null\\\">{{ dadosCliente.endereco }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>Bairro</label>\\n        <div *ngIf=\\\"dadosCliente.bairro == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.bairro != null\\\">{{ dadosCliente.bairro }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>CEP</label>\\n        <div *ngIf=\\\"dadosCliente.cep == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.cep != null\\\">{{ dadosCliente.cep }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>Cidade</label>\\n        <div *ngIf=\\\"dadosCliente.cidade == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.cidade != null\\\">{{ dadosCliente.cidade }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>Estado</label>\\n        <div *ngIf=\\\"dadosCliente.uf == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.uf != null\\\">{{ dadosCliente.uf }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col\\\">\\n        <label>Segurado</label>\\n        <div *ngIf=\\\"dadosCliente.segurado != ''\\\">SI</div>\\n        <div *ngIf=\\\"dadosCliente.segurado == ''\\\">NO</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>Vendedor</label>\\n        <div *ngIf=\\\"dadosCliente.vendedor == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.vendedor != null\\\">{{ dadosCliente.vendedor }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label>Escritório</label>\\n        <div *ngIf=\\\"dadosCliente.escritorio == null\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dadosCliente.escritorio != null\\\">{{ dadosCliente.escritorio }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCliente.codSAP != '' && dadosCliente.codSAP != null\\\">\\n        <label>Código DBA</label>\\n        <div>{{ dadosCliente.codSAP }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCliente.escritorioDba != '' && dadosCliente.escritorioDba != null\\\">\\n        <label>Sucursal</label>\\n        <div>{{ dadosCliente.escritorioDba }}</div>\\n      </div>\\n      <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCliente.ultimaCompraDba != '' && dadosCliente.ultimaCompraDba != null\\\">\\n        <label>Última compra</label>\\n        <div>{{ dadosCliente.ultimaCompraDba }}</div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"onCloseDetails()\\\">Fechar</button>\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"btn btn-primary\\\"\\n      (click)=\\\"onNavigateDetail()\\\">\\n      Detalles\\n    </button>\\n  </div>\\n</ng-template>\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Detalles\\\"></app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n      <h5 class=\\\"pt-2 mb-4\\\">{{ cliente.razaoSocial }}</h5>\\n    </div>\\n  </div>\\n  <div class=\\\"row mb-4\\\">\\n    <div class=\\\"col d-flex justify-content-center w-100\\\">\\n      <h5 tooltip=\\\"Código do cliente\\\">\\n        <span class=\\\"badge badge-dark\\\">CÓD.: {{ cliente.codCliente }}</span>\\n      </h5>\\n      <h5 *ngIf=\\\"cliente.nomeVendedor\\\" class=\\\"ml-3\\\" tooltip=\\\"Vendedor\\\">\\n        <span class=\\\"badge badge-light\\\">{{ cliente.nomeVendedor | uppercase }}</span>\\n      </h5>\\n      <h5 class=\\\"ml-3\\\" tooltip=\\\"Status\\\">\\n        <span class=\\\"badge\\\" [ngClass]=\\\"classStatusBadge(cliente.status)\\\">{{ cliente.status | uppercase }}</span>\\n      </h5>\\n      <h5 *ngIf=\\\"cliente.codClienteDBA\\\" class=\\\"ml-3\\\" tooltip=\\\"Código DBA do cliente\\\">\\n        <span class=\\\"badge badge-warning\\\">CÓD. DBA: {{ cliente.codClienteDBA }}</span>\\n      </h5>\\n    </div>\\n  </div>\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-9\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <!-- <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-folder-open\\\"\\n            text=\\\"Datos de registro\\\"\\n            [routerLink]=\\\"['../../cadastro', cliente.codCliente, 'dados-faturamento']\\\">\\n          </card-button>\\n        </div> -->\\n         <!--div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-chart-pie\\\"\\n            text=\\\"Dashboard\\\"\\n            [routerLink]=\\\"['../../dashboard', cliente.codCliente]\\\">\\n          </card-button>\\n        </div--> \\n        <!-- <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-chart-bar\\\"\\n            text=\\\"Histórico Financeiro\\\"\\n            [routerLink]=\\\"['../../historico-financeiro', cliente.codCliente, 'resumo']\\\">\\n          </card-button>\\n        </div> -->\\n        <!-- <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-handshake\\\"\\n            text=\\\"Ficha PAC\\\"\\n            [routerLink]=\\\"['../../proposta-analise-credito', cliente.codCliente]\\\">\\n          </card-button>\\n        </div>\\n      </div> -->\\n      <!-- <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-shopping-cart\\\"\\n            text=\\\"Vender\\\"\\n            [routerLink]=\\\"['../../../ciclo-vendas/139/cotacoes-pedidos/lista/']\\\"\\n            [queryParams]=\\\"{codCliente: cliente.codCliente}\\\">\\n          </card-button>\\n        </div> -->\\n        <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"far fa-calendar-alt\\\"\\n            text=\\\"Agendar\\\"\\n            [routerLink]=\\\"['../../../agenda/novo', cliente.codCliente]\\\">\\n          </card-button>\\n        </div>\\n        <!-- <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-tasks\\\"\\n            text=\\\"Propuestas / Pedidos\\\"\\n            [routerLink]=\\\"['../../../tid-software/11']\\\"\\n            [queryParams]=\\\"{ codCliente: cliente.codCliente, sistema: 'vendas', modulo: 3 }\\\">\\n          </card-button>\\n        </div> -->\\n        <!-- <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-list\\\"\\n            text=\\\"Últimos precios\\\"\\n            [routerLink]=\\\"['../../../clientes/ultimos-precos', cliente.codCliente]\\\">\\n          </card-button>\\n        </div> -->\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { finalize } from 'rxjs/operators';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialClientesDetalheService } from './../detalhes/detalhes.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro',\n  templateUrl: './historico-financeiro.component.html',\n  styleUrls: ['./historico-financeiro.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroComponent implements OnInit {\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  cliente: any = {};\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private detalhesService: ComercialClientesDetalheService,\n    private pnotifyService: PNotifyService,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    if (this.activatedRoute.snapshot.data['response']['responseCode'] === 200) {\n      this.registrarAcesso();\n      this.getDetalhes();\n    } else if (\n      this.activatedRoute.snapshot.data['response']['responseCode'] === 403\n    ) {\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\n      this.router.navigate(['/comercial/home']);\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getDetalhes() {\n    this.activatedRoute.params.subscribe(params => {\n      this.detalhesService\n        .getDetalhes(params['id'])\n        .pipe(\n          finalize(() => {\n            this.loaderFullScreen = false;\n          })\n        )\n        .subscribe({\n          next: (response: any) => {\n            if (response['responseCode'] === 200) {\n              this.cliente = response['result'];\n              this.setBreadCrumb(params['id']);\n              this.onRouterChange();\n            } else {\n              this.handleLoadDependenciesError();\n            }\n          },\n          error: (error: any) => {\n            this.handleLoadDependenciesError();\n          }\n        });\n    });\n  }\n\n  handleLoadDependenciesError() {\n    this.pnotifyService.error();\n    this.location.back();\n  }\n\n  setBreadCrumb(id: number) {\n    let router = this.router.url.split('/');\n    let currRoute = router[router.length - 1];\n\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home'\n      },\n      {\n        descricao: 'Busqueda de clientes',\n        routerLink: '/comercial/clientes/lista'\n      },\n      {\n        descricao: 'Detalhes',\n        routerLink: `/comercial/clientes/detalhes/${id}`\n      },\n      {\n        descricao: 'Histórico financeiro',\n        routerLink: `/comercial/clientes/historico-financeiro/${id}/resumo`\n      },\n      {\n        descricao: this.breadCrumbConfig(currRoute)\n      }\n    ];\n  }\n\n  breadCrumbConfig(route: string) {\n    let descricao = '';\n\n    if (route == 'resumo') {\n      descricao = 'Resumo';\n    } else if (route == 'detalhes') {\n      descricao = 'Detalhes';\n    } else if (route == 'acumulos-mensais') {\n      descricao = 'Acúmulos mensais';\n    } else if (route == 'notas-promissorias') {\n      descricao = 'Notas promissórias';\n    } else if (route == 'debitos') {\n      descricao = 'Débitos em aberto';\n    } else if (route == 'corte-dobra') {\n      descricao = 'Corte Dobra';\n    } else {\n      descricao = 'Materiais da duplicata';\n    }\n\n    this.titleService.setTitle(descricao);\n\n    return descricao;\n  }\n\n  onRouterChange() {\n    this.router.events.subscribe(event => {\n      this.activatedRoute.params.subscribe(params => {\n        this.setBreadCrumb(params['id']);\n      });\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-materiais-duplicata',\n  templateUrl: './materiais-duplicata.component.html',\n  styleUrls: ['./materiais-duplicata.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent\n  implements OnInit {\n  principal: any = {};\n  historicoCobrancas: any = {};\n  ocorrenciasDuplicatas: any = {};\n  ocorrenciasComerciais: any = {};\n  duplicataLoaded: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.historicoFinanceiroService\n        .getMateriaisDuplicata(params)\n        .subscribe((response: any) => {\n          if (response['responseCode'] === 200) {\n            this.principal = response['result']['principal'];\n            this.historicoCobrancas = response['result']['historicoCobrancas'];\n            this.ocorrenciasDuplicatas =\n              response['result']['ocorrenciasDuplicatas'];\n            this.ocorrenciasComerciais =\n              response['result']['ocorrenciasComerciais'];\n          }\n          this.duplicataLoaded = true;\n        });\n    });\n  }\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!notasPromissoriasLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carga de pagarés...</strong>\\n    </div>\\n    <custom-table [config]=\\\"tableConfig\\\">\\n      <ng-template #thead let-thead *ngIf=\\\"notasPromissorias.length > 0 && notasPromissoriasLoaded\\\">\\n        <tr>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Registro</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Bancário</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Baixa</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor da baixa</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencimento</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor da duplicata</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody>\\n        <tr *ngFor=\\\"let nota of notasPromissorias\\\">\\n          <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(nota.situacao)\\\">{{ nota.numRegistro }}</td>\\n          <td class=\\\"text-center\\\">{{ nota.numBancario }}</td>\\n          <td class=\\\"text-center\\\">{{ nota.dataBaixa }}</td>\\n          <td class=\\\"text-center\\\">{{ nota.valorBaixa | currency:'BRL':'symbol':'1.2-2' }}</td>\\n          <td class=\\\"text-center\\\">{{ nota.dataVencimento }}</td>\\n          <td class=\\\"text-center\\\">{{ nota.valorDuplicata | currency:'BRL':'symbol':'1.2-2' }}</td>\\n        </tr>\\n      </ng-template>\\n    </custom-table>\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"notasPromissorias.length > 0 && notasPromissoriasLoaded\\\">\\n      <div class=\\\"col-6 d-flex justify-content-center w-100\\\">\\n        <div class=\\\"d-flex justify-content-around\\\">\\n          <div class=\\\"legend green\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">BAIXADA</div>\\n          </div>\\n          <div class=\\\"legend blue\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">QUITADA</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <empty-result\\n      message=\\\"Nenhuma informação encontrada\\\"\\n      *ngIf=\\\"notasPromissorias.length == 0 && notasPromissoriasLoaded\\\">\\n    </empty-result>\\n  </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL25vdGFzLXByb21pc3Nvcmlhcy9ub3Rhcy1wcm9taXNzb3JpYXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL3Jlc3Vtby9yZXN1bW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialVendedoresService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\n\n  constructor(protected http: HttpClient) {}\n\n  getDetalhesCadastro() {\n    return this.http\n      .get(`${this.API}/detalhes-cadastro`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVendedores() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\n  }\n\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/carteira-clientes`,\n      {\n        params: params\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getValidaClienteCarteira(\n    codCliente: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVinculoOperadores() {\n    return this.http\n      .get(`${this.API}/vinculo-operadores`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FunctionsService {\n  completaZeroEsquerda(valor: any, tamanho: number): string {\n    if (valor === null) return null;\n\n    valor = valor.toString();\n    valor = valor.trim();\n\n    if (valor.length < tamanho) {\n      for (let i = valor.length; i < tamanho; i++) {\n        valor = `0${valor}`;\n      }\n    }\n\n    return valor;\n  }\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!pedidosLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carga de duplicados...</strong>\\n    </div>\\n    <div *ngIf=\\\"pedidos.length > 0 && pedidosLoaded\\\">\\n      <div class=\\\"row justify-content-between\\\">\\n        <div class=\\\"col-5\\\">\\n          <div class=\\\"d-flex\\\">\\n            <div class=\\\"legend green\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">ABIERTO</div>\\n            </div>\\n            <div class=\\\"legend blue\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">QUITADA</div>\\n            </div>\\n            <div class=\\\"legend yellow\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">VENCIDA</div>\\n            </div>\\n            <div class=\\\"legend red\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">PROTESTA</div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-5\\\">\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"filtro\\\" class=\\\"col-2 text-right pb-0 pt-1 pr-2\\\">Filtrar</label>\\n            <div class=\\\"col-10 pl-0\\\">\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control form-control-sm\\\"\\n                id=\\\"filtro\\\"\\n                placeholder=\\\"Número da duplicata\\\"\\n                #filtro\\n                (input)=\\\"onFilter(filtro.value)\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Facturamiento</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. pedido</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicar</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencimiento</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Banco</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Baja</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Pré-datada</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Atraso</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Entrega</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let pedido of pedidosPagination\\\">\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(pedido.situacao)\\\">{{ pedido.empresa }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataFaturamento }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.numPedido }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.numDuplicata }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataVencimento }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.banco }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataBaixa }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.tipoBaixa }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataPreDatada }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.atraso }} dias</td>\\n            <td class=\\\"text-center\\\">{{ pedido.entrega }} dias</td>\\n            <td class=\\\"text-center\\\">{{ pedido.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\n            <td class=\\\"text-center\\\">\\n              <a\\n                class=\\\"btn-icon-sm\\\"\\n                tooltip=\\\"Materiais da duplicata\\\"\\n                container=\\\"body\\\"\\n                [routerLink]=\\\"['../materiais-duplicata']\\\"\\n                [queryParams]=\\\"{\\n                  codEmpresa: pedido.idEmpresa,\\n                  numPedido: pedido.numPedido,\\n                  sequencia: pedido.sequencia\\n                }\\\">\\n                <i class=\\\"fas fa-search\\\"></i>\\n              </a>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"row\\\" *ngIf=\\\"pedidosLoaded\\\">\\n        <div class=\\\"col\\\">\\n          <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"pedidosFiltered.length > itemsPerPage\\\">\\n            <pagination\\n              [maxSize]=\\\"maxSize\\\"\\n              [totalItems]=\\\"pedidosFiltered.length\\\"\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n              [boundaryLinks]=\\\"true\\\"\\n              previousText=\\\"&lsaquo;\\\"\\n              nextText=\\\"&rsaquo;\\\"\\n              firstText=\\\"&laquo;\\\"\\n              lastText=\\\"&raquo;\\\">\\n            </pagination>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"pedidos.length == 0 && pedidosLoaded\\\"></empty-result>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialClientesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes`;\n\n  constructor(protected http: HttpClient) {}\n\n  getStatus(): Observable<Object> {\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1), retry(2));\n  }\n\n  getClientes(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/pesquisa/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getClientesGrupoEconomico(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/grupo-economico/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getPermissaoAcesso(id: any): Observable<Object> {\n    return this.http\n      .get(`${this.API}/permissao-acesso/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/pesquisa/detalhes/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatosResumido(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getExisteCpfCnpj(\n    documento: any,\n    getDadosCliente: boolean\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/verificar-cpf-cnpj/${documento}?getDadosCliente=${\n          getDadosCliente === true ? 1 : 0\n        }`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  postCliente(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/pre-cadastro`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPropostaAnaliseCredito(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/proposta-analise-credito/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosFaturamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-faturamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosFaturamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-faturamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteAtividadeSecundaria(\n    codCliente: number,\n    id: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/atividade-secundaria/${codCliente}/${id}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getEnderecos(\n    codCliente: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/cadastro/carregar/enderecos/${codCliente}`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getEndereco(\n    codCliente: number,\n    idEndereco: number,\n    idSituacao: number\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/endereco/${codCliente}/${idEndereco}/${idSituacao}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  updateEndereco(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/endereco`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteEndereco(codCliente: number, id: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/endereco/${codCliente}/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatos(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContato(\n    codCliente: number,\n    idContato: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contato/${codCliente}/${idContato}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateContato(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/contato`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteMeioContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/meio-contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteFilho(idFilho: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/filho/${idFilho}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosRelacionamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-relacionamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosRelacionamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-relacionamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPotencialCompra(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/potencial-compra/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updatePotencialCompra(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/potencial-compra`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getAnexos(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/anexos/${codCliente}`)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  uploadAnexo(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/cadastro/upload/anexo`, data)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  deleteAnexo(idAnexo: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/anexo/${idAnexo}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getFilial(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/filial/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getTravas(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/travas/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesFinanceiras(codCliente: number): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/informacoes-financeiras/${codCliente}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesComerciais(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/informacoes-comerciais/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getListaEmails(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/emails/lista/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n}\n","export default \"<div class=\\\"row mb-4\\\">\\n  <div class=\\\"col mb-4\\\">\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\n      <div class=\\\"bg-orange rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-hand-holding-usd\\\"></i></div>\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded\\\">\\n        <h5\\n          class=\\\"font-weight-bolder mb-1\\\"\\n          counto\\n          [step]=\\\"30\\\"\\n          [countTo]=\\\"sintetico.atrasoPagamento\\\"\\n          [countFrom]=\\\"0\\\"\\n          [duration]=\\\"3\\\"\\n          (countoChange)=\\\"countoAtrasoPagamento = $event\\\">\\n          {{ handleCounter(countoAtrasoPagamento) }} dias\\n        </h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">MÉDIA ATRASO PAGTO</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\n      <div class=\\\"bg-gray rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-truck-moving\\\"></i></div>\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded\\\">\\n        <h5\\n          class=\\\"font-weight-bolder mb-1\\\"\\n          counto\\n          [step]=\\\"30\\\"\\n          [countTo]=\\\"sintetico.tempoEntrega\\\"\\n          [countFrom]=\\\"0\\\"\\n          [duration]=\\\"3\\\"\\n          (countoChange)=\\\"countoTempoEntrega = $event\\\">\\n          {{ handleCounter(countoTempoEntrega) }} dias\\n        </h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">MÉDIA TEMPO ENTREGA</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\n      <div class=\\\"bg-red rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-dollar-sign\\\"></i></div>\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.totalAtraso == 0\\\">\\n        <h5\\n          class=\\\"font-weight-bolder mb-1\\\"\\n          counto\\n          [step]=\\\"30\\\"\\n          [countTo]=\\\"sintetico.totalAtraso\\\"\\n          [countFrom]=\\\"0\\\"\\n          [duration]=\\\"3\\\"\\n          (countoChange)=\\\"countoTotalAtraso = $event\\\">\\n          {{ countoTotalAtraso | currency:'BRL':'symbol':'1.2-2' }}\\n        </h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">TOTAL EM ATRASO</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.totalAtraso == 0\\\">\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">TOTAL EM ATRASO</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\n      <div class=\\\"bg-green rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-file-invoice-dollar\\\"></i></div>\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.pagtoAntecipado == 0\\\">\\n        <h5\\n          class=\\\"font-weight-bolder mb-1\\\"\\n          counto\\n          [step]=\\\"30\\\"\\n          [countTo]=\\\"sintetico.pagtoAntecipado\\\"\\n          [countFrom]=\\\"0\\\"\\n          [duration]=\\\"3\\\"\\n          (countoChange)=\\\"countoPagtoAntecipado = $event\\\">\\n          {{ countoPagtoAntecipado | currency:'BRL':'symbol':'1.2-2' }}\\n        </h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">ANTECIPADO DISPONÍVEL</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.pagtoAntecipado == 0\\\">\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">ANTECIPADO DISPONÍVEL</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\n      <div class=\\\"bg-blue rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-building\\\"></i></div>\\n      <div class=\\\"text-right\\\" [hidden]=\\\"!sinteticoPendenciasLoaded || sintetico.creditoSeguradora == 0\\\">\\n        <h5\\n          class=\\\"font-weight-bolder mb-1\\\"\\n          counto\\n          [step]=\\\"30\\\"\\n          [countTo]=\\\"sintetico.creditoSeguradora\\\"\\n          [countFrom]=\\\"0\\\"\\n          [duration]=\\\"3\\\"\\n          (countoChange)=\\\"countoCreditoSeguradora = $event\\\">\\n          {{ countoCreditoSeguradora | currency:'BRL':'symbol':'1.2-2' }}\\n        </h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">CRÉDITO SEGURADORA</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"sinteticoPendenciasLoaded && sintetico.creditoSeguradora == 0\\\">\\n        <h5 class=\\\"font-weight-bolder mb-1\\\">R$ 0,00</h5>\\n        <div class=\\\"text-muted small font-weight-bold\\\">CRÉDITO SEGURADORA</div>\\n      </div>\\n      <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\">\\n        <div class=\\\"spinner-border text-dark\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!pedidosLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carregando duplicatas...</strong>\\n    </div>\\n    <div *ngIf=\\\"pedidos.length > 0 && pedidosLoaded\\\">\\n      <div class=\\\"row justify-content-between\\\">\\n        <div class=\\\"col-6 d-flex\\\">\\n          <div class=\\\"d-flex my-auto\\\">\\n            <div class=\\\"legend green\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">EM ABERTO</div>\\n            </div>\\n            <div class=\\\"legend blue\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">QUITADA</div>\\n            </div>\\n            <div class=\\\"legend yellow\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">VENCIDA</div>\\n            </div>\\n            <div class=\\\"legend red\\\">\\n              <div class=\\\"square\\\"></div>\\n              <div class=\\\"text\\\">PROTESTO</div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-5\\\">\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"filtro\\\" class=\\\"col-3 text-right pb-0 pt-1 pr-2\\\">Filtrar</label>\\n            <div class=\\\"col-9 pl-0\\\">\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control form-control-sm\\\"\\n                id=\\\"filtro\\\"\\n                placeholder=\\\"Número da duplicata\\\"\\n                #filtro\\n                (input)=\\\"onFilter(filtro.value)\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Faturamento</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. pedido</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicata</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Vencto</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Baixa</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let pedido of pedidosPagination\\\">\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(pedido.situacao)\\\">{{ pedido.empresa }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataFaturamento }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.numPedido }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.numDuplicata }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataVencimento }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.dataBaixa }}</td>\\n            <td class=\\\"text-center\\\">{{ pedido.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\n            <td class=\\\"text-center\\\">\\n              <a\\n                class=\\\"btn-icon-sm\\\"\\n                tooltip=\\\"Materiais da duplicata\\\"\\n                container=\\\"body\\\"\\n                [routerLink]=\\\"['../materiais-duplicata']\\\"\\n                [queryParams]=\\\"{\\n                  codEmpresa: pedido.idEmpresa,\\n                  numPedido: pedido.numPedido,\\n                  sequencia: pedido.sequencia\\n                }\\\">\\n                <i class=\\\"fas fa-search\\\"></i>\\n              </a>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"row mt-3\\\" *ngIf=\\\"pedidosLoaded\\\">\\n        <div class=\\\"col\\\">\\n          <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"pedidosFiltered.length > itemsPerPage\\\">\\n            <pagination\\n              [maxSize]=\\\"maxSize\\\"\\n              [totalItems]=\\\"pedidosFiltered.length\\\"\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n              [boundaryLinks]=\\\"true\\\"\\n              previousText=\\\"&lsaquo;\\\"\\n              nextText=\\\"&rsaquo;\\\"\\n              firstText=\\\"&laquo;\\\"\\n              lastText=\\\"&raquo;\\\">\\n            </pagination>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <empty-result message=\\\"Nenhuma informação encontrada nos últimos 12 meses. Para períodos anteriores veja em Detalhes.\\\" *ngIf=\\\"pedidos.length == 0 && pedidosLoaded\\\"></empty-result>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"d-flex justify-content-between w-100 mb-2\\\">\\n      <div>\\n        <h6>\\n          <span class=\\\"mr-2\\\">Grupo econômico</span>\\n          <a\\n            href=\\\"javascript:void(0)\\\"\\n            *ngIf=\\\"grupoEconomicoLoaded && grupoEconomico.length > 1\\\"\\n            (click)=\\\"onGrupoEconomico(modalGrupoEconomico)\\\">(ver detalhes)\\n          </a>\\n        </h6>\\n        <small class=\\\"form-text text-muted\\\">VISÃO DO GRUPO ECONÔMICO NO HISTÓRICO FINANCEIRO</small>\\n      </div>\\n      <div class=\\\"custom-control custom-switch my-auto\\\" *ngIf=\\\"grupoEconomicoLoaded && grupoEconomico.length > 1\\\">\\n        <input\\n        type=\\\"checkbox\\\"\\n        class=\\\"custom-control-input\\\"\\n        id=\\\"grupoEconomico\\\"\\n        [checked]=\\\"visaoGrupoEconomico\\\"\\n        (change)=\\\"onChangeGrupoEconomico()\\\"\\n        [disabled]=\\\"!sinteticoPendenciasLoaded\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"grupoEconomico\\\"></label>\\n      </div>\\n    </div>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item bg-green\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong class=\\\"text-white\\\">Saldo para faturar</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-white\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.saldo\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoSaldo = $event\\\"\\n            [hidden]=\\\"pendencias.saldo == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoSaldo | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-white\\\" *ngIf=\\\"pendencias.saldo == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-white\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n    </ul>\\n    <h6 class=\\\"my-2\\\">\\n      <a\\n        href=\\\"javascript:void(0)\\\"\\n        (click)=\\\"showPendenciasDetalhes = !showPendenciasDetalhes\\\">\\n        <span *ngIf=\\\"!showPendenciasDetalhes\\\"><i class=\\\"fas fa-chevron-up\\\"></i> ver detalhes</span>\\n        <span *ngIf=\\\"showPendenciasDetalhes\\\"><i class=\\\"fas fa-chevron-down\\\"></i> esconder detalhes</span>\\n      </a>\\n    </h6>\\n    <ul class=\\\"list-group\\\" *ngIf=\\\"showPendenciasDetalhes\\\">\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Títulos em aberto</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.titulos\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoTitulos = $event\\\"\\n            [hidden]=\\\"pendencias.titulos == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoTitulos | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.titulos == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Notas de débitos em aberto</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.notasDebito\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoNotasDebito = $event\\\"\\n            [hidden]=\\\"pendencias.notasDebito == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoNotasDebito | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.notasDebito == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Notas promissórias em aberto</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.notasPromissorias\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoNotasPromissorias = $event\\\"\\n            [hidden]=\\\"pendencias.notasPromissorias == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoNotasPromissorias | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.notasPromissorias == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Cheques devolvidos</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.chequesDevolvidos\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoChequesDevolvidos = $event\\\"\\n            [hidden]=\\\"pendencias.chequesDevolvidos == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoChequesDevolvidos | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.chequesDevolvidos == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Corte dobra liberado p/ produção</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.corteDobra\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoCorteDobra = $event\\\"\\n            [hidden]=\\\"pendencias.corteDobra == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoCorteDobra | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.corteDobra == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Reserva de bobinas em aberto</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.reservaBobinas\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoReservaBobinas = $event\\\"\\n            [hidden]=\\\"pendencias.reservaBobinas == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoReservaBobinas | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.reservaBobinas == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"d-flex justify-content-between w-100\\\">\\n          <div class=\\\"my-auto\\\">\\n            <strong>Limite de crédito</strong>\\n          </div>\\n          <strong\\n            class=\\\"text-secondary\\\"\\n            counto\\n            [step]=\\\"30\\\"\\n            [countTo]=\\\"pendencias.limiteCredito\\\"\\n            [countFrom]=\\\"0\\\"\\n            [duration]=\\\"3\\\"\\n            (countoChange)=\\\"countoLimiteCredito = $event\\\"\\n            [hidden]=\\\"pendencias.limiteCredito == 0 || !sinteticoPendenciasLoaded\\\">\\n            {{ countoLimiteCredito | currency:'BRL':'symbol':'1.2-2' }}\\n          </strong>\\n          <strong class=\\\"text-secondary\\\" *ngIf=\\\"pendencias.limiteCredito == 0 && sinteticoPendenciasLoaded\\\">R$ 0,00</strong>\\n          <div class=\\\"spinner-border spinner-border-sm text-dark\\\" *ngIf=\\\"!sinteticoPendenciasLoaded\\\"></div>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<ng-template #modalGrupoEconomico>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Grupo econômico</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCloseModalGrupoEconomico()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <custom-table>\\n      <ng-template #thead let-thead>\\n        <tr>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Tipo</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód. cliente</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Razão social</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\"></th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody>\\n        <tr *ngFor=\\\"let item of grupoEconomico\\\">\\n          <td class=\\\"text-center\\\">{{ item.tipo }}</td>\\n          <td class=\\\"text-center\\\">{{ item.codCliente }}</td>\\n          <td class=\\\"text-center\\\">{{ item.razaoSocial }}</td>\\n          <td class=\\\"text-center\\\">\\n            <a\\n              class=\\\"btn-icon-sm\\\"\\n              tooltip=\\\"Visualizar histórico financeiro\\\"\\n              container=\\\"body\\\"\\n              [routerLink]=\\\"['../../../historico-financeiro', item.codCliente, 'resumo']\\\"\\n              (click)=\\\"onCloseModalGrupoEconomico()\\\">\\n              <i class=\\\"fas fa-search\\\"></i>\\n            </a>\\n          </td>\\n        </tr>\\n      </ng-template>\\n    </custom-table>\\n  </div>\\n</ng-template>\\n\";","import { Injectable } from '@angular/core';\nimport { forkJoin } from 'rxjs';\n\n// Services\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from '../cadastro/dados-faturamento/formulario/formulario.service';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesPreCadastroService {\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\n  \n  constructor(\n    private vendedoresService: ComercialVendedoresService,\n    private dadosFaturamentoService: ComercialClientesCadastroDadosFaturamentoFormularioService,\n    private http: HttpClient\n  ) {}\n\n  loadDependencies() {\n    let vendedores = this.vendedoresService.getVendedores();\n    let cnaes = this.dadosFaturamentoService.getCnaes();\n\n    return forkJoin([vendedores, cnaes]);\n  }\n\n  postAkna(param){\n    return this.http.post(\n      `${this.BASE_URL}/comercial/integracoes/akna/log-email-boas-vindas`,\n      param,\n      { observe: 'response' }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialClientesCadastroDadosFaturamentoRulesResolverGuard } from './cadastro/dados-faturamento/formulario/formulario-rules-resolver.guard';\nimport { ComercialClientesDetalhesResolverGuard } from './detalhes/detalhes-resolver.guard';\nimport { ComercialClientesResolverGuard } from './clientes-resolver.guard';\nimport { ComercialClientesPropostaAnaliseCreditoResolverGuard } from './proposta-analise-credito/proposta-analise-credito-resolver.guard';\n\n// Components\nimport { ComercialClientesListaComponent } from './lista/lista.component';\nimport { ComercialClientesPreCadastroComponent } from './pre-cadastro/pre-cadastro.component';\nimport { ComercialClientesDetalhesComponent } from './detalhes/detalhes.component';\nimport { ComercialClientesDashboardComponent } from './dashboard/dashboard.component';\nimport { ComercialClientesPropostaAnaliseCreditoComponent } from './proposta-analise-credito/proposta-analise-credito.component';\nimport { ComercialClientesUltimosPrecosComponent } from './ultimos-precos/ultimos-precos.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialClientesListaComponent },\n  {\n    path: 'pre-cadastro',\n    component: ComercialClientesPreCadastroComponent,\n    resolve: {\n      rules: ComercialClientesCadastroDadosFaturamentoRulesResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'detalhes/:id',\n    component: ComercialClientesDetalhesComponent,\n    resolve: {\n      response: ComercialClientesDetalhesResolverGuard,\n    },\n  },\n  {\n    path: 'cadastro',\n    loadChildren: () =>\n      import('./cadastro/cadastro.module').then(\n        (m) => m.ComercialClientesCadastroModule\n      ),\n  },\n  {\n    path: 'dashboard/:id',\n    component: ComercialClientesDashboardComponent,\n    resolve: {\n      response: ComercialClientesResolverGuard,\n    },\n  },\n  {\n    path: 'historico-financeiro',\n    loadChildren: () =>\n      import('./historico-financeiro/historico-financeiro.module').then(\n        (m) => m.ComercialClientesHistoricoFinanceiroModule\n      ),\n  },\n  {\n    path: 'ultimos-precos/:id',\n    component: ComercialClientesUltimosPrecosComponent,\n  },\n  {\n    path: 'proposta-analise-credito/:id',\n    component: ComercialClientesPropostaAnaliseCreditoComponent,\n    resolve: {\n      data: ComercialClientesPropostaAnaliseCreditoResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n  {\n    path: '**',\n    redirectTo: '/comercial/home',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialClientesRoutingModule {}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { ComercialClientesUltimosPrecosService } from '../ultimos-precos/ultimos-precos.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\nimport { ComercialService } from '../../comercial.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'ultimos-precos',\n  templateUrl: './ultimos-precos.component.html',\n  styleUrls: ['./ultimos-precos.component.scss'],\n})\nexport class ComercialClientesUltimosPrecosComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n\n  codCliente: number;\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<any> = [];\n  dadosPagination: Array<any> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  ultimoPrecoSelecionado: any;\n  alteracoes: Array<any> = [];\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(\n    private localeService: BsLocaleService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private ultimosPrecos: ComercialClientesUltimosPrecosService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private dateService: DateService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService,\n    private comercialService: ComercialService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.codCliente = params.id;\n    });\n\n    this.registrarAcesso();\n    this.setFormFilter();\n    this.setBreadCrumb(this.codCliente);\n    this.titleService.setTitle('Ultimos Preços');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setFormFilter() {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      dataInicial: [formValue.dataInicial, [Validators.required]],\n      dataFinal: [formValue.dataFinal, [Validators.required]],\n    });\n  }\n\n  setBreadCrumb(id: number) {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home',\n      },\n      {\n        descricao: 'Busqueda de clientes',\n        routerLink: '/comercial/clientes/lista',\n      },\n      {\n        descricao: 'Detalhes',\n        routerLink: `/comercial/clientes/detalhes/${id}`,\n      },\n      {\n        descricao: 'Ultimos Preços',\n      },\n    ];\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      dataInicial: this.dateService.getFirstDayMonth(),\n      dataFinal: this.dateService.getLastDayMonth(),\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\n                  formValue[formKey] = this.dateService.convertStringToDate(\n                    params[paramKey],\n                    'pt-br'\n                  );\n                } else {\n                  if (!isNaN(Number(params[paramKey]))) {\n                    formValue[formKey] = Number(params[paramKey]);\n                  } else {\n                    formValue[formKey] = params[paramKey];\n                  }\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.dataInicial) {\n      params.dataInicial = this.dateService.convertToUrlDate(\n        new Date(this.form.value.dataInicial)\n      );\n    }\n\n    if (this.form.value.dataFinal) {\n      params.dataFinal = this.dateService.convertToUrlDate(\n        new Date(this.form.value.dataFinal)\n      );\n    }\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    params.codCliente = this.codCliente;\n\n    this.ultimosPrecos\n      .getListaUltimosPrecos(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!debitosLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carga de débitos pendientes...</strong>\\n    </div>\\n    <custom-table *ngIf=\\\"debitos.length > 0 && debitosLoaded\\\">\\n      <ng-template #thead let-thead>\\n        <tr>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data Pedido</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Pedido</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Duplicata</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Duplicata</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Juros</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Cartório</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Tarifa</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data Tarifa</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Tarifa</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody>\\n        <tr *ngFor=\\\"let debito of debitos\\\">\\n          <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(debito.situacao)\\\">{{ debito.dataPedido }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.numPedido }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.numDuplicata }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.valorDuplicata | currency:'BRL':'symbol':'1.2-2' }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.juros }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.valorCartorio | currency:'BRL':'symbol':'1.2-2' }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.tarifa }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.dataTarifa }}</td>\\n          <td class=\\\"text-center\\\">{{ debito.valorTarifa | currency:'BRL':'symbol':'1.2-2' }}</td>\\n        </tr>\\n      </ng-template>\\n    </custom-table>\\n    <empty-result\\n      message=\\\"Nenhuma informação encontrada\\\"\\n      *ngIf=\\\"debitos.length == 0 && debitosLoaded\\\">\\n    </empty-result>\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"debitos.length > 0 && debitosLoaded\\\">\\n      <div class=\\\"col-6 d-flex justify-content-center w-100\\\">\\n        <div class=\\\"d-flex justify-content-around\\\">\\n          <div class=\\\"legend green\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">DÉBITO CON NOTA</div>\\n          </div>\\n          <div class=\\\"legend blue\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">DÉBITO CON NOTA</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3Byb3Bvc3RhLWFuYWxpc2UtY3JlZGl0by9wcm9wb3N0YS1hbmFsaXNlLWNyZWRpdG8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesPropostaAnaliseCreditoResolverGuard\n  implements Resolve<any> {\n  constructor(private clienteService: ComercialClientesService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params['id']) {\n      return this.clienteService.getPropostaAnaliseCredito(route.params['id']);\n    }\n\n    return of({\n      result: {\n        razaoSocial: null,\n        codCliente: null,\n        codSAP: null,\n        limiteCredito: null,\n        setorAtividade: null,\n        nomeVendedor: null,\n        telefoneVendedor: null,\n        nomeEscritorio: null\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// ngx-bootstrap\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\n// ngx-filter-pipe\nimport { FilterPipeModule } from 'ngx-filter-pipe';\n\n// Counto\nimport { CountoModule } from 'angular2-counto';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialHistoricoFinanceiroRoutingModule } from './historico-financeiro-routing.module';\n\n// Components\nimport { ComercialClientesHistoricoFinanceiroComponent } from './historico-financeiro.component';\nimport { ComercialClientesHistoricoFinanceiroResumoComponent } from './resumo/resumo.component';\nimport { ComercialClientesHistoricoFinanceiroDetalhesComponent } from './detalhes/detalhes.component';\nimport { ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent } from './materiais-duplicata/materiais-duplicata.component';\nimport { ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent } from './acumulos-mensais/acumulos-mensais.component';\nimport { ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent } from './notas-promissorias/notas-promissorias.component';\nimport { ComercialClientesHistoricoFinanceiroDebitosComponent } from './debitos/debitos.component';\nimport { ComercialClientesHistoricoFinanceiroCorteDobraComponent } from './corte-dobra/corte-dobra.component';\n\n@NgModule({\n  declarations: [\n    ComercialClientesHistoricoFinanceiroComponent,\n    ComercialClientesHistoricoFinanceiroResumoComponent,\n    ComercialClientesHistoricoFinanceiroDetalhesComponent,\n    ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent,\n    ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent,\n    ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent,\n    ComercialClientesHistoricoFinanceiroDebitosComponent,\n    ComercialClientesHistoricoFinanceiroCorteDobraComponent\n  ],\n  imports: [\n    CommonModule,\n    TooltipModule,\n    PaginationModule,\n    TabsModule,\n    FilterPipeModule,\n    CountoModule,\n    SharedModule,\n    TemplatesModule.forRoot(),\n    ComercialHistoricoFinanceiroRoutingModule\n  ]\n})\nexport class ComercialClientesHistoricoFinanceiroModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// ngx-filter-pipe\nimport { FilterPipe } from 'ngx-filter-pipe';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n// Interfaces\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-detalhes',\n  templateUrl: './detalhes.component.html',\n  styleUrls: ['./detalhes.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroDetalhesComponent\n  implements OnInit {\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  codCliente: number;\n\n  pedidos: any = [];\n  pedidosPagination: any = [];\n  pedidosFiltered: any = [];\n  pedidosLoaded: boolean = false;\n\n  maxSize: number = 10;\n  itemsPerPage: number = 10;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService,\n    private filterPipe: FilterPipe\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(queryParams => {\n      this.activatedRoute.parent.params.subscribe(params => {\n        let grupoEconomico = false;\n\n        if (\n          queryParams['grupoEconomico'] &&\n          queryParams['grupoEconomico'] == 'true'\n        ) {\n          grupoEconomico = true;\n        }\n\n        this.codCliente = params['id'];\n        this.getPedidos(this.codCliente, grupoEconomico);\n      });\n    });\n  }\n\n  getPedidos(id: number, grupoEconomico: boolean) {\n    this.historicoFinanceiroService\n      .getDetalhesPedidos(id, grupoEconomico)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.pedidos = response['result'];\n          this.pedidosFiltered = response['result'];\n          this.pedidosPagination = this.pedidosFiltered.slice(\n            0,\n            this.itemsPerPage\n          );\n        }\n        this.pedidosLoaded = true;\n      });\n  }\n\n  classStatusBorder(status: string) {\n    let borderClass = '';\n\n    if (status == 'EM ABERTO') {\n      borderClass = 'border-success';\n    } else if (status == 'QUITADA') {\n      borderClass = 'border-primary';\n    } else if (status == 'VENCIDA') {\n      borderClass = 'border-warning';\n    } else if (status == 'PROTESTO') {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.pedidosPagination = this.pedidos.slice(startItem, endItem);\n  }\n\n  onFilter(value: string) {\n    if (value) {\n      this.pedidosFiltered = this.filterPipe.transform(this.pedidos, {\n        numDuplicata: value\n      });\n    } else {\n      this.pedidosFiltered = this.pedidos;\n    }\n\n    this.pedidosPagination = this.pedidosFiltered.slice(0, this.itemsPerPage);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// Counto\nimport { CountoModule } from 'angular2-counto';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialClientesRoutingModule } from './clientes-routing.module';\n\n// Components\nimport { ComercialClientesListaComponent } from './lista/lista.component';\nimport { ComercialClientesPreCadastroComponent } from './pre-cadastro/pre-cadastro.component';\nimport { ComercialClientesDetalhesComponent } from './detalhes/detalhes.component';\nimport { ComercialClientesDashboardModule } from './dashboard/dashboard.module';\nimport { ComercialClientesHistoricoFinanceiroModule } from './historico-financeiro/historico-financeiro.module';\nimport { ComercialClientesPropostaAnaliseCreditoComponent } from './proposta-analise-credito/proposta-analise-credito.component';\nimport { ComercialClientesUltimosPrecosComponent } from './ultimos-precos/ultimos-precos.component';\n\n@NgModule({\n  declarations: [\n    ComercialClientesListaComponent,\n    ComercialClientesPreCadastroComponent,\n    ComercialClientesDetalhesComponent,\n    ComercialClientesPropostaAnaliseCreditoComponent,\n    ComercialClientesUltimosPrecosComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TooltipModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    CountoModule,\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    CurrencyMaskModule,\n    SharedModule,\n    TemplatesModule.forRoot(),\n    ComercialClientesRoutingModule,\n    ComercialClientesDashboardModule,\n    ComercialClientesHistoricoFinanceiroModule\n  ]\n})\nexport class ComercialClientesModule {}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Histórico financeiro\\\">\\n  <button\\n    type=\\\"button\\\"\\n    routerLinkActive=\\\"active\\\"\\n    [routerLink]=\\\"['resumo']\\\">\\n    Resumen\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    routerLinkActive=\\\"active\\\"\\n    [routerLink]=\\\"['detalhes']\\\">\\n    Detalles\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    routerLinkActive=\\\"active\\\"\\n    [routerLink]=\\\"['acumulos-mensais']\\\">\\n    Acumulaciones mensuales\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    routerLinkActive=\\\"active\\\"\\n    [routerLink]=\\\"['notas-promissorias']\\\">\\n    Pagarés  </button>\\n  <button\\n    type=\\\"button\\\"\\n    routerLinkActive=\\\"active\\\"\\n    [routerLink]=\\\"['debitos']\\\">\\n    Débitos\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    routerLinkActive=\\\"active\\\"\\n    [routerLink]=\\\"['corte-dobra']\\\">\\n    Corte Doblado\\n  </button>\\n</app-header>\\n<app-body [show]=\\\"!loaderFullScreen\\\" [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row mb-3\\\">\\n    <div class=\\\"col\\\">\\n      <h5 class=\\\"d-inline-block mb-0 mr-3\\\" tooltip=\\\"Código do cliente\\\">\\n        <span class=\\\"badge badge-dark\\\">CÓD.: {{ cliente.codCliente }}</span>\\n      </h5>\\n      <h6 class=\\\"d-inline-block mb-0\\\">{{ cliente.razaoSocial }}</h6>\\n    </div>\\n  </div>\\n  <router-outlet></router-outlet>\\n</app-body>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesResolverGuard implements Resolve<any> {\n  constructor(private clientesService: ComercialClientesService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params['id']) {\n      return this.clientesService.getPermissaoAcesso(route.params['id']);\n    }\n\n    return of({\n      responseCode: 403\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL21hdGVyaWFpcy1kdXBsaWNhdGEvbWF0ZXJpYWlzLWR1cGxpY2F0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-corte-dobra',\n  templateUrl: './corte-dobra.component.html',\n  styleUrls: ['./corte-dobra.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroCorteDobraComponent\n  implements OnInit {\n  corteDobra: any = [];\n  corteDobraLoaded: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.parent.params.subscribe(params => {\n      this.getCorteDobra(params['id']);\n    });\n  }\n\n  getCorteDobra(id: any) {\n    this.historicoFinanceiroService\n      .getCorteDobra(id)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.corteDobra = response['result'];\n        }\n        this.corteDobraLoaded = true;\n      });\n  }\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!corteDobraLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carregando Corte Dobra...</strong>\\n    </div>\\n    <custom-table *ngIf=\\\"corteDobra.length > 0\\\">\\n      <ng-template #thead let-thead>\\n        <tr>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Identificacion</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Obra</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Discriminación</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody>\\n        <tr *ngFor=\\\"let item of corteDobra\\\">\\n          <td class=\\\"text-center\\\">{{ item.identificacao }}</td>\\n          <td class=\\\"text-center\\\">{{ item.data }}</td>\\n          <td class=\\\"text-center\\\">{{ item.obra }}</td>\\n          <td class=\\\"text-center\\\">{{ item.discriminacao }}</td>\\n          <td class=\\\"text-center\\\">{{ item.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\n          <td class=\\\"text-center\\\">{{ item.empresa }}</td>\\n        </tr>\\n      </ng-template>\\n    </custom-table>\\n    <empty-result\\n      message=\\\"Nenhuma informação encontrada\\\"\\n      *ngIf=\\\"corteDobra.length == 0 && corteDobraLoaded\\\">\\n    </empty-result>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialClientesUltimosPrecosService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes/ultimos-precos`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaUltimosPrecos(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesHistoricoFinanceiroService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes/historico-financeiro`;\n\n  constructor(protected http: HttpClient) {}\n\n  getPermissaoAcesso(id: any) {\n    return this.http.get(`${this.API}/permissao-acesso/${id}`).pipe(take(1));\n  }\n\n  getResumoSintetico(id: any, grupoEconomico: any) {\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\n\n    return this.http\n      .get(`${this.API}/resumo/sintetico/${id}`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getGrupoEconomico(id: any) {\n    return this.http.get(`${this.API}/grupo-economico/${id}`).pipe(take(1));\n  }\n\n  getResumoPedidos(id: any, grupoEconomico: any) {\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\n\n    return this.http\n      .get(`${this.API}/resumo/pedidos/${id}`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getDetalhesPedidos(id: any, grupoEconomico: any) {\n    let httpParams = new HttpParams().set('grupoEconomico', grupoEconomico);\n\n    return this.http\n      .get(`${this.API}/detalhes/pedidos/${id}`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getMateriaisDuplicata(params: any) {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais-duplicata`, {\n        params: httpParams\n      })\n      .pipe(take(1));\n  }\n\n  getAcumulosMensais(id: any) {\n    return this.http.get(`${this.API}/acumulos-mensais/${id}`).pipe(take(1));\n  }\n\n  getNotasPromissorias(id: any) {\n    return this.http.get(`${this.API}/notas-promissorias/${id}`).pipe(take(1));\n  }\n\n  getDebitos(id: any) {\n    return this.http.get(`${this.API}/debitos/${id}`).pipe(take(1));\n  }\n\n  getCorteDobra(id: any) {\n    return this.http.get(`${this.API}/corte-dobra/${id}`).pipe(take(1));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-debitos',\n  templateUrl: './debitos.component.html',\n  styleUrls: ['./debitos.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroDebitosComponent\n  implements OnInit {\n  debitos: any = [];\n  debitosLoaded: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.parent.params.subscribe(params => {\n      this.getDebitos(params['id']);\n    });\n  }\n\n  getDebitos(id: any) {\n    this.historicoFinanceiroService\n      .getDebitos(id)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.debitos = response['result'];\n        }\n        this.debitosLoaded = true;\n      });\n  }\n\n  classStatusBorder(status: string) {\n    let borderClass = '';\n\n    if (status == 'COM NOTA') {\n      borderClass = 'border-success';\n    } else if (status == 'SEM NOTA') {\n      borderClass = 'border-primary';\n    }\n\n    return borderClass;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-acumulos-mensais',\n  templateUrl: './acumulos-mensais.component.html',\n  styleUrls: ['./acumulos-mensais.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent\n  implements OnInit {\n  acumulosMensais: any = {};\n  acumulosMensaisLoaded: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.parent.params.subscribe(params => {\n      this.getAcumulosMensais(params['id']);\n    });\n  }\n\n  getAcumulosMensais(id: any) {\n    this.historicoFinanceiroService\n      .getAcumulosMensais(id)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.acumulosMensais = response['result'];\n        }\n        this.acumulosMensaisLoaded = true;\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormRulesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/common/services`;\n\n  constructor(protected http: HttpClient) {}\n\n  getRules(formRef: number): Observable<any> {\n    return this.http.get(`${this.API}/form-rules/${formRef}`).pipe(take(1));\n  }\n}\n","export default \".modal {\\n  display: none;\\n  position: fixed;\\n  z-index: 1;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto;\\n  background-color: rgba(0, 0, 0, 0.4);\\n}\\n\\n.modal-content {\\n  background-color: #fefefe;\\n  margin: 15% auto;\\n  padding: 20px;\\n  border: 1px solid #888;\\n  width: 80%;\\n}\\n\\n.close {\\n  color: #aaa;\\n  float: right;\\n  font-size: 28px;\\n  font-weight: bold;\\n}\\n\\n.close:hover,\\n.close:focus {\\n  color: black;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2xpZW50ZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsZUFBQTtFQUNBLFVBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLG9DQUFBO0FBQ0o7O0FBRUU7RUFDRSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsVUFBQTtBQUNKOztBQUVFO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFFRTs7RUFFRSxZQUFBO0VBQ0EscUJBQUE7RUFDQSxlQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbWVyY2lhbC9jbGllbnRlcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RhbCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogMTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICB9XG4gIFxuICAubW9kYWwtY29udGVudCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZTtcbiAgICBtYXJnaW46IDE1JSBhdXRvO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzg4ODtcbiAgICB3aWR0aDogODAlO1xuICB9XG4gIFxuICAuY2xvc2Uge1xuICAgIGNvbG9yOiAjYWFhO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbiAgXG4gIC5jbG9zZTpob3ZlcixcbiAgLmNsb3NlOmZvY3VzIHtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICBcbiAgIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3ByZS1jYWRhc3Ryby9wcmUtY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl,\n  FormArray,\n} from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n// ng-brazil\nimport { MASKS, NgBrazilValidators } from 'ng-brazil';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n// Services\nimport { ComercialClientesPreCadastroService } from './pre-cadastro.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\nimport { CnpjService } from 'src/app/shared/services/ws/cnpj.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { FunctionsService } from 'src/app/shared/services/core/functions.service';\n\n@Component({\n  selector: 'comercial-clientes-pre-cadastro',\n  templateUrl: './pre-cadastro.component.html',\n  styleUrls: ['./pre-cadastro.component.scss'],\n})\nexport class ComercialClientesPreCadastroComponent\n  implements OnInit, IFormCanDeactivate\n{\n  @ViewChild('modalDetalhesCliente', {}) modalDetalhesCliente: TemplateRef<any>;\n\n  modalRef: BsModalRef;\n  modalConfig = {\n    ignoreBackdropClick: true,\n  };\n\n  loaderFullScreen = true;\n  loaderNavbar = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home',\n    },\n    {\n      descricao: 'Busqueda de clientes',\n      routerLink: '/comercial/clientes',\n    },\n    {\n      descricao: 'Pre-Registro',\n    },\n  ];\n\n  public MASKS = MASKS;\n\n  vendedores: any = [];\n  cnaes: any = [];\n\n  form: FormGroup;\n  formChanged = false;\n  tipoPessoa = 'F';\n  submittingForm = false;\n\n  maxLengthRules: any = {};\n  maxLengthMessages: any = {};\n\n  dadosCliente: any = {};\n\n  constructor(\n    private preCadastroService: ComercialClientesPreCadastroService,\n    private formBuilder: FormBuilder,\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private clientesService: ComercialClientesService,\n    private pnotifyService: PNotifyService,\n    private cnpjService: CnpjService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private functionsService: FunctionsService,\n    private modalService: BsModalService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle('Pré-cadastro');\n    this.getFormFields();\n    this.activatedRoute.queryParams.subscribe((queryParams: any) => {\n      let documento = null;\n\n      if (Object.keys(queryParams).length > 0) {\n        if (queryParams['cpf']) {\n          this.tipoPessoa = 'F';\n          documento = queryParams['cpf'];\n        } else if (queryParams['cnpj']) {\n          this.tipoPessoa = 'J';\n          documento = queryParams['cnpj'];\n        }\n      }\n\n      this.registrarAcesso();\n      this.setMaxLengthRules();\n      this.setFormBuilder(documento);\n    });\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getFormFields() {\n    this.preCadastroService\n      .loadDependencies()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response[0].responseCode === 200) {\n            this.vendedores = response[0].result;\n          } else {\n            this.handleFormFieldsError();\n          }\n\n          if (response[1].responseCode === 200) {\n            this.cnaes = response[1].result;\n          } else {\n            this.handleFormFieldsError();\n          }\n        },\n        (error: any) => {\n          this.handleFormFieldsError();\n        }\n      );\n  }\n\n  handleFormFieldsError() {\n    this.pnotifyService.error();\n    this.location.back();\n  }\n\n  setMaxLengthRules() {\n    this.maxLengthRules = this.activatedRoute.snapshot.data.rules.data;\n    this.maxLengthMessages = {\n      nome: `Nome deve conter até ${this.maxLengthRules.nome} caracteres.`,\n      sobrenome: `Sobrenome deve conter até ${this.maxLengthRules.sobrenome} caracteres.`,\n      razaoSocial: `Razão social deve conter até ${this.maxLengthRules.razaoSocial} caracteres.`,\n      nomeFantasia: `Nome fantasia deve conter até ${this.maxLengthRules.nomeFantasia} caracteres.`,\n      emailNfe: `E-mail NF-e deve conter até ${this.maxLengthRules.emailNfe} caracteres.`,\n      // emailMarketing: `E-mail Marketing deve conter até ${this.maxLengthRules.emailNfe} caracteres.`,\n    };\n  }\n\n  setFormBuilder(documento: string) {\n    let cpf = null;\n    let cnpj = null;\n\n    if (documento != null) {\n      if (this.tipoPessoa == 'F') {\n        cpf = documento;\n      } else if (this.tipoPessoa == 'J') {\n        cnpj = documento;\n      }\n    }\n\n    this.form = this.formBuilder.group({\n      cpf: [cpf, [Validators.nullValidator]],\n      nome: [\n        null,\n        [Validators.required, Validators.maxLength(this.maxLengthRules.nome)],\n      ],\n      sobrenome: [\n        null,\n        [\n          Validators.required,\n          Validators.maxLength(this.maxLengthRules.sobrenome),\n        ],\n      ],\n      cnpj: [cnpj, [NgBrazilValidators.cnpj]],\n      razaoSocial: [null],\n      nomeFantasia: [null],\n      vendedor: [null],\n      cnae: [null],\n      emailNfe: [\n        null,\n        [\n          Validators.required,\n          Validators.email,\n          Validators.maxLength(this.maxLengthRules.emailNfe),\n        ],\n      ],\n      // emailMarketing: [\n      //   null,\n      //   [Validators.email, Validators.maxLength(this.maxLengthRules.emailNfe)],\n      // ],\n      telefone: [null, [Validators.required]],\n      atividadePrincipal: this.formBuilder.array([]),\n      atividadeSecundaria: this.formBuilder.array([]),\n    });\n\n    this.setType(this.tipoPessoa);\n\n    if (documento != null) {\n      if (this.tipoPessoa == 'F') {\n        this.validateCPF();\n      } else if (this.tipoPessoa == 'J') {\n        this.validateCNPJ();\n      }\n    }\n  }\n\n  setType(type: string) {\n    this.tipoPessoa = type;\n    this.form.reset();\n\n    if (this.tipoPessoa == 'F') {\n      this.form.controls.cpf.setValidators([Validators.required]);\n      this.form.controls.cpf.updateValueAndValidity();\n      this.form.controls.nome.setValidators([\n        Validators.required,\n        Validators.maxLength(this.maxLengthRules.nome),\n      ]);\n      this.form.controls.nome.updateValueAndValidity();\n      this.form.controls.sobrenome.setValidators([\n        Validators.required,\n        Validators.maxLength(this.maxLengthRules.sobrenome),\n      ]);\n      this.form.controls.sobrenome.updateValueAndValidity();\n\n      this.form.controls.cnpj.clearValidators();\n      this.form.controls.cnpj.updateValueAndValidity();\n      this.form.controls.razaoSocial.clearValidators();\n      this.form.controls.razaoSocial.updateValueAndValidity();\n      this.form.controls.nomeFantasia.clearValidators();\n      this.form.controls.nomeFantasia.updateValueAndValidity();\n      this.form.controls.cnae.clearValidators();\n      this.form.controls.cnae.updateValueAndValidity();\n    } else if (this.tipoPessoa == 'J') {\n      this.form.controls.cnpj.setValidators([Validators.required]);\n      this.form.controls.cnpj.updateValueAndValidity();\n      this.form.controls.razaoSocial.setValidators([\n        Validators.required,\n        Validators.maxLength(this.maxLengthRules.razaoSocial),\n      ]);\n      this.form.controls.razaoSocial.updateValueAndValidity();\n      this.form.controls.nomeFantasia.setValidators([\n        Validators.required,\n        Validators.maxLength(this.maxLengthRules.nomeFantasia),\n      ]);\n      this.form.controls.nomeFantasia.updateValueAndValidity();\n      this.form.controls.cnae.setValidators([Validators.required]);\n      this.form.controls.cnae.updateValueAndValidity();\n\n      this.form.controls.cpf.clearValidators();\n      this.form.controls.cpf.updateValueAndValidity();\n      this.form.controls.nome.clearValidators();\n      this.form.controls.nome.updateValueAndValidity();\n      this.form.controls.sobrenome.clearValidators();\n      this.form.controls.sobrenome.updateValueAndValidity();\n    }\n  }\n\n  get atividadePrincipal() {\n    return this.form.get('atividadePrincipal') as FormArray;\n  }\n\n  get atividadeSecundaria() {\n    return this.form.get('atividadeSecundaria') as FormArray;\n  }\n\n  pushAtividadePrincipal(atividade: any) {\n    while (this.atividadePrincipal.length !== 0) {\n      this.atividadePrincipal.removeAt(0);\n    }\n\n    atividade.code = atividade.code.replace(/\\D/g, '');\n\n    if (atividade.code != '0000000') {\n      this.atividadePrincipal.push(\n        this.formBuilder.group({\n          cnae: [atividade.code],\n          descricao: [atividade.text],\n        })\n      );\n    }\n  }\n\n  pushAtividadeSecundaria(atividades: any) {\n    while (this.atividadeSecundaria.length !== 0) {\n      this.atividadeSecundaria.removeAt(0);\n    }\n\n    if (atividades.length > 0) {\n      for (let i = 0; i < atividades.length; i++) {\n        atividades[i].code = atividades[i].code.replace(/\\D/g, '');\n\n        if (atividades[i].code != '0000000') {\n          this.atividadeSecundaria.push(\n            this.formBuilder.group({\n              cnae: [atividades[i].code],\n              descricao: [atividades[i].text],\n            })\n          );\n        }\n      }\n    }\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field) != '') {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n\n      if (field.errors.hasOwnProperty('maxlength') && field.touched) {\n        return 'maxlength';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  validateCPF() {\n    if (this.form.controls.cpf.valid) {\n      this.loaderNavbar = true;\n      this.dadosCliente = {};\n\n      this.clientesService\n        .getExisteCpfCnpj(this.form.value.cpf.replace(/\\D/g, ''), true)\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n          })\n        )\n        .subscribe((response: any) => {\n          if (response.responseCode === 200) {\n            if (response.result.verificacao == 1) {\n              this.form.controls.cpf.setErrors({\n                incorrect: true,\n              });\n              this.pnotifyService.notice('O CPF informado já está cadastrado.');\n\n              if (Object.keys(response.result.dadosCliente).length > 0) {\n                this.formChanged = false;\n                this.dadosCliente = response.result.dadosCliente;\n                this.showDetails();\n              }\n            }\n          }\n        });\n    }\n  }\n\n  validateCNPJ() {\n    if (this.form.controls.cnpj.valid) {\n      this.loaderNavbar = true;\n      this.dadosCliente = {};\n\n      this.clientesService\n        .getExisteCpfCnpj(this.form.value.cnpj.replace(/\\D/g, ''), true)\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n          })\n        )\n        .subscribe((response: any) => {\n          if (response.responseCode === 200) {\n            if (response.result.verificacao == 1) {\n              this.form.controls.cnpj.setErrors({\n                incorrect: true,\n              });\n              this.pnotifyService.notice(\n                'O CNPJ informado já está cadastrado.'\n              );\n\n              if (Object.keys(response.result.dadosCliente).length > 0) {\n                this.formChanged = false;\n                this.dadosCliente = response.result.dadosCliente;\n                this.showDetails();\n              }\n            } else {\n              this.loaderNavbar = true;\n\n              this.getCnpjData(this.form.value.cnpj)\n                .pipe(\n                  finalize(() => {\n                    this.loaderNavbar = false;\n                  })\n                )\n                .subscribe((response: any) => {\n                  this.form.controls.razaoSocial.setValue(response.nome);\n                  this.form.controls.nomeFantasia.setValue(response.fantasia);\n\n                  if (response.atividade_principal[0].code) {\n                    this.checkCnae(response.atividade_principal[0]);\n                  }\n\n                  this.pushAtividadePrincipal(response.atividade_principal[0]);\n                  this.pushAtividadeSecundaria(response.atividades_secundarias);\n                });\n            }\n          }\n        });\n    }\n  }\n\n  showDetails(): void {\n    this.modalRef = this.modalService.show(\n      this.modalDetalhesCliente,\n      this.modalConfig\n    );\n  }\n\n  onCloseDetails(): void {\n    this.modalRef.hide();\n  }\n\n  onNavigateDetail(): void {\n    if (this.dadosCliente.podeAcessar == 1) {\n      this.onCloseDetails();\n      this.router.navigate(['../detalhes', this.dadosCliente.codCliente], {\n        relativeTo: this.activatedRoute,\n      });\n    } else {\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\n    }\n  }\n\n  checkCnae(data: any) {\n    const cnae = {\n      id: parseInt(data.code.replace(/\\D/g, '')),\n      descricao: data.text,\n    };\n\n    let exists = false;\n\n    for (let i = 0; i < this.cnaes.length; i++) {\n      if (this.cnaes[i].id == cnae.id) {\n        exists = true;\n      }\n    }\n\n    if (!exists) {\n      this.cnaes.push(cnae);\n    }\n\n    this.form.controls.cnae.setValue(cnae.id);\n  }\n\n  getCnpjData(cnpj: string) {\n    return this.cnpjService.getData(cnpj);\n  }\n\n  onSubmit() {\n    /* this.postAkna(20081);\n    return; */\n\n    if (this.form.valid) {\n      this.loaderNavbar = true;\n      this.submittingForm = true;\n      let formObj = {};\n\n      if (this.tipoPessoa == 'F') {\n        formObj = {\n          tipoPessoa: this.tipoPessoa,\n          cpf: this.form.value.cpf,\n          vendedor: this.form.value.vendedor,\n          nome: this.form.value.nome,\n          sobrenome: this.form.value.sobrenome,\n          emailNfe: this.form.value.emailNfe,\n          // emailMarketing: this.form.value.emailMarketing,\n          telefone: this.form.value.telefone,\n        };\n      } else if (this.tipoPessoa == 'J') {\n        formObj = {\n          tipoPessoa: this.tipoPessoa,\n          cnpj: this.form.value.cnpj,\n          vendedor: this.form.value.vendedor,\n          razaoSocial: this.form.value.razaoSocial,\n          nomeFantasia: this.form.value.nomeFantasia,\n          cnae: this.functionsService.completaZeroEsquerda(\n            this.form.value.cnae,\n            7\n          ),\n          emailNfe: this.form.value.emailNfe,\n          // emailMarketing: this.form.value.emailMarketing,\n          telefone: this.form.value.telefone,\n          atividadePrincipal: this.form.value.atividadePrincipal,\n          atividadeSecundaria: this.form.value.atividadeSecundaria,\n        };\n      }\n\n      this.clientesService\n        .postCliente(formObj)\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n            this.submittingForm = false;\n          })\n        )\n        .subscribe(\n          (response: any) => {\n            if (response.responseCode === 200) {\n              this.pnotifyService.success('O cliente foi cadastrado.');\n              this.formChanged = false;\n\n              /* this.postAkna(response.result); */\n              this.router.navigate(['../cadastro', response.result], {\n                relativeTo: this.activatedRoute,\n              });\n            } else if (response.responseCode === 403) {\n              this.pnotifyService.notice(\n                'Falha ao atribuir vendedor ao cadastro.'\n              );\n            } else {\n              this.pnotifyService.error(\n                'Ocorreu um erro ao cadastrar o cliente.'\n              );\n            }\n          },\n          (error: any) => {\n            this.pnotifyService.error(\n              'Ocorreu um erro ao cadastrar o cliente.'\n            );\n          }\n        );\n    }\n  }\n\n  onInput() {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate() {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onCancel() {\n    this.location.back();\n  }\n\n  // Função que envia e-mail de boas vindas  para um novo cliente e grava o log dessa ação.\n  /* postAkna(cliente){\n    let param = {};\n\n    if(this.form.value['nome']){\n      param = {\n        'codigoCliente'   : cliente,\n        'nomeRemetente'   : this.form.value['nome'] + ' ' + this.form.value['sobrenome'],\n        'emailRemetente'  : this.form.value['emailNfe']\n      }\n    } else {\n      param = {\n        'codigoCliente'   : cliente,\n        'nomeRemetente'   : this.form.value['razaoSocial'],\n        'emailRemetente'  : this.form.value['emailNfe']\n      }\n    }\n\n    this.preCadastroService\n      .postAkna(param)\n      .subscribe((response) => {\n      console.log(response)\n    });\n  } */\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  FormArray\n} from '@angular/forms';\nimport { Location } from '@angular/common';\n\n// ngx-bootstrap\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\ndefineLocale('pt-br', ptBrLocale);\n\n// ng-brazil\nimport { utilsBr } from 'js-brasil';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { PdfService } from 'src/app/shared/services/core/pdf.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n@Component({\n  selector: 'comercia-clientes-proposta-analise-credito',\n  templateUrl: './proposta-analise-credito.component.html',\n  styleUrls: ['./proposta-analise-credito.component.scss']\n})\nexport class ComercialClientesPropostaAnaliseCreditoComponent\n  implements OnInit, IFormCanDeactivate {\n  public MASKS = utilsBr.MASKS;\n\n  loaderNavbar: boolean = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  codCliente: number;\n\n  tipoVisao: string = 'formulario';\n  dataFicha: any = [];\n\n  form: FormGroup;\n  formChanged: boolean = false;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private localeService: BsLocaleService,\n    private pnotifyService: PNotifyService,\n    private pdfService: PdfService,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.codCliente = params['id'];\n\n      this.registrarAcesso();\n      this.setBreadCrumb(this.codCliente);\n      this.titleService.setTitle('Proposta para análise de crédito');\n\n      if (this.activatedRoute.snapshot.data['data']['responseCode'] === 200) {\n        this.setFormBuilder(\n          this.activatedRoute.snapshot.data['data']['result']\n        );\n      } else {\n        this.pnotifyService.error();\n        this.location.back();\n      }\n    });\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(id: number) {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home'\n      },\n      {\n        descricao: 'Busqueda de clientes',\n        routerLink: '/comercial/clientes/lista'\n      },\n      {\n        descricao: 'Detalhes',\n        routerLink: `/comercial/clientes/detalhes/${id}`\n      },\n      {\n        descricao: 'Proposta para análise de crédito'\n      }\n    ];\n  }\n\n  setFormBuilder(data: any) {\n    this.form = this.formBuilder.group({\n      razaoSocial: [\n        { value: data['razaoSocial'], disabled: true },\n        [Validators.required]\n      ],\n      dataSolicitacao: [new Date(), [Validators.required]],\n      codCliente: [\n        { value: data['codCliente'], disabled: true },\n        [Validators.required]\n      ],\n      codClienteDBA: [{ value: data['codClienteDBA'], disabled: true }],\n      setorAtividade: [\n        { value: data['setorAtividade'], disabled: true },\n        [Validators.required]\n      ],\n      dataUltimaVisita: [null],\n      instalacoes: [null],\n      numFuncionarios: [null],\n      limiteCreditoAtual: [data['limiteCredito']],\n      limiteCreditoSolicitado: [null, [Validators.required]],\n      condicaoPagto: [null, [Validators.required]],\n      nomeVendedor: [\n        { value: data['nomeVendedor'], disabled: true },\n        [Validators.required]\n      ],\n      telefoneVendedor: [\n        { value: data['telefoneVendedor'], disabled: true },\n        [Validators.required]\n      ],\n      gestorVendas: [null, [Validators.required]],\n      nomeEscritorio: [\n        { value: data['nomeEscritorio'], disabled: true },\n        [Validators.required]\n      ],\n      fornecedores: this.formBuilder.array([]),\n      clientes: this.formBuilder.array([]),\n      vendasConcentradas: [null],\n      bancos: this.formBuilder.array([]),\n      previsaoCompraTon: [null],\n      previsaoCompraValor: [null],\n      faturamentoMedio: [null],\n      parecerVendedor: [null, [Validators.required]]\n    });\n\n    this.setFormFornecedoresClientesBancos();\n  }\n\n  setFormFornecedoresClientesBancos() {\n    this.onAddFornecedor();\n    this.onAddBanco();\n  }\n\n  get fornecedores() {\n    return this.form.get('fornecedores') as FormArray;\n  }\n\n  get clientes() {\n    return this.form.get('clientes') as FormArray;\n  }\n\n  get bancos() {\n    return this.form.get('bancos') as FormArray;\n  }\n\n  onAddFornecedor() {\n    this.fornecedores.push(\n      this.formBuilder.group({\n        nome: [null, [Validators.required]],\n        telefone: [null]\n      })\n    );\n  }\n\n  onAddCliente() {\n    this.clientes.push(\n      this.formBuilder.group({\n        nome: [null]\n      })\n    );\n  }\n\n  onAddBanco() {\n    this.bancos.push(\n      this.formBuilder.group({\n        nome: [null, [Validators.required]],\n        agencia: [null, [Validators.required]],\n        contaCorrente: [null, [Validators.required]],\n        telefone: [null, [Validators.required]]\n      })\n    );\n  }\n\n  onDeleteFornecedor(index: number) {\n    if (this.fornecedores.length > 1) {\n      this.fornecedores.removeAt(index);\n    } else {\n      this.pnotifyService.notice('Informe ao menos um fornecedor.');\n    }\n  }\n\n  onDeleteCliente(index: number) {\n    this.clientes.removeAt(index);\n  }\n\n  onDeleteBanco(index: number) {\n    if (this.bancos.length > 1) {\n      this.bancos.removeAt(index);\n    } else {\n      this.pnotifyService.notice('Informe ao menos um banco.');\n    }\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onNestedFieldError(formGroup: string, index: number, field: string) {\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\n    let nestedForm: any = this.form.controls[formGroup];\n    field = nestedForm.controls[index].get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\n    let required = false;\n    let formControl = new FormControl();\n    let nestedForm: any = this.form.controls[formGroup];\n\n    if (nestedForm.controls[index].get(field).validator) {\n      let validationResult = nestedForm.controls[index]\n        .get(field)\n        .validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onInput() {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate() {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.loaderNavbar = true;\n      setTimeout(() => {\n        const formData = this.form.getRawValue();\n\n        let dataSolicitacao = `${(formData[\n          'dataSolicitacao'\n        ] as Date).getDate()}/${(formData[\n          'dataSolicitacao'\n        ] as Date).getMonth() + 1}/${(formData[\n          'dataSolicitacao'\n        ] as Date).getFullYear()}`;\n\n        let dataUltimaVisita: string;\n        if (formData['dataUltimaVisita'] != null) {\n          dataUltimaVisita = `${(formData[\n            'dataUltimaVisita'\n          ] as Date).getDate()}/${(formData[\n            'dataUltimaVisita'\n          ] as Date).getMonth() + 1}/${(formData[\n            'dataUltimaVisita'\n          ] as Date).getFullYear()}`;\n        }\n\n        this.tipoVisao = 'ficha';\n        this.dataFicha = {\n          razaoSocial: formData['razaoSocial'],\n          dataSolicitacao: dataSolicitacao,\n          codCliente: formData['codCliente'],\n          codClienteDBA: formData['codClienteDBA'],\n          setorAtividade: formData['setorAtividade'],\n          dataUltimaVisita: dataUltimaVisita,\n          instalacoes: formData['instalacoes'],\n          numFuncionarios: formData['numFuncionarios'],\n          limiteCreditoAtual: formData['limiteCreditoAtual'],\n          limiteCreditoSolicitado: formData['limiteCreditoSolicitado'],\n          condicaoPagto: formData['condicaoPagto'],\n          nomeVendedor: formData['nomeVendedor'],\n          telefoneVendedor: formData['telefoneVendedor'],\n          gestorVendas: formData['gestorVendas'],\n          nomeEscritorio: formData['nomeEscritorio'],\n          fornecedores: formData['fornecedores'],\n          clientes: formData['clientes'],\n          bancos: formData['bancos'],\n          vendasConcentradas: formData['vendasConcentradas'],\n          previsaoCompraTon: formData['previsaoCompraTon'],\n          previsaoCompraValor: formData['previsaoCompraValor'],\n          faturamentoMedio: formData['faturamentoMedio'],\n          parecerVendedor: formData['parecerVendedor']\n        };\n\n        this.formChanged = false;\n        this.loaderNavbar = false;\n      }, 1000);\n    }\n  }\n\n  onCancel() {\n    this.loaderNavbar = true;\n    setTimeout(() => {\n      this.tipoVisao = 'formulario';\n      this.loaderNavbar = false;\n    }, 1000);\n  }\n\n  onDownload() {\n    this.loaderNavbar = true;\n    this.pdfService.download(\n      'impressao-ficha-pac',\n      `${this.codCliente}_PropostaAnaliseCredito`\n    );\n\n    setTimeout(() => {\n      this.loaderNavbar = false;\n    }, 500);\n  }\n}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n// ngx-filter-pipe\nimport { FilterPipe } from 'ngx-filter-pipe';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n// Interfaces\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-resumo',\n  templateUrl: './resumo.component.html',\n  styleUrls: ['./resumo.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroResumoComponent\n  implements OnInit {\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  sinteticoPendenciasLoaded: boolean = false;\n\n  codCliente: number;\n\n  modalRef: BsModalRef;\n\n  sintetico: any = {\n    atrasoPagamento: 0,\n    tempoEntrega: 0,\n    totalAtraso: 0,\n    pagtoAntecipado: 0,\n    creditoSeguradora: 0\n  };\n\n  countoAtrasoPagamento: number;\n  countoTempoEntrega: number;\n  countoTotalAtraso: number;\n  countoPagtoAntecipado: number;\n  countoCreditoSeguradora: number;\n  countoTitulos: number;\n  countoNotasDebito: number;\n  countoNotasPromissorias: number;\n  countoChequesDevolvidos: number;\n  countoCorteDobra: number;\n  countoReservaBobinas: number;\n  countoLimiteCredito: number;\n  countoSaldo: number;\n\n  grupoEconomico: any = [];\n  grupoEconomicoLoaded: boolean = false;\n\n  showPendenciasDetalhes: boolean = false;\n\n  pendencias: any = {\n    titulos: 0,\n    notasDebito: 0,\n    notasPromissorias: 0,\n    chequesDevolvidos: 0,\n    corteDobra: 0,\n    reservaBobinas: 0,\n    limiteCredito: 0,\n    saldo: 0\n  };\n\n  pedidos: any = [];\n  pedidosPagination: any = [];\n  pedidosFiltered: any = [];\n  pedidosLoaded: boolean = false;\n\n  maxSize: number = 8;\n  itemsPerPage: number = 10;\n\n  visaoGrupoEconomico: boolean = false;\n  queryParams: any = { grupoEconomico: this.visaoGrupoEconomico };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService,\n    private modalService: BsModalService,\n    private filterPipe: FilterPipe\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(queryParams => {\n      this.activatedRoute.parent.params.subscribe(params => {\n        let grupoEconomico = false;\n\n        if (\n          queryParams['grupoEconomico'] &&\n          queryParams['grupoEconomico'] == 'true'\n        ) {\n          grupoEconomico = true;\n          this.visaoGrupoEconomico = true;\n          this.queryParams = {\n            grupoEconomico: this.visaoGrupoEconomico\n          };\n        }\n\n        this.codCliente = params['id'];\n        this.getResumoSintetico(this.codCliente, grupoEconomico);\n        this.getGrupoEconomico(this.codCliente);\n        this.getPedidos(this.codCliente, grupoEconomico);\n      });\n    });\n  }\n\n  onChangeGrupoEconomico() {\n    this.onLoadingGrupoEconomico();\n    this.queryParams = { grupoEconomico: this.visaoGrupoEconomico };\n\n    this.router.navigate(\n      [`/comercial/clientes/historico-financeiro/${this.codCliente}/resumo`],\n      {\n        queryParams: this.queryParams\n      }\n    );\n  }\n\n  onLoadingGrupoEconomico() {\n    this.visaoGrupoEconomico = !this.visaoGrupoEconomico;\n    this.sinteticoPendenciasLoaded = false;\n    this.pedidosLoaded = false;\n  }\n\n  getResumoSintetico(id: number, grupoEconomico: boolean) {\n    this.historicoFinanceiroService\n      .getResumoSintetico(id, grupoEconomico)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.sintetico = response['result']['sintetico'];\n          this.pendencias = response['result']['pendencias'];\n        }\n        this.sinteticoPendenciasLoaded = true;\n      });\n  }\n\n  getGrupoEconomico(id: number) {\n    this.historicoFinanceiroService\n      .getGrupoEconomico(id)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.grupoEconomico = response['result'];\n        }\n        this.grupoEconomicoLoaded = true;\n      });\n  }\n\n  getPedidos(id: number, grupoEconomico: boolean) {\n    this.historicoFinanceiroService\n      .getResumoPedidos(id, grupoEconomico)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.pedidos = response['result'];\n          this.pedidosFiltered = response['result'];\n          this.pedidosPagination = this.pedidosFiltered.slice(\n            0,\n            this.itemsPerPage\n          );\n        }\n        this.pedidosLoaded = true;\n      });\n  }\n\n  onGrupoEconomico(modalRef: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(modalRef);\n  }\n\n  onCloseModalGrupoEconomico() {\n    this.modalRef.hide();\n  }\n\n  handleCounter(valor: number) {\n    return valor.toFixed(0);\n  }\n\n  classStatusBorder(status: string) {\n    let borderClass = '';\n\n    if (status == 'EM ABERTO') {\n      borderClass = 'border-success';\n    } else if (status == 'QUITADA') {\n      borderClass = 'border-primary';\n    } else if (status == 'VENCIDA') {\n      borderClass = 'border-warning';\n    } else if (status == 'PROTESTO') {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.pedidosPagination = this.pedidosFiltered.slice(startItem, endItem);\n  }\n\n  onFilter(value: string) {\n    if (value) {\n      this.pedidosFiltered = this.filterPipe.transform(this.pedidos, {\n        numDuplicata: value\n      });\n    } else {\n      this.pedidosFiltered = this.pedidos;\n    }\n\n    this.pedidosPagination = this.pedidosFiltered.slice(0, this.itemsPerPage);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL3VsdGltb3MtcHJlY29zL3VsdGltb3MtcHJlY29zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialClientesDetalheService } from './detalhes.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesDetalhesResolverGuard implements Resolve<any> {\n  constructor(private detalhesService: ComercialClientesDetalheService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params['id']) {\n      return this.detalhesService.getDetalhes(route.params['id']);\n    }\n\n    return of({\n      responseCode: 204\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { ComercialClientesResolverGuard } from '../clientes-resolver.guard';\n\n// Components\nimport { ComercialClientesHistoricoFinanceiroComponent } from './historico-financeiro.component';\nimport { ComercialClientesHistoricoFinanceiroResumoComponent } from './resumo/resumo.component';\nimport { ComercialClientesHistoricoFinanceiroDetalhesComponent } from './detalhes/detalhes.component';\nimport { ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent } from './materiais-duplicata/materiais-duplicata.component';\nimport { ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent } from './acumulos-mensais/acumulos-mensais.component';\nimport { ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent } from './notas-promissorias/notas-promissorias.component';\nimport { ComercialClientesHistoricoFinanceiroDebitosComponent } from './debitos/debitos.component';\nimport { ComercialClientesHistoricoFinanceiroCorteDobraComponent } from './corte-dobra/corte-dobra.component';\n\nconst routes: Routes = [\n  {\n    path: ':id',\n    component: ComercialClientesHistoricoFinanceiroComponent,\n    resolve: {\n      response: ComercialClientesResolverGuard\n    },\n    children: [\n      { path: '', redirectTo: 'resumo', pathMatch: 'full' },\n      {\n        path: 'resumo',\n        component: ComercialClientesHistoricoFinanceiroResumoComponent\n      },\n      {\n        path: 'detalhes',\n        component: ComercialClientesHistoricoFinanceiroDetalhesComponent\n      },\n      {\n        path: 'materiais-duplicata',\n        component: ComercialClientesHistoricoFinanceiroMateriaisDuplicataComponent\n      },\n      {\n        path: 'acumulos-mensais',\n        component: ComercialClientesHistoricoFinanceiroAcumulosMensaisComponent\n      },\n      {\n        path: 'notas-promissorias',\n        component: ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent\n      },\n      {\n        path: 'debitos',\n        component: ComercialClientesHistoricoFinanceiroDebitosComponent\n      },\n      {\n        path: 'corte-dobra',\n        component: ComercialClientesHistoricoFinanceiroCorteDobraComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: '/comercial/home',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialHistoricoFinanceiroRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2NvcnRlLWRvYnJhL2NvcnRlLWRvYnJhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!acumulosMensaisLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carga de acumulaciones mensuales...</strong>\\n    </div>\\n    <tabset *ngIf=\\\"acumulosMensaisLoaded\\\">\\n      <tab heading=\\\"Principal\\\">\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\n          <custom-table *ngIf=\\\"acumulosMensais.principal.length > 0\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Período</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor acumulado</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Média atraso</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let acumulo of acumulosMensais.principal\\\">\\n                <td class=\\\"text-center\\\">{{ acumulo.periodo }}</td>\\n                <td class=\\\"text-center\\\">{{ acumulo.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\n                <td class=\\\"text-center\\\">{{ acumulo.atraso }} dias</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n          <empty-result\\n            message=\\\"Nenhuma informação encontrada\\\"\\n            *ngIf=\\\"acumulosMensais.principal.length == 0\\\">\\n          </empty-result>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Maior fatura\\\">\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\n          <custom-table *ngIf=\\\"acumulosMensais.maiorFatura.length > 0\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Núm. Pedido</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Empresa</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let acumulo of acumulosMensais.maiorFatura\\\">\\n                <td class=\\\"text-center\\\">{{ acumulo.numPedido }}</td>\\n                <td class=\\\"text-center\\\">{{ acumulo.data }}</td>\\n                <td class=\\\"text-center\\\">{{ acumulo.empresa }}</td>\\n                <td class=\\\"text-center\\\">{{ acumulo.valor | currency:'BRL':'symbol':'1.2-2' }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n          <empty-result\\n            message=\\\"Nenhuma informação encontrada\\\"\\n            *ngIf=\\\"acumulosMensais.maiorFatura.length == 0\\\">\\n          </empty-result>\\n        </div>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Services\nimport { FormRulesService } from 'src/app/shared/services/core/form-rules.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesCadastroDadosFaturamentoRulesResolverGuard\n  implements Resolve<any> {\n  constructor(private formRulesService: FormRulesService) {}\n\n  resolve(): Observable<any> {\n    return this.formRulesService.getRules(1);\n  }\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!duplicataLoaded\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carga de duplicados...</strong>\\n    </div>\\n    <tabset *ngIf=\\\"duplicataLoaded\\\">\\n      <tab heading=\\\"Principal\\\">\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Línea:</strong> {{ principal.duplicata.linhaNota }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table *ngIf=\\\"principal.materiais.length > 0\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Descripción</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Sit. Tributária</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Qtde.</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor unidades</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor total</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Alíquota ICMS</th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let material of principal.materiais\\\">\\n                    <td class=\\\"text-center\\\">{{ material.idMaterial }}</td>\\n                    <td class=\\\"text-center\\\">{{ material.nomeMaterial }}</td>\\n                    <td class=\\\"text-center\\\">{{ material.situacaoTributaria }}</td>\\n                    <td class=\\\"text-center\\\">{{ material.quantidade }}</td>\\n                    <td class=\\\"text-center\\\">{{ material.valorUnitario | currency:'BRL':'symbol':'1.2-2' }}</td>\\n                    <td class=\\\"text-center\\\">{{ material.valorTotalItem | currency:'BRL':'symbol':'1.2-2' }}</td>\\n                    <td class=\\\"text-center\\\" *ngIf=\\\"material.aliquotaIcms > 0\\\">{{ material.aliquotaIcms | number:'1.2-2' }}%</td>\\n                    <td class=\\\"text-center\\\" *ngIf=\\\"material.aliquotaIcms == 0\\\">0,00%</td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n              <empty-result\\n                message=\\\"Nenhuma informação encontrada\\\"\\n                *ngIf=\\\"principal.materiais.length == 0\\\">\\n              </empty-result>\\n            </div>\\n          </div>\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Condiciones de pago</div>\\n                <p class=\\\"mb-0\\\"><strong></strong>{{ principal.materiais[0]['condicaoPagamento'] }}</p>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Total productos</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <p class=\\\"mb-0\\\"><strong>Cantidad:</strong> {{ principal.total.peso | number:'1.3-3' }} TON</p>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <p class=\\\"mb-0\\\"><strong>Valor:</strong> {{ principal.total.valor | currency:'BRL':'symbol':'1.2-2' }}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Lugar de entrega</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <p><strong>Referencia:</strong> {{ principal.entrega.referencia }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Endereço:</strong> {{ principal.entrega.logradouro }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Ciudad:</strong> {{ principal.entrega.cidade }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Bairro:</strong> {{ principal.entrega.bairro }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <p class=\\\"mb-0\\\"><strong>UF:</strong> {{ principal.entrega.uf }}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Histórico de cobranças\\\">\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table *ngIf=\\\"historicoCobrancas.length > 0\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Num. Lanzamiento</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Situación</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Fecha</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Usuário</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Comentário</th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let cobranca of historicoCobrancas\\\">\\n                    <td class=\\\"text-center\\\">{{ cobranca.numLancamento }}</td>\\n                    <td class=\\\"text-center\\\">{{ cobranca.situacao }}</td>\\n                    <td class=\\\"text-center\\\">{{ cobranca.data }}</td>\\n                    <td class=\\\"text-center\\\">{{ cobranca.nome }}</td>\\n                    <td class=\\\"text-center\\\">{{ cobranca.comentario }}</td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n              <empty-result\\n                message=\\\"Nenhuma informação encontrada\\\"\\n                *ngIf=\\\"historicoCobrancas.length == 0\\\">\\n              </empty-result>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Colección de la empresa</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <p class=\\\"mb-0\\\"><strong>Código:</strong> Nenhuma informação</p>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <p class=\\\"mb-0\\\"><strong>Descripcion:</strong> Nenhuma informação</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Vencimento original</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <p class=\\\"mb-0\\\">No hay información</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Ocorrências da duplicata\\\">\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Duplicar</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table *ngIf=\\\"ocorrenciasDuplicatas.length > 0\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Duplicata</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Operação</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Descrição</th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let ocorrencia of ocorrenciasDuplicatas\\\">\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.numDuplicata }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.operacao }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.data }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.descricao }}</td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n              <empty-result\\n                message=\\\"No hay información encontrada\\\"\\n                *ngIf=\\\"ocorrenciasDuplicatas.length == 0\\\">\\n              </empty-result>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Ocorrências comerciais\\\">\\n        <div class=\\\"border-left border-right border-bottom p-3\\\">\\n          <div class=\\\"row mb-4\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"bg-light rounded p-4\\\">\\n                <div class=\\\"mtc-title\\\">Duplicata</div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Núm. NF:</strong> {{ principal.duplicata.notaSaida }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Núm. Pedido:</strong> {{ principal.duplicata.numPedido }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Data:</strong> {{ principal.duplicata.data }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Linha:</strong> {{ principal.duplicata.linhaNota }}</p>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <p><strong>Cliente:</strong> {{ principal.duplicata.razaoSocial }}</p>\\n                    <p class=\\\"mb-0\\\"><strong>Vendedor:</strong> {{ principal.duplicata.nomeVendedor }}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table *ngIf=\\\"ocorrenciasComerciais.length > 0\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Número</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Hora</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Usuário</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Operação</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\">Situação</th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let ocorrencia of ocorrenciasComerciais\\\">\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.numero }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.data }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.hora }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.nome }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.operacao }}</td>\\n                    <td class=\\\"text-center\\\">{{ ocorrencia.situacao }}</td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n              <empty-result\\n                message=\\\"No hay información encontrada\\\"\\n                *ngIf=\\\"ocorrenciasComerciais.length == 0\\\">\\n              </empty-result>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Busqueda de clientes\\\">\\n  <!-- <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../pre-cadastro']\\\">\\n    Adicionar\\n  </button> -->\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n\\n\\n\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row justify-content-center mb-2\\\">\\n     <div class=\\\"col-lg-6\\\">\\n      <ul class=\\\"list-unstyled mb-0 d-flex justify-content-around\\\">\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Ativo')\\\">\\n          <h6 class=\\\"text-muted font-weight-light\\\">Activos</h6>\\n          <div class=\\\"text-success\\\">\\n            <h4>\\n              <strong\\n                counto\\n                [step]=\\\"30\\\"\\n                [countTo]=\\\"ativos\\\"\\n                [countFrom]=\\\"0\\\"\\n                [duration]=\\\"3\\\"\\n                (countoChange)=\\\"countoAtivos = $event\\\">\\n                {{ handleCounter(countoAtivos) }}\\n              </strong>\\n            </h4>\\n          </div>\\n        </li>\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Inativo')\\\">\\n          <h6 class=\\\"text-muted font-weight-light\\\">Inactivos</h6>\\n          <div class=\\\"text-danger\\\">\\n            <h4>\\n              <strong\\n                counto\\n                [step]=\\\"30\\\"\\n                [countTo]=\\\"inativos\\\"\\n                [countFrom]=\\\"0\\\"\\n                [duration]=\\\"3\\\"\\n                (countoChange)=\\\"countoInativos = $event\\\">\\n                {{ handleCounter(countoInativos) }}\\n              </strong>\\n            </h4>\\n          </div>\\n        </li>\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Potenci')\\\">\\n          <h6 class=\\\"text-muted font-weight-light\\\">Potencial</h6>\\n          <div class=\\\"text-primary\\\">\\n            <h4>\\n              <strong\\n                counto\\n                [step]=\\\"30\\\"\\n                [countTo]=\\\"potencial\\\"\\n                [countFrom]=\\\"0\\\"\\n                [duration]=\\\"3\\\"\\n                (countoChange)=\\\"countoPotencial = $event\\\">\\n                {{ handleCounter(countoPotencial) }}\\n              </strong>\\n            </h4>\\n          </div>\\n        </li>\\n        <li class=\\\"text-center hover px-3\\\" (click)=\\\"filterByStatus('Arquivo')\\\">\\n          <h6 class=\\\"text-muted font-weight-light\\\">Archivados</h6>\\n          <div class=\\\"text-secondary\\\">\\n            <h4>\\n              <strong\\n                counto\\n                [step]=\\\"30\\\"\\n                [countTo]=\\\"arquivados\\\"\\n                [countFrom]=\\\"0\\\"\\n                [duration]=\\\"3\\\"\\n                (countoChange)=\\\"countoArquivados = $event\\\">\\n                {{ handleCounter(countoArquivados) }}\\n              </strong>\\n            </h4>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n  <advanced-filter>\\n    <form [formGroup]=\\\"formFilter\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"buscarPor\\\">Buscar por</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"buscarPor\\\"\\n            formControlName=\\\"buscarPor\\\">\\n            <option value=\\\"1\\\">Código, nombre o razon social</option>\\n            <option value=\\\"2\\\">C.I. o NIT</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"pesquisa\\\">Termino de busqueda</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"pesquisa\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"situacao\\\">Situacion</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"situacao\\\"\\n            formControlName=\\\"situacao\\\">\\n            <option value=\\\"Ativo\\\">Activos</option>\\n            <option value=\\\"Inativo\\\">Inactivos</option>\\n            <option value=\\\"Potenci\\\">Potenciales</option>\\n            <option value=\\\"Arquivo\\\">Archivados</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"setorAtividade\\\">Sector empresarial</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"setorAtividades\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"setorAtividade\\\"\\n            bindLabel=\\\"descricao\\\"\\n            bindValue=\\\"id\\\"\\n            formControlName=\\\"setorAtividade\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\n          <label for=\\\"tipoPessoa\\\">Tipo de persona</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"tipoPessoa\\\"\\n            formControlName=\\\"tipoPessoa\\\">\\n            <option value=\\\"F\\\">Persona física</option>\\n            <option value=\\\"J\\\">Persona jurídica</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div>\\n        <!-- <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\n          <label for=\\\"grupoEconomico\\\">Esta en grupo economico</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"grupoEconomico\\\"\\n            formControlName=\\\"grupoEconomico\\\">\\n            <option value=\\\"S\\\">Si</option>\\n            <option value=\\\"N\\\">No</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\n          <label for=\\\"segurado\\\">Asegurado</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"segurado\\\"\\n            formControlName=\\\"segurado\\\">\\n            <option value=\\\"S\\\">Si</option>\\n            <option value=\\\"N\\\">No</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div> -->\\n        <!-- <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\n          <label for=\\\"carteira\\\">Cartera</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"carteira\\\"\\n            formControlName=\\\"carteira\\\">\\n            <option value=\\\"S\\\" selected>Mi cartera</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div> -->\\n        <div class=\\\"form-group col-lg-1 mb-lg-0\\\">\\n          <label for=\\\"registros\\\">Registros</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"registros\\\"\\n            formControlName=\\\"registros\\\">\\n            <option>10</option>\\n            <option>25</option>\\n            <option>50</option>\\n            <option>100</option>\\n            <option>200</option>\\n          </select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"dataLoaded && searchSubmitted && clientes.length == 0 && buscandoPor != 2\\\">\\n    <div class=\\\"col-12\\\">\\n      <empty-result message=\\\"No se encontraron clientes para esta búsqueda.\\\" class=\\\"py-4\\\"></empty-result>\\n    </div>\\n  </div>\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"dataLoaded && searchSubmitted && clientes.length == 0 && buscandoPor == 2\\\">\\n    <div class=\\\"col-7 d-flex justify-content-end w-100 pr-0\\\">\\n      <empty-result message=\\\"No se encontraron clientes para esta búsqueda.\\\" class=\\\"py-4\\\"></empty-result>\\n    </div>\\n    <div class=\\\"col-5 d-flex w-100 pl-1\\\">\\n      <a [routerLink]=\\\"['../pre-cadastro']\\\" [queryParams]=\\\"onPreCadastroCpfCnpj()\\\" class=\\\"my-auto\\\">\\n        <strong>Pulse aquí para registrarse..</strong>\\n      </a>\\n    </div>\\n  </div>\\n  <div class=\\\"row mt-4\\\" *ngIf=\\\"dataLoaded && clientes.length > 0\\\">\\n    <div [ngClass]=\\\"{'col-12': !showDetailPanel, 'col-7 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\"></th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"setOrderBy('codigo_cliente')\\\">\\n              <thead-sorter value=\\\"Código Cliente\\\" [active]=\\\"orderBy == 'codigo_cliente'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"setOrderBy('cpf')\\\">\\n              <thead-sorter value=\\\"CI/NIT\\\" [active]=\\\"orderBy == 'cpf'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"hover\\\"\\n              (click)=\\\"setOrderBy('nomeFantasia')\\\">\\n              <thead-sorter value=\\\"Nombre y apelllido\\\" [active]=\\\"orderBy == 'nomeFantasia'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"hover\\\"\\n              (click)=\\\"setOrderBy('razaoSocial')\\\"\\n              *ngIf=\\\"!showDetailPanel\\\">\\n              <thead-sorter value=\\\"Razon Social\\\" [active]=\\\"orderBy == 'razaoSocial'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let cliente of clientes\\\" [class.table-active]=\\\"cliente.codigo_cliente == clienteSelecionado\\\">\\n            <td class=\\\"text-center hover\\\" [ngClass]=\\\"classStatusBorder(cliente.situacao)\\\" (click)=\\\"viewRegister(cliente)\\\">\\n              <i class=\\\"text-black-50 far fa-check-square mr-3\\\" *ngIf=\\\"cliente.segurado == 0\\\" tooltip=\\\"Cliente no asegurado\\\" placement=\\\"right\\\"></i>\\n              <i class=\\\"text-warning fas fa-check-square mr-3\\\" *ngIf=\\\"cliente.segurado > 0\\\" tooltip=\\\"Cliente asegurado\\\" placement=\\\"right\\\"></i>\\n              <i class=\\\"text-black-50 far fa-folder-open\\\" *ngIf=\\\"cliente.grupoEconomico == 0\\\" tooltip=\\\"No hace parte de grupo economico\\\" placement=\\\"right\\\"></i>\\n              <i class=\\\"text-warning fas fa-folder-open\\\" *ngIf=\\\"cliente.grupoEconomico > 0\\\" tooltip=\\\"Pertenece a un grupo economico\\\" placement=\\\"right\\\"></i>\\n            </td>\\n            <td class=\\\"text-center hover\\\" (click)=\\\"viewRegister(cliente)\\\">{{ cliente.codigo_cliente }}</td>\\n            <td class=\\\"text-center hover\\\" (click)=\\\"viewRegister(cpf)\\\">{{ cliente.cpf }}</td>\\n            <td class=\\\"hover\\\" (click)=\\\"viewRegister(cliente)\\\">{{ cliente.nomeFantasia | uppercase }}</td>\\n            <td class=\\\"hover\\\" (click)=\\\"viewRegister(cliente)\\\" *ngIf=\\\"!showDetailPanel\\\">{{ cliente.razaoSocial | uppercase }}</td>\\n            <td>\\n              <span tooltip=\\\"Datos registrados\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"viewDetails(cliente)\\\">\\n                  <i class=\\\"fas fa-user\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"clientes[0]['total'] > itemsPerPage\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <div class=\\\"sticky-top\\\">\\n        <detail-panel>\\n          <tabset>\\n            <tab heading=\\\"Datos registrados\\\">\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n                <div *ngIf=\\\"dadosCadastraisLoaded && !dadosCadastraisEmpty\\\">\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-lg-6\\\" *ngIf=\\\"dadosCadastrais.tipoPessoa == 'F'\\\">\\n                      <label>C.I. o NIT</label>\\n                      <div *ngIf=\\\"dadosCadastrais.cpf == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.cpf != null\\\">{{ dadosCadastrais.cpf }}</div>\\n                    </div>\\n                    <div class=\\\"form-group col-lg-6\\\" *ngIf=\\\"dadosCadastrais.tipoPessoa == 'J'\\\">\\n                      <label>CNPJ</label>\\n                      <div *ngIf=\\\"dadosCadastrais.cnpj == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.cnpj != null\\\">{{ dadosCadastrais.cnpj }}</div>\\n                    </div>\\n                    <div class=\\\"form-group col-lg-6\\\">\\n                      <label>Nombre</label>\\n                      <div *ngIf=\\\"dadosCadastrais.nomeFantasia == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.nomeFantasia != null\\\">{{ dadosCadastrais.nomeFantasia }}</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                      <label>Razon social</label>\\n                      <div *ngIf=\\\"dadosCadastrais.razaoSocial == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.razaoSocial != null\\\">{{ dadosCadastrais.razaoSocial }}</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                      <label>Direccion</label>\\n                      <div *ngIf=\\\"dadosCadastrais.endereco == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.endereco != null\\\">{{ dadosCadastrais.endereco }}</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-lg-6\\\">\\n                      <label>Barrio</label>\\n                      <div *ngIf=\\\"dadosCadastrais.bairro == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.bairro != null\\\">{{ dadosCadastrais.bairro }}</div>\\n                    </div>\\n                    <!-- <div class=\\\"form-group col-lg-6\\\">\\n                      <label>CEP</label>\\n                      <div *ngIf=\\\"dadosCadastrais.cep == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.cep != null\\\">{{ dadosCadastrais.cep }}</div>\\n                    </div> -->\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-lg-6\\\">\\n                      <label>Ciudad</label>\\n                      <div *ngIf=\\\"dadosCadastrais.cidade == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.cidade != null\\\">{{ dadosCadastrais.cidade }}</div>\\n                    </div>\\n                    <div class=\\\"form-group col-lg-6\\\">\\n                      <label>Departamento</label>\\n                      <div *ngIf=\\\"dadosCadastrais.uf == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.uf != null\\\">{{ dadosCadastrais.uf }}</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                      <label>Asegurado</label>\\n                      <div *ngIf=\\\"dadosCadastrais.segurado != ''\\\">Si</div>\\n                      <div *ngIf=\\\"dadosCadastrais.segurado == ''\\\">NO</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-lg-6\\\">\\n                      <label>Vendedor</label>\\n                      <div *ngIf=\\\"dadosCadastrais.vendedor == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.vendedor != null\\\">{{ dadosCadastrais.vendedor }}</div>\\n                    </div>\\n                    <div class=\\\"form-group col-lg-6\\\">\\n                      <label>Sucursal</label>\\n                      <div *ngIf=\\\"dadosCadastrais.escritorio == null\\\">NO INFORMADO</div>\\n                      <div *ngIf=\\\"dadosCadastrais.escritorio != null\\\">{{ dadosCadastrais.escritorio }}</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCadastrais.codSAP != '' && dadosCadastrais.codSAP != null\\\">\\n                      <label>Código DBA</label>\\n                      <div>{{ dadosCadastrais.codSAP }}</div>\\n                    </div>\\n                    <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCadastrais.escritorioDba != '' && dadosCadastrais.escritorioDba != null\\\">\\n                      <label>Sucursal</label>\\n                      <div>{{ dadosCadastrais.escritorioDba }}</div>\\n                    </div>\\n                    <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"dadosCadastrais.ultimaCompraDba != '' && dadosCadastrais.ultimaCompraDba != null\\\">\\n                      <label>Última compra</label>\\n                      <div>{{ dadosCadastrais.ultimaCompraDba }}</div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"mb-3\\\" *ngIf=\\\"dadosCadastraisLoaded && dadosCadastraisEmpty\\\">\\n                  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n                </div>\\n                <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!dadosCadastraisLoaded\\\">\\n                  <div class=\\\"spinner-border text-dark\\\"></div>\\n                </div>\\n              </div>\\n            </tab>\\n            <tab heading=\\\"Contatos\\\">\\n              <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n                <div *ngIf=\\\"contatosLoaded && !contatosEmpty\\\">\\n                  <div class=\\\"form-row\\\" *ngFor=\\\"let contato of contatos\\\">\\n                    <div class=\\\"form-group col\\\">\\n                      <label>{{ contato.tipoContato }}</label>\\n                      <div>\\n                        <span *ngIf=\\\"contato.nomeContato.length > 1\\\" class=\\\"mr-1\\\">{{ contato.nomeContato }} :</span>\\n                        <span\\n                          *ngIf=\\\"(contato.tipoContato != 'Email NFe') &&\\n                                (contato.tipoContato != 'E-mail NFe') &&\\n                                (contato.tipoContato != 'MalaDireta') &&\\n                                (contato.tipoContato != 'E-Mail')\\\">\\n                          {{ contato.contato }}\\n                        </span>\\n                        <span\\n                          *ngIf=\\\"(contato.tipoContato == 'Email NFe') ||\\n                                (contato.tipoContato == 'E-mail NFe') ||\\n                                (contato.tipoContato == 'MalaDireta') ||\\n                                (contato.tipoContato == 'E-Mail')\\\">\\n                          <a [href]=\\\"'mailto:' + contato.contato\\\">{{ contato.contato | lowercase }}</a>\\n                        </span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"mb-3\\\" *ngIf=\\\"contatosLoaded && contatosEmpty\\\">\\n                  <empty-result message=\\\"Ningun contacto encontrado\\\"></empty-result>\\n                </div>\\n                <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!contatosLoaded\\\">\\n                  <div class=\\\"spinner-border text-dark\\\"></div>\\n                </div>\\n              </div>\\n            </tab>\\n          </tabset>\\n        </detail-panel>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { take } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialClientesCadastroDadosFaturamentoFormularioService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes/cadastro/formulario/dados-faturamento`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependenciesPF() {\n    const tiposCadastro = this.getTiposCadastro();\n    const contribuintes = this.getContribuintes();\n    const setorAtividades = this.getSetorAtividades();\n\n    return forkJoin([tiposCadastro, contribuintes, setorAtividades]).pipe(\n      take(1)\n    );\n  }\n\n  loadDependenciesPJ() {\n    const tiposCadastro = this.getTiposCadastro();\n    const regimesTributacao = this.getRegimesTributacao();\n    const contribuintes = this.getContribuintes();\n    const setorAtividades = this.getSetorAtividades();\n    const finalidadesMaterial = this.getFinalidadesMaterial();\n    const cnaes = this.getCnaes();\n\n    return forkJoin([\n      tiposCadastro,\n      regimesTributacao,\n      contribuintes,\n      setorAtividades,\n      finalidadesMaterial,\n      cnaes\n    ]).pipe(take(1));\n  }\n\n  getTiposCadastro() {\n    return this.http.get(`${this.API}/tipos-cadastro`).pipe(take(1));\n  }\n\n  getRegimesTributacao() {\n    return this.http.get(`${this.API}/regimes-tributacao`).pipe(take(1));\n  }\n\n  getContribuintes() {\n    return this.http.get(`${this.API}/contribuintes`).pipe(take(1));\n  }\n\n  getSetorAtividades() {\n    return this.http.get(`${this.API}/setor-atividades`).pipe(take(1));\n  }\n\n  getFinalidadesMaterial() {\n    return this.http.get(`${this.API}/finalidades-material`).pipe(take(1));\n  }\n\n  getCnaes() {\n    return this.http.get(`${this.API}/cnaes`).pipe(take(1));\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from '../cadastro/dados-faturamento/formulario/formulario.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-clientes-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialClientesListaComponent implements OnInit, OnDestroy {\n  loaderNavbar = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home',\n    },\n    {\n      descricao: 'Busqueda de clientes',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  setorAtividades: any = [\n    {\n      id: 'T',\n      descricao: 'EXIBIR TODOS',\n    },\n  ];\n\n  dataLoaded = false;\n  dadosCadastraisLoaded = false;\n  dadosCadastraisEmpty = false;\n  contatosLoaded = false;\n  contatosEmpty = false;\n  searchSubmitted = false;\n  showAdvancedFilter = true;\n\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  matricula = this.currentUser['info']['matricula'];\n\n  ativos = 0;\n  inativos = 0;\n  potencial = 0;\n  arquivados = 0;\n\n  countoAtivos: number;\n  countoInativos: number;\n  countoPotencial: number;\n  countoArquivados: number;\n\n  formFilter: FormGroup;\n  buscandoPor: number;\n  pesquisa: string;\n  orderBy = 'codCliente';\n  orderType = 'desc';\n\n  maxSize = 10;\n  itemsPerPage = 50;\n  currentPage = 1;\n  totalItems = 0;\n\n  clientes: any = [];\n  clientesPagination: any = [];\n\n  clienteSelecionado: number;\n  dadosCadastrais: any = {};\n  contatos: any = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private clientesService: ComercialClientesService,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private dadosFaturamentoService: ComercialClientesCadastroDadosFaturamentoFormularioService,\n    private titleService: TitleService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.getFormFilters();\n    this.setFormFilter();\n    this.titleService.setTitle('Busqueda de clientes');\n    this.onDetailPanelEmitter();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n\n        if (this.showDetailPanel === false) {\n          this.onCloseDetailPanel();\n        }\n      }\n    );\n  }\n\n  getFormFilters(): void {\n    this.dadosFaturamentoService\n      .getSetorAtividades()\n      .pipe(\n        finalize(() => {\n          this.setorAtividades.unshift({\n            id: 'T',\n            descricao: 'EXIBIR TODOS',\n          });\n        })\n      )\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.setorAtividades = response['result'];\n        }\n      });\n  }\n\n  setFormFilter(): void {\n    const formValue = this.checkRouterParams();\n\n    this.formFilter = this.formBuilder.group({\n      pesquisa: [formValue['pesquisa']],\n      buscarPor: [formValue['buscarPor'], Validators.required],\n      situacao: [formValue['situacao'], Validators.required],\n      setorAtividade: [formValue['setorAtividade'], Validators.required],\n      tipoPessoa: [formValue['tipoPessoa'], Validators.required],\n      grupoEconomico: [formValue['grupoEconomico'], Validators.required],\n      segurado: [formValue['segurado'], Validators.required],\n      carteira: [formValue['carteira'], Validators.required],\n      pagina: [formValue['pagina']],\n      registros: [formValue['registros'], Validators.required],\n      id_group_econ: [formValue['grupoEconomico'], Validators.required], // Se Agrega este campo\n    });\n  }\n  searchInputValue: string;\n\n  checkRouterParams(): Object {\n    var aux_cartera;\n    if (this.matricula == 1){\n      aux_cartera ='T'\n    }else{\n      aux_cartera = 'S'\n    }\n    let formValue = {\n      pesquisa: this.searchInputValue, // aquí se actualizaría el valor de pesquisa\n      buscarPor: 1,\n      situacao: 'T',\n      setorAtividade: 'T',\n      tipoPessoa: 'T',\n      grupoEconomico: 'T',\n      segurado: 'T',\n      carteira: aux_cartera,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.setSubmittedSearch();\n          this.search(params);\n\n          if (params['registros']) {\n            this.itemsPerPage = params['registros'];\n          }\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        } else {\n          this.listStatus();\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  listStatus(): void {\n    this.clientesService.getStatus().subscribe({\n      next: (response: any) => {\n        if (response['responseCode'] === 200) {\n          this.setStatus(response['result']);\n        }\n      },\n      error: (error: any) => {\n        this.pnotifyService.error();\n      }\n    });\n  }\n\n  setStatus(status: any): void {\n    for (let i = 0; i < status.length; i++) {\n      if (status[i]['situacao'] == 'Ativo') {\n        this.ativos = status[i]['quantidade'];\n      } else if (status[i]['situacao'] == 'Inativo'|| status[i]['situacao'] == null) {\n        this.inativos += status[i]['quantidade'];\n      } else if (status[i]['situacao'] == 'Potenci') {\n        this.potencial = status[i]['quantidade'];\n      } else if (status[i]['situacao'] == 'Arquivo') {\n        this.arquivados = status[i]['quantidade'];\n      }\n    }\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'desc') {\n        this.orderType = 'asc';\n      } else if (this.orderType == 'asc') {\n        this.orderType = 'desc';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'asc';\n    }\n    this.onFilter();\n  }\n\n  onAdvancedFilter(): void {\n    this.showAdvancedFilter = !this.showAdvancedFilter;\n  }\n\n  filterByStatus(status: string): void {\n    this.formFilter.get('situacao').setValue(status);\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    let params = this.formFilter.value;\n    params['orderBy'] = this.orderBy;\n    params['orderType'] = this.orderType;\n\n    this.itemsPerPage = this.formFilter.value['registros'];\n    this.currentPage = 1;\n    this.setRouterParams(params);\n  }\n\n  setSubmittedSearch(): void {\n    this.searchSubmitted = true;\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n      queryParamsHandling: 'merge',\n    });\n    this.setSubmittedSearch();\n    this.search(params);\n  }\n\n  search(params: any): void {\n    if (this.searchSubmitted) {\n      this.loaderNavbar = true;\n      this.dataLoaded = false;\n      this.detailPanelService.hide();\n      this.clientes = [];\n      this.buscandoPor = params['buscarPor'];\n      this.pesquisa = params['pesquisa'];\n\n      this.clientesService\n        .getClientes(params)\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n            this.dataLoaded = true;\n          })\n        )\n        .subscribe(\n          (response: any) => {\n            if (response['responseCode'] === 200) {\n              this.clientes = response['result']['analitico'].slice(\n                0,\n                this.itemsPerPage\n              );\n              this.totalItems = this.clientes[0]['total'];\n              this.setStatus(response['result']['sintetico']);\n            } else if (response['responseCode'] === 204) {\n              this.ativos = 0;\n              this.inativos = 0;\n              this.potencial = 0;\n              this.arquivados = 0;\n            }\n          },\n          (error: any) => {\n            this.pnotifyService.error();\n          }\n        );\n    }\n  }\n\n  classStatusBorder(status: string): string {\n    let borderClass: string;\n\n    if (status == 'Ativo') {\n      borderClass = 'border-success';\n    } else if (status == 'Inativo') {\n      borderClass = 'border-danger';\n    } else if (status == 'Potenci') {\n      borderClass = 'border-primary';\n    } else if (status == 'Arquivo') {\n      borderClass = 'border-secondary';\n    }\n\n    return borderClass;\n  }\n\n  viewRegister(cliente: any): void {\n    if (cliente['podeAcessar'] == 1 || cliente['podeAcessar'] == 0) {\n      this.router.navigate(['../detalhes', cliente.codCliente], {\n        relativeTo: this.activatedRoute,\n        \n      });\n    } else {\n      this.pnotifyService.notice('Esse cliente não faz parte da sua carteira.');\n    }\n  }\n\n  viewDetails(cliente: any): void {\n    this.detailPanelService.loadedFinished(false);\n\n    this.clienteSelecionado = cliente.codCliente;\n\n    this.dadosCadastraisLoaded = false;\n    this.dadosCadastraisEmpty = false;\n\n    this.contatosLoaded = false;\n    this.contatosEmpty = false;\n\n    this.clientesService\n      .getDetalhes(cliente.codCliente)\n      .pipe(\n        finalize(() => {\n          this.dadosCadastraisLoaded = true;\n        })\n      )\n      .subscribe((response: JsonResponse) => {\n        if (response.success === true) {\n          this.dadosCadastrais = response.data;\n        } else {\n          this.dadosCadastraisEmpty = true;\n        }\n      });\n\n    this.clientesService\n      .getContatosResumido(cliente.codCliente)\n      .subscribe((response: any) => {\n        this.contatosLoaded = true;\n\n        if (response['responseCode'] === 200) {\n          if (Object.keys(response['result']).length > 0) {\n            this.contatos = response['result'];\n          } else {\n            this.contatosEmpty = true;\n          }\n        } else {\n          this.contatosEmpty = true;\n        }\n      });\n  }\n\n  onCloseDetailPanel() {\n    this.resetClienteSelecionado();\n\n    setTimeout(() => {\n      this.dadosCadastraisLoaded = false;\n      this.dadosCadastraisEmpty = false;\n      this.dadosCadastrais = {};\n\n      this.contatosEmpty = false;\n      this.contatosLoaded = false;\n      this.contatos = [];\n    }, 500);\n  }\n\n  onPageChanged(event: PageChangedEvent) {\n    if (this.formFilter.value['pagina'] != event.page) {\n      this.detailPanelService.hide();\n      this.resetClienteSelecionado();\n      this.formFilter.value['pagina'] = event.page;\n      this.onFilter();\n    }\n  }\n\n  onPreCadastroCpfCnpj() {\n    let pesquisa = this.pesquisa.replace(/\\D/g, '');\n\n    if (pesquisa.length === 11) {\n      return { cpf: pesquisa };\n    } else if (pesquisa.length === 14) {\n      return { cnpj: pesquisa };\n    }\n\n    return {};\n  }\n\n  handleCounter(value: any) {\n    return value.toFixed(0);\n  }\n\n  resetClienteSelecionado() {\n    this.clienteSelecionado = null;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2FjdW11bG9zLW1lbnNhaXMvYWN1bXVsb3MtbWVuc2Fpcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-clientes-detalhes',\n  templateUrl: './detalhes.component.html',\n  styleUrls: ['./detalhes.component.scss']\n})\nexport class ComercialClientesDetalhesComponent implements OnInit {\n  loaderNavbar: boolean = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home'\n    },\n    {\n      descricao: 'Busqueda de clientes',\n      routerLink: '/comercial/clientes/lista'\n    },\n    {\n      descricao: 'Detalhes'\n    }\n  ];\n\n  cliente: any = {};\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pnotifyService: PNotifyService,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    if (this.activatedRoute.snapshot.data['response']['responseCode'] === 200) {\n      this.cliente = this.activatedRoute.snapshot.data['response']['result'];\n      this.registrarAcesso();\n      this.titleService.setTitle('Detalhes');\n    } else if (\n      this.activatedRoute.snapshot.data['response']['responseCode'] === 403\n    ) {\n      this.pnotifyService.notice('Este cliente no pertenece a su cartera');\n      this.router.navigate(['/comercial/home']);\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  classStatusBadge(status: string) {\n    let badgeClass = '';\n\n    if (status == 'Ativo') {\n      badgeClass = 'badge-success';\n    } else if (status == 'Inativo') {\n      badgeClass = 'badge-danger';\n    } else if (status == 'Potenci') {\n      badgeClass = 'badge-primary';\n    } else if (status == 'Arquivo') {\n      badgeClass = 'badge-secondary';\n    }\n\n    return badgeClass;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { timeout, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CnpjService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/common/services/cnpj`;\n\n  constructor(protected http: HttpClient) {}\n\n  getData(cnpj: string) {\n    cnpj = cnpj.replace(/\\D/g, '');\n\n    return this.http.get(`${this.API}/${cnpj}`).pipe(\n      timeout(5000),\n      catchError(e => {\n        return of(null);\n      })\n    );\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Proposta para análise de crédito\\\">\\n  <button\\n    type=\\\"button\\\"\\n    *ngIf=\\\"tipoVisao == 'formulario'\\\"\\n    [disabled]=\\\"!form.valid\\\"\\n    (click)=\\\"onSubmit()\\\">\\n    Generar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\n    (click)=\\\"onCancel()\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\n    (click)=\\\"onDownload()\\\">\\n    Download\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row justify-content-center\\\" *ngIf=\\\"tipoVisao == 'formulario'\\\">\\n    <div class=\\\"col-6\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col mb-0\\\">\\n            <div class=\\\"mtc-title\\\">Datos del cliente</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"razaoSocial\\\">Razon social</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"razaoSocial\\\"\\n              formControlName=\\\"razaoSocial\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"dataSolicitacao\\\">Fecha de la solicitud</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"dataSolicitacao\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataSolicitacao\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('dataSolicitacao') + ' ' + onFieldRequired('dataSolicitacao')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataSolicitacao')\\\" message=\\\"Data de solicitação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"codCliente\\\">Código de cliente</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"codCliente\\\"\\n              formControlName=\\\"codCliente\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"codClienteDBA\\\">Código SAP</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"codClienteDBA\\\"\\n              formControlName=\\\"codClienteDBA\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"limiteCreditoAtual\\\">Limite de crédito atual</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"limiteCreditoAtual\\\"\\n              formControlName=\\\"limiteCreditoAtual\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\n              (input)=\\\"onInput()\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"setorAtividade\\\">Setor de atividades</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"setorAtividade\\\"\\n              formControlName=\\\"setorAtividade\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"dataUltimaVisita\\\">Fecha de la última visita</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"dataUltimaVisita\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataUltimaVisita\\\"\\n              (input)=\\\"onInput()\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"instalacoes\\\">Instalaciones</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"instalacoes\\\"\\n              formControlName=\\\"instalacoes\\\"\\n              (input)=\\\"onInput()\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"numFuncionarios\\\">Número de empleados</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"numFuncionarios\\\"\\n              formControlName=\\\"numFuncionarios\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 0 }\\\"\\n              (input)=\\\"onInput()\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"limiteCreditoSolicitado\\\">Limite de crédito solicitado</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"limiteCreditoSolicitado\\\"\\n              formControlName=\\\"limiteCreditoSolicitado\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('limiteCreditoSolicitado') + ' ' + onFieldRequired('limiteCreditoSolicitado')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('limiteCreditoSolicitado')\\\" message=\\\"Limite de crédito solicitado é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"condicaoPagto\\\">Condiciones de pago</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"condicaoPagto\\\"\\n              formControlName=\\\"condicaoPagto\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('condicaoPagto') + ' ' + onFieldRequired('condicaoPagto')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('condicaoPagto')\\\" message=\\\"Condição de pagamento é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col mb-0\\\">\\n            <hr class=\\\"mt-0\\\">\\n            <div class=\\\"mtc-title\\\">Solicitud de datos</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"nomeVendedor\\\">Vendedor(a)</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeVendedor\\\"\\n              formControlName=\\\"nomeVendedor\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"telefoneVendedor\\\">Teléfono</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"telefoneVendedor\\\"\\n              formControlName=\\\"telefoneVendedor\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"gestorVendas\\\">Jefe de ventas</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"gestorVendas\\\"\\n              formControlName=\\\"gestorVendas\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('gestorVendas') + ' ' + onFieldRequired('gestorVendas')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('gestorVendas')\\\" message=\\\"Gestor(a) de venda é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"nomeEscritorio\\\">Oficina de ventas</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeEscritorio\\\"\\n              formControlName=\\\"nomeEscritorio\\\">\\n          </div>\\n        </div>\\n        <div formArrayName=\\\"fornecedores\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <hr class=\\\"mt-0\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\n              <div class=\\\"mtc-title\\\">Proveedores</div>\\n              <div>\\n                <a\\n                  class=\\\"text-secondary\\\"\\n                  (click)=\\\"onAddFornecedor()\\\"\\n                  href=\\\"javascript:void(0)\\\">\\n                  <b>Adicionar</b>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of fornecedores.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-6\\\">\\n                  <label for=\\\"nome\\\">Nobre</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nome\\\"\\n                    formControlName=\\\"nome\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    [ngClass]=\\\"onNestedFieldError('fornecedores', i, 'nome') + ' ' + onNestedFieldRequired('fornecedores', i, 'nome')\\\">\\n                </div>\\n                <div class=\\\"form-group col-5\\\">\\n                  <label for=\\\"telefone\\\">Telefono</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"telefone\\\"\\n                    formControlName=\\\"telefone\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\n                </div>\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon\\\"\\n                    (click)=\\\"onDeleteFornecedor(i)\\\">\\n                    <i class=\\\"fas fa-trash\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div formArrayName=\\\"clientes\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <hr class=\\\"mt-0\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\n              <div class=\\\"mtc-title\\\">Clientes</div>\\n              <div>\\n                <a\\n                  class=\\\"text-secondary\\\"\\n                  (click)=\\\"onAddCliente()\\\"\\n                  href=\\\"javascript:void(0)\\\">\\n                  <b>Adicionar</b>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"clientes.controls.length > 0\\\">\\n            <div class=\\\"form-row\\\" *ngFor=\\\"let item of clientes.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n              <div class=\\\"form-group col mb-0\\\">\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-11\\\">\\n                    <label for=\\\"nome\\\">Nombre</label>\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      id=\\\"nome\\\"\\n                      formControlName=\\\"nome\\\"\\n                      (input)=\\\"onInput()\\\">\\n                  </div>\\n                  <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn-icon\\\"\\n                      (click)=\\\"onDeleteCliente(i)\\\">\\n                      <i class=\\\"fas fa-trash\\\"></i>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"mb-3\\\" *ngIf=\\\"clientes.controls.length == 0\\\">\\n            <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n          </div>\\n        </div>\\n        <div formArrayName=\\\"bancos\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <hr class=\\\"mt-0\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\n              <div class=\\\"mtc-title\\\">Bancos</div>\\n              <div>\\n                <a\\n                  class=\\\"text-secondary\\\"\\n                  (click)=\\\"onAddBanco()\\\"\\n                  href=\\\"javascript:void(0)\\\">\\n                  <b>Adicionar</b>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of bancos.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-3\\\">\\n                  <label for=\\\"nome\\\">Nome</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nome\\\"\\n                    formControlName=\\\"nome\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'nome') + ' ' + onNestedFieldRequired('bancos', i, 'nome')\\\">\\n                </div>\\n                <div class=\\\"form-group col-2\\\">\\n                  <label for=\\\"agencia\\\">Agencia</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"agencia\\\"\\n                    formControlName=\\\"agencia\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'agencia') + ' ' + onNestedFieldRequired('bancos', i, 'agencia')\\\">\\n                </div>\\n                <div class=\\\"form-group col-3\\\">\\n                  <label for=\\\"contaCorrente\\\">Cuenta corriente</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"contaCorrente\\\"\\n                    formControlName=\\\"contaCorrente\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'contaCorrente') + ' ' + onNestedFieldRequired('bancos', i, 'contaCorrente')\\\">\\n                </div>\\n                <div class=\\\"form-group col-3\\\">\\n                  <label for=\\\"telefone\\\">Telefono</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"telefone\\\"\\n                    formControlName=\\\"telefone\\\"\\n                    telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\"\\n                    (input)=\\\"onInput()\\\"\\n                    [ngClass]=\\\"onNestedFieldError('bancos', i, 'telefone') + ' ' + onNestedFieldRequired('bancos', i, 'telefone')\\\">\\n                </div>\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon\\\"\\n                    (click)=\\\"onDeleteBanco(i)\\\">\\n                    <i class=\\\"fas fa-trash\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col mb-0\\\">\\n            <hr class=\\\"mt-0\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col mb-0\\\">\\n            <label>Ventas concentradas</label>\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col\\\">\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                  <input\\n                    type=\\\"radio\\\"\\n                    id=\\\"vendasConcentradasSim\\\"\\n                    class=\\\"custom-control-input\\\"\\n                    formControlName=\\\"vendasConcentradas\\\"\\n                    value=\\\"Sim\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"vendasConcentradasSim\\\">Sim</label>\\n                </div>\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                  <input\\n                    type=\\\"radio\\\"\\n                    id=\\\"vendasConcentradasNao\\\"\\n                    class=\\\"custom-control-input\\\"\\n                    formControlName=\\\"vendasConcentradas\\\"\\n                    value=\\\"Não\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"vendasConcentradasNao\\\">Não</label>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"previsaoCompraTon\\\">Compra mensual estimada (Ton)</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"previsaoCompraTon\\\"\\n              formControlName=\\\"previsaoCompraTon\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"previsaoCompraValor\\\">Compra mensual estimada (R$)</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"previsaoCompraValor\\\"\\n              formControlName=\\\"previsaoCompraValor\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"faturamentoMedio\\\">Facturación media mensual</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"faturamentoMedio\\\"\\n              formControlName=\\\"faturamentoMedio\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"parecerVendedor\\\">Opinión del vendedor</label>\\n            <textarea\\n              class=\\\"form-control\\\"\\n              id=\\\"parecerVendedor\\\"\\n              formControlName=\\\"parecerVendedor\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('parecerVendedor') + ' ' + onFieldRequired('parecerVendedor')\\\">\\n            </textarea>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('parecerVendedor')\\\" message=\\\"Parecer do vendedor é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"row justify-content-center pt-5\\\" id=\\\"impressao-ficha-pac\\\" *ngIf=\\\"tipoVisao == 'ficha'\\\">\\n    <div class=\\\"col-9\\\">\\n      <h1>Propuesta de análisis de créditos (PAC)</h1>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Dados do cliente</div>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Razon social:</strong>\\n          <span *ngIf=\\\"dataFicha.razaoSocial == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.razaoSocial != null\\\">{{ dataFicha.razaoSocial }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Fecha de la solicitud:</strong>\\n          <span *ngIf=\\\"dataFicha.dataSolicitacao == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.dataSolicitacao != null\\\">{{ dataFicha.dataSolicitacao }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Código de cliente (TID):</strong>\\n          <span *ngIf=\\\"dataFicha.codCliente == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.codCliente != null\\\">{{ dataFicha.codCliente }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Código de cliente (SAP):</strong>\\n          <span *ngIf=\\\"dataFicha.codClienteDBA == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.codClienteDBA != null\\\">{{ dataFicha.codClienteDBA }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Limite de crédito actual:</strong>\\n          <span *ngIf=\\\"dataFicha.limiteCreditoAtual == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.limiteCreditoAtual == null\\\">{{ dataFicha.limiteCreditoAtual | currency:'BRL':'symbol':'1.2-2' }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Sector de actividade:</strong>\\n          <span *ngIf=\\\"dataFicha.setorAtividade == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.setorAtividade != null\\\">{{ dataFicha.setorAtividade }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Fecha de la última visita:</strong>\\n          <span *ngIf=\\\"dataFicha.dataUltimaVisita == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.dataUltimaVisita != null\\\">{{ dataFicha.dataUltimaVisita }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Instalaciones:</strong>\\n          <span *ngIf=\\\"dataFicha.instalacoes == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.instalacoes != null\\\">{{ dataFicha.instalacoes }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Número de funcionários:</strong>\\n          <span *ngIf=\\\"dataFicha.numFuncionarios == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.numFuncionarios == null\\\">{{ dataFicha.numFuncionarios }}</span>\\n        </p>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Propuestas</div>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Limite de crédito solicitado:</strong>\\n          <span *ngIf=\\\"dataFicha.limiteCreditoSolicitado == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.limiteCreditoSolicitado != null\\\">{{ dataFicha.limiteCreditoSolicitado | currency:'BRL':'symbol':'1.2-2' }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Condiciones de pago:</strong>\\n          <span *ngIf=\\\"dataFicha.condicaoPagto == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.condicaoPagto != null\\\">{{ dataFicha.condicaoPagto }}</span>\\n        </p>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Datos del solicitante</div>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Vendedor(a):</strong>\\n          <span *ngIf=\\\"dataFicha.condicaoPagto == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.condicaoPagto != null\\\">{{ dataFicha.nomeVendedor }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Gestor(a):</strong>\\n          <span *ngIf=\\\"dataFicha.gestorVendas == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.gestorVendas != null\\\">{{ dataFicha.gestorVendas | uppercase }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Telefono:</strong>\\n          <span *ngIf=\\\"dataFicha.gestorVendas == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.gestorVendas != null\\\">{{ dataFicha.telefoneVendedor }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Oficina de ventas:</strong>\\n          <span *ngIf=\\\"dataFicha.nomeEscritorio == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.nomeEscritorio != null\\\">{{ dataFicha.nomeEscritorio }}</span>\\n        </p>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Principales proveedores</div>\\n        <div *ngIf=\\\"dataFicha.fornecedores.length == 0\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dataFicha.fornecedores.length > 0\\\">\\n          <div class=\\\"row mt-2\\\" *ngFor=\\\"let item of dataFicha.fornecedores\\\">\\n            <div class=\\\"col-6\\\">\\n              <p class=\\\"mt-2 mb-0\\\">\\n                <strong class=\\\"mr-2\\\">Nombre:</strong>\\n                <span *ngIf=\\\"item.nome == null\\\">Sin informacion</span>\\n                <span *ngIf=\\\"item.nome != null\\\">{{ item.nome | uppercase }}</span>\\n              </p>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <p class=\\\"mt-2 mb-0\\\">\\n                <strong class=\\\"mr-2\\\">Telefono:</strong>\\n                <span *ngIf=\\\"item.telefone == null\\\">Sin informacion</span>\\n                <span *ngIf=\\\"item.telefone != null\\\">{{ item.telefone }}</span>\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Principales clientes</div>\\n        <div *ngIf=\\\"dataFicha.clientes.length == 0\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dataFicha.clientes.length > 0\\\">\\n          <div *ngFor=\\\"let item of dataFicha.clientes\\\">\\n            <p class=\\\"mt-2 mb-0\\\">\\n              <strong class=\\\"mr-2\\\">Nome:</strong> {{ item.nome | uppercase }}\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Principaless bancos</div>\\n        <div *ngIf=\\\"dataFicha.bancos.length == 0\\\">Sin informacion</div>\\n        <div *ngIf=\\\"dataFicha.bancos.length > 0\\\">\\n          <div class=\\\"row\\\" *ngFor=\\\"let item of dataFicha.bancos\\\">\\n            <div class=\\\"col-3\\\">\\n              <p class=\\\"mt-2 mb-0\\\">\\n                <strong class=\\\"mr-2\\\">Banco:</strong>\\n                <span *ngIf=\\\"item.nome == null\\\">Sin informacion</span>\\n                <span *ngIf=\\\"item.nome != null\\\">{{ item.nome | uppercase }}</span>\\n              </p>\\n            </div>\\n            <div class=\\\"col-3\\\">\\n              <p class=\\\"mt-2 mb-0\\\">\\n                <strong class=\\\"mr-2\\\">Agencia:</strong>\\n                <span *ngIf=\\\"item.agencia == null\\\">Sin informacion</span>\\n                <span *ngIf=\\\"item.agencia != null\\\">{{ item.agencia }}</span>\\n              </p>\\n            </div>\\n            <div class=\\\"col-3\\\">\\n              <p class=\\\"mt-2 mb-0\\\">\\n                <strong class=\\\"mr-2\\\">Cuenta corrinte:</strong>\\n                <span *ngIf=\\\"item.contaCorrente == null\\\">Sin informacion</span>\\n                <span *ngIf=\\\"item.contaCorrente != null\\\">{{ item.contaCorrente }}</span>\\n              </p>\\n            </div>\\n            <div class=\\\"col-3\\\">\\n              <p class=\\\"mt-2 mb-0\\\">\\n                <strong class=\\\"mr-2\\\">Telefono:</strong>\\n                <span *ngIf=\\\"item.telefone == null\\\">Sin informacion</span>\\n                <span *ngIf=\\\"item.telefone != null\\\">{{ item.telefone }}</span>\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-3\\\">\\n        <div class=\\\"mtc-title\\\">Datos financieros</div>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Vendas concretadas:</strong>\\n          <span *ngIf=\\\"dataFicha.vendasConcentradas == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.vendasConcentradas != null\\\">{{ dataFicha.vendasConcentradas }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Previsión mensual de compras (Ton):</strong>\\n          <span *ngIf=\\\"dataFicha.previsaoCompraTon == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.previsaoCompraTon != null\\\">{{ dataFicha.previsaoCompraTon | number:'1.3-3' }}t</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Previsión mensual de compras (R$):</strong>\\n          <span *ngIf=\\\"dataFicha.previsaoCompraValor == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.previsaoCompraValor != null\\\">{{ dataFicha.previsaoCompraValor | currency:'BRL':'symbol':'1.2-2' }}</span>\\n        </p>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <strong class=\\\"mr-2\\\">Facturación media mensual (R$):</strong>\\n          <span *ngIf=\\\"dataFicha.faturamentoMedio == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.faturamentoMedio != null\\\">{{ dataFicha.faturamentoMedio | currency:'BRL':'symbol':'1.2-2' }}</span>\\n        </p>\\n      </div>\\n      <div class=\\\"jumbotron p-3 mb-0\\\">\\n        <div class=\\\"mtc-title\\\">Opinión del vendedor</div>\\n        <p class=\\\"mt-2 mb-0\\\">\\n          <span *ngIf=\\\"dataFicha.parecerVendedor == null\\\">Sin informacion</span>\\n          <span *ngIf=\\\"dataFicha.parecerVendedor != null\\\">{{ dataFicha.parecerVendedor | uppercase }}</span>\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// Services\nimport { ComercialClientesHistoricoFinanceiroService } from './../historico-financeiro.service';\n\n// Interfaces\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-clientes-historico-financeiro-notas-promissorias',\n  templateUrl: './notas-promissorias.component.html',\n  styleUrls: ['./notas-promissorias.component.scss']\n})\nexport class ComercialClientesHistoricoFinanceiroNotasPromissoriasComponent\n  implements OnInit {\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  notasPromissorias: any = [];\n  notasPromissoriasLoaded: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private historicoFinanceiroService: ComercialClientesHistoricoFinanceiroService\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.parent.params.subscribe(params => {\n      this.getNotasPromissorias(params['id']);\n    });\n  }\n\n  getNotasPromissorias(id: any) {\n    this.historicoFinanceiroService\n      .getNotasPromissorias(id)\n      .subscribe((response: any) => {\n        if (response['responseCode'] === 200) {\n          this.notasPromissorias = response['result'];\n        }\n        this.notasPromissoriasLoaded = true;\n      });\n  }\n\n  classStatusBorder(status: string) {\n    let borderClass = '';\n\n    if (status == 'BAIXADA') {\n      borderClass = 'border-success';\n    } else if (status == 'QUITADA') {\n      borderClass = 'border-primary';\n    }\n\n    return borderClass;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NsaWVudGVzL2hpc3Rvcmljby1maW5hbmNlaXJvL2hpc3Rvcmljby1maW5hbmNlaXJvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Dias não úteis\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"dataInicial\\\">Fecha inicial</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataInicial\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataInicial\\\"\\n                [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired('dataInicial')\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial') == 'required'\\\" message=\\\"Data Inicial é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"dataFinal\\\">Fecha final</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataFinal\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataFinal\\\"\\n                [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired('dataFinal')\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal') == 'required'\\\" message=\\\"Data Final é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Cod. Material</th>\\n            <th scope=\\\"col\\\">Material</th>\\n            <th scope=\\\"col\\\">Línea / Clase</th>\\n            <th scope=\\\"col\\\">Ton. Vendidas</th>\\n            <th scope=\\\"col\\\">Nota Fiscal</th>\\n            <th scope=\\\"col\\\">Dt. Ultima Compra</th>\\n            <th scope=\\\"col\\\">Precio Unitário</th>\\n            <th scope=\\\"col\\\">Precio Total</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let ultimoPreco of dadosPagination; let i = index\\\">\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.codMaterial }}\\n            </td>\\n            <td class=\\\"hover\\\">\\n              {{ ultimoPreco.nomeMaterial | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.linha }} / {{ ultimoPreco.classe }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.qtdeToneladasVendidas | number:'1.3-3' }} ton \\n            </td>\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.nrNotaFiscal }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.dataUltimaCompra | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.precoUnitarioMaterial | currency:'BRL':'symbol':'1.2-2' }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\">\\n              {{ ultimoPreco.precoTotalMaterial | currency:'BRL':'symbol':'1.2-2' }}\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"dadosEmpty\\\">\\n      </empty-result>\\n    </div>\\n  </div>\\n</app-body>\";"],"sourceRoot":"webpack:///"}