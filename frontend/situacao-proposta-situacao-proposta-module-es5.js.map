{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/situacao-proposta/situacao-proposta.service.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/situacao-proposta/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/situacao-proposta/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/situacao-proposta/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/situacao-proposta/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/situacao-proposta/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/situacao-proposta/situacao-proposta.module.ts","webpack:///src/app/modules/comercial/cadastros/situacao-proposta/formulario/formulario.component.scss","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/situacao-proposta/situacao-proposta-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/situacao-proposta/formulario/formulario.component.html"],"names":["ComercialCadastrosSituacaoPropostaService","http","API","params","httpParams","param","append","get","pipe","codSituacaoProposta","situacaoProposta","post","put","updateSituacaoProposta","saveSituacaoProposta","codigo","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialCadastrosSituacaoPropostaFormularioComponent","activatedRoute","router","location","formBuilder","situacaoPropostaService","pnotifyService","atividadesService","titleService","loaderFullScreen","breadCrumbTree","formChanged","situacoesPropostaTid","getPNotify","registrarAcesso","setBreadCrumb","getFormFields","setFormBuilder","subscribe","getListaSituacaoPropostaTid","response","success","data","unshift","codSituacao","nomeSituacao","id","appTitle","setTitle","descricao","routerLink","idSubModulo","snapshot","detalhes","form","group","required","codParametroSituacaoProposta","codTipoFinalizacao","permiteAlterarEmpresa","error","back","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","valid","loaderNavbar","submittingForm","save","value","next","hasOwnProperty","mensagem","navigate","relativeTo","notice","confirm","selector","template","ComercialCadastrosSituacaoPropostaFormularioResolverGuard","route","getDetalhes","ComercialCadastrosSituacaoPropostaListaComponent","confirmModalService","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","setFormFilter","onDetailPanelEmitter","setSituacaoPropostaSelecionado","showDetailPanelSubscription","unsubscribe","config","event","showing","formValue","checkRouterParams","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","situacaoPropostaSelecionado","situacao","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaSituacaoProposta","slice","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","getAlteracoes","setTimeout","loadedFinished","index","confirmActivate","asObservable","result","activateSituacaoProposta","refreshMainData","showConfirm","confirmInactive","inactivateSituacaoProposta","i","ComercialCadastrosSituacaoPropostaModule","declarations","imports","forRoot","providers","FormDeactivateGuard","component","state","formCanDeactivate","routes","path","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosSituacaoPropostaModuleRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAaaA,yCAAyC;AAGpD,2DAAsBC,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAC,GAAA;AAEyB;;AAHU;AAAA;AAAA,mDAK3BC,MAL2B,EAKf;AACnC,gBAAIC,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;AACxBC,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBF,MAAM,CAACE,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKJ,IAAL,CACJM,GADI,WACG,KAAKL,GADR,aACqB;AAAEC,oBAAM,EAAEC;AAAV,aADrB,EAEJI,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAfmD;AAAA;AAAA,wDAiBzB;AACzB,mBAAO,KAAKP,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,iBAAuCM,IAAvC,CAA4C,4DAAK,CAAL,CAA5C,CAAP;AACD;AAnBmD;AAAA;AAAA,wCAqBtCC,mBArBsC,EAqBX;AACvC,mBAAO,KAAKR,IAAL,CACJM,GADI,WACG,KAAKL,GADR,yBAC0BO,mBAD1B,GAEJD,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAzBmD;AAAA;AAAA,sCA2BxCC,mBA3BwC,EA2Bb;AACrC,mBAAO,KAAKR,IAAL,CACJM,GADI,WACG,KAAKL,GADR,uBACwBO,mBADxB,GAEJD,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AA/BmD;AAAA;AAAA,+CAiCvBE,gBAjCuB,EAiCa;AAC/D,mBAAO,KAAKT,IAAL,CAAUU,IAAV,WAAkB,KAAKT,GAAvB,cAAqCQ,gBAArC,EAAuDF,IAAvD,CAA4D,4DAAK,CAAL,CAA5D,CAAP;AACD;AAnCmD;AAAA;AAAA,iDAqCrBE,gBArCqB,EAqCe;AACjE,mBAAO,KAAKT,IAAL,CACJW,GADI,WACG,KAAKV,GADR,iBACyBQ,gBADzB,EAEJF,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAzCmD;AAAA;AAAA,+BA2C/CE,gBA3C+C,EA2Cb;AACrC,gBAAIA,gBAAgB,CAACD,mBAAjB,KAAyC,IAA7C,EAAmD;AACjD,qBAAO,KAAKI,sBAAL,CAA4BH,gBAA5B,CAAP;AACD;;AAED,mBAAO,KAAKI,oBAAL,CAA0BJ,gBAA1B,CAAP;AACD;AAjDmD;AAAA;AAAA,mDAmD3BK,MAnD2B,EAmDb;AACrC,mBAAO,KAAKd,IAAL,CAAUU,IAAV,WAAkB,KAAKT,GAAvB,cAAqCa,MAArC,EAA6CP,IAA7C,CAAkD,4DAAK,CAAL,CAAlD,CAAP;AACD;AArDmD;AAAA;AAAA,qDAuDzBO,MAvDyB,EAuDX;AACvC,mBAAO,KAAKd,IAAL,CAAUU,IAAV,WAAkB,KAAKT,GAAvB,gBAAuCa,MAAvC,EAA+CP,IAA/C,CAAoD,4DAAK,CAAL,CAApD,CAAP;AACD;AAzDmD;;AAAA;AAAA,S;;;;gBAZ7C;;;;AAYIR,+CAAyC,6DAHrD,iEAAW;AACVgB,kBAAU,EAAE;AADF,OAAX,CAGqD,E,+EAGxB,+D,EAHwB,GAAzChB,yCAAyC,CAAzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCVb;;;UAMaiB,mBAAmB;AAC9B,qCAAoBC,YAApB,EAAkD;AAAA;;AAA9B,eAAAA,YAAA,GAAAA,YAAA;AAAgC;;AADtB;AAAA;AAAA,sCAI5BC,IAJ4B,EAK5BC,KAL4B,EAM5BC,OAN4B,EAO5BC,SAP4B,EAQ5BC,KAR4B,EAQd;AAEd,gBAAMC,QAAQ,GAAG,KAAKN,YAAL,CAAkBO,IAAlB,CAAuB,8EAAvB,EAA8C;AAC7DC,sBAAQ,EAAE,KADmD;AAE7DC,iCAAmB,EAAE,IAFwC;AAG7DC,sBAAQ,EAAE,KAHmD;AAI7D,uBAAO;AAJsD,aAA9C,CAAjB;AAOAJ,oBAAQ,CAACK,OAAT,CAAiBV,IAAjB,GAAwBA,IAAxB;AACAK,oBAAQ,CAACK,OAAT,CAAiBT,KAAjB,GAAyBA,KAAzB;AACAI,oBAAQ,CAACK,OAAT,CAAiBR,OAAjB,GAA2BA,OAA3B;;AAEA,gBAAIF,IAAI,KAAK,QAAb,EAAuB;AACrBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,+CAD+B,EAE/B,mCAF+B,CAAjC;AAID;;AAED,gBAAIX,IAAI,KAAK,YAAb,EAA2B;AACzBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,oCAD+B,CAAjC;AAGD;;AAED,gBAAIR,SAAJ,EAAe;AACbE,sBAAQ,CAACK,OAAT,CAAiBP,SAAjB,GAA6BA,SAA7B;AACD;;AAED,gBAAIC,KAAJ,EAAW;AACTC,sBAAQ,CAACK,OAAT,CAAiBN,KAAjB,GAAyBA,KAAzB;AACD,aAhCa,CAkCd;AACA;;;AACA,mBAA+BC,QAAQ,CAACK,OAAT,CAAkBE,aAAjD;AACD;AA7C6B;;AAAA;AAAA,S;;;;gBARvB;;;;AAQId,yBAAmB,6DAH/B,iEAAW;AACVD,kBAAU,EAAE;AADF,OAAX,CAG+B,E,+EACI,kE,EADJ,GAAnBC,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCcf;;;UAeae,qDAAqD;AAchE,uEACUC,cADV,EAEUC,MAFV,EAGUC,QAHV,EAIUC,WAJV,EAKUC,uBALV,EAMUC,cANV,EAOUC,iBAPV,EAQUC,YARV,EAQoC;AAAA;;AAP1B,eAAAP,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,uBAAA,GAAAA,uBAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AAnBV,eAAAC,gBAAA,GAAmB,IAAnB;AAGA,eAAAC,cAAA,GAA6B,EAA7B;AAGA,eAAAC,WAAA,GAAc,KAAd;AAGA,eAAAC,oBAAA,GAAmC,EAAnC;AAYE,eAAKN,cAAL,CAAoBO,UAApB;AACD;;AAzB+D;AAAA;AAAA,qCA2BxD;AACN,iBAAKC,eAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,cAAL;AACD;AAhC+D;AAAA;AAAA,4CAkCjD;AACb,iBAAKV,iBAAL,CAAuBO,eAAvB,GAAyCI,SAAzC;AACD;AApC+D;AAAA;AAAA,0CAsCnD;AAAA;;AACX,iBAAKT,gBAAL,GAAwB,IAAxB;AAEA,iBAAKJ,uBAAL,CACGc,2BADH,GAEG3C,IAFH,CAGI,gEAAS,YAAM;AACb,mBAAI,CAACiC,gBAAL,GAAwB,KAAxB;AACD,aAFD,CAHJ,EAOGS,SAPH,CAOa,UAACE,QAAD,EAA4B;AACrC,kBAAIA,QAAQ,CAACC,OAAT,KAAqB,IAAzB,EAA+B;AAC7B,qBAAI,CAACT,oBAAL,GAA4BQ,QAAQ,CAACE,IAArC;;AAEA,qBAAI,CAACV,oBAAL,CAA0BW,OAA1B,CAAkC;AAChCC,6BAAW,EAAE,CADmB;AAEhCC,8BAAY,EAAE;AAFkB,iBAAlC;AAID;AACF,aAhBH;AAiBD;AA1D+D;AAAA;AAAA,0CA4DnD;AAAA;;AACX,iBAAKxB,cAAL,CAAoB9B,MAApB,CAA2B+C,SAA3B,CAAqC,UAAC/C,MAAD,EAAiB;AACpD,kBAAIA,MAAM,CAACuD,EAAX,EAAe;AACb,sBAAI,CAACC,QAAL,GAAgB,6BAAhB;AACD,eAFD,MAEO;AACL,sBAAI,CAACA,QAAL,GAAgB,2BAAhB;AACD;;AAED,oBAAI,CAACnB,YAAL,CAAkBoB,QAAlB,CAA2B,MAAI,CAACD,QAAhC;;AAEA,oBAAI,CAACjB,cAAL,GAAsB,CACpB;AACEmB,yBAAS,EAAE,MADb;AAEEC,0BAAU,EAAE;AAFd,eADoB,EAKpB;AACED,yBAAS,EAAE,WADb;AAEEC,0BAAU,iCAA0B3D,MAAM,CAAC4D,WAAjC;AAFZ,eALoB,EASpB;AACEF,yBAAS,EAAE,sBADb;AAEEC,0BAAU,iCAA0B3D,MAAM,CAAC4D,WAAjC;AAFZ,eAToB,EAapB;AACEF,yBAAS,EAAE,MAAI,CAACF;AADlB,eAboB,CAAtB;AAiBD,aA1BD;AA2BD;AAxF+D;AAAA;AAAA,2CA0FlD;AACZ,gBAAI,KAAK1B,cAAL,CAAoB+B,QAApB,CAA6BV,IAA7B,CAAkCW,QAAlC,CAA2CZ,OAA3C,KAAuD,IAA3D,EAAiE;AAC/D,kBAAMY,QAAQ,GAAqB,KAAKhC,cAAL,CAAoB+B,QAApB,CAA6BV,IAA7B,CAChCW,QADgC,CACvBX,IADZ;AAGA,mBAAKY,IAAL,GAAY,KAAK9B,WAAL,CAAiB+B,KAAjB,CAAuB;AACjC1D,mCAAmB,EAAE,CAACwD,QAAQ,CAACxD,mBAAV,CADY;AAEjCC,gCAAgB,EAAE,CAACuD,QAAQ,CAACvD,gBAAV,EAA4B,CAAC,0DAAW0D,QAAZ,CAA5B,CAFe;AAGjCC,4CAA4B,EAAE,CAC5BJ,QAAQ,CAACI,4BADmB,EAE5B,CAAC,0DAAWD,QAAZ,CAF4B,CAHG;AAOjCZ,2BAAW,EAAE,CAACS,QAAQ,CAACT,WAAV,EAAuB,CAAC,0DAAWY,QAAZ,CAAvB,CAPoB;AAQjCE,kCAAkB,EAAE,CAACL,QAAQ,CAACK,kBAAV,CARa;AASjCC,qCAAqB,EAAE,CAACN,QAAQ,CAACM,qBAAV;AATU,eAAvB,CAAZ;AAWD,aAfD,MAeO;AACL,mBAAKjC,cAAL,CAAoBkC,KAApB;AACA,mBAAKrC,QAAL,CAAcsC,IAAd;AACD;AACF;AA9G+D;AAAA;AAAA,uCAgHnDC,KAhHmD,EAgHtC;AACxB,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AAtH+D;AAAA;AAAA,yCAwHjDA,KAxHiD,EAwHvC;AACvBA,iBAAK,GAAG,KAAKR,IAAL,CAAU3D,GAAV,CAAcmE,KAAd,CAAR;AAEA,mBAAOA,KAAK,CAACE,MAAN,IAAgB,SAAhB,IAA6BF,KAAK,CAACG,OAA1C;AACD;AA5H+D;AAAA;AAAA,0CA+H9DC,eA/H8D,EAgI9DC,oBAhI8D,EAgIjC;AAE7B,gBAAID,eAAe,CAACE,SAApB,EAA+B;AAC7B,kBAAMA,SAAS,GAAGF,eAAe,CAACE,SAAhB,CAA0B,EAA1B,CAAlB;;AACA,kBAAIA,SAAS,IAAIA,SAAS,CAACZ,QAA3B,EAAqC;AACnC,uBAAO,aAAP;AACD;AACF;;AAED,gBAAIW,oBAAJ,EAA0B;AACxB,mBAAK,IAAME,WAAX,IAA0BH,eAAe,CAAC,UAAD,CAAzC,EAAuD;AACrD,oBAAIA,eAAe,CAAC,UAAD,CAAf,CAA4BG,WAA5B,CAAJ,EAA8C;AAC5C,sBACE,KAAKC,eAAL,CAAqBJ,eAAe,CAAC,UAAD,CAAf,CAA4BG,WAA5B,CAArB,KACAA,WAAW,IAAIF,oBAFjB,EAGE;AACA,2BAAO,aAAP;AACD;AACF;AACF;AACF;;AAED,mBAAO,EAAP;AACD;AAvJ+D;AAAA;AAAA,qCAyJxD;AAAA;;AACN,gBAAI,KAAKb,IAAL,CAAUiB,QAAd,EAAwB;AACtB,mBAAKhD,QAAL,CAAcsC,IAAd;AACD,aAFD,MAEO;AACL,kBAAI,KAAKP,IAAL,CAAUkB,KAAd,EAAqB;AACnB,qBAAKC,YAAL,GAAoB,IAApB;AACA,qBAAKC,cAAL,GAAsB,IAAtB;AAEA,qBAAKjD,uBAAL,CACGkD,IADH,CACQ,KAAKrB,IAAL,CAAUsB,KADlB,EAEGhF,IAFH,CAGI,gEAAS,YAAM;AACb,wBAAI,CAAC6E,YAAL,GAAoB,KAApB;AACA,wBAAI,CAACC,cAAL,GAAsB,KAAtB;AACD,iBAHD,CAHJ,EAQGpC,SARH,CAQa;AACTuC,sBAAI,EAAE,cAACrC,QAAD,EAAmB;AACvB,wBACEA,QAAQ,CAACsC,cAAT,CAAwB,UAAxB,KACAtC,QAAQ,CAACsC,cAAT,CAAwB,SAAxB,CADA,IAEAtC,QAAQ,CAACC,OAAT,KAAqB,IAHvB,EAIE;AACA,4BAAI,CAACV,WAAL,GAAmB,KAAnB;;AACA,4BAAI,CAACL,cAAL,CAAoBe,OAApB,CAA4BD,QAAQ,CAACuC,QAArC;;AAEA,4BAAI,CAAC1D,cAAL,CAAoB9B,MAApB,CAA2B+C,SAA3B,CAAqC,UAAC/C,MAAD,EAAiB;AACpD,4BAAIA,MAAM,CAACuF,cAAP,CAAsB,IAAtB,CAAJ,EAAiC;AAC/B,gCAAI,CAACvD,QAAL,CAAcsC,IAAd;AACD,yBAFD,MAEO;AACL,gCAAI,CAACvC,MAAL,CAAY0D,QAAZ,CAAqB,CAAC,UAAD,CAArB,EAAmC;AACjCC,sCAAU,EAAE,MAAI,CAAC5D;AADgB,2BAAnC;AAGD;AACF,uBARD;AASD,qBAjBD,MAiBO,IACLmB,QAAQ,CAACsC,cAAT,CAAwB,UAAxB,KACAtC,QAAQ,CAACsC,cAAT,CAAwB,SAAxB,CADA,IAEAtC,QAAQ,CAACC,OAAT,KAAqB,KAHhB,EAIL;AACA,4BAAI,CAACf,cAAL,CAAoBwD,MAApB,CAA2B1C,QAAQ,CAACuC,QAApC;AACD,qBANM,MAMA;AACL,4BAAI,CAACrD,cAAL,CAAoBkC,KAApB;AACD;AACF,mBA5BQ;AA6BTA,uBAAK,EAAE,eAACA,MAAD,EAAgB;AACrB,0BAAI,CAAClC,cAAL,CAAoBkC,KAApB;AACD;AA/BQ,iBARb;AAyCD;AACF;AACF;AA5M+D;AAAA;AAAA,qCA8MxD;AACN,iBAAKrC,QAAL,CAAcsC,IAAd;AACD;AAhN+D;AAAA;AAAA,oCAkNzD;AACL,iBAAK9B,WAAL,GAAmB,IAAnB;AACD;AApN+D;AAAA;AAAA,8CAsN/C;AACf,gBAAI,KAAKA,WAAT,EAAsB;AACpB,kBAAIoD,OAAO,CAAC,4CAAD,CAAX,EAA2D;AACzD,uBAAO,IAAP;AACD,eAFD,MAEO;AACL,uBAAO,KAAP;AACD;AACF;;AACD,mBAAO,IAAP;AACD;AA/N+D;;AAAA;AAAA,S;;;;gBA5BzD;;gBAAgB;;gBAChB;;gBAGP;;gBAUO;;gBACA;;gBACA;;gBACA;;;;AAWI/D,2DAAqD,6DALjE,gEAAU;AACTgE,gBAAQ,EAAE,kDADD;AAETC,gBAAQ,EAAR,6EAFS;;AAAA,OAAV,CAKiE,E,+EAetC,8D,EACR,sD,EACE,wD,EACG,0D,EACY,oG,EACT,2F,EACG,sG,EACL,wF,EAtBwC,GAArDjE,qDAAqD,CAArD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCzBb;;;UAMakE,yDAAyD;AAEpE,2EACU7D,uBADV,EAC4E;AAAA;;AAAlE,eAAAA,uBAAA,GAAAA,uBAAA;AACN;;AAJgE;AAAA;AAAA,kCAM5D8D,KAN4D,EAM/B;AACnC,gBAAIA,KAAK,CAAChG,MAAN,IAAgBgG,KAAK,CAAChG,MAAN,CAAauD,EAAjC,EAAqC;AACnC,qBAAO,KAAKrB,uBAAL,CAA6B+D,WAA7B,CAAyCD,KAAK,CAAChG,MAAN,CAAauD,EAAtD,CAAP;AACD,aAHkC,CAKnC;;;AACA,mBAAO,gDAAG;AACRL,qBAAO,EAAE,IADD;AAERC,kBAAI,EAAE;AACJ7C,mCAAmB,EAAE,IADjB;AAEJC,gCAAgB,EAAE,IAFd;AAGJ2D,4CAA4B,EAAE,CAH1B;AAIJb,2BAAW,EAAE,IAJT;AAKJc,kCAAkB,EAAE,CALhB;AAMJC,qCAAqB,EAAE;AANnB;AAFE,aAAH,CAAP;AAWD;AAvBmE;;AAAA;AAAA,S;;;;gBAL7D;;;;AAKI2B,+DAAyD,6DAHrE,iEAAW;AACVlF,kBAAU,EAAE;AADF,OAAX,CAGqE,E,+EAGjC,oG,EAHiC,GAAzDkF,yDAAyD,CAAzD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCWb;;;UAmBaG,gDAAgD;AAkD3D,kEACUpE,cADV,EAEUC,MAFV,EAGUC,QAHV,EAIUC,WAJV,EAKUC,uBALV,EAMUC,cANV,EAOUC,iBAPV,EAQUC,YARV,EASU8D,mBATV,EAUUC,kBAVV,EAUgD;AAAA;;AATtC,eAAAtE,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,uBAAA,GAAAA,uBAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAA8D,mBAAA,GAAAA,mBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AAxDV,eAAAlB,YAAA,GAAe,KAAf;AACA,eAAA5C,gBAAA,GAAmB,IAAnB;AAEA,eAAAC,cAAA,GAAoC,EAApC;AAEA,eAAA8D,SAAA,GAA8B,CAC5B;AACE9C,cAAE,EAAE,CADN;AAEE+C,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACEhD,cAAE,EAAE,CADN;AAEE+C,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA,eAAAC,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C;AAOA,eAAAC,eAAA,GAAkB,KAAlB;AAGA,eAAAC,OAAA,GAAU,qBAAV;AACA,eAAAC,SAAA,GAAY,KAAZ;AAEA;;AAEA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,WAAA,GAAc,CAAd;AACA,eAAAC,UAAA,GAAa,CAAb;AAEA,eAAAC,KAAA,GAAiC,EAAjC;AACA,eAAAC,eAAA,GAA2C,EAA3C;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,UAAA,GAAa,KAAb;AAGA,eAAAC,UAAA,GAAyB,EAAzB;AAcE,eAAKlF,cAAL,CAAoBO,UAApB;AACD;;AA/D0D;AAAA;AAAA,qCAiEnD;AACN,iBAAKC,eAAL;AACA,iBAAKC,aAAL;AACA,iBAAK0E,aAAL;AACA,iBAAKjF,YAAL,CAAkBoB,QAAlB,CAA2B,sBAA3B;AACA,iBAAK8D,oBAAL;AACA,iBAAKC,8BAAL;AACD;AAxE0D;AAAA;AAAA,wCA0EhD;AACT,iBAAKC,2BAAL,CAAiCC,WAAjC;AACD;AA5E0D;AAAA;AAAA,4CA8E5C;AACb,iBAAKtF,iBAAL,CAAuBO,eAAvB,GAAyCI,SAAzC;AACD;AAhF0D;AAAA;AAAA,0CAkF9C;AAAA;;AACX,iBAAKjB,cAAL,CAAoB9B,MAApB,CAA2B+C,SAA3B,CAAqC,UAAC/C,MAAD,EAAiB;AACpD,oBAAI,CAACuC,cAAL,GAAsB,CACpB;AACEmB,yBAAS,EAAE,MADb;AAEEC,0BAAU,EAAE;AAFd,eADoB,EAKpB;AACED,yBAAS,EAAE,WADb;AAEEC,0BAAU,iCAA0B3D,MAAM,CAAC,aAAD,CAAhC;AAFZ,eALoB,EASpB;AACE0D,yBAAS,EAAE;AADb,eAToB,CAAtB;AAaD,aAdD;AAeD;AAlG0D;AAAA;AAAA,iDAoGvC;AAAA;;AAClB,iBAAK+D,2BAAL,GAAmC,KAAKrB,kBAAL,CAAwBuB,MAAxB,CAA+B5E,SAA/B,CACjC,UAAC6E,KAAD,EAAgB;AACd,oBAAI,CAAClB,eAAL,GAAuBkB,KAAK,CAACC,OAA7B;AACD,aAHgC,CAAnC;AAKD;AA1G0D;AAAA;AAAA,0CA4G9C;AACX,gBAAMC,SAAS,GAAQ,KAAKC,iBAAL,EAAvB;AAEA,iBAAKhE,IAAL,GAAY,KAAK9B,WAAL,CAAiB+B,KAAjB,CAAuB;AACjCzD,8BAAgB,EAAE,CAACuH,SAAS,CAACvH,gBAAX,CADe;AAEjCD,iCAAmB,EAAE,CAACwH,SAAS,CAACxH,mBAAX,CAFY;AAGjC+C,yBAAW,EAAE,CAACyE,SAAS,CAACzE,WAAX,CAHoB;AAIjCsD,qBAAO,EAAE,CAACmB,SAAS,CAACnB,OAAX,CAJwB;AAKjCC,uBAAS,EAAE,CAACkB,SAAS,CAAClB,SAAX,CALsB;AAMjCoB,oBAAM,EAAE,CAACF,SAAS,CAACE,MAAX,CANyB;AAOjCC,uBAAS,EAAE,CAACH,SAAS,CAACG,SAAX,EAAsB,0DAAWhE,QAAjC;AAPsB,aAAvB,CAAZ;AAUA,iBAAKiE,UAAL;AACA,iBAAK5F,gBAAL,GAAwB,KAAxB;AACD;AA3H0D;AAAA;AAAA,8CA6H1C;AAAA;;AACf,gBAAIwF,SAAS,GAAG;AACdvH,8BAAgB,EAAE,IADJ;AAEdD,iCAAmB,EAAE,CAFP;AAGd+C,yBAAW,EAAE,CAHC;AAIdsD,qBAAO,EAAE,KAAKA,OAJA;AAKdC,uBAAS,EAAE,KAAKA,SALF;AAMdoB,oBAAM,EAAE,CANM;AAOdC,uBAAS,EAAE,KAAKnB;AAPF,aAAhB;AAUA,iBAAKqB,0BAAL,GAAkC,KAAKrG,cAAL,CAAoBsG,WAApB,CAAgCrF,SAAhC,CAChC,UAACqF,WAAD,EAAsB;AACpB,kBAAIC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,MAAzB,GAAkC,CAAtC,EAAyC;AACvC,oBAAIvI,MAAM,GAAGwI,IAAI,CAACJ,WAAW,CAAC,GAAD,CAAZ,CAAjB;AACApI,sBAAM,GAAGyI,IAAI,CAACC,KAAL,CAAW1I,MAAX,CAAT;;AACA,sBAAI,CAAC2I,MAAL,CAAY3I,MAAZ;;AAEAqI,sBAAM,CAACC,IAAP,CAAYR,SAAZ,EAAuBc,OAAvB,CAA+B,UAACC,OAAD,EAAa;AAC1CR,wBAAM,CAACC,IAAP,CAAYtI,MAAZ,EAAoB4I,OAApB,CAA4B,UAACE,QAAD,EAAc;AACxC,wBACED,OAAO,IAAIC,QAAX,IACAhB,SAAS,CAACe,OAAD,CAAT,IAAsB7I,MAAM,CAAC8I,QAAD,CAF9B,EAGE;AACA,0BAAI,CAACC,KAAK,CAACC,MAAM,CAAChJ,MAAM,CAAC8I,QAAD,CAAP,CAAP,CAAV,EAAsC;AACpChB,iCAAS,CAACe,OAAD,CAAT,GAAqBG,MAAM,CAAChJ,MAAM,CAAC8I,QAAD,CAAP,CAA3B;AACD,uBAFD,MAEO;AACLhB,iCAAS,CAACe,OAAD,CAAT,GAAqB7I,MAAM,CAAC8I,QAAD,CAA3B;AACD;AACF;AACF,mBAXD;AAYD,iBAbD;AAcD;AACF,aAtB+B,CAAlC;AAwBA,iBAAKX,0BAAL,CAAgCT,WAAhC;AAEA,mBAAOI,SAAP;AACD;AAnK0D;AAAA;AAAA,uCAqKjD;AACR,gBAAI,KAAK/D,IAAL,CAAUsB,KAAV,CAAgBsB,OAAhB,KAA4B,KAAKA,OAArC,EAA8C;AAC5C,mBAAKA,OAAL,GAAe,KAAK5C,IAAL,CAAUsB,KAAV,CAAgBsB,OAA/B;AACD;;AAED,gBAAI,KAAK5C,IAAL,CAAUsB,KAAV,CAAgBuB,SAAhB,KAA8B,KAAKA,SAAvC,EAAkD;AAChD,mBAAKA,SAAL,GAAiB,KAAK7C,IAAL,CAAUsB,KAAV,CAAgBuB,SAAjC;AACD;AACF;AA7K0D;AAAA;AAAA,2DA+K7B;AAC5B,iBAAKqC,2BAAL,GAAmC;AACjC1I,8BAAgB,EAAE,IADe;AAEjCD,iCAAmB,EAAE,CAFY;AAGjC4D,0CAA4B,EAAE,CAHG;AAIjCb,yBAAW,EAAE,CAJoB;AAKjC6F,sBAAQ,EAAE,IALuB;AAMjC/E,gCAAkB,EAAE,IANa;AAOjCC,mCAAqB,EAAE;AAPU,aAAnC;AASD;AAzL0D;AAAA;AAAA,uCA2L9CG,KA3L8C,EA2LjC;AACxB,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AAjM0D;AAAA;AAAA,yCAmM5CA,KAnM4C,EAmMlC;AACvBA,iBAAK,GAAG,KAAKR,IAAL,CAAU3D,GAAV,CAAcmE,KAAd,CAAR;AAEA,mBAAOA,KAAK,CAACE,MAAN,IAAgB,SAAhB,IAA6BF,KAAK,CAACG,OAA1C;AACD;AAvM0D;AAAA;AAAA,0CA0MzDC,eA1MyD,EA2MzDC,oBA3MyD,EA2M5B;AAE7B,gBAAID,eAAe,CAACE,SAApB,EAA+B;AAC7B,kBAAMA,SAAS,GAAGF,eAAe,CAACE,SAAhB,CAA0B,EAA1B,CAAlB;;AACA,kBAAIA,SAAS,IAAIA,SAAS,CAACZ,QAA3B,EAAqC;AACnC,uBAAO,aAAP;AACD;AACF;;AAED,gBAAIW,oBAAJ,EAA0B;AACxB,mBAAK,IAAME,WAAX,IAA0BH,eAAe,CAAC,UAAD,CAAzC,EAAuD;AACrD,oBAAIA,eAAe,CAAC,UAAD,CAAf,CAA4BG,WAA5B,CAAJ,EAA8C;AAC5C,sBACE,KAAKC,eAAL,CAAqBJ,eAAe,CAAC,UAAD,CAAf,CAA4BG,WAA5B,CAArB,KACAA,WAAW,IAAIF,oBAFjB,EAGE;AACA,2BAAO,aAAP;AACD;AACF;AACF;AACF;;AAED,mBAAO,EAAP;AACD;AAlO0D;AAAA;AAAA,qCAoOhDuE,MApOgD,EAoOlC;AACvB,gBAAI,KAAKxC,OAAL,KAAiBwC,MAArB,EAA6B;AAC3B,kBAAI,KAAKvC,SAAL,IAAkB,MAAtB,EAA8B;AAC5B,qBAAKA,SAAL,GAAiB,KAAjB;AACD,eAFD,MAEO,IAAI,KAAKA,SAAL,IAAkB,KAAtB,EAA6B;AAClC,qBAAKA,SAAL,GAAiB,MAAjB;AACD;AACF,aAND,MAMO;AACL,mBAAKD,OAAL,GAAewC,MAAf;AACA,mBAAKvC,SAAL,GAAiB,KAAjB;AACD;;AAED,iBAAK7C,IAAL,CAAUsB,KAAV,CAAgBsB,OAAhB,GAA0B,KAAKA,OAA/B;AACA,iBAAK5C,IAAL,CAAUsB,KAAV,CAAgBuB,SAAhB,GAA4B,KAAKA,SAAjC;AAEA,iBAAKwC,QAAL;AACD;AApP0D;AAAA;AAAA,qCAsPnD;AACN,gBAAI,KAAKrF,IAAL,CAAUkB,KAAd,EAAqB;AACnB,mBAAK6B,YAAL,GAAoB,KAAK/C,IAAL,CAAUsB,KAAV,CAAgB4C,SAApC;AACA,mBAAKlB,WAAL,GAAmB,CAAnB;AACA,mBAAKsC,eAAL,CAAqB,KAAKC,cAAL,EAArB;AACD;AACF;AA5P0D;AAAA;AAAA,0CA8P3CtJ,MA9P2C,EA8PhC;AACzB,iBAAK+B,MAAL,CAAY0D,QAAZ,CAAqB,EAArB,EAAyB;AACvBC,wBAAU,EAAE,KAAK5D,cADM;AAEvBsG,yBAAW,EAAE;AAAEmB,iBAAC,EAAEC,IAAI,CAACf,IAAI,CAACgB,SAAL,CAAezJ,MAAf,CAAD;AAAT;AAFU,aAAzB;AAIA,iBAAK2I,MAAL,CAAY3I,MAAZ;AACD;AApQ0D;AAAA;AAAA,2CAsQ7C;AACZ,gBAAIA,MAAM,GAAQ,EAAlB;;AAEA,gBAAI,KAAK+D,IAAL,CAAUsB,KAAV,CAAgB9E,gBAApB,EAAsC;AACpCP,oBAAM,CAACO,gBAAP,GAA0B,KAAKwD,IAAL,CAAUsB,KAAV,CAAgB9E,gBAA1C;AACD;;AAED,gBAAI,KAAKwD,IAAL,CAAUsB,KAAV,CAAgBhC,WAApB,EAAiC;AAC/BrD,oBAAM,CAACqD,WAAP,GAAqB,KAAKU,IAAL,CAAUsB,KAAV,CAAgBhC,WAArC;AACD;;AAEDrD,kBAAM,CAAC2G,OAAP,GAAiB,KAAK5C,IAAL,CAAUsB,KAAV,CAAgBsB,OAAjC;AACA3G,kBAAM,CAAC4G,SAAP,GAAmB,KAAK7C,IAAL,CAAUsB,KAAV,CAAgBuB,SAAnC;AAEA,mBAAO5G,MAAP;AACD;AArR0D;AAAA;AAAA,iCAuRpDA,MAvRoD,EAuRzC;AAAA;;AAChB,iBAAKkF,YAAL,GAAoB,IAApB;AACA,iBAAK+B,KAAL,GAAa,EAAb;AACA,iBAAKC,eAAL,GAAuB,EAAvB;AACA,iBAAKC,WAAL,GAAmB,KAAnB;AACA,iBAAKC,UAAL,GAAkB,KAAlB;AACA,iBAAKhB,kBAAL,CAAwBsD,IAAxB;AAEA,iBAAKxH,uBAAL,CACGyH,wBADH,CAC4B3J,MAD5B,EAEGK,IAFH,CAGI,gEAAS,YAAM;AACb,oBAAI,CAAC6E,YAAL,GAAoB,KAApB;AACA,oBAAI,CAACiC,WAAL,GAAmB,IAAnB;AACD,aAHD,CAHJ,EAQGpE,SARH,CAQa;AACTuC,kBAAI,EAAE,cAACrC,QAAD,EAAmB;AACvB,oBAAIA,QAAQ,CAACsC,cAAT,CAAwB,SAAxB,KAAsCtC,QAAQ,CAACC,OAAT,KAAqB,IAA/D,EAAqE;AACnE,wBAAI,CAAC+D,KAAL,GAAahE,QAAQ,CAACE,IAAtB;AACA,wBAAI,CAAC+D,eAAL,GAAuB,MAAI,CAACD,KAAL,CAAW2C,KAAX,CAAiB,CAAjB,EAAoB,MAAI,CAAC9C,YAAzB,CAAvB;AACA,wBAAI,CAACE,UAAL,GAAkB,MAAI,CAACC,KAAL,CAAWsB,MAA7B;AACA,wBAAI,CAACpB,WAAL,GAAmB,IAAnB;AACD,iBALD,MAKO,IACLlE,QAAQ,CAACsC,cAAT,CAAwB,SAAxB,KACAtC,QAAQ,CAACC,OAAT,KAAqB,KAFhB,EAGL;AACA,wBAAI,CAACkE,UAAL,GAAkB,IAAlB;AACD,iBALM,MAKA;AACL,wBAAI,CAACjF,cAAL,CAAoBkC,KAApB;;AACA,wBAAI,CAAC+C,UAAL,GAAkB,IAAlB;AACD;AACF,eAhBQ;AAiBT/C,mBAAK,EAAE,eAACA,OAAD,EAAgB;AACrB,sBAAI,CAAC+C,UAAL,GAAkB,IAAlB;;AAEA,oBAAI/C,OAAK,CAACA,KAAN,CAAYkB,cAAZ,CAA2B,UAA3B,CAAJ,EAA4C;AAC1C,wBAAI,CAACpD,cAAL,CAAoBkC,KAApB,CAA0BA,OAAK,CAACA,KAAN,CAAYmB,QAAtC;AACD,iBAFD,MAEO;AACL,wBAAI,CAACrD,cAAL,CAAoBkC,KAApB;AACD;AACF;AAzBQ,aARb;AAmCD;AAlU0D;AAAA;AAAA,4CAoUzC9D,gBApUyC,EAoUP;AAClD,gBAAIsJ,WAAJ;;AAEA,gBAAItJ,gBAAgB,CAAC8C,WAAjB,KAAiC,CAArC,EAAwC;AACtCwG,yBAAW,GAAG,gBAAd;AACD,aAFD,MAEO,IAAItJ,gBAAgB,CAAC8C,WAAjB,KAAiC,CAArC,EAAwC;AAC7CwG,yBAAW,GAAG,eAAd;AACD;;AAED,mBAAOA,WAAP;AACD;AA9U0D;AAAA;AAAA,wCAgV7CjC,KAhV6C,EAgVtB;AACnC,gBAAMkC,SAAS,GAAG,CAAClC,KAAK,CAACmC,IAAN,GAAa,CAAd,IAAmBnC,KAAK,CAACd,YAA3C;AACA,gBAAMkD,OAAO,GAAGpC,KAAK,CAACmC,IAAN,GAAanC,KAAK,CAACd,YAAnC;AACA,iBAAKI,eAAL,GAAuB,KAAKD,KAAL,CAAW2C,KAAX,CAAiBE,SAAjB,EAA4BE,OAA5B,CAAvB;AAEA,iBAAKC,cAAL,CAAoBC,aAApB,CAAkCC,cAAlC,CAAiD;AAC/CC,sBAAQ,EAAE;AADqC,aAAjD;AAGD;AAxV0D;AAAA;AAAA,oCA0VjD7J,gBA1ViD,EA0Vf;AAAA;;AAC1C,iBAAK2E,YAAL,GAAoB,IAApB;AACA,iBAAKkB,kBAAL,CAAwB9E,IAAxB;AACA,iBAAKkG,8BAAL;AACA,iBAAKyB,2BAAL,GAAmC1I,gBAAnC;AACA,iBAAK8G,UAAL,GAAkB,EAAlB;AAEA,iBAAKnF,uBAAL,CACGmI,aADH,CACiB9J,gBAAgB,CAACD,mBADlC,EAEGD,IAFH,CAGI,gEAAS,YAAM;AACbiK,wBAAU,CAAC,YAAM;AACf,sBAAI,CAACpF,YAAL,GAAoB,KAApB;AACD,eAFS,EAEP,GAFO,CAAV;AAGD,aAJD,CAHJ,EASGnC,SATH,CASa;AACTuC,kBAAI,EAAE,cAACrC,QAAD,EAAmB;AACvB,oBAAIA,QAAQ,CAACsC,cAAT,CAAwB,SAAxB,KAAsCtC,QAAQ,CAACC,OAAT,KAAqB,IAA/D,EAAqE;AACnE;AACA,wBAAI,CAACkD,kBAAL,CAAwBmE,cAAxB,CAAuC,KAAvC;;AACA,wBAAI,CAAClD,UAAL,GAAkBpE,QAAQ,CAACE,IAA3B;AACD,iBAJD,MAIO,IACLF,QAAQ,CAACsC,cAAT,CAAwB,SAAxB,KACAtC,QAAQ,CAACC,OAAT,KAAqB,KAFhB,EAGL;AACA;AACA,wBAAI,CAACkD,kBAAL,CAAwBmE,cAAxB,CAAuC,IAAvC;AACD,iBANM,MAMA;AACL;AACA,wBAAI,CAACpI,cAAL,CAAoBkC,KAApB;;AACA,wBAAI,CAAC+B,kBAAL,CAAwBmE,cAAxB,CAAuC,IAAvC;AACD;AACF,eAjBQ;AAkBTlG,mBAAK,EAAE,eAACA,OAAD,EAAgB;AACrB;AACA,sBAAI,CAAC+B,kBAAL,CAAwBmE,cAAxB,CAAuC,IAAvC;;AAEA,oBAAIlG,OAAK,CAACA,KAAN,CAAYkB,cAAZ,CAA2B,UAA3B,CAAJ,EAA4C;AAC1C,wBAAI,CAACpD,cAAL,CAAoBkC,KAApB,CAA0BA,OAAK,CAACA,KAAN,CAAYmB,QAAtC;AACD,iBAFD,MAEO;AACL,wBAAI,CAACrD,cAAL,CAAoBkC,KAApB;AACD;AACF;AA3BQ,aATb;AAsCD;AAvY0D;AAAA;AAAA,iCAyYpD9D,gBAzYoD,EAyYlB;AACvC,iBAAKwB,MAAL,CAAY0D,QAAZ,CAAqB,CAAC,WAAD,EAAclF,gBAAgB,CAACD,mBAA/B,CAArB,EAA0E;AACxEoF,wBAAU,EAAE,KAAK5D;AADuD,aAA1E;AAGD;AA7Y0D;AAAA;AAAA,qCA+YhD0I,KA/YgD,EA+YjCjK,gBA/YiC,EA+YC;AAAA;;AAC1D,iBAAKkK,eAAL,GACGC,YADH,GAEGrK,IAFH,CAGI,4DAAK,CAAL,CAHJ,EAII,iEAAU,UAACsK,MAAD;AAAA,qBACRA,MAAM,GACF,MAAI,CAACC,wBAAL,CAA8BJ,KAA9B,EAAqCjK,gBAArC,CADE,GAEF,0CAHI;AAAA,aAAV,CAJJ,EASI,gEAAS,YAAM;AACb,oBAAI,CAAC2E,YAAL,GAAoB,KAApB;AACD,aAFD,CATJ,EAaGnC,SAbH,CAcI,UAACG,OAAD,EAAkB;AAChB,oBAAI,CAACf,cAAL,CAAoBe,OAApB;;AACA,oBAAI,CAAC2H,eAAL,CAAqBtK,gBAArB;AACD,aAjBL,EAkBI,UAAC8D,KAAD,EAAgB;AACd,oBAAI,CAAClC,cAAL,CAAoBkC,KAApB;;AACA,oBAAI,CAAC6C,eAAL,CAAqBsD,KAArB,EAA4BnH,WAA5B,GAA0C,CAA1C;AACD,aArBL;AAuBD;AAva0D;AAAA;AAAA,4CAya5C;AACb,mBAAO,KAAK8C,mBAAL,CAAyB2E,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AAjb0D;AAAA;AAAA,mDAobzDN,KApbyD,EAqbzDjK,gBArbyD,EAqbvB;AAElC,iBAAK2E,YAAL,GAAoB,IAApB;AACA,iBAAKgC,eAAL,CAAqBsD,KAArB,EAA4BnH,WAA5B,GAA0C,CAA1C;AAEA,mBAAO,KAAKnB,uBAAL,CAA6B0I,wBAA7B,CACLrK,gBAAgB,CAACD,mBADZ,CAAP;AAGD;AA7b0D;AAAA;AAAA,uCA+b9CkK,KA/b8C,EA+b/BjK,gBA/b+B,EA+bG;AAAA;;AAC5D,iBAAKwK,eAAL,GACGL,YADH,GAEGrK,IAFH,CAGI,4DAAK,CAAL,CAHJ,EAII,iEAAU,UAACsK,MAAD;AAAA,qBACRA,MAAM,GACF,OAAI,CAACK,0BAAL,CAAgCR,KAAhC,EAAuCjK,gBAAvC,CADE,GAEF,0CAHI;AAAA,aAAV,CAJJ,EASI,gEAAS,YAAM;AACb,qBAAI,CAAC2E,YAAL,GAAoB,KAApB;AACD,aAFD,CATJ,EAaGnC,SAbH,CAcI,UAACG,OAAD,EAAkB;AAChB,qBAAI,CAACf,cAAL,CAAoBe,OAApB;;AACA,qBAAI,CAAC2H,eAAL,CAAqBtK,gBAArB;AACD,aAjBL,EAkBI,UAAC8D,KAAD,EAAgB;AACd,qBAAI,CAAClC,cAAL,CAAoBkC,KAApB;;AACA,qBAAI,CAAC6C,eAAL,CAAqBsD,KAArB,EAA4BnH,WAA5B,GAA0C,CAA1C;AACD,aArBL;AAuBD;AAvd0D;AAAA;AAAA,4CAyd5C;AACb,mBAAO,KAAK8C,mBAAL,CAAyB2E,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AAje0D;AAAA;AAAA,qDAoezDN,KApeyD,EAqezDjK,gBAreyD,EAqevB;AAElC,iBAAK2E,YAAL,GAAoB,IAApB;AAEA,iBAAKgC,eAAL,CAAqBsD,KAArB,EAA4BnH,WAA5B,GAA0C,CAA1C;AAEA,mBAAO,KAAKnB,uBAAL,CAA6B8I,0BAA7B,CACLzK,gBAAgB,CAACD,mBADZ,CAAP;AAGD;AA9e0D;AAAA;AAAA,0CAgf3CC,gBAhf2C,EAgfT;AAChD,iBAAK,IAAI0K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhE,KAAL,CAAWsB,MAA/B,EAAuC0C,CAAC,EAAxC,EAA4C;AAC1C,kBACE1K,gBAAgB,CAACD,mBAAjB,KACA,KAAK2G,KAAL,CAAWgE,CAAX,EAAc3K,mBAFhB,EAGE;AACA,qBAAK2G,KAAL,CAAWgE,CAAX,EAAc5H,WAAd,GAA4B9C,gBAAgB,CAAC8C,WAA7C;AACA;AACD;AACF;AACF;AA1f0D;;AAAA;AAAA,S;;;;gBAjCpD;;gBAAgB;;gBAChB;;gBAGP;;gBAWO;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;;;;;gBAeN,uD;AAAS,iBAAC,gBAAD,EAAmB,EAAnB;;;AAFC6C,sDAAgD,6DAL5D,gEAAU;AACTL,gBAAQ,EAAE,6CADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAK4D,E,+EAmDjC,8D,EACR,sD,EACE,wD,EACG,0D,EACY,oG,EACT,4F,EACG,sG,EACL,wF,EACO,+G,EACD,6G,EA5D6B,GAAhDI,gDAAgD,CAAhD;;;;;;;;;;;;;;;;ACxCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCIf;AAIA;AAGA;AAIA;AAGA;AAGA;AAKA;;;UAyBagF,wCAAwC;AAAA;AAAA,O;;AAAxCA,8CAAwC,6DArBpD,+DAAS;AACRC,oBAAY,EAAE,CACZ,wGADY,EAEZ,uHAFY,CADN;AAKRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0EAAiBC,OAAjB,EAJO,EAKP,oEAAcA,OAAd,EALO,EAMP,mEANO,EAOP,iEAPO,EAQP,kDARO,EASP,oEATO,EAUP,wHAVO,EAWP,kFAXO,EAYP,0FAZO,CALD;AAmBRC,iBAAS,EAAE,CAAC,4FAAD;AAnBH,OAAT,CAqBoD,GAAxCJ,wCAAwC,CAAxC;;;;;;;;;;;;;;;;ACnDb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeFK,mBAAmB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAE5BC,SAF4B,EAG5BxF,KAH4B,EAI5ByF,KAJ4B,EAIF;AAM1B,mBAAOD,SAAS,CAACE,iBAAV,EAAP;AACD;AAX6B;;AAAA;AAAA,S;;AAAnBH,yBAAmB,6DAH/B,iEAAW;AACV1K,kBAAU,EAAE;AADF,OAAX,CAG+B,GAAnB0K,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCZb;AAIA;;;AAIA,UAAMI,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,OADR;AAEEJ,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACEI,YAAI,EAAE,MADR;AAEEJ,iBAAS,EAAE,sHAFb;AAGEK,eAAO,EAAE;AACP/H,kBAAQ,EAAE;AADH,SAHX;AAMEgI,qBAAa,EAAE,CAAC,wFAAD;AANjB,OALqB,EAarB;AACEF,YAAI,EAAE,YADR;AAEEJ,iBAAS,EAAE,sHAFb;AAGEK,eAAO,EAAE;AACP/H,kBAAQ,EAAE;AADH,SAHX;AAMEgI,qBAAa,EAAE,CAAC,wFAAD;AANjB,OAbqB,EAqBrB;AACEF,YAAI,EAAE,EADR;AAEEG,kBAAU,EAAE,OAFd;AAGEC,iBAAS,EAAE;AAHb,OArBqB,CAAvB;;UAgCaC,qDAAqD;AAAA;AAAA,O;;AAArDA,2DAAqD,6DAJjE,+DAAS;AACRb,eAAO,EAAE,CAAC,6DAAac,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIiE,GAArDF,qDAAqD,CAArD;;;;;;;;;;;;;;;;AC3Cb;AAAe;;;AAAA","file":"situacao-proposta-situacao-proposta-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { SituacaoProposta } from './models/situacao-proposta';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosSituacaoPropostaService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/situacao-proposta`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaSituacaoProposta(params?: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getListaSituacaoPropostaTid(): Observable<any> {\n    return this.http.get(`${this.API}/tid/lista`).pipe(take(1));\n  }\n\n  getAlteracoes(codSituacaoProposta: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codSituacaoProposta}`)\n      .pipe(take(1));\n  }\n\n  getDetalhes(codSituacaoProposta: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codSituacaoProposta}`)\n      .pipe(take(1));\n  }\n\n  private saveSituacaoProposta(situacaoProposta: SituacaoProposta) {\n    return this.http.post(`${this.API}/salvar`, situacaoProposta).pipe(take(1));\n  }\n\n  private updateSituacaoProposta(situacaoProposta: SituacaoProposta) {\n    return this.http\n      .put(`${this.API}/atualizar`, situacaoProposta)\n      .pipe(take(1));\n  }\n\n  save(situacaoProposta: SituacaoProposta): Observable<any> {\n    if (situacaoProposta.codSituacaoProposta !== null) {\n      return this.updateSituacaoProposta(situacaoProposta);\n    }\n\n    return this.saveSituacaoProposta(situacaoProposta);\n  }\n\n  activateSituacaoProposta(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n  }\n\n  inactivateSituacaoProposta(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9zaXR1YWNhby1wcm9wb3N0YS9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosSituacaoPropostaService } from '../situacao-proposta.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { SituacaoProposta } from '../models/situacao-proposta';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-cadastros-situacao-proposta-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosSituacaoPropostaFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar: boolean;\n  loaderFullScreen = true;\n\n  appTitle: string;\n  breadCrumbTree: Array<any> = [];\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n\n  situacoesPropostaTid: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private situacaoPropostaService: ComercialCadastrosSituacaoPropostaService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFormFields();\n    this.setFormBuilder();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getFormFields(): void {\n    this.loaderFullScreen = true;\n\n    this.situacaoPropostaService\n      .getListaSituacaoPropostaTid()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: JsonResponse) => {\n        if (response.success === true) {\n          this.situacoesPropostaTid = response.data;\n\n          this.situacoesPropostaTid.unshift({\n            codSituacao: 0,\n            nomeSituacao: 'NENHUM',\n          });\n        }\n      });\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar Situação de Proposta';\n      } else {\n        this.appTitle = 'Nova Situação de Proposta';\n      }\n\n      this.titleService.setTitle(this.appTitle);\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Situação de Proposta',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/situacao-propostas/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes: SituacaoProposta = this.activatedRoute.snapshot.data\n        .detalhes.data;\n\n      this.form = this.formBuilder.group({\n        codSituacaoProposta: [detalhes.codSituacaoProposta],\n        situacaoProposta: [detalhes.situacaoProposta, [Validators.required]],\n        codParametroSituacaoProposta: [\n          detalhes.codParametroSituacaoProposta,\n          [Validators.required],\n        ],\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\n        codTipoFinalizacao: [detalhes.codTipoFinalizacao],\n        permiteAlterarEmpresa: [detalhes.permiteAlterarEmpresa],\n      });\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n\n        this.situacaoPropostaService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe({\n            next: (response: any) => {\n              if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  if (params.hasOwnProperty('id')) {\n                    this.location.back();\n                  } else {\n                    this.router.navigate(['../lista'], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  }\n                });\n              } else if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === false\n              ) {\n                this.pnotifyService.notice(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              this.pnotifyService.error();\n            }\n          });\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosSituacaoPropostaService } from '../situacao-proposta.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosSituacaoPropostaFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private situacaoPropostaService: ComercialCadastrosSituacaoPropostaService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.situacaoPropostaService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codSituacaoProposta: null,\n        situacaoProposta: null,\n        codParametroSituacaoProposta: 0,\n        codSituacao: null,\n        codTipoFinalizacao: 0,\n        permiteAlterarEmpresa: 0,\n      },\n    });\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosSituacaoPropostaService } from '../situacao-proposta.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { SituacaoProposta } from '../models/situacao-proposta';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-situacao-proposta-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosSituacaoPropostaListaComponent\n  implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  orderBy = 'codSituacaoProposta';\n  orderType = 'ASC';\n\n  /* motivosAssociacao: Array<any> = []; */\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<SituacaoProposta> = [];\n  dadosPagination: Array<SituacaoProposta> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  situacaoPropostaSelecionado: SituacaoProposta;\n  alteracoes: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private situacaoPropostaService: ComercialCadastrosSituacaoPropostaService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Situação de Proposta');\n    this.onDetailPanelEmitter();\n    this.setSituacaoPropostaSelecionado();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Situação de Proposta',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      situacaoProposta: [formValue.situacaoProposta],\n      codSituacaoProposta: [formValue.codSituacaoProposta],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n    this.loaderFullScreen = false;\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      situacaoProposta: null,\n      codSituacaoProposta: 0,\n      codSituacao: 1,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setSituacaoPropostaSelecionado(): void {\n    this.situacaoPropostaSelecionado = {\n      situacaoProposta: null,\n      codSituacaoProposta: 0,\n      codParametroSituacaoProposta: 0,\n      codSituacao: 1,\n      situacao: null,\n      codTipoFinalizacao: null,\n      permiteAlterarEmpresa: null,\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.situacaoProposta) {\n      params.situacaoProposta = this.form.value.situacaoProposta;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    this.situacaoPropostaService\n      .getListaSituacaoProposta(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(situacaoProposta: SituacaoProposta): string {\n    let borderClass: string;\n\n    if (situacaoProposta.codSituacao === 1) {\n      borderClass = 'border-success';\n    } else if (situacaoProposta.codSituacao === 2) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  onDetails(situacaoProposta: SituacaoProposta): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.setSituacaoPropostaSelecionado();\n    this.situacaoPropostaSelecionado = situacaoProposta;\n    this.alteracoes = [];\n\n    this.situacaoPropostaService\n      .getAlteracoes(situacaoProposta.codSituacaoProposta)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.alteracoes = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        error: (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onEdit(situacaoProposta: SituacaoProposta): void {\n    this.router.navigate(['../editar', situacaoProposta.codSituacaoProposta], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, situacaoProposta: SituacaoProposta): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result\n            ? this.activateSituacaoProposta(index, situacaoProposta)\n            : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(situacaoProposta);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateSituacaoProposta(\n    index: number,\n    situacaoProposta: SituacaoProposta\n  ): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.situacaoPropostaService.activateSituacaoProposta(\n      situacaoProposta.codSituacaoProposta\n    );\n  }\n\n  onInactivate(index: number, situacaoProposta: SituacaoProposta): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result\n            ? this.inactivateSituacaoProposta(index, situacaoProposta)\n            : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(situacaoProposta);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateSituacaoProposta(\n    index: number,\n    situacaoProposta: SituacaoProposta\n  ): Observable<any> {\n    this.loaderNavbar = true;\n\n    this.dadosPagination[index].codSituacao = 2;\n\n    return this.situacaoPropostaService.inactivateSituacaoProposta(\n      situacaoProposta.codSituacaoProposta\n    );\n  }\n\n  refreshMainData(situacaoProposta: SituacaoProposta): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (\n        situacaoProposta.codSituacaoProposta ===\n        this.dados[i].codSituacaoProposta\n      ) {\n        this.dados[i].codSituacao = situacaoProposta.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Situação de proposta\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n     <div class=\\\"row\\\" #scrollToFilter>\\n      <div class=\\\"col\\\">\\n        <advanced-filter>\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-lg-7\\\">\\n                <label for=\\\"situacaoProposta\\\">Situação de Proposta</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"situacaoProposta\\\"\\n                  (keydown.enter)=\\\"onFilter()\\\">\\n              </div>\\n              <div class=\\\"form-group col-lg-3\\\">\\n                <label for=\\\"codSituacao\\\">Situação</label>\\n                <select\\n                  class=\\\"form-control custom-select\\\"\\n                  id=\\\"codSituacao\\\"\\n                  formControlName=\\\"codSituacao\\\">\\n                  <option value=\\\"0\\\">Todos</option>\\n                  <option value=\\\"1\\\">Ativos</option>\\n                  <option value=\\\"2\\\">Inativos</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group col-lg-2\\\">\\n                <label for=\\\"registros\\\">Registros</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"registros\\\"\\n                  formControlName=\\\"registros\\\">\\n                  <option>25</option>\\n                  <option>50</option>\\n                  <option>100</option>\\n                  <option>200</option>\\n                  <option>300</option>\\n                </select>\\n              </div>\\n            </div>\\n          </form>\\n        </advanced-filter>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <subtitles\\n          [data]=\\\"subtitles\\\"\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        </subtitles>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\">Motivo de Associação</th>\\n              <th scope=\\\"col\\\">Parâmetro ERP Local</th>\\n              <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr\\n              *ngFor=\\\"let situacaoProposta of dadosPagination; let i = index\\\"\\n              [class.table-active]=\\\"situacaoProposta.codSituacaoProposta == situacaoPropostaSelecionado.codSituacaoProposta\\\">\\n              <td\\n                class=\\\"hover\\\"\\n                [ngClass]=\\\"classStatusBorder(situacaoProposta)\\\"\\n                (click)=\\\"onDetails(situacaoProposta)\\\">\\n                {{ situacaoProposta.situacaoProposta | uppercase }}\\n              </td>\\n              <td\\n                class=\\\"hover\\\"\\n                (click)=\\\"onDetails(situacaoProposta)\\\">\\n                {{ situacaoProposta.codParametroSituacaoProposta }}\\n              </td>\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span *ngIf=\\\"situacaoProposta.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, situacaoProposta)\\\">\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\n                  </button>\\n                </span>\\n                <span *ngIf=\\\"situacaoProposta.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, situacaoProposta)\\\">\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(situacaoProposta)\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <empty-result\\n          message=\\\"Nenhuma informação encontrada\\\"\\n          class=\\\"my-3\\\"\\n          *ngIf=\\\"dadosEmpty\\\">\\n        </empty-result>\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n          <pagination\\n            [maxSize]=\\\"maxSize\\\"\\n            [(totalItems)]=\\\"totalItems\\\"\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n            [boundaryLinks]=\\\"true\\\"\\n            [(ngModel)]=\\\"currentPage\\\"\\n            previousText=\\\"&lsaquo;\\\"\\n            nextText=\\\"&rsaquo;\\\"\\n            firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\">\\n          </pagination>\\n        </div>\\n      </div>\\n      <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n        <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\n          <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n                <th scope=\\\"col\\\">Usuário</th>\\n                <th scope=\\\"col\\\">Alteração</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\n                <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\n                <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\n                <td>{{ alteracao.mensagem | uppercase }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </detail-panel>\\n      </div>\\n    </div>\\n  </app-body>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosSituacaoPropostaModuleRoutingModule } from './situacao-proposta-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosSituacaoPropostaListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosSituacaoPropostaFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosSituacaoPropostaListaComponent,\n    ComercialCadastrosSituacaoPropostaFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    CurrencyMaskModule,\n    ComercialCadastrosSituacaoPropostaModuleRoutingModule,\n    SharedModule,\n    TemplatesModule,\n  ],\n  providers: [PNotifyService],\n})\nexport class ComercialCadastrosSituacaoPropostaModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9zaXR1YWNhby1wcm9wb3N0YS9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosSituacaoPropostaFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosSituacaoPropostaListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosSituacaoPropostaFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialCadastrosSituacaoPropostaListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialCadastrosSituacaoPropostaFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosSituacaoPropostaFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosSituacaoPropostaFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosSituacaoPropostaFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosSituacaoPropostaModuleRoutingModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-5\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"situacaoProposta\\\">Descrição</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"situacaoProposta\\\"\\n              formControlName=\\\"situacaoProposta\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('situacaoProposta') + ' ' + onFieldRequired(form.controls.situacaoProposta)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('situacaoProposta')\\\" message=\\\"Situação de Proposta é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codParametroSituacaoProposta\\\">Descrição do Parâmetro</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"situacoesPropostaTid\\\"\\n              formControlName=\\\"codParametroSituacaoProposta\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"codParametroSituacaoProposta\\\"\\n              bindLabel=\\\"nomeSituacao\\\"\\n              bindValue=\\\"codSituacao\\\"\\n              [ngClass]=\\\"onFieldError('codParametroSituacaoProposta') + ' ' + onFieldRequired(form.controls.codParametroSituacaoProposta)\\\">\\n            </ng-select>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codSituacao\\\">Situação</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"codSituacao\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n              <option value=\\\"1\\\">Ativo</option>\\n              <option value=\\\"2\\\">Inativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codTipoFinalizacao\\\">Finalização</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"codTipoFinalizacao\\\"\\n              formControlName=\\\"codTipoFinalizacao\\\"\\n              [ngClass]=\\\"onFieldError('codTipoFinalizacao') + ' ' + onFieldRequired(form.controls.codTipoFinalizacao)\\\">\\n              <option value=\\\"0\\\">Padrão</option>\\n              <option value=\\\"1\\\">Perdido para concorrente</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Finalização é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6 d-flex mb-0\\\">\\n            <div class=\\\"custom-control custom-checkbox mt-auto mb-2\\\">\\n              <input\\n               type=\\\"checkbox\\\"\\n               class=\\\"custom-control-input\\\"\\n               id=\\\"pode-alterar-empresa\\\"\\n               formControlName=\\\"permiteAlterarEmpresa\\\">\\n              <label\\n                class=\\\"custom-control-label\\\"\\n                for=\\\"pode-alterar-empresa\\\">\\n                Permite realizar alteração de empresa\\n              </label>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";"]}