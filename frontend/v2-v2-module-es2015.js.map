{"version":3,"sources":["./src/app/modules/logistica/dashboards/analise-frete/v2/v2.component.html","./src/app/modules/logistica/dashboards/analise-frete/v2/v2.component.ts","./src/app/modules/logistica/dashboards/analise-frete/v2/v2.module.ts","./src/app/modules/logistica/dashboards/analise-frete/v2/v2.component.scss","./src/app/modules/logistica/dashboards/analise-frete/v2/v2-routing.module.ts"],"names":[],"mappings":"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","file":"v2-v2-module-es2015.js","sourcesContent":["export default \"<loader-spinner-full-screen *ngIf=\\\"!dataLoaded\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loading\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    (click)=\\\"onExport()\\\"\\n    *ngIf=\\\"permission\\\"\\n    [disabled]=\\\"form.status === 'INVALID' && !isFiltered\\\"\\n  >\\n    Exportar\\n  </button>\\n  <button\\n    (click)=\\\"onFilter()\\\"\\n    *ngIf=\\\"permission\\\"\\n    [disabled]=\\\"form.status === 'INVALID' && !isFiltered\\\"\\n  >\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <advanced-filter>\\n    <form id=\\\"form-logistica-dashboard\\\" [formGroup]=\\\"form\\\" class=\\\"row\\\">\\n      <div class=\\\"form-group col-3\\\">\\n        <label for=\\\"empresa\\\">Empresa</label>\\n        <ng-select\\n          [searchable]=\\\"true\\\"\\n          [clearable]=\\\"false\\\"\\n          [items]=\\\"empresas\\\"\\n          [virtualScroll]=\\\"true\\\"\\n          [multiple]=\\\"true\\\"\\n          [closeOnSelect]\\t=\\\"false\\\"\\n          labelForId=\\\"empresa\\\"\\n          bindLabel=\\\"dsEmpresa\\\"\\n          bindValue=\\\"dsEmpresa\\\"\\n          id=\\\"empresa\\\"\\n          formControlName=\\\"projeto\\\"\\n        >\\n        </ng-select>\\n      </div>\\n      <div class=\\\"form-group col-3\\\">\\n        <label for=\\\"empresa\\\">Data Inicial</label>\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n          </div>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataInicial\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            [ngClass]=\\\"onFieldRequired('dataInicial')\\\"\\n            formControlName=\\\"dataInicial\\\">\\n          <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial')\\\" message=\\\"Data Inicial é obrigatório.\\\"></invalid-form-control>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-3\\\">\\n        <label for=\\\"empresa\\\">Data Final</label>\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n          </div>\\n          <input\\n          class=\\\"form-control\\\"\\n          id=\\\"dataFinal\\\"\\n          type=\\\"text\\\"\\n          bsDatepicker\\n          [bsConfig]=\\\"bsConfig\\\"\\n          [ngClass]=\\\"onFieldRequired('dataFinal')\\\"\\n          formControlName=\\\"dataFinal\\\">\\n          <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal')\\\" message=\\\"Data Final é obrigatório.\\\"></invalid-form-control>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-3\\\">\\n        <label>UF</label>\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          formControlName=\\\"uf\\\"\\n          (keyup.enter)=\\\"onFilter()\\\"\\n          >\\n      </div>\\n      <div class=\\\"form-group col-3\\\">\\n        <label>Contrato de Frete</label>\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          formControlName=\\\"contratoFrete\\\"\\n          (keyup.enter)=\\\"onFilter()\\\"\\n        >\\n      </div>\\n      <div class=\\\"form-group col-3\\\">\\n        <label>Tipo de Veículo</label>\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          formControlName=\\\"tipoVeiculo\\\"\\n          (keyup.enter)=\\\"onFilter()\\\"  \\n        >\\n      </div>\\n      <div class=\\\"form-group col-3\\\">\\n        <label for=\\\"\\\">Segmentação</label>\\n        <ng-select\\n          [searchable]=\\\"true\\\"\\n          [clearable]=\\\"false\\\"\\n          [multiple]=\\\"true\\\"\\n          [items]=\\\"segmentacao\\\"\\n          placeholder=\\\"Selecione uma opção\\\"\\n          bindLabel=\\\"nome\\\"\\n          bindValue=\\\"nome\\\"\\n          formControlName=\\\"parametrizacao\\\"\\n          (change)=\\\"prepareData($event);\\\"\\n          >\\n        </ng-select>\\n      </div>\\n      <div class=\\\"form-group col-3\\\">\\n        <label for=\\\"origem\\\">Origem</label>\\n        <select\\n          name=\\\"origem\\\"\\n          id=\\\"origem\\\"\\n          class=\\\"form-control\\\"\\n          formControlName=\\\"origem\\\"\\n          (change)=\\\"onFilter()\\\"  \\n        >\\n          <option value=\\\"TMS\\\">TMS</option>\\n          <option value=\\\"Fusion\\\">Fusion</option>\\n        </select>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div>\\n    <div *ngIf=\\\"show\\\">\\n      <div class=\\\"mb-4\\\">\\n        <custom-table class=\\\"text-center\\\" >\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Ano']\\\">\\n                <thead-sorter\\n                  value=\\\"Ano\\\"\\n                  [active]=\\\"orderBy == 'Ano'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('Ano')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Mês']\\\">\\n                <thead-sorter\\n                  value=\\\"Mês\\\"\\n                  [active]=\\\"orderBy == 'Mês'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('Mês')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['UF']\\\">\\n                <thead-sorter\\n                  value=\\\"UF\\\"\\n                  [active]=\\\"orderBy == 'UF'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('UF')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Contrato de Frete']\\\">\\n                <thead-sorter\\n                  value=\\\"Contrato de Frete\\\"\\n                  [active]=\\\"orderBy == 'Contrato de Frete'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('Contrato de Frete')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Tipo de Veículo']\\\">\\n                <thead-sorter\\n                  value=\\\"Tipo de Veículo\\\"\\n                  [active]=\\\"orderBy == 'Tipo de Veículo'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('Tipo de Veículo')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Custo de Frete\\\"\\n                    [active]=\\\"orderBy == 'Custo de Frete'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Custo de Frete')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Custo de Frete']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Peso Total Transportado\\\"\\n                    [active]=\\\"orderBy == 'Peso Total Transportado'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Peso Total Transportado')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Peso Total Transportado']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"KM Total\\\"\\n                    [active]=\\\"orderBy == 'KM Total'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('KM Total')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['KM Total']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Valor Nota Fiscal\\\"\\n                    [active]=\\\"orderBy == 'Valor Nota Fiscal'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Valor Nota Fiscal')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Valor Nota Fiscal']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Capacidade de Transporte\\\"\\n                    [active]=\\\"orderBy == 'Capacidade de Transporte'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Capacidade de Transporte')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Capacidade de Transporte']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let item of data\\\">\\n              <td *ngIf=\\\"columns['Ano']\\\">{{item['Ano'] | hifen}}</td>\\n              <td *ngIf=\\\"columns['Mês']\\\">{{item['Mês'] | hifen}}</td>\\n              <td *ngIf=\\\"columns['UF']\\\">{{item['UF'] | hifen}}</td>\\n              <td *ngIf=\\\"columns['Contrato de Frete']\\\">{{item['Contrato de Frete'] | hifen}}</td>\\n              <td *ngIf=\\\"columns['Tipo de Veículo']\\\">{{item['Tipo de Veículo'] | hifen}}</td>\\n              <td>{{item['Custo de Frete'] | currency: 'BRL'}}</td>\\n              <td>{{item['Peso Total Transportado'] | number: '1.0-0'}}</td>\\n              <td>{{item['KM Total'] | number: '1.0-0'}}</td>\\n              <td>{{item['Valor Nota Fiscal'] | currency: 'BRL'}}</td>\\n              <td>{{item['Capacidade de Transporte'] | number: '1.0-0'}}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Ano']\\\">-</td>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Mês']\\\">-</td>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['UF']\\\">-</td>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Contrato de Frete']\\\">-</td>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Tipo de Veículo']\\\">-</td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Custo de Frete'] | currency: 'BRL'}}</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Peso Total Transportado'] | number: '1.0-0'}}</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['KM Total'] | number: '1.0-0'}}</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Valor Nota Fiscal'] | currency: 'BRL'}}</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Capacidade de Transporte'] | number: '1.0-0'}}</strong></td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </div>\\n      <div class=\\\"mb-4\\\">\\n        <custom-table class=\\\"text-center\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Ano']\\\">\\n                <thead-sorter\\n                  value=\\\"Ano\\\"\\n                  [active]=\\\"orderBy == 'Ano'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('Ano')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Mês']\\\">\\n                <thead-sorter\\n                  value=\\\"Mês\\\"\\n                  [active]=\\\"orderBy == 'Mês'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('Mês')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['UF']\\\">\\n                <thead-sorter\\n                  value=\\\"UF\\\"\\n                  [active]=\\\"orderBy == 'UF'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('UF')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Contrato de Frete']\\\">\\n                <thead-sorter\\n                  value=\\\"Contrato de Frete\\\"\\n                  [active]=\\\"orderBy == 'Contrato de Frete'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('Contrato de Frete')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Tipo de Veículo']\\\">\\n                <thead-sorter\\n                  value=\\\"Tipo de Veículo\\\"\\n                  [active]=\\\"orderBy == 'Tipo de Veículo'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('Tipo de Veículo')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Reais x Ton\\\"\\n                    [active]=\\\"orderBy == 'Boliviano x Ton'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Reais x Ton')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Boliviano x Ton']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Reais x KM\\\"\\n                    [active]=\\\"orderBy == 'Reais x KM'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Reais x KM')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Reais x KM']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Frete x Receita\\\"\\n                    [active]=\\\"orderBy == 'Frete x Receita'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Frete x Receita')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Frete x Receita']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Taxa de Ocupação\\\"\\n                    [active]=\\\"orderBy == 'Taxa de Ocupação'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Taxa de Ocupação')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Taxa de Ocupação']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Ticket Médio Por Entrega\\\"\\n                    [active]=\\\"orderBy == 'Ticket Médio Por Entrega'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Ticket Médio Por Entrega')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Ticket Médio Por Entrega']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let item of data\\\">\\n              <td *ngIf=\\\"columns['Ano']\\\">{{item['Ano'] | hifen}}</td>\\n              <td *ngIf=\\\"columns['Mês']\\\">{{item['Mês'] | hifen}}</td>\\n              <td *ngIf=\\\"columns['UF']\\\">{{item['UF'] | hifen}}</td>\\n              <td *ngIf=\\\"columns['Contrato de Frete']\\\">{{item['Contrato de Frete'] | hifen}}</td>\\n              <td *ngIf=\\\"columns['Tipo de Veículo']\\\">{{item['Tipo de Veículo'] | hifen}}</td>\\n              <td>{{item['Reais x Ton'] | currency: 'BRL'}}</td>\\n              <td>{{item['Reais x KM'] | currency: 'BRL'}}</td>\\n              <td>{{item['Frete x Receita']| number: '1.2-2': 'pt-BR'}}%</td>\\n              <td>{{item['Taxa de Ocupação'] | number: '1.2-2': 'pt-BR'}}%</td>\\n              <td>{{item['Ticket Médio Por Entrega']  | number: '1.3-3': 'pt-BR'}}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Ano']\\\"><strong>-</strong></td>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Mês']\\\"><strong>-</strong></td>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['UF']\\\"><strong>-</strong></td>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Contrato de Frete']\\\"><strong>-</strong></td>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Tipo de Veículo']\\\"><strong>-</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Reais x Ton'] | currency: 'BRL'}}</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Reais x KM'] | currency: 'BRL'}}</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Frete x Receita']  | number: '1.2-2'}}%</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Taxa de Ocupação']  | number: '1.2-2'}}%</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Ticket Médio Por Entrega'] | number: '1.3-3'}}</strong></td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </div>\\n      <div class=\\\"mb-4\\\"> \\n        <custom-table class=\\\"text-center\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Ano']\\\">\\n                <thead-sorter\\n                  value=\\\"Ano\\\"\\n                  [active]=\\\"orderBy == 'Ano'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('Ano')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Mês']\\\">\\n                <thead-sorter\\n                  value=\\\"Mês\\\"\\n                  [active]=\\\"orderBy == 'Mês'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('Mês')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['UF']\\\">\\n                <thead-sorter\\n                  value=\\\"UF\\\"\\n                  [active]=\\\"orderBy == 'UF'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('UF')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Contrato de Frete']\\\">\\n                <thead-sorter\\n                  value=\\\"Contrato de Frete\\\"\\n                  [active]=\\\"orderBy == 'Contrato de Frete'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('Contrato de Frete')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Tipo de Veículo']\\\">\\n                <thead-sorter\\n                  value=\\\"Tipo de Veículo\\\"\\n                  [active]=\\\"orderBy == 'Tipo de Veículo'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('Tipo de Veículo')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Total de Clientes\\\"\\n                    [active]=\\\"orderBy == 'Total de Clientes'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Total de Clientes')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Total de Clientes']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Total de Viagens\\\"\\n                    [active]=\\\"orderBy == 'Total de Viagens'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Total de Viagens')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Total de Viagens']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\"> \\n                  <thead-sorter\\n                    value=\\\"Total de Entregas\\\"\\n                    [active]=\\\"orderBy == 'Total de Entregas'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Total de Entregas')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                      class=\\\"far fa-question-circle\\\"\\n                      [tooltip]=\\\"rotulos['Total de Entregas']['descricao']\\\"\\n                      placement=\\\"right\\\"\\n                      container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Entregas x Viagem\\\"\\n                    [active]=\\\"orderBy == 'Entregas x Viagem'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Entregas x Viagem')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Entregas x Viagem']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\n                <div class=\\\"d-flex\\\">\\n                  <thead-sorter\\n                    value=\\\"Peso Médio x Viagem\\\"\\n                    [active]=\\\"orderBy == 'Peso Médio x Viagem'\\\"\\n                    [sort]=\\\"orderType\\\"\\n                    (click)=\\\"setOrderBy('Peso Médio x Viagem')\\\">\\n                  </thead-sorter>\\n                  <div>\\n                    <i\\n                    class=\\\"far fa-question-circle\\\"\\n                    [tooltip]=\\\"rotulos['Peso Médio x Viagem']['descricao']\\\"\\n                    placement=\\\"right\\\"\\n                    container=\\\"body\\\"\\n                    >\\n                    </i>\\n                  </div>\\n                </div>\\n              </th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let item of data\\\">\\n              <td *ngIf=\\\"columns['Ano']\\\">{{item['Ano'] | hifen}}</td>\\n              <td *ngIf=\\\"columns['Mês']\\\">{{item['Mês'] | hifen}}</td>\\n              <td *ngIf=\\\"columns['UF']\\\">{{item['UF'] | hifen}}</td>\\n              <td *ngIf=\\\"columns['Contrato de Frete']\\\">{{item['Contrato de Frete'] | hifen}}</td>\\n              <td *ngIf=\\\"columns['Tipo de Veículo']\\\">{{item['Tipo de Veículo'] | hifen}}</td>\\n              <td>{{item['Total de Clientes'] | number: '1.0-0'}}</td>\\n              <td>{{item['Total de Viagens'] | number: '1.0-0'}}</td>\\n              <td>{{item['Total de Entregas'] | number: '1.0-0'}}</td>\\n              <td>{{item['Entregas x Viagem'] | number: '1.3-3': 'pt-BR'}}</td>\\n              <td>{{item['Peso Médio x Viagem'] | number: '1.3-3': 'pt-BR'}}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Ano']\\\"><strong>-</strong></td>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Mês']\\\"><strong>-</strong></td>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['UF']\\\"><strong>-</strong></td>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Contrato de Frete']\\\"><strong>-</strong></td>\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Tipo de Veículo']\\\"><strong>-</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Total de Clientes'] | number: '1.0-0': 'pt-BR'}}</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Total de Viagens']  | number: '1.0-0'}}</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Total de Entregas'] | number: '1.0-0': 'pt-BR'}}</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Entregas x Viagem'] | number: '1.3-3': 'pt-BR'}}</strong></td>\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Peso Médio x Viagem'] | number: '1.3-3': 'pt-BR'}}</strong></td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"empty\\\" class=\\\"text-center h-50 my-auto d-flex justify-content-center align-items-center\\\">\\n      <empty-result message=\\\"No se encontró información \\\"></empty-result>\\n    </div>\\n  </div>\\n</app-body>\";","// angular\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n// ngx\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap';\n\n// rxjs\nimport { Subscription, forkJoin } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { LogisticaDashboardsAnaliseFreteService } from '../services/analise-frete.service';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { XlsxService } from 'src/app/shared/services/core/xlsx.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n@Component({\n  selector: 'logistica-dashboards-frete-analitico',\n  templateUrl: './v2.component.html',\n  styleUrls: ['./v2.component.scss']\n})\nexport class LogisticaDashboardsAnaliseFreteV2Component implements OnInit {\n\n  breadCrumbTree: any = []\n\n  @ViewChild('scroll', { read: ElementRef }) public scroll: ElementRef<any>;\n  \n  info: string;\n  $subscription: Subscription;\n  $indicadoresSubscription: Subscription;\n\n  private readonly API = environment.API;\n  currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n  matricula = this.currentUser[\"info\"][\"matricula\"];\n  \n  dataLoaded = false;\n  permission = false;\n  \n  form: FormGroup;\n  empresas: any = [];\n  \n  data = [];\n  total = {};\n  show = false;\n  loading = false;\n  empty = false;\n\n  columns = {\n    'Ano': false,\n    'Mes': false,\n    'UF': false,\n    'Tipo de Veículo': false,\n    'Contrato de Frete': false\n  }\n\n  segmentacao = [\n    {\n      'nome': 'Ano',\n      'v2': {\n        'select':' ,[Ano] ',\n        'where': ' S1.[Ano] = T1.[Ano] ',\n        'groupBy': ' [Ano] ',\n        'orderBy': ' [Ano] '\n      }\n    },\n    {\n      'nome': 'Mês',\n      'v2': {\n        'select':' ,[Mês] ',\n        'where': ' S1.[Mês] = T1.[Mês] ',\n        'groupBy': ' [Mês] ',\n        'orderBy': ' [Mês] '\n      }\n    },\n    {\n      'nome': 'UF',\n      'v2': {\n        'select':' ,[UF] ',\n        'where': ' S1.[UF] = T1.[UF] ',\n        'groupBy': ' [UF] ',\n        'orderBy': ' [UF] '\n      }\n    },\n    {\n      'nome': 'Tipo de Veículo',\n      'v2': {\n        'select':' ,[Tipo de Veículo] ',\n        'where': ' S1.[Tipo de Veículo] = T1.[Tipo de Veículo] ',\n        'groupBy': ' [Tipo de Veículo] ',\n        'orderBy': ' [Tipo de Veículo] '\n      }\n    },\n    {\n      'nome': 'Contrato de Frete',\n      'v2': {\n        'select':' ,[Contrato de Frete] ',\n        'where': ' S1.[Contrato de Frete] = T1.[Contrato de Frete] ',\n        'groupBy': ' [Contrato de Frete] ',\n        'orderBy': ' [Contrato de Frete] '\n      }\n    }\n  ]\n\n  rotulos = {};\n\n  appTitle = 'Análise de Frete II'\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: false,\n    isFixed: true,\n    border: false,\n    small: false,\n    hover: false,\n    theme: {\n      color: 'white',\n    },\n  };\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  orderBy = 'Frete';\n  orderType = 'DESC';\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private formBuilder: FormBuilder,\n    private localeService: BsLocaleService,\n    private router: Router,\n    private http: HttpClient,\n    private pnotify: PNotifyService,\n    private dateService: DateService,\n    private service: LogisticaDashboardsAnaliseFreteService,\n    private routeService: RouterService,\n    private xlsxService: XlsxService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n\n    this.form = this.formBuilder.group({\n      projeto: [null],\n      dataInicial: [dateService.getFirstDayMonth(), Validators.required],\n      dataFinal: [new Date(), Validators.required],\n      parametrizacao: [[]],\n      tipoVeiculo: [null],\n      uf: [null],\n      contratoFrete: [null],\n      select: [null],\n      where: [null],\n      groupBy: [null],\n      orderBy: [null],\n      origem: ['TMS'],\n      timestamp: [(new Date()).getTime()]\n    })\n  }\n\n  ngOnInit() {\n    this.atividadesService.registrarAcesso().subscribe();\n    this.getEmpresas();\n    this.onActiveRoute();\n    this.getRotulos();\n    this.setBreadCrumb();\n  }\n\n  onActiveRoute() {\n\n    this.activatedRoute.queryParams\n      .subscribe(\n      response => {\n\n        let _params = JSON.parse(JSON.stringify(this.routeService.getBase64UrlParams(response)));\n    \n        if(_params == undefined){\n          return\n        }\n\n        if(Object.keys(_params).length == 0){\n          return\n        }\n        \n        _params.projeto = _params?.projeto?.split(',');\n        _params.parametrizacao = _params?.parametrizacao ? JSON.parse(_params?.parametrizacao) : [];\n\n        _params.parametrizacao.forEach(element => {\n          this.columns[element] = true;\n        });\n\n        this.form.patchValue(_params);\n    \n        this.getIndicadores(this.getParams());\n\n      }\n    )\n\n  }\n\n  setBreadCrumb() {\n\n    const params = this.activatedRoute.snapshot.params;\n    const submoduloId = params?.idSubModulo;\n\n    this.breadCrumbTree = [\n      {\n        descricao: 'Logistica'\n      },\n      {\n        descricao: 'Dashboards',\n        routerLink: `/logistica/dashboards/${submoduloId}`\n      },\n      {\n        descricao: this.appTitle\n      }\n    ];\n  }\n\n  getEmpresas() {\n    this.http.get(`${this.API}/logistica/associacao-usuario-empresa/${this.matricula}`,\n      { params: { \"parametro\": \"4\" }, observe: \"response\" })\n      .pipe(\n        finalize(() => {\n          this.permission = this.empresas.length == 0 ? false : true;\n          this.dataLoaded = true;\n        })\n      )\n      .subscribe(\n        data => {\n          this.empresas = [];\n\n          if (data[\"status\"] == 200) {\n            this.empresas = data[\"body\"];\n          }\n        },\n        error => {\n          this.permission = this.empresas.length == 0 ? false : true;\n          this.dataLoaded = true;\n        }\n      )\n  }\n\n  getParams() {\n\n    let _params = {};\n    let _obj = this.form.value;\n    for (let prop in _obj) {\n      if (!_obj[prop])\n        continue\n      else if (_obj[prop] instanceof Date)\n        _params[prop] = this.dateService.convertToUrlDate(_obj[prop])\n      else if(prop == 'parametrizacao')\n        _params[prop] = JSON.stringify(_obj[prop])\n      else if(Array.isArray(_obj[prop]))\n        _params[prop] = _obj[prop].toString()\n      else\n        _params[prop] = _obj[prop]\n      \n    }\n\n    return _params\n\n  }\n\n  onFilter() {\n\n    this.form.get('timestamp').setValue((new Date()).getTime());\n\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routeService.setBase64UrlParams(this.getParams()),\n    });\n\n  }\n\n  /* CSS - Campos requeridos */\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n\n  getIndicadores(params) {\n    \n    if(this.$indicadoresSubscription){\n      this.$indicadoresSubscription.unsubscribe();\n    }\n    \n    this.loading = true;\n    this.empty = false;\n    this.show = false;\n\n    let parametro = this.form.get(\"origem\").value == \"TMS\" ? 1 : 2;\n\n    const requests = [];\n\n    requests.push(this.service.getIndicadores({...params, parametro: parametro}))\n    \n    delete params['select'];\n    delete params['where'];\n    delete params['orderBy'];\n    delete params['groupBy'];\n\n    requests.push(this.service.getIndicadores({...params, parametro: parametro}))\n\n    this.$indicadoresSubscription = forkJoin(requests)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          })\n        )\n        .subscribe(\n          response => {    \n          \n            if(response[0]['status'] != 200){\n              this.empty = true\n              return\n            } \n\n            this.data = response[0]['body'][\"data\"];\n            this.show = true;\n\n            if(response[1]['status'] == 200){\n              this.total = response[1]['body'][\"data\"][0];\n            }\n\n      },\n      error => {\n        this.pnotify.error()\n      })\n  }\n\n  getRotulos(){\n\n    this.service\n      .getRotulos()\n      .subscribe(\n        response => {\n          \n          if(response.status != 200){\n            return\n          }\n\n          this.rotulos = response.body['data'];\n\n        }\n      )\n  }\n\n  setOrderBy(column: string): void {\n\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.orderData(this.orderBy, this.orderType)\n\n  }\n\n  orderData(key, type){\n\n    this.data.sort((a, b) => {\n      \n      if(a[key] === b[key]){\n        return 0;\n      }\n\n      if(type == 'ASC'){\n        return a[key] > b[key] ? -1 : 1; \n      }\n\n      return a[key] > b[key] ? 1 : -1;\n\n    })\n  }\n\n  prepareData(e: Array<any>){\n    \n    let select = '';\n    let where = '';\n    let groupBy = '';\n    let orderBy = '';\n\n    Object.keys(this.columns).map(key => this.columns[key] = false)\n\n    e.forEach((value, index) => {\n\n      if(where){\n        where += ' AND '\n      }\n\n      select += value?.v2?.select;\n      where += value?.v2?.where;\n      groupBy += value?.v2?.groupBy;\n      orderBy += value?.v2?.orderBy;\n\n      if(index != (e.length - 1)){\n        \n        select +=  '\\n';\n        where +=  '\\n';\n        groupBy +=  ',\\n';\n        orderBy +=  ',\\n';\n      \n      }\n\n      this.columns[value.nome] = true;\n\n    })\n    \n    where = ' WHERE ' + where;\n    groupBy = ' GROUP BY ' + groupBy;\n    orderBy = ' ORDER BY ' + orderBy;\n\n    this.form.get('select').setValue(select);\n    this.form.get('where').setValue(where);\n    this.form.get('groupBy').setValue(groupBy);\n    this.form.get('orderBy').setValue(orderBy);\n    \n    this.getIndicadores(this.getParams());\n\n  }\n\n  onExport(){\n    this.xlsxService.export({data: this.data})\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { V2RoutingModule } from './v2-routing.module';\nimport { LogisticaDashboardsAnaliseFreteV2Component } from './v2.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDatepickerModule, ModalModule, PaginationModule, TooltipModule } from 'ngx-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CountoModule } from 'angular2-counto';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\n\n\n@NgModule({\n  declarations: [\n    LogisticaDashboardsAnaliseFreteV2Component\n  ],\n  imports: [\n    CommonModule,\n    V2RoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    NgSelectModule,\n    CountoModule,\n    NotFoundModule,\n    SharedModule,\n    TemplatesModule,\n    PipesModule,\n  ]\n})\nexport class V2Module { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2Rhc2hib2FyZHMvYW5hbGlzZS1mcmV0ZS92Mi92Mi5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LogisticaDashboardsAnaliseFreteV2Component } from './v2.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaDashboardsAnaliseFreteV2Component\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class V2RoutingModule { }\n"],"sourceRoot":"webpack:///"}