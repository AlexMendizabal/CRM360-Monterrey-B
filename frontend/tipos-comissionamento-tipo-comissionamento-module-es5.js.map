{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/tipo-comissionamento-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/formulario/formulario-resolver.guard.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/lista/lista.component.html","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/tipo-comissionamento.module.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/formulario/formulario.component.html","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/lista/lista.component.scss"],"names":["routes","path","component","resolve","detalhes","canDeactivate","redirectTo","pathMatch","ComercialCadastrosTipoComissionamentoModuleRoutingModule","imports","forChild","exports","ComercialCadastrosTipoComissionamentoFormularioResolverGuard","tipoComissionamentoService","route","params","id","getDetalhes","success","data","codTipoComissionamento","dsTipoComissionamento","qtdeRegistros","codSituacao","codLinha","nomeLinha","codClasse","nomeClasse","percentual","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialCadastrosTipoComissionamentoFormularioComponent","activatedRoute","router","location","formBuilder","pnotifyService","atividadesService","titleService","confirmModalService","loaderFullScreen","breadCrumbTree","dadosPercentual","formChanged","formPercentualIndex","dadosPerc","linhasMaterial","classesMaterial","filteredClasses","firstAccess","tableConfigPercentual","fixedHeader","bodyHeight","hover","getPNotify","getFilterValues","registrarAcesso","setBreadCrumb","setFormBuilder","subscribe","appTitle","setTitle","descricao","routerLink","idSubModulo","snapshot","situacao","toString","form","group","required","linhas","array","onAddLinha","error","back","get","index","indexLinhas","length","i","push","classes","indice","onAddPercentual","percentualAdd","percentualAssociado","at","indexData","getPercentual","codFaixa","percDescontoDe","percDescontoAte","percPago","item","indexPercentual","action","loaderNavbar","dados","valida","console","log","confirmDelete","response","deleteFaixa","pipe","next","clear","splice","hasOwnProperty","mensagem","showConfirm","formMateriais","codMaterial","checked","controls","value","forEach","linha","onChangeLinha","filter","classe","idLinha","unshift","idClasse","pristine","valid","submittingForm","save","reset","navigate","relativeTo","notice","confirm","formGroup","formArray","indexNested","field","onMoreNestedFieldInvalid","linhaNestedForm","percentualNestedForm","status","touched","formControl","validator","validationResult","onNestedFieldInvalid","nestedForm","onFieldInvalid","abstractControl","abstractControlField","controlName","onFieldRequired","selector","template","ComercialService","http","API","httpParams","param","append","codCliente","ComercialCadastrosTipoComissionamentoModule","declarations","forRoot","providers","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosTipoComissionamentoListaComponent","detailPanelService","comercialService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderType","maxSize","itemsPerPage","currentPage","totalItems","dadosPagination","dadosLoaded","dadosEmpty","codigo","faixaPerc","tableConfigDetail","setFormFilter","onDetailPanelEmitter","setTipoComissionamentoSelecionado","showDetailPanelSubscription","unsubscribe","config","event","showing","formValue","checkRouterParams","dsTiposComissionamento","codTiposComissionamento","orderBy","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","Object","keys","atob","JSON","parse","search","formKey","paramKey","isNaN","Number","tipoComissionamentoSelecionado","codUsuario","nomeUsuario","dataCadastro","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getTipoComissionamento","slice","equipeVenda","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","tipoComissionamento","getDetailTipoComissionamento","setTimeout","loadedFinished","confirmActivate","asObservable","result","activateTipoComissionamento","refreshMainData","confirmInactive","inactivateTipoComissionamento"],"mappings":"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","file":"tipos-comissionamento-tipo-comissionamento-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosTipoComissionamentoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosTipoComissionamentoListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosTipoComissionamentoFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialCadastrosTipoComissionamentoListaComponent },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosTipoComissionamentoFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosTipoComissionamentoFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosTipoComissionamentoFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosTipoComissionamentoFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialCadastrosTipoComissionamentoModuleRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosTipoComissionamentoService } from '../tipo-comissionamento.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosTipoComissionamentoFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private tipoComissionamentoService: ComercialCadastrosTipoComissionamentoService,\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.tipoComissionamentoService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of(\r\n      {\r\n        success: true,\r\n        data: [{\r\n          codTipoComissionamento: null,\r\n          dsTipoComissionamento: null,\r\n          qtdeRegistros: null,\r\n          codSituacao: null,\r\n          codLinha: null,\r\n          nomeLinha: null,\r\n          codClasse: null,\r\n          nomeClasse: null,\r\n          percentual: []\r\n        }]\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy90aXBvcy1jb21pc3Npb25hbWVudG8vZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ComercialCadastrosMateriaisGrupoMateriaisAssociadosService } from './../../materiais/grupos-materiais-associados/grupos-materiais-associados.service';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n  FormArray,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\n\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\n\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { ComercialCadastrosTipoComissionamentoService } from '../tipo-comissionamento.service';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-tipo-comissionamento-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss']\r\n})\r\nexport class ComercialCadastrosTipoComissionamentoFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderNavbar: boolean;\r\n  loaderFullScreen = true;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<any> = [];\r\n  dadosPercentual: Array<any> = [];\r\n  show: boolean = false;\r\n\r\n  form: FormGroup;\r\n  formPercentual: FormGroup;\r\n  formLinhas: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n  codTiposComissionamento: number;\r\n  formPercentualIndex: number = null;\r\n  dadosPerc: boolean = false;\r\n  index: number;\r\n\r\n  linhasMaterial: Array<any> = [];\r\n  classesMaterial: Array<any> = [];\r\n  // filteredClasses: Array<any> = [];\r\n  filteredClasses = {};\r\n  formMateriais: FormGroup;\r\n\r\n  firstAccess: boolean = false;\r\n  codLinha: number = 0;\r\n  situacao: string;\r\n\r\n  tableConfigPercentual: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private tipoComissionamentoService: ComercialCadastrosTipoComissionamentoService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getFilterValues();\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    // this.getFormFields();\r\n\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar Tipo de comissionamento';\r\n      } else {\r\n        this.appTitle = 'Novo Tipo de comissionamento';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`\r\n        },\r\n        {\r\n          descricao: 'Lista',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/tipos-comissionamento/lista`\r\n        },\r\n        {\r\n          descricao: this.appTitle\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes = this.activatedRoute.snapshot.data.detalhes.data;\r\n\r\n      if (detalhes[0].codSituacao != null) {\r\n        this.situacao = detalhes[0].codSituacao.toString();\r\n      }\r\n\r\n\r\n      this.form = this.formBuilder.group({\r\n        codTipoComissionamento: [detalhes[0].codTipoComissionamento],\r\n        dsTipoComissionamento: [detalhes[0].dsTipoComissionamento, [Validators.required]],\r\n        codSituacao: [this.situacao ? detalhes[0].codSituacao : 1, [Validators.required]],\r\n        linhas: this.formBuilder.array([]),\r\n      });\r\n\r\n      this.onAddLinha(null, detalhes);\r\n\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  get linhas(): FormArray {\r\n    return this.form.get('linhas') as FormArray;\r\n  }\r\n\r\n  onAddLinha(index?: number, data?: any ) {\r\n    let indexLinhas = 1;\r\n\r\n\r\n    if (data) {indexLinhas = data.length;};\r\n\r\n    for (let i = 0; i < indexLinhas; i++) {\r\n      this.linhas.push(\r\n        this.formBuilder.group({\r\n          codLinha: [ data ? data[i].codLinha : '', [Validators.required]],\r\n          codClasse: [data ? data[i].codClasse : '', [Validators.required]],\r\n          classes: [[]],\r\n          percentual: this.formBuilder.array([]),\r\n      }));\r\n\r\n\r\n      if (data) {\r\n        for (let indice = 0; indice < data[i].percentual.length; indice++) {\r\n          this.onAddPercentual(index, data[i].percentual[indice], i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onAssociarPercentual(data): void {\r\n    const percentualAdd = data.percentual;\r\n    this.percentualAssociado(percentualAdd);\r\n  }\r\n\r\n  percentualAssociado(data): void {\r\n    this.onAddPercentual(null, data);\r\n  }\r\n\r\n  getPercentual(index: number) {\r\n    return this.linhas.at(index).get(\"percentual\") as FormArray;\r\n  }\r\n\r\n  onAddPercentual(index?: number, data?: any, indexLinhas?: number): void {\r\n    let indexData = 0;\r\n\r\n    !data ? indexData = index : indexData = indexLinhas;\r\n      this.getPercentual(indexData).push(\r\n        this.formBuilder.group({\r\n          codFaixa: data ? data.codFaixa : null,\r\n          percDescontoDe: [data ? data.percDescontoDe : null, [Validators.required]],\r\n          percDescontoAte: [data ? data.percDescontoAte : null, [Validators.required]],\r\n          percPago: [data ? data.percPago : null, [Validators.required]],\r\n      }));\r\n    }\r\n\r\n\r\n  onDeleteValor(index?: number, item?: any, indexPercentual?: number, action?) {\r\n    this.loaderNavbar = true;\r\n\r\n    let dados = [];\r\n    let valida = [];\r\n\r\n    if (action == 'one') {\r\n      dados.push(item);\r\n      valida.push(item);\r\n    } else {\r\n      dados = item;\r\n      valida = item;\r\n    }\r\n\r\n    console.log()\r\n\r\n    console.log(dados);\r\n\r\n    this.confirmDelete().subscribe((response: boolean) => {\r\n      if (response) {\r\n        if (dados[0].codFaixa != null) {\r\n          this.tipoComissionamentoService\r\n            .deleteFaixa(dados)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.loaderNavbar = false;\r\n              })\r\n            )\r\n            .subscribe({\r\n              next: (response: JsonResponse) => {\r\n                if (response.success) {\r\n                  // this.form.get('linhas')['controls'][index].get('percentual').clear();\r\n                  // this.form.get('linhas')['controls'][index].splice(0, 1);\r\n                  // this.form.get('linhas')['controls'].splice(index, 1);\r\n                  if (action == 'all') {\r\n                    this.form.get('linhas')['controls'][index].get('percentual').clear();\r\n                    this.form.get('linhas')['controls'].splice(index, 1);\r\n                  } else {\r\n                    this.form.get('linhas')['controls'][index].get('percentual')['controls'].splice(indexPercentual, 1);\r\n                  }\r\n                  \r\n                  if (this.form.get('linhas')['controls'].length < 1) {\r\n                    this.onAddLinha(index,);\r\n                  }\r\n\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              },\r\n              error: (error: any) => {\r\n                if (\r\n                  error.error.hasOwnProperty('mensagem') &&\r\n                  (error.mensagem !== null || error.mensagem !== '')\r\n                ) {\r\n                  this.pnotifyService.error(error.error.mensagem);\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              }\r\n            });\r\n          } else {\r\n            // this.form.get('linhas')['controls'][index].get('percentual').clear();\r\n            // this.form.get('linhas')['controls'].splice(index, 1);\r\n            if (action == 'all') {\r\n              this.form.get('linhas')['controls'][index].get('percentual').clear();\r\n              this.form.get('linhas')['controls'].splice(index, 1);\r\n            } else {\r\n              this.form.get('linhas')['controls'][index].get('percentual')['controls'].splice(indexPercentual, 1);\r\n            }\r\n            \r\n          }\r\n          this.loaderNavbar = false;\r\n        }\r\n      });\r\n    }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  setFormMateriais(): void {\r\n    this.formMateriais = this.formBuilder.group({\r\n      codLinha: [null, [Validators.required]],\r\n      codClasse: [null, [Validators.required]],\r\n      codMaterial: [null, [Validators.required]],\r\n      checked: [false]\r\n    });\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.tipoComissionamentoService\r\n      .getFilterValues()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response[0].success === true) {\r\n          this.linhasMaterial = response[0].data;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n\r\n        if (response[1].success === true) {\r\n          this.classesMaterial = response[1].data;\r\n          const linhas = this.form.controls['linhas'].value;\r\n\r\n          linhas.forEach((linha, index) => {\r\n            this.onChangeLinha(linha.codLinha, index);\r\n          });\r\n\r\n\r\n          // this.onChangeLinha();\r\n\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  onChangeLinha(codLinha: number, index: number) {\r\n    const classes = this.classesMaterial.filter(classe => {\r\n      return classe.idLinha == codLinha;\r\n    })\r\n    this.filteredClasses[index] = classes;\r\n\r\n    this.filteredClasses[index].unshift({\r\n      idClasse: 0,\r\n      nomeClasse: 'TODOS',\r\n    });\r\n  }\r\n\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.tipoComissionamentoService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onMoreNestedFieldError(formGroup: string, index: number, formArray: string, indexNested: number, field: string) {\r\n    if (this.onMoreNestedFieldInvalid(formGroup, index, formArray, indexNested, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onMoreNestedFieldInvalid(formGroup: string, index: number, formArray: string, indexNested: number, field: any) {\r\n    let linhaNestedForm: any = this.form.controls[formGroup];\r\n    let percentualNestedForm: any = linhaNestedForm.controls[index].controls[formArray];\r\n    field = percentualNestedForm.controls[indexNested].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onMoreNestedFieldRequired(formGroup: string, index: number, formArray: string, indexNested: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let linhaNestedForm: any = this.form.controls[formGroup];\r\n    let percentualNestedForm: any = linhaNestedForm.controls[index].controls[formArray];\r\n\r\n    if (percentualNestedForm.controls[indexNested].get(field).validator) {\r\n      let validationResult = percentualNestedForm.controls[indexNested]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onNestedFieldError(formGroup: string, index: number, field: string) {\r\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n    field = nestedForm.controls[index].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n\r\n    if (nestedForm.controls[index].get(field).validator) {\r\n      let validationResult = nestedForm.controls[index]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Tipo de Comissionamento\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n    <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-7\\\">\\r\\n              <label for=\\\"dsTiposComissionamento\\\">Tipo de Comissionamento</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"dsTiposComissionamento\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n                <option value=\\\"0\\\">Inativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-8 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Descrição</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let tipoComissionamento of dadosPagination; let i = index\\\"\\r\\n          [class.table-active]=\\\"tipoComissionamento.codTipoComissionamento == codigo\\\">\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(tipoComissionamento)\\\"\\r\\n              (click)=\\\"onDetails(tipoComissionamento)\\\">\\r\\n              {{ tipoComissionamento.dsTipoComissionamento }}\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <!-- <span *ngIf=\\\"tipoComissionamento.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, tipoComissionamento)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"tipoComissionamento.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, tipoComissionamento)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span> -->\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(tipoComissionamento)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty && dadosPagination.length < 1\\\">\\r\\n      </empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 mb-2\\\" [hidden]=\\\"!showDetailPanel\\\" >\\r\\n      <detail-panel panelTitle=\\\"Faixa de valores\\\" #scrollToFilter>\\r\\n        <div class=\\\"mtc-title\\\"*ngIf=\\\"faixaPerc.length > 0\\\">{{ faixaPerc[0].dsTipoComissionamento }}</div>\\r\\n        <div class=\\\"col-12 mb-4\\\" *ngFor=\\\"let dados of faixaPerc\\\">\\r\\n          <custom-table *ngIf=\\\"faixaPerc.length > 0\\\">\\r\\n            <ng-template #thead let-thead  >\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 50%\\\">Linha</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 50%\\\">Classe</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr>\\r\\n                <td class=\\\"text-center\\\">{{ dados.nomeLinha }}</td>\\r\\n                <td class=\\\"text-center\\\" *ngIf=\\\"dados.codClasse === 0\\\" >TODOS</td>\\r\\n                <td class=\\\"text-center\\\" *ngIf=\\\"dados.codClasse != 0\\\">{{ dados.nomeClasse }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n\\r\\n        <custom-table *ngIf=\\\"faixaPerc.length > 0\\\" [config]=\\\"tableConfigDetail\\\">\\r\\n          <ng-template #thead let-thead  >\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 55%\\\">Percentual de desconto da tabela de vendas de materiais (%) </th>\\r\\n              <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 45%\\\">Percentual a ser pago de comissão sobre o título (%) </th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let item of dados.percentual\\\">\\r\\n              <td class=\\\"text-center\\\">{{ item.percDescontoDe }} a {{ item.percDescontoAte }} %</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.percPago }} %</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </div>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  \r\n  \r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos(){\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosTipoComissionamentoModuleRoutingModule } from './tipo-comissionamento-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosTipoComissionamentoListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosTipoComissionamentoFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosTipoComissionamentoListaComponent,\r\n    ComercialCadastrosTipoComissionamentoFormularioComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    CurrencyMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosTipoComissionamentoModuleRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class ComercialCadastrosTipoComissionamentoModule {}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm \\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n  <!-- || submittingForm -->\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n  <div class=\\\"col-12 mt-3\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-9\\\">\\r\\n              <label for=\\\"dsTipoComissionamento\\\">Tipo de Recebimento</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dsTipoComissionamento\\\"\\r\\n                formControlName=\\\"dsTipoComissionamento\\\"\\r\\n\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n                [ngClass]=\\\"onFieldError('dsTipoComissionamento') + ' ' + onFieldRequired(form.controls.dsTipoComissionamento)\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('dsTipoComissionamento')\\\" message=\\\"Tipo de recebimento é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\"\\r\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n              </select>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Qtde. parcelas é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 mt-3\\\" formArrayName=\\\"linhas\\\">\\r\\n\\r\\n    <div class=\\\"col-12\\\" *ngFor=\\\"let item of linhas.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n    <div class=\\\"form-row justify-content-center\\\" >\\r\\n        <div class=\\\"col-lg-6 border mb-3\\\" >\\r\\n          <!-- <hr> -->\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-5\\\" >\\r\\n              <label for=\\\"codLinha\\\">Linha</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"linhasMaterial\\\"\\r\\n                formControlName=\\\"codLinha\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codLinha\\\"\\r\\n                bindLabel=\\\"descricao\\\"\\r\\n                bindValue=\\\"id\\\"\\r\\n                (change)=\\\"onChangeLinha($event.id, i)\\\"\\r\\n                [ngClass]=\\\"onNestedFieldError('linhas', i, 'codLinha') + ' ' + onNestedFieldRequired('linhas', i, 'codLinha')\\\">\\r\\n            </ng-select>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-5\\\">\\r\\n              <label for=\\\"codSituacao\\\">Classe</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"filteredClasses[i]\\\"\\r\\n                formControlName=\\\"codClasse\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codClasse\\\"\\r\\n                bindLabel=\\\"nomeClasse\\\"\\r\\n                bindValue=\\\"idClasse\\\"\\r\\n                [ngClass]=\\\"onNestedFieldError('linhas', i, 'codClasse') + ' ' + onNestedFieldRequired('linhas', i, 'codClasse')\\\">\\r\\n            </ng-select>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1\\\"></div>\\r\\n            <div class=\\\"form-group col-lg-1 pt-3\\\">\\r\\n              <btn-icon\\r\\n                  icon=\\\"fas fa-plus-square\\\"\\r\\n                  class=\\\"justify-content-center pt-2\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  tooltip=\\\"Novo Percentual\\\"\\r\\n                  (click)=\\\"onAddPercentual(i)\\\">\\r\\n              </btn-icon>\\r\\n              <!-- onDeleteValor(i, item.value, 'change'); -->\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row mb-2\\\" *ngIf=\\\"getPercentual(i).controls.length > 0\\\">\\r\\n            <div class=\\\"col-lg-12 mb-2\\\">\\r\\n            <custom-table [config]=\\\"tableConfigPercentual\\\" formArrayName=\\\"percentual\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 55%\\\">Percentual de desconto da tabela de vendas de materiais (%) </th>\\r\\n                  <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 45%\\\">Percentual a ser pago de comissão sobre o título (%) </th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody >\\r\\n                <tr  *ngFor=\\\"let percentual of getPercentual(i).controls; let j = index\\\"  class=\\\"colorBody\\\" [formGroupName]=\\\"j\\\">\\r\\n\\r\\n                  <td class=\\\"border\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n\\r\\n                      <div class=\\\"col-5\\\">\\r\\n                          <input\\r\\n                            style=\\\"text-align: center;\\\"\\r\\n                            class=\\\"form-control\\\"\\r\\n                            id=\\\"percDescontoDe\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"percDescontoDe\\\"\\r\\n                            (input)=\\\"onInput()\\\"\\r\\n                            currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 2, suffix: '%' }\\\"\\r\\n                            [ngClass]=\\\"onMoreNestedFieldError('linhas', i, 'percentual', j, 'percDescontoDe') + ' '\\r\\n                            + onMoreNestedFieldRequired('linhas', i, 'percentual', j, 'percDescontoDe')\\\">\\r\\n\\r\\n\\r\\n                      </div>\\r\\n                      <div class=\\\"col-2\\\"> a </div>\\r\\n                      <div class=\\\"col-5\\\">\\r\\n                          <input\\r\\n                            style=\\\"text-align: center;\\\"\\r\\n                            class=\\\"form-control\\\"\\r\\n                            id=\\\"percDescontoAte\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"percDescontoAte\\\"\\r\\n                            (input)=\\\"onInput()\\\"\\r\\n                            currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 2, suffix: '%' }\\\"\\r\\n                            [ngClass]=\\\"onMoreNestedFieldError('linhas', i, 'percentual', j, 'percDescontoAte') + ' '\\r\\n                            + onMoreNestedFieldRequired('linhas', i, 'percentual', j, 'percDescontoAte')\\\">\\r\\n                      </div>\\r\\n                      </div>\\r\\n                  </td>\\r\\n\\r\\n                  <td class=\\\"border\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"col-2\\\"></div>\\r\\n                      <div class=\\\"col-8\\\">\\r\\n                        <input\\r\\n                          style=\\\"text-align: center;\\\"\\r\\n                          class=\\\"form-control\\\"\\r\\n                          id=\\\"percPago\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          formControlName=\\\"percPago\\\"\\r\\n                          (input)=\\\"onInput()\\\"\\r\\n                          currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 2, suffix: '%' }\\\"\\r\\n                          [ngClass]=\\\"onMoreNestedFieldError('linhas', i, 'percentual', j, 'percPago') + ' '\\r\\n                            + onMoreNestedFieldRequired('linhas', i, 'percentual', j, 'percPago')\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"col-2\\\">\\r\\n                        <div class=\\\"form-row justify-content-end\\\">\\r\\n                          <div class=\\\"col-lg-12 mb-2\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn-icon-sm float-right\\\" (click)=\\\"onDeleteValor(i, item.value.percentual[j], j, 'one')\\\" tooltip=\\\"Limpar Registro\\\" >\\r\\n                              <i class=\\\"fas fa-trash\\\"></i>\\r\\n                            </button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </td>\\r\\n\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row justify-content-end\\\" *ngIf=\\\"getPercentual(i).controls.length > 0\\\">\\r\\n            <div class=\\\"col-lg-12 mb-2\\\">\\r\\n              <btn-icon\\r\\n                  icon=\\\"fas fa-trash\\\"\\r\\n                  class=\\\"float-right\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  color=\\\"danger\\\"\\r\\n                  tooltip=\\\"Limpar Tudo\\\"\\r\\n                  (click)=\\\"onDeleteValor(i, item.value.percentual, j, 'all')\\\">\\r\\n              </btn-icon>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 mx-auto\\\" *ngIf=\\\"getPercentual(i).controls.length > 0\\\">\\r\\n      <div class=\\\"form-row\\\" >\\r\\n        <div class=\\\"col-lg-12 mb-3 justify-content-center\\\">\\r\\n          <btn-icon\\r\\n            icon=\\\"fas fa-plus\\\"\\r\\n            size=\\\"small\\\"\\r\\n            class=\\\"float-right\\\"\\r\\n            tooltip=\\\"Nova faixa de valores\\\"\\r\\n            (click)=\\\"onAddLinha(i)\\\">\\r\\n          </btn-icon>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </form>\\r\\n</app-body>\\r\\n\\r\\n\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { TipoLinhas } from './../models/tipo-linhas';\r\nimport { EquipeVenda } from './../../equipe-venda/models/equipe-venda';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\n\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialService } from '../../../comercial.service';\r\n\r\n// Interfaces\r\n\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { TipoComissionamento } from '../models/tipo-comissionamento';\r\nimport { ComercialCadastrosTipoComissionamentoService } from '../tipo-comissionamento.service';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-tipos-comissionamento-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class ComercialCadastrosTipoComissionamentoListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red'\r\n    }\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n  orderBy;\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<TipoComissionamento> = [];\r\n  dadosPagination: Array<TipoComissionamento> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n  codigo: number = 0;\r\n\r\n  tipoComissionamentoSelecionado: TipoComissionamento;\r\n  faixaPerc: Array<any> = [];\r\n\r\n  tableConfigDetail: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private tipoComissionamentoService: ComercialCadastrosTipoComissionamentoService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Tipo de Comissionamento');\r\n    this.onDetailPanelEmitter();\r\n    this.setTipoComissionamentoSelecionado();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`\r\n        },\r\n        {\r\n          descricao: 'Lista'\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      dsTiposComissionamento: [formValue.dsTiposComissionamento],\r\n      codTiposComissionamento: [formValue.codTiposComissionamento],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required]\r\n    });\r\n\r\n    this.checkOrder();\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      dsTiposComissionamento: null,\r\n      codSituacao: 1,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach(formKey => {\r\n            Object.keys(params).forEach(paramKey => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setTipoComissionamentoSelecionado(): void {\r\n    this.tipoComissionamentoSelecionado = {\r\n      codTipoComissionamento: null,\r\n      dsTiposComissionamento: null,\r\n      codSituacao: null,\r\n      qtdeRegistros: null,\r\n      situacao: null,\r\n      codUsuario: null,\r\n      nomeUsuario: null,\r\n      dataCadastro: null,\r\n      linhas: []\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) }\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.dsTiposComissionamento) {\r\n      params.dsTiposComissionamento = this.form.value.dsTiposComissionamento;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    this.tipoComissionamentoService\r\n      .getTipoComissionamento(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(equipeVenda: EquipeVenda): string {\r\n    let borderClass: string;\r\n\r\n    if (equipeVenda.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (equipeVenda.codSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant'\r\n    });\r\n  }\r\n\r\n  onDetails(tipoComissionamento: TipoComissionamento): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.faixaPerc = [];\r\n\r\n    this.tipoComissionamentoService\r\n      .getDetailTipoComissionamento(tipoComissionamento.codTipoComissionamento)\r\n      .pipe(\r\n        finalize(() => {\r\n\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.faixaPerc = response.data;\r\n            this.codigo = this.faixaPerc[0].codTipoComissionamento;\r\n\r\n          } else {\r\n            this.detailPanelService.loadedFinished(true);\r\n            this.pnotifyService.error();\r\n\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      }\r\n\r\n      );\r\n  }\r\n\r\n  onEdit(tipoComissionamento: TipoComissionamento): void {\r\n    this.router.navigate(['../editar', tipoComissionamento.codTipoComissionamento], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, tipoComissionamento: TipoComissionamento): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap(result =>\r\n          result ? this.activateTipoComissionamento(index, tipoComissionamento) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(tipoComissionamento);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateTipoComissionamento(\r\n    index: number,\r\n    tipoComissionamento: TipoComissionamento\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.tipoComissionamentoService.activateTipoComissionamento(\r\n      tipoComissionamento.codTipoComissionamento\r\n    );\r\n  }\r\n\r\n  onInactivate(index: number, tipoComissionamento: TipoComissionamento): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap(result =>\r\n          result ? this.inactivateTipoComissionamento(index, tipoComissionamento) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(tipoComissionamento);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateTipoComissionamento(\r\n    index: number,\r\n    tipoComissionamento: TipoComissionamento\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n\r\n    this.dadosPagination[index].codSituacao = 2;\r\n\r\n    return this.tipoComissionamentoService.inactivateTipoComissionamento(\r\n      tipoComissionamento.codTipoComissionamento\r\n    );\r\n  }\r\n\r\n  refreshMainData(tipoComissionamento: TipoComissionamento): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (tipoComissionamento.codTipoComissionamento === this.dados[i].codTipoComissionamento) {\r\n        this.dados[i].codSituacao = tipoComissionamento.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy90aXBvcy1jb21pc3Npb25hbWVudG8vbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";"]}