{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/tipo-comissionamento-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/formulario/formulario-resolver.guard.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/lista/lista.component.html","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/tipo-comissionamento.module.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/formulario/formulario.component.html","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/lista/lista.component.scss"],"names":["routes","path","component","resolve","detalhes","canDeactivate","redirectTo","pathMatch","ComercialCadastrosTipoComissionamentoModuleRoutingModule","imports","forChild","exports","ComercialCadastrosTipoComissionamentoFormularioResolverGuard","tipoComissionamentoService","route","params","id","getDetalhes","success","data","codTipoComissionamento","dsTipoComissionamento","qtdeRegistros","codSituacao","codLinha","nomeLinha","codClasse","nomeClasse","percentual","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialCadastrosTipoComissionamentoFormularioComponent","activatedRoute","router","location","formBuilder","pnotifyService","atividadesService","titleService","confirmModalService","loaderFullScreen","breadCrumbTree","dadosPercentual","formChanged","formPercentualIndex","dadosPerc","linhasMaterial","classesMaterial","filteredClasses","firstAccess","tableConfigPercentual","fixedHeader","bodyHeight","hover","getPNotify","getFilterValues","registrarAcesso","setBreadCrumb","setFormBuilder","subscribe","appTitle","setTitle","descricao","routerLink","idSubModulo","snapshot","situacao","toString","form","group","required","linhas","array","onAddLinha","error","back","index","indexLinhas","length","i","push","classes","indice","onAddPercentual","percentualAdd","percentualAssociado","at","get","indexData","getPercentual","codFaixa","percDescontoDe","percDescontoAte","percPago","item","indexPercentual","action","loaderNavbar","dados","valida","console","log","confirmDelete","response","deleteFaixa","pipe","next","clear","splice","hasOwnProperty","mensagem","showConfirm","formMateriais","codMaterial","checked","controls","value","forEach","linha","onChangeLinha","filter","classe","idLinha","unshift","idClasse","pristine","valid","submittingForm","save","reset","navigate","relativeTo","notice","confirm","formGroup","formArray","indexNested","field","onMoreNestedFieldInvalid","linhaNestedForm","percentualNestedForm","status","touched","formControl","validator","validationResult","onNestedFieldInvalid","nestedForm","onFieldInvalid","abstractControl","abstractControlField","controlName","onFieldRequired","selector","template","ComercialService","http","API","httpParams","param","append","ComercialCadastrosTipoComissionamentoModule","declarations","forRoot","providers","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosTipoComissionamentoListaComponent","detailPanelService","comercialService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderType","maxSize","itemsPerPage","currentPage","totalItems","dadosPagination","dadosLoaded","dadosEmpty","codigo","faixaPerc","tableConfigDetail","setFormFilter","onDetailPanelEmitter","setTipoComissionamentoSelecionado","showDetailPanelSubscription","unsubscribe","config","event","showing","formValue","checkRouterParams","dsTiposComissionamento","codTiposComissionamento","orderBy","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","Object","keys","atob","JSON","parse","search","formKey","paramKey","isNaN","Number","tipoComissionamentoSelecionado","codUsuario","nomeUsuario","dataCadastro","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getTipoComissionamento","slice","equipeVenda","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","tipoComissionamento","getDetailTipoComissionamento","setTimeout","loadedFinished","confirmActivate","asObservable","result","activateTipoComissionamento","refreshMainData","confirmInactive","inactivateTipoComissionamento"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAGA;AAIA;;;AAIA,UAAMA,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE;AAA5B,OADqB,EAErB;AACED,YAAI,EAAE,MADR;AAEEC,iBAAS,EAAE,yHAFb;AAGEC,eAAO,EAAE;AACPC,kBAAQ,EAAE;AADH,SAHX;AAMEC,qBAAa,EAAE,CAAC,wFAAD;AANjB,OAFqB,EAUrB;AACEJ,YAAI,EAAE,YADR;AAEEC,iBAAS,EAAE,yHAFb;AAGEC,eAAO,EAAE;AACPC,kBAAQ,EAAE;AADH,SAHX;AAMEC,qBAAa,EAAE,CAAC,wFAAD;AANjB,OAVqB,EAkBrB;AACEJ,YAAI,EAAE,EADR;AAEEK,kBAAU,EAAE,OAFd;AAGEC,iBAAS,EAAE;AAHb,OAlBqB,CAAvB;;UA6BaC,wDAAwD;AAAA;AAAA,O;;AAAxDA,8DAAwD,6DAJpE,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBV,MAAtB,CAAD,CADD;AAERW,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIoE,GAAxDH,wDAAwD,CAAxD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCpCb;;;UAMaI,4DAA4D;AAEvE,8EACUC,0BADV,EACkF;AAAA;;AAAxE,eAAAA,0BAAA,GAAAA,0BAAA;AACN;;AAJmE;AAAA;AAAA,kCAM/DC,KAN+D,EAMlC;AACnC,gBAAIA,KAAK,CAACC,MAAN,IAAgBD,KAAK,CAACC,MAAN,CAAaC,EAAjC,EAAqC;AACnC,qBAAO,KAAKH,0BAAL,CAAgCI,WAAhC,CAA4CH,KAAK,CAACC,MAAN,CAAaC,EAAzD,CAAP;AACD,aAHkC,CAKnC;;;AACA,mBAAO,gDACL;AACEE,qBAAO,EAAE,IADX;AAEEC,kBAAI,EAAE,CAAC;AACLC,sCAAsB,EAAE,IADnB;AAELC,qCAAqB,EAAE,IAFlB;AAGLC,6BAAa,EAAE,IAHV;AAILC,2BAAW,EAAE,IAJR;AAKLC,wBAAQ,EAAE,IALL;AAMLC,yBAAS,EAAE,IANN;AAOLC,yBAAS,EAAE,IAPN;AAQLC,0BAAU,EAAE,IARP;AASLC,0BAAU,EAAE;AATP,eAAD;AAFR,aADK,CAAP;AAgBD;AA5BsE;;AAAA;AAAA,S;;;;gBALhE;;;;AAKIhB,kEAA4D,6DAHxE,iEAAW;AACViB,kBAAU,EAAE;AADF,OAAX,CAGwE,E,+EAGjC,0G,EAHiC,GAA5DjB,4DAA4D,CAA5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCPb;;;UAMakB,mBAAmB;AAC9B,qCAAoBC,YAApB,EAAkD;AAAA;;AAA9B,eAAAA,YAAA,GAAAA,YAAA;AAAgC;;AADtB;AAAA;AAAA,sCAI5BC,IAJ4B,EAK5BC,KAL4B,EAM5BC,OAN4B,EAO5BC,SAP4B,EAQ5BC,KAR4B,EAQd;AAEd,gBAAMC,QAAQ,GAAG,KAAKN,YAAL,CAAkBO,IAAlB,CAAuB,8EAAvB,EAA8C;AAC7DC,sBAAQ,EAAE,KADmD;AAE7DC,iCAAmB,EAAE,IAFwC;AAG7DC,sBAAQ,EAAE,KAHmD;AAI7D,uBAAO;AAJsD,aAA9C,CAAjB;AAOAJ,oBAAQ,CAACK,OAAT,CAAiBV,IAAjB,GAAwBA,IAAxB;AACAK,oBAAQ,CAACK,OAAT,CAAiBT,KAAjB,GAAyBA,KAAzB;AACAI,oBAAQ,CAACK,OAAT,CAAiBR,OAAjB,GAA2BA,OAA3B;;AAEA,gBAAIF,IAAI,KAAK,QAAb,EAAuB;AACrBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,+CAD+B,EAE/B,mCAF+B,CAAjC;AAID;;AAED,gBAAIX,IAAI,KAAK,YAAb,EAA2B;AACzBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,oCAD+B,CAAjC;AAGD;;AAED,gBAAIR,SAAJ,EAAe;AACbE,sBAAQ,CAACK,OAAT,CAAiBP,SAAjB,GAA6BA,SAA7B;AACD;;AAED,gBAAIC,KAAJ,EAAW;AACTC,sBAAQ,CAACK,OAAT,CAAiBN,KAAjB,GAAyBA,KAAzB;AACD,aAhCa,CAkCd;AACA;;;AACA,mBAA+BC,QAAQ,CAACK,OAAT,CAAkBE,aAAjD;AACD;AA7C6B;;AAAA;AAAA,S;;;;gBARvB;;;;AAQId,yBAAmB,6DAH/B,iEAAW;AACVD,kBAAU,EAAE;AADF,OAAX,CAG+B,E,+EACI,kE,EADJ,GAAnBC,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCmBf;;;UAgBae,wDAAwD;AAoCnE,0EACUC,cADV,EAEUC,MAFV,EAGUC,QAHV,EAIUC,WAJV,EAKUpC,0BALV,EAMUqC,cANV,EAOUC,iBAPV,EAQUC,YARV,EASUC,mBATV,EASkD;AAAA;;AARxC,eAAAP,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAApC,0BAAA,GAAAA,0BAAA;AACA,eAAAqC,cAAA,GAAAA,cAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AA1CV,eAAAC,gBAAA,GAAmB,IAAnB;AAGA,eAAAC,cAAA,GAA6B,EAA7B;AACA,eAAAC,eAAA,GAA8B,EAA9B;AACA,eAAAlB,IAAA,GAAgB,KAAhB;AAKA,eAAAmB,WAAA,GAAc,KAAd;AAGA,eAAAC,mBAAA,GAA8B,IAA9B;AACA,eAAAC,SAAA,GAAqB,KAArB;AAGA,eAAAC,cAAA,GAA6B,EAA7B;AACA,eAAAC,eAAA,GAA8B,EAA9B,CAwBkD,CAvBlD;;AACA,eAAAC,eAAA,GAAkB,EAAlB;AAGA,eAAAC,WAAA,GAAuB,KAAvB;AACA,eAAAvC,QAAA,GAAmB,CAAnB;AAGA,eAAAwC,qBAAA,GAAoD;AAClDC,uBAAW,EAAE,KADqC;AAElDC,sBAAU,EAAE,GAFsC;AAGlDC,iBAAK,EAAE;AAH2C,WAApD;AAiBE,eAAKjB,cAAL,CAAoBkB,UAApB;AACD;;AAhDkE;AAAA;AAAA,qCAkD3D;AACN,iBAAKC,eAAL;AACA,iBAAKC,eAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,cAAL,GAJM,CAKN;AAED;AAzDkE;AAAA;AAAA,4CA2DpD;AACb,iBAAKrB,iBAAL,CAAuBmB,eAAvB,GAAyCG,SAAzC;AACD;AA7DkE;AAAA;AAAA,0CA+DtD;AAAA;;AACX,iBAAK3B,cAAL,CAAoB/B,MAApB,CAA2B0D,SAA3B,CAAqC,UAAC1D,MAAD,EAAiB;AACpD,kBAAIA,MAAM,CAACC,EAAX,EAAe;AACb,qBAAI,CAAC0D,QAAL,GAAgB,gCAAhB;AACD,eAFD,MAEO;AACL,qBAAI,CAACA,QAAL,GAAgB,8BAAhB;AACD;;AAED,mBAAI,CAACtB,YAAL,CAAkBuB,QAAlB,CAA2B,KAAI,CAACD,QAAhC;;AAEA,mBAAI,CAACnB,cAAL,GAAsB,CACpB;AACEqB,yBAAS,EAAE,MADb;AAEEC,0BAAU,EAAE;AAFd,eADoB,EAKpB;AACED,yBAAS,EAAE,WADb;AAEEC,0BAAU,iCAA0B9D,MAAM,CAAC+D,WAAjC;AAFZ,eALoB,EASpB;AACEF,yBAAS,EAAE,OADb;AAEEC,0BAAU,iCAA0B9D,MAAM,CAAC+D,WAAjC;AAFZ,eAToB,EAapB;AACEF,yBAAS,EAAE,KAAI,CAACF;AADlB,eAboB,CAAtB;AAiBD,aA1BD;AA2BD;AA3FkE;AAAA;AAAA,2CA6FrD;AACZ,gBAAI,KAAK5B,cAAL,CAAoBiC,QAApB,CAA6B5D,IAA7B,CAAkCf,QAAlC,CAA2Cc,OAA3C,KAAuD,IAA3D,EAAiE;AAC/D,kBAAMd,QAAQ,GAAG,KAAK0C,cAAL,CAAoBiC,QAApB,CAA6B5D,IAA7B,CAAkCf,QAAlC,CAA2Ce,IAA5D;;AAEA,kBAAIf,QAAQ,CAAC,CAAD,CAAR,CAAYmB,WAAZ,IAA2B,IAA/B,EAAqC;AACnC,qBAAKyD,QAAL,GAAgB5E,QAAQ,CAAC,CAAD,CAAR,CAAYmB,WAAZ,CAAwB0D,QAAxB,EAAhB;AACD;;AAGD,mBAAKC,IAAL,GAAY,KAAKjC,WAAL,CAAiBkC,KAAjB,CAAuB;AACjC/D,sCAAsB,EAAE,CAAChB,QAAQ,CAAC,CAAD,CAAR,CAAYgB,sBAAb,CADS;AAEjCC,qCAAqB,EAAE,CAACjB,QAAQ,CAAC,CAAD,CAAR,CAAYiB,qBAAb,EAAoC,CAAC,0DAAW+D,QAAZ,CAApC,CAFU;AAGjC7D,2BAAW,EAAE,CAAC,KAAKyD,QAAL,GAAgB5E,QAAQ,CAAC,CAAD,CAAR,CAAYmB,WAA5B,GAA0C,CAA3C,EAA8C,CAAC,0DAAW6D,QAAZ,CAA9C,CAHoB;AAIjCC,sBAAM,EAAE,KAAKpC,WAAL,CAAiBqC,KAAjB,CAAuB,EAAvB;AAJyB,eAAvB,CAAZ;AAOA,mBAAKC,UAAL,CAAgB,IAAhB,EAAsBnF,QAAtB;AAED,aAjBD,MAiBO;AACL,mBAAK8C,cAAL,CAAoBsC,KAApB;AACA,mBAAKxC,QAAL,CAAcyC,IAAd;AACD;AAEF;AApHkE;AAAA;AAAA,qCA2HxDC,KA3HwD,EA2HxCvE,IA3HwC,EA2H9B;AACnC,gBAAIwE,WAAW,GAAG,CAAlB;;AAGA,gBAAIxE,IAAJ,EAAU;AAACwE,yBAAW,GAAGxE,IAAI,CAACyE,MAAnB;AAA2B;;AAAA;;AAEtC,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAApB,EAAiCE,CAAC,EAAlC,EAAsC;AACpC,mBAAKR,MAAL,CAAYS,IAAZ,CACE,KAAK7C,WAAL,CAAiBkC,KAAjB,CAAuB;AACrB3D,wBAAQ,EAAE,CAAEL,IAAI,GAAGA,IAAI,CAAC0E,CAAD,CAAJ,CAAQrE,QAAX,GAAsB,EAA5B,EAAgC,CAAC,0DAAW4D,QAAZ,CAAhC,CADW;AAErB1D,yBAAS,EAAE,CAACP,IAAI,GAAGA,IAAI,CAAC0E,CAAD,CAAJ,CAAQnE,SAAX,GAAuB,EAA5B,EAAgC,CAAC,0DAAW0D,QAAZ,CAAhC,CAFU;AAGrBW,uBAAO,EAAE,CAAC,EAAD,CAHY;AAIrBnE,0BAAU,EAAE,KAAKqB,WAAL,CAAiBqC,KAAjB,CAAuB,EAAvB;AAJS,eAAvB,CADF;;AASA,kBAAInE,IAAJ,EAAU;AACR,qBAAK,IAAI6E,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG7E,IAAI,CAAC0E,CAAD,CAAJ,CAAQjE,UAAR,CAAmBgE,MAAjD,EAAyDI,MAAM,EAA/D,EAAmE;AACjE,uBAAKC,eAAL,CAAqBP,KAArB,EAA4BvE,IAAI,CAAC0E,CAAD,CAAJ,CAAQjE,UAAR,CAAmBoE,MAAnB,CAA5B,EAAwDH,CAAxD;AACD;AACF;AACF;AACF;AAjJkE;AAAA;AAAA,+CAmJ9C1E,IAnJ8C,EAmJ1C;AACvB,gBAAM+E,aAAa,GAAG/E,IAAI,CAACS,UAA3B;AACA,iBAAKuE,mBAAL,CAAyBD,aAAzB;AACD;AAtJkE;AAAA;AAAA,8CAwJ/C/E,IAxJ+C,EAwJ3C;AACtB,iBAAK8E,eAAL,CAAqB,IAArB,EAA2B9E,IAA3B;AACD;AA1JkE;AAAA;AAAA,wCA4JrDuE,KA5JqD,EA4JtC;AAC3B,mBAAO,KAAKL,MAAL,CAAYe,EAAZ,CAAeV,KAAf,EAAsBW,GAAtB,CAA0B,YAA1B,CAAP;AACD;AA9JkE;AAAA;AAAA,0CAgKnDX,KAhKmD,EAgKnCvE,IAhKmC,EAgKvBwE,WAhKuB,EAgKH;AAC9D,gBAAIW,SAAS,GAAG,CAAhB;AAEA,aAACnF,IAAD,GAAQmF,SAAS,GAAGZ,KAApB,GAA4BY,SAAS,GAAGX,WAAxC;AACE,iBAAKY,aAAL,CAAmBD,SAAnB,EAA8BR,IAA9B,CACE,KAAK7C,WAAL,CAAiBkC,KAAjB,CAAuB;AACrBqB,sBAAQ,EAAErF,IAAI,GAAGA,IAAI,CAACqF,QAAR,GAAmB,IADZ;AAErBC,4BAAc,EAAE,CAACtF,IAAI,GAAGA,IAAI,CAACsF,cAAR,GAAyB,IAA9B,EAAoC,CAAC,0DAAWrB,QAAZ,CAApC,CAFK;AAGrBsB,6BAAe,EAAE,CAACvF,IAAI,GAAGA,IAAI,CAACuF,eAAR,GAA0B,IAA/B,EAAqC,CAAC,0DAAWtB,QAAZ,CAArC,CAHI;AAIrBuB,sBAAQ,EAAE,CAACxF,IAAI,GAAGA,IAAI,CAACwF,QAAR,GAAmB,IAAxB,EAA8B,CAAC,0DAAWvB,QAAZ,CAA9B;AAJW,aAAvB,CADF;AAOD;AA3KgE;AAAA;AAAA,wCA8KrDM,KA9KqD,EA8KrCkB,IA9KqC,EA8KzBC,eA9KyB,EA8KCC,MA9KD,EA8KU;AAAA;;AAC3E,iBAAKC,YAAL,GAAoB,IAApB;AAEA,gBAAIC,KAAK,GAAG,EAAZ;AACA,gBAAIC,MAAM,GAAG,EAAb;;AAEA,gBAAIH,MAAM,IAAI,KAAd,EAAqB;AACnBE,mBAAK,CAAClB,IAAN,CAAWc,IAAX;AACAK,oBAAM,CAACnB,IAAP,CAAYc,IAAZ;AACD,aAHD,MAGO;AACLI,mBAAK,GAAGJ,IAAR;AACAK,oBAAM,GAAGL,IAAT;AACD;;AAEDM,mBAAO,CAACC,GAAR;AAEAD,mBAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,iBAAKI,aAAL,GAAqB3C,SAArB,CAA+B,UAAC4C,QAAD,EAAuB;AACpD,kBAAIA,QAAJ,EAAc;AACZ,oBAAIL,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,IAAqB,IAAzB,EAA+B;AAC7B,wBAAI,CAAC3F,0BAAL,CACGyG,WADH,CACeN,KADf,EAEGO,IAFH,CAGI,gEAAS,YAAM;AACb,0BAAI,CAACR,YAAL,GAAoB,KAApB;AACD,mBAFD,CAHJ,EAOGtC,SAPH,CAOa;AACT+C,wBAAI,EAAE,cAACH,QAAD,EAA4B;AAChC,0BAAIA,QAAQ,CAACnG,OAAb,EAAsB;AACpB;AACA;AACA;AACA,4BAAI4F,MAAM,IAAI,KAAd,EAAqB;AACnB,gCAAI,CAAC5B,IAAL,CAAUmB,GAAV,CAAc,QAAd,EAAwB,UAAxB,EAAoCX,KAApC,EAA2CW,GAA3C,CAA+C,YAA/C,EAA6DoB,KAA7D;;AACA,gCAAI,CAACvC,IAAL,CAAUmB,GAAV,CAAc,QAAd,EAAwB,UAAxB,EAAoCqB,MAApC,CAA2ChC,KAA3C,EAAkD,CAAlD;AACD,yBAHD,MAGO;AACL,gCAAI,CAACR,IAAL,CAAUmB,GAAV,CAAc,QAAd,EAAwB,UAAxB,EAAoCX,KAApC,EAA2CW,GAA3C,CAA+C,YAA/C,EAA6D,UAA7D,EAAyEqB,MAAzE,CAAgFb,eAAhF,EAAiG,CAAjG;AACD;;AAED,4BAAI,MAAI,CAAC3B,IAAL,CAAUmB,GAAV,CAAc,QAAd,EAAwB,UAAxB,EAAoCT,MAApC,GAA6C,CAAjD,EAAoD;AAClD,gCAAI,CAACL,UAAL,CAAgBG,KAAhB;AACD;AAEF,uBAfD,MAeO;AACL,8BAAI,CAACxC,cAAL,CAAoBsC,KAApB;AACD;AACF,qBApBQ;AAqBTA,yBAAK,EAAE,eAACA,MAAD,EAAgB;AACrB,0BACEA,MAAK,CAACA,KAAN,CAAYmC,cAAZ,CAA2B,UAA3B,MACCnC,MAAK,CAACoC,QAAN,KAAmB,IAAnB,IAA2BpC,MAAK,CAACoC,QAAN,KAAmB,EAD/C,CADF,EAGE;AACA,8BAAI,CAAC1E,cAAL,CAAoBsC,KAApB,CAA0BA,MAAK,CAACA,KAAN,CAAYoC,QAAtC;AACD,uBALD,MAKO;AACL,8BAAI,CAAC1E,cAAL,CAAoBsC,KAApB;AACD;AACF;AA9BQ,mBAPb;AAuCC,iBAxCH,MAwCS;AACL;AACA;AACA,sBAAIsB,MAAM,IAAI,KAAd,EAAqB;AACnB,0BAAI,CAAC5B,IAAL,CAAUmB,GAAV,CAAc,QAAd,EAAwB,UAAxB,EAAoCX,KAApC,EAA2CW,GAA3C,CAA+C,YAA/C,EAA6DoB,KAA7D;;AACA,0BAAI,CAACvC,IAAL,CAAUmB,GAAV,CAAc,QAAd,EAAwB,UAAxB,EAAoCqB,MAApC,CAA2ChC,KAA3C,EAAkD,CAAlD;AACD,mBAHD,MAGO;AACL,0BAAI,CAACR,IAAL,CAAUmB,GAAV,CAAc,QAAd,EAAwB,UAAxB,EAAoCX,KAApC,EAA2CW,GAA3C,CAA+C,YAA/C,EAA6D,UAA7D,EAAyEqB,MAAzE,CAAgFb,eAAhF,EAAiG,CAAjG;AACD;AAEF;;AACD,sBAAI,CAACE,YAAL,GAAoB,KAApB;AACD;AACF,aAvDH;AAwDC;AAxPgE;AAAA;AAAA,0CA0PtD;AACX,mBAAO,KAAK1D,mBAAL,CAAyBwE,WAAzB,CACL,QADK,EAEL,oBAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AAlQkE;AAAA;AAAA,6CAoQnD;AACd,iBAAKC,aAAL,GAAqB,KAAK7E,WAAL,CAAiBkC,KAAjB,CAAuB;AAC1C3D,sBAAQ,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAW4D,QAAZ,CAAP,CADgC;AAE1C1D,uBAAS,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAW0D,QAAZ,CAAP,CAF+B;AAG1C2C,yBAAW,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAW3C,QAAZ,CAAP,CAH6B;AAI1C4C,qBAAO,EAAE,CAAC,KAAD;AAJiC,aAAvB,CAArB;AAMD;AA3QkE;AAAA;AAAA,4CA6QpD;AAAA;;AACb,iBAAKnH,0BAAL,CACGwD,eADH,GAEGkD,IAFH,CAGI,gEAAS,YAAM;AACb,oBAAI,CAACjE,gBAAL,GAAwB,KAAxB;AACD,aAFD,CAHJ,EAOGmB,SAPH,CAOa,UAAC4C,QAAD,EAAmB;AAC5B,kBAAIA,QAAQ,CAAC,CAAD,CAAR,CAAYnG,OAAZ,KAAwB,IAA5B,EAAkC;AAChC,sBAAI,CAAC0C,cAAL,GAAsByD,QAAQ,CAAC,CAAD,CAAR,CAAYlG,IAAlC;AACD,eAFD,MAEO;AACL,sBAAI,CAAC+B,cAAL,CAAoBsC,KAApB;;AACA,sBAAI,CAACxC,QAAL,CAAcyC,IAAd;AACD;;AAED,kBAAI4B,QAAQ,CAAC,CAAD,CAAR,CAAYnG,OAAZ,KAAwB,IAA5B,EAAkC;AAChC,sBAAI,CAAC2C,eAAL,GAAuBwD,QAAQ,CAAC,CAAD,CAAR,CAAYlG,IAAnC;AACA,oBAAMkE,MAAM,GAAG,MAAI,CAACH,IAAL,CAAU+C,QAAV,CAAmB,QAAnB,EAA6BC,KAA5C;AAEA7C,sBAAM,CAAC8C,OAAP,CAAe,UAACC,KAAD,EAAQ1C,KAAR,EAAkB;AAC/B,wBAAI,CAAC2C,aAAL,CAAmBD,KAAK,CAAC5G,QAAzB,EAAmCkE,KAAnC;AACD,iBAFD,EAJgC,CAShC;AAED,eAXD,MAWO;AACL,sBAAI,CAACxC,cAAL,CAAoBsC,KAApB;;AACA,sBAAI,CAACxC,QAAL,CAAcyC,IAAd;AACD;AACF,aA9BH;AA+BD;AA7SkE;AAAA;AAAA,wCA+SrDjE,QA/SqD,EA+SnCkE,KA/SmC,EA+SpB;AAC7C,gBAAMK,OAAO,GAAG,KAAKlC,eAAL,CAAqByE,MAArB,CAA4B,UAAAC,MAAM,EAAI;AACpD,qBAAOA,MAAM,CAACC,OAAP,IAAkBhH,QAAzB;AACD,aAFe,CAAhB;AAGA,iBAAKsC,eAAL,CAAqB4B,KAArB,IAA8BK,OAA9B;AAEA,iBAAKjC,eAAL,CAAqB4B,KAArB,EAA4B+C,OAA5B,CAAoC;AAClCC,sBAAQ,EAAE,CADwB;AAElC/G,wBAAU,EAAE;AAFsB,aAApC;AAID;AAzTkE;AAAA;AAAA,qCA4T3D;AAAA;;AACN,gBAAI,KAAKuD,IAAL,CAAUyD,QAAd,EAAwB;AACtB,mBAAK3F,QAAL,CAAcyC,IAAd;AACD,aAFD,MAEO;AAEL,kBAAI,KAAKP,IAAL,CAAU0D,KAAd,EAAqB;AACnB,qBAAK7B,YAAL,GAAoB,IAApB;AACA,qBAAK8B,cAAL,GAAsB,IAAtB;AAEA,qBAAKhI,0BAAL,CACGiI,IADH,CACQ,KAAK5D,IAAL,CAAUgD,KADlB,EAEGX,IAFH,CAGI,gEAAS,YAAM;AACb,wBAAI,CAACR,YAAL,GAAoB,KAApB;AACA,wBAAI,CAAC8B,cAAL,GAAsB,KAAtB;AACD,iBAHD,CAHJ,EAQGpE,SARH,CAQa;AACT+C,sBAAI,EAAE,cAACH,QAAD,EAAmB;AACvB,wBACEA,QAAQ,CAACM,cAAT,CAAwB,UAAxB,KACAN,QAAQ,CAACM,cAAT,CAAwB,SAAxB,CADA,IAEAN,QAAQ,CAACnG,OAAT,KAAqB,IAHvB,EAIE;AACA,4BAAI,CAACgE,IAAL,CAAU6D,KAAV;;AACA,4BAAI,CAACtF,WAAL,GAAmB,KAAnB;;AACA,4BAAI,CAACP,cAAL,CAAoBhC,OAApB,CAA4BmG,QAAQ,CAACO,QAArC;;AAEA,4BAAI,CAAC9E,cAAL,CAAoB/B,MAApB,CAA2B0D,SAA3B,CAAqC,UAAC1D,MAAD,EAAiB;AACpD,4BAAIA,MAAM,CAAC4G,cAAP,CAAsB,IAAtB,CAAJ,EAAiC;AAC/B,gCAAI,CAAC3E,QAAL,CAAcyC,IAAd;AACD,yBAFD,MAEO;AACL,gCAAI,CAAC1C,MAAL,CAAYiG,QAAZ,CAAqB,CAAC,UAAD,CAArB,EAAmC;AACjCC,sCAAU,EAAE,MAAI,CAACnG;AADgB,2BAAnC;AAGD;AACF,uBARD;AASD,qBAlBD,MAkBO,IACLuE,QAAQ,CAACM,cAAT,CAAwB,UAAxB,KACAN,QAAQ,CAACM,cAAT,CAAwB,SAAxB,CADA,IAEAN,QAAQ,CAACnG,OAAT,KAAqB,KAHhB,EAIL;AACA,4BAAI,CAACgC,cAAL,CAAoBgG,MAApB,CAA2B7B,QAAQ,CAACO,QAApC;AACD,qBANM,MAMA;AACL,4BAAI,CAAC1E,cAAL,CAAoBsC,KAApB;AACD;AACF,mBA7BQ;AA8BTA,uBAAK,EAAE,eAACA,OAAD,EAAgB;AACrB,0BAAI,CAACtC,cAAL,CAAoBsC,KAApB;AACD;AAhCQ,iBARb;AA0CD;AACF;AACF;AAjXkE;AAAA;AAAA,qCAmX3D;AACN,iBAAKxC,QAAL,CAAcyC,IAAd;AACD;AArXkE;AAAA;AAAA,oCAuX5D;AACL,iBAAKhC,WAAL,GAAmB,IAAnB;AACD;AAzXkE;AAAA;AAAA,8CA2XlD;AACf,gBAAI,KAAKA,WAAT,EAAsB;AACpB,kBAAI0F,OAAO,CAAC,4CAAD,CAAX,EAA2D;AACzD,uBAAO,IAAP;AACD,eAFD,MAEO;AACL,uBAAO,KAAP;AACD;AACF;;AACD,mBAAO,IAAP;AACD;AApYkE;AAAA;AAAA,iDAsY5CC,SAtY4C,EAsYzB1D,KAtYyB,EAsYV2D,SAtYU,EAsYSC,WAtYT,EAsY8BC,KAtY9B,EAsY6C;AAC9G,gBAAI,KAAKC,wBAAL,CAA8BJ,SAA9B,EAAyC1D,KAAzC,EAAgD2D,SAAhD,EAA2DC,WAA3D,EAAwEC,KAAxE,CAAJ,EAAoF;AAClF,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AA5YkE;AAAA;AAAA,mDA8Y1CH,SA9Y0C,EA8YvB1D,KA9YuB,EA8YR2D,SA9YQ,EA8YWC,WA9YX,EA8YgCC,KA9YhC,EA8Y4C;AAC7G,gBAAIE,eAAe,GAAQ,KAAKvE,IAAL,CAAU+C,QAAV,CAAmBmB,SAAnB,CAA3B;AACA,gBAAIM,oBAAoB,GAAQD,eAAe,CAACxB,QAAhB,CAAyBvC,KAAzB,EAAgCuC,QAAhC,CAAyCoB,SAAzC,CAAhC;AACAE,iBAAK,GAAGG,oBAAoB,CAACzB,QAArB,CAA8BqB,WAA9B,EAA2CjD,GAA3C,CAA+CkD,KAA/C,CAAR;AAEA,mBAAOA,KAAK,CAACI,MAAN,IAAgB,SAAhB,IAA6BJ,KAAK,CAACK,OAA1C;AACD;AApZkE;AAAA;AAAA,oDAsZzCR,SAtZyC,EAsZtB1D,KAtZsB,EAsZP2D,SAtZO,EAsZYC,WAtZZ,EAsZiCC,KAtZjC,EAsZgD;AACjH,gBAAInE,QAAQ,GAAG,KAAf;AACA,gBAAIyE,WAAW,GAAG,IAAI,0DAAJ,EAAlB;AACA,gBAAIJ,eAAe,GAAQ,KAAKvE,IAAL,CAAU+C,QAAV,CAAmBmB,SAAnB,CAA3B;AACA,gBAAIM,oBAAoB,GAAQD,eAAe,CAACxB,QAAhB,CAAyBvC,KAAzB,EAAgCuC,QAAhC,CAAyCoB,SAAzC,CAAhC;;AAEA,gBAAIK,oBAAoB,CAACzB,QAArB,CAA8BqB,WAA9B,EAA2CjD,GAA3C,CAA+CkD,KAA/C,EAAsDO,SAA1D,EAAqE;AACnE,kBAAIC,gBAAgB,GAAGL,oBAAoB,CAACzB,QAArB,CAA8BqB,WAA9B,EACpBjD,GADoB,CAChBkD,KADgB,EAEpBO,SAFoB,CAEVD,WAFU,CAAvB;AAGAzE,sBAAQ,GACN2E,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAAC3E,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AAvakE;AAAA;AAAA,6CAyahDgE,SAzagD,EAya7B1D,KAza6B,EAyad6D,KAzac,EAyaC;AAClE,gBAAI,KAAKS,oBAAL,CAA0BZ,SAA1B,EAAqC1D,KAArC,EAA4C6D,KAA5C,CAAJ,EAAwD;AACtD,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AA/akE;AAAA;AAAA,+CAib9CH,SAjb8C,EAib3B1D,KAjb2B,EAibZ6D,KAjbY,EAibA;AACjE,gBAAIU,UAAU,GAAQ,KAAK/E,IAAL,CAAU+C,QAAV,CAAmBmB,SAAnB,CAAtB;AACAG,iBAAK,GAAGU,UAAU,CAAChC,QAAX,CAAoBvC,KAApB,EAA2BW,GAA3B,CAA+BkD,KAA/B,CAAR;AAEA,mBAAOA,KAAK,CAACI,MAAN,IAAgB,SAAhB,IAA6BJ,KAAK,CAACK,OAA1C;AACD;AAtbkE;AAAA;AAAA,gDAwb7CR,SAxb6C,EAwb1B1D,KAxb0B,EAwbX6D,KAxbW,EAwbI;AACrE,gBAAInE,QAAQ,GAAG,KAAf;AACA,gBAAIyE,WAAW,GAAG,IAAI,0DAAJ,EAAlB;AACA,gBAAII,UAAU,GAAQ,KAAK/E,IAAL,CAAU+C,QAAV,CAAmBmB,SAAnB,CAAtB;;AAEA,gBAAIa,UAAU,CAAChC,QAAX,CAAoBvC,KAApB,EAA2BW,GAA3B,CAA+BkD,KAA/B,EAAsCO,SAA1C,EAAqD;AACnD,kBAAIC,gBAAgB,GAAGE,UAAU,CAAChC,QAAX,CAAoBvC,KAApB,EACpBW,GADoB,CAChBkD,KADgB,EAEpBO,SAFoB,CAEVD,WAFU,CAAvB;AAGAzE,sBAAQ,GACN2E,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAAC3E,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AAxckE;AAAA;AAAA,uCA0ctDmE,KA1csD,EA0czC;AACxB,gBAAI,KAAKW,cAAL,CAAoBX,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AAhdkE;AAAA;AAAA,yCAkdpDA,KAldoD,EAkd1C;AACvBA,iBAAK,GAAG,KAAKrE,IAAL,CAAUmB,GAAV,CAAckD,KAAd,CAAR;AAEA,mBAAOA,KAAK,CAACI,MAAN,IAAgB,SAAhB,IAA6BJ,KAAK,CAACK,OAA1C;AACD;AAtdkE;AAAA;AAAA,0CAydjEO,eAzdiE,EA0djEC,oBA1diE,EA0dpC;AAE7B,gBAAID,eAAe,CAACL,SAApB,EAA+B;AAC7B,kBAAMA,SAAS,GAAGK,eAAe,CAACL,SAAhB,CAA0B,EAA1B,CAAlB;;AACA,kBAAIA,SAAS,IAAIA,SAAS,CAAC1E,QAA3B,EAAqC;AACnC,uBAAO,aAAP;AACD;AACF;;AAED,gBAAIgF,oBAAJ,EAA0B;AACxB,mBAAK,IAAMC,WAAX,IAA0BF,eAAe,CAAC,UAAD,CAAzC,EAAuD;AACrD,oBAAIA,eAAe,CAAC,UAAD,CAAf,CAA4BE,WAA5B,CAAJ,EAA8C;AAC5C,sBACE,KAAKC,eAAL,CAAqBH,eAAe,CAAC,UAAD,CAAf,CAA4BE,WAA5B,CAArB,KACAA,WAAW,IAAID,oBAFjB,EAGE;AACA,2BAAO,aAAP;AACD;AACF;AACF;AACF;;AAED,mBAAO,EAAP;AACD;AAjfkE;AAAA;AAAA,8BAuHzD;AACR,mBAAO,KAAKlF,IAAL,CAAUmB,GAAV,CAAc,QAAd,CAAP;AACD;AAzHkE;;AAAA;AAAA,S;;;;gBAhC5D;;gBAAgB;;gBAEhB;;gBAGP;;gBAoBO;;gBAPA;;gBACA;;gBACA;;gBAnBA;;;;AA+BIxD,8DAAwD,6DALpE,gEAAU;AACT0H,gBAAQ,EAAE,qDADD;AAETC,gBAAQ,EAAR,6EAFS;;AAAA,OAAV,CAKoE,E,+EAqCzC,8D,EACR,sD,EACE,wD,EACG,0D,EACe,2G,EACZ,2F,EACG,sG,EACL,wF,EACO,uG,EA7CoC,GAAxD3H,wDAAwD,CAAxD;;;;;;;;;;;;;;;;ACnCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaF4H,gBAAgB;AAG3B,kCAAsBC,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAC,GAAA;AAEyB;;AAHf;AAAA;AAAA,sCAKf5J,MALe,EAKH;AACtB,gBAAI6J,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkB9J,MAAlB,EAA0B;AACxB6J,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyB9J,MAAM,CAAC8J,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKH,IAAL,CACJrE,GADI,WACG,KAAKsE,GADR,gBACwB;AAC3B5J,oBAAM,EAAE6J;AADmB,aADxB,EAIJrD,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AAjB0B;AAAA;AAAA,uCAmBdxG,MAnBc,EAmBH;AACtB,gBAAI6J,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkB9J,MAAlB,EAA0B;AACxB6J,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyB9J,MAAM,CAAC8J,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKH,IAAL,CACJrE,GADI,WACG,KAAKsE,GADR,iBACyB;AAC5B5J,oBAAM,EAAE6J;AADoB,aADzB,EAIJrD,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AA/B0B;AAAA;AAAA,oCAiCjBxG,MAjCiB,EAiCN;AACnB,gBAAI6J,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkB9J,MAAlB,EAA0B;AACxB6J,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyB9J,MAAM,CAAC8J,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKH,IAAL,CACJrE,GADI,WACG,KAAKsE,GADR,cACsB;AACzB5J,oBAAM,EAAE6J;AADiB,aADtB,EAIJrD,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AA7C0B;AAAA;AAAA,qCA+ChBxG,MA/CgB,EA+CL;AACpB,gBAAI6J,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkB9J,MAAlB,EAA0B;AACxB6J,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyB9J,MAAM,CAAC8J,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKH,IAAL,CACJrE,GADI,WACG,KAAKsE,GADR,eACuB;AAC1B5J,oBAAM,EAAE6J;AADkB,aADvB,EAIJrD,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AA3D0B;AAAA;AAAA,yCA6DE;AAAA,gBAAhBxG,MAAgB,uEAAF,EAAE;AAC3B,gBAAI6J,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkB9J,MAAlB,EAA0B;AACxB6J,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyB9J,MAAM,CAAC8J,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKH,IAAL,CACJrE,GADI,WACG,KAAKsE,GADR,iBACyB;AAAE5J,oBAAM,EAAE6J;AAAV,aADzB,EAEJrD,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAvE0B;AAAA;AAAA,sCAyElB;AACP,mBAAO,KAAKmD,IAAL,CAAUrE,GAAV,WAAiB,KAAKsE,GAAtB,cAAoCpD,IAApC,CAAyC,4DAAK,CAAL,CAAzC,EAAkD,6DAAM,CAAN,CAAlD,CAAP;AACD;AA3E0B;AAAA;AAAA,2CA6Eb;AACZ,mBAAO,KAAKmD,IAAL,CAAUrE,GAAV,WAAiB,KAAKsE,GAAtB,mBAAyCpD,IAAzC,CAA8C,4DAAK,CAAL,CAA9C,EAAuD,6DAAM,CAAN,CAAvD,CAAP;AACD;AA/E0B;;AAAA;AAAA,S;;;;gBAZpB;;;;AAYIkD,sBAAgB,6DAH5B,iEAAW;AACV5I,kBAAU,EAAE;AADF,OAAX,CAG4B,E,+EAGC,+D,EAHD,GAAhB4I,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCTb;AAIA;AAGA;AAIA;AAGA;AAGA;AAKA;;;UAyBaM,2CAA2C;AAAA;AAAA,O;;AAA3CA,iDAA2C,6DArBvD,+DAAS;AACRC,oBAAY,EAAE,CACZ,2GADY,EAEZ,0HAFY,CADN;AAKRvK,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0EAAiBwK,OAAjB,EAJO,EAKP,oEAAcA,OAAd,EALO,EAMP,mEANO,EAOP,iEAPO,EAQP,oEARO,EASP,kDATO,EAUP,8HAVO,EAWP,kFAXO,EAYP,0FAZO,CALD;AAmBRC,iBAAS,EAAE,CAAC,4FAAD;AAnBH,OAAT,CAqBuD,GAA3CH,2CAA2C,CAA3C;;;;;;;;;;;;;;;;ACnDb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeFI,mBAAmB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAE5BjL,SAF4B,EAG5BY,KAH4B,EAI5BsK,KAJ4B,EAIF;AAM1B,mBAAOlL,SAAS,CAACmL,iBAAV,EAAP;AACD;AAX6B;;AAAA;AAAA,S;;AAAnBF,yBAAmB,6DAH/B,iEAAW;AACVtJ,kBAAU,EAAE;AADF,OAAX,CAG+B,GAAnBsJ,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCQb;;;UAsBaG,mDAAmD;AAqD9D,qEACUxI,cADV,EAEUC,MAFV,EAGUC,QAHV,EAIUC,WAJV,EAKUpC,0BALV,EAMUqC,cANV,EAOUC,iBAPV,EAQUC,YARV,EASUC,mBATV,EAUUkI,kBAVV,EAWUC,gBAXV,EAW4C;AAAA;;AAVlC,eAAA1I,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAApC,0BAAA,GAAAA,0BAAA;AACA,eAAAqC,cAAA,GAAAA,cAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AACA,eAAAkI,kBAAA,GAAAA,kBAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AA7DV,eAAAzE,YAAA,GAAe,KAAf;AACA,eAAAzD,gBAAA,GAAmB,IAAnB;AAEA,eAAAC,cAAA,GAAoC,EAApC;AAEA,eAAAkI,SAAA,GAA8B,CAC5B;AACEzK,cAAE,EAAE,CADN;AAEE0K,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACE3K,cAAE,EAAE,CADN;AAEE0K,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA,eAAAC,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C;AAOA,eAAAC,eAAA,GAAkB,KAAlB;AAIA,eAAAC,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,WAAA,GAAc,CAAd;AACA,eAAAC,UAAA,GAAa,CAAb;AAEA,eAAAnF,KAAA,GAAoC,EAApC;AACA,eAAAoF,eAAA,GAA8C,EAA9C;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,MAAA,GAAiB,CAAjB;AAGA,eAAAC,SAAA,GAAwB,EAAxB;AAEA,eAAAC,iBAAA,GAAgD;AAC9CxI,uBAAW,EAAE,KADiC;AAE9CC,sBAAU,EAAE;AAFkC,WAAhD;AAkBE,eAAKhB,cAAL,CAAoBkB,UAApB;AACD;;AAnE6D;AAAA;AAAA,qCAqEtD;AACN,iBAAKE,eAAL;AACA,iBAAKC,aAAL;AACA,iBAAKmI,aAAL;AACA,iBAAKtJ,YAAL,CAAkBuB,QAAlB,CAA2B,yBAA3B;AACA,iBAAKgI,oBAAL;AACA,iBAAKC,iCAAL;AACD;AA5E6D;AAAA;AAAA,wCA8EnD;AACT,iBAAKC,2BAAL,CAAiCC,WAAjC;AACD;AAhF6D;AAAA;AAAA,4CAkF/C;AACb,iBAAK3J,iBAAL,CAAuBmB,eAAvB,GAAyCG,SAAzC;AACD;AApF6D;AAAA;AAAA,0CAsFjD;AAAA;;AACX,iBAAK3B,cAAL,CAAoB/B,MAApB,CAA2B0D,SAA3B,CAAqC,UAAC1D,MAAD,EAAiB;AACpD,oBAAI,CAACwC,cAAL,GAAsB,CACpB;AACEqB,yBAAS,EAAE,MADb;AAEEC,0BAAU,EAAE;AAFd,eADoB,EAKpB;AACED,yBAAS,EAAE,WADb;AAEEC,0BAAU,iCAA0B9D,MAAM,CAAC,aAAD,CAAhC;AAFZ,eALoB,EASpB;AACE6D,yBAAS,EAAE;AADb,eAToB,CAAtB;AAaD,aAdD;AAeD;AAtG6D;AAAA;AAAA,iDAwG1C;AAAA;;AAClB,iBAAKiI,2BAAL,GAAmC,KAAKtB,kBAAL,CAAwBwB,MAAxB,CAA+BtI,SAA/B,CACjC,UAACuI,KAAD,EAAgB;AACd,oBAAI,CAAClB,eAAL,GAAuBkB,KAAK,CAACC,OAA7B;AACD,aAHgC,CAAnC;AAKD;AA9G6D;AAAA;AAAA,0CAgHjD;AACX,gBAAMC,SAAS,GAAQ,KAAKC,iBAAL,EAAvB;AAEA,iBAAKjI,IAAL,GAAY,KAAKjC,WAAL,CAAiBkC,KAAjB,CAAuB;AACjCiI,oCAAsB,EAAE,CAACF,SAAS,CAACE,sBAAX,CADS;AAEjCC,qCAAuB,EAAE,CAACH,SAAS,CAACG,uBAAX,CAFQ;AAGjC9L,yBAAW,EAAE,CAAC2L,SAAS,CAAC3L,WAAX,CAHoB;AAIjC+L,qBAAO,EAAE,CAACJ,SAAS,CAACI,OAAX,CAJwB;AAKjCvB,uBAAS,EAAE,CAACmB,SAAS,CAACnB,SAAX,CALsB;AAMjCwB,oBAAM,EAAE,CAACL,SAAS,CAACK,MAAX,CANyB;AAOjCC,uBAAS,EAAE,CAACN,SAAS,CAACM,SAAX,EAAsB,0DAAWpI,QAAjC;AAPsB,aAAvB,CAAZ;AAUA,iBAAKqI,UAAL;AACA,iBAAKnK,gBAAL,GAAwB,KAAxB;AACD;AA/H6D;AAAA;AAAA,8CAiI7C;AAAA;;AACf,gBAAI4J,SAAS,GAAG;AACdE,oCAAsB,EAAE,IADV;AAEd7L,yBAAW,EAAE,CAFC;AAGd+L,qBAAO,EAAE,KAAKA,OAHA;AAIdvB,uBAAS,EAAE,KAAKA,SAJF;AAKdwB,oBAAM,EAAE,CALM;AAMdC,uBAAS,EAAE,KAAKvB;AANF,aAAhB;AASA,iBAAKyB,0BAAL,GAAkC,KAAK5K,cAAL,CAAoB6K,WAApB,CAAgClJ,SAAhC,CAChC,UAACkJ,WAAD,EAAsB;AACpB,kBAAIC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyB/H,MAAzB,GAAkC,CAAtC,EAAyC;AACvC,oBAAI7E,MAAM,GAAG+M,IAAI,CAACH,WAAW,CAAC,GAAD,CAAZ,CAAjB;AACA5M,sBAAM,GAAGgN,IAAI,CAACC,KAAL,CAAWjN,MAAX,CAAT;;AACA,sBAAI,CAACkN,MAAL,CAAYlN,MAAZ;;AAEA6M,sBAAM,CAACC,IAAP,CAAYX,SAAZ,EAAuB/E,OAAvB,CAA+B,UAAA+F,OAAO,EAAI;AACxCN,wBAAM,CAACC,IAAP,CAAY9M,MAAZ,EAAoBoH,OAApB,CAA4B,UAAAgG,QAAQ,EAAI;AACtC,wBACED,OAAO,IAAIC,QAAX,IACAjB,SAAS,CAACgB,OAAD,CAAT,IAAsBnN,MAAM,CAACoN,QAAD,CAF9B,EAGE;AACA,0BAAI,CAACC,KAAK,CAACC,MAAM,CAACtN,MAAM,CAACoN,QAAD,CAAP,CAAP,CAAV,EAAsC;AACpCjB,iCAAS,CAACgB,OAAD,CAAT,GAAqBG,MAAM,CAACtN,MAAM,CAACoN,QAAD,CAAP,CAA3B;AACD,uBAFD,MAEO;AACLjB,iCAAS,CAACgB,OAAD,CAAT,GAAqBnN,MAAM,CAACoN,QAAD,CAA3B;AACD;AACF;AACF,mBAXD;AAYD,iBAbD;AAcD;AACF,aAtB+B,CAAlC;AAwBA,iBAAKT,0BAAL,CAAgCZ,WAAhC;AAEA,mBAAOI,SAAP;AACD;AAtK6D;AAAA;AAAA,uCAwKpD;AACR,gBAAI,KAAKhI,IAAL,CAAUgD,KAAV,CAAgBoF,OAAhB,KAA4B,KAAKA,OAArC,EAA8C;AAC5C,mBAAKA,OAAL,GAAe,KAAKpI,IAAL,CAAUgD,KAAV,CAAgBoF,OAA/B;AACD;;AAED,gBAAI,KAAKpI,IAAL,CAAUgD,KAAV,CAAgB6D,SAAhB,KAA8B,KAAKA,SAAvC,EAAkD;AAChD,mBAAKA,SAAL,GAAiB,KAAK7G,IAAL,CAAUgD,KAAV,CAAgB6D,SAAjC;AACD;AACF;AAhL6D;AAAA;AAAA,8DAkL7B;AAC/B,iBAAKuC,8BAAL,GAAsC;AACpClN,oCAAsB,EAAE,IADY;AAEpCgM,oCAAsB,EAAE,IAFY;AAGpC7L,yBAAW,EAAE,IAHuB;AAIpCD,2BAAa,EAAE,IAJqB;AAKpC0D,sBAAQ,EAAE,IAL0B;AAMpCuJ,wBAAU,EAAE,IANwB;AAOpCC,yBAAW,EAAE,IAPuB;AAQpCC,0BAAY,EAAE,IARsB;AASpCpJ,oBAAM,EAAE;AAT4B,aAAtC;AAWD;AA9L6D;AAAA;AAAA,uCAgMjDkE,KAhMiD,EAgMpC;AACxB,gBAAI,KAAKW,cAAL,CAAoBX,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AAtM6D;AAAA;AAAA,yCAwM/CA,KAxM+C,EAwMrC;AACvBA,iBAAK,GAAG,KAAKrE,IAAL,CAAUmB,GAAV,CAAckD,KAAd,CAAR;AAEA,mBAAOA,KAAK,CAACI,MAAN,IAAgB,SAAhB,IAA6BJ,KAAK,CAACK,OAA1C;AACD;AA5M6D;AAAA;AAAA,0CA+M5DO,eA/M4D,EAgN5DC,oBAhN4D,EAgN/B;AAE7B,gBAAID,eAAe,CAACL,SAApB,EAA+B;AAC7B,kBAAMA,SAAS,GAAGK,eAAe,CAACL,SAAhB,CAA0B,EAA1B,CAAlB;;AACA,kBAAIA,SAAS,IAAIA,SAAS,CAAC1E,QAA3B,EAAqC;AACnC,uBAAO,aAAP;AACD;AACF;;AAED,gBAAIgF,oBAAJ,EAA0B;AACxB,mBAAK,IAAMC,WAAX,IAA0BF,eAAe,CAAC,UAAD,CAAzC,EAAuD;AACrD,oBAAIA,eAAe,CAAC,UAAD,CAAf,CAA4BE,WAA5B,CAAJ,EAA8C;AAC5C,sBACE,KAAKC,eAAL,CAAqBH,eAAe,CAAC,UAAD,CAAf,CAA4BE,WAA5B,CAArB,KACAA,WAAW,IAAID,oBAFjB,EAGE;AACA,2BAAO,aAAP;AACD;AACF;AACF;AACF;;AAED,mBAAO,EAAP;AACD;AAvO6D;AAAA;AAAA,qCAyOnDsE,MAzOmD,EAyOrC;AACvB,gBAAI,KAAKpB,OAAL,KAAiBoB,MAArB,EAA6B;AAC3B,kBAAI,KAAK3C,SAAL,IAAkB,MAAtB,EAA8B;AAC5B,qBAAKA,SAAL,GAAiB,KAAjB;AACD,eAFD,MAEO,IAAI,KAAKA,SAAL,IAAkB,KAAtB,EAA6B;AAClC,qBAAKA,SAAL,GAAiB,MAAjB;AACD;AACF,aAND,MAMO;AACL,mBAAKuB,OAAL,GAAeoB,MAAf;AACA,mBAAK3C,SAAL,GAAiB,KAAjB;AACD;;AAED,iBAAK7G,IAAL,CAAUgD,KAAV,CAAgBoF,OAAhB,GAA0B,KAAKA,OAA/B;AACA,iBAAKpI,IAAL,CAAUgD,KAAV,CAAgB6D,SAAhB,GAA4B,KAAKA,SAAjC;AAEA,iBAAK4C,QAAL;AACD;AAzP6D;AAAA;AAAA,qCA2PtD;AACN,gBAAI,KAAKzJ,IAAL,CAAU0D,KAAd,EAAqB;AACnB,mBAAKqD,YAAL,GAAoB,KAAK/G,IAAL,CAAUgD,KAAV,CAAgBsF,SAApC;AACA,mBAAKtB,WAAL,GAAmB,CAAnB;AACA,mBAAK0C,eAAL,CAAqB,KAAKC,cAAL,EAArB;AACD;AACF;AAjQ6D;AAAA;AAAA,0CAmQ9C9N,MAnQ8C,EAmQnC;AACzB,iBAAKgC,MAAL,CAAYiG,QAAZ,CAAqB,EAArB,EAAyB;AACvBC,wBAAU,EAAE,KAAKnG,cADM;AAEvB6K,yBAAW,EAAE;AAAEmB,iBAAC,EAAEC,IAAI,CAAChB,IAAI,CAACiB,SAAL,CAAejO,MAAf,CAAD;AAAT;AAFU,aAAzB;AAIA,iBAAKkN,MAAL,CAAYlN,MAAZ;AACD;AAzQ6D;AAAA;AAAA,2CA2QhD;AACZ,gBAAIA,MAAM,GAAQ,EAAlB;;AAEA,gBAAI,KAAKmE,IAAL,CAAUgD,KAAV,CAAgBkF,sBAApB,EAA4C;AAC1CrM,oBAAM,CAACqM,sBAAP,GAAgC,KAAKlI,IAAL,CAAUgD,KAAV,CAAgBkF,sBAAhD;AACD;;AAED,gBAAI,KAAKlI,IAAL,CAAUgD,KAAV,CAAgB3G,WAApB,EAAiC;AAC/BR,oBAAM,CAACQ,WAAP,GAAqB,KAAK2D,IAAL,CAAUgD,KAAV,CAAgB3G,WAArC;AACD;;AAEDR,kBAAM,CAACuM,OAAP,GAAiB,KAAKpI,IAAL,CAAUgD,KAAV,CAAgBoF,OAAjC;AACAvM,kBAAM,CAACgL,SAAP,GAAmB,KAAK7G,IAAL,CAAUgD,KAAV,CAAgB6D,SAAnC;AAEA,mBAAOhL,MAAP;AACD;AA1R6D;AAAA;AAAA,iCA4RvDA,MA5RuD,EA4R5C;AAAA;;AAChB,iBAAKgG,YAAL,GAAoB,IAApB;AACA,iBAAKC,KAAL,GAAa,EAAb;AACA,iBAAKoF,eAAL,GAAuB,EAAvB;AACA,iBAAKC,WAAL,GAAmB,KAAnB;AACA,iBAAKC,UAAL,GAAkB,KAAlB;AACA,iBAAKf,kBAAL,CAAwB0D,IAAxB;AAEA,iBAAKpO,0BAAL,CACGqO,sBADH,CAC0BnO,MAD1B,EAEGwG,IAFH,CAGI,gEAAS,YAAM;AACb,oBAAI,CAACR,YAAL,GAAoB,KAApB;AACA,oBAAI,CAACsF,WAAL,GAAmB,IAAnB;AACD,aAHD,CAHJ,EAQG5H,SARH,CAQa;AACT+C,kBAAI,EAAE,cAACH,QAAD,EAAmB;AACvB,oBAAIA,QAAQ,CAACM,cAAT,CAAwB,SAAxB,KAAsCN,QAAQ,CAACnG,OAAT,KAAqB,IAA/D,EAAqE;AACnE,wBAAI,CAAC8F,KAAL,GAAaK,QAAQ,CAAClG,IAAtB;AACA,wBAAI,CAACiL,eAAL,GAAuB,MAAI,CAACpF,KAAL,CAAWmI,KAAX,CAAiB,CAAjB,EAAoB,MAAI,CAAClD,YAAzB,CAAvB;AAEA,wBAAI,CAACE,UAAL,GAAkB,MAAI,CAACnF,KAAL,CAAWpB,MAA7B;AACA,wBAAI,CAACyG,WAAL,GAAmB,IAAnB;AACD,iBAND,MAMO,IACLhF,QAAQ,CAACM,cAAT,CAAwB,SAAxB,KACAN,QAAQ,CAACnG,OAAT,KAAqB,KAFhB,EAGL;AACA,wBAAI,CAACoL,UAAL,GAAkB,IAAlB;AACD,iBALM,MAKA;AACL,wBAAI,CAACpJ,cAAL,CAAoBsC,KAApB;;AACA,wBAAI,CAAC8G,UAAL,GAAkB,IAAlB;AACD;AACF,eAjBQ;AAkBT9G,mBAAK,EAAE,eAACA,OAAD,EAAgB;AACrB,sBAAI,CAAC8G,UAAL,GAAkB,IAAlB;;AAEA,oBAAI9G,OAAK,CAACA,KAAN,CAAYmC,cAAZ,CAA2B,UAA3B,CAAJ,EAA4C;AAC1C,wBAAI,CAACzE,cAAL,CAAoBsC,KAApB,CAA0BA,OAAK,CAACA,KAAN,CAAYoC,QAAtC;AACD,iBAFD,MAEO;AACL,wBAAI,CAAC1E,cAAL,CAAoBsC,KAApB;AACD;AACF;AA1BQ,aARb;AAoCD;AAxU6D;AAAA;AAAA,4CA0U5C4J,WA1U4C,EA0UpB;AACxC,gBAAIC,WAAJ;;AAEA,gBAAID,WAAW,CAAC7N,WAAZ,KAA4B,CAAhC,EAAmC;AACjC8N,yBAAW,GAAG,gBAAd;AACD,aAFD,MAEO,IAAID,WAAW,CAAC7N,WAAZ,KAA4B,CAAhC,EAAmC;AACxC8N,yBAAW,GAAG,eAAd;AACD;;AAED,mBAAOA,WAAP;AACD;AApV6D;AAAA;AAAA,wCAsVhDrC,KAtVgD,EAsVzB;AACnC,gBAAMsC,SAAS,GAAG,CAACtC,KAAK,CAACuC,IAAN,GAAa,CAAd,IAAmBvC,KAAK,CAACf,YAA3C;AACA,gBAAMuD,OAAO,GAAGxC,KAAK,CAACuC,IAAN,GAAavC,KAAK,CAACf,YAAnC;AACA,iBAAKG,eAAL,GAAuB,KAAKpF,KAAL,CAAWmI,KAAX,CAAiBG,SAAjB,EAA4BE,OAA5B,CAAvB;AAEA,iBAAKC,cAAL,CAAoBC,aAApB,CAAkCC,cAAlC,CAAiD;AAC/CC,sBAAQ,EAAE;AADqC,aAAjD;AAGD;AA9V6D;AAAA;AAAA,oCAgWpDC,mBAhWoD,EAgWZ;AAAA;;AAChD,iBAAK9I,YAAL,GAAoB,IAApB;AACA,iBAAKwE,kBAAL,CAAwBjJ,IAAxB;AACA,iBAAKkK,SAAL,GAAiB,EAAjB;AAEA,iBAAK3L,0BAAL,CACGiP,4BADH,CACgCD,mBAAmB,CAACzO,sBADpD,EAEGmG,IAFH,CAGI,gEAAS,YAAM;AAEbwI,wBAAU,CAAC,YAAM;AACf,sBAAI,CAAChJ,YAAL,GAAoB,KAApB;AACD,eAFS,EAEP,GAFO,CAAV;AAGD,aALD,CAHJ,EAUGtC,SAVH,CAUa;AACT+C,kBAAI,EAAE,cAACH,QAAD,EAAmB;AACvB,oBAAIA,QAAQ,CAACM,cAAT,CAAwB,SAAxB,KAAsCN,QAAQ,CAACnG,OAAT,KAAqB,IAA/D,EAAqE;AACnE,wBAAI,CAACqK,kBAAL,CAAwByE,cAAxB,CAAuC,KAAvC;;AACA,wBAAI,CAACxD,SAAL,GAAiBnF,QAAQ,CAAClG,IAA1B;AACA,wBAAI,CAACoL,MAAL,GAAc,MAAI,CAACC,SAAL,CAAe,CAAf,EAAkBpL,sBAAhC;AAED,iBALD,MAKO;AACL,wBAAI,CAACmK,kBAAL,CAAwByE,cAAxB,CAAuC,IAAvC;;AACA,wBAAI,CAAC9M,cAAL,CAAoBsC,KAApB;AAED;AACF,eAZQ;AAaTA,mBAAK,EAAE,eAACA,OAAD,EAAgB;AACrB,sBAAI,CAAC+F,kBAAL,CAAwByE,cAAxB,CAAuC,IAAvC;;AAEA,oBAAIxK,OAAK,CAACA,KAAN,CAAYmC,cAAZ,CAA2B,UAA3B,CAAJ,EAA4C;AAC1C,wBAAI,CAACzE,cAAL,CAAoBsC,KAApB,CAA0BA,OAAK,CAACA,KAAN,CAAYoC,QAAtC;AACD,iBAFD,MAEO;AACL,wBAAI,CAAC1E,cAAL,CAAoBsC,KAApB;AACD;AACF;AArBQ,aAVb;AAmCD;AAxY6D;AAAA;AAAA,iCA0YvDqK,mBA1YuD,EA0Yf;AAC7C,iBAAK9M,MAAL,CAAYiG,QAAZ,CAAqB,CAAC,WAAD,EAAc6G,mBAAmB,CAACzO,sBAAlC,CAArB,EAAgF;AAC9E6H,wBAAU,EAAE,KAAKnG;AAD6D,aAAhF;AAGD;AA9Y6D;AAAA;AAAA,qCAgZnD4C,KAhZmD,EAgZpCmK,mBAhZoC,EAgZI;AAAA;;AAChE,iBAAKI,eAAL,GACGC,YADH,GAEG3I,IAFH,CAGI,4DAAK,CAAL,CAHJ,EAII,iEAAU,UAAA4I,MAAM;AAAA,qBACdA,MAAM,GAAG,OAAI,CAACC,2BAAL,CAAiC1K,KAAjC,EAAwCmK,mBAAxC,CAAH,GAAkE,0CAD1D;AAAA,aAAhB,CAJJ,EAOI,gEAAS,YAAM;AACb,qBAAI,CAAC9I,YAAL,GAAoB,KAApB;AACD,aAFD,CAPJ,EAWGtC,SAXH,CAYI,UAACvD,OAAD,EAAkB;AAChB,qBAAI,CAACgC,cAAL,CAAoBhC,OAApB;;AACA,qBAAI,CAACmP,eAAL,CAAqBR,mBAArB;AACD,aAfL,EAgBI,UAACrK,KAAD,EAAgB;AACd,qBAAI,CAACtC,cAAL,CAAoBsC,KAApB;;AACA,qBAAI,CAAC4G,eAAL,CAAqB1G,KAArB,EAA4BnE,WAA5B,GAA0C,CAA1C;AACD,aAnBL;AAqBD;AAta6D;AAAA;AAAA,4CAwa/C;AACb,mBAAO,KAAK8B,mBAAL,CAAyBwE,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AAhb6D;AAAA;AAAA,sDAmb5DnC,KAnb4D,EAob5DmK,mBApb4D,EAobpB;AAExC,iBAAK9I,YAAL,GAAoB,IAApB;AACA,iBAAKqF,eAAL,CAAqB1G,KAArB,EAA4BnE,WAA5B,GAA0C,CAA1C;AAEA,mBAAO,KAAKV,0BAAL,CAAgCuP,2BAAhC,CACLP,mBAAmB,CAACzO,sBADf,CAAP;AAGD;AA5b6D;AAAA;AAAA,uCA8bjDsE,KA9biD,EA8blCmK,mBA9bkC,EA8bM;AAAA;;AAClE,iBAAKS,eAAL,GACGJ,YADH,GAEG3I,IAFH,CAGI,4DAAK,CAAL,CAHJ,EAII,iEAAU,UAAA4I,MAAM;AAAA,qBACdA,MAAM,GAAG,OAAI,CAACI,6BAAL,CAAmC7K,KAAnC,EAA0CmK,mBAA1C,CAAH,GAAoE,0CAD5D;AAAA,aAAhB,CAJJ,EAOI,gEAAS,YAAM;AACb,qBAAI,CAAC9I,YAAL,GAAoB,KAApB;AACD,aAFD,CAPJ,EAWGtC,SAXH,CAYI,UAACvD,OAAD,EAAkB;AAChB,qBAAI,CAACgC,cAAL,CAAoBhC,OAApB;;AACA,qBAAI,CAACmP,eAAL,CAAqBR,mBAArB;AACD,aAfL,EAgBI,UAACrK,KAAD,EAAgB;AACd,qBAAI,CAACtC,cAAL,CAAoBsC,KAApB;;AACA,qBAAI,CAAC4G,eAAL,CAAqB1G,KAArB,EAA4BnE,WAA5B,GAA0C,CAA1C;AACD,aAnBL;AAqBD;AApd6D;AAAA;AAAA,4CAsd/C;AACb,mBAAO,KAAK8B,mBAAL,CAAyBwE,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AA9d6D;AAAA;AAAA,wDAie5DnC,KAje4D,EAke5DmK,mBAle4D,EAkepB;AAExC,iBAAK9I,YAAL,GAAoB,IAApB;AAEA,iBAAKqF,eAAL,CAAqB1G,KAArB,EAA4BnE,WAA5B,GAA0C,CAA1C;AAEA,mBAAO,KAAKV,0BAAL,CAAgC0P,6BAAhC,CACLV,mBAAmB,CAACzO,sBADf,CAAP;AAGD;AA3e6D;AAAA;AAAA,0CA6e9CyO,mBA7e8C,EA6eN;AACtD,iBAAK,IAAIhK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKmB,KAAL,CAAWpB,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAC1C,kBAAIgK,mBAAmB,CAACzO,sBAApB,KAA+C,KAAK4F,KAAL,CAAWnB,CAAX,EAAczE,sBAAjE,EAAyF;AACvF,qBAAK4F,KAAL,CAAWnB,CAAX,EAActE,WAAd,GAA4BsO,mBAAmB,CAACtO,WAAhD;AACA;AACD;AACF;AACF;AApf6D;;AAAA;AAAA,S;;;;gBApCvD;;gBAAgB;;gBAChB;;gBAGP;;gBAyBO;;gBAbA;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;;;;;gBAgBN,uD;AAAS,iBAAC,gBAAD,EAAmB,EAAnB;;;AADC+J,yDAAmD,6DAL/D,gEAAU;AACTf,gBAAQ,EAAE,iDADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAK+D,E,+EAsDpC,8D,EACR,sD,EACE,wD,EACG,0D,EACe,2G,EACZ,2F,EACG,sG,EACL,wF,EACO,+G,EACD,6G,EACF,oE,EAhEkC,GAAnDc,mDAAmD,CAAnD;;;;;;;;;;;;;;;;AC7Cb;AAAe;;;AAAA","file":"tipos-comissionamento-tipo-comissionamento-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosTipoComissionamentoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosTipoComissionamentoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosTipoComissionamentoFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialCadastrosTipoComissionamentoListaComponent },\n  {\n    path: 'novo',\n    component: ComercialCadastrosTipoComissionamentoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosTipoComissionamentoFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosTipoComissionamentoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosTipoComissionamentoFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialCadastrosTipoComissionamentoModuleRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosTipoComissionamentoService } from '../tipo-comissionamento.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosTipoComissionamentoFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private tipoComissionamentoService: ComercialCadastrosTipoComissionamentoService,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.tipoComissionamentoService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of(\n      {\n        success: true,\n        data: [{\n          codTipoComissionamento: null,\n          dsTipoComissionamento: null,\n          qtdeRegistros: null,\n          codSituacao: null,\n          codLinha: null,\n          nomeLinha: null,\n          codClasse: null,\n          nomeClasse: null,\n          percentual: []\n        }]\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy90aXBvcy1jb21pc3Npb25hbWVudG8vZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ComercialCadastrosMateriaisGrupoMateriaisAssociadosService } from './../../materiais/grupos-materiais-associados/grupos-materiais-associados.service';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n  FormControl,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\n\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\n\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { ComercialCadastrosTipoComissionamentoService } from '../tipo-comissionamento.service';\n\n@Component({\n  selector: 'comercial-cadastros-tipo-comissionamento-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class ComercialCadastrosTipoComissionamentoFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar: boolean;\n  loaderFullScreen = true;\n\n  appTitle: string;\n  breadCrumbTree: Array<any> = [];\n  dadosPercentual: Array<any> = [];\n  show: boolean = false;\n\n  form: FormGroup;\n  formPercentual: FormGroup;\n  formLinhas: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n  codTiposComissionamento: number;\n  formPercentualIndex: number = null;\n  dadosPerc: boolean = false;\n  index: number;\n\n  linhasMaterial: Array<any> = [];\n  classesMaterial: Array<any> = [];\n  // filteredClasses: Array<any> = [];\n  filteredClasses = {};\n  formMateriais: FormGroup;\n\n  firstAccess: boolean = false;\n  codLinha: number = 0;\n  situacao: string;\n\n  tableConfigPercentual: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private tipoComissionamentoService: ComercialCadastrosTipoComissionamentoService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.getFilterValues();\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    // this.getFormFields();\n\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar Tipo de comissionamento';\n      } else {\n        this.appTitle = 'Novo Tipo de comissionamento';\n      }\n\n      this.titleService.setTitle(this.appTitle);\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`\n        },\n        {\n          descricao: 'Lista',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/tipos-comissionamento/lista`\n        },\n        {\n          descricao: this.appTitle\n        }\n      ];\n    });\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes = this.activatedRoute.snapshot.data.detalhes.data;\n\n      if (detalhes[0].codSituacao != null) {\n        this.situacao = detalhes[0].codSituacao.toString();\n      }\n\n\n      this.form = this.formBuilder.group({\n        codTipoComissionamento: [detalhes[0].codTipoComissionamento],\n        dsTipoComissionamento: [detalhes[0].dsTipoComissionamento, [Validators.required]],\n        codSituacao: [this.situacao ? detalhes[0].codSituacao : 1, [Validators.required]],\n        linhas: this.formBuilder.array([]),\n      });\n\n      this.onAddLinha(null, detalhes);\n\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n\n  }\n\n\n  get linhas(): FormArray {\n    return this.form.get('linhas') as FormArray;\n  }\n\n  onAddLinha(index?: number, data?: any ) {\n    let indexLinhas = 1;\n\n\n    if (data) {indexLinhas = data.length;};\n\n    for (let i = 0; i < indexLinhas; i++) {\n      this.linhas.push(\n        this.formBuilder.group({\n          codLinha: [ data ? data[i].codLinha : '', [Validators.required]],\n          codClasse: [data ? data[i].codClasse : '', [Validators.required]],\n          classes: [[]],\n          percentual: this.formBuilder.array([]),\n      }));\n\n\n      if (data) {\n        for (let indice = 0; indice < data[i].percentual.length; indice++) {\n          this.onAddPercentual(index, data[i].percentual[indice], i);\n        }\n      }\n    }\n  }\n\n  onAssociarPercentual(data): void {\n    const percentualAdd = data.percentual;\n    this.percentualAssociado(percentualAdd);\n  }\n\n  percentualAssociado(data): void {\n    this.onAddPercentual(null, data);\n  }\n\n  getPercentual(index: number) {\n    return this.linhas.at(index).get(\"percentual\") as FormArray;\n  }\n\n  onAddPercentual(index?: number, data?: any, indexLinhas?: number): void {\n    let indexData = 0;\n\n    !data ? indexData = index : indexData = indexLinhas;\n      this.getPercentual(indexData).push(\n        this.formBuilder.group({\n          codFaixa: data ? data.codFaixa : null,\n          percDescontoDe: [data ? data.percDescontoDe : null, [Validators.required]],\n          percDescontoAte: [data ? data.percDescontoAte : null, [Validators.required]],\n          percPago: [data ? data.percPago : null, [Validators.required]],\n      }));\n    }\n\n\n  onDeleteValor(index?: number, item?: any, indexPercentual?: number, action?) {\n    this.loaderNavbar = true;\n\n    let dados = [];\n    let valida = [];\n\n    if (action == 'one') {\n      dados.push(item);\n      valida.push(item);\n    } else {\n      dados = item;\n      valida = item;\n    }\n\n    console.log()\n\n    console.log(dados);\n\n    this.confirmDelete().subscribe((response: boolean) => {\n      if (response) {\n        if (dados[0].codFaixa != null) {\n          this.tipoComissionamentoService\n            .deleteFaixa(dados)\n            .pipe(\n              finalize(() => {\n                this.loaderNavbar = false;\n              })\n            )\n            .subscribe({\n              next: (response: JsonResponse) => {\n                if (response.success) {\n                  // this.form.get('linhas')['controls'][index].get('percentual').clear();\n                  // this.form.get('linhas')['controls'][index].splice(0, 1);\n                  // this.form.get('linhas')['controls'].splice(index, 1);\n                  if (action == 'all') {\n                    this.form.get('linhas')['controls'][index].get('percentual').clear();\n                    this.form.get('linhas')['controls'].splice(index, 1);\n                  } else {\n                    this.form.get('linhas')['controls'][index].get('percentual')['controls'].splice(indexPercentual, 1);\n                  }\n                  \n                  if (this.form.get('linhas')['controls'].length < 1) {\n                    this.onAddLinha(index,);\n                  }\n\n                } else {\n                  this.pnotifyService.error();\n                }\n              },\n              error: (error: any) => {\n                if (\n                  error.error.hasOwnProperty('mensagem') &&\n                  (error.mensagem !== null || error.mensagem !== '')\n                ) {\n                  this.pnotifyService.error(error.error.mensagem);\n                } else {\n                  this.pnotifyService.error();\n                }\n              }\n            });\n          } else {\n            // this.form.get('linhas')['controls'][index].get('percentual').clear();\n            // this.form.get('linhas')['controls'].splice(index, 1);\n            if (action == 'all') {\n              this.form.get('linhas')['controls'][index].get('percentual').clear();\n              this.form.get('linhas')['controls'].splice(index, 1);\n            } else {\n              this.form.get('linhas')['controls'][index].get('percentual')['controls'].splice(indexPercentual, 1);\n            }\n            \n          }\n          this.loaderNavbar = false;\n        }\n      });\n    }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  setFormMateriais(): void {\n    this.formMateriais = this.formBuilder.group({\n      codLinha: [null, [Validators.required]],\n      codClasse: [null, [Validators.required]],\n      codMaterial: [null, [Validators.required]],\n      checked: [false]\n    });\n  }\n\n  getFilterValues(): void {\n    this.tipoComissionamentoService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].success === true) {\n          this.linhasMaterial = response[0].data;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].success === true) {\n          this.classesMaterial = response[1].data;\n          const linhas = this.form.controls['linhas'].value;\n\n          linhas.forEach((linha, index) => {\n            this.onChangeLinha(linha.codLinha, index);\n          });\n\n\n          // this.onChangeLinha();\n\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  onChangeLinha(codLinha: number, index: number) {\n    const classes = this.classesMaterial.filter(classe => {\n      return classe.idLinha == codLinha;\n    })\n    this.filteredClasses[index] = classes;\n\n    this.filteredClasses[index].unshift({\n      idClasse: 0,\n      nomeClasse: 'TODOS',\n    });\n  }\n\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n\n        this.tipoComissionamentoService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe({\n            next: (response: any) => {\n              if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                this.form.reset();\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  if (params.hasOwnProperty('id')) {\n                    this.location.back();\n                  } else {\n                    this.router.navigate(['../lista'], {\n                      relativeTo: this.activatedRoute\n                    });\n                  }\n                });\n              } else if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === false\n              ) {\n                this.pnotifyService.notice(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              this.pnotifyService.error();\n            }\n          });\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onMoreNestedFieldError(formGroup: string, index: number, formArray: string, indexNested: number, field: string) {\n    if (this.onMoreNestedFieldInvalid(formGroup, index, formArray, indexNested, field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onMoreNestedFieldInvalid(formGroup: string, index: number, formArray: string, indexNested: number, field: any) {\n    let linhaNestedForm: any = this.form.controls[formGroup];\n    let percentualNestedForm: any = linhaNestedForm.controls[index].controls[formArray];\n    field = percentualNestedForm.controls[indexNested].get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onMoreNestedFieldRequired(formGroup: string, index: number, formArray: string, indexNested: number, field: string) {\n    let required = false;\n    let formControl = new FormControl();\n    let linhaNestedForm: any = this.form.controls[formGroup];\n    let percentualNestedForm: any = linhaNestedForm.controls[index].controls[formArray];\n\n    if (percentualNestedForm.controls[indexNested].get(field).validator) {\n      let validationResult = percentualNestedForm.controls[indexNested]\n        .get(field)\n        .validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onNestedFieldError(formGroup: string, index: number, field: string) {\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\n    let nestedForm: any = this.form.controls[formGroup];\n    field = nestedForm.controls[index].get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\n    let required = false;\n    let formControl = new FormControl();\n    let nestedForm: any = this.form.controls[formGroup];\n\n    if (nestedForm.controls[index].get(field).validator) {\n      let validationResult = nestedForm.controls[index]\n        .get(field)\n        .validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Tipo de Comissionamento\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n    <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-7\\\">\\n              <label for=\\\"dsTiposComissionamento\\\">Tipo de Comissionamento</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"dsTiposComissionamento\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n                <option value=\\\"0\\\">Inativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-8 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Descrição</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let tipoComissionamento of dadosPagination; let i = index\\\"\\n          [class.table-active]=\\\"tipoComissionamento.codTipoComissionamento == codigo\\\">\\n            <td\\n              class=\\\"hover\\\"\\n              [ngClass]=\\\"classStatusBorder(tipoComissionamento)\\\"\\n              (click)=\\\"onDetails(tipoComissionamento)\\\">\\n              {{ tipoComissionamento.dsTipoComissionamento }}\\n            </td>\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n              <!-- <span *ngIf=\\\"tipoComissionamento.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, tipoComissionamento)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"tipoComissionamento.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, tipoComissionamento)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span> -->\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(tipoComissionamento)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"dadosEmpty && dadosPagination.length < 1\\\">\\n      </empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-4 mb-2\\\" [hidden]=\\\"!showDetailPanel\\\" >\\n      <detail-panel panelTitle=\\\"Faixa de valores\\\" #scrollToFilter>\\n        <div class=\\\"mtc-title\\\"*ngIf=\\\"faixaPerc.length > 0\\\">{{ faixaPerc[0].dsTipoComissionamento }}</div>\\n        <div class=\\\"col-12 mb-4\\\" *ngFor=\\\"let dados of faixaPerc\\\">\\n          <custom-table *ngIf=\\\"faixaPerc.length > 0\\\">\\n            <ng-template #thead let-thead  >\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 50%\\\">Linha</th>\\n                <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 50%\\\">Classe</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr>\\n                <td class=\\\"text-center\\\">{{ dados.nomeLinha }}</td>\\n                <td class=\\\"text-center\\\" *ngIf=\\\"dados.codClasse === 0\\\" >TODOS</td>\\n                <td class=\\\"text-center\\\" *ngIf=\\\"dados.codClasse != 0\\\">{{ dados.nomeClasse }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n\\n        <custom-table *ngIf=\\\"faixaPerc.length > 0\\\" [config]=\\\"tableConfigDetail\\\">\\n          <ng-template #thead let-thead  >\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 55%\\\">Percentual de desconto da tabela de vendas de materiais (%) </th>\\n              <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 45%\\\">Percentual a ser pago de comissão sobre o título (%) </th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let item of dados.percentual\\\">\\n              <td class=\\\"text-center\\\">{{ item.percDescontoDe }} a {{ item.percDescontoAte }} %</td>\\n              <td class=\\\"text-center\\\">{{ item.percPago }} %</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </div>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosTipoComissionamentoModuleRoutingModule } from './tipo-comissionamento-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosTipoComissionamentoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosTipoComissionamentoFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosTipoComissionamentoListaComponent,\n    ComercialCadastrosTipoComissionamentoFormularioComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    CurrencyMaskModule,\n    NgBrazil,\n    ComercialCadastrosTipoComissionamentoModuleRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialCadastrosTipoComissionamentoModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm \\\">\\n    Salvar\\n  </button>\\n  <!-- || submittingForm -->\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n<form [formGroup]=\\\"form\\\">\\n  <div class=\\\"col-12 mt-3\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-lg-6\\\">\\n\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-9\\\">\\n              <label for=\\\"dsTipoComissionamento\\\">Tipo de Recebimento</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"dsTipoComissionamento\\\"\\n                formControlName=\\\"dsTipoComissionamento\\\"\\n\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('dsTipoComissionamento') + ' ' + onFieldRequired(form.controls.dsTipoComissionamento)\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('dsTipoComissionamento')\\\" message=\\\"Tipo de recebimento é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\"\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n                <option value=\\\"0\\\">Inativo</option>\\n                <option value=\\\"1\\\">Ativo</option>\\n              </select>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Qtde. parcelas é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-12 mt-3\\\" formArrayName=\\\"linhas\\\">\\n\\n    <div class=\\\"col-12\\\" *ngFor=\\\"let item of linhas.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n    <div class=\\\"form-row justify-content-center\\\" >\\n        <div class=\\\"col-lg-6 border mb-3\\\" >\\n          <!-- <hr> -->\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-5\\\" >\\n              <label for=\\\"codLinha\\\">Linha</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"linhasMaterial\\\"\\n                formControlName=\\\"codLinha\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codLinha\\\"\\n                bindLabel=\\\"descricao\\\"\\n                bindValue=\\\"id\\\"\\n                (change)=\\\"onChangeLinha($event.id, i)\\\"\\n                [ngClass]=\\\"onNestedFieldError('linhas', i, 'codLinha') + ' ' + onNestedFieldRequired('linhas', i, 'codLinha')\\\">\\n            </ng-select>\\n\\n            </div>\\n            <div class=\\\"form-group col-lg-5\\\">\\n              <label for=\\\"codSituacao\\\">Classe</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"filteredClasses[i]\\\"\\n                formControlName=\\\"codClasse\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codClasse\\\"\\n                bindLabel=\\\"nomeClasse\\\"\\n                bindValue=\\\"idClasse\\\"\\n                [ngClass]=\\\"onNestedFieldError('linhas', i, 'codClasse') + ' ' + onNestedFieldRequired('linhas', i, 'codClasse')\\\">\\n            </ng-select>\\n\\n            </div>\\n            <div class=\\\"form-group col-lg-1\\\"></div>\\n            <div class=\\\"form-group col-lg-1 pt-3\\\">\\n              <btn-icon\\n                  icon=\\\"fas fa-plus-square\\\"\\n                  class=\\\"justify-content-center pt-2\\\"\\n                  size=\\\"medium\\\"\\n                  color=\\\"primary\\\"\\n                  tooltip=\\\"Novo Percentual\\\"\\n                  (click)=\\\"onAddPercentual(i)\\\">\\n              </btn-icon>\\n              <!-- onDeleteValor(i, item.value, 'change'); -->\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-row mb-2\\\" *ngIf=\\\"getPercentual(i).controls.length > 0\\\">\\n            <div class=\\\"col-lg-12 mb-2\\\">\\n            <custom-table [config]=\\\"tableConfigPercentual\\\" formArrayName=\\\"percentual\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 55%\\\">Percentual de desconto da tabela de vendas de materiais (%) </th>\\n                  <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 45%\\\">Percentual a ser pago de comissão sobre o título (%) </th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody >\\n                <tr  *ngFor=\\\"let percentual of getPercentual(i).controls; let j = index\\\"  class=\\\"colorBody\\\" [formGroupName]=\\\"j\\\">\\n\\n                  <td class=\\\"border\\\">\\n                    <div class=\\\"form-row\\\">\\n\\n                      <div class=\\\"col-5\\\">\\n                          <input\\n                            style=\\\"text-align: center;\\\"\\n                            class=\\\"form-control\\\"\\n                            id=\\\"percDescontoDe\\\"\\n                            type=\\\"text\\\"\\n                            formControlName=\\\"percDescontoDe\\\"\\n                            (input)=\\\"onInput()\\\"\\n                            currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 2, suffix: '%' }\\\"\\n                            [ngClass]=\\\"onMoreNestedFieldError('linhas', i, 'percentual', j, 'percDescontoDe') + ' '\\n                            + onMoreNestedFieldRequired('linhas', i, 'percentual', j, 'percDescontoDe')\\\">\\n\\n\\n                      </div>\\n                      <div class=\\\"col-2\\\"> a </div>\\n                      <div class=\\\"col-5\\\">\\n                          <input\\n                            style=\\\"text-align: center;\\\"\\n                            class=\\\"form-control\\\"\\n                            id=\\\"percDescontoAte\\\"\\n                            type=\\\"text\\\"\\n                            formControlName=\\\"percDescontoAte\\\"\\n                            (input)=\\\"onInput()\\\"\\n                            currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 2, suffix: '%' }\\\"\\n                            [ngClass]=\\\"onMoreNestedFieldError('linhas', i, 'percentual', j, 'percDescontoAte') + ' '\\n                            + onMoreNestedFieldRequired('linhas', i, 'percentual', j, 'percDescontoAte')\\\">\\n                      </div>\\n                      </div>\\n                  </td>\\n\\n                  <td class=\\\"border\\\">\\n                    <div class=\\\"form-row\\\">\\n                      <div class=\\\"col-2\\\"></div>\\n                      <div class=\\\"col-8\\\">\\n                        <input\\n                          style=\\\"text-align: center;\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"percPago\\\"\\n                          type=\\\"text\\\"\\n                          formControlName=\\\"percPago\\\"\\n                          (input)=\\\"onInput()\\\"\\n                          currencyMask [options]=\\\"{ align: 'center', prefix: '', thousands: '.', decimal: ',', precision: 2, suffix: '%' }\\\"\\n                          [ngClass]=\\\"onMoreNestedFieldError('linhas', i, 'percentual', j, 'percPago') + ' '\\n                            + onMoreNestedFieldRequired('linhas', i, 'percentual', j, 'percPago')\\\">\\n                      </div>\\n                      <div class=\\\"col-2\\\">\\n                        <div class=\\\"form-row justify-content-end\\\">\\n                          <div class=\\\"col-lg-12 mb-2\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn-icon-sm float-right\\\" (click)=\\\"onDeleteValor(i, item.value.percentual[j], j, 'one')\\\" tooltip=\\\"Limpar Registro\\\" >\\n                              <i class=\\\"fas fa-trash\\\"></i>\\n                            </button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </td>\\n\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n          </div>\\n          <div class=\\\"form-row justify-content-end\\\" *ngIf=\\\"getPercentual(i).controls.length > 0\\\">\\n            <div class=\\\"col-lg-12 mb-2\\\">\\n              <btn-icon\\n                  icon=\\\"fas fa-trash\\\"\\n                  class=\\\"float-right\\\"\\n                  size=\\\"medium\\\"\\n                  color=\\\"danger\\\"\\n                  tooltip=\\\"Limpar Tudo\\\"\\n                  (click)=\\\"onDeleteValor(i, item.value.percentual, j, 'all')\\\">\\n              </btn-icon>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-6 mx-auto\\\" *ngIf=\\\"getPercentual(i).controls.length > 0\\\">\\n      <div class=\\\"form-row\\\" >\\n        <div class=\\\"col-lg-12 mb-3 justify-content-center\\\">\\n          <btn-icon\\n            icon=\\\"fas fa-plus\\\"\\n            size=\\\"small\\\"\\n            class=\\\"float-right\\\"\\n            tooltip=\\\"Nova faixa de valores\\\"\\n            (click)=\\\"onAddLinha(i)\\\">\\n          </btn-icon>\\n        </div>\\n      </div>\\n    </div>\\n    </div>\\n  </div>\\n  </form>\\n</app-body>\\n\\n\\n\";","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { TipoLinhas } from './../models/tipo-linhas';\nimport { EquipeVenda } from './../../equipe-venda/models/equipe-venda';\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\n\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\nimport { ComercialService } from '../../../comercial.service';\n\n// Interfaces\n\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { TipoComissionamento } from '../models/tipo-comissionamento';\nimport { ComercialCadastrosTipoComissionamentoService } from '../tipo-comissionamento.service';\n\n@Component({\n  selector: 'comercial-cadastros-tipos-comissionamento-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class ComercialCadastrosTipoComissionamentoListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green'\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red'\n    }\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  orderBy;\n  orderType = 'ASC';\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<TipoComissionamento> = [];\n  dadosPagination: Array<TipoComissionamento> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n  codigo: number = 0;\n\n  tipoComissionamentoSelecionado: TipoComissionamento;\n  faixaPerc: Array<any> = [];\n\n  tableConfigDetail: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private tipoComissionamentoService: ComercialCadastrosTipoComissionamentoService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService,\n    private comercialService: ComercialService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Tipo de Comissionamento');\n    this.onDetailPanelEmitter();\n    this.setTipoComissionamentoSelecionado();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`\n        },\n        {\n          descricao: 'Lista'\n        }\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      dsTiposComissionamento: [formValue.dsTiposComissionamento],\n      codTiposComissionamento: [formValue.codTiposComissionamento],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required]\n    });\n\n    this.checkOrder();\n    this.loaderFullScreen = false;\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      dsTiposComissionamento: null,\n      codSituacao: 1,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach(formKey => {\n            Object.keys(params).forEach(paramKey => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setTipoComissionamentoSelecionado(): void {\n    this.tipoComissionamentoSelecionado = {\n      codTipoComissionamento: null,\n      dsTiposComissionamento: null,\n      codSituacao: null,\n      qtdeRegistros: null,\n      situacao: null,\n      codUsuario: null,\n      nomeUsuario: null,\n      dataCadastro: null,\n      linhas: []\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) }\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.dsTiposComissionamento) {\n      params.dsTiposComissionamento = this.form.value.dsTiposComissionamento;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    this.tipoComissionamentoService\n      .getTipoComissionamento(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(equipeVenda: EquipeVenda): string {\n    let borderClass: string;\n\n    if (equipeVenda.codSituacao === 1) {\n      borderClass = 'border-success';\n    } else if (equipeVenda.codSituacao === 0) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant'\n    });\n  }\n\n  onDetails(tipoComissionamento: TipoComissionamento): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.faixaPerc = [];\n\n    this.tipoComissionamentoService\n      .getDetailTipoComissionamento(tipoComissionamento.codTipoComissionamento)\n      .pipe(\n        finalize(() => {\n\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.detailPanelService.loadedFinished(false);\n            this.faixaPerc = response.data;\n            this.codigo = this.faixaPerc[0].codTipoComissionamento;\n\n          } else {\n            this.detailPanelService.loadedFinished(true);\n            this.pnotifyService.error();\n\n          }\n        },\n        error: (error: any) => {\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      }\n\n      );\n  }\n\n  onEdit(tipoComissionamento: TipoComissionamento): void {\n    this.router.navigate(['../editar', tipoComissionamento.codTipoComissionamento], {\n      relativeTo: this.activatedRoute\n    });\n  }\n\n  onActivate(index: number, tipoComissionamento: TipoComissionamento): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap(result =>\n          result ? this.activateTipoComissionamento(index, tipoComissionamento) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(tipoComissionamento);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateTipoComissionamento(\n    index: number,\n    tipoComissionamento: TipoComissionamento\n  ): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.tipoComissionamentoService.activateTipoComissionamento(\n      tipoComissionamento.codTipoComissionamento\n    );\n  }\n\n  onInactivate(index: number, tipoComissionamento: TipoComissionamento): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap(result =>\n          result ? this.inactivateTipoComissionamento(index, tipoComissionamento) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(tipoComissionamento);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateTipoComissionamento(\n    index: number,\n    tipoComissionamento: TipoComissionamento\n  ): Observable<any> {\n    this.loaderNavbar = true;\n\n    this.dadosPagination[index].codSituacao = 2;\n\n    return this.tipoComissionamentoService.inactivateTipoComissionamento(\n      tipoComissionamento.codTipoComissionamento\n    );\n  }\n\n  refreshMainData(tipoComissionamento: TipoComissionamento): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (tipoComissionamento.codTipoComissionamento === this.dados[i].codTipoComissionamento) {\n        this.dados[i].codSituacao = tipoComissionamento.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy90aXBvcy1jb21pc3Npb25hbWVudG8vbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";"]}