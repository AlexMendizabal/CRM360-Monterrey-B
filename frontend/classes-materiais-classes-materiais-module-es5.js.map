{"version":3,"sources":["webpack:///src/app/modules/abastecimento/cadastros/classes-materiais/classes-materiais.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/abastecimento/cadastros/classes-materiais/classes-materiais.component.html","webpack:///src/app/modules/abastecimento/cadastros/classes-materiais/classes-materiais.service.ts","webpack:///src/app/modules/abastecimento/cadastros/classes-materiais/classes-materiais-routing.module.ts","webpack:///src/app/modules/abastecimento/cadastros/classes-materiais/classes-materiais.module.ts","webpack:///src/app/modules/abastecimento/cadastros/classes-materiais/classes-materiais.component.scss"],"names":["AbastecimentoCadastrosClassesMateriaisComponent","activatedRoute","router","formBuilder","pnotifyService","confirmModalService","atividadesService","routerService","titleService","service","loaderFullScreen","loaderNavbar","loading","noResult","loadingLogs","noResultLogs","loaderModal","currentUser","JSON","parse","localStorage","getItem","idUsuario","data","dataLogs","dataExcel","situations","ID","NM_SITU","reverse","key","reverseA","keyA","itemsPerPage","totalItems","currentPage","begin","end","currentPageA","beginA","endA","tableConfig","subtitleBorder","subtitles","text","color","form","group","ID_LINH","ID_SUB_LINH","ID_CLAS","IN_STAT","required","setTimeout","setTitle","setDisabledItemsForm","registrarAcesso","setBreadCrumb","checkRouterParams","getLinhas","get","disable","subscribe","params","breadCrumbTree","descricao","routerLink","$activatedRouteSubscription","queryParams","Object","keys","length","_response","getBase64UrlParams","search","setFormValues","unsubscribe","paramsClasse","descricaoLinhas","idSubLinha","idSituacao","getClasses","pipe","res","status","classes","enable","error","paramsSubLinha","getSubLinhas","subLinhas","patchValue","_params","_obj","value","prop","linhas","reset","notice","navigate","relativeTo","setBase64UrlParams","getParams","getClassesMateriais","item","stat","ID_USUA","parseInt","confirmChange","asObservable","result","postClasses","success","showConfirm","getLogs","getClassesMateriaisLogs","getSearchExcel","event","page","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","selector","template","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","AbastecimentoCadastrosClassesMateriaisService","httpClient","BASE_URL","API","observe","toString","IN_GERA_RELA_EXCE","record","post","routes","path","children","component","AbastecimentoCadastrosClassesMateriaisRoutingModule","imports","forChild","exports","AbastecimentoCadastrosClassesMateriaisModule","declarations","forRoot"],"mappings":"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","file":"classes-materiais-classes-materiais-module-es5.js","sourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\n\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\nimport { AbastecimentoCadastrosClassesMateriaisService } from './classes-materiais.service';\r\nimport { PageChangedEvent } from 'ngx-bootstrap';\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n@Component({\r\n  selector: 'classes-materiais',\r\n  templateUrl: './classes-materiais.component.html',\r\n  styleUrls: ['./classes-materiais.component.scss']\r\n})\r\nexport class AbastecimentoCadastrosClassesMateriaisComponent implements OnInit {\r\n  loaderFullScreen: boolean = true;\r\n  loaderNavbar: boolean = false;\r\n  loading: boolean = false;\r\n  noResult: boolean = false;\r\n  loadingLogs: boolean = false;\r\n  noResultLogs: boolean = false;\r\n  loaderModal: boolean = false;\r\n\r\n  breadCrumbTree: any;\r\n\r\n  form: FormGroup;\r\n\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  idUsuario: any = this.currentUser['info']['id'];\r\n \r\n  linhas: Array<any>;\r\n  subLinhas: Array<any>;\r\n  classes: Array<any>;\r\n  data: Array<any> = [];\r\n  dataLogs: Array<any> = [];\r\n  dataExcel: string = '';\r\n\r\n  situations: Array<any> = [\r\n    {ID:'0', NM_SITU: 'Inativo'},\r\n    {ID:'1', NM_SITU: 'Ativo'}\r\n  ];\r\n\r\n  /* Ordenação principal*/\r\n  reverse: boolean = false;\r\n  key: string = 'NM_CLAS';\r\n  /* Ordenação principal*/\r\n\r\n  /* Ordenação modal */\r\n  reverseA: boolean = false;\r\n  keyA: string = 'NM_CLAS';\r\n  /* Ordenação modal */\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 15;\r\n  totalItems: number = 15;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 15;\r\n  /* Paginação */\r\n\r\n  /* Paginação Modal*/\r\n  currentPageA: number = 1;\r\n  beginA: number = 0;\r\n  endA: number = 15;\r\n  /* Paginação Modal*/\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      text: 'Ativo',\r\n      color: 'green'\r\n    },\r\n    {\r\n      text: 'Inativo',\r\n      color: 'red'\r\n    }\r\n  ];\r\n  \r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private atividadesService: AtividadesService,\r\n    private routerService: RouterService,\r\n    private titleService: TitleService,\r\n    private service: AbastecimentoCadastrosClassesMateriaisService\r\n  ) { \r\n    this.form = this.formBuilder.group({\r\n      ID_LINH: [null],\r\n      ID_SUB_LINH: [null],\r\n      ID_CLAS: [null],\r\n      IN_STAT: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.loaderFullScreen = false;\r\n    }, 1000);\r\n    this.titleService.setTitle('Classes de Materiais');\r\n    this.setDisabledItemsForm();\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.checkRouterParams();\r\n    this.getLinhas();\r\n  }\r\n\r\n  setDisabledItemsForm(): void {\r\n    this.form.get('ID_SUB_LINH').disable();\r\n    this.form.get('ID_CLAS').disable();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/abastecimento/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/abastecimento/cadastros/${params['idSubModulo']}`\r\n        },\r\n        {\r\n          descricao: 'Classes de Materiais'\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  checkRouterParams(): void {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let _response = this.routerService.getBase64UrlParams(queryParams);\r\n          this.search(_response);\r\n          this.setFormValues(_response);\r\n        }\r\n      }\r\n    );\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  setFormValues(queryParams?: any): void {  \r\n    const ID_LINH = queryParams['ID_LINH'] ?? '';\r\n      \r\n    /* classes */\r\n    if (Object.keys(ID_LINH).length > 0) {\r\n      const paramsClasse = {\r\n        descricaoLinhas: queryParams['ID_LINH'],\r\n        idSubLinha: queryParams['ID_SUB_LINH'] ?? \"\",\r\n        idSituacao: 1,\r\n      };\r\n\r\n      this.loaderNavbar = true;\r\n\r\n      this.service\r\n        .getClasses(paramsClasse)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          res => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status === 200) {\r\n                if (res['body']['responseCode'] === 200) {\r\n                  this.classes = res['body']['result'];\r\n                  this.form.get('ID_CLAS').enable();\r\n                }\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar Classes');\r\n          }\r\n        );\r\n    } else {\r\n      this.form.get('ID_CLAS').disable();\r\n    }\r\n\r\n    /* sublinhas */\r\n    if (Object.keys(ID_LINH).length > 0) {\r\n      const paramsSubLinha = {\r\n        descricaoLinhas: queryParams['ID_LINH'],\r\n        idSituacao: 1,\r\n      };\r\n\r\n      this.loaderNavbar = true;\r\n\r\n      this.service\r\n        .getSubLinhas(paramsSubLinha)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          res => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status == 200) {\r\n                if (res['body']['responseCode'] === 200) {\r\n                  this.subLinhas = res['body']['result'];\r\n                  this.form.get('ID_SUB_LINH').enable();\r\n                }\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar subLinha');\r\n          }\r\n        );\r\n    } else {\r\n      this.form.get('ID_SUB_LINH').disable();\r\n    }\r\n\r\n    this.form.patchValue(queryParams);\r\n  }\r\n\r\n  getParams(): any {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  getLinhas(): void  {\r\n    const params = {\r\n      idSituacao: 1\r\n    };\r\n    this.loaderNavbar = true;\r\n    this.linhas = [];\r\n\r\n    this.service\r\n      .getLinhas(params)\r\n      .pipe(finalize(() => (this.loaderNavbar = false)))\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (Object.keys(res).length > 0) {\r\n            if (res.status === 200) {\r\n              this.linhas = res['body']['result'];\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          this.pnotifyService.error('Erro ao carregar Linhas');\r\n        }\r\n      );\r\n  }\r\n\r\n  getSubLinhas(): void  {\r\n    this.loaderNavbar = true;\r\n    this.subLinhas = [];\r\n\r\n    if (\r\n      this.form.value['ID_LINH'] != null &&\r\n      this.form.value['ID_LINH'].length > 0\r\n    ) {\r\n      let descricaoLinhas = this.form.get('ID_LINH').value;\r\n      let idSituacao = 1;\r\n      let params = {\r\n        descricaoLinhas: descricaoLinhas,\r\n        idSituacao: idSituacao\r\n      };\r\n\r\n      this.service\r\n        .getSubLinhas(params)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          res => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status === 200) {\r\n                if (res['body']['responseCode'] === 200) {\r\n                  this.subLinhas = res['body']['result'];\r\n                  this.form.get('ID_SUB_LINH').reset();\r\n                  this.form.get('ID_SUB_LINH').enable();\r\n                } else if (res['body']['responseCode'] === 404) {\r\n                  this.form.get('ID_SUB_LINH').reset();\r\n                  this.form.get('ID_SUB_LINH').disable();\r\n                  this.pnotifyService.notice('Não há sublinha cadastrada');\r\n                }\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar sublinhas');\r\n          }\r\n        );\r\n    } else {\r\n      this.loaderNavbar = false;\r\n      this.form.get('ID_SUB_LINH').reset();\r\n      this.form.get('ID_SUB_LINH').disable();\r\n    }\r\n  }\r\n\r\n  getClasses(): void  {\r\n    this.classes = [];\r\n    this.loaderNavbar = true;\r\n\r\n    if (\r\n      this.form.value['ID_LINH'] != null &&\r\n      this.form.value['ID_LINH'].length > 0\r\n    ) {\r\n      let descricaoLinhas = this.form.get('ID_LINH').value;\r\n      let idSubLinha = this.form.get('ID_SUB_LINH').value;\r\n      let idSituacao = 1;\r\n      let params = {\r\n        descricaoLinhas,\r\n        idSubLinha : idSubLinha ?? \"\",\r\n        idSituacao\r\n      }\r\n\r\n      this.service\r\n        .getClasses(params)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          res => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status === 200) {\r\n                if (res['body']['responseCode'] === 200) {\r\n                  this.classes = res['body']['result'];\r\n                  this.form.get('ID_CLAS').reset();\r\n                  this.form.get('ID_CLAS').enable();\r\n                } else if (res['body']['responseCode'] === 404) {\r\n                  this.form.get('ID_CLAS').reset();\r\n                  this.form.get('ID_CLAS').disable();\r\n                }\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar Classes');\r\n          }\r\n        );\r\n    } else {\r\n      this.loaderNavbar = false;\r\n      this.form.get('ID_CLAS').reset();\r\n      this.form.get('ID_CLAS').disable();\r\n    }\r\n  }\r\n\r\n  onFilter(): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\r\n    });\r\n    this.search(this.getParams());\r\n  }\r\n\r\n  search(params: any): void {    \r\n    this.loaderNavbar = true;\r\n    this.loading = false;\r\n    \r\n    this.data = [];\r\n    this.service\r\n    .getClassesMateriais(params)\r\n    .pipe(\r\n      finalize(() => this.loaderNavbar = false)\r\n      )\r\n      .subscribe(res => {\r\n        if(Object.keys(res).length > 0) {\r\n          if(res.status == 200){\r\n            if(res['body']['responseCode'] == 200) {\r\n              this.loading = true;\r\n              this.noResult = false;\r\n              this.data = res['body']['result'];\r\n            } else if (res['body']['responseCode'] ==  404){\r\n            this.noResult = true;\r\n            this.pnotifyService.notice(\"Não há itens a serem exibidos\");\r\n          }\r\n        }\r\n      }\r\n    },\r\n    error => {\r\n      this.noResult = true;\r\n      this.pnotifyService.error(\"Erro ao carregar Classes de Materiais\");\r\n    });\r\n  }\r\n\r\n  onEdit(item): void {\r\n    const stat = item.IN_STAT == 1 ? 0 : 1;\r\n\r\n    item.ID_USUA = parseInt(this.idUsuario);\r\n\r\n    item.ID_CLAS = item.ID;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loaderNavbar = true;\r\n          item.IN_STAT = stat;\r\n          return this.service.postClasses(item);\r\n        }),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n        },\r\n        (error: any) => {\r\n          item.IN_STAT = item.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onLogs(item: any): void {\r\n    //console.log(item);\r\n\r\n    let params = {\r\n      ID_CLAS: item['ID']\r\n    }\r\n\r\n    this.getLogs(params);\r\n  }\r\n\r\n  getLogs(params: any): void {    \r\n    this.loaderNavbar = true;\r\n    this.loadingLogs = false;\r\n    this.loaderModal = false;\r\n    \r\n    this.dataLogs = [];\r\n    this.service\r\n    .getClassesMateriaisLogs(params)\r\n    .pipe(\r\n      finalize(() => {this.loaderNavbar = false, this.loaderModal = true})\r\n      )\r\n      .subscribe(res => {\r\n        if(Object.keys(res).length > 0) {\r\n          if(res.status == 200){\r\n            if(res['body']['responseCode'] == 200) {\r\n              this.loadingLogs = true;\r\n              this.noResultLogs = false;\r\n              this.dataLogs = res['body']['result'];\r\n            } else if (res['body']['responseCode'] ==  404){\r\n            this.noResultLogs = true;\r\n            this.pnotifyService.notice(\"Não há itens a serem exibidos\");\r\n          }\r\n        }\r\n      }\r\n    },\r\n    error => {\r\n      this.noResultLogs = true;\r\n      this.pnotifyService.error(\"Erro ao carregar Classes de Materiais\");\r\n    });\r\n  }\r\n\r\n  getSearchExcel(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dataExcel = '';\r\n\r\n    this.service\r\n      .getClassesMateriais(params)\r\n      .pipe(finalize(() => (this.loaderNavbar = false)))\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (Object.keys(res).length > 0) {\r\n            if (res['body']['responseCode'] === 200) {\r\n              this.dataExcel = res['body']['result'];\r\n              this.pnotifyService.success(this.dataExcel);\r\n            } else if (\r\n              res['body']['responseCode'] === 404\r\n            ) {\r\n              this.pnotifyService.notice('Nenhuma informação encontrada');\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          this.pnotifyService.error('Erro ao carregar dados para excel');\r\n        }\r\n      );\r\n  }\r\n\r\n  OnExcel(): void {\r\n    let params = this.getParams();\r\n\r\n    params['IN_GERA_RELA_EXCE'] = 1;\r\n    params['ID_USUA'] = this.idUsuario;\r\n\r\n    this.getSearchExcel(params);\r\n  }\r\n\r\n  /* Ordenação */\r\n  sort(key: string): void {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  /* Ordenação */\r\n  \r\n  /* Paginação Tabela Principal*/\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n  \r\n  /* Paginação Modal*/\r\n  onPageChangedA(event: PageChangedEvent): void {\r\n    this.beginA = (event.page - 1) * event.itemsPerPage;\r\n    this.endA = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação Modal*/\r\n\r\n  /* Ordenação Modal*/\r\n  sortA(keyA: string): void {\r\n    this.keyA = keyA;\r\n    this.reverseA = !this.reverseA;\r\n  }\r\n  /* Ordenação Modal*/\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): any {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string): any {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen\\r\\n  *ngIf=\\\"loaderFullScreen\\\"\\r\\n></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Classes de Materiais\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n  >\\r\\n    Filtrar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"OnExcel()\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n  >\\r\\n    Exportar Excel\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <advanced-filter>\\r\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"linhas\\\">Linha</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            [items]=\\\"linhas\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            (change)=\\\"getSubLinhas() + '' + getClasses()\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_LINH\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"ID_LINH\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"subLinhas\\\">Sublinha</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            [items]=\\\"subLinhas\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            (change)=\\\"getClasses()\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_SUB_LINH\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"ID_SUB_LINH\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"classes\\\">Classe</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            [items]=\\\"classes\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_CLAS\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"ID_CLAS\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"situacoes\\\">Situação</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"situations\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_SITU\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"IN_STAT\\\"\\r\\n            [ngClass]=\\\"\\r\\n              onFieldError('IN_STAT') + ' ' + onFieldRequired('IN_STAT')\\r\\n            \\\"\\r\\n            >\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('IN_STAT')\\\"\\r\\n              message=\\\"Situação é obrigatório.\\\"\\r\\n            >\\r\\n            </invalid-form-control>\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <subtitles [data]=\\\"subtitles\\\" [show]=\\\"loading\\\"> </subtitles>\\r\\n  <div class=\\\"table-responsive\\\" *ngIf=\\\"loading\\\">\\r\\n    <custom-table [config]=\\\"tableConfig\\\">\\r\\n      <ng-template let-thead #thead>\\r\\n        <tr class=\\\"text-center\\\">\\r\\n          <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('ID_REFE_ERP')\\\">\\r\\n            Código\\r\\n            <span *ngIf=\\\"key == 'ID_REFE_ERP'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n            <span *ngIf=\\\"key != 'ID_REFE_ERP'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n          </th>\\r\\n          <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_CLAS')\\\">\\r\\n            Classe\\r\\n            <span *ngIf=\\\"key == 'NM_CLAS'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n            <span *ngIf=\\\"key != 'NM_CLAS'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n          </th>\\r\\n          <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_SUB_LINH')\\\">\\r\\n            Sublinha\\r\\n            <span *ngIf=\\\"key == 'NM_SUB_LINH'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n            <span *ngIf=\\\"key != 'NM_SUB_LINH'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n          </th>\\r\\n          <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_LINH')\\\">\\r\\n            Linha\\r\\n            <span *ngIf=\\\"key == 'NM_LINH'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n            <span *ngIf=\\\"key != 'NM_LINH'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n          </th>\\r\\n          <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" width=\\\"4%\\\"></th>\\r\\n          <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" width=\\\"4%\\\"></th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template let-tbody #tbody>\\r\\n        <tr *ngFor=\\\"let item of data | orderBy: key:reverse | slice: begin:end\\\">\\r\\n          <td nowrap class=\\\"text-center\\\" [ngClass]=\\\"item.IN_STAT == 0 ? 'border-danger' : 'border-success'\\\">{{ item.ID_REFE_ERP }}</td>        \\r\\n          <td nowrap class=\\\"text-center\\\">{{ item.NM_CLAS }}</td>        \\r\\n          <td nowrap class=\\\"text-center\\\">{{ item.NM_SUB_LINH ? item.NM_SUB_LINH : \\\"-\\\" }}</td>         \\r\\n          <td nowrap class=\\\"text-center\\\">{{ item.NM_LINH }}</td>              \\r\\n          <td nowrap class=\\\"text-center\\\" width=\\\"4%\\\">\\r\\n            <div>\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                [tooltip]=\\\"item.IN_STAT == 0 ? 'Ativar' : 'Desativar'\\\"\\r\\n                (click)=\\\"onEdit(item)\\\"\\r\\n              >\\r\\n                <i [ngClass]=\\\"item.IN_STAT == 0 ? 'fas fa-toggle-off' : 'fas fa-toggle-on text-success'\\\"></i>\\r\\n              </button>\\r\\n            </div>\\r\\n          </td>       \\r\\n          <td nowrap  class=\\\"text-center\\\" width=\\\"4%\\\">\\r\\n            <div>\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Logs\\\"\\r\\n                (click)=\\\"onLogs(item) + ' ' + lgModal.show()\\\"\\r\\n              >\\r\\n                <i class=\\\"fas fa-external-link-alt text-primary\\\"></i>\\r\\n              </button>\\r\\n            </div>\\r\\n          </td>       \\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 mt-2\\\" *ngIf=\\\"data.length > itemsPerPage && loading\\\">\\r\\n    Exibindo {{ begin + 1 }} a {{ end }} de {{ data?.length }}\\r\\n    <div class=\\\"d-flex\\\">\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"data?.length\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div\\r\\n    *ngIf=\\\"noResult\\\"\\r\\n    class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\r\\n    style=\\\"height: 80%;\\\"\\r\\n  >\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\\r\\n<div\\r\\n  bsModal\\r\\n  #lgModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"dialog-sizes-name1\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-xl\\\" [hidden]=\\\"!loaderModal\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\r\\n          LOGS CLASSES DE MATERIAIS\\r\\n        </h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close pull-right\\\"\\r\\n          (click)=\\\"lgModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <custom-table *ngIf=\\\"loadingLogs\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr class=\\\"text-center\\\">\\r\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('ID_REFE_ERP')\\\">\\r\\n                  Código\\r\\n                  <span *ngIf=\\\"keyA == 'ID_REFE_ERP'\\\"\\r\\n                    ><i\\r\\n                      [ngClass]=\\\"\\r\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                      \\\"\\r\\n                    ></i\\r\\n                  ></span>\\r\\n                  <span *ngIf=\\\"keyA != 'ID_REFE_ERP'\\\"\\r\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n                  ></span>\\r\\n                </th>\\r\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('NM_CLAS')\\\">\\r\\n                  Classe\\r\\n                  <span *ngIf=\\\"keyA == 'NM_CLAS'\\\"\\r\\n                    ><i\\r\\n                      [ngClass]=\\\"\\r\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                      \\\"\\r\\n                    ></i\\r\\n                  ></span>\\r\\n                  <span *ngIf=\\\"keyA != 'NM_CLAS'\\\"\\r\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n                  ></span>\\r\\n                </th>\\r\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('NM_SUB_LINH')\\\">\\r\\n                  Sub Linha\\r\\n                  <span *ngIf=\\\"keyA == 'NM_SUB_LINH'\\\"\\r\\n                    ><i\\r\\n                      [ngClass]=\\\"\\r\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                      \\\"\\r\\n                    ></i\\r\\n                  ></span>\\r\\n                  <span *ngIf=\\\"keyA != 'NM_SUB_LINH'\\\"\\r\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n                  ></span>\\r\\n                </th>\\r\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('NM_LINH')\\\">\\r\\n                  Linha\\r\\n                  <span *ngIf=\\\"keyA == 'NM_LINH'\\\"\\r\\n                    ><i\\r\\n                      [ngClass]=\\\"\\r\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                      \\\"\\r\\n                    ></i\\r\\n                  ></span>\\r\\n                  <span *ngIf=\\\"keyA != 'NM_LINH'\\\"\\r\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n                  ></span>\\r\\n                </th>\\r\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('DS_STAT')\\\">\\r\\n                  Situação\\r\\n                  <span *ngIf=\\\"keyA == 'DS_STAT'\\\"\\r\\n                    ><i\\r\\n                      [ngClass]=\\\"\\r\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                      \\\"\\r\\n                    ></i\\r\\n                  ></span>\\r\\n                  <span *ngIf=\\\"keyA != 'DS_STAT'\\\"\\r\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n                  ></span>\\r\\n                </th>\\r\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('DT_ACAO')\\\">\\r\\n                  Data Ação\\r\\n                  <span *ngIf=\\\"keyA == 'DT_ACAO'\\\"\\r\\n                    ><i\\r\\n                      [ngClass]=\\\"\\r\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                      \\\"\\r\\n                    ></i\\r\\n                  ></span>\\r\\n                  <span *ngIf=\\\"keyA != 'DT_ACAO'\\\"\\r\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n                  ></span>\\r\\n                </th>\\r\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('NM_ACAO')\\\">\\r\\n                  Ação\\r\\n                  <span *ngIf=\\\"keyA == 'NM_ACAO'\\\"\\r\\n                    ><i\\r\\n                      [ngClass]=\\\"\\r\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                      \\\"\\r\\n                    ></i\\r\\n                  ></span>\\r\\n                  <span *ngIf=\\\"keyA != 'NM_ACAO'\\\"\\r\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n                  ></span>\\r\\n                </th>\\r\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('NM_USUA')\\\">\\r\\n                  Usuário\\r\\n                  <span *ngIf=\\\"keyA == 'NM_USUA'\\\"\\r\\n                    ><i\\r\\n                      [ngClass]=\\\"\\r\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                      \\\"\\r\\n                    ></i\\r\\n                  ></span>\\r\\n                  <span *ngIf=\\\"keyA != 'NM_USUA'\\\"\\r\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n                  ></span>\\r\\n                </th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let item of dataLogs | orderBy: keyA:reverseA | slice: beginA:endA; let i = index\\\">\\r\\n                <td class=\\\"text-center\\\">{{ item.ID_REFE_ERP }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.NM_CLAS }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.ID_SUB_LINH ? item.ID_SUB_LINH : '-' }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.NM_LINH }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.DS_STAT }}</td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  {{ item.DT_ACAO | date: 'dd/MM/yyyy HH:mm' }}\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">{{ item.NM_ACAO }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.NM_USUA }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 mt-2\\\" *ngIf=\\\"dataLogs.length > itemsPerPage && loadingLogs\\\">\\r\\n          Exibindo {{ beginA + 1 }} a {{ endA }} de {{ dataLogs?.length }}\\r\\n          <pagination\\r\\n            [maxSize]=\\\"10\\\"\\r\\n            [totalItems]=\\\"dataLogs?.length\\\"\\r\\n            (pageChanged)=\\\"onPageChangedA($event)\\\"\\r\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n            [boundaryLinks]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"currentPageA\\\"\\r\\n            previousText=\\\"&lsaquo;\\\"\\r\\n            nextText=\\\"&rsaquo;\\\"\\r\\n            firstText=\\\"&laquo;\\\"\\r\\n            lastText=\\\"&raquo;\\\"\\r\\n          >\\r\\n          </pagination>\\r\\n        </div>\\r\\n        <div\\r\\n          *ngIf=\\\"noResultLogs\\\"\\r\\n          class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\r\\n          style=\\\"height: 80%;\\\"\\r\\n        >\\r\\n          <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AbastecimentoCadastrosClassesMateriaisService {\r\n\r\n  private readonly BASE_URL = environment.API;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) { }\r\n\r\n  getLinhas(params): Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/linhas`,{\r\n      params: {\r\n        IN_STAT: params['idSituacao']\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getSubLinhas(params): Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/sub-linhas`,{\r\n      params: {\r\n        ID_LINH: params['descricaoLinhas'].toString(),\r\n        IN_STAT:params['idSituacao']\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getClasses(params): Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/classes`, {\r\n      params: {\r\n        ID_LINH: params['descricaoLinhas'].toString(),\r\n        ID_SUB_LINH: params['idSubLinha'].toString(),\r\n        IN_STAT: params['idSituacao']\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getClassesMateriais(_params): Observable<any> {\r\n    const params = {\r\n      ID_LINH: _params['ID_LINH'] ? _params['ID_LINH'].toString() : '',\r\n      ID_SUB_LINH: _params['ID_SUB_LINH'] ? _params['ID_SUB_LINH'].toString() : '',\r\n      ID_CLAS: _params['ID_CLAS'] ? _params['ID_CLAS'].toString() : '',\r\n      IN_STAT: _params['IN_STAT'] ?? '',\r\n      IN_GERA_RELA_EXCE: _params['IN_GERA_RELA_EXCE'] ?? '',\r\n      ID_USUA: _params['ID_USUA'] ?? ''\r\n    }\r\n\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/classes`, {\r\n      params,\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getClassesMateriaisLogs(params): Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/cadastros/classes-auditoria`, {\r\n      params,\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  postClasses(record): Observable<any> {\r\n    return this.httpClient.post(`${this.BASE_URL}/abastecimento/cadastros/classe-atualizar`,\r\n      record\r\n    )\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AbastecimentoCadastrosClassesMateriaisComponent } from './classes-materiais.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: AbastecimentoCadastrosClassesMateriaisComponent\r\n      },\r\n    ]\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AbastecimentoCadastrosClassesMateriaisRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { TooltipModule, PaginationModule, TabsModule, ModalModule } from 'ngx-bootstrap';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\n\r\nimport { AbastecimentoCadastrosClassesMateriaisRoutingModule } from './classes-materiais-routing.module';\r\nimport { AbastecimentoCadastrosClassesMateriaisComponent } from './classes-materiais.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AbastecimentoCadastrosClassesMateriaisComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AbastecimentoCadastrosClassesMateriaisRoutingModule,\r\n    NotFoundModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    TooltipModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    NgSelectModule,\r\n    TemplatesModule,\r\n    OrderModule\r\n  ]\r\n})\r\nexport class AbastecimentoCadastrosClassesMateriaisModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWJhc3RlY2ltZW50by9jYWRhc3Ryb3MvY2xhc3Nlcy1tYXRlcmlhaXMvY2xhc3Nlcy1tYXRlcmlhaXMuY29tcG9uZW50LnNjc3MifQ== */\";"]}