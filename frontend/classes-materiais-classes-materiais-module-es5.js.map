{"version":3,"sources":["webpack:///src/app/modules/abastecimento/cadastros/classes-materiais/classes-materiais.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/abastecimento/cadastros/classes-materiais/classes-materiais.component.html","webpack:///src/app/modules/abastecimento/cadastros/classes-materiais/classes-materiais.service.ts","webpack:///src/app/modules/abastecimento/cadastros/classes-materiais/classes-materiais-routing.module.ts","webpack:///src/app/modules/abastecimento/cadastros/classes-materiais/classes-materiais.module.ts","webpack:///src/app/modules/abastecimento/cadastros/classes-materiais/classes-materiais.component.scss"],"names":["AbastecimentoCadastrosClassesMateriaisComponent","activatedRoute","router","formBuilder","pnotifyService","confirmModalService","atividadesService","routerService","titleService","service","loaderFullScreen","loaderNavbar","loading","noResult","loadingLogs","noResultLogs","loaderModal","currentUser","JSON","parse","localStorage","getItem","idUsuario","data","dataLogs","dataExcel","situations","ID","NM_SITU","reverse","key","reverseA","keyA","itemsPerPage","totalItems","currentPage","begin","end","currentPageA","beginA","endA","tableConfig","subtitleBorder","subtitles","text","color","form","group","ID_LINH","ID_SUB_LINH","ID_CLAS","IN_STAT","required","setTimeout","setTitle","setDisabledItemsForm","registrarAcesso","setBreadCrumb","checkRouterParams","getLinhas","get","disable","subscribe","params","breadCrumbTree","descricao","routerLink","$activatedRouteSubscription","queryParams","Object","keys","length","_response","getBase64UrlParams","search","setFormValues","unsubscribe","paramsClasse","descricaoLinhas","idSubLinha","idSituacao","getClasses","pipe","res","status","classes","enable","error","paramsSubLinha","getSubLinhas","subLinhas","patchValue","_params","_obj","value","prop","linhas","reset","notice","navigate","relativeTo","setBase64UrlParams","getParams","getClassesMateriais","item","stat","ID_USUA","parseInt","confirmChange","asObservable","result","postClasses","success","showConfirm","console","log","getLogs","getClassesMateriaisLogs","getSearchExcel","event","page","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","selector","template","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","AbastecimentoCadastrosClassesMateriaisService","httpClient","BASE_URL","API","observe","toString","IN_GERA_RELA_EXCE","record","post","routes","path","children","component","AbastecimentoCadastrosClassesMateriaisRoutingModule","imports","forChild","exports","AbastecimentoCadastrosClassesMateriaisModule","declarations","forRoot"],"mappings":"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","file":"classes-materiais-classes-materiais-module-es5.js","sourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, FormControl } from '@angular/forms';\n\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\nimport { Subscription, EMPTY } from 'rxjs';\n\nimport { AbastecimentoCadastrosClassesMateriaisService } from './classes-materiais.service';\nimport { PageChangedEvent } from 'ngx-bootstrap';\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n@Component({\n  selector: 'classes-materiais',\n  templateUrl: './classes-materiais.component.html',\n  styleUrls: ['./classes-materiais.component.scss']\n})\nexport class AbastecimentoCadastrosClassesMateriaisComponent implements OnInit {\n  loaderFullScreen: boolean = true;\n  loaderNavbar: boolean = false;\n  loading: boolean = false;\n  noResult: boolean = false;\n  loadingLogs: boolean = false;\n  noResultLogs: boolean = false;\n  loaderModal: boolean = false;\n\n  breadCrumbTree: any;\n\n  form: FormGroup;\n\n  $activatedRouteSubscription: Subscription;\n\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\n  idUsuario: any = this.currentUser['info']['id'];\n \n  linhas: Array<any>;\n  subLinhas: Array<any>;\n  classes: Array<any>;\n  data: Array<any> = [];\n  dataLogs: Array<any> = [];\n  dataExcel: string = '';\n\n  situations: Array<any> = [\n    {ID:'0', NM_SITU: 'Inativo'},\n    {ID:'1', NM_SITU: 'Ativo'}\n  ];\n\n  /* Ordenação principal*/\n  reverse: boolean = false;\n  key: string = 'NM_CLAS';\n  /* Ordenação principal*/\n\n  /* Ordenação modal */\n  reverseA: boolean = false;\n  keyA: string = 'NM_CLAS';\n  /* Ordenação modal */\n\n  /* Paginação */\n  itemsPerPage: number = 15;\n  totalItems: number = 15;\n  currentPage: number = 1;\n  begin: number = 0;\n  end: number = 15;\n  /* Paginação */\n\n  /* Paginação Modal*/\n  currentPageA: number = 1;\n  beginA: number = 0;\n  endA: number = 15;\n  /* Paginação Modal*/\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  subtitles: Array<Subtitles> = [\n    {\n      text: 'Ativo',\n      color: 'green'\n    },\n    {\n      text: 'Inativo',\n      color: 'red'\n    }\n  ];\n  \n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private confirmModalService: ConfirmModalService,\n    private atividadesService: AtividadesService,\n    private routerService: RouterService,\n    private titleService: TitleService,\n    private service: AbastecimentoCadastrosClassesMateriaisService\n  ) { \n    this.form = this.formBuilder.group({\n      ID_LINH: [null],\n      ID_SUB_LINH: [null],\n      ID_CLAS: [null],\n      IN_STAT: [null, Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.loaderFullScreen = false;\n    }, 1000);\n    this.titleService.setTitle('Classes de Materiais');\n    this.setDisabledItemsForm();\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.checkRouterParams();\n    this.getLinhas();\n  }\n\n  setDisabledItemsForm(): void {\n    this.form.get('ID_SUB_LINH').disable();\n    this.form.get('ID_CLAS').disable();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/abastecimento/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/abastecimento/cadastros/${params['idSubModulo']}`\n        },\n        {\n          descricao: 'Classes de Materiais'\n        }\n      ];\n    });\n  }\n\n  checkRouterParams(): void {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let _response = this.routerService.getBase64UrlParams(queryParams);\n          this.search(_response);\n          this.setFormValues(_response);\n        }\n      }\n    );\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  setFormValues(queryParams?: any): void {  \n    const ID_LINH = queryParams['ID_LINH'] ?? '';\n      \n    /* classes */\n    if (Object.keys(ID_LINH).length > 0) {\n      const paramsClasse = {\n        descricaoLinhas: queryParams['ID_LINH'],\n        idSubLinha: queryParams['ID_SUB_LINH'] ?? \"\",\n        idSituacao: 1,\n      };\n\n      this.loaderNavbar = true;\n\n      this.service\n        .getClasses(paramsClasse)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          res => {\n            if (Object.keys(res).length > 0) {\n              if (res.status === 200) {\n                if (res['body']['responseCode'] === 200) {\n                  this.classes = res['body']['result'];\n                  this.form.get('ID_CLAS').enable();\n                }\n              }\n            }\n          },\n          error => {\n            this.pnotifyService.error('Erro ao carregar Classes');\n          }\n        );\n    } else {\n      this.form.get('ID_CLAS').disable();\n    }\n\n    /* sublinhas */\n    if (Object.keys(ID_LINH).length > 0) {\n      const paramsSubLinha = {\n        descricaoLinhas: queryParams['ID_LINH'],\n        idSituacao: 1,\n      };\n\n      this.loaderNavbar = true;\n\n      this.service\n        .getSubLinhas(paramsSubLinha)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          res => {\n            if (Object.keys(res).length > 0) {\n              if (res.status == 200) {\n                if (res['body']['responseCode'] === 200) {\n                  this.subLinhas = res['body']['result'];\n                  this.form.get('ID_SUB_LINH').enable();\n                }\n              }\n            }\n          },\n          error => {\n            this.pnotifyService.error('Erro ao carregar subLinha');\n          }\n        );\n    } else {\n      this.form.get('ID_SUB_LINH').disable();\n    }\n\n    this.form.patchValue(queryParams);\n  }\n\n  getParams(): any {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  getLinhas(): void  {\n    const params = {\n      idSituacao: 1\n    };\n    this.loaderNavbar = true;\n    this.linhas = [];\n\n    this.service\n      .getLinhas(params)\n      .pipe(finalize(() => (this.loaderNavbar = false)))\n      .subscribe(\n        (res: any) => {\n          if (Object.keys(res).length > 0) {\n            if (res.status === 200) {\n              this.linhas = res['body']['result'];\n            }\n          }\n        },\n        error => {\n          this.pnotifyService.error('Erro ao carregar Linhas');\n        }\n      );\n  }\n\n  getSubLinhas(): void  {\n    this.loaderNavbar = true;\n    this.subLinhas = [];\n\n    if (\n      this.form.value['ID_LINH'] != null &&\n      this.form.value['ID_LINH'].length > 0\n    ) {\n      let descricaoLinhas = this.form.get('ID_LINH').value;\n      let idSituacao = 1;\n      let params = {\n        descricaoLinhas: descricaoLinhas,\n        idSituacao: idSituacao\n      };\n\n      this.service\n        .getSubLinhas(params)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          res => {\n            if (Object.keys(res).length > 0) {\n              if (res.status === 200) {\n                if (res['body']['responseCode'] === 200) {\n                  this.subLinhas = res['body']['result'];\n                  this.form.get('ID_SUB_LINH').reset();\n                  this.form.get('ID_SUB_LINH').enable();\n                } else if (res['body']['responseCode'] === 404) {\n                  this.form.get('ID_SUB_LINH').reset();\n                  this.form.get('ID_SUB_LINH').disable();\n                  this.pnotifyService.notice('Não há sublinha cadastrada');\n                }\n              }\n            }\n          },\n          error => {\n            this.pnotifyService.error('Erro ao carregar sublinhas');\n          }\n        );\n    } else {\n      this.loaderNavbar = false;\n      this.form.get('ID_SUB_LINH').reset();\n      this.form.get('ID_SUB_LINH').disable();\n    }\n  }\n\n  getClasses(): void  {\n    this.classes = [];\n    this.loaderNavbar = true;\n\n    if (\n      this.form.value['ID_LINH'] != null &&\n      this.form.value['ID_LINH'].length > 0\n    ) {\n      let descricaoLinhas = this.form.get('ID_LINH').value;\n      let idSubLinha = this.form.get('ID_SUB_LINH').value;\n      let idSituacao = 1;\n      let params = {\n        descricaoLinhas,\n        idSubLinha : idSubLinha ?? \"\",\n        idSituacao\n      }\n\n      this.service\n        .getClasses(params)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          res => {\n            if (Object.keys(res).length > 0) {\n              if (res.status === 200) {\n                if (res['body']['responseCode'] === 200) {\n                  this.classes = res['body']['result'];\n                  this.form.get('ID_CLAS').reset();\n                  this.form.get('ID_CLAS').enable();\n                } else if (res['body']['responseCode'] === 404) {\n                  this.form.get('ID_CLAS').reset();\n                  this.form.get('ID_CLAS').disable();\n                }\n              }\n            }\n          },\n          error => {\n            this.pnotifyService.error('Erro ao carregar Classes');\n          }\n        );\n    } else {\n      this.loaderNavbar = false;\n      this.form.get('ID_CLAS').reset();\n      this.form.get('ID_CLAS').disable();\n    }\n  }\n\n  onFilter(): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\n    });\n    this.search(this.getParams());\n  }\n\n  search(params: any): void {    \n    this.loaderNavbar = true;\n    this.loading = false;\n    \n    this.data = [];\n    this.service\n    .getClassesMateriais(params)\n    .pipe(\n      finalize(() => this.loaderNavbar = false)\n      )\n      .subscribe(res => {\n        if(Object.keys(res).length > 0) {\n          if(res.status == 200){\n            if(res['body']['responseCode'] == 200) {\n              this.loading = true;\n              this.noResult = false;\n              this.data = res['body']['result'];\n            } else if (res['body']['responseCode'] ==  404){\n            this.noResult = true;\n            this.pnotifyService.notice(\"Não há itens a serem exibidos\");\n          }\n        }\n      }\n    },\n    error => {\n      this.noResult = true;\n      this.pnotifyService.error(\"Erro ao carregar Classes de Materiais\");\n    });\n  }\n\n  onEdit(item): void {\n    const stat = item.IN_STAT == 1 ? 0 : 1;\n\n    item.ID_USUA = parseInt(this.idUsuario);\n\n    item.ID_CLAS = item.ID;\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loaderNavbar = true;\n          item.IN_STAT = stat;\n          return this.service.postClasses(item);\n        }),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n        },\n        (error: any) => {\n          item.IN_STAT = item.IN_STAT == 1 ? 0 : 1;\n          this.pnotifyService.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == 1)\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Deseja realmente prosseguir com a ativação do registro?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onLogs(item: any): void {\n    console.log(item);\n\n    let params = {\n      ID_CLAS: item['ID']\n    }\n\n    this.getLogs(params);\n  }\n\n  getLogs(params: any): void {    \n    this.loaderNavbar = true;\n    this.loadingLogs = false;\n    this.loaderModal = false;\n    \n    this.dataLogs = [];\n    this.service\n    .getClassesMateriaisLogs(params)\n    .pipe(\n      finalize(() => {this.loaderNavbar = false, this.loaderModal = true})\n      )\n      .subscribe(res => {\n        if(Object.keys(res).length > 0) {\n          if(res.status == 200){\n            if(res['body']['responseCode'] == 200) {\n              this.loadingLogs = true;\n              this.noResultLogs = false;\n              this.dataLogs = res['body']['result'];\n            } else if (res['body']['responseCode'] ==  404){\n            this.noResultLogs = true;\n            this.pnotifyService.notice(\"Não há itens a serem exibidos\");\n          }\n        }\n      }\n    },\n    error => {\n      this.noResultLogs = true;\n      this.pnotifyService.error(\"Erro ao carregar Classes de Materiais\");\n    });\n  }\n\n  getSearchExcel(params: any): void {\n    this.loaderNavbar = true;\n    this.dataExcel = '';\n\n    this.service\n      .getClassesMateriais(params)\n      .pipe(finalize(() => (this.loaderNavbar = false)))\n      .subscribe(\n        (res: any) => {\n          if (Object.keys(res).length > 0) {\n            if (res['body']['responseCode'] === 200) {\n              this.dataExcel = res['body']['result'];\n              this.pnotifyService.success(this.dataExcel);\n            } else if (\n              res['body']['responseCode'] === 404\n            ) {\n              this.pnotifyService.notice('Nenhuma informação encontrada');\n            }\n          }\n        },\n        error => {\n          this.pnotifyService.error('Erro ao carregar dados para excel');\n        }\n      );\n  }\n\n  OnExcel(): void {\n    let params = this.getParams();\n\n    params['IN_GERA_RELA_EXCE'] = 1;\n    params['ID_USUA'] = this.idUsuario;\n\n    this.getSearchExcel(params);\n  }\n\n  /* Ordenação */\n  sort(key: string): void {\n    this.key = key;\n    this.reverse = !this.reverse;\n  }\n  /* Ordenação */\n  \n  /* Paginação Tabela Principal*/\n  onPageChanged(event: PageChangedEvent): void {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n  /* Paginação */\n  \n  /* Paginação Modal*/\n  onPageChangedA(event: PageChangedEvent): void {\n    this.beginA = (event.page - 1) * event.itemsPerPage;\n    this.endA = event.page * event.itemsPerPage;\n  }\n  /* Paginação Modal*/\n\n  /* Ordenação Modal*/\n  sortA(keyA: string): void {\n    this.keyA = keyA;\n    this.reverseA = !this.reverseA;\n  }\n  /* Ordenação Modal*/\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any): any {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string): any {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-full-screen\\n  *ngIf=\\\"loaderFullScreen\\\"\\n></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Classes de Materiais\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\"\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\n  >\\n    Filtrar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"OnExcel()\\\"\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\n  >\\n    Exportar Excel\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <advanced-filter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-2\\\">\\n          <label for=\\\"linhas\\\">Linha</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [multiple]=\\\"true\\\"\\n            [items]=\\\"linhas\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            [hideSelected]=\\\"true\\\"\\n            [closeOnSelect]=\\\"false\\\"\\n            (change)=\\\"getSubLinhas() + '' + getClasses()\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            bindLabel=\\\"NM_LINH\\\"\\n            bindValue=\\\"ID\\\"\\n            formControlName=\\\"ID_LINH\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2\\\">\\n          <label for=\\\"subLinhas\\\">Sublinha</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [multiple]=\\\"true\\\"\\n            [items]=\\\"subLinhas\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            [hideSelected]=\\\"true\\\"\\n            [closeOnSelect]=\\\"false\\\"\\n            (change)=\\\"getClasses()\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            bindLabel=\\\"NM_SUB_LINH\\\"\\n            bindValue=\\\"ID\\\"\\n            formControlName=\\\"ID_SUB_LINH\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2\\\">\\n          <label for=\\\"classes\\\">Classe</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [multiple]=\\\"true\\\"\\n            [items]=\\\"classes\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            [hideSelected]=\\\"true\\\"\\n            [closeOnSelect]=\\\"false\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            bindLabel=\\\"NM_CLAS\\\"\\n            bindValue=\\\"ID\\\"\\n            formControlName=\\\"ID_CLAS\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2\\\">\\n          <label for=\\\"situacoes\\\">Situação</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"situations\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            [hideSelected]=\\\"true\\\"\\n            [closeOnSelect]=\\\"true\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            bindLabel=\\\"NM_SITU\\\"\\n            bindValue=\\\"ID\\\"\\n            formControlName=\\\"IN_STAT\\\"\\n            [ngClass]=\\\"\\n              onFieldError('IN_STAT') + ' ' + onFieldRequired('IN_STAT')\\n            \\\"\\n            >\\n            <invalid-form-control\\n              [show]=\\\"onFieldInvalid('IN_STAT')\\\"\\n              message=\\\"Situação é obrigatório.\\\"\\n            >\\n            </invalid-form-control>\\n          </ng-select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <subtitles [data]=\\\"subtitles\\\" [show]=\\\"loading\\\"> </subtitles>\\n  <div class=\\\"table-responsive\\\" *ngIf=\\\"loading\\\">\\n    <custom-table [config]=\\\"tableConfig\\\">\\n      <ng-template let-thead #thead>\\n        <tr class=\\\"text-center\\\">\\n          <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('ID_REFE_ERP')\\\">\\n            Código\\n            <span *ngIf=\\\"key == 'ID_REFE_ERP'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n            <span *ngIf=\\\"key != 'ID_REFE_ERP'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n          </th>\\n          <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_CLAS')\\\">\\n            Classe\\n            <span *ngIf=\\\"key == 'NM_CLAS'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n            <span *ngIf=\\\"key != 'NM_CLAS'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n          </th>\\n          <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_SUB_LINH')\\\">\\n            Sublinha\\n            <span *ngIf=\\\"key == 'NM_SUB_LINH'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n            <span *ngIf=\\\"key != 'NM_SUB_LINH'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n          </th>\\n          <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_LINH')\\\">\\n            Linha\\n            <span *ngIf=\\\"key == 'NM_LINH'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n            <span *ngIf=\\\"key != 'NM_LINH'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n          </th>\\n          <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" width=\\\"4%\\\"></th>\\n          <th nowrap scope=\\\"col\\\" class=\\\"hover\\\" width=\\\"4%\\\"></th>\\n        </tr>\\n      </ng-template>\\n      <ng-template let-tbody #tbody>\\n        <tr *ngFor=\\\"let item of data | orderBy: key:reverse | slice: begin:end\\\">\\n          <td nowrap class=\\\"text-center\\\" [ngClass]=\\\"item.IN_STAT == 0 ? 'border-danger' : 'border-success'\\\">{{ item.ID_REFE_ERP }}</td>        \\n          <td nowrap class=\\\"text-center\\\">{{ item.NM_CLAS }}</td>        \\n          <td nowrap class=\\\"text-center\\\">{{ item.NM_SUB_LINH ? item.NM_SUB_LINH : \\\"-\\\" }}</td>         \\n          <td nowrap class=\\\"text-center\\\">{{ item.NM_LINH }}</td>              \\n          <td nowrap class=\\\"text-center\\\" width=\\\"4%\\\">\\n            <div>\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn-icon-sm\\\"\\n                [tooltip]=\\\"item.IN_STAT == 0 ? 'Ativar' : 'Desativar'\\\"\\n                (click)=\\\"onEdit(item)\\\"\\n              >\\n                <i [ngClass]=\\\"item.IN_STAT == 0 ? 'fas fa-toggle-off' : 'fas fa-toggle-on text-success'\\\"></i>\\n              </button>\\n            </div>\\n          </td>       \\n          <td nowrap  class=\\\"text-center\\\" width=\\\"4%\\\">\\n            <div>\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn-icon-sm\\\"\\n                tooltip=\\\"Logs\\\"\\n                (click)=\\\"onLogs(item) + ' ' + lgModal.show()\\\"\\n              >\\n                <i class=\\\"fas fa-external-link-alt text-primary\\\"></i>\\n              </button>\\n            </div>\\n          </td>       \\n        </tr>\\n      </ng-template>\\n    </custom-table>\\n  </div>\\n  <div class=\\\"col-12 mt-2\\\" *ngIf=\\\"data.length > itemsPerPage && loading\\\">\\n    Exibindo {{ begin + 1 }} a {{ end }} de {{ data?.length }}\\n    <div class=\\\"d-flex\\\">\\n      <pagination\\n        [maxSize]=\\\"10\\\"\\n        [totalItems]=\\\"data?.length\\\"\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        [(ngModel)]=\\\"currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\"\\n        nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n  <div\\n    *ngIf=\\\"noResult\\\"\\n    class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\n    style=\\\"height: 80%;\\\"\\n  >\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\\n<div\\n  bsModal\\n  #lgModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-sizes-name1\\\"\\n>\\n  <div class=\\\"modal-dialog modal-xl\\\" [hidden]=\\\"!loaderModal\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n          LOGS CLASSES DE MATERIAIS\\n        </h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right\\\"\\n          (click)=\\\"lgModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <custom-table *ngIf=\\\"loadingLogs\\\">\\n            <ng-template #thead let-thead>\\n              <tr class=\\\"text-center\\\">\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('ID_REFE_ERP')\\\">\\n                  Código\\n                  <span *ngIf=\\\"keyA == 'ID_REFE_ERP'\\\"\\n                    ><i\\n                      [ngClass]=\\\"\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\n                      \\\"\\n                    ></i\\n                  ></span>\\n                  <span *ngIf=\\\"keyA != 'ID_REFE_ERP'\\\"\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                  ></span>\\n                </th>\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('NM_CLAS')\\\">\\n                  Classe\\n                  <span *ngIf=\\\"keyA == 'NM_CLAS'\\\"\\n                    ><i\\n                      [ngClass]=\\\"\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\n                      \\\"\\n                    ></i\\n                  ></span>\\n                  <span *ngIf=\\\"keyA != 'NM_CLAS'\\\"\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                  ></span>\\n                </th>\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('NM_SUB_LINH')\\\">\\n                  Sub Linha\\n                  <span *ngIf=\\\"keyA == 'NM_SUB_LINH'\\\"\\n                    ><i\\n                      [ngClass]=\\\"\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\n                      \\\"\\n                    ></i\\n                  ></span>\\n                  <span *ngIf=\\\"keyA != 'NM_SUB_LINH'\\\"\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                  ></span>\\n                </th>\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('NM_LINH')\\\">\\n                  Linha\\n                  <span *ngIf=\\\"keyA == 'NM_LINH'\\\"\\n                    ><i\\n                      [ngClass]=\\\"\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\n                      \\\"\\n                    ></i\\n                  ></span>\\n                  <span *ngIf=\\\"keyA != 'NM_LINH'\\\"\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                  ></span>\\n                </th>\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('DS_STAT')\\\">\\n                  Situação\\n                  <span *ngIf=\\\"keyA == 'DS_STAT'\\\"\\n                    ><i\\n                      [ngClass]=\\\"\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\n                      \\\"\\n                    ></i\\n                  ></span>\\n                  <span *ngIf=\\\"keyA != 'DS_STAT'\\\"\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                  ></span>\\n                </th>\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('DT_ACAO')\\\">\\n                  Data Ação\\n                  <span *ngIf=\\\"keyA == 'DT_ACAO'\\\"\\n                    ><i\\n                      [ngClass]=\\\"\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\n                      \\\"\\n                    ></i\\n                  ></span>\\n                  <span *ngIf=\\\"keyA != 'DT_ACAO'\\\"\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                  ></span>\\n                </th>\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('NM_ACAO')\\\">\\n                  Ação\\n                  <span *ngIf=\\\"keyA == 'NM_ACAO'\\\"\\n                    ><i\\n                      [ngClass]=\\\"\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\n                      \\\"\\n                    ></i\\n                  ></span>\\n                  <span *ngIf=\\\"keyA != 'NM_ACAO'\\\"\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                  ></span>\\n                </th>\\n                <th scope=\\\"col\\\" (click)=\\\"sortA('NM_USUA')\\\">\\n                  Usuário\\n                  <span *ngIf=\\\"keyA == 'NM_USUA'\\\"\\n                    ><i\\n                      [ngClass]=\\\"\\n                        reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\n                      \\\"\\n                    ></i\\n                  ></span>\\n                  <span *ngIf=\\\"keyA != 'NM_USUA'\\\"\\n                    ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n                  ></span>\\n                </th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let item of dataLogs | orderBy: keyA:reverseA | slice: beginA:endA; let i = index\\\">\\n                <td class=\\\"text-center\\\">{{ item.ID_REFE_ERP }}</td>\\n                <td class=\\\"text-center\\\">{{ item.NM_CLAS }}</td>\\n                <td class=\\\"text-center\\\">{{ item.ID_SUB_LINH ? item.ID_SUB_LINH : '-' }}</td>\\n                <td class=\\\"text-center\\\">{{ item.NM_LINH }}</td>\\n                <td class=\\\"text-center\\\">{{ item.DS_STAT }}</td>\\n                <td class=\\\"text-center\\\">\\n                  {{ item.DT_ACAO | date: 'dd/MM/yyyy HH:mm' }}\\n                </td>\\n                <td class=\\\"text-center\\\">{{ item.NM_ACAO }}</td>\\n                <td class=\\\"text-center\\\">{{ item.NM_USUA }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </div>\\n        <div class=\\\"col-12 mt-2\\\" *ngIf=\\\"dataLogs.length > itemsPerPage && loadingLogs\\\">\\n          Exibindo {{ beginA + 1 }} a {{ endA }} de {{ dataLogs?.length }}\\n          <pagination\\n            [maxSize]=\\\"10\\\"\\n            [totalItems]=\\\"dataLogs?.length\\\"\\n            (pageChanged)=\\\"onPageChangedA($event)\\\"\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n            [boundaryLinks]=\\\"true\\\"\\n            [(ngModel)]=\\\"currentPageA\\\"\\n            previousText=\\\"&lsaquo;\\\"\\n            nextText=\\\"&rsaquo;\\\"\\n            firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\"\\n          >\\n          </pagination>\\n        </div>\\n        <div\\n          *ngIf=\\\"noResultLogs\\\"\\n          class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\n          style=\\\"height: 80%;\\\"\\n        >\\n          <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AbastecimentoCadastrosClassesMateriaisService {\n\n  private readonly BASE_URL = environment.API;\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  getLinhas(params): Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/linhas`,{\n      params: {\n        IN_STAT: params['idSituacao']\n      },\n      observe: \"response\"\n    });\n  }\n\n  getSubLinhas(params): Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/sub-linhas`,{\n      params: {\n        ID_LINH: params['descricaoLinhas'].toString(),\n        IN_STAT:params['idSituacao']\n      },\n      observe: \"response\"\n    });\n  }\n\n  getClasses(params): Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/classes`, {\n      params: {\n        ID_LINH: params['descricaoLinhas'].toString(),\n        ID_SUB_LINH: params['idSubLinha'].toString(),\n        IN_STAT: params['idSituacao']\n      },\n      observe: \"response\"\n    });\n  }\n\n  getClassesMateriais(_params): Observable<any> {\n    const params = {\n      ID_LINH: _params['ID_LINH'] ? _params['ID_LINH'].toString() : '',\n      ID_SUB_LINH: _params['ID_SUB_LINH'] ? _params['ID_SUB_LINH'].toString() : '',\n      ID_CLAS: _params['ID_CLAS'] ? _params['ID_CLAS'].toString() : '',\n      IN_STAT: _params['IN_STAT'] ?? '',\n      IN_GERA_RELA_EXCE: _params['IN_GERA_RELA_EXCE'] ?? '',\n      ID_USUA: _params['ID_USUA'] ?? ''\n    }\n\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/classes`, {\n      params,\n      observe: \"response\"\n    });\n  }\n\n  getClassesMateriaisLogs(params): Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/cadastros/classes-auditoria`, {\n      params,\n      observe: \"response\"\n    });\n  }\n\n  postClasses(record): Observable<any> {\n    return this.httpClient.post(`${this.BASE_URL}/abastecimento/cadastros/classe-atualizar`,\n      record\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AbastecimentoCadastrosClassesMateriaisComponent } from './classes-materiais.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        component: AbastecimentoCadastrosClassesMateriaisComponent\n      },\n    ]\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AbastecimentoCadastrosClassesMateriaisRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { TooltipModule, PaginationModule, TabsModule, ModalModule } from 'ngx-bootstrap';\nimport { OrderModule } from 'ngx-order-pipe';\n\nimport { AbastecimentoCadastrosClassesMateriaisRoutingModule } from './classes-materiais-routing.module';\nimport { AbastecimentoCadastrosClassesMateriaisComponent } from './classes-materiais.component';\n\n\n@NgModule({\n  declarations: [\n    AbastecimentoCadastrosClassesMateriaisComponent\n  ],\n  imports: [\n    CommonModule,\n    AbastecimentoCadastrosClassesMateriaisRoutingModule,\n    NotFoundModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    TooltipModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    NgSelectModule,\n    TemplatesModule,\n    OrderModule\n  ]\n})\nexport class AbastecimentoCadastrosClassesMateriaisModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWJhc3RlY2ltZW50by9jYWRhc3Ryb3MvY2xhc3Nlcy1tYXRlcmlhaXMvY2xhc3Nlcy1tYXRlcmlhaXMuY29tcG9uZW50LnNjc3MifQ== */\";"]}