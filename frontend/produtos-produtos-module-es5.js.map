{"version":3,"sources":["webpack:///src/app/modules/tecnologia-informacao/estoque/produtos/lista/lista.component.html","webpack:///src/app/modules/tecnologia-informacao/estoque/produtos/lista/lista.component.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/produtos/cadastro/cadastro.component.html","webpack:///src/app/modules/tecnologia-informacao/estoque/produtos/lista/lista.component.scss","webpack:///src/app/modules/tecnologia-informacao/estoque/produtos/produtos-routing.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/produtos/cadastro/cadastro.component.scss","webpack:///src/app/modules/tecnologia-informacao/estoque/produtos/cadastro/cadastro.component.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/produtos/produtos.module.ts"],"names":["TecnologiaInformacaoEstoqueProdutosListaComponent","route","pnotify","activatedRoute","produtosService","modeloService","formBuilder","confirmModalService","routerService","dateService","marcasService","tipoProdutoService","loading","loadingNavBar","loadingTipoProduto","loadingModelo","tipoProduto","modelos","marca","tableConfig","subtitleBorder","tipos","cod","nome","subtitles","id","text","color","itemsPerPage","totalItems","currentPage","buildForm","setBreadCrumb","onActivatedRoute","getTiposProduto","getModelos","getMarcas","$activatedRouteSubscription","unsubscribe","params","_params","IN_STAT","IN_PAGI","pipe","subscribe","response","status","body","onFilter","error","queryParams","_response","getBase64UrlParams","form","patchValue","hasOwnProperty","TT_REGI_PAGI","getProdutos","getParams","group","ID_TEIN_ESTO_PROD","ID_TEIN_ESTO_PRMO","ID_TEIN_ESTO_PRTP","ID_TEIN_ESTO_PRMA","NM_PROD","NM_TIPO","NM_MODE","PAGI","TIME","Date","getTime","snapshot","idSubModulo","breadCrumbTree","descricao","routerLink","get","setValue","navigate","relativeTo","setBase64UrlParams","produtos","noResult","loadingMarca","stat","confirmChange","asObservable","result","postProdutos","success","showConfirm","event","page","_obj","value","prop","convertToUrlDate","selector","template","routes","path","component","TecnologiaInformacaoEstoqueProdutosModuleRoutingModule","imports","forChild","exports","TecnologiaInformacaoEstoqueProdutosCadastroComponent","router","titleService","atividadesService","tipoProdutosService","registrarAcesso","setFormBuilder","appTitle","setTitle","getProduto","produto","IN_CODI_SERI","message","required","DS_UNID_MEDI","TT_PESO_UNIT","DS_OBSE","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","reset","TecnologiaInformacaoEstoqueProdutosModule","declarations","forRoot","providers","provide","useValue"],"mappings":"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","file":"produtos-produtos-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Produtos\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\r\\n              <label for=\\\"ID_TEIN_ESTO_PROD\\\">ID</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"ID_TEIN_ESTO_PROD\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n                formControlName=\\\"ID_TEIN_ESTO_PROD\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4 pl-0 \\\">\\r\\n              <label for=\\\"tipoProduto\\\">Tipo de Produto</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"tipoProduto\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                dropdownPosition=\\\"bottom\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingTipoProduto\\\"\\r\\n                labelForId=\\\"ID_TEIN_ESTO_PRTP\\\"\\r\\n                bindLabel=\\\"NM_TIPO\\\"\\r\\n                bindValue=\\\"ID_TEIN_ESTO_PRTP\\\"\\r\\n                id=\\\"ID_TEIN_ESTO_PRTP\\\"\\r\\n                formControlName=\\\"ID_TEIN_ESTO_PRTP\\\"\\r\\n                (change)=\\\"getModelos({'ID_TEIN_ESTO_PRTP': $event?.ID_TEIN_ESTO_PRTP || ''})\\\"\\r\\n                >\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6 pl-0\\\">\\r\\n              <label for=\\\"marca\\\">Marca</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"marca\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                dropdownPosition=\\\"bottom\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingMarca\\\"\\r\\n                labelForId=\\\"ID_TEIN_ESTO_PRMA\\\"\\r\\n                bindLabel=\\\"NM_MRCA\\\"\\r\\n                bindValue=\\\"ID_TEIN_ESTO_PRMA\\\"\\r\\n                id=\\\"ID_TEIN_ESTO_PRMA\\\"\\r\\n                formControlName=\\\"ID_TEIN_ESTO_PRMA\\\"\\r\\n                >\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6 pl-0\\\">\\r\\n              <label for=\\\"modelos\\\">Modelo</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"modelos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                dropdownPosition=\\\"bottom\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingModelo\\\"\\r\\n                labelForId=\\\"ID_TEIN_ESTO_PRMO\\\"\\r\\n                bindLabel=\\\"NM_MODE\\\"\\r\\n                bindValue=\\\"ID_TEIN_ESTO_PRMO\\\"\\r\\n                id=\\\"ID_TEIN_ESTO_PRMO\\\"\\r\\n                formControlName=\\\"ID_TEIN_ESTO_PRMO\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\r\\n              </ng-template>\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1 pl-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div>\\r\\n      <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">ID </th>\\r\\n            <th scope=\\\"col\\\">Produto</th>\\r\\n            <th scope=\\\"col\\\">Tipo do Produto</th>\\r\\n            <th scope=\\\"col\\\">Modelo do Produto</th>\\r\\n            <th scope=\\\"col\\\">Marca</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:80px\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let produto of produtos; let i = index\\\">\\r\\n            <td [ngClass]=\\\"produto.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n            {{produto.ID_TEIN_ESTO_PROD}}\\r\\n            </td>\\r\\n            <td>{{ produto.NM_PROD | uppercase }}</td>\\r\\n            <td>{{ produto.NM_TIPO | uppercase }}</td>\\r\\n            <td>{{ produto.NM_MODE | uppercase }}</td>\\r\\n            <td>{{ produto.NM_MRCA | uppercase }}</td>\\r\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n              <span class=\\\"mr-3\\\" [tooltip]=\\\"produto.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(produto)\\\">\\r\\n                  <i [ngClass]=\\\"produto.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', produto.ID_TEIN_ESTO_PROD]\\\" >\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table><br>\\r\\n    </div>\\r\\n    <div>\\r\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","import { TecnologiaInformacaoEstoqueMarcasService } from './../../marcas/services/marcas.service';\r\nimport { ITecnologiaInformacaoEstoqueMarcas } from './../../marcas/models/marcas';\r\n//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\r\nimport { PageChangedEvent } from 'ngx-bootstrap';\r\n\r\n//servicos\r\nimport { TecnologiaInformacaoEstoqueModeloService } from './../../modelo/services/modelo.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { TecnologiaInformacaoEstoqueTipoProdutosService } from '../../tipo-produto/services/tipo-produto.service';\r\nimport { TecnologiaInformacaoEstoqueProdutosService } from './../services/produtos.service';\r\n//Interfaces\r\nimport { ITecnologiaInformacaoEstoqueProduto } from './../models/produto';\r\nimport { ITecnologiaInformacaoTipoProduto } from '../../../estoque/tipo-produto/models/tipoProduto';\r\nimport { ITecnologiaInformacaoEstoqueModelo } from '../../../estoque/modelo/models/modelo';\r\n\r\n@Component({\r\n  selector: 'tecnologia-informacao-estoque-cadastro-produtos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class TecnologiaInformacaoEstoqueProdutosListaComponent\r\n  implements OnInit, OnDestroy {\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n\r\n  idSubModulo: number;\r\n  produtos: Array<ITecnologiaInformacaoEstoqueProduto>;\r\n  noResult: boolean;\r\n  loadingMarca: boolean;\r\n  loading = true; //Loading FullPage\r\n  loadingNavBar = false; //Loading do NAVBAR\r\n  loadingTipoProduto = false;\r\n  loadingModelo = false;\r\n  tipoProduto: ITecnologiaInformacaoTipoProduto[] = [];\r\n  modelos: ITecnologiaInformacaoEstoqueModelo[] = [];\r\n  marca: ITecnologiaInformacaoEstoqueMarcas[] = [];\r\n  tableConfig: Partial<CustomTableConfig> = { subtitleBorder: true };\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n\r\n  // Tipos de Situação dos Produtos (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '0',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private produtosService: TecnologiaInformacaoEstoqueProdutosService,\r\n    private modeloService: TecnologiaInformacaoEstoqueModeloService,\r\n    private formBuilder: FormBuilder,\r\n    private confirmModalService: ConfirmModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService,\r\n    private marcasService: TecnologiaInformacaoEstoqueMarcasService,\r\n    private tipoProdutoService: TecnologiaInformacaoEstoqueTipoProdutosService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.getTiposProduto();\r\n    this.getModelos();\r\n    this.getMarcas();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  getTiposProduto(params?: Partial<ITecnologiaInformacaoTipoProduto>) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = '1';\r\n    _params.IN_PAGI = '0';\r\n\r\n    this.loadingTipoProduto = true;\r\n    this.tipoProdutoService\r\n      .getTiposProduto(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTipoProduto = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.tipoProduto = response.body['data'];\r\n        }\r\n      });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  getModelos(params?: Partial<ITecnologiaInformacaoEstoqueModelo>) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = '1';\r\n    _params.IN_PAGI = '0';\r\n    this.loadingModelo = true;\r\n    this.modeloService\r\n      .getModelos(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingModelo = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.modelos = response.body['data'];\r\n          } else {\r\n            this.modelos = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error('Erro ao carregar modelos');\r\n        }\r\n      );\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n        this.getProdutos(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_TEIN_ESTO_PROD: [null],\r\n      ID_TEIN_ESTO_PRMO: [null],\r\n      ID_TEIN_ESTO_PRTP: [null],\r\n      ID_TEIN_ESTO_PRMA: [null],\r\n      NM_PROD: [null],\r\n      NM_TIPO: [null],\r\n      NM_MODE: [null],\r\n      IN_STAT: [null],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      PAGI: [1],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/tecnologia-informacao/home`,\r\n      },\r\n      {\r\n        descricao: 'Estoque',\r\n        routerLink: `/tecnologia-informacao/estoque/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Produtos',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getProdutos(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n\r\n    this.produtosService\r\n      .getProdutos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.produtos = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.produtos = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  getMarcas(params?: Partial<ITecnologiaInformacaoEstoqueMarcas>) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = '1';\r\n    _params.IN_PAGI = '0';\r\n\r\n    this.loadingMarca = true;\r\n    this.marcasService\r\n      .getMarcas(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingMarca = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.marca = response.body['data'];\r\n          } else {\r\n            this.marca = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.marca = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  changeType(produtos: ITecnologiaInformacaoEstoqueProduto) {\r\n    const stat = produtos.IN_STAT == '1' ? '0' : '1';\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          produtos.IN_STAT = stat;\r\n          return this.produtosService.postProdutos(produtos);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          produtos.IN_STAT = produtos.IN_STAT == '1' ? '0' : '1';\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == '1')\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Cadastro de Produtos\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false\\\"\\r\\n    (click)=\\\"postProdutos()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Produto</legend>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col pl-0\\\">\\r\\n            <label for=\\\"produtoNome\\\">Nome do produto</label>\\r\\n            <input\\r\\n              id=\\\"produtoNome\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"NM_PROD\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('NM_PROD')\\\"  \\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col pl-0\\\">\\r\\n            <label for=\\\"marca\\\">Marca</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"marca\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              dropdownPosition=\\\"bottom\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              [loading]=\\\"loadingMarca\\\"\\r\\n              labelForId=\\\"ID_TEIN_ESTO_PRMA\\\"\\r\\n              bindLabel=\\\"NM_MRCA\\\"\\r\\n              bindValue=\\\"ID_TEIN_ESTO_PRMA\\\"\\r\\n              id=\\\"ID_TEIN_ESTO_PRMA\\\"\\r\\n              formControlName=\\\"ID_TEIN_ESTO_PRMA\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('ID_TEIN_ESTO_PRMA')\\\"\\r\\n              >\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ID_TEIN_ESTO_PRMA')\\\" message=\\\"Marca é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col pl-0\\\">\\r\\n            <label for=\\\"tipoProduto\\\">Tipo de Produto</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"tipoProduto\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              dropdownPosition=\\\"bottom\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              [loading]=\\\"loadingTipoProduto\\\"\\r\\n              labelForId=\\\"ID_TEIN_ESTO_PRTP\\\"\\r\\n              bindLabel=\\\"NM_TIPO\\\"\\r\\n              bindValue=\\\"ID_TEIN_ESTO_PRTP\\\"\\r\\n              id=\\\"ID_TEIN_ESTO_PRTP\\\"\\r\\n              formControlName=\\\"ID_TEIN_ESTO_PRTP\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('ID_TEIN_ESTO_PRTP')\\\"\\r\\n              (change)=\\\"getModelos({'ID_TEIN_ESTO_PRTP': $event?.ID_TEIN_ESTO_PRTP || ''})\\\"\\r\\n              >\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ID_TEIN_ESTO_PRTP')\\\" message=\\\"Tipo de Produto é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col pl-0\\\">\\r\\n            <label for=\\\"modelos\\\">Modelo</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"modelos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              dropdownPosition=\\\"bottom\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              [loading]=\\\"loadingModelo\\\"\\r\\n              labelForId=\\\"ID_TEIN_ESTO_PRMO\\\"\\r\\n              bindLabel=\\\"NM_MODE\\\"\\r\\n              bindValue=\\\"ID_TEIN_ESTO_PRMO\\\"\\r\\n              id=\\\"ID_TEIN_ESTO_PRMO\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('ID_TEIN_ESTO_PRMO')\\\"\\r\\n              formControlName=\\\"ID_TEIN_ESTO_PRMO\\\"\\r\\n              >\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ID_TEIN_ESTO_PRMO')\\\" message=\\\"Modelo do Item é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\r\\n            <label for=\\\"DS_UNID_MEDI\\\">Unidade de Medida</label>\\r\\n            <select \\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"DS_UNID_MEDI\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              formControlName=\\\"DS_UNID_MEDI\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('DS_UNID_MEDI')\\\"\\r\\n            >\\r\\n              <option value=\\\"KG\\\">KG</option>\\r\\n              <option value=\\\"TON\\\">TON</option>\\r\\n              <option value=\\\"PC\\\">PC</option>\\r\\n              <option value=\\\"UN\\\">UN</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\r\\n            <label for=\\\"TT_PESO_UNIT\\\">Peso Unitário</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"TT_PESO_UNIT\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('TT_PESO_UNIT')\\\"\\r\\n              formControlName=\\\"TT_PESO_UNIT\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: ' KG ' , thousands: '.', decimal: ',' , precision: 3 }\\\"\\r\\n              placeholder=\\\"INFORME O PESO EM KG...\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col pl-0\\\">\\r\\n            <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"IN_STAT\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('IN_STAT')\\\">\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n              <option value=\\\"0\\\">Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('IN_STAT')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox\\\">\\r\\n              <input\\r\\n                type=\\\"checkbox\\\"\\r\\n                class=\\\"custom-control-input\\\"\\r\\n                id=\\\"IN_CODI_SERI\\\"\\r\\n                formControlName=\\\"IN_CODI_SERI\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"IN_CODI_SERI\\\">Produto com número de série</label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6 pl-0\\\"></div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\r\\n            <legend>Observação</legend>\\r\\n            <div class=\\\"form-row justify-content-center\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n                <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvcHJvZHV0b3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n//components\r\nimport { TecnologiaInformacaoEstoqueProdutosListaComponent } from './lista/lista.component';\r\nimport { TecnologiaInformacaoEstoqueProdutosCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TecnologiaInformacaoEstoqueProdutosListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: TecnologiaInformacaoEstoqueProdutosCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: TecnologiaInformacaoEstoqueProdutosCadastroComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TecnologiaInformacaoEstoqueProdutosModuleRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvcHJvZHV0b3MvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import { TecnologiaInformacaoEstoqueMarcasService } from './../../marcas/services/marcas.service';\r\nimport { TecnologiaInformacaoEstoqueModeloService } from './../../modelo/services/modelo.service';\r\nimport { TecnologiaInformacaoEstoqueTipoProdutosService } from './../../tipo-produto/services/tipo-produto.service';\r\n//services\r\nimport { TecnologiaInformacaoEstoqueProdutosService } from './../services/produtos.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n//angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n\r\n//modelos\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\r\n\r\n//rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n//interfaces\r\nimport { ITecnologiaInformacaoEstoqueProduto } from './../models/produto';\r\nimport { ITecnologiaInformacaoEstoqueModelo } from '../../../estoque/modelo/models/modelo';\r\nimport { ITecnologiaInformacaoTipoProduto } from '../../../estoque/tipo-produto/models/tipoProduto';\r\nimport { ITecnologiaInformacaoEstoqueMarcas } from '../../marcas/models/marcas';\r\n\r\n@Component({\r\n  selector: 'tecnologia-informacao-estoque-produtos-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class TecnologiaInformacaoEstoqueProdutosCadastroComponent\r\n  implements OnInit, OnDestroy {\r\n  noResult: boolean;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n  loadingModelo = false;\r\n  loadingTipoProduto: boolean;\r\n  loadingMarca: boolean;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  modelos: Array<ITecnologiaInformacaoEstoqueModelo>;\r\n  $activatedRouteSubscription: Subscription;\r\n  tipoProduto: ITecnologiaInformacaoTipoProduto[] = [];\r\n  marca: ITecnologiaInformacaoEstoqueMarcas[] = [];\r\n  produtos: ITecnologiaInformacaoEstoqueProduto[] = [];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n    private modeloService: TecnologiaInformacaoEstoqueModeloService,\r\n    private tipoProdutosService: TecnologiaInformacaoEstoqueTipoProdutosService,\r\n    private marcasService: TecnologiaInformacaoEstoqueMarcasService,\r\n    private produtosService: TecnologiaInformacaoEstoqueProdutosService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n    this.getTiposProduto();\r\n    this.getModelos();\r\n    this.getMarcas();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.appTitle = 'Cadastro';\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/tecnologia-informacao/home',\r\n      },\r\n      {\r\n        descricao: 'Estoque',\r\n        routerLink: `/tecnologia-informacao/estoque/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Produtos',\r\n        routerLink: `./../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //Consumir informações que estão na rota para editar\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  getProduto(id: number){\r\n    this.loading = true;\r\n    this.produtosService\r\n      .getProduto(id)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n\r\n          if (response.status != 200){\r\n            this.pnotify.error();\r\n            return\r\n          }\r\n          let produto = response.body[\"data\"];\r\n          produto.IN_CODI_SERI = produto?.IN_CODI_SERI == '1' ? true : false\r\n          this.form.patchValue(produto);\r\n\r\n        },\r\n        error => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  getTiposProduto(params?: Partial<ITecnologiaInformacaoTipoProduto>) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = '1';\r\n    _params.IN_PAGI = '0';\r\n\r\n    this.loadingTipoProduto = true;\r\n    this.tipoProdutosService\r\n      .getTiposProduto(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTipoProduto = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.tipoProduto = response.body['data'];\r\n          } else {\r\n            this.tipoProduto = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.tipoProduto = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getMarcas(params?: Partial<ITecnologiaInformacaoEstoqueMarcas>) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = '1';\r\n    _params.IN_PAGI = '0';\r\n\r\n    this.loadingMarca = true;\r\n    this.marcasService\r\n      .getMarcas(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingMarca = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.marca = response.body['data'];\r\n          } else {\r\n            this.marca = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.marca = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getModelos(params?: Partial<ITecnologiaInformacaoEstoqueModelo>) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = '1';\r\n    _params.IN_PAGI = '0';\r\n\r\n    this.loadingModelo = true;\r\n    this.modeloService\r\n      .getModelos(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingModelo = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.modelos = response.body['data'];\r\n          } else {\r\n            this.modelos = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.modelos = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.params\r\n      .subscribe(\r\n        response => {\r\n          if(response.hasOwnProperty('id')){\r\n            this.getProduto(response.id);\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      ID_TEIN_ESTO_PRMO: [null, [Validators.required]],\r\n      ID_TEIN_ESTO_PRTP: [null, [Validators.required]],\r\n      ID_TEIN_ESTO_PRMA: [null],\r\n      NM_PROD: [null, [Validators.required]],\r\n      DS_UNID_MEDI: ['UN', [Validators.required]],\r\n      TT_PESO_UNIT: [null],\r\n      IN_STAT: ['1', [Validators.required]],\r\n      NM_TIPO: [null],\r\n      NM_MODE: [null],\r\n      IN_CODI_SERI: [null],\r\n      DS_OBSE: [null],\r\n    });\r\n  }\r\n\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postProdutos() {\r\n    this.loadingNavBar = true;\r\n    let params = this.form.value;\r\n    params.IN_CODI_SERI = params?.IN_CODI_SERI ? '1' : '0'\r\n    this.produtosService\r\n      .postProdutos(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.form.reset();\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try{\r\n            this.pnotify.error(error.error.message)\r\n          }catch(error){\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport ptBr from '@angular/common/locales/pt';\r\nimport { defineLocale, ptBrLocale, BsDatepickerModule } from 'ngx-bootstrap';\r\nregisterLocaleData(ptBr);\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { TecnologiaInformacaoEstoqueProdutosListaComponent } from './lista/lista.component';\r\nimport { TecnologiaInformacaoEstoqueProdutosModuleRoutingModule } from './produtos-routing.module';\r\nimport { TecnologiaInformacaoEstoqueProdutosCadastroComponent } from './cadastro/cadastro.component';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TecnologiaInformacaoEstoqueProdutosListaComponent,\r\n    TecnologiaInformacaoEstoqueProdutosCadastroComponent,\r\n  ],\r\n  imports: [\r\n    TecnologiaInformacaoEstoqueProdutosModuleRoutingModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    NgBrazil,\r\n    TextMaskModule,\r\n    CurrencyMaskModule,\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\r\n})\r\nexport class TecnologiaInformacaoEstoqueProdutosModule {}\r\n"]}