{"version":3,"sources":["webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/formulario.module.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/lista/lista.component.scss","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/lista/lista.component.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/endereco/endereco.component.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/formulario.component.html","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/contato/contato.component.scss","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/contato/contato.service.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/painel-bobinas.service.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/lista/lista.component.html","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/endereco/endereco.component.html","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/contato/contato.component.html","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/painel-bobinas-routing.module.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/endereco/endereco.component.scss","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/painel-bobinas.module.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/contato/contato.component.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/endereco/endereco.service.ts"],"names":["ComercialCicloVendasPainelBobinasFormularioModule","declarations","imports","forRoot","exports","entryComponents","providers","ComercialPainelBobinasFormularioComponent","formBuilder","authService","pnotify","transportadoraService","activatedRoute","router","routerService","cotacoesFormularioService","titleService","location","atividadesService","modalService","painelBobinasService","clientesService","contatoDetalhesService","enderecoDetalhesService","formasPagamentoService","MASKS","user","getCurrentUser","loading","loadingNavBar","breadCrumbTree","materiaisSelecionados","clientes","contatos","transportadoras","locaisEntrega","itemsPerPage","totalItems","currentPage","begin","end","formasPagamento","tableConfig","subtitleBorder","registrarAcesso","getLocalStorage","setBreadCrumb","setFormBuilder","onActivatedRoute","getFormasPagamento","getTransportadoras","subscribe","appTitle","id","snapshot","params","idSubModulo","setTitle","descricao","routerLink","$activatedRouteSubscription","unsubscribe","unsetLoaderEvents","loaderDetalhesContatoSubscription","loaderDetalhesEnderecoSubscription","queryParams","response","tipoForm","getBase64UrlParams","form","get","disable","materiais","localStorage","getItem","JSON","parse","atob","error","removeItem","back","group","nomeCliente","value","disabled","required","codTransportadora","nfMae","codFormaPagamento","valorMaterial","aliquotaIcms","codCliente","codContato","codEndereco","formClientes","buscarPor","pesquisa","pagina","situacao","registros","loadingFormasPagamento","getListaFormasPagamento","tipoConsulta","pipe","success","data","notice","loadingClientes","noClientes","length","getClientes","next","responseCode","template","modalRef","show","animated","hide","field","onFieldInvalid","status","touched","formControl","controls","validator","validationResult","event","setValue","page","request","promise","forEach","material","forms","push","postPainelBobinas","setParams","Promise","resolve","responses","navigate","relativeTo","message","_params","empresa","codEmpresa","seqLote","sequenciaLote","matricula","info","idVendedor","valorUnitario","cliente","razaoSocial","getContatos","getLocaisEntrega","loadingContato","enable","_contatos","i","nomeCompleto","idSeqTid","nomeContato","locaisEntregaLoader","_enderecos","enderecos","_enderecosAguardando","enderecosAguardando","formatLocalEntrega","tipo","localEntrega","endereco","bairro","cidade","uf","cep","loadingTransportadora","getListaTransportadoras","hasOwnProperty","mensagem","loaderNavbar","showModal","selector","ComercialPainelBobinasListaComponent","route","confirmModalService","dateService","formularioService","noResult","empresas","qtMateriais","cardCounterConfig","showDecimals","format","tipos","cod","nome","subtitles","text","color","getEmpresas","buildForm","_response","patchValue","onFilter","lote","categoriaProduto","TIME","Date","getTime","setBase64UrlParams","getParams","getListaBobinas","checked","filter","setItem","btoa","stringify","map","backdrop","codMaterial","ID","el","o","Object","assign","includes","loadDependencies","result","hideModal","toString","_obj","prop","convertToUrlDate","abstractControl","abstractControlField","controlName","onFieldRequired","ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent","bsModalRef","time","convertMysqlTime","ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService","pnotifyService","getPNotify","emit","getContato","modalConfig","initialState","contato","providedIn","ComercialPainelBobinasService","http","API","httpParams","param","append","post","ComercialService","routes","path","component","redirectTo","pathMatch","ComercialPainelBobinasModuleRoutingModule","forChild","ComercialPainelBobinasModule","provide","useValue","ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent","ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService","clienteService","getEndereco"],"mappings":"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","file":"painel-bobinas-painel-bobinas-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n// ngx-bootstrap\r\nimport { PopoverModule } from 'ngx-bootstrap/popover';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ModalModule, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// angular2-counto\r\nimport { CountoModule } from 'angular2-counto';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialTemplatesModule } from '../../../templates/templates.module';\r\n\r\n//components\r\nimport { ComercialPainelBobinasFormularioComponent } from './formulario.component';\r\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent } from './modal/contato/contato.component';\r\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent } from './modal/endereco/endereco.component';\r\n\r\n//services\r\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService } from './modal/contato/contato.service';\r\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService } from './modal/endereco/endereco.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialPainelBobinasFormularioComponent,\r\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent,\r\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    PopoverModule.forRoot(),\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    CarouselModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    CountoModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ComercialTemplatesModule,\r\n  ],\r\n  exports: [\r\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent,\r\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent,\r\n  ],\r\n  entryComponents: [\r\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent,\r\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent,\r\n  ],\r\n  providers: [\r\n    BsModalRef,\r\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService,\r\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService,\r\n  ],\r\n})\r\nexport class ComercialCicloVendasPainelBobinasFormularioModule {}\r\n","import { ComercialCadastrosTransportadoraService } from './../../../cadastros/transportadoras/transportadoras.service';\r\nimport { ComercialCicloVendasCotacoesFormularioService } from './../../cotacoes/formulario/formulario.service';\r\nimport { FormasPagamento } from './../../../cadastros/formas-pagamento/models/formas-pagamento';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\nimport { MASKS } from 'ng-brazil';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { IComercialPainelBobinas } from './../models/painel-bobinas';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ComercialPainelBobinasService } from '../painel-bobinas.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n//interfaces\r\n\r\nimport { Subscription, forkJoin } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\n\r\n//servicos\r\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService } from './modal/contato/contato.service';\r\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService } from './modal/endereco/endereco.service';\r\nimport { ComercialCadastrosFormasPagamentoService } from '../../../cadastros/formas-pagamento/formas-pagamento.service';\r\nimport { AuthService } from 'src/app/shared/services/core/auth.service';\r\n\r\n@Component({\r\n  selector: 'comercial-ciclo-vendas-painel-bobinas-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialPainelBobinasFormularioComponent\r\n  implements OnInit, OnDestroy\r\n{\r\n  public MASKS = MASKS;\r\n  private user = this.authService.getCurrentUser();\r\n  noResult: boolean;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  formClientes: FormGroup;\r\n  materiaisSelecionados: Array<any> = [];\r\n  appTitle: string;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  loadingContato: boolean;\r\n  loadingClientes: boolean;\r\n  loadingFormasPagamento: boolean;\r\n\r\n  noClientes: boolean;\r\n  clientes: Array<any> = [];\r\n  contatos: Array<any> = [];\r\n  transportadoras: Array<any> = [];\r\n  loadingTransportadora: boolean;\r\n  tipoForm: number;\r\n  locaisEntrega: Array<any> = [];\r\n  locaisEntregaLoader: boolean;\r\n  materiais: Array<IComercialPainelBobinas>;\r\n  $activatedRouteSubscription: Subscription;\r\n  loaderDetalhesContatoSubscription: Subscription;\r\n  loaderDetalhesEnderecoSubscription: Subscription;\r\n  modalRef: BsModalRef;\r\n  /* Pagination */\r\n  itemsPerPage = 10;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  begin = 0;\r\n  end = 10;\r\n  /* Pagination */\r\n  formasPagamento: Array<FormasPagamento> = [];\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private pnotify: PNotifyService,\r\n    private transportadoraService: ComercialCadastrosTransportadoraService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private routerService: RouterService,\r\n    private cotacoesFormularioService: ComercialCicloVendasCotacoesFormularioService,\r\n    private titleService: TitleService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private modalService: BsModalService,\r\n    private painelBobinasService: ComercialPainelBobinasService,\r\n    private clientesService: ComercialClientesService,\r\n    private contatoDetalhesService: ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService,\r\n    private enderecoDetalhesService: ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService,\r\n    private formasPagamentoService: ComercialCadastrosFormasPagamentoService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.getLocalStorage();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n    this.getFormasPagamento();\r\n    this.getTransportadoras();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.appTitle = 'Cadastro';\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home',\r\n      },\r\n      {\r\n        descricao: 'Ciclo de Vendas',\r\n        routerLink: `/comercial/ciclo-vendas/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Painel de Bobinas',\r\n        routerLink: `/comercial/ciclo-vendas/${id}/painel-bobinas`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //Consumir informações que estão na rota para editar\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n    this.unsetLoaderEvents();\r\n  }\r\n\r\n  unsetLoaderEvents(): void {\r\n    if (this.loaderDetalhesContatoSubscription) {\r\n      this.loaderDetalhesContatoSubscription.unsubscribe();\r\n    }\r\n    if (this.loaderDetalhesEnderecoSubscription) {\r\n      this.loaderDetalhesEnderecoSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription =\r\n      this.activatedRoute.queryParams.subscribe((response) => {\r\n        this.tipoForm = this.routerService.getBase64UrlParams(response);\r\n        this.form.get(['codContato']).disable();\r\n        this.form.get(['codEndereco']).disable();\r\n      });\r\n  }\r\n\r\n  getLocalStorage() {\r\n    try {\r\n      const materiais = localStorage.getItem('comercialPainelBobinasMateriais');\r\n      this.materiaisSelecionados = JSON.parse(atob(materiais));\r\n    } catch (error) {\r\n      this.materiaisSelecionados = [];\r\n      localStorage.removeItem('comercialPainelBobinasMateriais');\r\n      this.pnotify.error('Materiais não encontrados!');\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      nomeCliente: [{ value: null, disabled: true }, [Validators.required]],\r\n      codTransportadora: [\r\n        { value: 1525, disabled: false },\r\n        [Validators.required],\r\n      ],\r\n      nfMae: [{ value: null, disabled: false }, [Validators.required]],\r\n      codFormaPagamento: [\r\n        { value: null, disabled: false },\r\n        [Validators.required],\r\n      ],\r\n      valorMaterial: [{ value: null, disabled: false }, [Validators.required]],\r\n      aliquotaIcms: [{ value: null, disabled: false }, [Validators.required]],\r\n      codCliente: [{ value: null, disabled: false }],\r\n      codContato: [{ value: null, disabled: false }],\r\n      codEndereco: [{ value: null, disabled: false }],\r\n    });\r\n\r\n    this.formClientes = this.formBuilder.group({\r\n      buscarPor: ['1'],\r\n      pesquisa: [null, Validators.required],\r\n      pagina: [1],\r\n      situacao: ['Ativo'],\r\n      registros: [this.itemsPerPage],\r\n    });\r\n  }\r\n\r\n  getFormasPagamento() {\r\n    this.loadingFormasPagamento = true;\r\n    this.formasPagamentoService\r\n      .getListaFormasPagamento({ tipoConsulta: 2 })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingFormasPagamento = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response.success === true) {\r\n          this.formasPagamento = response.data;\r\n        } else {\r\n          this.pnotify.notice('Nenhum registro encontrado!');\r\n        }\r\n        (error) => {\r\n          this.pnotify.error();\r\n        };\r\n      });\r\n  }\r\n\r\n  getClientes() {\r\n    this.loadingClientes = true;\r\n    this.noClientes = this.clientes.length === 0 ? true : false;\r\n    this.clientesService\r\n      .getClientes(this.formClientes.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingClientes = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.responseCode === 200) {\r\n            this.clientes = response['result']['analitico'];\r\n            this.totalItems = this.clientes[0]['total'];\r\n            this.noClientes = false;\r\n          } else {\r\n            this.pnotify.notice('Nenhum registro encontrado!');\r\n            this.clientes = [];\r\n            this.noClientes = true;\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.pnotify.error();\r\n          this.clientes = [];\r\n        }\r\n      });\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.noClientes = true;\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-xl',\r\n    });\r\n  }\r\n  hideModal() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n  onPageChanged(event) {\r\n    this.formClientes.get('pagina').setValue(event.page);\r\n    this.getClientes();\r\n  }\r\n\r\n  async postPainelBobinas() {\r\n    this.loading = true;\r\n    let request = [];\r\n    const materiais = this.materiaisSelecionados;\r\n    if (!materiais) {\r\n      return;\r\n    }\r\n    const promise = () => {\r\n      materiais.forEach((material) => {\r\n        const forms = this.form.value;\r\n        const params = material;\r\n\r\n        request.push(\r\n          this.painelBobinasService.postPainelBobinas(\r\n            this.setParams(forms, params)\r\n          )\r\n        );\r\n      });\r\n    };\r\n    \r\n    await Promise.resolve(promise());\r\n    forkJoin([request])\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (responses: Array<any>) => {\r\n          responses.forEach((response) => {\r\n            if (response.success === true) {\r\n              this.pnotify.success();\r\n              this.router.navigate(\r\n                ['/comercial/ciclo-vendas/${id}/painel-bobinas'],\r\n                {\r\n                  relativeTo: this.activatedRoute,\r\n                }\r\n              );\r\n            } else {\r\n              this.pnotify.error();\r\n            }\r\n          });\r\n        },\r\n        error: (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  setParams(forms, params): Object {\r\n    let _params: any = {};\r\n\r\n    _params.empresa = params.codEmpresa;\r\n    _params.seqLote = params.sequenciaLote;\r\n    _params.matricula = this.user.info.matricula;\r\n    _params.idVendedor = this.user.info.idVendedor;\r\n    _params.codCliente = forms.codCliente;\r\n    _params.codEndereco = forms.codEndereco;\r\n    _params.aliquotaIcms = forms.aliquotaIcms;\r\n    _params.valorUnitario = forms.valorMaterial;\r\n\r\n    return _params;\r\n  }\r\n\r\n  setCliente(cliente) {\r\n    this.getClientes();\r\n    this.form.get('nomeCliente').setValue(cliente.razaoSocial);\r\n    this.form.get('codCliente').setValue(cliente.codCliente);\r\n\r\n    if (this.form.get('codCliente')) {\r\n      this.getContatos(cliente);\r\n      this.getLocaisEntrega(cliente);\r\n    }\r\n  }\r\n\r\n  getContatos(cliente) {\r\n    this.loadingContato = true;\r\n    this.clientesService\r\n      .getContatos(cliente.codCliente)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingContato = false;\r\n        })\r\n      )\r\n      .subscribe((response: JsonResponse) => {\r\n        if (response.success === true) {\r\n          this.form.get(['codContato']).enable();\r\n          const _contatos = response.data;\r\n          let contatos = [];\r\n\r\n          for (let i = 0; i < _contatos.length; i++) {\r\n            if (\r\n              _contatos[i].nomeCompleto &&\r\n              _contatos[i].nomeCompleto != null &&\r\n              _contatos[i].nomeCompleto != '' &&\r\n              _contatos[i].nomeCompleto.length > 1\r\n            )\r\n              contatos.push({\r\n                codContato: _contatos[i].idSeqTid,\r\n                nomeContato: _contatos[i].nomeCompleto,\r\n              });\r\n          }\r\n          this.contatos = contatos;\r\n        }\r\n      });\r\n  }\r\n\r\n  getLocaisEntrega(cliente): void {\r\n    this.locaisEntrega = [];\r\n    this.locaisEntregaLoader = true;\r\n\r\n    this.cotacoesFormularioService\r\n      .getLocaisEntrega(cliente.codCliente)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.locaisEntregaLoader = false;\r\n          this.form.controls.codEndereco.enable();\r\n        })\r\n      )\r\n      .subscribe((response: JsonResponse) => {\r\n        if (response.success === true) {\r\n          this.form.get(['codEndereco']).enable();\r\n          const _enderecos = response.data.enderecos;\r\n          const _enderecosAguardando = response.data.enderecosAguardando || [];\r\n\r\n          let enderecos = [],\r\n            enderecosAguardando = [];\r\n\r\n          for (let i = 0; i < _enderecos.length; i++) {\r\n            enderecos.push({\r\n              codEndereco: _enderecos[i].id,\r\n              descricao: this.formatLocalEntrega(_enderecos[i]),\r\n              tipo: 'Aprovados',\r\n            });\r\n          }\r\n\r\n          for (let i = 0; i < _enderecosAguardando.length; i++) {\r\n            enderecosAguardando.push({\r\n              codEndereco: _enderecosAguardando[i].id,\r\n              descricao: this.formatLocalEntrega(_enderecosAguardando[i]),\r\n              tipo: 'Aguardando aprovação',\r\n            });\r\n          }\r\n\r\n          this.locaisEntrega = [...enderecos, ...enderecosAguardando];\r\n        }\r\n      });\r\n  }\r\n  formatLocalEntrega(localEntrega: any): string {\r\n    return `${localEntrega.endereco} - ${localEntrega.bairro}, ${localEntrega.cidade} - ${localEntrega.uf} - ${localEntrega.cep}`;\r\n  }\r\n\r\n  getTransportadoras(params?) {\r\n    const _params = params ?? {};\r\n    this.loadingTransportadora = true;\r\n    this.transportadoraService\r\n      .getListaTransportadoras(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTransportadora = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.transportadoras = response['data'];\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotify.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  setLoaderEvents(): void {\r\n    this.loaderDetalhesContatoSubscription =\r\n      this.contatoDetalhesService.loaderNavbar.subscribe(\r\n        (response: boolean) => {\r\n          this.loadingNavBar = response;\r\n        }\r\n      );\r\n\r\n    this.loaderDetalhesEnderecoSubscription =\r\n      this.enderecoDetalhesService.loaderNavbar.subscribe(\r\n        (response: boolean) => {\r\n          this.loadingNavBar = response;\r\n        }\r\n      );\r\n  }\r\n\r\n  onDetalhesContato(): void {\r\n    if (this.form.value.codContato != null) {\r\n      this.contatoDetalhesService.showModal(\r\n        this.form.value.codCliente,\r\n        this.form.value.codContato\r\n      );\r\n    }\r\n  }\r\n\r\n  onDetalhesLocalEntrega(): void {\r\n    if (this.form.value.codEndereco != null) {\r\n      this.enderecoDetalhesService.showModal(\r\n        this.form.value.codCliente,\r\n        this.form.value.codEndereco\r\n      );\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NpY2xvLXZlbmRhcy9wYWluZWwtYm9iaW5hcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { MaterialPerdido } from './../../../materiais-perdidos/models/material-perdido';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { CardCounterConfig } from 'src/app/shared/templates/card-counter/models/config';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { IComercialPainelBobinas } from './../models/painel-bobinas';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n//angular\r\nimport { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialPainelBobinasService } from '../painel-bobinas.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ComercialCicloVendasCotacoesFormularioService } from '../../cotacoes/formulario/formulario.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//materiais\r\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-ciclo-vendas-painel-bobinas-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialPainelBobinasListaComponent implements OnInit, OnDestroy {\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  modalRef: BsModalRef;\r\n  idSubModulo: number;\r\n  noResult = false;\r\n  loading = false; //Loading FullPage\r\n  loadingNavBar = false; //Loading do NAVBAR\r\n  materiais: Array<any> = [];\r\n  empresas: Array<any> = [];\r\n  materiaisSelecionados = [];\r\n  $activatedRouteSubscription: Subscription;\r\n  qtMateriais = 0;\r\n  form: FormGroup;\r\n\r\n  cardCounterConfig: Partial<CardCounterConfig> = {\r\n    showDecimals: false,\r\n    format: 'number',\r\n  };\r\n  // Tipos de Situação dos Materials (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '0',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  /* Pagination */\r\n  itemsPerPage: number = 100;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private painelBobinasService: ComercialPainelBobinasService,\r\n    private formBuilder: FormBuilder,\r\n    private modalService: BsModalService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService,\r\n    private formularioService: ComercialCicloVendasCotacoesFormularioService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    localStorage.removeItem('comercialPainelBobinasMateriais');\r\n    this.getEmpresas();\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.titleService.setTitle('Painel de Bobinas');\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  getLocalStorage() {\r\n    try {\r\n      const materiais = localStorage.getItem('comercialPainelBobinasMateriais');\r\n      this.materiaisSelecionados = JSON.parse(atob(materiais));\r\n    } catch (error) {\r\n      this.materiaisSelecionados = [];\r\n      localStorage.removeItem('comercialPainelBobinasMateriais');\r\n    }\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription =\r\n      this.activatedRoute.queryParams.subscribe((response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n      });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      lote: [null],\r\n      empresa: [18, [Validators.required]],\r\n      pagina: [1],\r\n      registros: [this.itemsPerPage],\r\n      categoriaProduto: [1],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/comercial/home`,\r\n      },\r\n      {\r\n        descricao: 'Ciclo de Vendas',\r\n        routerLink: `/comercial/ciclo-vendas/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Painel de Bobinas',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter(params?) {\r\n    localStorage.removeItem('comercialPainelBobinasMateriais');\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n    this.getListaBobinas(this.getParams());\r\n    this.getLocalStorage();\r\n  }\r\n\r\n  checkMaterial(material: any): void {\r\n    material.checked = material.checked == 0 ? 1 : 0;\r\n    const materiais = this.materiais.filter(\r\n      (material) => material['checked'] == 1\r\n    );\r\n    this.materiaisSelecionados = materiais;\r\n    localStorage.removeItem('comercialPainelBobinasMateriais');\r\n    localStorage.setItem(\r\n      'comercialPainelBobinasMateriais',\r\n      btoa(JSON.stringify(this.materiaisSelecionados))\r\n    );\r\n  }\r\n\r\n  getTotalMateriais() {\r\n    return this.materiaisSelecionados.length;\r\n  }\r\n\r\n  removeMaterial(material: any): void {\r\n    this.materiaisSelecionados = this.materiaisSelecionados.filter(\r\n      (value: any) => value.sequenciaLote != material.sequenciaLote\r\n    );\r\n\r\n    this.materiais.map((value: any) => {\r\n      if (value.sequenciaLote == material.sequenciaLote) {\r\n        material.checked = 0;\r\n      }\r\n\r\n      this.materiaisSelecionados = this.materiaisSelecionados.filter(\r\n        (value: any) => value.checked == 1\r\n      );\r\n\r\n      localStorage.removeItem('comercialPainelBobinasMateriais');\r\n      localStorage.setItem(\r\n        'comercialPainelBobinasMateriais',\r\n        btoa(JSON.stringify(this.materiaisSelecionados))\r\n      );\r\n    });\r\n    if (this.materiaisSelecionados.length == 0) {\r\n      localStorage.removeItem('comercialPainelBobinasMateriais');\r\n    }\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.materiaisSelecionados;\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-xl',\r\n      backdrop: 'static',\r\n    });\r\n  }\r\n\r\n  hideModal() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  getListaBobinas(params) {\r\n    this.loading = true;\r\n    this.painelBobinasService\r\n      .getListaBobinas(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success === true) {\r\n            const codMaterial = this.materiaisSelecionados.map(\r\n              (material) => material.ID\r\n            );\r\n            this.materiais = response.data.map(function (el: any) {\r\n              var o = Object.assign({}, el);\r\n              o.checked = codMaterial.includes(o.ID) ? 1 : 0;\r\n              return o;\r\n            });\r\n            this.materiais = this.materiais.filter(\r\n              (value: any) => value.situacao == 'Disponível'\r\n            );\r\n            this.totalItems = this.materiais.length;\r\n            this.noResult = false;\r\n          }\r\n          if (this.materiais.length == 0) {\r\n            this.pnotify.notice('Nenhum registro encontrado!');\r\n            this.materiais = [];\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.pnotify.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  getEmpresas() {\r\n    this.loading = true;\r\n    this.formularioService\r\n      .loadDependencies()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe((response: Array<JsonResponse | any>) => {\r\n        this.empresas = response[1].result || [];\r\n      });\r\n  }\r\n\r\n  openRegister() {\r\n    this.hideModal();\r\n    this.route.navigate(['../novo'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(\r\n        this.form.get('categoriaProduto').value.toString()\r\n      ),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.onFilter();\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n//service\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n@Component({\r\n  selector:\r\n    'comercial-ciclo-vendas-cotacoes-formulario-modal-detalhes-endereco',\r\n  templateUrl: './endereco.component.html',\r\n  styleUrls: ['./endereco.component.scss'],\r\n})\r\nexport class ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent\r\n  implements OnInit {\r\n  @Input('endereco') endereco: any;\r\n\r\n  constructor(\r\n    private bsModalRef: BsModalRef,\r\n    private dateService: DateService\r\n    ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  convertMysqlTime(time: string) {\r\n    return this.dateService.convertMysqlTime(time);\r\n  }\r\n\r\n  onClose(): void {\r\n    this.bsModalRef.hide();\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Cadastro de Materiais\\\">\\r\\n  <button\\r\\n    [disabled]=\\\"form.valid === false || form.value.codCliente == null\\\"\\r\\n    (click)=\\\"postPainelBobinas()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div >\\r\\n    <blockquote class=\\\"blockquote mx-4 text-center\\\" >\\r\\n      <p class=\\\"text-primary mb-0\\\" [hidden] =\\\"tipoForm != 1\\\">BOBINA</p>\\r\\n      <p class=\\\"text-primary mb-0\\\" [hidden] =\\\"tipoForm != 2\\\">CORTE ESPECIAL</p>\\r\\n      <p class=\\\"text-primary mb-0\\\" [hidden] =\\\"tipoForm != 3\\\">REBAIXAMENTO</p>\\r\\n    </blockquote>\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-12\\\">\\r\\n        <legend>Materiais</legend>\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th>Lote</th>\\r\\n              <th>Material</th>\\r\\n              <th>Empresa</th>\\r\\n              <th>Data de Entrada do Lote</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let material of materiaisSelecionados\\\">\\r\\n              <td [ngClass]=\\\"material.situacao == 'Disponível' ? 'border-success' : 'border-danger'\\\">{{ material.descLote | uppercase }}</td>\\r\\n              <td>{{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}</td>\\r\\n              <td>{{ material.nomeEmpresa | uppercase }}</td>\\r\\n              <td>{{ material.dataEntradaLote | date:'dd/MM/yyyy HH:mm' }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-12\\\">\\r\\n        <legend>Dados do Cliente</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\r\\n              <label class=\\\"my-auto\\\" for=\\\"nomeCliente\\\">Cliente</label>\\r\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\" >\\r\\n                <a\\r\\n                  class=\\\"text-primary\\\"\\r\\n                  href=\\\"javascript:void(0)\\\"\\r\\n                  (click)=\\\"openModal(selecionarCliente)\\\">\\r\\n                  <strong>Selecionar</strong>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeCliente\\\"\\r\\n              formControlName=\\\"nomeCliente\\\"\\r\\n              placeholder=\\\"SELECIONE\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeCliente') + ' ' + onFieldRequired('nomeCliente')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeCliente')\\\" message=\\\"Cliente é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-2 pl-0 \\\">\\r\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\r\\n              <label class=\\\"my-auto\\\" for=\\\"codContato\\\">Contato responsável</label>\\r\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 11px\\\" *ngIf=\\\"form.value.codCliente != null\\\">\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  href=\\\"javascript:void(0)\\\"\\r\\n\\r\\n                  (click)=\\\"onDetalhesContato()\\\">\\r\\n                  <strong>Detalhes</strong>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"contatos\\\"\\r\\n              formControlName=\\\"codContato\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              bindLabel=\\\"nomeContato\\\"\\r\\n              bindValue=\\\"codContato\\\"\\r\\n              [loading]=\\\"loadingContato\\\"\\r\\n              loadingText=\\\"Carregando...\\\"\\r\\n              >\\r\\n            </ng-select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-5 pl-0 \\\">\\r\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\r\\n              <label class=\\\"my-auto\\\" for=\\\"codEndereco\\\">Local de entrega</label>\\r\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 11px\\\" *ngIf=\\\"form.value.codCliente != null\\\">\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  href=\\\"javascript:void(0)\\\"\\r\\n                  (click)=\\\"onDetalhesLocalEntrega()\\\">\\r\\n                  <strong>Detalhes</strong>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"locaisEntrega\\\"\\r\\n              formControlName=\\\"codEndereco\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              bindLabel=\\\"descricao\\\"\\r\\n              bindValue=\\\"codEndereco\\\"\\r\\n              [loading]=\\\"locaisEntregaLoader\\\"\\r\\n              loadingText=\\\"Carregando...\\\"\\r\\n              groupBy=\\\"tipo\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-lg-5 pl-0 \\\">\\r\\n            <label for=\\\"codTransportadora\\\">Transportadora</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"transportadoras\\\"\\r\\n              formControlName=\\\"codTransportadora\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              [loading]=\\\"loadingTransportadora\\\"\\r\\n              bindLabel=\\\"nomeTransportadora\\\"\\r\\n              bindValue=\\\"codTransportadoraTid\\\"\\r\\n              [ngClass]=\\\"onFieldError('codTransportadora') + ' ' + onFieldRequired('codTransportadora')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codTransportadora')\\\" message=\\\"Transportadora é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\r\\n              <label class=\\\"my-auto\\\" for=\\\"NM_TRAS\\\">Trasportadora</label>\\r\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\" >\\r\\n                <a\\r\\n                  class=\\\"text-primary\\\"\\r\\n                  href=\\\"javascript:void(0)\\\"\\r\\n                  (click)=\\\"openModal(selecionarNotaFiscal)\\\">\\r\\n                  <strong>Selecionar</strong>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_TRAS\\\"\\r\\n              formControlName=\\\"NM_TRAS\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_TRAS') + ' ' + onFieldRequired('NM_TRAS')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_TRAS')\\\" message=\\\"Trasportadora é obrigatório.\\\"></invalid-form-control>\\r\\n          </div> -->\\r\\n          <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n            <label for=\\\"nfMae\\\">Nota Fiscal Mãe</label>\\r\\n            <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"nfMae\\\"\\r\\n            formControlName=\\\"nfMae\\\"\\r\\n            [ngClass]=\\\"onFieldError('nfMae') + ' ' + onFieldRequired('nfMae')\\\"\\r\\n          >\\r\\n            <option value ='1' >Sim</option>\\r\\n            <option value ='0'>Não</option>\\r\\n          </select>\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('nfMae')\\\" message=\\\"Nota fiscal mãe é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n            <label for=\\\"formasPagamento\\\">Forma de Pagamento</label>\\r\\n            <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"formasPagamento\\\"\\r\\n            [loading]=\\\"loadingFormasPagamento\\\"\\r\\n            formControlName=\\\"codFormaPagamento\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            bindLabel=\\\"descricao\\\"\\r\\n            bindValue=\\\"codFormaPagamento\\\"\\r\\n            [ngClass]=\\\"onFieldError('codFormaPagamento') + ' ' + onFieldRequired('codFormaPagamento')\\\">\\r\\n          </ng-select>\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('codFormaPagamento')\\\" message=\\\"Forma de pagamento é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-1 pl-0\\\">\\r\\n            <label for=\\\"aliquotaIcms\\\">Aliquota ICMS</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"aliquotaIcms\\\"\\r\\n              formControlName=\\\"aliquotaIcms\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', suffix: ' %' , thousands: '.', decimal: ',', precision: 2, prefix: '' }\\\"\\r\\n              [ngClass]=\\\"onFieldError('aliquotaIcms') + ' ' + onFieldRequired('aliquotaIcms')\\\"\\r\\n            >\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('valorMaterial')\\\" message=\\\"Aliquota é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n            <label for=\\\"valorMaterial\\\">Preço do Material</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"valorMaterial\\\"\\r\\n              formControlName=\\\"valorMaterial\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ' , thousands: '.', decimal: ',' }\\\"\\r\\n              [ngClass]=\\\"onFieldError('valorMaterial') + ' ' + onFieldRequired('valorMaterial')\\\"\\r\\n            >\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('valorMaterial')\\\" message=\\\"Preço é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n  <ng-template #selecionarCliente>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Busqueda de Clientes</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\" *ngIf=\\\"loadingClientes\\\">\\r\\n          <span class=\\\"sr-only\\\">Loading...</span>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formClientes\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-3\\\">\\r\\n              <label for=\\\"situacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"situacao\\\"\\r\\n              >\\r\\n                <option value=\\\"Ativo\\\">Ativo</option>\\r\\n                <option value=\\\"Inativo\\\">Inativo</option>\\r\\n                <option value=\\\"Potenci\\\">Potencial</option>\\r\\n                <option value=\\\"Arquivo\\\">Arquivado</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-4\\\">\\r\\n              <label for=\\\"cdItem\\\">BUSCAR POR</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"buscarPor\\\"\\r\\n              >\\r\\n                <option value=\\\"1\\\">CÓDIGO, NOME FANTASIA OU RAZON SOCIAL</option>\\r\\n                <option value=\\\"2\\\" selected>CNPJ</option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-5\\\">\\r\\n              <label>TERMO DE PESQUISA</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"pesquisa\\\"\\r\\n                  >\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <span\\r\\n                      [tooltip]=\\\"formClientes.valid == false ? 'Digite um termo de pesquisa':''\\\"\\r\\n                      container=\\\"body\\\"\\r\\n                      placement =\\\"left\\\"\\r\\n                    >\\r\\n                      <button\\r\\n                      style=\\\"height: 25px;\\\"\\r\\n                        [disabled]=\\\"formClientes.valid == false\\\"\\r\\n                        class=\\\"input-group-text hover\\\"\\r\\n                        (click)=\\\"getClientes()\\\"\\r\\n                        >\\r\\n                        <i class=\\\"fas fa-search\\\"></i>\\r\\n                      </button>\\r\\n                    </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <custom-table *ngIf=\\\"!noClientes\\\" class=\\\"text-center\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th>Cód. Cliente</th>\\r\\n            <th>Razão Social</th>\\r\\n            <th>CNPJ</th>\\r\\n            <th>TIPO</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let cliente of clientes\\\">\\r\\n            <td>{{ cliente.codCliente }}</td>\\r\\n            <td>{{ cliente.razaoSocial }}</td>\\r\\n            <td *ngIf=\\\"!cliente.cnpj\\\">NÃO INFORMADO</td>\\r\\n            <td *ngIf=\\\"cliente.cnpj\\\">{{ cliente.cnpj }}</td>\\r\\n            <td *ngIf=\\\"cliente.tipo == 'J' \\\">JURÍDICA</td>\\r\\n            <td *ngIf=\\\"cliente.tipo == 'F' \\\">FISÍCA</td>\\r\\n            <td>\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Salvar Informações\\\"\\r\\n                container=\\\"body\\\"\\r\\n                (click)=\\\"setCliente(cliente);modalRef.hide()\\\"\\r\\n              >\\r\\n                <i class=\\\"far fa-save\\\"></i>\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NpY2xvLXZlbmRhcy9wYWluZWwtYm9iaW5hcy9mb3JtdWxhcmlvL21vZGFsL2NvbnRhdG8vY29udGF0by5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent } from './contato.component';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService {\r\n  loaderNavbar: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private pnotifyService: PNotifyService,\r\n    private clientesService: ComercialClientesService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  showModal(codCliente: number, codContato: number): void {\r\n    this.loaderNavbar.emit(true);\r\n\r\n    this.clientesService\r\n      .getContato(codCliente, codContato)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar.emit(false);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.success === true) {\r\n            const modalConfig = {\r\n              animated: false,\r\n            };\r\n\r\n            const initialState = {\r\n              contato: response.data,\r\n            };\r\n\r\n            this.modalService.show(\r\n              ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent,\r\n              Object.assign({}, modalConfig, {\r\n                initialState,\r\n              })\r\n            );\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { IComercialPainelBobinas } from './models/painel-bobinas';\r\n//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { retry, take } from 'rxjs/operators';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialPainelBobinasService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/ciclo-vendas/painel-bobinas`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getListaBobinas(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n\r\n  postPainelBobinas(material: any): Observable<any>{\r\n    return this.http.post(`${this.API}/salvar`, material).pipe(take(1));\r\n  }\r\n\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Painel de Bobinas\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"openModal(FormProposta)\\\"\\r\\n    [disabled]=\\\"getTotalMateriais() == 0\\\">\\r\\n    Avançar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    [disabled]=\\\"!form.controls.empresa.valid\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\r\\n              <label for=\\\"lote\\\">Lote</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"lote\\\"\\r\\n                formControlName=\\\"lote\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <!-- <div class=\\\"form-group col-lg-2 pl-0\\\">\\r\\n              <label for=\\\"empresa\\\">Empresa</label>\\r\\n                <ng-select\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"false\\\"\\r\\n                  [items]=\\\"empresas\\\"\\r\\n                  formControlName=\\\"empresa\\\"\\r\\n                  [virtualScroll]=\\\"true\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  labelForId=\\\"empresa\\\"\\r\\n                  bindLabel=\\\"nomeEmpresa\\\"\\r\\n                  bindValue=\\\"idEmpresa\\\"\\r\\n                  [ngClass]=\\\"onFieldError('empresa') + ' ' + onFieldRequired(form.controls.empresa)\\\">\\r\\n                </ng-select>\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('empresa')\\\" message=\\\"Empresa é obrigatório\\\"></invalid-form-control>\\r\\n            </div> -->\\r\\n            <div class=\\\"form-group col-lg-1 pl-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"registros\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"totalItems > 0 && !noResult\\\">\\r\\n    <div class=\\\"row justify-content-between\\\">\\r\\n      <div class=\\\"col-lg-9\\\"></div>\\r\\n      <div class=\\\"col-lg-3\\\">\\r\\n        <card-counter\\r\\n          icon=\\\"fas fa-tasks\\\"\\r\\n          color=\\\"bg-blue\\\"\\r\\n          (click)=\\\"openModal(FormMateriaisSelecionados)\\\"\\r\\n          [counter]=\\\"getTotalMateriais()\\\"\\r\\n          duration=\\\"0.1\\\"\\r\\n          text=\\\"Total de materiais selecionados\\\"\\r\\n          [config]=\\\"cardCounterConfig\\\">\\r\\n        </card-counter>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <subtitles\\r\\n          [data]=\\\"subtitles\\\"\\r\\n        >\\r\\n        </subtitles>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 p-0\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th style=\\\"width:40px\\\"></th>\\r\\n              <th>Lote</th>\\r\\n              <th>Material</th>\\r\\n              <th>Empresa</th>\\r\\n              <th>Data de Entrada do Lote</th>\\r\\n              <!-- <th style=\\\"width:80px\\\"></th> -->\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let material of materiais; let i = index\\\">\\r\\n              <td class=\\\"text-center\\\" style=\\\"width: 5%\\\" [ngClass]=\\\"material.situacao == 'Disponível' ? 'border-success' : 'border-danger'\\\">\\r\\n                <div class=\\\"form-check\\\">\\r\\n                  <input class=\\\"form-check-input position-static\\\" \\r\\n                  type=\\\"checkbox\\\" \\r\\n                  id=\\\"blankCheckbox\\\" \\r\\n                  [checked]=\\\"material?.checked === 1\\\"\\r\\n                  (click)=\\\"checkMaterial(material)\\\"\\r\\n                  value=\\\"option1\\\" \\r\\n                  aria-label=\\\"checkbox\\\">\\r\\n                </div>\\r\\n              </td>\\r\\n              <td>{{ material.descLote | uppercase }}</td>\\r\\n              <td>{{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}</td>\\r\\n              <td>{{ material.nomeEmpresa | uppercase }}</td>\\r\\n              <td>{{ material.dataEntradaLote | date:'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <!-- <td class=\\\"align-middle\\\" style=\\\"width:40px\\\">\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Detalhes do Material\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModal(detalhesMaterial)\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td> -->\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div>\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"noResult\\\"  class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n  <ng-template #FormMateriaisSelecionados>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Materiais Selecionados</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" *ngIf=\\\"getTotalMateriais() != 0\\\">\\r\\n      <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th>Lote</th>\\r\\n            <th>Material</th>\\r\\n            <th>Empresa</th>\\r\\n            <th style=\\\"width:40px\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let material of materiaisSelecionados\\\">\\r\\n            <td [ngClass]=\\\"material.situacao == 'Disponível' ? 'border-success' : 'border-danger'\\\">{{ material.descLote | uppercase }}</td>\\r\\n            <td>{{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}</td>\\r\\n            <td>{{ material.nomeEmpresa | uppercase }}</td>\\r\\n            <td>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Delete\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"removeMaterial(material)\\\">\\r\\n                  <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table><br>\\r\\n    </div>\\r\\n    <div [hidden]=\\\"getTotalMateriais()\\\" class=\\\"text-center d-flex justify-content-center align-items-center p-4\\\" style=\\\"height: 80%\\\">\\r\\n      <empty-result message=\\\"Nenhum material selecionado!\\\"></empty-result>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template #FormProposta>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Selecione a Categoria</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"modal-body\\\" *ngIf=\\\"getTotalMateriais() != 0\\\">\\r\\n        <a><strong>Materiais Selecionados</strong></a>\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th>Lote</th>\\r\\n              <th>Material</th>\\r\\n              <th>Empresa</th>\\r\\n              <th style=\\\"width:40px\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let material of materiaisSelecionados\\\">\\r\\n              <td [ngClass]=\\\"material.situacao == 'Disponível' ? 'border-success' : 'border-danger'\\\">{{ material.descLote | uppercase }}</td>\\r\\n              <td>{{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}</td>\\r\\n              <td>{{ material.nomeEmpresa | uppercase }}</td>\\r\\n              <td>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Delete\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"removeMaterial(material)\\\">\\r\\n                    <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n          <div class=\\\"form-row justify-content-center\\\">\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <label for=\\\"categoriaProduto\\\" >Categoria</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"categoriaProduto\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"categoriaProduto\\\"\\r\\n                [ngClass]=\\\"onFieldError('categoriaProduto') + ' ' + onFieldRequired('form.controls.categoriaProduto')\\\">\\r\\n                <option value=\\\"1\\\">Bobina</option>\\r\\n                <option value=\\\"2\\\">Corte especial</option>\\r\\n                <option value=\\\"3\\\">Rebaixamento</option>\\r\\n              </select>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('categoriaProduto')\\\" message=\\\"Categoria é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div  class=\\\"form-row justify-content-center text-center\\\">\\r\\n        <button \\r\\n          type=\\\"button\\\" \\r\\n          class=\\\"btn btn-default btn-lg m-2\\\"\\r\\n          (click)=\\\"openRegister()\\\"\\r\\n          [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">\\r\\n           <i class=\\\" text-primary fas fa-arrow-right\\\"></i>\\r\\n          </span>Avançar\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n</app-body>\";","export default \"<div class=\\\"modal-content\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"mtc-title mb-0 my-auto\\\">DETALHES DO LOCAL DE ENTREGA</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onClose()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"endereco\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label>CEP</label>\\r\\n            <div *ngIf=\\\"endereco.cep == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"endereco.cep != null\\\">{{ endereco.cep | cep }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label>Endereço</label>\\r\\n            <div *ngIf=\\\"endereco.endereco == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"endereco.endereco != null\\\">{{ endereco.endereco }}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label>Complemento</label>\\r\\n            <div *ngIf=\\\"endereco.complemento == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"endereco.complemento != null\\\">{{ endereco.complemento }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label>Referência</label>\\r\\n            <div *ngIf=\\\"endereco.referencia == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"endereco.referencia != null\\\">{{ endereco.referencia }}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label>Bairro</label>\\r\\n            <div *ngIf=\\\"endereco.bairro == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"endereco.bairro != null\\\">{{ endereco.bairro }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6 mb-0\\\">\\r\\n            <label>Cidade</label>\\r\\n            <div *ngIf=\\\"endereco.cidade == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"endereco.cidade != null\\\">\\r\\n              {{ endereco.cidade }}<span *ngIf=\\\"endereco.uf != null\\\"> / {{ endereco.uf }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6 mb-0\\\" *ngIf=\\\"endereco.principal == 1\\\">\\r\\n            <label>Região de atuação comercial</label>\\r\\n            <div *ngIf=\\\"endereco.descAtuacaoComercial == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"endereco.descAtuacaoComercial != null\\\">{{ endereco.descAtuacaoComercial }}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"endereco.entrega == 1\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col\\\"><hr></div>\\r\\n          </div>\\r\\n          <div class=\\\"mtc-title\\\">Dados de entrega</div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label>Título do local de entrega</label>\\r\\n              <div *ngIf=\\\"endereco.titulo == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"endereco.titulo != null\\\">{{ endereco.titulo }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label>Região de entrega</label>\\r\\n              <div *ngIf=\\\"endereco.descRegiaoEntrega == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"endereco.descRegiaoEntrega != null\\\">{{ endereco.descRegiaoEntrega }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <label>Dias para realizar entregas</label>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\r\\n                  <div class=\\\"d-flex mr-1\\\">\\r\\n                    <div class=\\\"mr-1\\\">\\r\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.segunda.checked == 0\\\"></i>\\r\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.segunda.checked == 1\\\"></i>\\r\\n                    </div>\\r\\n                    <span>Segunda-feira:</span>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"endereco.diasEntrega.segunda.checked == 1\\\">\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.segunda.minimo !== null && endereco.diasEntrega.segunda.maximo !== null\\\">\\r\\n                      das {{ convertMysqlTime(endereco.diasEntrega.segunda.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.segunda.maximo) }}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.segunda.minimo == null || endereco.diasEntrega.segunda.maximo == null\\\">\\r\\n                      horário não informado\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <strong *ngIf=\\\"endereco.diasEntrega.segunda.checked == 0\\\">\\r\\n                    não aceita entregas\\r\\n                  </strong>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\r\\n                  <div class=\\\"d-flex mr-1\\\">\\r\\n                    <div class=\\\"mr-1\\\">\\r\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.terca.checked == 0\\\"></i>\\r\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.terca.checked == 1\\\"></i>\\r\\n                    </div>\\r\\n                    <span>Terça-feira:</span>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"endereco.diasEntrega.terca.checked == 1\\\">\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.terca.minimo !== null && endereco.diasEntrega.terca.maximo !== null\\\">\\r\\n                      das {{ convertMysqlTime(endereco.diasEntrega.terca.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.terca.maximo) }}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.terca.minimo == null || endereco.diasEntrega.terca.maximo == null\\\">\\r\\n                      horário não informado\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <strong *ngIf=\\\"endereco.diasEntrega.terca.checked == 0\\\">\\r\\n                    não aceita entregas\\r\\n                  </strong>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\r\\n                  <div class=\\\"d-flex mr-1\\\">\\r\\n                    <div class=\\\"mr-1\\\">\\r\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.quarta.checked == 0\\\"></i>\\r\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.quarta.checked == 1\\\"></i>\\r\\n                    </div>\\r\\n                    <span>Quarta-feira:</span>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"endereco.diasEntrega.quarta.checked == 1\\\">\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.quarta.minimo !== null && endereco.diasEntrega.quarta.maximo !== null\\\">\\r\\n                      das {{ convertMysqlTime(endereco.diasEntrega.quarta.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.quarta.maximo) }}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.quarta.minimo == null || endereco.diasEntrega.quarta.maximo == null\\\">\\r\\n                      horário não informado\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <strong *ngIf=\\\"endereco.diasEntrega.quarta.checked == 0\\\">\\r\\n                    não aceita entregas\\r\\n                  </strong>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\r\\n                  <div class=\\\"d-flex mr-1\\\">\\r\\n                    <div class=\\\"mr-1\\\">\\r\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.quinta.checked == 0\\\"></i>\\r\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.quinta.checked == 1\\\"></i>\\r\\n                    </div>\\r\\n                    <span>Quinta-feira:</span>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"endereco.diasEntrega.quinta.checked == 1\\\">\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.quinta.minimo !== null && endereco.diasEntrega.quinta.maximo !== null\\\">\\r\\n                      das {{ convertMysqlTime(endereco.diasEntrega.quinta.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.quinta.maximo) }}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.quinta.minimo == null || endereco.diasEntrega.quinta.maximo == null\\\">\\r\\n                      horário não informado\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <strong *ngIf=\\\"endereco.diasEntrega.quinta.checked == 0\\\">\\r\\n                    não aceita entregas\\r\\n                  </strong>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\r\\n                  <div class=\\\"d-flex mr-1\\\">\\r\\n                    <div class=\\\"mr-1\\\">\\r\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.sexta.checked == 0\\\"></i>\\r\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.sexta.checked == 1\\\"></i>\\r\\n                    </div>\\r\\n                    <span>Sexta-feira:</span>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"endereco.diasEntrega.sexta.checked == 1\\\">\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.sexta.minimo !== null && endereco.diasEntrega.sexta.maximo !== null\\\">\\r\\n                      das {{ convertMysqlTime(endereco.diasEntrega.sexta.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.sexta.maximo) }}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.sexta.minimo == null || endereco.diasEntrega.sexta.maximo == null\\\">\\r\\n                      horário não informado\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <strong *ngIf=\\\"endereco.diasEntrega.sexta.checked == 0\\\">\\r\\n                    não aceita entregas\\r\\n                  </strong>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\r\\n                  <div class=\\\"d-flex mr-1\\\">\\r\\n                    <div class=\\\"mr-1\\\">\\r\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.sabado.checked == 0\\\"></i>\\r\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.sabado.checked == 1\\\"></i>\\r\\n                    </div>\\r\\n                    <span>Sábado:</span>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"endereco.diasEntrega.sabado.checked == 1\\\">\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.sabado.minimo !== null && endereco.diasEntrega.sabado.maximo !== null\\\">\\r\\n                      das {{ convertMysqlTime(endereco.diasEntrega.sabado.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.sabado.maximo) }}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.sabado.minimo == null || endereco.diasEntrega.sabado.maximo == null\\\">\\r\\n                      horário não informado\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <strong *ngIf=\\\"endereco.diasEntrega.sabado.checked == 0\\\">\\r\\n                    não aceita entregas\\r\\n                  </strong>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\r\\n                  <div class=\\\"d-flex mr-1\\\">\\r\\n                    <div class=\\\"mr-1\\\">\\r\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.domingo.checked == 0\\\"></i>\\r\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.domingo.checked == 1\\\"></i>\\r\\n                    </div>\\r\\n                    <span>Domingo:</span>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"endereco.diasEntrega.domingo.checked == 1\\\">\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.domingo.minimo !== null && endereco.diasEntrega.domingo.maximo !== null\\\">\\r\\n                      das {{ convertMysqlTime(endereco.diasEntrega.domingo.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.domingo.maximo) }}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"endereco.diasEntrega.domingo.minimo == null || endereco.diasEntrega.domingo.maximo == null\\\">\\r\\n                      horário não informado\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <strong *ngIf=\\\"endereco.diasEntrega.domingo.checked == 0\\\">\\r\\n                    não aceita entregas\\r\\n                  </strong>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label>Tipo de material</label>\\r\\n              <div *ngIf=\\\"endereco.dsTipoMaterial == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"endereco.dsTipoMaterial != null\\\">{{ endereco.dsTipoMaterial | uppercase }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label>Tipo de descarga</label>\\r\\n              <div *ngIf=\\\"endereco.dsTipoDescarga == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"endereco.dsTipoDescarga != null\\\">{{ endereco.dsTipoDescarga | uppercase }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label>Modo de descarga</label>\\r\\n              <div *ngIf=\\\"endereco.dsModoDescarga == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"endereco.dsModoDescarga != null\\\">{{ endereco.dsModoDescarga | uppercase }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label>Tipos de veículo</label>\\r\\n              <div *ngIf=\\\"endereco.tiposVeiculosDesc == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"endereco.tiposVeiculosDesc != null\\\">{{ endereco.tiposVeiculosDesc | uppercase }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6 mb-0\\\">\\r\\n              <label>Dados especiais</label>\\r\\n              <div *ngIf=\\\"endereco.dadosEspeciaisDesc == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"endereco.dadosEspeciaisDesc != null\\\">{{ endereco.dadosEspeciaisDesc | uppercase }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  \r\n  \r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos(){\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","export default \"<div class=\\\"modal-content\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"mtc-title mb-0 my-auto\\\">DETALHES DO CONTATO</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onClose()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"contato\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label>Nome completo</label>\\r\\n            <div *ngIf=\\\"contato.nomeCompleto == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"contato.nomeCompleto != null\\\">{{ contato.nomeCompleto }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label>Sexo</label>\\r\\n            <div *ngIf=\\\"contato.descGenero == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"contato.descGenero != null\\\">{{ contato.descGenero }}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6 mb-0\\\">\\r\\n            <label>Função</label>\\r\\n            <div *ngIf=\\\"contato.descFuncao == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"contato.descFuncao != null\\\">{{ contato.descFuncao }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6 mb-0\\\">\\r\\n            <label>Setor</label>\\r\\n            <div *ngIf=\\\"contato.descSetor == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"contato.descSetor != null\\\">{{ contato.descSetor }}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"col\\\"><hr></div>\\r\\n        </div>\\r\\n        <div class=\\\"mtc-title\\\">Meios de contato</div>\\r\\n        <div class=\\\"form-row\\\" *ngIf=\\\"contato.contatos != null\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\" *ngFor=\\\"let item of contato.contatos\\\">\\r\\n            <label>{{ item.tipo }}</label>\\r\\n            <div *ngIf=\\\"(item.tipo == 'Telefone') || (item.tipo == 'Celular')\\\">\\r\\n              <div *ngIf=\\\"item.contato == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"item.contato != null\\\">{{ item.contato | telefone }}</div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"(item.tipo == 'Email NFe') || (item.tipo == 'E-mail NFe') || (item.tipo == 'E-Mail') || (item.tipo == 'Email') || (item.tipo == 'MalaDireta')\\\">\\r\\n              <div *ngIf=\\\"item.contato == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"item.contato != null\\\">\\r\\n                <a [href]=\\\"'mailto:' + item.contato\\\">{{ item.contato | lowercase }}</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <message\\r\\n          icon=\\\"fas fa-box-open\\\"\\r\\n          text=\\\"Nenhuma informação encontrada\\\"\\r\\n          class=\\\"py-4\\\"\\r\\n          *ngIf=\\\"contato.contatos == null\\\">\\r\\n        </message>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\n\r\n// Components\r\nimport { ComercialPainelBobinasListaComponent } from './lista/lista.component';\r\nimport { ComercialPainelBobinasFormularioComponent } from './formulario/formulario.component';\r\n\r\n//modules\r\nimport { ComercialCicloVendasPainelBobinasFormularioModule } from './formulario/formulario.module';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialPainelBobinasListaComponent },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialPainelBobinasFormularioComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    ComercialCicloVendasPainelBobinasFormularioModule,\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialPainelBobinasModuleRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NpY2xvLXZlbmRhcy9wYWluZWwtYm9iaW5hcy9mb3JtdWxhcmlvL21vZGFsL2VuZGVyZWNvL2VuZGVyZWNvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport ptBr from '@angular/common/locales/pt';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nregisterLocaleData(ptBr);\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialCicloVendasPainelBobinasFormularioModule } from './formulario/formulario.module';\r\n\r\n// Components\r\nimport { ComercialPainelBobinasListaComponent } from './lista/lista.component';\r\nimport { ComercialPainelBobinasModuleRoutingModule } from './painel-bobinas-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [ComercialPainelBobinasListaComponent],\r\n  imports: [\r\n    ComercialPainelBobinasModuleRoutingModule,\r\n    ComercialCicloVendasPainelBobinasFormularioModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    NgBrazil,\r\n    TextMaskModule,\r\n    CurrencyMaskModule,\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\r\n})\r\nexport class ComercialPainelBobinasModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'comercial-ciclo-vendas-cotacoes-formulario-modal-detalhes-contato',\r\n  templateUrl: './contato.component.html',\r\n  styleUrls: ['./contato.component.scss'],\r\n})\r\nexport class ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent\r\n  implements OnInit {\r\n  @Input('contato') contato: any;\r\n\r\n  constructor(private bsModalRef: BsModalRef) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onClose(): void {\r\n    this.bsModalRef.hide();\r\n  }\r\n}\r\n","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2ljbG8tdmVuZGFzL3BhaW5lbC1ib2JpbmFzL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NpY2xvLXZlbmRhcy9wYWluZWwtYm9iaW5hcy9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b25bZGlzYWJsZWRde1xyXG4gIGN1cnNvcjogbm8tZHJvcDtcclxufSJdfQ== */\";","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent } from './endereco.component';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService {\r\n  loaderNavbar: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private pnotifyService: PNotifyService,\r\n    private clienteService: ComercialClientesService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  showModal(codCliente: number, codEndereco: number): void {\r\n    this.loaderNavbar.emit(true);\r\n\r\n    this.clienteService\r\n      .getEndereco(codCliente, codEndereco, 1)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar.emit(false);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.responseCode === 200) {\r\n            const modalConfig = {\r\n              animated: false,\r\n              class: 'modal-lg',\r\n            };\r\n\r\n            const initialState = {\r\n              endereco: response.result,\r\n            };\r\n\r\n            this.modalService.show(\r\n              ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent,\r\n              Object.assign({}, modalConfig, {\r\n                initialState,\r\n              })\r\n            );\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n}\r\n"]}