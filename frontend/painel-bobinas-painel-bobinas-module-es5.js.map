{"version":3,"sources":["webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/formulario.module.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/lista/lista.component.scss","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/lista/lista.component.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/endereco/endereco.component.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/formulario.component.html","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/contato/contato.component.scss","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/contato/contato.service.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/painel-bobinas.service.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/lista/lista.component.html","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/endereco/endereco.component.html","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/contato/contato.component.html","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/painel-bobinas-routing.module.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/endereco/endereco.component.scss","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/painel-bobinas.module.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/contato/contato.component.ts","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/endereco/endereco.service.ts"],"names":["ComercialCicloVendasPainelBobinasFormularioModule","declarations","imports","forRoot","exports","entryComponents","providers","ComercialPainelBobinasFormularioComponent","formBuilder","authService","pnotify","transportadoraService","activatedRoute","router","routerService","cotacoesFormularioService","titleService","location","atividadesService","modalService","painelBobinasService","clientesService","contatoDetalhesService","enderecoDetalhesService","formasPagamentoService","MASKS","user","getCurrentUser","loading","loadingNavBar","breadCrumbTree","materiaisSelecionados","clientes","contatos","transportadoras","locaisEntrega","itemsPerPage","totalItems","currentPage","begin","end","formasPagamento","tableConfig","subtitleBorder","registrarAcesso","getLocalStorage","setBreadCrumb","setFormBuilder","onActivatedRoute","getFormasPagamento","getTransportadoras","subscribe","appTitle","id","snapshot","params","idSubModulo","setTitle","descricao","routerLink","$activatedRouteSubscription","unsubscribe","unsetLoaderEvents","loaderDetalhesContatoSubscription","loaderDetalhesEnderecoSubscription","queryParams","response","tipoForm","getBase64UrlParams","form","get","disable","materiais","localStorage","getItem","JSON","parse","atob","error","removeItem","back","group","nomeCliente","value","disabled","required","codTransportadora","nfMae","codFormaPagamento","valorMaterial","aliquotaIcms","codCliente","codContato","codEndereco","formClientes","buscarPor","pesquisa","pagina","situacao","registros","loadingFormasPagamento","getListaFormasPagamento","tipoConsulta","pipe","success","data","notice","loadingClientes","noClientes","length","getClientes","next","responseCode","template","modalRef","show","animated","hide","field","onFieldInvalid","status","touched","formControl","controls","validator","validationResult","event","setValue","page","request","promise","forEach","material","forms","push","postPainelBobinas","setParams","Promise","resolve","responses","navigate","relativeTo","message","_params","empresa","codEmpresa","seqLote","sequenciaLote","matricula","info","idVendedor","valorUnitario","cliente","razaoSocial","getContatos","getLocaisEntrega","loadingContato","enable","_contatos","i","nomeCompleto","idSeqTid","nomeContato","locaisEntregaLoader","_enderecos","enderecos","_enderecosAguardando","enderecosAguardando","formatLocalEntrega","tipo","localEntrega","endereco","bairro","cidade","uf","cep","loadingTransportadora","getListaTransportadoras","hasOwnProperty","mensagem","loaderNavbar","showModal","selector","ComercialPainelBobinasListaComponent","route","confirmModalService","dateService","formularioService","noResult","empresas","qtMateriais","cardCounterConfig","showDecimals","format","tipos","cod","nome","subtitles","text","color","getEmpresas","buildForm","_response","patchValue","onFilter","lote","categoriaProduto","TIME","Date","getTime","setBase64UrlParams","getParams","getListaBobinas","checked","filter","setItem","btoa","stringify","map","backdrop","codMaterial","ID","el","o","Object","assign","includes","loadDependencies","result","hideModal","toString","_obj","prop","convertToUrlDate","abstractControl","abstractControlField","controlName","onFieldRequired","ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent","bsModalRef","time","convertMysqlTime","ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService","pnotifyService","getPNotify","emit","getContato","modalConfig","initialState","contato","providedIn","ComercialPainelBobinasService","http","API","httpParams","param","append","post","ComercialService","routes","path","component","redirectTo","pathMatch","ComercialPainelBobinasModuleRoutingModule","forChild","ComercialPainelBobinasModule","provide","useValue","ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent","ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService","clienteService","getEndereco"],"mappings":"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","file":"painel-bobinas-painel-bobinas-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n// ngx-bootstrap\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule, BsModalRef } from 'ngx-bootstrap/modal';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// angular2-counto\nimport { CountoModule } from 'angular2-counto';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialTemplatesModule } from '../../../templates/templates.module';\n\n//components\nimport { ComercialPainelBobinasFormularioComponent } from './formulario.component';\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent } from './modal/contato/contato.component';\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent } from './modal/endereco/endereco.component';\n\n//services\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService } from './modal/contato/contato.service';\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService } from './modal/endereco/endereco.service';\n\n@NgModule({\n  declarations: [\n    ComercialPainelBobinasFormularioComponent,\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent,\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PopoverModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    CarouselModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,\n    CurrencyMaskModule,\n    TextMaskModule,\n    NgBrazil,\n    CountoModule,\n    ReactiveFormsModule,\n    SharedModule,\n    TemplatesModule,\n    ComercialTemplatesModule,\n  ],\n  exports: [\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent,\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent,\n  ],\n  entryComponents: [\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent,\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent,\n  ],\n  providers: [\n    BsModalRef,\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService,\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService,\n  ],\n})\nexport class ComercialCicloVendasPainelBobinasFormularioModule {}\n","import { ComercialCadastrosTransportadoraService } from './../../../cadastros/transportadoras/transportadoras.service';\nimport { ComercialCicloVendasCotacoesFormularioService } from './../../cotacoes/formulario/formulario.service';\nimport { FormasPagamento } from './../../../cadastros/formas-pagamento/models/formas-pagamento';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\nimport { MASKS } from 'ng-brazil';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { IComercialPainelBobinas } from './../models/painel-bobinas';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { finalize } from 'rxjs/operators';\nimport { ComercialPainelBobinasService } from '../painel-bobinas.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//interfaces\n\nimport { Subscription, forkJoin } from 'rxjs';\nimport { Location } from '@angular/common';\n\n//servicos\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService } from './modal/contato/contato.service';\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService } from './modal/endereco/endereco.service';\nimport { ComercialCadastrosFormasPagamentoService } from '../../../cadastros/formas-pagamento/formas-pagamento.service';\nimport { AuthService } from 'src/app/shared/services/core/auth.service';\n\n@Component({\n  selector: 'comercial-ciclo-vendas-painel-bobinas-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialPainelBobinasFormularioComponent\n  implements OnInit, OnDestroy\n{\n  public MASKS = MASKS;\n  private user = this.authService.getCurrentUser();\n  noResult: boolean;\n  loading = false;\n  loadingNavBar = false;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  formClientes: FormGroup;\n  materiaisSelecionados: Array<any> = [];\n  appTitle: string;\n  bsConfig: Partial<BsDatepickerConfig>;\n  loadingContato: boolean;\n  loadingClientes: boolean;\n  loadingFormasPagamento: boolean;\n\n  noClientes: boolean;\n  clientes: Array<any> = [];\n  contatos: Array<any> = [];\n  transportadoras: Array<any> = [];\n  loadingTransportadora: boolean;\n  tipoForm: number;\n  locaisEntrega: Array<any> = [];\n  locaisEntregaLoader: boolean;\n  materiais: Array<IComercialPainelBobinas>;\n  $activatedRouteSubscription: Subscription;\n  loaderDetalhesContatoSubscription: Subscription;\n  loaderDetalhesEnderecoSubscription: Subscription;\n  modalRef: BsModalRef;\n  /* Pagination */\n  itemsPerPage = 10;\n  totalItems = 10;\n  currentPage = 1;\n  begin = 0;\n  end = 10;\n  /* Pagination */\n  formasPagamento: Array<FormasPagamento> = [];\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private pnotify: PNotifyService,\n    private transportadoraService: ComercialCadastrosTransportadoraService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private routerService: RouterService,\n    private cotacoesFormularioService: ComercialCicloVendasCotacoesFormularioService,\n    private titleService: TitleService,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private modalService: BsModalService,\n    private painelBobinasService: ComercialPainelBobinasService,\n    private clientesService: ComercialClientesService,\n    private contatoDetalhesService: ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService,\n    private enderecoDetalhesService: ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService,\n    private formasPagamentoService: ComercialCadastrosFormasPagamentoService\n  ) {}\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.getLocalStorage();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n    this.getFormasPagamento();\n    this.getTransportadoras();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.appTitle = 'Cadastro';\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home',\n      },\n      {\n        descricao: 'Ciclo de Vendas',\n        routerLink: `/comercial/ciclo-vendas/${id}`,\n      },\n      {\n        descricao: 'Painel de Bobinas',\n        routerLink: `/comercial/ciclo-vendas/${id}/painel-bobinas`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //Consumir informações que estão na rota para editar\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n    this.unsetLoaderEvents();\n  }\n\n  unsetLoaderEvents(): void {\n    if (this.loaderDetalhesContatoSubscription) {\n      this.loaderDetalhesContatoSubscription.unsubscribe();\n    }\n    if (this.loaderDetalhesEnderecoSubscription) {\n      this.loaderDetalhesEnderecoSubscription.unsubscribe();\n    }\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription =\n      this.activatedRoute.queryParams.subscribe((response) => {\n        this.tipoForm = this.routerService.getBase64UrlParams(response);\n        this.form.get(['codContato']).disable();\n        this.form.get(['codEndereco']).disable();\n      });\n  }\n\n  getLocalStorage() {\n    try {\n      const materiais = localStorage.getItem('comercialPainelBobinasMateriais');\n      this.materiaisSelecionados = JSON.parse(atob(materiais));\n    } catch (error) {\n      this.materiaisSelecionados = [];\n      localStorage.removeItem('comercialPainelBobinasMateriais');\n      this.pnotify.error('Materiais não encontrados!');\n      this.location.back();\n    }\n  }\n\n  //formulario\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      nomeCliente: [{ value: null, disabled: true }, [Validators.required]],\n      codTransportadora: [\n        { value: 1525, disabled: false },\n        [Validators.required],\n      ],\n      nfMae: [{ value: null, disabled: false }, [Validators.required]],\n      codFormaPagamento: [\n        { value: null, disabled: false },\n        [Validators.required],\n      ],\n      valorMaterial: [{ value: null, disabled: false }, [Validators.required]],\n      aliquotaIcms: [{ value: null, disabled: false }, [Validators.required]],\n      codCliente: [{ value: null, disabled: false }],\n      codContato: [{ value: null, disabled: false }],\n      codEndereco: [{ value: null, disabled: false }],\n    });\n\n    this.formClientes = this.formBuilder.group({\n      buscarPor: ['1'],\n      pesquisa: [null, Validators.required],\n      pagina: [1],\n      situacao: ['Ativo'],\n      registros: [this.itemsPerPage],\n    });\n  }\n\n  getFormasPagamento() {\n    this.loadingFormasPagamento = true;\n    this.formasPagamentoService\n      .getListaFormasPagamento({ tipoConsulta: 2 })\n      .pipe(\n        finalize(() => {\n          this.loadingFormasPagamento = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response.success === true) {\n          this.formasPagamento = response.data;\n        } else {\n          this.pnotify.notice('Nenhum registro encontrado!');\n        }\n        (error) => {\n          this.pnotify.error();\n        };\n      });\n  }\n\n  getClientes() {\n    this.loadingClientes = true;\n    this.noClientes = this.clientes.length === 0 ? true : false;\n    this.clientesService\n      .getClientes(this.formClientes.value)\n      .pipe(\n        finalize(() => {\n          this.loadingClientes = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.responseCode === 200) {\n            this.clientes = response['result']['analitico'];\n            this.totalItems = this.clientes[0]['total'];\n            this.noClientes = false;\n          } else {\n            this.pnotify.notice('Nenhum registro encontrado!');\n            this.clientes = [];\n            this.noClientes = true;\n          }\n        },\n        error: (error) => {\n          this.pnotify.error();\n          this.clientes = [];\n        }\n      });\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.noClientes = true;\n    this.modalRef = this.modalService.show(template, {\n      animated: false,\n      class: 'modal-xl',\n    });\n  }\n  hideModal() {\n    this.modalRef.hide();\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n  onPageChanged(event) {\n    this.formClientes.get('pagina').setValue(event.page);\n    this.getClientes();\n  }\n\n  async postPainelBobinas() {\n    this.loading = true;\n    let request = [];\n    const materiais = this.materiaisSelecionados;\n    if (!materiais) {\n      return;\n    }\n    const promise = () => {\n      materiais.forEach((material) => {\n        const forms = this.form.value;\n        const params = material;\n\n        request.push(\n          this.painelBobinasService.postPainelBobinas(\n            this.setParams(forms, params)\n          )\n        );\n      });\n    };\n    \n    await Promise.resolve(promise());\n    forkJoin([request])\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe({\n        next: (responses: Array<any>) => {\n          responses.forEach((response) => {\n            if (response.success === true) {\n              this.pnotify.success();\n              this.router.navigate(\n                ['/comercial/ciclo-vendas/${id}/painel-bobinas'],\n                {\n                  relativeTo: this.activatedRoute,\n                }\n              );\n            } else {\n              this.pnotify.error();\n            }\n          });\n        },\n        error: (error: any) => {\n          try {\n            this.pnotify.error(error.error.message);\n          } catch (error) {\n            this.pnotify.error();\n          }\n        }\n      });\n  }\n\n  setParams(forms, params): Object {\n    let _params: any = {};\n\n    _params.empresa = params.codEmpresa;\n    _params.seqLote = params.sequenciaLote;\n    _params.matricula = this.user.info.matricula;\n    _params.idVendedor = this.user.info.idVendedor;\n    _params.codCliente = forms.codCliente;\n    _params.codEndereco = forms.codEndereco;\n    _params.aliquotaIcms = forms.aliquotaIcms;\n    _params.valorUnitario = forms.valorMaterial;\n\n    return _params;\n  }\n\n  setCliente(cliente) {\n    this.getClientes();\n    this.form.get('nomeCliente').setValue(cliente.razaoSocial);\n    this.form.get('codCliente').setValue(cliente.codCliente);\n\n    if (this.form.get('codCliente')) {\n      this.getContatos(cliente);\n      this.getLocaisEntrega(cliente);\n    }\n  }\n\n  getContatos(cliente) {\n    this.loadingContato = true;\n    this.clientesService\n      .getContatos(cliente.codCliente)\n      .pipe(\n        finalize(() => {\n          this.loadingContato = false;\n        })\n      )\n      .subscribe((response: JsonResponse) => {\n        if (response.success === true) {\n          this.form.get(['codContato']).enable();\n          const _contatos = response.data;\n          let contatos = [];\n\n          for (let i = 0; i < _contatos.length; i++) {\n            if (\n              _contatos[i].nomeCompleto &&\n              _contatos[i].nomeCompleto != null &&\n              _contatos[i].nomeCompleto != '' &&\n              _contatos[i].nomeCompleto.length > 1\n            )\n              contatos.push({\n                codContato: _contatos[i].idSeqTid,\n                nomeContato: _contatos[i].nomeCompleto,\n              });\n          }\n          this.contatos = contatos;\n        }\n      });\n  }\n\n  getLocaisEntrega(cliente): void {\n    this.locaisEntrega = [];\n    this.locaisEntregaLoader = true;\n\n    this.cotacoesFormularioService\n      .getLocaisEntrega(cliente.codCliente)\n      .pipe(\n        finalize(() => {\n          this.locaisEntregaLoader = false;\n          this.form.controls.codEndereco.enable();\n        })\n      )\n      .subscribe((response: JsonResponse) => {\n        if (response.success === true) {\n          this.form.get(['codEndereco']).enable();\n          const _enderecos = response.data.enderecos;\n          const _enderecosAguardando = response.data.enderecosAguardando || [];\n\n          let enderecos = [],\n            enderecosAguardando = [];\n\n          for (let i = 0; i < _enderecos.length; i++) {\n            enderecos.push({\n              codEndereco: _enderecos[i].id,\n              descricao: this.formatLocalEntrega(_enderecos[i]),\n              tipo: 'Aprovados',\n            });\n          }\n\n          for (let i = 0; i < _enderecosAguardando.length; i++) {\n            enderecosAguardando.push({\n              codEndereco: _enderecosAguardando[i].id,\n              descricao: this.formatLocalEntrega(_enderecosAguardando[i]),\n              tipo: 'Aguardando aprovação',\n            });\n          }\n\n          this.locaisEntrega = [...enderecos, ...enderecosAguardando];\n        }\n      });\n  }\n  formatLocalEntrega(localEntrega: any): string {\n    return `${localEntrega.endereco} - ${localEntrega.bairro}, ${localEntrega.cidade} - ${localEntrega.uf} - ${localEntrega.cep}`;\n  }\n\n  getTransportadoras(params?) {\n    const _params = params ?? {};\n    this.loadingTransportadora = true;\n    this.transportadoraService\n      .getListaTransportadoras(params)\n      .pipe(\n        finalize(() => {\n          this.loadingTransportadora = false;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.transportadoras = response['data'];\n          } else {\n            this.pnotify.error();\n          }\n        },\n        error: (error: any) => {\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotify.error(error.error.mensagem);\n          } else {\n            this.pnotify.error();\n          }\n        }\n      });\n  }\n\n  setLoaderEvents(): void {\n    this.loaderDetalhesContatoSubscription =\n      this.contatoDetalhesService.loaderNavbar.subscribe(\n        (response: boolean) => {\n          this.loadingNavBar = response;\n        }\n      );\n\n    this.loaderDetalhesEnderecoSubscription =\n      this.enderecoDetalhesService.loaderNavbar.subscribe(\n        (response: boolean) => {\n          this.loadingNavBar = response;\n        }\n      );\n  }\n\n  onDetalhesContato(): void {\n    if (this.form.value.codContato != null) {\n      this.contatoDetalhesService.showModal(\n        this.form.value.codCliente,\n        this.form.value.codContato\n      );\n    }\n  }\n\n  onDetalhesLocalEntrega(): void {\n    if (this.form.value.codEndereco != null) {\n      this.enderecoDetalhesService.showModal(\n        this.form.value.codCliente,\n        this.form.value.codEndereco\n      );\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NpY2xvLXZlbmRhcy9wYWluZWwtYm9iaW5hcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { MaterialPerdido } from './../../../materiais-perdidos/models/material-perdido';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { CardCounterConfig } from 'src/app/shared/templates/card-counter/models/config';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { IComercialPainelBobinas } from './../models/painel-bobinas';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n//angular\nimport { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialPainelBobinasService } from '../painel-bobinas.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialCicloVendasCotacoesFormularioService } from '../../cotacoes/formulario/formulario.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//materiais\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-ciclo-vendas-painel-bobinas-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialPainelBobinasListaComponent implements OnInit, OnDestroy {\n  breadCrumbTree: Array<Breadcrumb>;\n  modalRef: BsModalRef;\n  idSubModulo: number;\n  noResult = false;\n  loading = false; //Loading FullPage\n  loadingNavBar = false; //Loading do NAVBAR\n  materiais: Array<any> = [];\n  empresas: Array<any> = [];\n  materiaisSelecionados = [];\n  $activatedRouteSubscription: Subscription;\n  qtMateriais = 0;\n  form: FormGroup;\n\n  cardCounterConfig: Partial<CardCounterConfig> = {\n    showDecimals: false,\n    format: 'number',\n  };\n  // Tipos de Situação dos Materials (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '0',\n      nome: 'Inativos',\n    },\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  // CUSTOM TABLE\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  /* Pagination */\n  itemsPerPage: number = 100;\n  totalItems: number;\n  currentPage: number = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private painelBobinasService: ComercialPainelBobinasService,\n    private formBuilder: FormBuilder,\n    private modalService: BsModalService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private routerService: RouterService,\n    private dateService: DateService,\n    private formularioService: ComercialCicloVendasCotacoesFormularioService\n  ) {}\n\n  ngOnInit() {\n    localStorage.removeItem('comercialPainelBobinasMateriais');\n    this.getEmpresas();\n    this.buildForm();\n    this.setBreadCrumb();\n    this.titleService.setTitle('Painel de Bobinas');\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  getLocalStorage() {\n    try {\n      const materiais = localStorage.getItem('comercialPainelBobinasMateriais');\n      this.materiaisSelecionados = JSON.parse(atob(materiais));\n    } catch (error) {\n      this.materiaisSelecionados = [];\n      localStorage.removeItem('comercialPainelBobinasMateriais');\n    }\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription =\n      this.activatedRoute.queryParams.subscribe((response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n      });\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      lote: [null],\n      empresa: [18, [Validators.required]],\n      pagina: [1],\n      registros: [this.itemsPerPage],\n      categoriaProduto: [1],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/comercial/home`,\n      },\n      {\n        descricao: 'Ciclo de Vendas',\n        routerLink: `/comercial/ciclo-vendas/${id}`,\n      },\n      {\n        descricao: 'Painel de Bobinas',\n      },\n    ];\n  }\n\n  onFilter(params?) {\n    localStorage.removeItem('comercialPainelBobinasMateriais');\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n    this.getListaBobinas(this.getParams());\n    this.getLocalStorage();\n  }\n\n  checkMaterial(material: any): void {\n    material.checked = material.checked == 0 ? 1 : 0;\n    const materiais = this.materiais.filter(\n      (material) => material['checked'] == 1\n    );\n    this.materiaisSelecionados = materiais;\n    localStorage.removeItem('comercialPainelBobinasMateriais');\n    localStorage.setItem(\n      'comercialPainelBobinasMateriais',\n      btoa(JSON.stringify(this.materiaisSelecionados))\n    );\n  }\n\n  getTotalMateriais() {\n    return this.materiaisSelecionados.length;\n  }\n\n  removeMaterial(material: any): void {\n    this.materiaisSelecionados = this.materiaisSelecionados.filter(\n      (value: any) => value.sequenciaLote != material.sequenciaLote\n    );\n\n    this.materiais.map((value: any) => {\n      if (value.sequenciaLote == material.sequenciaLote) {\n        material.checked = 0;\n      }\n\n      this.materiaisSelecionados = this.materiaisSelecionados.filter(\n        (value: any) => value.checked == 1\n      );\n\n      localStorage.removeItem('comercialPainelBobinasMateriais');\n      localStorage.setItem(\n        'comercialPainelBobinasMateriais',\n        btoa(JSON.stringify(this.materiaisSelecionados))\n      );\n    });\n    if (this.materiaisSelecionados.length == 0) {\n      localStorage.removeItem('comercialPainelBobinasMateriais');\n    }\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.materiaisSelecionados;\n    this.modalRef = this.modalService.show(template, {\n      animated: false,\n      class: 'modal-xl',\n      backdrop: 'static',\n    });\n  }\n\n  hideModal() {\n    this.modalRef.hide();\n  }\n\n  getListaBobinas(params) {\n    this.loading = true;\n    this.painelBobinasService\n      .getListaBobinas(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.success === true) {\n            const codMaterial = this.materiaisSelecionados.map(\n              (material) => material.ID\n            );\n            this.materiais = response.data.map(function (el: any) {\n              var o = Object.assign({}, el);\n              o.checked = codMaterial.includes(o.ID) ? 1 : 0;\n              return o;\n            });\n            this.materiais = this.materiais.filter(\n              (value: any) => value.situacao == 'Disponível'\n            );\n            this.totalItems = this.materiais.length;\n            this.noResult = false;\n          }\n          if (this.materiais.length == 0) {\n            this.pnotify.notice('Nenhum registro encontrado!');\n            this.materiais = [];\n            this.noResult = true;\n          }\n        },\n        error: (error) => {\n          this.pnotify.error();\n        }\n      });\n  }\n\n  getEmpresas() {\n    this.loading = true;\n    this.formularioService\n      .loadDependencies()\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe((response: Array<JsonResponse | any>) => {\n        this.empresas = response[1].result || [];\n      });\n  }\n\n  openRegister() {\n    this.hideModal();\n    this.route.navigate(['../novo'], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(\n        this.form.get('categoriaProduto').value.toString()\n      ),\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  // Validação de formulário\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.onFilter();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n// ngx-bootstrap\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n//service\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n@Component({\n  selector:\n    'comercial-ciclo-vendas-cotacoes-formulario-modal-detalhes-endereco',\n  templateUrl: './endereco.component.html',\n  styleUrls: ['./endereco.component.scss'],\n})\nexport class ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent\n  implements OnInit {\n  @Input('endereco') endereco: any;\n\n  constructor(\n    private bsModalRef: BsModalRef,\n    private dateService: DateService\n    ) {}\n\n  ngOnInit(): void {}\n\n  convertMysqlTime(time: string) {\n    return this.dateService.convertMysqlTime(time);\n  }\n\n  onClose(): void {\n    this.bsModalRef.hide();\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Cadastro de Materiais\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false || form.value.codCliente == null\\\"\\n    (click)=\\\"postPainelBobinas()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div >\\n    <blockquote class=\\\"blockquote mx-4 text-center\\\" >\\n      <p class=\\\"text-primary mb-0\\\" [hidden] =\\\"tipoForm != 1\\\">BOBINA</p>\\n      <p class=\\\"text-primary mb-0\\\" [hidden] =\\\"tipoForm != 2\\\">CORTE ESPECIAL</p>\\n      <p class=\\\"text-primary mb-0\\\" [hidden] =\\\"tipoForm != 3\\\">REBAIXAMENTO</p>\\n    </blockquote>\\n  </div>\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-12\\\">\\n        <legend>Materiais</legend>\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th>Lote</th>\\n              <th>Material</th>\\n              <th>Empresa</th>\\n              <th>Data de Entrada do Lote</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiaisSelecionados\\\">\\n              <td [ngClass]=\\\"material.situacao == 'Disponível' ? 'border-success' : 'border-danger'\\\">{{ material.descLote | uppercase }}</td>\\n              <td>{{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}</td>\\n              <td>{{ material.nomeEmpresa | uppercase }}</td>\\n              <td>{{ material.dataEntradaLote | date:'dd/MM/yyyy HH:mm' }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-12\\\">\\n        <legend>Dados do Cliente</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-5 pl-0\\\">\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n              <label class=\\\"my-auto\\\" for=\\\"nomeCliente\\\">Cliente</label>\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\" >\\n                <a\\n                  class=\\\"text-primary\\\"\\n                  href=\\\"javascript:void(0)\\\"\\n                  (click)=\\\"openModal(selecionarCliente)\\\">\\n                  <strong>Selecionar</strong>\\n                </a>\\n              </div>\\n            </div>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeCliente\\\"\\n              formControlName=\\\"nomeCliente\\\"\\n              placeholder=\\\"SELECIONE\\\"\\n              [ngClass]=\\\"onFieldError('nomeCliente') + ' ' + onFieldRequired('nomeCliente')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeCliente')\\\" message=\\\"Cliente é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-2 pl-0 \\\">\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n              <label class=\\\"my-auto\\\" for=\\\"codContato\\\">Contato responsável</label>\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 11px\\\" *ngIf=\\\"form.value.codCliente != null\\\">\\n                <a\\n                  class=\\\"text-secondary\\\"\\n                  href=\\\"javascript:void(0)\\\"\\n                  \\n                  (click)=\\\"onDetalhesContato()\\\">\\n                  <strong>Detalhes</strong>\\n                </a>\\n              </div>\\n            </div>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"contatos\\\"\\n              formControlName=\\\"codContato\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              bindLabel=\\\"nomeContato\\\"\\n              bindValue=\\\"codContato\\\"\\n              [loading]=\\\"loadingContato\\\"\\n              loadingText=\\\"Carregando...\\\"\\n              >\\n            </ng-select>\\n          </div>\\n          <div class=\\\"form-group col-lg-5 pl-0 \\\">\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n              <label class=\\\"my-auto\\\" for=\\\"codEndereco\\\">Local de entrega</label>\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 11px\\\" *ngIf=\\\"form.value.codCliente != null\\\">\\n                <a \\n                  class=\\\"text-secondary\\\"\\n                  href=\\\"javascript:void(0)\\\"\\n                  (click)=\\\"onDetalhesLocalEntrega()\\\">\\n                  <strong>Detalhes</strong>\\n                </a>\\n              </div>\\n            </div>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"locaisEntrega\\\"\\n              formControlName=\\\"codEndereco\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              bindLabel=\\\"descricao\\\"\\n              bindValue=\\\"codEndereco\\\"\\n              [loading]=\\\"locaisEntregaLoader\\\"\\n              loadingText=\\\"Carregando...\\\"\\n              groupBy=\\\"tipo\\\"\\n            >\\n            </ng-select>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-lg-5 pl-0 \\\">\\n            <label for=\\\"codTransportadora\\\">Transportadora</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"transportadoras\\\"\\n              formControlName=\\\"codTransportadora\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              [loading]=\\\"loadingTransportadora\\\"\\n              bindLabel=\\\"nomeTransportadora\\\"\\n              bindValue=\\\"codTransportadoraTid\\\"\\n              [ngClass]=\\\"onFieldError('codTransportadora') + ' ' + onFieldRequired('codTransportadora')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codTransportadora')\\\" message=\\\"Transportadora é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <!-- <div class=\\\"form-group col-md-5 pl-0\\\">\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n              <label class=\\\"my-auto\\\" for=\\\"NM_TRAS\\\">Trasportadora</label>\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\" >\\n                <a\\n                  class=\\\"text-primary\\\"\\n                  href=\\\"javascript:void(0)\\\"\\n                  (click)=\\\"openModal(selecionarNotaFiscal)\\\">\\n                  <strong>Selecionar</strong>\\n                </a>\\n              </div>\\n            </div>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_TRAS\\\"\\n              formControlName=\\\"NM_TRAS\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('NM_TRAS') + ' ' + onFieldRequired('NM_TRAS')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_TRAS')\\\" message=\\\"Trasportadora é obrigatório.\\\"></invalid-form-control>\\n          </div> -->\\n          <div class=\\\"form-group col-md-2 pl-0\\\">\\n            <label for=\\\"nfMae\\\">Nota Fiscal Mãe</label>\\n            <select \\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"nfMae\\\"\\n            formControlName=\\\"nfMae\\\"\\n            [ngClass]=\\\"onFieldError('nfMae') + ' ' + onFieldRequired('nfMae')\\\"\\n          >\\n            <option value ='1' >Sim</option>\\n            <option value ='0'>Não</option>\\n          </select>\\n          <invalid-form-control [show]=\\\"onFieldInvalid('nfMae')\\\" message=\\\"Nota fiscal mãe é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-2 pl-0\\\">\\n            <label for=\\\"formasPagamento\\\">Forma de Pagamento</label>\\n            <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"formasPagamento\\\"\\n            [loading]=\\\"loadingFormasPagamento\\\"\\n            formControlName=\\\"codFormaPagamento\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            bindLabel=\\\"descricao\\\"\\n            bindValue=\\\"codFormaPagamento\\\"\\n            [ngClass]=\\\"onFieldError('codFormaPagamento') + ' ' + onFieldRequired('codFormaPagamento')\\\">\\n          </ng-select>\\n          <invalid-form-control [show]=\\\"onFieldInvalid('codFormaPagamento')\\\" message=\\\"Forma de pagamento é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-1 pl-0\\\">\\n            <label for=\\\"aliquotaIcms\\\">Aliquota ICMS</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"aliquotaIcms\\\"\\n              formControlName=\\\"aliquotaIcms\\\"\\n              currencyMask [options]=\\\"{ align: 'left', suffix: ' %' , thousands: '.', decimal: ',', precision: 2, prefix: '' }\\\"\\n              [ngClass]=\\\"onFieldError('aliquotaIcms') + ' ' + onFieldRequired('aliquotaIcms')\\\"\\n            >\\n          <invalid-form-control [show]=\\\"onFieldInvalid('valorMaterial')\\\" message=\\\"Aliquota é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-2 pl-0\\\">\\n            <label for=\\\"valorMaterial\\\">Preço do Material</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"valorMaterial\\\"\\n              formControlName=\\\"valorMaterial\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ' , thousands: '.', decimal: ',' }\\\"\\n              [ngClass]=\\\"onFieldError('valorMaterial') + ' ' + onFieldRequired('valorMaterial')\\\"\\n            >\\n          <invalid-form-control [show]=\\\"onFieldInvalid('valorMaterial')\\\" message=\\\"Preço é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n  <ng-template #selecionarCliente>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Busqueda de Clientes</h4>\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n        <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\" *ngIf=\\\"loadingClientes\\\">\\n          <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"formClientes\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-3\\\">\\n              <label for=\\\"situacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"situacao\\\"\\n              >\\n                <option value=\\\"Ativo\\\">Ativo</option>\\n                <option value=\\\"Inativo\\\">Inativo</option>\\n                <option value=\\\"Potenci\\\">Potencial</option>\\n                <option value=\\\"Arquivo\\\">Arquivado</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-4\\\">\\n              <label for=\\\"cdItem\\\">BUSCAR POR</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"buscarPor\\\"\\n              >\\n                <option value=\\\"1\\\">CÓDIGO, NOME FANTASIA OU RAZON SOCIAL</option>\\n                <option value=\\\"2\\\" selected>CNPJ</option>\\n              </select>\\n            </div>\\n\\n            <div class=\\\"form-group col-5\\\">\\n              <label>TERMO DE PESQUISA</label>\\n              <div class=\\\"input-group\\\">\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"pesquisa\\\"\\n                  >\\n                  <div class=\\\"input-group-append\\\">\\n                    <span \\n                      [tooltip]=\\\"formClientes.valid == false ? 'Digite um termo de pesquisa':''\\\"\\n                      container=\\\"body\\\"\\n                      placement =\\\"left\\\"\\n                    >\\n                      <button\\n                      style=\\\"height: 25px;\\\"\\n                        [disabled]=\\\"formClientes.valid == false\\\"\\n                        class=\\\"input-group-text hover\\\"\\n                        (click)=\\\"getClientes()\\\"\\n                        >\\n                        <i class=\\\"fas fa-search\\\"></i>\\n                      </button>\\n                    </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n      <custom-table *ngIf=\\\"!noClientes\\\" class=\\\"text-center\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th>Cód. Cliente</th>\\n            <th>Razão Social</th>\\n            <th>CNPJ</th>\\n            <th>TIPO</th>\\n            <th></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let cliente of clientes\\\">\\n            <td>{{ cliente.codCliente }}</td>\\n            <td>{{ cliente.razaoSocial }}</td>\\n            <td *ngIf=\\\"!cliente.cnpj\\\">NÃO INFORMADO</td>\\n            <td *ngIf=\\\"cliente.cnpj\\\">{{ cliente.cnpj }}</td>\\n            <td *ngIf=\\\"cliente.tipo == 'J' \\\">JURÍDICA</td>\\n            <td *ngIf=\\\"cliente.tipo == 'F' \\\">FISÍCA</td>\\n            <td>\\n              <button\\n                class=\\\"btn-icon-sm\\\"\\n                tooltip=\\\"Salvar Informações\\\"\\n                container=\\\"body\\\"\\n                (click)=\\\"setCliente(cliente);modalRef.hide()\\\"\\n              >\\n                <i class=\\\"far fa-save\\\"></i>\\n              </button>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      \\n    </div>\\n  </ng-template>\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NpY2xvLXZlbmRhcy9wYWluZWwtYm9iaW5hcy9mb3JtdWxhcmlvL21vZGFsL2NvbnRhdG8vY29udGF0by5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable, EventEmitter } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent } from './contato.component';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService {\n  loaderNavbar: EventEmitter<boolean> = new EventEmitter();\n\n  constructor(\n    private modalService: BsModalService,\n    private pnotifyService: PNotifyService,\n    private clientesService: ComercialClientesService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  showModal(codCliente: number, codContato: number): void {\n    this.loaderNavbar.emit(true);\n\n    this.clientesService\n      .getContato(codCliente, codContato)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar.emit(false);\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.success === true) {\n            const modalConfig = {\n              animated: false,\n            };\n\n            const initialState = {\n              contato: response.data,\n            };\n\n            this.modalService.show(\n              ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent,\n              Object.assign({}, modalConfig, {\n                initialState,\n              })\n            );\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n}\n","import { IComercialPainelBobinas } from './models/painel-bobinas';\n//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { retry, take } from 'rxjs/operators';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialPainelBobinasService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/ciclo-vendas/painel-bobinas`;\n\n  constructor(private http: HttpClient) {}\n\n  getListaBobinas(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n\n  postPainelBobinas(material: any): Observable<any>{\n    return this.http.post(`${this.API}/salvar`, material).pipe(take(1));\n  }\n\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Painel de Bobinas\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"openModal(FormProposta)\\\"\\n    [disabled]=\\\"getTotalMateriais() == 0\\\">\\n    Avançar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\"\\n    [disabled]=\\\"!form.controls.empresa.valid\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\n              <label for=\\\"lote\\\">Lote</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"lote\\\"\\n                formControlName=\\\"lote\\\"\\n                placeholder=\\\"Digite...\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <!-- <div class=\\\"form-group col-lg-2 pl-0\\\">\\n              <label for=\\\"empresa\\\">Empresa</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"false\\\"\\n                  [items]=\\\"empresas\\\"\\n                  formControlName=\\\"empresa\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  labelForId=\\\"empresa\\\"\\n                  bindLabel=\\\"nomeEmpresa\\\"\\n                  bindValue=\\\"idEmpresa\\\"\\n                  [ngClass]=\\\"onFieldError('empresa') + ' ' + onFieldRequired(form.controls.empresa)\\\">\\n                </ng-select>\\n                <invalid-form-control [show]=\\\"onFieldInvalid('empresa')\\\" message=\\\"Empresa é obrigatório\\\"></invalid-form-control>\\n            </div> -->\\n            <div class=\\\"form-group col-lg-1 pl-0\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"registros\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"totalItems > 0 && !noResult\\\">\\n    <div class=\\\"row justify-content-between\\\">\\n      <div class=\\\"col-lg-9\\\"></div>\\n      <div class=\\\"col-lg-3\\\">\\n        <card-counter\\n          icon=\\\"fas fa-tasks\\\"\\n          color=\\\"bg-blue\\\"\\n          (click)=\\\"openModal(FormMateriaisSelecionados)\\\"\\n          [counter]=\\\"getTotalMateriais()\\\"\\n          duration=\\\"0.1\\\"\\n          text=\\\"Total de materiais selecionados\\\"\\n          [config]=\\\"cardCounterConfig\\\">\\n        </card-counter>\\n      </div>\\n    </div>\\n    <br>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <subtitles\\n          [data]=\\\"subtitles\\\"\\n        >\\n        </subtitles>\\n      </div>\\n    </div>\\n    <div class=\\\"col-12 p-0\\\">\\n      <div class=\\\"w-100\\\">\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th style=\\\"width:40px\\\"></th>\\n              <th>Lote</th>\\n              <th>Material</th>\\n              <th>Empresa</th>\\n              <th>Data de Entrada do Lote</th>\\n              <!-- <th style=\\\"width:80px\\\"></th> -->\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiais; let i = index\\\">\\n              <td class=\\\"text-center\\\" style=\\\"width: 5%\\\" [ngClass]=\\\"material.situacao == 'Disponível' ? 'border-success' : 'border-danger'\\\">\\n                <div class=\\\"form-check\\\">\\n                  <input class=\\\"form-check-input position-static\\\" \\n                  type=\\\"checkbox\\\" \\n                  id=\\\"blankCheckbox\\\" \\n                  [checked]=\\\"material?.checked === 1\\\"\\n                  (click)=\\\"checkMaterial(material)\\\"\\n                  value=\\\"option1\\\" \\n                  aria-label=\\\"checkbox\\\">\\n                </div>\\n              </td>\\n              <td>{{ material.descLote | uppercase }}</td>\\n              <td>{{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}</td>\\n              <td>{{ material.nomeEmpresa | uppercase }}</td>\\n              <td>{{ material.dataEntradaLote | date:'dd/MM/yyyy HH:mm' }}</td>\\n              <!-- <td class=\\\"align-middle\\\" style=\\\"width:40px\\\">\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Detalhes do Material\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModal(detalhesMaterial)\\\">\\n                    <i class=\\\"fas fa-search\\\"></i>\\n                  </button>\\n                </span>\\n              </td> -->\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </div>\\n      <div>\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"noResult\\\"  class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n  <ng-template #FormMateriaisSelecionados>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Materiais Selecionados</h4>\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-body\\\" *ngIf=\\\"getTotalMateriais() != 0\\\">\\n      <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th>Lote</th>\\n            <th>Material</th>\\n            <th>Empresa</th>\\n            <th style=\\\"width:40px\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let material of materiaisSelecionados\\\">\\n            <td [ngClass]=\\\"material.situacao == 'Disponível' ? 'border-success' : 'border-danger'\\\">{{ material.descLote | uppercase }}</td>\\n            <td>{{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}</td>\\n            <td>{{ material.nomeEmpresa | uppercase }}</td>\\n            <td>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Delete\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"removeMaterial(material)\\\">\\n                  <i class=\\\"fas fa-trash-alt\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table><br>\\n    </div>\\n    <div [hidden]=\\\"getTotalMateriais()\\\" class=\\\"text-center d-flex justify-content-center align-items-center p-4\\\" style=\\\"height: 80%\\\">\\n      <empty-result message=\\\"Nenhum material selecionado!\\\"></empty-result>\\n    </div>\\n  </ng-template>\\n  <ng-template #FormProposta>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Selecione a Categoria</h4>\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <div class=\\\"modal-body\\\" *ngIf=\\\"getTotalMateriais() != 0\\\">\\n        <a><strong>Materiais Selecionados</strong></a>\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th>Lote</th>\\n              <th>Material</th>\\n              <th>Empresa</th>\\n              <th style=\\\"width:40px\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiaisSelecionados\\\">\\n              <td [ngClass]=\\\"material.situacao == 'Disponível' ? 'border-success' : 'border-danger'\\\">{{ material.descLote | uppercase }}</td>\\n              <td>{{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}</td>\\n              <td>{{ material.nomeEmpresa | uppercase }}</td>\\n              <td>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Delete\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"removeMaterial(material)\\\">\\n                    <i class=\\\"fas fa-trash-alt\\\"></i>\\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n          <div class=\\\"form-row justify-content-center\\\">\\n            <div class=\\\"form-group col\\\">\\n              <label for=\\\"categoriaProduto\\\" >Categoria</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"categoriaProduto\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                formControlName=\\\"categoriaProduto\\\"\\n                [ngClass]=\\\"onFieldError('categoriaProduto') + ' ' + onFieldRequired('form.controls.categoriaProduto')\\\">\\n                <option value=\\\"1\\\">Bobina</option>\\n                <option value=\\\"2\\\">Corte especial</option>\\n                <option value=\\\"3\\\">Rebaixamento</option>\\n              </select>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('categoriaProduto')\\\" message=\\\"Categoria é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div  class=\\\"form-row justify-content-center text-center\\\">\\n        <button \\n          type=\\\"button\\\" \\n          class=\\\"btn btn-default btn-lg m-2\\\"\\n          (click)=\\\"openRegister()\\\"\\n          [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">\\n           <i class=\\\" text-primary fas fa-arrow-right\\\"></i>\\n          </span>Avançar\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n\\n</app-body>\";","export default \"<div class=\\\"modal-content\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"mtc-title mb-0 my-auto\\\">DETALHES DO LOCAL DE ENTREGA</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onClose()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"endereco\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>CEP</label>\\n            <div *ngIf=\\\"endereco.cep == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.cep != null\\\">{{ endereco.cep | cep }}</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Endereço</label>\\n            <div *ngIf=\\\"endereco.endereco == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.endereco != null\\\">{{ endereco.endereco }}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Complemento</label>\\n            <div *ngIf=\\\"endereco.complemento == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.complemento != null\\\">{{ endereco.complemento }}</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Referência</label>\\n            <div *ngIf=\\\"endereco.referencia == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.referencia != null\\\">{{ endereco.referencia }}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Bairro</label>\\n            <div *ngIf=\\\"endereco.bairro == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.bairro != null\\\">{{ endereco.bairro }}</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6 mb-0\\\">\\n            <label>Cidade</label>\\n            <div *ngIf=\\\"endereco.cidade == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.cidade != null\\\">\\n              {{ endereco.cidade }}<span *ngIf=\\\"endereco.uf != null\\\"> / {{ endereco.uf }}</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6 mb-0\\\" *ngIf=\\\"endereco.principal == 1\\\">\\n            <label>Região de atuação comercial</label>\\n            <div *ngIf=\\\"endereco.descAtuacaoComercial == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.descAtuacaoComercial != null\\\">{{ endereco.descAtuacaoComercial }}</div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"endereco.entrega == 1\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"col\\\"><hr></div>\\n          </div>\\n          <div class=\\\"mtc-title\\\">Dados de entrega</div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Título do local de entrega</label>\\n              <div *ngIf=\\\"endereco.titulo == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.titulo != null\\\">{{ endereco.titulo }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Região de entrega</label>\\n              <div *ngIf=\\\"endereco.descRegiaoEntrega == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.descRegiaoEntrega != null\\\">{{ endereco.descRegiaoEntrega }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\">\\n              <label>Dias para realizar entregas</label>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.segunda.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.segunda.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Segunda-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.segunda.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.segunda.minimo !== null && endereco.diasEntrega.segunda.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.segunda.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.segunda.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.segunda.minimo == null || endereco.diasEntrega.segunda.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.segunda.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.terca.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.terca.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Terça-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.terca.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.terca.minimo !== null && endereco.diasEntrega.terca.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.terca.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.terca.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.terca.minimo == null || endereco.diasEntrega.terca.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.terca.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.quarta.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.quarta.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Quarta-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.quarta.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.quarta.minimo !== null && endereco.diasEntrega.quarta.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.quarta.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.quarta.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.quarta.minimo == null || endereco.diasEntrega.quarta.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.quarta.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.quinta.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.quinta.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Quinta-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.quinta.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.quinta.minimo !== null && endereco.diasEntrega.quinta.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.quinta.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.quinta.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.quinta.minimo == null || endereco.diasEntrega.quinta.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.quinta.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.sexta.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.sexta.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Sexta-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.sexta.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.sexta.minimo !== null && endereco.diasEntrega.sexta.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.sexta.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.sexta.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.sexta.minimo == null || endereco.diasEntrega.sexta.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.sexta.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.sabado.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.sabado.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Sábado:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.sabado.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.sabado.minimo !== null && endereco.diasEntrega.sabado.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.sabado.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.sabado.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.sabado.minimo == null || endereco.diasEntrega.sabado.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.sabado.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.domingo.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.domingo.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Domingo:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.domingo.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.domingo.minimo !== null && endereco.diasEntrega.domingo.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.domingo.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.domingo.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.domingo.minimo == null || endereco.diasEntrega.domingo.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.domingo.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Tipo de material</label>\\n              <div *ngIf=\\\"endereco.dsTipoMaterial == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.dsTipoMaterial != null\\\">{{ endereco.dsTipoMaterial | uppercase }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Tipo de descarga</label>\\n              <div *ngIf=\\\"endereco.dsTipoDescarga == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.dsTipoDescarga != null\\\">{{ endereco.dsTipoDescarga | uppercase }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Modo de descarga</label>\\n              <div *ngIf=\\\"endereco.dsModoDescarga == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.dsModoDescarga != null\\\">{{ endereco.dsModoDescarga | uppercase }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Tipos de veículo</label>\\n              <div *ngIf=\\\"endereco.tiposVeiculosDesc == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.tiposVeiculosDesc != null\\\">{{ endereco.tiposVeiculosDesc | uppercase }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6 mb-0\\\">\\n              <label>Dados especiais</label>\\n              <div *ngIf=\\\"endereco.dadosEspeciaisDesc == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.dadosEspeciaisDesc != null\\\">{{ endereco.dadosEspeciaisDesc | uppercase }}</div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","export default \"<div class=\\\"modal-content\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"mtc-title mb-0 my-auto\\\">DETALHES DO CONTATO</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onClose()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"contato\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Nome completo</label>\\n            <div *ngIf=\\\"contato.nomeCompleto == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"contato.nomeCompleto != null\\\">{{ contato.nomeCompleto }}</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Sexo</label>\\n            <div *ngIf=\\\"contato.descGenero == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"contato.descGenero != null\\\">{{ contato.descGenero }}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6 mb-0\\\">\\n            <label>Função</label>\\n            <div *ngIf=\\\"contato.descFuncao == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"contato.descFuncao != null\\\">{{ contato.descFuncao }}</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6 mb-0\\\">\\n            <label>Setor</label>\\n            <div *ngIf=\\\"contato.descSetor == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"contato.descSetor != null\\\">{{ contato.descSetor }}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"col\\\"><hr></div>\\n        </div>\\n        <div class=\\\"mtc-title\\\">Meios de contato</div>\\n        <div class=\\\"form-row\\\" *ngIf=\\\"contato.contatos != null\\\">\\n          <div class=\\\"form-group col-md-6\\\" *ngFor=\\\"let item of contato.contatos\\\">\\n            <label>{{ item.tipo }}</label>\\n            <div *ngIf=\\\"(item.tipo == 'Telefone') || (item.tipo == 'Celular')\\\">\\n              <div *ngIf=\\\"item.contato == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"item.contato != null\\\">{{ item.contato | telefone }}</div>\\n            </div>\\n            <div *ngIf=\\\"(item.tipo == 'Email NFe') || (item.tipo == 'E-mail NFe') || (item.tipo == 'E-Mail') || (item.tipo == 'Email') || (item.tipo == 'MalaDireta')\\\">\\n              <div *ngIf=\\\"item.contato == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"item.contato != null\\\">\\n                <a [href]=\\\"'mailto:' + item.contato\\\">{{ item.contato | lowercase }}</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <message\\n          icon=\\\"fas fa-box-open\\\"\\n          text=\\\"Nenhuma informação encontrada\\\"\\n          class=\\\"py-4\\\"\\n          *ngIf=\\\"contato.contatos == null\\\">\\n        </message>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\n\n// Components\nimport { ComercialPainelBobinasListaComponent } from './lista/lista.component';\nimport { ComercialPainelBobinasFormularioComponent } from './formulario/formulario.component';\n\n//modules\nimport { ComercialCicloVendasPainelBobinasFormularioModule } from './formulario/formulario.module';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialPainelBobinasListaComponent },\n  {\n    path: 'novo',\n    component: ComercialPainelBobinasFormularioComponent,\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    ComercialCicloVendasPainelBobinasFormularioModule,\n  ],\n  exports: [RouterModule],\n})\nexport class ComercialPainelBobinasModuleRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NpY2xvLXZlbmRhcy9wYWluZWwtYm9iaW5hcy9mb3JtdWxhcmlvL21vZGFsL2VuZGVyZWNvL2VuZGVyZWNvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { CurrencyMaskModule } from 'ng2-currency-mask';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { RouterModule } from '@angular/router';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport ptBr from '@angular/common/locales/pt';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nregisterLocaleData(ptBr);\ndefineLocale('pt-br', ptBrLocale);\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialCicloVendasPainelBobinasFormularioModule } from './formulario/formulario.module';\n\n// Components\nimport { ComercialPainelBobinasListaComponent } from './lista/lista.component';\nimport { ComercialPainelBobinasModuleRoutingModule } from './painel-bobinas-routing.module';\n\n@NgModule({\n  declarations: [ComercialPainelBobinasListaComponent],\n  imports: [\n    ComercialPainelBobinasModuleRoutingModule,\n    ComercialCicloVendasPainelBobinasFormularioModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n    CurrencyMaskModule,\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\n})\nexport class ComercialPainelBobinasModule {}\n","import { Component, OnInit, Input } from '@angular/core';\n\n// ngx-bootstrap\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'comercial-ciclo-vendas-cotacoes-formulario-modal-detalhes-contato',\n  templateUrl: './contato.component.html',\n  styleUrls: ['./contato.component.scss'],\n})\nexport class ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent\n  implements OnInit {\n  @Input('contato') contato: any;\n\n  constructor(private bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  onClose(): void {\n    this.bsModalRef.hide();\n  }\n}\n","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2ljbG8tdmVuZGFzL3BhaW5lbC1ib2JpbmFzL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NpY2xvLXZlbmRhcy9wYWluZWwtYm9iaW5hcy9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b25bZGlzYWJsZWRde1xuICBjdXJzb3I6IG5vLWRyb3A7XG59Il19 */\";","import { Injectable, EventEmitter } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent } from './endereco.component';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService {\n  loaderNavbar: EventEmitter<boolean> = new EventEmitter();\n\n  constructor(\n    private modalService: BsModalService,\n    private pnotifyService: PNotifyService,\n    private clienteService: ComercialClientesService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  showModal(codCliente: number, codEndereco: number): void {\n    this.loaderNavbar.emit(true);\n\n    this.clienteService\n      .getEndereco(codCliente, codEndereco, 1)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar.emit(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.responseCode === 200) {\n            const modalConfig = {\n              animated: false,\n              class: 'modal-lg',\n            };\n\n            const initialState = {\n              endereco: response.result,\n            };\n\n            this.modalService.show(\n              ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent,\n              Object.assign({}, modalConfig, {\n                initialState,\n              })\n            );\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n}\n"]}