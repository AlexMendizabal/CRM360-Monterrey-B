{"version":3,"sources":["webpack:///src/app/modules/tecnologia-informacao/contratos/modelo/lista/lista.component.html","webpack:///src/app/modules/tecnologia-informacao/contratos/modelo/cadastro/cadastro.component.html","webpack:///src/app/modules/tecnologia-informacao/contratos/modelo/cadastro/cadastro.component.scss","webpack:///src/app/modules/tecnologia-informacao/contratos/modelo/cadastro/cadastro.component.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/modelo/modelo.module.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/modelo/lista/lista.component.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/modelo/modelo-routing.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/modelo/cadastro/cadastro.component.html","webpack:///src/app/modules/tecnologia-informacao/estoque/modelo/lista/lista.component.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/modelo/lista/lista.component.scss","webpack:///src/app/modules/tecnologia-informacao/estoque/modelo/lista/lista.component.scss","webpack:///src/app/modules/tecnologia-informacao/estoque/modelo/cadastro/cadastro.component.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/modelo/modelo-routing.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/modelo/modelo.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/modelo/lista/lista.component.html","webpack:///src/app/modules/tecnologia-informacao/estoque/modelo/cadastro/cadastro.component.scss"],"names":["TecnologiaInformacaoCadastrosModeloCadastroComponent","formBuilder","pnotify","activatedRoute","router","routerService","titleService","atividadesService","modeloService","tipoItemService","loading","loadingNavBar","breadCrumbTree","tipoItem","registrarAcesso","setBreadCrumb","setFormBuilder","onActivatedRoute","getTipoItem","subscribe","appTitle","id","snapshot","params","idSubModulo","setTitle","descricao","routerLink","$activatedRouteSubscription","unsubscribe","loadingTipoItem","IN_STAT","IN_PAGI","pipe","response","status","body","queryParams","_response","getBase64UrlParams","form","patchValue","group","ID_TECN_INFO_ITEM_MODE","DS_OBSE","NM_MODE","required","ID_TECN_INFO_ITEM_TIPO","field","onFieldInvalid","get","touched","formControl","controls","validator","validationResult","postModelo","value","reset","success","navigate","relativeTo","error","selector","template","TecnologiaInformacaoModeloModule","declarations","imports","forRoot","providers","provide","useValue","TecnologiaInformacaoCadastrosModeloListaComponent","route","confirmModalService","dateService","tipos","cod","nome","subtitles","text","color","itemsPerPage","currentPage","begin","end","buildForm","getModelo","getParams","PAGI","TIME","Date","getTime","setValue","setBase64UrlParams","modelos","totalItems","noResult","stat","confirmChange","asObservable","result","showConfirm","modelo","event","page","_params","_obj","prop","convertToUrlDate","routes","path","component","TecnologiaInformacaoEstoqueModeloModuleRoutingModule","forChild","exports","TecnologiaInformacaoEstoqueModeloListaComponent","tipoProdutoService","loadingTipoProduto","tipoProduto","tableConfig","subtitleBorder","border","getTiposProduto","hasOwnProperty","TT_REGI_PAGI","getModelos","ID_TEIN_ESTO_PRTP","ID_TEIN_ESTO_PRMO","NM_TIPO","onFilter","TecnologiaInformacaoEstoqueModeloCadastroComponent","message","TecnologiaInformacaoCadastrosModeloModuleRoutingModule","TecnologiaInformacaoEstoqueModeloModule"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC6BFA,oDAAoD;AAc/D,sEACUC,WADV,EAEUC,OAFV,EAGUC,cAHV,EAIUC,MAJV,EAKUC,aALV,EAMUC,YANV,EAOUC,iBAPV,EAQUC,aARV,EASUC,eATV,EASsE;AAAA;;AAR5D,eAAAR,WAAA,GAAAA,WAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AApBV,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,cAAA,GAA6B,EAA7B;AAOA,eAAAC,QAAA,GAA4C,EAA5C;AAYI;;AAxB2D;AAAA;AAAA,qCA0BvD;AACN,iBAAKC,eAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,cAAL;AACA,iBAAKC,gBAAL;AACA,iBAAKC,WAAL;AACD;AAhC8D;AAAA;AAAA,4CAkChD;AACb,iBAAKX,iBAAL,CAAuBO,eAAvB,GAAyCK,SAAzC;AACD;AApC8D;AAAA;AAAA,0CAsClD;AACX,iBAAKC,QAAL,GAAgB,UAAhB;AACA,gBAAMC,EAAE,GAAG,KAAKlB,cAAL,CAAoBmB,QAApB,CAA6BC,MAA7B,CAAoCC,WAA/C;AACA,iBAAKlB,YAAL,CAAkBmB,QAAlB,CAA2B,KAAKL,QAAhC;AACA,iBAAKR,cAAL,GAAsB,CACpB;AACEc,uBAAS,EAAE,MADb;AAEEC,wBAAU,EAAE;AAFd,aADoB,EAKpB;AACED,uBAAS,EAAE,WADb;AAEEC,wBAAU,6CAAsCN,EAAtC;AAFZ,aALoB,EASpB;AACEK,uBAAS,EAAE,SADb;AAEEC,wBAAU;AAFZ,aAToB,EAapB;AACED,uBAAS,EAAE,KAAKN;AADlB,aAboB,CAAtB;AAiBD,WA3D8D,CA6D/D;;AA7D+D;AAAA;AAAA,wCA8DjD;AACZ,iBAAKQ,2BAAL,CAAiCC,WAAjC;AACD;AAhE8D;AAAA;AAAA,wCAkEjD;AAAA;;AACZ,iBAAKC,eAAL,GAAuB,IAAvB;AACA,iBAAKrB,eAAL,CACGS,WADH,CACe;AAAEa,qBAAO,EAAE,GAAX;AAAgBC,qBAAO,EAAE;AAAzB,aADf,EAEGC,IAFH,CAGI,gEAAS,YAAM;AACb,mBAAI,CAACH,eAAL,GAAuB,KAAvB;AACD,aAFD,CAHJ,EAOGX,SAPH,CAOa,UAACe,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,qBAAI,CAACtB,QAAL,GAAgBqB,QAAQ,CAACE,IAAT,CAAc,MAAd,CAAhB;AACD;AACF,aAXH;AAYD;AAhF8D;AAAA;AAAA,6CAkF5C;AAAA;;AACjB,iBAAKR,2BAAL,GAAmC,KAAKzB,cAAL,CAAoBkC,WAApB,CAAgClB,SAAhC,CACjC,UAACe,QAAD,EAAc;AACZ,kBAAMI,SAAS,GAAG,MAAI,CAACjC,aAAL,CAAmBkC,kBAAnB,CAAsCL,QAAtC,CAAlB;;AACA,oBAAI,CAACM,IAAL,CAAUC,UAAV,CAAqBH,SAArB;AACD,aAJgC,CAAnC;AAMD,WAzF8D,CA2F/D;;AA3F+D;AAAA;AAAA,2CA4FjD;AACZ,iBAAKE,IAAL,GAAY,KAAKvC,WAAL,CAAiByC,KAAjB,CAAuB;AACjCC,oCAAsB,EAAE,CAAC,IAAD,CADS;AAEjCC,qBAAO,EAAE,CAAC,IAAD,CAFwB;AAGjCC,qBAAO,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWC,QAAZ,CAAP,CAHwB;AAIjCf,qBAAO,EAAE,CAAC,GAAD,EAAM,CAAC,2DAAWe,QAAZ,CAAN,CAJwB;AAKjCC,oCAAsB,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWD,QAAZ,CAAP;AALS,aAAvB,CAAZ;AAOD,WApG8D,CAsG/D;;AAtG+D;AAAA;AAAA,uCAuGlDE,KAvGkD,EAuGnC;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AA5G8D;AAAA;AAAA,yCA8GhDA,KA9GgD,EA8GpC;AACzBA,iBAAK,GAAG,KAAKR,IAAL,CAAUU,GAAV,CAAcF,KAAd,CAAR;AACA,mBAAOA,KAAK,CAACb,MAAN,IAAgB,SAAhB,IAA6Ba,KAAK,CAACG,OAA1C;AACD;AAjH8D;AAAA;AAAA,0CAmH/CH,KAnH+C,EAmHhC;AAC7B,gBAAIF,QAAQ,GAAG,KAAf;AACA,gBAAIM,WAAW,GAAG,IAAI,2DAAJ,EAAlB;;AAEA,gBAAI,KAAKZ,IAAL,CAAUa,QAAV,CAAmBL,KAAnB,EAA0BM,SAA9B,EAAyC;AACvC,kBAAIC,gBAAgB,GAAG,KAAKf,IAAL,CAAUa,QAAV,CAAmBL,KAAnB,EAA0BM,SAA1B,CAAoCF,WAApC,CAAvB;AACAN,sBAAQ,GACNS,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACT,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AAhI8D;AAAA;AAAA,uCAkIlD;AAAA;;AACX,iBAAKnC,aAAL,GAAqB,IAArB;AACA,iBAAKH,aAAL,CACGgD,UADH,CACc,KAAKhB,IAAL,CAAUiB,KADxB,EAEGxB,IAFH,CAGI,gEAAS,YAAM;AACb,oBAAI,CAACtB,aAAL,GAAqB,KAArB;AACD,aAFD,CAHJ,EAOGQ,SAPH,CAQI,UAACe,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACK,IAAL,CAAUkB,KAAV;;AACA,sBAAI,CAACxD,OAAL,CAAayD,OAAb;;AACA,sBAAI,CAACvD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,KAAD,CAArB,EAA8B;AAC5BC,4BAAU,EAAE,MAAI,CAAC1D;AADW,iBAA9B;AAGD,eAND,MAMO;AACL,sBAAI,CAACD,OAAL,CAAa4D,KAAb;AACD;AACF,aAlBL,EAmBI,UAACA,KAAD,EAAgB;AACd,oBAAI,CAAC5D,OAAL,CAAa4D,KAAb;AACD,aArBL;AAuBD;AA3J8D;;AAAA;AAAA,S;;;;gBAd/D;;gBALO;;gBACA;;gBAAgB;;gBARhB;;gBACA;;gBACA;;gBAIA;;gBARA;;;;AA4BI9D,0DAAoD,6DALhE,iEAAU;AACT+D,gBAAQ,EAAE,iDADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAKgE,E,+EAexC,2D,EACJ,2F,EACO,+D,EACR,uD,EACO,yF,EACD,uF,EACK,qG,EACJ,kG,EACE,iH,EAvBoC,GAApDhE,oDAAoD,CAApD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBb,iFAAmB,kEAAnB;AACA,0EAAa,OAAb,EAAsB,yDAAtB,E,CAEA;AAIA;AAGA;AAIA;AAIA;;UAgCaiE,gCAAgC;AAAA;AAAA,O;;AAAhCA,sCAAgC,6DA3B5C,+DAAS;AACRC,oBAAY,EAAE,CACZ,yGADY,EAEZ,kHAFY,CADN;AAKRC,eAAO,EAAE,CACP,8GADO,EAEP,4DAFO,EAGP,4DAHO,EAIP,2DAJO,EAKP,mEALO,EAMP,oEANO,EAOP,2EAAiBC,OAAjB,EAPO,EAQP,qEAAcA,OAAd,EARO,EASP,8DAAWA,OAAX,EATO,EAUP,gEAAYA,OAAZ,EAVO,EAWP,kEAAmBA,OAAnB,EAXO,EAYP,6EAZO,EAaP,sFAbO,EAcP,qGAdO,EAeP,kFAfO,EAgBP,0FAhBO,EAiBP,mDAjBO,EAkBP,kEAlBO,CALD;AAyBRC,iBAAS,EAAE,CAAC,2FAAD,EAAiB;AAAEC,iBAAO,EAAE,uDAAX;AAAsBC,kBAAQ,EAAE;AAAhC,SAAjB;AAzBH,OAAT,CA2B4C,GAAhCN,gCAAgC,CAAhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eC7Db;AAKA;AAKA;;;UAkBaO,iDAAiD;AA+C5D;AAEA,mEACUC,KADV,EAEUvE,OAFV,EAGUC,cAHV,EAIUK,aAJV,EAKUP,WALV,EAMUyE,mBANV,EAOUrE,aAPV,EAQUsE,WARV,EASUlE,eATV,EASsE;AAAA;;AAR5D,eAAAgE,KAAA,GAAAA,KAAA;AACA,eAAAvE,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAK,aAAA,GAAAA,aAAA;AACA,eAAAP,WAAA,GAAAA,WAAA;AACA,eAAAyE,mBAAA,GAAAA,mBAAA;AACA,eAAArE,aAAA,GAAAA,aAAA;AACA,eAAAsE,WAAA,GAAAA,WAAA;AACA,eAAAlE,eAAA,GAAAA,eAAA;AAnDV,eAAAC,OAAA,GAAU,IAAV,CAmDsE,CAnDtD;;AAChB,eAAAC,aAAA,GAAgB,KAAhB,CAkDsE,CAlD/C;;AACvB,eAAAmB,eAAA,GAAkB,KAAlB;AACA,eAAAjB,QAAA,GAA4C,EAA5C,CAgDsE,CA1CtE;;AACA,eAAA+D,KAAA,GAAQ,CACN;AACEC,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADM,EAKN;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALM,CAAR;AAWA,eAAAC,SAAA,GAA8B,CAC5B;AACE1D,cAAE,EAAE,CADN;AAEE2D,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACE5D,cAAE,EAAE,CADN;AAEE2D,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA;;AACA,eAAAC,YAAA,GAAuB,EAAvB;AAEA,eAAAC,WAAA,GAAsB,CAAtB;AACA,eAAAC,KAAA,GAAgB,CAAhB;AACA,eAAAC,GAAA,GAAc,EAAd;AAaI;;AA3DwD;AAAA;AAAA,qCA6DjD;AACT,iBAAKC,SAAL;AACA,iBAAKvE,aAAL;AACA,iBAAKE,gBAAL;AACA,iBAAKC,WAAL;AACD;AAlE2D;AAAA;AAAA,wCAoE9C;AACZ,iBAAKU,2BAAL,CAAiCC,WAAjC;AACD;AAtE2D;AAAA;AAAA,wCAwE9C;AAAA;;AACZ,iBAAKC,eAAL,GAAuB,IAAvB;AACA,iBAAKrB,eAAL,CACGS,WADH,CACe;AAAEa,qBAAO,EAAE,GAAX;AAAgBC,qBAAO,EAAE;AAAzB,aADf,EAEGC,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAACH,eAAL,GAAuB,KAAvB;AACD,aAFD,CAHJ,EAOGX,SAPH,CAOa,UAACe,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACtB,QAAL,GAAgBqB,QAAQ,CAACE,IAAT,CAAc,MAAd,CAAhB;AACD;AACF,aAXH;AAYD;AAtF2D;AAAA;AAAA,6CAwFzC;AAAA;;AACjB,iBAAKR,2BAAL,GAAmC,KAAKzB,cAAL,CAAoBkC,WAApB,CAAgClB,SAAhC,CACjC,UAACe,QAAD,EAAc;AACZ,kBAAMI,SAAS,GAAG,MAAI,CAACjC,aAAL,CAAmBkC,kBAAnB,CAAsCL,QAAtC,CAAlB;;AACA,oBAAI,CAACM,IAAL,CAAUC,UAAV,CAAqBH,SAArB;;AACA,oBAAI,CAACiD,SAAL,CAAe,MAAI,CAACC,SAAL,EAAf;AACD,aALgC,CAAnC;AAOD;AAhG2D;AAAA;AAAA,sCAkGhD;AACV,iBAAKhD,IAAL,GAAY,KAAKvC,WAAL,CAAiByC,KAAjB,CAAuB;AACjCC,oCAAsB,EAAE,CAAC,IAAD,CADS;AAEjCE,qBAAO,EAAE,CAAC,IAAD,CAFwB;AAGjCd,qBAAO,EAAE,CAAC,IAAD,CAHwB;AAIjCgB,oCAAsB,EAAE,CAAC,IAAD,CAJS;AAKjC0C,kBAAI,EAAE,CAAC,CAAD,CAL2B;AAMjCC,kBAAI,EAAE,CAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAD;AAN2B,aAAvB,CAAZ;AAQD;AA3G2D;AAAA;AAAA,0CA6G5C;AACd,gBAAMvE,EAAE,GAAG,KAAKlB,cAAL,CAAoBmB,QAApB,CAA6BC,MAA7B,CAAoCC,WAA/C;AACA,iBAAKZ,cAAL,GAAsB,CACpB;AACEc,uBAAS,EAAE,MADb;AAEEC,wBAAU;AAFZ,aADoB,EAKpB;AACED,uBAAS,EAAE,WADb;AAEEC,wBAAU,6CAAsCN,EAAtC;AAFZ,aALoB,EASpB;AACEK,uBAAS,EAAE;AADb,aAToB,CAAtB;AAaD;AA5H2D;AAAA;AAAA,qCA8HjD;AACT,iBAAKc,IAAL,CAAUU,GAAV,CAAc,MAAd,EAAsB2C,QAAtB,CAA+B,IAAIF,IAAJ,GAAWC,OAAX,EAA/B;AACA,iBAAKnB,KAAL,CAAWb,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAK1D,cADK;AAEtBkC,yBAAW,EAAE,KAAKhC,aAAL,CAAmByF,kBAAnB,CAAsC,KAAKN,SAAL,EAAtC;AAFS,aAAxB;AAID;AApI2D;AAAA;AAAA,oCAsIlDjE,MAtIkD,EAsIzC;AAAA;;AACjB,gBAAI,CAAC,KAAKb,OAAV,EAAmB,KAAKC,aAAL,GAAqB,IAArB;AAEnB,iBAAKH,aAAL,CACG+E,SADH,CACahE,MADb,EAEGU,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAACvB,OAAL,GAAe,KAAf;AACA,oBAAI,CAACC,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGQ,SARH,CASI,UAACe,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAAC4D,OAAL,GAAe7D,QAAQ,CAACE,IAAT,CAAc,MAAd,CAAf;AACA,sBAAI,CAAC4D,UAAL,GAAkB9D,QAAQ,CAACE,IAAT,CAAc,OAAd,CAAlB;AACA,sBAAI,CAAC6D,QAAL,GAAgB,KAAhB;AACD,eAJD,MAIO;AACL,sBAAI,CAACA,QAAL,GAAgB,IAAhB;AACA,sBAAI,CAACF,OAAL,GAAe,EAAf;AACD;AACF,aAlBL,EAmBI,UAACjC,KAAD,EAAW;AACT,oBAAI,CAAC5D,OAAL,CAAa4D,KAAb;;AACA,oBAAI,CAACmC,QAAL,GAAgB,IAAhB;AACD,aAtBL;AAwBD;AAjK2D;AAAA;AAAA,qCAmKjDF,OAnKiD,EAmKX;AAAA;;AAC/C,gBAAMG,IAAI,GAAGH,OAAO,CAAChE,OAAR,IAAmB,GAAnB,GAAyB,GAAzB,GAA+B,GAA5C;AAEA,iBAAKoE,aAAL,CAAmBD,IAAnB,EACGE,YADH,GAEGnE,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACoE,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AAEb,oBAAI,CAAC1F,aAAL,GAAqB,IAArB;AACAoF,qBAAO,CAAChE,OAAR,GAAkBmE,IAAlB;AACA,qBAAO,MAAI,CAAC1F,aAAL,CAAmBgD,UAAnB,CAA8BuC,OAA9B,CAAP;AACD,aAND,CAJJ,EAWI,iEAAS,YAAM;AACb,oBAAI,CAACpF,aAAL,GAAqB,KAArB;AACD,aAFD,CAXJ,EAeGQ,SAfH,CAgBI,UAACwC,OAAD,EAAkB;AAChB,oBAAI,CAACzD,OAAL,CAAayD,OAAb;AACD,aAlBL,EAmBI,UAACG,KAAD,EAAgB;AACdiC,qBAAO,CAAChE,OAAR,GAAkBgE,OAAO,CAAChE,OAAR,IAAmB,GAAnB,GAAyB,GAAzB,GAA+B,GAAjD;;AACA,oBAAI,CAAC7B,OAAL,CAAa4D,KAAb;AACD,aAtBL;AAwBD;AA9L2D;AAAA;AAAA,wCAgM9CoC,IAhM8C,EAgM1C;AAChB,gBAAIA,IAAI,IAAI,GAAZ,EACE,OAAO,KAAKxB,mBAAL,CAAyB4B,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAQF,mBAAO,KAAK5B,mBAAL,CAAyB4B,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AAjN2D;AAAA;AAAA,uCAmN/CC,MAnN+C,EAmNV;AAChD,iBAAK9B,KAAL,CAAWb,QAAX,CAAoB,CAAC,KAAD,EAAQ2C,MAAM,CAAC5D,sBAAf,CAApB,EAA4D;AAC1DkB,wBAAU,EAAE,KAAK1D,cADyC;AAE1DkC,yBAAW,EAAE,KAAKhC,aAAL,CAAmByF,kBAAnB,CAAsCS,MAAtC;AAF6C,aAA5D;AAID;AAxN2D;AAAA;AAAA,wCA0N9CC,KA1N8C,EA0NvB;AACnC,iBAAKpB,KAAL,GAAa,CAACoB,KAAK,CAACC,IAAN,GAAa,CAAd,IAAmBD,KAAK,CAACtB,YAAtC;AACA,iBAAKG,GAAL,GAAWmB,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACtB,YAA9B;AACD;AA7N2D;AAAA;AAAA,sCA+NhD;AACV,gBAAIwB,OAAO,GAAG,EAAd;AACA,gBAAIC,IAAI,GAAG,KAAKnE,IAAL,CAAUiB,KAArB;;AAEA,iBAAK,IAAImD,IAAT,IAAiBD,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACC,IAAD,CAAR,EAAgB;AACd,oBAAID,IAAI,CAACC,IAAD,CAAJ,YAAsBjB,IAA1B,EACEe,OAAO,CAACE,IAAD,CAAP,GAAgB,KAAKjC,WAAL,CAAiBkC,gBAAjB,CAAkCF,IAAI,CAACC,IAAD,CAAtC,CAAhB,CADF,KAEKF,OAAO,CAACE,IAAD,CAAP,GAAgBD,IAAI,CAACC,IAAD,CAApB;AACN;AACF;;AAED,mBAAOF,OAAP;AACD;AA5O2D;;AAAA;AAAA,S;;;;gBA1BrD;;gBAIA;;gBAJQ;;gBAKR;;gBAJW;;gBAJX;;gBASA;;gBASA;;gBAnBA;;;;AA8BIlC,uDAAiD,6DAL7D,gEAAU;AACTT,gBAAQ,EAAE,8CADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAK6D,E,+EAkD3C,sD,EACE,2F,EACO,8D,EACD,kG,EACF,0D,EACQ,uG,EACN,0F,EACF,sF,EACI,iH,EA1DiC,GAAjDQ,iDAAiD,CAAjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eC3Bb;;;AAIA,UAAMsC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACED,YAAI,EAAE,MADR;AAEEC,iBAAS,EAAE;AAFb,OALqB,EASrB;AACED,YAAI,EAAE,KADR;AAEEC,iBAAS,EAAE;AAFb,OATqB,CAAvB;;UAmBaC,oDAAoD;AAAA;AAAA,O;;AAApDA,0DAAoD,6DAJhE,+DAAS;AACR9C,eAAO,EAAE,CAAC,6DAAa+C,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIgE,GAApDF,oDAAoD,CAApD;;;;;;;;;;;;;;;;AC1Bb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCGf;AAKA;AAKA;;;UAkBaG,+CAA+C;AAkD1D;AAEA,iEACU3C,KADV,EAEUvE,OAFV,EAGUC,cAHV,EAIUK,aAJV,EAKUP,WALV,EAMUyE,mBANV,EAOUrE,aAPV,EAQUsE,WARV,EASU0C,kBATV,EAS4E;AAAA;;AARlE,eAAA5C,KAAA,GAAAA,KAAA;AACA,eAAAvE,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAK,aAAA,GAAAA,aAAA;AACA,eAAAP,WAAA,GAAAA,WAAA;AACA,eAAAyE,mBAAA,GAAAA,mBAAA;AACA,eAAArE,aAAA,GAAAA,aAAA;AACA,eAAAsE,WAAA,GAAAA,WAAA;AACA,eAAA0C,kBAAA,GAAAA,kBAAA;AAtDV,eAAA3G,OAAA,GAAU,IAAV,CAsD4E,CAtD5D;;AAChB,eAAAC,aAAA,GAAgB,KAAhB,CAqD4E,CArDrD;;AACvB,eAAA2G,kBAAA,GAAqB,KAArB;AACA,eAAAC,WAAA,GAAkD,EAAlD;AAIA,eAAAC,WAAA,GAA0C;AACxCC,0BAAc,EAAE,IADwB;AAExCC,kBAAM,EAAE;AAFgC,WAA1C,CA+C4E,CAxC5E;;AACA,eAAA9C,KAAA,GAAQ,CACN;AACEC,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADM,EAKN;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALM,CAAR;AAWA,eAAAC,SAAA,GAA8B,CAC5B;AACE1D,cAAE,EAAE,CADN;AAEE2D,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACE5D,cAAE,EAAE,CADN;AAEE2D,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA;;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAc,UAAA,GAAa,EAAb;AACA,eAAAb,WAAA,GAAc,CAAd;AAaI;;AA9DsD;AAAA;AAAA,qCAgE/C;AACT,iBAAKG,SAAL;AACA,iBAAKvE,aAAL;AACA,iBAAKE,gBAAL;AACA,iBAAK0G,eAAL;AACD;AArEyD;AAAA;AAAA,wCAuE5C;AACZ,iBAAK/F,2BAAL,CAAiCC,WAAjC;AACD;AAzEyD;AAAA;AAAA,4CA2ExC;AAAA;;AAChB,iBAAKyF,kBAAL,GAA0B,IAA1B;AACA,iBAAKD,kBAAL,CACGM,eADH,CACmB;AAAE5F,qBAAO,EAAE,GAAX;AAAgBC,qBAAO,EAAE;AAAzB,aADnB,EAEGC,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAACqF,kBAAL,GAA0B,KAA1B;AACD,aAFD,CAHJ,EAOGnG,SAPH,CAOa,UAACe,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACoF,WAAL,GAAmBrF,QAAQ,CAACE,IAAT,CAAc,MAAd,CAAnB;AACD;AACF,aAXH;AAYD;AAzFyD;AAAA;AAAA,6CA2FvC;AAAA;;AACjB,iBAAKR,2BAAL,GAAmC,KAAKzB,cAAL,CAAoBkC,WAApB,CAAgClB,SAAhC,CACjC,UAACe,QAAD,EAAc;AACZ,kBAAMI,SAAS,GAAG,MAAI,CAACjC,aAAL,CAAmBkC,kBAAnB,CAAsCL,QAAtC,CAAlB;;AACA,oBAAI,CAACM,IAAL,CAAUC,UAAV,CAAqBH,SAArB;;AACA,kBAAIA,SAAS,CAACsF,cAAV,CAAyB,cAAzB,CAAJ,EACE,MAAI,CAAC1C,YAAL,GAAoB5C,SAAS,CAACuF,YAA9B;;AACF,oBAAI,CAACC,UAAL,CAAgB,MAAI,CAACtC,SAAL,EAAhB;AACD,aAPgC,CAAnC;AASD;AArGyD;AAAA;AAAA,sCAuG9C;AACV,iBAAKhD,IAAL,GAAY,KAAKvC,WAAL,CAAiByC,KAAjB,CAAuB;AACjCqF,+BAAiB,EAAE,CAAC,IAAD,CADc;AAEjCC,+BAAiB,EAAE,CAAC,IAAD,CAFc;AAGjCnF,qBAAO,EAAE,CAAC,IAAD,CAHwB;AAIjCoF,qBAAO,EAAE,CAAC,IAAD,CAJwB;AAKjClG,qBAAO,EAAE,CAAC,IAAD,CALwB;AAMjC0D,kBAAI,EAAE,CAAC,CAAD,CAN2B;AAOjCoC,0BAAY,EAAE,CAAC,KAAK3C,YAAN,CAPmB;AAQjCQ,kBAAI,EAAE,CAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAD;AAR2B,aAAvB,CAAZ;AAUD;AAlHyD;AAAA;AAAA,2CAoHzCV,YApHyC,EAoH3B;AAC7B,iBAAKA,YAAL,GAAoBA,YAApB;AACA,iBAAKgD,QAAL;AACD;AAvHyD;AAAA;AAAA,0CA0H1C;AACd,gBAAM7G,EAAE,GAAG,KAAKlB,cAAL,CAAoBmB,QAApB,CAA6BC,MAA7B,CAAoCC,WAA/C;AACA,iBAAKZ,cAAL,GAAsB,CACpB;AACEc,uBAAS,EAAE,MADb;AAEEC,wBAAU;AAFZ,aADoB,EAKpB;AACED,uBAAS,EAAE,SADb;AAEEC,wBAAU,2CAAoCN,EAApC;AAFZ,aALoB,EASpB;AACEK,uBAAS,EAAE;AADb,aAToB,CAAtB;AAaD;AAzIyD;AAAA;AAAA,qCA2I/C;AACT,iBAAKc,IAAL,CAAUU,GAAV,CAAc,MAAd,EAAsB2C,QAAtB,CAA+B,CAA/B;AACA,iBAAKrD,IAAL,CAAUU,GAAV,CAAc,MAAd,EAAsB2C,QAAtB,CAA+B,IAAIF,IAAJ,GAAWC,OAAX,EAA/B;AACA,iBAAKnB,KAAL,CAAWb,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAK1D,cADK;AAEtBkC,yBAAW,EAAE,KAAKhC,aAAL,CAAmByF,kBAAnB,CAAsC,KAAKN,SAAL,EAAtC;AAFS,aAAxB;AAID;AAlJyD;AAAA;AAAA,qCAqJ/CjE,MArJ+C,EAqJtC;AAAA;;AAClB,gBAAI,CAAC,KAAKb,OAAV,EAAmB,KAAKC,aAAL,GAAqB,IAArB;AAEnB,iBAAKH,aAAL,CACGsH,UADH,CACcvG,MADd,EAEGU,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACvB,OAAL,GAAe,KAAf;AACA,qBAAI,CAACC,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGQ,SARH,CASI,UAACe,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC4D,OAAL,GAAe7D,QAAQ,CAACE,IAAT,CAAc,MAAd,CAAf;AACA,uBAAI,CAAC4D,UAAL,GAAkB9D,QAAQ,CAACE,IAAT,CAAc,OAAd,CAAlB;AACA,uBAAI,CAAC6D,QAAL,GAAgB,KAAhB;AACD,eAJD,MAIO;AACL,uBAAI,CAACA,QAAL,GAAgB,IAAhB;AACA,uBAAI,CAACF,OAAL,GAAe,EAAf;AACD;AACF,aAlBL,EAmBI,UAACjC,KAAD,EAAW;AACT,qBAAI,CAAC5D,OAAL,CAAa4D,KAAb;;AACA,qBAAI,CAACmC,QAAL,GAAgB,IAAhB;AACD,aAtBL;AAwBD;AAhLyD;AAAA;AAAA,qCAkL/CF,OAlL+C,EAkLF;AAAA;;AACtD,gBAAMG,IAAI,GAAGH,OAAO,CAAChE,OAAR,IAAmB,GAAnB,GAAyB,GAAzB,GAA+B,GAA5C;AAEA,iBAAKoE,aAAL,CAAmBD,IAAnB,EACGE,YADH,GAEGnE,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACoE,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AAEb,qBAAI,CAAC1F,aAAL,GAAqB,IAArB;AACAoF,qBAAO,CAAChE,OAAR,GAAkBmE,IAAlB;AACA,qBAAO,OAAI,CAAC1F,aAAL,CAAmBgD,UAAnB,CAA8BuC,OAA9B,CAAP;AACD,aAND,CAJJ,EAWI,iEAAS,YAAM;AACb,qBAAI,CAACpF,aAAL,GAAqB,KAArB;AACD,aAFD,CAXJ,EAeGQ,SAfH,CAgBI,UAACwC,OAAD,EAAkB;AAChB,qBAAI,CAACzD,OAAL,CAAayD,OAAb;AACD,aAlBL,EAmBI,UAACG,KAAD,EAAgB;AACdiC,qBAAO,CAAChE,OAAR,GAAkBgE,OAAO,CAAChE,OAAR,IAAmB,GAAnB,GAAyB,GAAzB,GAA+B,GAAjD;;AACA,qBAAI,CAAC7B,OAAL,CAAa4D,KAAb;AACD,aAtBL;AAwBD;AA7MyD;AAAA;AAAA,wCA+M5CoC,IA/M4C,EA+MxC;AAChB,gBAAIA,IAAI,IAAI,GAAZ,EACE,OAAO,KAAKxB,mBAAL,CAAyB4B,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAQF,mBAAO,KAAK5B,mBAAL,CAAyB4B,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AAhOyD;AAAA;AAAA,wCAmO5CE,KAnO4C,EAmOrC;AACnB,iBAAKhE,IAAL,CAAUU,GAAV,CAAc,MAAd,EAAsB2C,QAAtB,CAA+BW,KAAK,CAACC,IAArC;AACA,iBAAKjE,IAAL,CAAUU,GAAV,CAAc,MAAd,EAAsB2C,QAAtB,CAA+B,IAAIF,IAAJ,GAAWC,OAAX,EAA/B;AACA,iBAAKnB,KAAL,CAAWb,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAK1D,cADK;AAEtBkC,yBAAW,EAAE,KAAKhC,aAAL,CAAmByF,kBAAnB,CAAsC,KAAKN,SAAL,EAAtC;AAFS,aAAxB;AAID;AA1OyD;AAAA;AAAA,sCA6O9C;AACV,gBAAIkB,OAAO,GAAG,EAAd;AACA,gBAAIC,IAAI,GAAG,KAAKnE,IAAL,CAAUiB,KAArB;;AAEA,iBAAK,IAAImD,IAAT,IAAiBD,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACC,IAAD,CAAR,EAAgB;AACd,oBAAID,IAAI,CAACC,IAAD,CAAJ,YAAsBjB,IAA1B,EACEe,OAAO,CAACE,IAAD,CAAP,GAAgB,KAAKjC,WAAL,CAAiBkC,gBAAjB,CAAkCF,IAAI,CAACC,IAAD,CAAtC,CAAhB,CADF,KAEKF,OAAO,CAACE,IAAD,CAAP,GAAgBD,IAAI,CAACC,IAAD,CAApB;AACN;AACF;;AAED,mBAAOF,OAAP;AACD;AA1PyD;;AAAA;AAAA,S;;;;gBA1BnD;;gBAIA;;gBAJQ;;gBAKR;;gBAJW;;gBAJX;;gBASA;;gBASA;;gBAnBA;;;;AA8BIU,qDAA+C,6DAL3D,gEAAU;AACTrD,gBAAQ,EAAE,qDADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAK2D,E,+EAqDzC,sD,EACE,2F,EACO,8D,EACD,iG,EACF,0D,EACQ,uG,EACN,0F,EACF,sF,EACO,0H,EA7D4B,GAA/CoD,+CAA+C,CAA/C;;;;;;;;;;;;;;;;AC/Bb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCAf;AAGA;AAOA;;;UAqBae,kDAAkD;AAc7D,oEACUlI,WADV,EAEUC,OAFV,EAGUC,cAHV,EAIUC,MAJV,EAKUC,aALV,EAMUC,YANV,EAOUC,iBAPV,EAQUC,aARV,EASU6G,kBATV,EAS4E;AAAA;;AARlE,eAAApH,WAAA,GAAAA,WAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAA6G,kBAAA,GAAAA,kBAAA;AApBV,eAAA3G,OAAA,GAAU,KAAV;AACA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,cAAA,GAA6B,EAA7B;AAOA,eAAA2G,WAAA,GAAkD,EAAlD;AAYI;;AAxByD;AAAA;AAAA,qCA0BrD;AACN,iBAAKzG,eAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,cAAL;AACA,iBAAKC,gBAAL;AACA,iBAAK0G,eAAL;AACD;AAhC4D;AAAA;AAAA,4CAkC9C;AACb,iBAAKpH,iBAAL,CAAuBO,eAAvB,GAAyCK,SAAzC;AACD;AApC4D;AAAA;AAAA,0CAsChD;AACX,iBAAKC,QAAL,GAAgB,UAAhB;AACA,gBAAMC,EAAE,GAAG,KAAKlB,cAAL,CAAoBmB,QAApB,CAA6BC,MAA7B,CAAoCC,WAA/C;AACA,iBAAKlB,YAAL,CAAkBmB,QAAlB,CAA2B,KAAKL,QAAhC;AACA,iBAAKR,cAAL,GAAsB,CACpB;AACEc,uBAAS,EAAE,MADb;AAEEC,wBAAU,EAAE;AAFd,aADoB,EAKpB;AACED,uBAAS,EAAE,SADb;AAEEC,wBAAU,2CAAoCN,EAApC;AAFZ,aALoB,EASpB;AACEK,uBAAS,EAAE,SADb;AAEEC,wBAAU;AAFZ,aAToB,EAapB;AACED,uBAAS,EAAE,KAAKN;AADlB,aAboB,CAAtB;AAiBD,WA3D4D,CA6D7D;;AA7D6D;AAAA;AAAA,wCA8D/C;AACZ,iBAAKQ,2BAAL,CAAiCC,WAAjC;AACD;AAhE4D;AAAA;AAAA,4CAkE3C;AAAA;;AAChB,iBAAKyF,kBAAL,GAA0B,IAA1B;AACA,iBAAKD,kBAAL,CACGM,eADH,CACmB;AAAE5F,qBAAO,EAAE,GAAX;AAAgBC,qBAAO,EAAE;AAAzB,aADnB,EAEGC,IAFH,CAGI,gEAAS,YAAM;AACb,qBAAI,CAACqF,kBAAL,GAA0B,KAA1B;AACD,aAFD,CAHJ,EAOGnG,SAPH,CAOa,UAACe,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACoF,WAAL,GAAmBrF,QAAQ,CAACE,IAAT,CAAc,MAAd,CAAnB;AACD;AACF,aAXH;AAYD;AAhF4D;AAAA;AAAA,6CAkF1C;AAAA;;AACjB,iBAAKR,2BAAL,GAAmC,KAAKzB,cAAL,CAAoBoB,MAApB,CAChCJ,SADgC,CAE/B,UAAAe,QAAQ,EAAI;AACV,kBAAGA,QAAQ,CAAC0F,cAAT,CAAwB,IAAxB,CAAH,EAAiC;AAC/B,uBAAI,CAACrC,SAAL,CAAerD,QAAQ,CAACb,EAAxB;AACD;AACF,aAN8B,CAAnC;AAQD,WA3F4D,CA6F7D;;AA7F6D;AAAA;AAAA,2CA8F/C;AACZ,iBAAKmB,IAAL,GAAY,KAAKvC,WAAL,CAAiByC,KAAjB,CAAuB;AACjCqF,+BAAiB,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWjF,QAAZ,CAAP,CADc;AAEjCkF,+BAAiB,EAAE,CAAC,IAAD,CAFc;AAGjCpF,qBAAO,EAAE,CAAC,IAAD,CAHwB;AAIjCC,qBAAO,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWC,QAAZ,CAAP,CAJwB;AAKjCf,qBAAO,EAAE,CAAC,GAAD,EAAM,CAAC,2DAAWe,QAAZ,CAAN;AALwB,aAAvB,CAAZ;AAOD,WAtG4D,CAwG7D;;AAxG6D;AAAA;AAAA,uCAyGhDE,KAzGgD,EAyGjC;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AA9G4D;AAAA;AAAA,yCAgH9CA,KAhH8C,EAgHlC;AACzBA,iBAAK,GAAG,KAAKR,IAAL,CAAUU,GAAV,CAAcF,KAAd,CAAR;AACA,mBAAOA,KAAK,CAACb,MAAN,IAAgB,SAAhB,IAA6Ba,KAAK,CAACG,OAA1C;AACD;AAnH4D;AAAA;AAAA,0CAqH7CH,KArH6C,EAqH9B;AAC7B,gBAAIF,QAAQ,GAAG,KAAf;AACA,gBAAIM,WAAW,GAAG,IAAI,2DAAJ,EAAlB;;AAEA,gBAAI,KAAKZ,IAAL,CAAUa,QAAV,CAAmBL,KAAnB,EAA0BM,SAA9B,EAAyC;AACvC,kBAAIC,gBAAgB,GAAG,KAAKf,IAAL,CAAUa,QAAV,CAAmBL,KAAnB,EAA0BM,SAA1B,CAAoCF,WAApC,CAAvB;AACAN,sBAAQ,GACNS,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACT,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AAlI4D;AAAA;AAAA,oCAoInDzB,EApImD,EAoIjD;AAAA;;AACV,iBAAKX,OAAL,GAAe,IAAf;AACA,iBAAKF,aAAL,CACG+E,SADH,CACalE,EADb,EAEGY,IAFH,CAGI,gEAAS,YAAM;AACb,qBAAI,CAACvB,OAAL,GAAe,KAAf;AACD,aAFD,CAHJ,EAOGS,SAPH,CAQI,UAAAe,QAAQ,EAAI;AAEV,kBAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA2B;AACzB,uBAAI,CAACjC,OAAL,CAAa4D,KAAb;;AACA;AACD;;AACD,kBAAIyC,MAAM,GAAGrE,QAAQ,CAACE,IAAT,CAAc,MAAd,CAAb;;AACA,qBAAI,CAACI,IAAL,CAAUC,UAAV,CAAqB8D,MAArB;AAED,aAjBL,EAkBI,UAAAzC,KAAK,EAAI;AACP,kBAAI;AACF,uBAAI,CAAC5D,OAAL,CAAa4D,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYsE,OAA/B;AACD,eAFD,CAEE,OAAOtE,KAAP,EAAc;AACd,uBAAI,CAAC5D,OAAL,CAAa4D,KAAb;AACD;AACF,aAxBL;AA0BD;AAhK4D;AAAA;AAAA,uCAiKhD;AAAA;;AACX,iBAAKnD,aAAL,GAAqB,IAArB;AACA,iBAAKH,aAAL,CACGgD,UADH,CACc,KAAKhB,IAAL,CAAUiB,KADxB,EAEGxB,IAFH,CAGI,gEAAS,YAAM;AACb,qBAAI,CAACtB,aAAL,GAAqB,KAArB;AACD,aAFD,CAHJ,EAOGQ,SAPH,CAQI,UAACe,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACK,IAAL,CAAUkB,KAAV;;AACA,uBAAI,CAACxD,OAAL,CAAayD,OAAb;;AACA,uBAAI,CAACvD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,KAAD,CAArB,EAA8B;AAC5BC,4BAAU,EAAE,OAAI,CAAC1D;AADW,iBAA9B;AAGD,eAND,MAMO;AACL,uBAAI,CAACD,OAAL,CAAa4D,KAAb;AACD;AACF,aAlBL,EAmBI,UAACA,KAAD,EAAgB;AACd,qBAAI,CAAC5D,OAAL,CAAa4D,KAAb;AACD,aArBL;AAuBD;AA1L4D;;AAAA;AAAA,S;;;;gBAhB7D;;gBANO;;gBAEA;;gBAAgB;;gBALhB;;gBADA;;gBADA;;gBAIA;;gBADA;;;;AAwBIqE,wDAAkD,6DAL9D,iEAAU;AACTpE,gBAAQ,EAAE,wDADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAK8D,E,+EAetC,2D,EACJ,2F,EACO,+D,EACR,uD,EACO,yF,EACD,uF,EACK,qG,EACJ,iG,EACK,0H,EAvB+B,GAAlDmE,kDAAkD,CAAlD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eC5Bb;;;AAIA,UAAMrB,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACED,YAAI,EAAE,MADR;AAEEC,iBAAS,EAAE;AAFb,OALqB,EASrB;AACED,YAAI,EAAE,KADR;AAEEC,iBAAS,EAAE;AAFb,OATqB,CAAvB;;UAmBaqB,sDAAsD;AAAA;AAAA,O;;AAAtDA,4DAAsD,6DAJlE,+DAAS;AACRlE,eAAO,EAAE,CAAC,6DAAa+C,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIkE,GAAtDkB,sDAAsD,CAAtD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbb,iFAAmB,kEAAnB;AACA,0EAAa,OAAb,EAAsB,yDAAtB,E,CAEA;AAIA;AAGA;AAIA;AAIA;;UAgCaC,uCAAuC;AAAA;AAAA,O;;AAAvCA,6CAAuC,6DA3BnD,+DAAS;AACRpE,oBAAY,EAAE,CACZ,uGADY,EAEZ,gHAFY,CADN;AAKRC,eAAO,EAAE,CACP,4GADO,EAEP,4DAFO,EAGP,4DAHO,EAIP,2DAJO,EAKP,mEALO,EAMP,oEANO,EAOP,2EAAiBC,OAAjB,EAPO,EAQP,qEAAcA,OAAd,EARO,EASP,8DAAWA,OAAX,EATO,EAUP,gEAAYA,OAAZ,EAVO,EAWP,kEAAmBA,OAAnB,EAXO,EAYP,6EAZO,EAaP,sFAbO,EAcP,qGAdO,EAeP,kFAfO,EAgBP,0FAhBO,EAiBP,mDAjBO,EAkBP,kEAlBO,CALD;AAyBRC,iBAAS,EAAE,CAAC,2FAAD,EAAiB;AAAEC,iBAAO,EAAE,uDAAX;AAAsBC,kBAAQ,EAAE;AAAhC,SAAjB;AAzBH,OAAT,CA2BmD,GAAvC+D,uCAAuC,CAAvC;;;;;;;;;;;;;;;;AC/Db;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA","file":"modelo-modelo-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Modelos\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"ID_TECN_INFO_ITEM_MODE\\\">ID</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"ID_TECN_INFO_ITEM_MODE\\\"\\n                formControlName=\\\"ID_TECN_INFO_ITEM_MODE\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"NM_MODE\\\">Modelo</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"NM_MODE\\\"\\n                formControlName=\\\"NM_MODE\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"tipoItem\\\">Tipo de Item</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"tipoItem\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingTipoItem\\\"\\n                labelForId=\\\"ID_TECN_INFO_ITEM_TIPO\\\"\\n                bindLabel=\\\"NM_ITEM_TIPO\\\"\\n                bindValue=\\\"ID_TECN_INFO_ITEM_TIPO\\\"\\n                id=\\\"ID_TECN_INFO_ITEM_TIPO\\\"\\n                formControlName=\\\"ID_TECN_INFO_ITEM_TIPO\\\"\\n              >\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\n              </ng-template>\\n            </ng-select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div>\\n      <table  class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th scope=\\\"col\\\">ID </th>\\n            <th scope=\\\"col\\\">Modelo</th>\\n            <th scope=\\\"col\\\" style=\\\"width:80px\\\"></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let modelo of modelos | slice : begin : end; let i = index\\\">\\n            <td [ngClass]=\\\"modelo.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n            {{modelo.ID_TECN_INFO_ITEM_MODE}}\\n            </td>\\n            <td>{{ modelo.NM_MODE | uppercase }}</td>\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\n              <span class=\\\"mr-3\\\" [tooltip]=\\\"modelo.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(modelo)\\\">\\n                  <i [ngClass]=\\\"modelo.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openRegister(modelo)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div>\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n      <pagination\\n        [maxSize]=\\\"10\\\"\\n        [totalItems]=\\\"totalItems\\\"\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        [(ngModel)]=\\\"currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\"\\n        nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Cadastro de Modelos\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false\\\"\\n    (click)=\\\"postModelo()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\n        <legend>Dados do Modelo</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"NM_MODE\\\">Modelo</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_MODE\\\"\\n              formControlName=\\\"NM_MODE\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('NM_MODE') + ' ' + onFieldRequired('NM_MODE')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_MODE')\\\" message=\\\"Modelo é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"tipoItem\\\">Tipo de Item</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tipoItem\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingTipoItem\\\"\\n              labelForId=\\\"ID_TECN_INFO_ITEM_TIPO\\\"\\n              bindLabel=\\\"NM_ITEM_TIPO\\\"\\n              bindValue=\\\"ID_TECN_INFO_ITEM_TIPO\\\"\\n              id=\\\"ID_TECN_INFO_ITEM_TIPO\\\"\\n              formControlName=\\\"ID_TECN_INFO_ITEM_TIPO\\\">\\n            </ng-select>\\n          <invalid-form-control [show]=\\\"onFieldInvalid('ID_TECN_INFO_ITEM_TIPO')\\\" message=\\\"Tipo de Item é obrigatório.\\\"></invalid-form-control>\\n        </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"IN_STAT\\\">Situação</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"IN_STAT\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              [ngClass]=\\\"onFieldRequired('IN_STAT')\\\">\\n              <option value=\\\"1\\\">Ativo</option>\\n              <option value=\\\"0\\\">Inativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('IN_STAT')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\n            <legend>Observação</legend>\\n            <div class=\\\"form-row justify-content-center\\\">\\n              <div class=\\\"form-group col\\\">\\n                <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n                <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n              </div>\\n            </div>\\n            <br>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2NvbnRyYXRvcy9tb2RlbG8vY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import { ITecnologiaInformacaoTipoItem } from './../../tipo-item/models/tipoItem';\nimport { TecnologiaInformacaoCadastroTipoItemService } from './../../tipo-item/services/tipo-item.service';\nimport { ITecnologiaInformacaoModelo } from './../models/modelo';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap';\nimport { finalize } from 'rxjs/operators';\n\nimport { TecnologiaInformacaoCadastroModeloService } from '../services/modelo.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  AbstractControl,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//interfaces\n\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'tecnologia-informacao-cadastros-modelo-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class TecnologiaInformacaoCadastrosModeloCadastroComponent\n  implements OnInit, OnDestroy {\n  noResult: boolean;\n  loading = false;\n  loadingNavBar = false;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  bsConfig: Partial<BsDatepickerConfig>;\n  loadingTipoItem: boolean;\n  modelos: Array<ITecnologiaInformacaoModelo>;\n  $activatedRouteSubscription: Subscription;\n  tipoItem: ITecnologiaInformacaoTipoItem[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private routerService: RouterService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n    private modeloService: TecnologiaInformacaoCadastroModeloService,\n    private tipoItemService: TecnologiaInformacaoCadastroTipoItemService\n  ) {}\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n    this.getTipoItem();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.appTitle = 'Cadastro';\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/tecnologia-informacao/home',\n      },\n      {\n        descricao: 'Contratos',\n        routerLink: `/tecnologia-informacao/contratos/${id}`,\n      },\n      {\n        descricao: 'Modelos',\n        routerLink: `./../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //Consumir informações que estão na rota para editar\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  getTipoItem() {\n    this.loadingTipoItem = true;\n    this.tipoItemService\n      .getTipoItem({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTipoItem = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tipoItem = response.body['data'];\n        }\n      });\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n      }\n    );\n  }\n\n  //formulario\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      ID_TECN_INFO_ITEM_MODE: [null],\n      DS_OBSE: [null],\n      NM_MODE: [null, [Validators.required]],\n      IN_STAT: ['1', [Validators.required]],\n      ID_TECN_INFO_ITEM_TIPO: [null, [Validators.required]],\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  postModelo() {\n    this.loadingNavBar = true;\n    this.modeloService\n      .postModelo(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            this.form.reset();\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          this.pnotify.error();\n        }\n      );\n  }\n}\n","import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { RouterModule } from '@angular/router';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport ptBr from '@angular/common/locales/pt';\nimport { defineLocale, ptBrLocale, BsDatepickerModule } from 'ngx-bootstrap';\nregisterLocaleData(ptBr);\ndefineLocale('pt-br', ptBrLocale);\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { TecnologiaInformacaoCadastrosModeloListaComponent } from './lista/lista.component';\nimport { TecnologiaInformacaoCadastrosModeloModuleRoutingModule } from './modelo-routing.module';\nimport { TecnologiaInformacaoCadastrosModeloCadastroComponent } from './cadastro/cadastro.component';\n\n@NgModule({\n  declarations: [\n    TecnologiaInformacaoCadastrosModeloListaComponent,\n    TecnologiaInformacaoCadastrosModeloCadastroComponent,\n  ],\n  imports: [\n    TecnologiaInformacaoCadastrosModeloModuleRoutingModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\n})\nexport class TecnologiaInformacaoModeloModule {}\n","import { TecnologiaInformacaoCadastroTipoItemService } from './../../tipo-item/services/tipo-item.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\n//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { TecnologiaInformacaoCadastroModeloService } from '../services/modelo.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//modelos\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\nimport { ITecnologiaInformacaoModelo } from './../models/modelo';\nimport { ITecnologiaInformacaoTipoItem } from '../../tipo-item/models/tipoItem';\nimport { PageChangedEvent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'tecnologia-informacao-cadastros-modelo-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class TecnologiaInformacaoCadastrosModeloListaComponent\n  implements OnInit, OnDestroy {\n  breadCrumbTree: Array<Breadcrumb>;\n\n  idSubModulo: number;\n  modelos: Array<ITecnologiaInformacaoModelo>;\n  noResult: boolean;\n  loading = true; //Loading FullPage\n  loadingNavBar = false; //Loading do NAVBAR\n  loadingTipoItem = false;\n  tipoItem: ITecnologiaInformacaoTipoItem[] = [];\n\n  $activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n\n  // Tipos de Situação dos Modelos (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '0',\n      nome: 'Inativos',\n    },\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage: number = 10;\n  totalItems: number;\n  currentPage: number = 1;\n  begin: number = 0;\n  end: number = 10;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private modeloService: TecnologiaInformacaoCadastroModeloService,\n    private formBuilder: FormBuilder,\n    private confirmModalService: ConfirmModalService,\n    private routerService: RouterService,\n    private dateService: DateService,\n    private tipoItemService: TecnologiaInformacaoCadastroTipoItemService\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n    this.getTipoItem();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  getTipoItem() {\n    this.loadingTipoItem = true;\n    this.tipoItemService\n      .getTipoItem({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTipoItem = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tipoItem = response.body['data'];\n        }\n      });\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        this.getModelo(this.getParams());\n      }\n    );\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID_TECN_INFO_ITEM_MODE: [null],\n      NM_MODE: [null],\n      IN_STAT: [null],\n      ID_TECN_INFO_ITEM_TIPO: [null],\n      PAGI: [1],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/tecnologia-informacao/home`,\n      },\n      {\n        descricao: 'Contratos',\n        routerLink: `/tecnologia-informacao/contratos/${id}`,\n      },\n      {\n        descricao: 'Modelos',\n      },\n    ];\n  }\n\n  onFilter() {\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getModelo(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n\n    this.modeloService\n      .getModelo(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.modelos = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.modelos = [];\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  changeType(modelos: ITecnologiaInformacaoModelo) {\n    const stat = modelos.IN_STAT == '1' ? '0' : '1';\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loadingNavBar = true;\n          modelos.IN_STAT = stat;\n          return this.modeloService.postModelo(modelos);\n        }),\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotify.success();\n        },\n        (error: any) => {\n          modelos.IN_STAT = modelos.IN_STAT == '1' ? '0' : '1';\n          this.pnotify.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == '1')\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Deseja realmente prosseguir com a ativação do registro?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  openRegister(modelo: ITecnologiaInformacaoModelo) {\n    this.route.navigate(['../', modelo.ID_TECN_INFO_ITEM_MODE], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(modelo),\n    });\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//components\nimport { TecnologiaInformacaoEstoqueModeloListaComponent } from './lista/lista.component';\nimport { TecnologiaInformacaoEstoqueModeloCadastroComponent } from './cadastro/cadastro.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TecnologiaInformacaoEstoqueModeloListaComponent,\n  },\n  {\n    path: 'novo',\n    component: TecnologiaInformacaoEstoqueModeloCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: TecnologiaInformacaoEstoqueModeloCadastroComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TecnologiaInformacaoEstoqueModeloModuleRoutingModule {}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Cadastro de Modelos\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false\\\"\\n    (click)=\\\"postModelo()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\n        <legend>Dados do Modelo</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"NM_MODE\\\">Modelo</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_MODE\\\"\\n              formControlName=\\\"NM_MODE\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('NM_MODE') + ' ' + onFieldRequired('NM_MODE')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_MODE')\\\" message=\\\"Modelo é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"tipoProduto\\\">Tipo de Produto</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tipoProduto\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingTipoProduto\\\"\\n              labelForId=\\\"ID_TEIN_ESTO_PRTP\\\"\\n              bindLabel=\\\"NM_TIPO\\\"\\n              bindValue=\\\"ID_TEIN_ESTO_PRTP\\\"\\n              id=\\\"ID_TEIN_ESTO_PRTP\\\"\\n              formControlName=\\\"ID_TEIN_ESTO_PRTP\\\">\\n            </ng-select>\\n          <invalid-form-control [show]=\\\"onFieldInvalid('ID_TEIN_ESTO_PRTP')\\\" message=\\\"Tipo de Produto é obrigatório.\\\"></invalid-form-control>\\n        </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"IN_STAT\\\">Situação</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"IN_STAT\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              [ngClass]=\\\"onFieldRequired('IN_STAT')\\\">\\n              <option value=\\\"1\\\">Ativo</option>\\n              <option value=\\\"0\\\">Inativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('IN_STAT')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\n            <legend>Observação</legend>\\n            <div class=\\\"form-row justify-content-center\\\">\\n              <div class=\\\"form-group col\\\">\\n                <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n                <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n              </div>\\n            </div>\\n            <br>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n</app-body>\";","import { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { TecnologiaInformacaoEstoqueTipoProdutosService } from '../../tipo-produto/services/tipo-produto.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\n//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { TecnologiaInformacaoEstoqueModeloService } from '../services/modelo.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//modelos\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\nimport { ITecnologiaInformacaoEstoqueModelo } from './../models/modelo';\nimport { ITecnologiaInformacaoTipoProduto } from '../../tipo-produto/models/tipoProduto';\nimport { PageChangedEvent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'tecnologia-informacao-estoque-produtos-modelo-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class TecnologiaInformacaoEstoqueModeloListaComponent\n  implements OnInit, OnDestroy {\n  breadCrumbTree: Array<Breadcrumb>;\n\n  idSubModulo: number;\n  modelos: Array<ITecnologiaInformacaoEstoqueModelo>;\n  noResult: boolean;\n  loading = true; //Loading FullPage\n  loadingNavBar = false; //Loading do NAVBAR\n  loadingTipoProduto = false;\n  tipoProduto: ITecnologiaInformacaoTipoProduto[] = [];\n\n  $activatedRouteSubscription: Subscription;\n  \n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n    border: true,\n  };\n\n  form: FormGroup;\n\n  // Tipos de Situação dos Modelos (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '0',\n      nome: 'Inativos',\n    },\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private modeloService: TecnologiaInformacaoEstoqueModeloService,\n    private formBuilder: FormBuilder,\n    private confirmModalService: ConfirmModalService,\n    private routerService: RouterService,\n    private dateService: DateService,\n    private tipoProdutoService: TecnologiaInformacaoEstoqueTipoProdutosService\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n    this.getTiposProduto();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  getTiposProduto() {\n    this.loadingTipoProduto = true;\n    this.tipoProdutoService\n      .getTiposProduto({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTipoProduto = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tipoProduto = response.body['data'];\n        }\n      });\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n        this.getModelos(this.getParams());\n      }\n    );\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID_TEIN_ESTO_PRTP: [null],\n      ID_TEIN_ESTO_PRMO: [null],\n      NM_MODE: [null],\n      NM_TIPO: [null],\n      IN_STAT: [null],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/tecnologia-informacao/home`,\n      },\n      {\n        descricao: 'Estoque',\n        routerLink: `/tecnologia-informacao/estoque/${id}`,\n      },\n      {\n        descricao: 'Modelos',\n      },\n    ];\n  }\n\n  onFilter() {\n    this.form.get('PAGI').setValue(1);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n\n  getModelos(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n\n    this.modeloService\n      .getModelos(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.modelos = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.modelos = [];\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  changeType(modelos: ITecnologiaInformacaoEstoqueModelo) {\n    const stat = modelos.IN_STAT == '1' ? '0' : '1';\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loadingNavBar = true;\n          modelos.IN_STAT = stat;\n          return this.modeloService.postModelo(modelos);\n        }),\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotify.success();\n        },\n        (error: any) => {\n          modelos.IN_STAT = modelos.IN_STAT == '1' ? '0' : '1';\n          this.pnotify.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == '1')\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Deseja realmente prosseguir com a ativação do registro?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2NvbnRyYXRvcy9tb2RlbG8vbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvbW9kZWxvL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","//rxjs\nimport { finalize } from 'rxjs/operators';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\n//services\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { TecnologiaInformacaoEstoqueTipoProdutosService } from '../../tipo-produto/services/tipo-produto.service';\nimport { TecnologiaInformacaoEstoqueModeloService } from '../services/modelo.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  AbstractControl,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//interfaces\nimport { ITecnologiaInformacaoTipoProduto } from '../../tipo-produto/models/tipoProduto';\nimport { ITecnologiaInformacaoEstoqueModelo } from './../models/modelo';\n\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'tecnologia-informacao-estoque-produtos-modelo-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class TecnologiaInformacaoEstoqueModeloCadastroComponent\n  implements OnInit, OnDestroy {\n  noResult: boolean;\n  loading = false;\n  loadingNavBar = false;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  bsConfig: Partial<BsDatepickerConfig>;\n  loadingTipoProduto: boolean;\n  modelos: Array<ITecnologiaInformacaoEstoqueModelo>;\n  $activatedRouteSubscription: Subscription;\n  tipoProduto: ITecnologiaInformacaoTipoProduto[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private routerService: RouterService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n    private modeloService: TecnologiaInformacaoEstoqueModeloService,\n    private tipoProdutoService: TecnologiaInformacaoEstoqueTipoProdutosService\n  ) {}\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n    this.getTiposProduto();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.appTitle = 'Cadastro';\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/tecnologia-informacao/home',\n      },\n      {\n        descricao: 'Estoque',\n        routerLink: `/tecnologia-informacao/estoque/${id}`,\n      },\n      {\n        descricao: 'Modelos',\n        routerLink: `./../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //Consumir informações que estão na rota para editar\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  getTiposProduto() {\n    this.loadingTipoProduto = true;\n    this.tipoProdutoService\n      .getTiposProduto({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTipoProduto = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tipoProduto = response.body['data'];\n        }\n      });\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.params\n      .subscribe(\n        response => {\n          if(response.hasOwnProperty('id')){\n            this.getModelo(response.id);\n          }\n        }\n      )\n  }\n\n  //formulario\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      ID_TEIN_ESTO_PRTP: [null, [Validators.required]],\n      ID_TEIN_ESTO_PRMO: [null],\n      DS_OBSE: [null],\n      NM_MODE: [null, [Validators.required]],\n      IN_STAT: ['1', [Validators.required]],\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  getModelo(id){\n    this.loading = true;\n    this.modeloService\n      .getModelo(id)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe(\n        response => {\n\n          if (response.status != 200){\n            this.pnotify.error();\n            return\n          }\n          let modelo = response.body[\"data\"];\n          this.form.patchValue(modelo);\n\n        },\n        error => {\n          try {\n            this.pnotify.error(error.error.message);\n          } catch (error) {\n            this.pnotify.error();\n          }\n        }\n      )\n  }\n  postModelo() {\n    this.loadingNavBar = true;\n    this.modeloService\n      .postModelo(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            this.form.reset();\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          this.pnotify.error();\n        }\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//components\nimport { TecnologiaInformacaoCadastrosModeloListaComponent } from './lista/lista.component';\nimport { TecnologiaInformacaoCadastrosModeloCadastroComponent } from './cadastro/cadastro.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TecnologiaInformacaoCadastrosModeloListaComponent,\n  },\n  {\n    path: 'novo',\n    component: TecnologiaInformacaoCadastrosModeloCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: TecnologiaInformacaoCadastrosModeloCadastroComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TecnologiaInformacaoCadastrosModeloModuleRoutingModule { }\n","import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { RouterModule } from '@angular/router';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport ptBr from '@angular/common/locales/pt';\nimport { defineLocale, ptBrLocale, BsDatepickerModule } from 'ngx-bootstrap';\nregisterLocaleData(ptBr);\ndefineLocale('pt-br', ptBrLocale);\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { TecnologiaInformacaoEstoqueModeloListaComponent } from './lista/lista.component';\nimport { TecnologiaInformacaoEstoqueModeloModuleRoutingModule } from './modelo-routing.module';\nimport { TecnologiaInformacaoEstoqueModeloCadastroComponent } from './cadastro/cadastro.component';\n\n@NgModule({\n  declarations: [\n    TecnologiaInformacaoEstoqueModeloListaComponent,\n    TecnologiaInformacaoEstoqueModeloCadastroComponent,\n  ],\n  imports: [\n    TecnologiaInformacaoEstoqueModeloModuleRoutingModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\n})\nexport class TecnologiaInformacaoEstoqueModeloModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Modelos\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"ID_TEIN_ESTO_PRMO\\\">ID</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"ID_TEIN_ESTO_PRMO\\\"\\n                placeholder=\\\"Digite...\\\"\\n                formControlName=\\\"ID_TEIN_ESTO_PRMO\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"NM_MODE\\\">Modelo</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"NM_MODE\\\"\\n                placeholder=\\\"Digite...\\\"\\n                formControlName=\\\"NM_MODE\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"tipoProduto\\\">Tipo de Produto</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"tipoProduto\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingTipoProduto\\\"\\n                labelForId=\\\"ID_TEIN_ESTO_PRTP\\\"\\n                bindLabel=\\\"NM_TIPO\\\"\\n                bindValue=\\\"ID_TEIN_ESTO_PRTP\\\"\\n                id=\\\"ID_TEIN_ESTO_PRTP\\\"\\n                formControlName=\\\"ID_TEIN_ESTO_PRTP\\\"\\n              >\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\n              </ng-template>\\n            </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-1\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div>\\n      <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\">ID </th>\\n            <th scope=\\\"col\\\">Modelo</th>\\n            <th scope=\\\"col\\\">Tipo de Produto</th>\\n            <th scope=\\\"col\\\" style=\\\"width:80px\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let modelo of modelos; let i = index\\\">\\n            <td [ngClass]=\\\"modelo.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n            {{modelo.ID_TEIN_ESTO_PRMO}}\\n            </td>\\n            <td>{{ modelo.NM_MODE | uppercase }}</td>\\n            <td>{{ modelo.NM_TIPO | uppercase }}</td>\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\n              <span class=\\\"mr-3\\\" [tooltip]=\\\"modelo.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(modelo)\\\">\\n                  <i [ngClass]=\\\"modelo.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', modelo.ID_TEIN_ESTO_PRMO]\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table><br>\\n    </div>\\n    <div>\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n      <pagination\\n        [maxSize]=\\\"10\\\"\\n        [totalItems]=\\\"totalItems\\\"\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        [(ngModel)]=\\\"currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\"\\n        nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvbW9kZWxvL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIn0= */\";"]}