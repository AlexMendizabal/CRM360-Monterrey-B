{"version":3,"sources":["./src/app/modules/comercial/cadastros/representantes/formulario/formulario.component.ts","./src/app/modules/comercial/services/clientes.service.ts","./src/app/modules/comercial/cadastros/representantes/representantes.module.ts","./src/app/modules/comercial/comissoes/representantes/representantes.component.scss","./src/app/modules/comercial/comissoes/representantes/programacao-pagamentos/lista/lista.component.scss","./src/app/modules/comercial/cadastros/representantes/lista/lista.component.html","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/cadastros/representantes/representantes-routing.module.ts","./src/app/modules/comercial/comissoes/representantes/representantes.component.html","./src/app/modules/comercial/comissoes/representantes/programacao-pagamentos/lista/lista.component.html","./src/app/modules/comercial/comissoes/representantes/programacao-pagamentos/programacao-pagamentos.module.ts","./src/app/modules/comercial/cadastros/representantes/formulario/formulario.component.scss","./src/app/modules/comercial/comissoes/representantes/representantes.module.ts","./src/app/modules/comercial/cadastros/representantes/formulario/formulario-resolver.guard.ts","./src/app/modules/comercial/cadastros/representantes/formulario/formulario.component.html","./src/app/modules/comercial/comissoes/representantes/programacao-pagamentos/lista/lista.component.ts","./src/app/modules/comercial/comissoes/representantes/representantes-routing.module.ts","./src/app/modules/comercial/cadastros/representantes/lista/lista.component.ts","./src/app/modules/comercial/comissoes/representantes/representantes.component.ts","./src/app/modules/comercial/comissoes/representantes/programacao-pagamentos/programacao-pagamentos.service.ts","./src/app/shared/pipes/cpf.pipe.ts","./src/app/modules/comercial/cadastros/representantes/lista/lista.component.scss","./src/app/modules/comercial/comissoes/representantes/programacao-pagamentos/programacao-pagamentos-routing.module.ts"],"names":[],"mappings":"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","file":"representantes-representantes-module-es2015.js","sourcesContent":["import { ComercialComissoesGestaoComissionamentosService } from './../../../comissoes/representantes/gestao-comissionamentos/gestao-comissionamentos.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { JsonResponse } from './../../../../../models/json-response';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  FormArray,\n  Validators,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { Location } from '@angular/common';\n\n\n// ng-brazil\n// import { MASKS } from 'ng-brazil';\nimport { NgBrazilValidators } from 'ng-brazil';\nimport { utilsBr } from 'js-brasil';\n\n// Interfaces\n\n\n// Services\nimport { DateService } from './../../../../../shared/services/core/date.service';\nimport { PNotifyService } from './../../../../../shared/services/core/pnotify.service';\nimport { ComercialGestaoAssociacoesCoordenadoresEscritoriosService } from './../../../gestao/associacoes/coordenadores-escritorios/coordenadores-escritorios.service';\nimport { ComercialCadastrosRepresentantesService } from './../representantes.service';\nimport { ComercialCadastrosEquipeVendaService } from './../../equipe-venda/equipe-venda.service';\nimport { ComercialService } from './../../../comercial.service';\nimport { EstadosService } from 'src/app/shared/services/requests/estados.service';\nimport { CepService } from 'src/app/shared/services/ws/cep.service';\nimport { ComercialCadastrosTipoComissionamentoService } from './../../tipos-comissionamento/tipo-comissionamento.service';\nimport { ComercialClientesCadastroEnderecosFormularioService } from './../../../clientes/cadastro/enderecos/formulario/formulario.service';\n\n// Interfaces\nimport { Breadcrumb } from './../../../../../shared/modules/breadcrumb/breadcrumb';\n\n// ngx-bootstrap\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n\n\n@Component({\n  selector: 'comercial-gestao-representantes-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosRepresentantesFormularioComponent\n  implements OnInit {\n    public MASKS = utilsBr.MASKS;\n\n  loaderFullScreen = true;\n  loaderNavbar: boolean;\n\n  appTitle: string;\n  action: string;\n\n  modalValues: any[] = [];\n  loadingModal: boolean = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  form: FormGroup;\n  formModelo: FormGroup;\n\n  formChanged = false;\n  submittingForm = false;\n\n  dados: Array<any> = [];\n  escritorio: Array<any> = [];\n  equipes: Array<any> = [];\n  bancos: Array<any> = [];\n  tipoVendedor: Array<any> = [];\n  urlAnexo: Array<any> = [];\n\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  formEnderecos: FormGroup;\n  estados: any = [];\n\n  enderecosOp: any = [];\n  enderecosLoading: boolean = false;\n  enderecoLoaded: boolean = false;\n\n  cidadeRetorno: string = '';\n  estadoRetorno: string = '';\n\n  maxLengthRules: any = {};\n  maxLengthMessages: any = {};\n\n  toggle = false;\n  searching = false;\n  firstSearch = false;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  showGrupos = true;\n\n  modalRef: BsModalRef;\n\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n\n  limparGrupoPrincipal: boolean;\n\n  tableConfigAssocGrupos: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  tableConfigPrecos: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  tableConfigAnexos: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  showAnexos: boolean = false;\n  formData: Array<FormData> = [];\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  situacao: any = [\n    {\n      id: 0,\n      descricao: 'INATIVO',\n    },\n    {\n      id: 1,\n      descricao: 'ATIVO',\n    }\n  ];\n\n  tipoComissao: any = [];\n  tipoComissaoModal: any = [];\n\n\n  constructor(private formBuilder: FormBuilder,\n              private activatedRoute: ActivatedRoute,\n              private dateService: DateService,\n              private localeService: BsLocaleService,\n              private bsModalService: BsModalService,\n              private pnotifyService: PNotifyService,\n              private confirmModalService: ConfirmModalService,\n              private location: Location,\n              private representantesService: ComercialCadastrosRepresentantesService,\n              private router: Router,\n              private gestaoAssociacoesService: ComercialGestaoAssociacoesCoordenadoresEscritoriosService,\n              private modalService: BsModalService,\n              private comercialService: ComercialService,\n              private cadastroEquipeVenda: ComercialCadastrosEquipeVendaService,\n              private estadosService: EstadosService,\n              private cepService: CepService,\n              private formService: ComercialClientesCadastroEnderecosFormularioService,\n              private tipoComissionamentoService: ComercialCadastrosTipoComissionamentoService,\n              private gestaoComissionamentosService: ComercialComissoesGestaoComissionamentosService,\n  ) {\n    this.localeService.use('pt-br');\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.setFormFilter();\n    this.setBreadCrumb();\n    this.getEscritorio();\n    this.getEquipesVenda();\n    this.getTipoComissao();\n    this.getBancos();\n    this.getTipoVendedor();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar Representante';\n        this.action = 'update';\n      } else {\n        this.appTitle = 'Novo Representante';\n        this.action = 'create';\n      }\n\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Representantes',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/representantes/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  // Formulário Preenchido para edição ou novo formulário\n  setFormFilter() {\n        this.estados = this.estadosService.getEstados();\n\n\n        const resolver = this.activatedRoute.snapshot.data.detalhes;\n\n        if (resolver.success === true) {\n\n          const detalhes: any = resolver.data[0];\n\n          this.form = this.formBuilder.group({\n          codRepresentante: [detalhes.codRepresentante],\n          codSituacao: [detalhes.codSituacao ? detalhes.codSituacao : 1, [Validators.required]],\n          tipoPagamentoComissao: [detalhes.tipoPagamentoComissao, [Validators.required]],\n          emiteNotaFiscal: [detalhes.emiteNotaFiscal == 0 ? detalhes.emiteNotaFiscal : 1, [Validators.required]],\n          recebeEmailInativacaoCliente: [detalhes.recebeEmailInativacaoCliente ? detalhes.recebeEmailInativacaoCliente : 1, [Validators.required]],\n          codEquipe: [detalhes.codEquipe, [Validators.required]],\n          codEscritorio: [detalhes.codEscritorio, [Validators.required]],\n          nrMatricula: [detalhes.nrMatricula, [Validators.required]],\n\n          nome: [detalhes.nome, [Validators.required]],\n          razaoSocial: [detalhes.razaoSocial, [Validators.required]],\n          cep: [{value: detalhes.cep, disabled: ''}, [Validators.required]],\n          endereco: [detalhes.endereco, [Validators.required]],\n          // nrEndereco: [detalhes.nrEndereco],\n          nomeBairro: [detalhes.nomeBairro, [Validators.required]],\n          // complemento: [detalhes.complemento],\n          nomeCidade: [detalhes.nomeCidade, [Validators.required]],\n          uf: [detalhes.uf],\n          cpf: [detalhes.cpf, [Validators.required]],\n          rg: [detalhes.rg],\n          email: [detalhes.email],\n          telefone: [detalhes.telefone],\n          celular: [detalhes.celular],\n          dataInicialContrato: detalhes.dataInicialContrato != null\n          ? [this.dateService.convertStringToDate(detalhes.dataInicialContrato, 'usa'), [Validators.required]]\n          : this.dateService.getToday(),\n\n          dataFinalContrato: detalhes.dataFinalContrato != null\n          ? [this.dateService.convertStringToDate(detalhes.dataFinalContrato, 'usa')] : this.dateService.getToday(),\n          // dataFinalContrato: detalhes ? this.dateService.getToday() :\n          // [this.dateService.convertStringToDate(detalhes.dataFinalContrato, 'usa')],\n          // dataRenovacaoContrato: detalhes ? this.dateService.getToday() :\n          // [this.dateService.convertStringToDate(detalhes.dataRenovacaoContrato, 'usa')],\n\n          nomeFantasiaRepresentacao: [detalhes.nomeFantasiaRepresentacao],\n          razaoSocialRepresentacao: [detalhes.razaoSocialRepresentacao],\n          cnpjEmpresaRepresentacao: [detalhes.cnpjEmpresaRepresentacao],\n          ieEmpresaRepresentacao: [detalhes.ieEmpresaRepresentacao],\n          imEmpresaRepresentacao: [detalhes.imEmpresaRepresentacao],\n\n          nomeTitularConta: [detalhes.nomeTitularConta],\n          tipoConta: [detalhes.tipoConta],\n          nomeBanco: [detalhes.nomeBanco],\n          agencia: [detalhes.agencia],\n          contaCorrente: [detalhes.contaCorrente],\n\n          anexos: this.formBuilder.array([]),\n        });\n        this.setCheckValues(detalhes);\n\n        if (detalhes.codRepresentante != null) {\n          this.getAnexos(detalhes.codRepresentante);\n        }\n\n      } else {\n        this.pnotifyService.error();\n        this.location.back();\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  closeModal(modalRef: TemplateRef<any>) {\n    this.modalRef.hide();\n\n   this.getTipoComissao();\n  }\n\n\n  //Ação de Edição ou novo Formulário\n  onSubmit(): void {\n    if (this.action === 'update' && this.form.pristine) {\n      this.onPostAnexos(this.form.value.codRepresentante);\n      this.location.back();\n\n    } else {\n      if (this.checkFormValidation() && this.form.valid) {\n          this.loaderNavbar = true;\n          this.submittingForm = true;\n\n          this.representantesService\n            .save(this.form.getRawValue(), this.action)\n            .pipe(\n              finalize(() => {\n                this.loaderNavbar = false;\n                this.submittingForm = false;\n              })\n            )\n            .subscribe({\n              next: (response: any) => {\n                if (\n                  response.hasOwnProperty('success') &&\n                  response.success === true\n                ) {\n                  this.form.reset();\n                  this.formChanged = false;\n                  this.pnotifyService.success();\n                  this.onPostAnexos(response.data[0].codRepresentante);\n\n                  this.activatedRoute.params.subscribe((params: any) => {\n                    let navigateTo: string;\n\n                    if (params.hasOwnProperty('id')) {\n                      navigateTo = '../../lista';\n                    } else {\n                      navigateTo = '../lista';\n                    }\n\n                    this.router.navigate([navigateTo], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  });\n                } else if (\n                  response.hasOwnProperty('success') &&\n                  response.success === false\n                ) {\n                  this.pnotifyService.error(response.mensagem);\n                } else {\n                  this.pnotifyService.error();\n                }\n              },\n              error: (error: any) => {\n                this.pnotifyService.error();\n              }\n            });\n      } else {\n        this.pnotifyService.notice('Selecione um material.');\n      }\n    }\n  }\n\n  checkFormValidation(): boolean {\n    let isValid = true;\n\n    if (this.form.getRawValue().id === null) {\n      isValid = false;\n    }\n\n    return isValid;\n  }\n\n  onInput() {\n    this.formChanged = true;\n  }\n\n  onInputCep(detalhes: TemplateRef<any>) {\n    if (this.form.get('cep').status == 'VALID') {\n      this.consultaCEP(detalhes, this.form.value.cep);\n    }\n  }\n\n  consultaCEP(detalhes: TemplateRef<any>, cep: string) {\n    if (this.enderecosLoading == false) {\n      this.cidadeRetorno = '';\n      this.estadoRetorno = '';\n\n      this.cepService\n        .getData(cep)\n        .pipe(\n          finalize(() => {\n            this.enderecosLoading = false;\n            this.loaderFullScreen = false;\n          })\n        )\n        .subscribe((response: any) => {\n          this.enderecosLoading = true;\n          if (\n            response.hasOwnProperty('mensagem') &&\n            response.hasOwnProperty('success') &&\n            response.success === true\n          ) {\n            if (response.data.length > 1) {\n              this.formEnderecos = this.formBuilder.group({\n                enderecosRetorno: ['', [Validators.required]],\n              });\n\n              this.enderecosOp = response.data;\n              if ((this.enderecosLoading = true)) {\n                this.openModal(detalhes);\n              }\n            } else {\n              this.enderecoLoaded = true;\n              this.setFormValues(response.data);\n\n\n              this.cidadeRetorno = response.data.localidade;\n              this.estadoRetorno = response.data.uf;\n            }\n          } else if (\n            response.hasOwnProperty('mensagem') &&\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.pnotifyService.notice(response.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        });\n    }\n  }\n\n  onInputCidade() {\n    if (this.form.get('cidade').status == 'VALID') {\n      let cidade = {\n        cidade: this.form.get('nomeCidade').value,\n      };\n\n      this.formService.getIbgeCidades(cidade).subscribe((response: any) => {\n        if (response.responseCode === 200) {\n        } else {\n          this.pnotifyService.notice(\n            'Região de entrega não localizado, favor entrar em contato com o suporte'\n          );\n        }\n      });\n    }\n  }\n\n  setFormValues(enderecoSelecionado: any) {\n    if (this.enderecoLoaded === true) {\n\n      this.form.controls.endereco.enable();\n      this.form.controls.nomeBairro.enable();\n      this.form.controls.nomeCidade.enable();\n      this.form.controls.uf.enable();\n\n      this.form.controls.endereco.setValue(enderecoSelecionado.logradouro);\n      this.form.controls.nomeBairro.setValue(enderecoSelecionado.bairro);\n      this.form.controls.nomeCidade.setValue(enderecoSelecionado.localidade);\n      this.form.controls.uf.setValue(enderecoSelecionado.uf);\n\n      if (enderecoSelecionado.logradouro != '') {\n        this.form.controls.endereco.disable();\n      }\n\n      if (enderecoSelecionado.bairro != '') {\n        this.form.controls.nomeBairro.disable();\n      }\n\n      if (enderecoSelecionado.localidade != '') {\n        this.form.controls.nomeCidade.disable();\n      }\n\n      if (enderecoSelecionado.uf != '') {\n        this.form.controls.uf.disable();\n      }\n    }\n  }\n\n  setCheckValues(data: any) {\n      this.form.controls.endereco.enable();\n      this.form.controls.nomeBairro.enable();\n      this.form.controls.nomeCidade.enable();\n      this.form.controls.uf.enable();\n\n      if (data.endereco != '') {\n        this.form.controls.endereco.disable();\n      }\n\n      if (data.nomeBairro != '') {\n        this.form.controls.nomeBairro.disable();\n      }\n\n      if (data.nomeCidade != '') {\n        this.form.controls.nomeCidade.disable();\n      }\n\n      if (data.uf != '') {\n        this.form.controls.uf.disable();\n      }\n  }\n\n  // Consulta tipo de comissionamento\n  getTipoComissao() {\n\n    this.representantesService\n      .getTipoComissionamento()\n      .subscribe({\n        next: (response: any) => {\n          if (response) {\n            this.tipoComissao = response.data;\n\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  getTipoComissaoModal(){\n    this.loaderFullScreen = true;\n    this.tipoComissaoModal = [];\n    const codTipoComissionamento = this.form.value.tipoPagamentoComissao;\n    console.log(codTipoComissionamento)\n\n    this.tipoComissionamentoService\n    .getDetailTipoComissionamento(codTipoComissionamento)\n    .pipe(\n      finalize(() => {\n        this.loaderFullScreen = false;\n      })\n    )\n    .subscribe(\n      (response: any) => {\n        if (response.success === true) {\n          this.tipoComissaoModal = response.data;\n        }\n        (error: any) => {\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n    })\n  }\n\n  getBancos() {\n    this.representantesService\n      .getBancos()\n      .subscribe({\n        next: (response: any) => {\n          if (response) {\n            this.bancos = response.data;\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  getTipoVendedor() {\n    this.representantesService\n      .getTipoVendedor()\n      .subscribe({\n        next: (response: any) => {\n          if (response) {\n            this.tipoVendedor = response.data;\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n\n  getEquipesVenda() {\n    this.cadastroEquipeVenda\n      .getListaEquipesVenda()\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.showAnexos = true;\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.success === true) {\n            this.equipes = response.data;\n          } else {\n            this.pnotifyService.error('Cadastre uma Equipe de Vendas');\n            this.location.back();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  getEscritorio() {\n    this.gestaoComissionamentosService\n      .getEscritorios()\n      .subscribe({\n        next: (response: any) => {\n          if (response.success === true) {\n            this.escritorio = response.data;\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  // CheckBox\n  onChecked() {\n    this.formModelo.get('de').disable();\n    this.formModelo.get('ate').disable();\n  }\n\n\n  // modal\n  openModal(tiposComissao: TemplateRef<any>) {\n    this.modalRef = this.bsModalService.show(tiposComissao);\n    this.getTipoComissaoModal();\n  }\n\n\n// Tratamento de erros\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    // && this.assocMateriais.controls['controls'][field].validator\n    if (this.form.controls[field].validator ) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n\n    if (required) {\n      return 'is-required';\n    }\n    }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  geetParams(params: any): any {\n    let dataInicial = params['dataInicialVigencia'];\n    let dataFinal = params['dataFimVigencia'];\n\n    this.form.patchValue({\n      dataInicialVigencia: dataInicial,\n      dataFimVigencia: dataFinal\n    });\n\n    if (dataInicial instanceof Date) {\n      dataInicial = this.dateService.convertToUrlDate(dataInicial);\n    }\n\n    if (dataFinal instanceof Date) {\n      dataFinal = this.dateService.convertToUrlDate(dataFinal);\n    }\n\n    return {\n      dataInicial: {dataInicial},\n      dataFinal: {dataFinal}\n    };\n  }\n\n  navegarAnexo(anexo) {\n    this.router\n      .navigate([], {\n        relativeTo: this.activatedRoute,\n      })\n      .then((result) => {\n        window.open(`${anexo.value.urlAnexo}`, '_blank');\n      });\n  }\n\n  getAnexos(codRepresentante: number) {\n    this.loaderNavbar = true;\n    this.showAnexos = false;\n    this.representantesService\n      .getAnexos(codRepresentante)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.showAnexos = true;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.setAnexos(response.data);\n            this.urlAnexo = response.data;\n          }\n        },\n        error: (error: any) => {\n          // if (error['error'].hasOwnProperty('mensagem')) {\n          //   this.pnotifyService.error(error.error.mensagem);\n          // } else {\n          //   this.pnotifyService.error();\n          // }\n        }\n      });\n  }\n\n  setAnexos(anexos: any): void {\n    if (anexos.length > 0) {\n      for (let i = 0; i < anexos.length; i++) {\n        this.onAddAnexos(anexos[i], true);\n      }\n    }\n  }\n\n  get anexos(): FormArray {\n    return this.form.get('anexos') as FormArray;\n  }\n\n  onAddAnexos(anexo: any, manipulateForm?: boolean): void {\n    if (this.checkAnexoExists(anexo) === false) {\n      this.anexos.push(\n        this.formBuilder.group({\n          codAnexo: [anexo.codAnexo],\n          nomeAnexo: [anexo.nomeAnexo],\n          linkAnexo: [anexo.linkAnexo],\n          urlAnexo: [anexo.urlAnexo],\n        })\n      );\n\n      if (manipulateForm) {\n        this.form.markAsTouched();\n        this.form.markAsDirty();\n      }\n    }\n  }\n\n  checkAnexoExists(anexo: any): boolean {\n    return this.form.value.anexos.some((el: any) => {\n      return el.codAnexo === anexo.codAnexo || el.nomeAnexo == anexo.nomeAnexo;\n    });\n  }\n\n  appendFile(files: FileList): any {\n    if (files.length === 0) return;\n    const fd = new FormData();\n    fd.append('file', files[0]);\n    this.formData.push(fd);\n\n    this.anexos.push(\n      this.formBuilder.group({\n        nomeAnexo: [files[0]['name']],\n      })\n    );\n    if (this.showAnexos === false) {\n      this.showAnexos = true;\n    }\n  }\n\n  onPostAnexos(codRepresentante: number): void {\n    if (this.formData.length === 0) {\n      /* this.pnotifyService.notice('Erro'); */\n      return;\n    }\n\n    /* const id = this.form.value.codMaterial; */\n\n    this.formData.forEach((element, index) => {\n      this.representantesService\n        .postAnexos(element, codRepresentante)\n        .subscribe();\n    });\n  }\n\n  onDeleteAnexo(codAnexo: number, index: number): void {\n    this.confirmDelete().subscribe((r: boolean) => {\n      if (codAnexo) {\n        this.loaderNavbar = true;\n        this.representantesService\n          .deleteAnexo(codAnexo)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n            })\n          )\n          .subscribe({\n            next: (response: JsonResponse) => {\n              if (\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                r ? this.deleteDocumento(index) : null;\n              } else if (\n                response.hasOwnProperty('success') &&\n                response.success === false &&\n                response.hasOwnProperty('mensagem')\n              ) {\n                this.pnotifyService.error(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              if (error['error'].hasOwnProperty('mensagem')) {\n                this.pnotifyService.error(error.error.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            }\n          });\n      } else {\n        r ? this.deleteDocumento(index) : null;\n        this.formData.splice(index, 1);\n      }\n    });\n  }\n\n  deleteDocumento(index: number): void {\n    this.anexos.removeAt(index);\n    this.form.markAsTouched();\n    this.form.markAsDirty();\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialClientesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes`;\n\n  constructor(protected http: HttpClient) {}\n\n  getStatus(): Observable<Object> {\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1), retry(2));\n  }\n\n  getClientes(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/pesquisa/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getClientesGrupoEconomico(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/grupo-economico/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getPermissaoAcesso(id: any): Observable<Object> {\n    return this.http\n      .get(`${this.API}/permissao-acesso/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/pesquisa/detalhes/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatosResumido(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getExisteCpfCnpj(\n    documento: any,\n    getDadosCliente: boolean\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/verificar-cpf-cnpj/${documento}?getDadosCliente=${\n          getDadosCliente === true ? 1 : 0\n        }`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  postCliente(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/pre-cadastro`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPropostaAnaliseCredito(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/proposta-analise-credito/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosFaturamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-faturamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosFaturamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-faturamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteAtividadeSecundaria(\n    codCliente: number,\n    id: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/atividade-secundaria/${codCliente}/${id}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getEnderecos(\n    codCliente: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/cadastro/carregar/enderecos/${codCliente}`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getEndereco(\n    codCliente: number,\n    idEndereco: number,\n    idSituacao: number\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/endereco/${codCliente}/${idEndereco}/${idSituacao}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  updateEndereco(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/endereco`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteEndereco(codCliente: number, id: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/endereco/${codCliente}/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatos(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContato(\n    codCliente: number,\n    idContato: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contato/${codCliente}/${idContato}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateContato(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/contato`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteMeioContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/meio-contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteFilho(idFilho: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/filho/${idFilho}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosRelacionamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-relacionamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosRelacionamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-relacionamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPotencialCompra(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/potencial-compra/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updatePotencialCompra(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/potencial-compra`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getAnexos(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/anexos/${codCliente}`)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  uploadAnexo(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/cadastro/upload/anexo`, data)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  deleteAnexo(idAnexo: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/anexo/${idAnexo}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getFilial(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/filial/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getTravas(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/travas/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesFinanceiras(codCliente: number): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/informacoes-financeiras/${codCliente}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesComerciais(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/informacoes-comerciais/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getListaEmails(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/emails/lista/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { ComercialTemplatesModule } from './../../templates/templates.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from './../../../../shared/services/core/pnotify.service';\n\n// Modules\nimport { TemplatesModule } from './../../../../shared/templates/templates.module';\nimport { SharedModule } from './../../../../shared/modules/shared.module';\nimport { ComercialCadastrosMateriaisTemplatesModule } from './../../cadastros/materiais/templates/templates.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ComercialCadastrosRepresentantesRoutingModule } from './representantes-routing.module';\n\n// Components\nimport { ComercialCadastrosRepresentantesListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosRepresentantesFormularioComponent } from './formulario/formulario.component';\n\n// Services\nimport { ComercialCadastrosRepresentantesService } from './representantes.service';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosRepresentantesListaComponent,\n    ComercialCadastrosRepresentantesFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule,\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialCadastrosRepresentantesRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    ComercialTemplatesModule,\n    ComercialCadastrosMateriaisTemplatesModule,\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    TextMaskModule,\n    NgBrazil,\n  ],\n  providers: [PNotifyService, ComercialCadastrosRepresentantesService],\n})\nexport class ComercialCadastrosRepresentantesModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NvbWlzc29lcy9yZXByZXNlbnRhbnRlcy9yZXByZXNlbnRhbnRlcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NvbWlzc29lcy9yZXByZXNlbnRhbnRlcy9wcm9ncmFtYWNhby1wYWdhbWVudG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<!-- <loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen> -->\\n<app-header appTitle=\\\"Representantes\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" >\\n  <div class=\\\"row\\\" >\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"nome\\\">Representante</label>\\n              <input\\n            class=\\\"form-control\\\"\\n            id=\\\"nome\\\"\\n            type=\\\"text\\\"\\n            formControlName=\\\"nome\\\"\\n            >\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"0\\\">Inativos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"emiteNota\\\">Emite Nota</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"emiteNota\\\"\\n                formControlName=\\\"emiteNota\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"0\\\">Não</option>\\n                <option value=\\\"1\\\">Sim</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" >\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr >\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\" >\\n              <thead-sorter\\n                value=\\\"Código\\\"\\n                [active]=\\\"orderBy == 'NM_VEND'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('NM_VEND')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\">Nome</th>\\n\\n            <th scope=\\\"col\\\">Dt Vigência</th>\\n\\n            <th scope=\\\"col\\\">CNPJ</th>\\n\\n            <th scope=\\\"col\\\"\\n            [hidden]=\\\"showDetailPanel\\\">\\n            Usuário\\n          </th>\\n\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of dadosPagination; let i = index;\\\"\\n          [class.table-active]=\\\"item.codRepresentante && showDetailPanel\\\"\\n          >\\n            <td\\n              class=\\\"text-center hover\\\"\\n              [ngClass]=\\\"classStatusBorder(item)\\\"\\n              >\\n              {{ item.codRepresentante }}\\n            </td>\\n            <!-- (click)=\\\"onDetails(item)\\\" -->\\n            <td\\n              class=\\\"hover\\\"\\n              >\\n              {{ item.nome | uppercase }}\\n            </td>\\n            <!-- (click)=\\\"onDetails(item)\\\" -->\\n            <td\\n              class=\\\"hover\\\"\\n\\n              >\\n              {{ item.dataFinalContrato | date: 'dd/MM/yyyy'}}\\n            </td>\\n            <!-- (click)=\\\"onDetails(item)\\\" -->\\n            <td\\n              class=\\\"hover\\\"\\n\\n              >\\n              {{ item.cnpjEmpresaRepresentacao }}\\n            </td>\\n            <!-- (click)=\\\"onDetails(item)\\\" -->\\n              <td\\n              class=\\\"hover\\\"\\n\\n              [hidden]=\\\"showDetailPanel\\\"\\n              >\\n              <span >{{ item.nomeUsuarioCadastro | uppercase }}</span>\\n\\n            </td>\\n            <!-- (click)=\\\"onDetails(item)\\\" -->\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"item.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, item)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"item.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, item)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(item)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"modeloComissao.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">De</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Até</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Comissão</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Fixo</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor='let item of modeloComissao'>\\n              <td class=\\\"text-center\\\">{{ item.grupos.de }}</td>\\n              <td class=\\\"text-center\\\">{{ item.grupos.ate }}</td>\\n              <td class=\\\"text-center\\\">{{ item.grupos.valorComissao }}</td>\\n              <td class=\\\"text-center\\\">{{ item.grupos.valorFixo }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\n// import { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosRepresentantesFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosRepresentantesListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosRepresentantesFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: 'lista', component: ComercialCadastrosRepresentantesListaComponent },\n      {\n        path: '',\n        redirectTo: 'lista',\n        pathMatch: 'full',\n      },\n      {\n        path: 'novo',\n        component: ComercialCadastrosRepresentantesFormularioComponent,\n        resolve: {\n          detalhes: ComercialCadastrosRepresentantesFormularioResolverGuard,\n        },\n      },\n      {\n        path: 'editar/:id',\n        component: ComercialCadastrosRepresentantesFormularioComponent,\n        resolve: {\n          detalhes: ComercialCadastrosRepresentantesFormularioResolverGuard,\n        },\n      },\n    ]\n  },\n\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosRepresentantesRoutingModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Representantes\\\"></app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <h5 class=\\\"pt-2 mb-4 text-center\\\">Selecione uma atividade</h5>\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-9\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-chart-pie\\\"\\n            text=\\\"Programação de Pagamentos\\\"\\n            [routerLink]=\\\"['../../programacao-pagamentos']\\\">\\n          </card-button>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-chart-pie\\\"\\n            text=\\\"Gestão de Comissionamentos\\\"\\n            [routerLink]=\\\"['../../gestao-comissionamentos']\\\">\\n          </card-button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Programação de Pagamentos\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" >\\n  <div class=\\\"row\\\" >\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-5\\\">\\n              <label for=\\\"codRepresentante\\\">Representante</label>\\n              <ng-select\\n                  type='text'\\n                  [items]=\\\"representantes\\\"\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"false\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  bindLabel=\\\"nomeRepresentante\\\"\\n                  bindValue=\\\"codRepresentante\\\"\\n                  formControlName=\\\"codRepresentante\\\">\\n                </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-5\\\">\\n              <label for=\\\"codStatus\\\">Status</label>\\n              <ng-select\\n                    type='text'\\n                    [items]=\\\"situacao\\\"\\n                    [searchable]=\\\"true\\\"\\n                    [clearable]=\\\"false\\\"\\n                    [virtualScroll]=\\\"true\\\"\\n                    [hideSelected]=\\\"true\\\"\\n                    placeholder=\\\"Selecione...\\\"\\n                    bindLabel=\\\"nomeSituacao\\\"\\n                    bindValue=\\\"codSituacao\\\"\\n                    formControlName=\\\"codStatus\\\"\\n                  >\\n                </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\"  *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!showDetailPanel \\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" >\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-4 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr >\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\" *ngIf=\\\"!showDetailPanel\\\">\\n              <thead-sorter\\n                value=\\\"Código\\\"\\n                [active]=\\\"orderBy == 'codPreco'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('codPreco')\\\"\\n                [hidden]=\\\"showDetailPanel\\\">\\n              </thead-sorter>\\n            </th>\\n\\n            <th scope=\\\"col\\\">Razão Social</th>\\n\\n            <th scope=\\\"col\\\">Cpf</th>\\n\\n            <th scope=\\\"col\\\"\\n            [hidden]=\\\"showDetailPanel\\\">Valor NF</th>\\n\\n            <th scope=\\\"col\\\"\\n            [hidden]=\\\"showDetailPanel\\\">Retenções</th>\\n\\n            <th scope=\\\"col\\\"\\n            [hidden]=\\\"showDetailPanel\\\">Valor Comissão</th>\\n\\n          <th scope=\\\"col\\\"\\n          [hidden]=\\\"showDetailPanel\\\">\\n          Data Previsão\\n          </th>\\n\\n          <th scope=\\\"col\\\"\\n          [hidden]=\\\"showDetailPanel\\\">\\n          Data Pagamento\\n          </th>\\n\\n          <th scope=\\\"col\\\"\\n          [hidden]=\\\"showDetailPanel\\\">\\n        </th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of dados; let i = index;\\\"\\n          [class.table-active]=\\\"item.codRepresentante == codigo\\\"\\n          >\\n            <td\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"onDetails(item)\\\"\\n              [hidden]=\\\"showDetailPanel\\\"\\n              [ngClass]=\\\"classStatusBorder(item)\\\">\\n              {{ item.codRepresentanteTid }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(item)\\\"\\n              >\\n              {{ item.nomeRepresentante }}\\n            </td>\\n            <td\\n              *ngIf=\\\"item.cpfCnpj !== ''\\\"\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(item)\\\">\\n              {{ item.cpfCnpj | cpf }}\\n            </td>\\n            <td\\n              *ngIf=\\\"item.cpfCnpj === '' || item.cpfCnpj === null\\\"\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(item)\\\">\\n              NÃO INFORMADO\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(item)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              {{ item.valorNotaFiscal | currency:'BRL':'symbol':'1.2-2' }}\\n            </td>\\n\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(item)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              {{ item.valorImpostos | currency:'BRL':'symbol':'1.2-2' }}\\n            </td>\\n\\n            <td\\n            class=\\\"hover\\\"\\n            (click)=\\\"onDetails(item)\\\"\\n            [hidden]=\\\"showDetailPanel\\\">\\n            {{ item.valorComissao | currency:'BRL':'symbol':'1.2-2' }}\\n          </td>\\n\\n            <td [hidden]=\\\"showDetailPanel\\\">\\n              {{ item.dataProgramacaoPagamento | date: 'dd/MM/yyyy' }}\\n            </td>\\n\\n            <td [hidden]=\\\"showDetailPanel\\\">\\n              {{ item.dataPagamento | date: 'dd/MM/yyyy' }}\\n            </td>\\n\\n            <td [hidden]=\\\"showDetailPanel\\\">\\n              <span class=\\\"mr-3\\\"  placement=\\\"right\\\" container=\\\"body\\\">\\n                <btn-icon\\n                  *ngIf=\\\"item.codSituacao === 7\\\"\\n                  icon=\\\"fas fa-edit\\\"\\n                  size=\\\"medium\\\"\\n                  color=\\\"primary\\\"\\n                  tooltip=\\\"Inserir Data\\\"\\n                  (click)=\\\"openModal(template, i); setFormDate(item)\\\">\\n                </btn-icon>\\n\\n                <btn-icon\\n                  *ngIf=\\\"item.dataProgramacaoPagamento != '' && item.codSituacao === 8\\\"\\n                  icon=\\\"fab fa-product-hunt\\\"\\n                  size=\\\"medium\\\"\\n                  color=\\\"success\\\"\\n                  tooltip=\\\"Dar baixa\\\"\\n                  (click)=\\\"onSubmitPagamento(item); setFormDate(item)\\\">\\n                </btn-icon>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-8\\\" [hidden]=\\\"!showDetailPanel\\\">\\n\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\n        <custom-table [config]=\\\"tableConfigMateriais\\\"\\n        *ngIf=\\\"representantesDetail.length > 0\\\"\\n        >\\n          <ng-template #thead let-thead >\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Representante</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Banco</th>\\n              <th scope=\\\"col\\\">Tipo de Conta</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Titular</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Agência</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">C/C</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor='let item of representantesDetail'>\\n              <td class=\\\"text-center\\\">{{ item.nomeRepresentante }}</td>\\n              <td class=\\\"text-center\\\">{{ item.nomeBanco }}</td>\\n              <td class=\\\"text-center\\\">{{ item.tipoConta }}</td>\\n              <td class=\\\"text-center\\\">{{ item.nrAgencia }}</td>\\n              <td class=\\\"text-center\\\">{{ item.nrContaCorrente }}</td>\\n              <td class=\\\"text-center\\\">{{ item.nomeTitularConta }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n\\n  <ng-template #template>\\n\\n    <div class=\\\"modal-body\\\">\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModal(expedicao)\\\" aria-label=\\\"Close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n      <div class=\\\"mtc-title text-center\\\">Edição e baixa de pagamento</div>\\n      <div class=\\\"mtc-title text-center\\\" style=\\\"font-size: 0.7rem;\\\">REPRESENTANTE: {{ nomeRepresentante | uppercase }}</div>\\n      <form [formGroup]=\\\"formDate\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"row mt-2\\\">\\n          <div class=\\\"form-group col-lg-3\\\"></div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <div class=\\\"mtc-title text-center\\\" style=\\\"font-size: 0.7rem;\\\">Data de Programação</div>\\n            <input\\n              style=\\\"text-align: center;\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"dtProgramacao\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              [daysDisabled]=\\\"[6,0]\\\"\\n              [minDate]=\\\"minDate\\\"\\n              formControlName=\\\"dataProgramacao\\\"\\n              >\\n            </div>\\n              <div class=\\\"form-group col-lg-3\\\"></div>\\n          </div>\\n        </form>\\n        <div class=\\\"row mt-2\\\">\\n          <div class=\\\"col\\\" style=\\\"text-align: center;\\\">\\n\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-primary btn-sm \\\"\\n            (click)=\\\"modalRef.hide(); onSubmitProgramacao();\\\"\\n            >\\n            Salvar\\n          </button>\\n\\n        </div>\\n      </div>\\n          <div class=\\\"form-group col-lg-2\\\"></div>\\n\\n\\n    </div>\\n  </ng-template>\\n</app-body>\\n\";","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from './../../../../../shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosMateriaisTemplatesModule } from './../../../cadastros/materiais/templates/templates.module';\nimport { ComercialTemplatesModule } from './../../../templates/templates.module';\nimport { TemplatesModule } from './../../../../../shared/templates/templates.module';\nimport { SharedModule } from './../../../../../shared/modules/shared.module';\n\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { ComercialComissoesRepresentantesProgramacaoPagamentosRoutingModule } from './programacao-pagamentos-routing.module';\n\n// Components\nimport { ComercialComissoesRepresentantesProgramacaoPagamentosListaComponent } from './lista/lista.component';\n\n// Services\nimport { ComercialComissoesRepresentantesProgramacaoPagamentosService } from './programacao-pagamentos.service';\n\n// Pipe\nimport { CPFPipe } from './../../../../../shared/pipes/cpf.pipe';\n\n@NgModule({\n  declarations: [\n    ComercialComissoesRepresentantesProgramacaoPagamentosListaComponent,\n    CPFPipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule,\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialComissoesRepresentantesProgramacaoPagamentosRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    ComercialTemplatesModule,\n    ComercialCadastrosMateriaisTemplatesModule,\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n  providers: [\n    PNotifyService,\n    ComercialComissoesRepresentantesProgramacaoPagamentosService,\n  ],\n})\nexport class ComercialComissoesRepresentantesProgramacaoPagamentosModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9yZXByZXNlbnRhbnRlcy9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from './../../../../shared/services/core/pnotify.service';\n\n// Modules\nimport { TemplatesModule } from './../../../../shared/templates/templates.module';\nimport { SharedModule } from './../../../../shared/modules/shared.module';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ComercialComissoesRepresentantesRoutingModule } from './representantes-routing.module';\nimport { ComercialComissoesRepresentantesProgramacaoPagamentosModule } from './programacao-pagamentos/programacao-pagamentos.module';\n\n// Components\nimport { ComercialComissoesRepresentantesComponent } from './representantes.component';\n\n@NgModule({\n  declarations: [ComercialComissoesRepresentantesComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialComissoesRepresentantesRoutingModule,\n    ComercialComissoesRepresentantesProgramacaoPagamentosModule,\n    SharedModule,\n    TemplatesModule,\n  ],\n  providers: [PNotifyService],\n})\nexport class ComercialComissoesRepresentantesModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosRepresentantesService } from './../representantes.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosRepresentantesFormularioResolverGuard\n  implements Resolve<any> {\n  constructor( private representantesService: ComercialCadastrosRepresentantesService\n\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.representantesService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      mensagem: null,\n      data: [\n        {\n          codSituacao: '',\n          tipoPagamentoComissao: null,\n          emiteNotaFiscal: null,\n          recebeEmailInativacaoCliente: null,\n          codEquipe: null,\n          codEmpresa: null,\n          nrMatricula: null,\n          nome: null,\n          razaoSocial: null,\n          endereco: null,\n          // nrEndereco: null,\n          // complemento: null,\n          nomeBairro: null,\n          cep: null,\n          nomeCidade: null,\n          uf: null,\n          cnpj: null,\n          ie: null,\n          im: null,\n          telefone: null,\n          celular: null,\n          email: null,\n          dataInicialContrato: null,\n          dataFinalContrato: null,\n          // dataRenovacaoContrato: null,\n          nomeFantasiaRepresentacao: null,\n          razaoSocialRepresentacao: null,\n          cnpjEmpresaRepresentacao: null,\n          ieEmpresaRepresentacao: null,\n          imEmpresaRepresentacao: null,\n          nomeTitularConta: null,\n          tipoConta: null,\n          nomeBanco: null,\n          agencia: null,\n          contaCorrente: null,\n      }\n    ],\n    });\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div  class=\\\"ml-5 mr-5\\\">\\n  <div class=\\\"row ml-5 mr-5\\\">\\n  <div class=\\\"row ml-5 mr-5\\\">\\n  <div class=\\\"row ml-5 mr-5\\\">\\n\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" >\\n    <div class=\\\"mtc-title mb-2\\\">Formulário cadastro de representante</div>\\n    <hr>\\n  <div class=\\\"row ml-5 mr-5\\\">\\n    <div class=\\\"mtc-title mb-3 mt-2 ml-3 col-lg-12\\\">Dados do Representante</div>\\n          <div class=\\\"form-group col-lg-2\\\">\\n              <label>Situação</label>\\n              <ng-select\\n              type='text'\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"situacao\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              [hideSelected]=\\\"true\\\"\\n              [closeOnSelect]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              bindLabel=\\\"descricao\\\"\\n              bindValue=\\\"id\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired('codSituacao')\\\"\\n            >\\n            </ng-select>\\n            </div>\\n\\n\\n\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"tipoPagamentoComissao\\\">Tipos Comissão</label>\\n                    <ng-select\\n                      type='text'\\n                      [searchable]=\\\"true\\\"\\n                      [clearable]=\\\"false\\\"\\n                      [items]=\\\"tipoComissao\\\"\\n                      [virtualScroll]=\\\"true\\\"\\n                      [hideSelected]=\\\"true\\\"\\n                      [closeOnSelect]=\\\"true\\\"\\n                      placeholder=\\\"Selecione...\\\"\\n                      bindLabel=\\\"dsTipoComissao\\\"\\n                      bindValue=\\\"idTipoComissao\\\"\\n                      formControlName=\\\"tipoPagamentoComissao\\\"\\n                      (change)=\\\"openModal(tiposComissao);\\\"\\n                      [ngClass]=\\\"onFieldError('tipoPagamentoComissao') + ' ' + onFieldRequired('tipoPagamentoComissao')\\\"\\n                    >\\n\\n\\n                    <invalid-form-control [show]=\\\"onFieldInvalid('tipoPagamentoComissao')\\\" message=\\\"Equipe é obrigatório.\\\"></invalid-form-control>\\n                    </ng-select>\\n                </div>\\n\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"emiteNotaFiscal\\\">Emite Nota</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"emiteNotaFiscal\\\"\\n                formControlName=\\\"emiteNotaFiscal\\\">\\n                <option value=\\\"0\\\">Não</option>\\n                <option value=\\\"1\\\">Sim</option>\\n              </select>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"recebeEmailInativacaoCliente\\\">Recebe Email</label>\\n              <select\\n                  class=\\\"form-control custom-select\\\"\\n                  id=\\\"recebeEmailInativacaoCliente\\\"\\n                  formControlName=\\\"recebeEmailInativacaoCliente\\\">\\n                  <option value=\\\"0\\\">Não</option>\\n                  <option value=\\\"1\\\">Sim</option>\\n              </select>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-5\\\">\\n              <label for=\\\"codEquipe\\\">Equipe</label>\\n                <ng-select\\n                  type='text'\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"false\\\"\\n                  [items]=\\\"equipes\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  [hideSelected]=\\\"true\\\"\\n                  [closeOnSelect]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  bindLabel=\\\"dsEquipeVenda\\\"\\n                  bindValue=\\\"codEquipeVenda\\\"\\n                  formControlName=\\\"codEquipe\\\"\\n                  [ngClass]=\\\"onFieldError('codEquipe') + ' ' + onFieldRequired('codEquipe')\\\"\\n                >\\n                <invalid-form-control\\n                [show]=\\\"onFieldInvalid('codEquipe')\\\"\\n                message=\\\"Equipe é obrigatório.\\\">\\n                </invalid-form-control>\\n                  </ng-select>\\n              </div>\\n\\n              <div class=\\\"form-group col-lg-5\\\">\\n                <label for=\\\"codEscritorio\\\">Escritório</label>\\n                <ng-select\\n                  type='text'\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"false\\\"\\n                  [items]=\\\"escritorio\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  [hideSelected]=\\\"true\\\"\\n                  [closeOnSelect]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  bindLabel=\\\"nomeEscritorio\\\"\\n                  bindValue=\\\"codEscritorio\\\"\\n                  formControlName=\\\"codEscritorio\\\"\\n                  [ngClass]=\\\"onFieldError('codEscritorio') + ' ' + onFieldRequired('codEscritorio')\\\"\\n                >\\n                <!-- (change)=\\\"openModal(template)\\\" -->\\n                <invalid-form-control\\n                [show]=\\\"onFieldInvalid('codEscritorio')\\\"\\n                message=\\\"Escritorio é obrigatório.\\\">\\n                </invalid-form-control>\\n                </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"nrMatricula\\\">Matrícula</label>\\n              <input\\n            class=\\\"form-control\\\"\\n            id=\\\"nrMatricula\\\"\\n            type=\\\"text\\\"\\n            formControlName=\\\"nrMatricula\\\"\\n            [ngClass]=\\\"onFieldError('nrMatricula') + ' ' + onFieldRequired('nrMatricula')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nrMatricula')\\\" message=\\\"Número da Matrícula é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-lg-12\\\">\\n              <label for=\\\"nome\\\">Nome</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"nome\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"nome\\\"\\n                [ngClass]=\\\"onFieldError('nome') + ' ' + onFieldRequired('nome')\\\"\\n                >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome')\\\" message=\\\"Nome é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-12\\\">\\n              <label for=\\\"razaoSocial\\\">Razão Social</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"razaoSocial\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"razaoSocial\\\"\\n                [ngClass]=\\\"onFieldError('razaoSocial') + ' ' + onFieldRequired('razaoSocial')\\\"\\n                >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial')\\\" message=\\\"Razão Social é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"cep\\\">Cep</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"cep\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"cep\\\"\\n                (input)=\\\"onInput(); onInputCep(detalhes);\\\"\\n                [ngClass]=\\\"onFieldError('cep') + ' ' + onFieldRequired('cep')\\\"\\n                cep [textMask]=\\\"{ mask: MASKS.cep.textMask }\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cep')\\\" message=\\\"Cep é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-10\\\">\\n              <label for=\\\"endereco\\\">Endereço</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"endereco\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"endereco\\\"\\n                (input)=\\\"onInput()\\\"\\n                [ngClass]=\\\"onFieldError('endereco') + ' ' + onFieldRequired('endereco')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('endereco')\\\" message=\\\"Endereço é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n            <!-- <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"nrEndereco\\\">Número</label>\\n              <input\\n                  class=\\\"form-control\\\"\\n                  id=\\\"nrEndereco\\\"\\n                  type=\\\"text\\\"\\n                  formControlName=\\\"nrEndereco\\\"\\n              >\\n\\n            </div> -->\\n\\n\\n            <div class=\\\"form-group col-lg-5\\\">\\n              <label for=\\\"nomeBairro\\\">Bairro</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"nomeBairro\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"nomeBairro\\\"\\n                (input)=\\\"onInput()\\\"\\n                [ngClass]=\\\"onFieldError('nomeBairro') + ' ' + onFieldRequired('nomeBairro')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeBairro')\\\" message=\\\"Bairro é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n            <!-- <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"complemento\\\">Complemento</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"complemento\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"complemento\\\"\\n            >\\n            </div> -->\\n\\n            <div class=\\\"form-group col-lg-5\\\">\\n              <label for=\\\"nomeCidade\\\">Cidade</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"nomeCidade\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"nomeCidade\\\"\\n                (input)=\\\"onInput()\\\"\\n                [ngClass]=\\\"onFieldError('nomeCidade') + ' ' + onFieldRequired('nomeCidade')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeCidade')\\\" message=\\\"Cidade é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"uf\\\">UF</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"uf\\\"\\n                formControlName=\\\"uf\\\"\\n                (change)=\\\"onInput()\\\"\\n                [ngClass]=\\\"onFieldError('uf') + ' ' + onFieldRequired('uf')\\\">\\n                <option value=\\\"\\\">SELECIONE UMA OPÇÃO</option>\\n                <option *ngFor=\\\"let item of estados\\\" [value]=\\\"item.sigla\\\">{{ item.sigla }}</option>\\n              </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('uf')\\\" message=\\\"Uf é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"cpf\\\">cpf</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"cpf\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"cpf\\\"\\n                [ngClass]=\\\"onFieldError('cpf') + ' ' + onFieldRequired('cpf')\\\"\\n                cpf [textMask]=\\\"{ mask: MASKS.cpf.textMask }\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cpf')\\\" message=\\\"CPF é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"rg\\\">Rg</label>\\n              <input\\n                  class=\\\"form-control\\\"\\n                  id=\\\"rg\\\"\\n                  type=\\\"text\\\"\\n                  formControlName=\\\"rg\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('rg')\\\" message=\\\"RG é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-12\\\">\\n              <label for=\\\"email\\\">E-mail</label>\\n              <input\\n                  class=\\\"form-control\\\"\\n                  id=\\\"email\\\"\\n                  type=\\\"text\\\"\\n                  formControlName=\\\"email\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email')\\\" message=\\\"E-mail é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"telefone\\\">Telefone</label>\\n            <input\\n                class=\\\"form-control\\\"\\n                id=\\\"telefone\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"telefone\\\"\\n                telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\n          <invalid-form-control [show]=\\\"onFieldInvalid('telefone')\\\" message=\\\"Telefone é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"celular\\\">Celular</label>\\n            <input\\n                class=\\\"form-control\\\"\\n                id=\\\"celular\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"celular\\\"\\n                telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\n          <invalid-form-control [show]=\\\"onFieldInvalid('celular')\\\" message=\\\"Celular é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n\\n\\n\\n          <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"dataInicialContrato\\\">Data Início</label>\\n          <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataInicialContrato\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                formControlName=\\\"dataInicialContrato\\\"\\n                [ngClass]=\\\"onFieldError('dataInicialContrato') + ' ' + onFieldRequired('dataInicialContrato')\\\"\\n          >\\n          <invalid-form-control [show]=\\\"onFieldInvalid('dataInicialContrato')\\\" message=\\\"Data Inicial é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n\\n          <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"dataFinalContrato\\\">Data Final</label>\\n          <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataFinalContrato\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                formControlName=\\\"dataFinalContrato\\\"\\n                [ngClass]=\\\"onFieldError('dataFinalContrato') + ' ' + onFieldRequired('dataFinalContrato')\\\"\\n          >\\n          <invalid-form-control [show]=\\\"onFieldInvalid('dataFinalContrato')\\\" message=\\\"Data Vigência é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n\\n          <!-- <div class=\\\"form-group col-lg-4\\\">\\n          <label for=\\\"dataRenovacaoContrato\\\">Data Renovação</label>\\n          <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataRenovacaoContrato\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                formControlName=\\\"dataRenovacaoContrato\\\"\\n          >\\n          <invalid-form-control [show]=\\\"onFieldInvalid('dataRenovacaoContrato')\\\" message=\\\"Data Renovação é obrigatório.\\\"></invalid-form-control>\\n          </div> -->\\n\\n          <!-- ####################################################################################### -->\\n          <div class=\\\"col-lg-12\\\" formArrayName=\\\"anexos\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-12 d-flex align-items-start\\\">\\n                <div class=\\\"mtc-title mb-0\\\">Anexos</div>\\n              </div>\\n              <!-- Se não puder permitir mais de um anexo, adicione [hidden]=\\\"form.value.anexos.length > 0\\\"  -->\\n              <div class=\\\"col\\\">\\n                <label\\n                  for=\\\"novoAnexo\\\"\\n                  class=\\\"d-flex justify-content-start align-items-center\\\"\\n                  style=\\\"cursor: pointer\\\">\\n                  <p class=\\\"btn btn-sm btn-outline-primary m-0\\\">\\n                    <i class=\\\"fas fa-plus\\\"></i>\\n                    <span>Anexo</span>\\n                  </p>\\n                </label>\\n                <input\\n                  id=\\\"novoAnexo\\\"\\n                  type=\\\"file\\\"\\n                  (change)=\\\"appendFile($event.target.files)\\\"\\n                  class=\\\"d-none\\\"\\n                />\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"showAnexos && form.value.anexos.length > 0\\\">\\n              <div class=\\\"col\\\">\\n                <custom-table [config]=\\\"tableConfigAnexos\\\">\\n                  <ng-template #tbody let-tbody>\\n                    <tr\\n                      *ngFor=\\\"let anexo of anexos.controls; let i = index\\\"\\n                      [formGroupName]=\\\"i\\\"\\n                    >\\n                      <td style=\\\"width: 90%\\\">\\n                        {{ form.value.anexos[i].codAnexo }} -\\n                        {{ form.value.anexos[i].nomeAnexo | uppercase }}\\n                      </td>\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                        <a\\n                          (click)=\\\"navegarAnexo(anexo)\\\"\\n                          *ngIf=\\\"form.value.anexos[i].codAnexo != null\\\"\\n                          target=\\\"_blank\\\"\\n                          class=\\\"btn-icon-sm mx-2 text-black\\\"\\n                          tooltip=\\\"visualizar\\\"\\n                        >\\n                          <i class=\\\"far fa-eye\\\"></i>\\n                        </a>\\n                      </td>\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                        <btn-icon\\n                          icon=\\\"fas fa-trash\\\"\\n                          size=\\\"small\\\"\\n                          tooltip=\\\"Excluir\\\"\\n                          (click)=\\\"\\n                            onDeleteAnexo(form.value.anexos[i].codAnexo, i)\\n                          \\\"\\n\\n                        >\\n                        <!-- [hidden]=\\\"visualizar\\\" -->\\n                        </btn-icon>\\n                      </td>\\n                    </tr>\\n                  </ng-template>\\n                </custom-table>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"showAnexos && form.value.anexos.length === 0\\\">\\n              <div class=\\\"col\\\">\\n                <message\\n                  icon=\\\"fas fa-exchange-alt\\\"\\n                  text=\\\"Nenhum documento encontrado\\\"\\n                >\\n                </message>\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n    <!-- ####################################################################################### -->\\n\\n\\n      </div>\\n\\n          <hr>\\n          <div class=\\\"row ml-5 mr-5\\\">\\n          <div class=\\\"mtc-title mb-3 mt-2 ml-3 col-lg-12\\\">Dados da Empresa de Representação</div>\\n\\n          <div class=\\\"form-group col-lg-12\\\">\\n            <label for=\\\"nomeFantasiaRepresentacao\\\">Nome Fantasia</label>\\n            <input\\n                class=\\\"form-control\\\"\\n                id=\\\"nomeFantasiaRepresentacao\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"nomeFantasiaRepresentacao\\\"\\n\\n          >\\n          <!-- [ngClass]=\\\"onFieldError('nomeFantasiaRepresentacao') + ' ' + onFieldRequired('nomeFantasiaRepresentacao')\\\"\\n          <invalid-form-control [show]=\\\"onFieldInvalid('nomeFantasiaRepresentacao')\\\" message=\\\"Nome Fantasia é obrigatório.\\\"></invalid-form-control> -->\\n          </div>\\n\\n          <div class=\\\"form-group col-lg-12\\\">\\n            <label for=\\\"razaoSocialRepresentacao\\\">Razão Social</label>\\n            <input\\n                class=\\\"form-control\\\"\\n                id=\\\"razaoSocialRepresentacao\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"razaoSocialRepresentacao\\\"\\n\\n          >\\n          <!-- [ngClass]=\\\"onFieldError('razaoSocialRepresentacao') + ' ' + onFieldRequired('razaoSocialRepresentacao')\\\"\\n          <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocialRepresentacao')\\\" message=\\\"Razão Social é obrigatório.\\\"></invalid-form-control> -->\\n          </div>\\n\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"cnpjEmpresaRepresentacao\\\">CNPJ</label>\\n            <input\\n                class=\\\"form-control\\\"\\n                id=\\\"cnpjEmpresaRepresentacao\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"cnpjEmpresaRepresentacao\\\"\\n                cnpj [textMask]=\\\"{ mask: MASKS.cnpj.textMask }\\\">\\n                <!-- [ngClass]=\\\"onFieldError('cnpjEmpresaRepresentacao') + ' ' + onFieldRequired('cnpjEmpresaRepresentacao')\\\"\\n          <invalid-form-control [show]=\\\"onFieldInvalid('cnpjEmpresaRepresentacao')\\\" message=\\\"CNPJ é obrigatório.\\\"></invalid-form-control> -->\\n          </div>\\n\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"ieEmpresaRepresentacao\\\">Inscrição Estadual</label>\\n            <input\\n                class=\\\"form-control\\\"\\n                id=\\\"ieEmpresaRepresentacao\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"ieEmpresaRepresentacao\\\"\\n          >\\n          <invalid-form-control [show]=\\\"onFieldInvalid('ieEmpresaRepresentacao')\\\" message=\\\"Inscrição Estadual é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"imEmpresaRepresentacao\\\">Inscrição Municipal</label>\\n            <input\\n                class=\\\"form-control\\\"\\n                id=\\\"imEmpresaRepresentacao\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"imEmpresaRepresentacao\\\"\\n          >\\n          <invalid-form-control [show]=\\\"onFieldInvalid('imEmpresaRepresentacao')\\\" message=\\\"Inscrição Municipal é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n\\n        <div class=\\\"form-group col-lg-6\\\"></div>\\n        </div>\\n\\n        <hr>\\n        <div class=\\\"row ml-5 mr-5\\\">\\n        <div class=\\\"mtc-title mb-3 mt-2 ml-3 col-lg-12\\\">Dados Bancários</div><br>\\n\\n\\n        <div class=\\\"form-group col-lg-9\\\">\\n        <label for=\\\"nomeTitularConta\\\">Titular</label>\\n        <input\\n                class=\\\"form-control\\\"\\n                id=\\\"nomeTitularConta\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"nomeTitularConta\\\"\\n          >\\n        <invalid-form-control [show]=\\\"onFieldInvalid('nomeTitularConta')\\\" message=\\\"Titular é obrigatório.\\\"></invalid-form-control>\\n        </div>\\n\\n        <div class=\\\"form-group col-lg-3\\\">\\n        <label for=\\\"tipoConta\\\">Tipo</label>\\n        <select\\n          class=\\\"form-control custom-select\\\"\\n          id=\\\"tipoConta\\\"\\n          placeholder=\\\"Selecione...\\\"\\n          formControlName=\\\"tipoConta\\\">\\n          <option value=\\\"F\\\">Física</option>\\n          <option value=\\\"J\\\">Jurídica</option>\\n        </select>\\n        </div>\\n\\n        <div class=\\\"form-group col-lg-6\\\">\\n          <label for=\\\"nomeBanco\\\">Banco</label>\\n\\n          <ng-select\\n            type='text'\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"bancos\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            [hideSelected]=\\\"true\\\"\\n            [closeOnSelect]=\\\"true\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            bindLabel=\\\"nomeBanco\\\"\\n            bindValue=\\\"idBanco\\\"\\n            formControlName=\\\"nomeBanco\\\"\\n            [ngClass]=\\\"onFieldError('nomeBanco') + ' ' + onFieldRequired('nomeBanco')\\\">\\n        <invalid-form-control [show]=\\\"onFieldInvalid('nomeBanco')\\\" message=\\\"Banco é obrigatório.\\\"></invalid-form-control>\\n        </ng-select>\\n        </div>\\n\\n        <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"agencia\\\">Agência</label>\\n          <input\\n              class=\\\"form-control\\\"\\n              id=\\\"agencia\\\"\\n              type=\\\"text\\\"\\n              formControlName=\\\"agencia\\\"\\n        >\\n        <invalid-form-control [show]=\\\"onFieldInvalid('agencia')\\\" message=\\\"Agência é obrigatório.\\\"></invalid-form-control>\\n        </div>\\n\\n        <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"contaCorrente\\\">Conta Corrente</label>\\n          <input\\n              class=\\\"form-control\\\"\\n              id=\\\"contaCorrente\\\"\\n              type=\\\"text\\\"\\n              formControlName=\\\"contaCorrente\\\"\\n        >\\n        <invalid-form-control [show]=\\\"onFieldInvalid('contaCorrente')\\\" message=\\\"Conta Corrente é obrigatório.\\\"></invalid-form-control>\\n        </div>\\n    </div>\\n      <hr>\\n\\n\\n\\n\\n  </form>\\n\\n  <ng-template #tiposComissao>\\n\\n    <div class=\\\"modal-header\\\">\\n      <div class=\\\"mtc-title\\\">Faixa de percentual</div>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModal(tiposComissao);\\\" aria-label=\\\"Close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"modal-body\\\">\\n\\n      <div class=\\\"row mb-3\\\">\\n        <div class=\\\"col-1\\\"></div>\\n\\n        <div class=\\\"mtc-title\\\"*ngIf=\\\"tipoComissaoModal.length > 0\\\">{{ tipoComissaoModal[0].dsTipoComissionamento }}</div>\\n        <div class=\\\"col-12 mb-4\\\" *ngFor=\\\"let dados of tipoComissaoModal\\\">\\n          <custom-table *ngIf=\\\"tipoComissaoModal.length > 0\\\">\\n            <ng-template #thead let-thead  >\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 50%\\\">Linha</th>\\n                <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 50%\\\">Classe</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr>\\n                <td class=\\\"text-center\\\">{{ dados.nomeLinha }}</td>\\n                <td class=\\\"text-center\\\" *ngIf=\\\"dados.codClasse === 0\\\" >TODOS</td>\\n                <td class=\\\"text-center\\\" *ngIf=\\\"dados.codClasse != 0\\\">{{ dados.nomeClasse }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n\\n        <custom-table *ngIf=\\\"tipoComissaoModal.length > 0\\\" [config]=\\\"tableConfigDetail\\\">\\n          <!-- *ngIf=\\\"dados.length > 0\\\" -->\\n          <ng-template #thead let-thead  >\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 55%\\\">Percentual de desconto da tabela de vendas de materiais (%) </th>\\n              <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 45%\\\">Percentual a ser pago de comissão sobre o título (%) </th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let item of dados.percentual\\\">\\n              <td class=\\\"text-center\\\">{{ item.percDescontoDe }} a {{ item.percDescontoAte }} %</td>\\n              <td class=\\\"text-center\\\">{{ item.percPago }} %</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </div>\\n\\n        <div class=\\\"col-1\\\"></div>\\n\\n      </div>\\n    </div>\\n\\n  </ng-template>\\n</div>\\n</div>\\n</div>\\n</div>\\n<ng-template #detalhes>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Escolha o endereço a ser utilizado</h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onModalClose()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"formEnderecos\\\" (ngSubmit)=\\\"setValueEndereco()\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-12\\\" *ngFor=\\\"let endereco of enderecosOp; let i = index\\\">\\n          <div class=\\\"custom-control custom-radio\\\">\\n            <input [id]=\\\"i\\\" class=\\\"custom-control-input\\\" formControlName=\\\"enderecosRetorno\\\" type=\\\"radio\\\" [value]=\\\"endereco\\\"/>\\n            <label class=\\\"custom-control-label\\\" [for]=\\\"i\\\">{{endereco.logradouro}}, {{endereco.unidade}} - {{endereco.bairro}}, {{endereco.localidade}} - {{endereco.uf}}, {{endereco.cep}}</label>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-12 d-flex justify-content-center\\\">\\n          <button class=\\\"btn btn-primary\\\">Selecionar</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n</app-body>\\n\";","import { ComercialComissoesGestaoComissionamentosService } from './../../gestao-comissionamentos/gestao-comissionamentos.service';\nimport { Subtitles } from './../../../../../../shared/modules/subtitles/subtitles';\nimport {\n  Component,\n  OnInit,\n  ElementRef,\n  ViewChild,\n  TemplateRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { AtividadesService } from './../../../../../../shared/services/requests/atividades.service';\nimport { ConfirmModalService } from './../../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { PNotifyService } from './../../../../../../shared/services/core/pnotify.service';\nimport { ComercialComissoesRepresentantesProgramacaoPagamentosService } from './../programacao-pagamentos.service';\nimport { DetailPanelService } from './../../../../../../shared/templates/detail-panel/detal-panel.service';\nimport { DateService } from './../../../../../../shared/services/core/date.service';\nimport { ComercialCadastrosEscritorioService } from './../../../../cadastros/escritorios/escritorios.service';\nimport { ComercialService } from './../../../../comercial.service';\n\n// Interfaces\nimport { CustomTableConfig } from './../../../../../../shared/templates/custom-table/models/config';\nimport { Breadcrumb } from './../../../../../../shared/modules/breadcrumb/breadcrumb';\nimport { dadosBancarios, representantes } from './../models/representantes';\nimport { JsonResponse } from './../../../../../../models/json-response';\n\n@Component({\n  selector: 'comercial-representantes-programacao-pagamentos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialComissoesRepresentantesProgramacaoPagamentosListaComponent\n  implements OnInit\n{\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb>;\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Aguardando Programação de Pagamento',\n      color: 'gray',\n    },\n    {\n      id: 0,\n      text: 'Aguardando Pagamento',\n      color: 'blue',\n    },\n    {\n      id: 2,\n      text: 'Pagamento Realizado',\n      color: 'green',\n    },\n  ];\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  detailPanelTitle: string;\n  nomeRepresentante: string;\n\n  dados: any[] = [];\n  representantes: any[] = [];\n  representantesDetail: any[] = [];\n  representanteSelecionado: any[] = [];\n  escritorios: any[] = [];\n  situacao: any[] = [];\n\n  codigo: number;\n\n  dadosLoaded = false;\n  dadosEmpty = false;\n  programado = false;\n\n  bsValue = new Date();\n  bsRangeValue: Date[];\n  maxDate = new Date();\n  minDate = new Date();\n\n  modalRef: BsModalRef;\n\n  grupoSelecionado: any;\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    hover: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n  formDate: FormGroup;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private activateRoute: ActivatedRoute,\n    private localeService: BsLocaleService,\n    private dateService: DateService,\n    private router: Router,\n    private detailPanelService: DetailPanelService,\n    private pnotifyService: PNotifyService,\n    private programacaoPagamentosService: ComercialComissoesRepresentantesProgramacaoPagamentosService,\n    private atividadesService: AtividadesService,\n    private bsModalService: BsModalService,\n    private confirmModalService: ConfirmModalService,\n    private modalService: BsModalService,\n    private comercialService: ComercialService,\n    private escritoriosService: ComercialCadastrosEscritorioService,\n    private gestaoComissionamentosService: ComercialComissoesGestaoComissionamentosService\n  ) {\n    this.localeService.use('pt-br');\n  }\n\n  ngOnInit(): void {\n    this.setFormFilter();\n    // this.getRegistros();\n    this.setBreadCrumb();\n    this.registrarAcesso();\n    this.onDetailPanelEmitter();\n    this.getEscritorios();\n    this.getSituacao();\n    this.getRepresentantes();\n  }\n\n  setBreadCrumb(): void {\n    this.activateRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/',\n        },\n        {\n          descricao: 'Comissões',\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Representantes',\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}/representantes`,\n        },\n      ];\n    });\n  }\n\n  // form\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      // dtInicioVigencia: [this.dateService.getFirstDayMonth()],\n      // dtFimVigencia: [this.dateService.getLastDayMonth()],\n      // codEscritorio: [formValue.codEscritorio],\n      codRepresentante: [formValue.codRepresentante],\n      codStatus: [formValue.codStatus],\n      registros: [formValue.registros],\n    });\n\n    // this.checkOrder();\n  }\n\n  // formDate\n  setFormDate(item): void {\n    this.nomeRepresentante = item.nomeRepresentante;\n    this.codigo = item.codRepresentante;\n    this.formDate = this.formBuilder.group({\n      codComissaoRepresentante: [item.codComissaoRepresentante],\n      dataProgramacao: '',\n      dataPagamento: new Date(),\n    });\n  }\n\n  onSubmitProgramacao() {\n    if (this.formDate.valid) {\n      // validação salvar\n    }\n\n    this.programacaoPagamentosService\n      .postProgramacaoPagamento(this.formDate.getRawValue())\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.nomeRepresentante = '';\n        })\n      )\n      .subscribe((response: any) => {\n        if (response.hasOwnProperty('success') && response.success === true) {\n          this.onFilter();\n\n          this.pnotifyService.success();\n        }\n      });\n  }\n\n  onSubmitPagamento(item?) {\n    this.confirmModalService\n      .showConfirm(\n        null,\n        'Baixa de Pagamento',\n        `Você está prestes a dar baixa no pagamento do representante ${item.nomeRepresentante}. Deseja continuar mesmo assim?`,\n        'Cancelar',\n        'Confirmar'\n      )\n      .subscribe((response: boolean) =>\n        response ? this.onPostPagamento() : null\n      );\n  }\n\n  onPostPagamento() {\n    this.programacaoPagamentosService\n      .postPagamento(this.formDate.getRawValue())\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response.success === true) {\n          this.pnotifyService.success('Baixa efetuada com sucesso');\n          this.onFilter();\n        } else {\n          this.pnotifyService.error(response.mensagem);\n        }\n      });\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  navigateCadastroRepresentantes(item?) {\n    // ${item.codRepresentante}\n    this.router.navigate([`/comercial/cadastros/99/representantes/editar/839`], {\n      relativeTo: this.activateRoute\n    });\n  }\n\n  classStatusBorder(item: any): string {\n    let borderClass: string;\n\n    if (item.codSituacao === 7) {\n      borderClass = 'border-secondary';\n    } else if (item.codSituacao === 8) {\n      borderClass = 'border-primary';\n    } else if (item.codSituacao === 9) {\n      borderClass = 'border-success';\n    }\n\n    return borderClass;\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      codRepresentante: 0,\n      // dtInicioVigencia: [this.dateService.getFirstDayMonth()],\n      // dtFimVigencia: [this.dateService.getLastDayMonth()],\n      // codEscritorio: 0,\n      codStatus: 0,\n      registros: this.itemsPerPage,\n    };\n    this.activatedRouteSubscription = this.activateRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  getEscritorios() {\n    this.escritoriosService\n      .getListaEscritorios({ tipo: 'faturamento' })\n      .subscribe({\n        next: (response: any) => {\n          if (response.success === true) {\n            this.escritorios = response.data;\n\n            this.escritorios.unshift({\n              codEscritorio: 0,\n              nomeEscritorio: 'EXIBIR TODOS',\n            });\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n\n  getRepresentantes() {\n    this.gestaoComissionamentosService\n      .getRepresentantes(0)\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.success === true) {\n            this.representantes = response.data;\n\n            this.representantes.unshift({\n              codRepresentante: 0,\n              nomeRepresentante: 'EXIBIR TODOS',\n            });\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n\n  getSituacao() {\n    this.programacaoPagamentosService.getSituacao().subscribe(\n      (response: any) => {\n        if (response.success === true) {\n          this.situacao = response.data;\n\n          this.situacao.unshift({\n            codSituacao: 0,\n            nomeSituacao: 'EXIBIR TODOS',\n          });\n        } else {\n          this.pnotifyService.error();\n        }\n      },\n      (error: any) => {\n        this.pnotifyService.error();\n      }\n    );\n  }\n\n  closeModal(modalRef: TemplateRef<any>) {\n    this.modalRef.hide();\n  }\n\n  // Pesquisa\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.getParams());\n    }\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    this.dados = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.programacaoPagamentosService\n      .getListaProgramacao(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  // Verifica Parâmetros\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activateRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n    return _params;\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.codRepresentante) {\n      params.codRepresentante = this.form.value.codRepresentante;\n    }\n\n    if (this.form.value.dtInicioVigencia) {\n      params.dtInicioVigencia = this.form.value.dtInicioVigencia;\n    }\n\n    if (this.form.value.dtFimVigencia) {\n      params.dtFimVigencia = this.form.value.dtFimVigencia;\n    }\n\n    if (this.form.value.codStatus) {\n      params.codStatus = this.form.value.codStatus;\n    }\n\n    params.pagina = this.form.value.pagina;\n    params.registros = this.form.value.registros;\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  //Detail Panel\n\n  onDetails(item): void {\n    this.detailPanelService.show();\n    this.detailPanelTitle = `Dados Bancários`;\n    this.setDadosBancarios();\n    this.grupoSelecionado = item;\n    this.representantesDetail = [];\n    this.loaderNavbar = true;\n    this.codigo = item.codRepresentante;\n\n    this.programacaoPagamentosService\n      .getAssociacoesDetails(item.codRepresentanteTid)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n            this.detailPanelService.loadedFinished(false);\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.representantesDetail = response.data;\n            // this.totalItems = this.dados[0]['total'];\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  setDadosBancarios(): void {\n    this.grupoSelecionado = {\n      codProgramacao: null,\n      bancoRepresentante: null,\n      tipoConta: null,\n      agencia: null,\n      titular: null,\n      contaCorrente: null,\n    };\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  // Get e EditarLista\n  getRegistros() {\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.programacaoPagamentosService\n      .getListaProgramacao()\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n\n            this.totalItems = this.dados[0]['total'];\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onEdit(item: any): void {\n    this.router.navigate(['../editar', item.codPreco], {\n      relativeTo: this.activateRoute,\n    });\n  }\n\n  // Outros\n  onPageChanged(event: PageChangedEvent) {\n    if (this.form.value.pagina != event.page) {\n      this.detailPanelService.hide();\n      // this.setGrupoSelecionado();\n      this.form.value.pagina = event.page;\n      this.onFilter();\n\n      this.scrollToFilter.nativeElement.scrollIntoView({\n        behavior: 'instant',\n      });\n    }\n  }\n\n  refreshMainData(grupo: any): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (grupo.codRepresentantes === this.dados[i].codRepresentantes) {\n        this.dados[i].codSituacao = grupo.codSituacao;\n        return;\n      }\n    }\n  }\n\n  //modal\n  openModal(template: TemplateRef<any>, index) {\n    this.modalRef = this.bsModalService.show(template, index);\n  }\n\n  // Tratamento de erros\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\n// import { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\n\n// Components\nimport { ComercialComissoesRepresentantesComponent } from './representantes.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ComercialComissoesRepresentantesComponent,\n  },\n  {\n    path: '',\n    children: [\n      {\n        path: 'programacao-pagamentos',\n        loadChildren: () =>\n          import(\n            './programacao-pagamentos/programacao-pagamentos.module'\n          ).then(\n            (m) =>\n              m.ComercialComissoesRepresentantesProgramacaoPagamentosModule\n          ),\n      },\n    ],\n  },\n  {\n    path: '',\n    children: [\n      {\n        path: 'gestao-comissionamentos',\n        loadChildren: () =>\n          import(\n            './gestao-comissionamentos/gestao-comissionamentos.module'\n          ).then(\n            (m) =>\n              m.ComercialComissoesRepresentantesGestaoComissionamentosModule\n          ),\n      },\n    ],\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialComissoesRepresentantesRoutingModule {}\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { finalize, take, switchMap } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport {  PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n\n\n// Services\nimport { PNotifyService } from './../../../../../shared/services/core/pnotify.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { AtividadesService } from './../../../../../shared/services/requests/atividades.service';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\nimport { DateService } from './../../../../../shared/services/core/date.service';\nimport { ComercialCadastrosRepresentantesService } from './../representantes.service';\n\n// Interfaces\nimport { JsonResponse } from './../../../../../models/json-response';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\nimport { Breadcrumb } from './../../../../../shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-representantes-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosRepresentantesListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/',\n    },\n    {\n      descricao: 'Cadastros',\n      routerLink: `/comercial/cadastros/99`,\n    },\n    {\n      descricao: 'Representantes',\n      routerLink: '/comercial/cadastros/99/representantes/lista',\n    },\n  ];\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  detailPanelTitle: string;\n\n  dados: any[] = [];\n  dadosPagination: Array<any> = [];\n  modeloComissao: any[] = [];\n\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  grupoSelecionado: any;\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    hover: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n  orderBy = 'NM_VEND';\n  orderType = 'ASC';\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n\n  constructor(private formBuilder: FormBuilder,\n    private activateRoute: ActivatedRoute,\n    private localeService: BsLocaleService,\n    private dateService: DateService,\n    private router: Router,\n    private detailPanelService: DetailPanelService,\n    private pnotifyService: PNotifyService,\n    private cadastroRepresentantesService: ComercialCadastrosRepresentantesService,\n    private confirmModalService: ConfirmModalService,\n    private atividadesService: AtividadesService,\n  ) {\n    this.localeService.use('pt-br');\n  }\n\n  ngOnInit(): void {\n    this.setFormFilter();\n    // this.getRegistros();\n    this.registrarAcesso();\n    this.onDetailPanelEmitter();\n  }\n\n\n// Formulário\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      codRepresentante: [formValue.codRepresentante],\n      nome: [formValue.nome],\n      codSituacao: [formValue.codSituacao],\n      emiteNota: [formValue.emiteNota],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    // this.checkOrder();\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      codRepresentante: null,\n      nome: null,\n      codSituacao: '',\n      emiteNota: '',\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n    this.activatedRouteSubscription = this.activateRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n// Ordem lista\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n\n  // Pesquisa\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.getParams());\n    }\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.totalItems = 0;\n\n    this.cadastroRepresentantesService\n      .getListaRepresentantes(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  // Verifica Parâmetros\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activateRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n        _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n    _params['orderBy'] = this.orderBy;    _params['orderType'] = this.orderType;\n    return _params;  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.codRepresentante) {\n      params.codRepresentante = this.form.value.codERP;\n    }\n\n    if (this.form.value.nome) {\n      params.nome = this.form.value.nome;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.pagina = this.form.value.pagina;\n    params.registros = this.form.value.registros;\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n\n  // Detail Panel\n  onDetails(item: any): void {\n    this.detailPanelService.show();\n    this.detailPanelTitle = `${item.tipoComissao}`;\n    this.setDetalhesRepresentante();\n    this.grupoSelecionado = item;\n    this.modeloComissao = [];\n    this.loaderNavbar = true;\n\n    this.cadastroRepresentantesService\n      .getTipoComissionamento()\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n            this.detailPanelService.loadedFinished(false);\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.modeloComissao = response.data;\n            this.totalItems = this.dados[0]['total'];\n          }  else {\n            this.pnotifyService.error();\n          }\n\n        },\n        error: (error: any) => {\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  setDetalhesRepresentante(): void {\n    this.grupoSelecionado = {\n      codVendedor: null,\n      de: null,\n      ate: null,\n      valorComissao: null,\n      valorFixo: null\n    };\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n\n  // Activate e Inactivate e borda Situação\n  onActivate(index: number, data: any): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateERP(index, data) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(data);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 0;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateERP(index: number, data: any): Observable<any> {\n    this.loaderNavbar = true;\n    this.dados[index].codSituacao = 1;\n\n    return this.cadastroRepresentantesService.activateERP(data.codRepresentante);\n  }\n\n  onInactivate(index: number, data: any): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateERP(index, data) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(data);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateERP(index: number, data: any): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 0;\n\n    return this.cadastroRepresentantesService.inactivateERP(data.codRepresentante);\n  }\n\n  classStatusBorder(data: any): string {\n    let borderClass: string;\n\n    if (data.codSituacao === 2) {\n      borderClass = 'border-danger';\n    } else if (data.codSituacao === 1) {\n      borderClass = 'border-success';\n    }\n\n    return borderClass;\n  }\n\n\n// Get e EditarLista\n  getRegistros() {\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.cadastroRepresentantesService\n      .getListaRepresentantes()\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n\n            this.totalItems = this.dados[0]['total'];\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n\n  }\n\n  onEdit(item: any): void {\n    this.router.navigate(['../editar', item.codRepresentante], {\n\n      relativeTo: this.activateRoute,\n\n    });\n  }\n\n  // Outros\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant'\n    });\n  }\n\n  refreshMainData(data: any): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (data.codTabela === this.dados[i].codTabela) {\n        this.dados[i].codSituacao = data.codSituacao;\n        return;\n      }\n    }\n  }\n\n    // Tratamento de erros\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-comissoes-representantes',\n  templateUrl: './representantes.component.html',\n  styleUrls: ['./representantes.component.scss']\n})\nexport class ComercialComissoesRepresentantesComponent implements OnInit {\n  loaderNavbar: boolean = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n  appTitle: string;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pnotifyService: PNotifyService,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n      this.registrarAcesso();\n      this.setBreadCrumb();\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n\n    this.appTitle = 'Representantes';\n    this.titleService.setTitle(this.appTitle)\n\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home',\n      },\n      {\n        descricao: 'Comissões',\n        routerLink: `/comercial/comissoes/${params['idSubModulo']}`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, tap, retry } from 'rxjs/operators';\n\nimport { JsonResponse } from './../../../../../models/json-response';\nimport { environment } from './../../../../../../environments/environment';\n\nimport { representantes, dadosBancarios } from './models/representantes';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialComissoesRepresentantesProgramacaoPagamentosService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/comissoes/representantes/programacao-pagamentos`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaProgramacao(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getSituacao(): Observable<any> {\n    return this.http.get(`${this.API}/situacao`)\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getAssociacoesDetails(\n    codRepresentante: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n    return this.http\n      .get(`${this.API}/conta/${codRepresentante}`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  postProgramacaoPagamento(params): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/programacao-datas/salvar`, params)\n      .pipe(\n        take(1)\n        );\n  }\n\n  postPagamento(params): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/pagamento/salvar`, params)\n      .pipe(\n        take(1)\n        );\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cpf' })\nexport class CPFPipe implements PipeTransform {\n    transform(value: string|number): string {\n        let valorFormatado = value + '';\n\n        valorFormatado = valorFormatado\n            .padStart(11, '0')                  // item 1\n            .substr(0, 11)                      // item 2\n            .replace(/[^0-9]/, '')              // item 3\n            .replace(                           // item 4\n                /(\\d{3})(\\d{3})(\\d{3})(\\d{2})/,\n                '$1.$2.$3-$4'\n            );\n\n        return valorFormatado;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9yZXByZXNlbnRhbnRlcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\n\n\n// Components\nimport { ComercialComissoesRepresentantesProgramacaoPagamentosListaComponent } from './lista/lista.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: 'lista', component: ComercialComissoesRepresentantesProgramacaoPagamentosListaComponent },\n      {\n        path: '',\n        redirectTo: 'lista',\n        pathMatch: 'full',\n      },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialComissoesRepresentantesProgramacaoPagamentosRoutingModule {}\n"],"sourceRoot":"webpack:///"}