{"version":3,"sources":["webpack:///src/app/modules/tecnologia-informacao/estoque/movimentacoes/movimentacoes.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/movimentacoes/lista/lista.component.scss","webpack:///src/app/modules/tecnologia-informacao/estoque/movimentacoes/cadastro/cadastro.component.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/pipes/pipes.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/movimentacoes/cadastro/cadastro.component.html","webpack:///src/app/modules/tecnologia-informacao/estoque/movimentacoes/lista/lista.component.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/movimentacoes/lista/lista.component.html","webpack:///src/app/modules/tecnologia-informacao/estoque/movimentacoes/cadastro/cadastro.component.scss","webpack:///src/app/modules/tecnologia-informacao/estoque/movimentacoes/movimentacoes-routing.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/services/estoque.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/pipes/number-int.pipe.ts"],"names":["TecnologiaInformacaoMovimentacoesModule","declarations","imports","forRoot","providers","provide","useValue","TecnologiaInformacaoEstoqueMovimentacoesCadastroComponent","formBuilder","pnotify","router","activatedRoute","modalService","produtosService","titleService","estoqueService","atividadesService","movimentacoesService","breadCrumbTree","formData","tipos","cod","nome","disabledForm","loading","loadingNavBar","anexosLoaded","tipoItem","modelo","empresas","precisao","produtos","MASKS","registrarAcesso","setBreadCrumb","setFormBuilder","onActivatedRoute","getEmpresas","subscribe","_params","snapshot","params","hasOwnProperty","getProdutos","ID_TEIN_ESTO_PROD","IN_STAT","TT_REGI_PAGI","pipe","response","status","body","IN_PAGI","tipoQuantidade","codigoSerie","form","get","patchValue","controls","disable","noResult","error","setValidators","required","enable","updateValueAndValidity","clearValidators","reset","id","idSubModulo","appTitle","setTitle","descricao","routerLink","group","TP_MOVI","TT_PROD","VL_UNIT","DS_UNID_MEDI","CD_REFE","CD_PEDI","NR_NOTA_FISC","ID_TECN_INFO_MOVI","UUID_EMPR","IN_CODI_SERI","CD_ITEM","NM_MODE","DS_OBSE","field","onFieldInvalid","touched","formControl","validator","validationResult","produto","postMovimentacoes","value","success","navigate","relativeTo","message","template","modalRef","show","animated","backdrop","hide","selector","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","providedIn","TecnologiaInformacaoEstoquePipesModule","exports","TecnologiaInformacaoEstoqueMovimentacoesListaComponent","route","routerService","dateService","marcasService","detailPanelService","estoque","tableConfig","subtitleBorder","border","showDetailPanel","itemsPerPage","totalItems","currentPage","buildForm","onDetailPanelEmitter","getFormProdutos","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","getParams","showDetailPanelSubscription","config","event","showing","PAGI","TIME","getTime","loadingProdutos","produtosForm","ID_TECN_INFO_ITEM_TIPO","ID_TEIN_ESTO_PRMA","ID_TECN_INFO_ITEM_MODE","NM_CHAM","NM_MRCA","NM_TIPO","TT_ESTO_ATUA","formHistoricoMovimentacoes","buscarPor","pesquisa","NM_USUA","onFilter","setValue","setBase64UrlParams","getEstoque","produtoSelecionado","loadedFinished","setTimeout","getMovimentacoes","console","log","loadingMovimentacoes","noMovimentacoes","_obj","movimentacoes","notice","page","prop","convertToUrlDate","loadingEstoque","noEstoque","routes","path","component","TecnologiaInformacaoEstoqueMovimentacoesModuleRoutingModule","forChild","TecnologiaInformacaoEstoqueService","http","API","observe","NumberIntPipe","args","argumento","inteiro","Number","isNaN","parseFloat","_valor","name"],"mappings":"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","file":"movimentacoes-movimentacoes-module-es5.js","sourcesContent":["import { TecnologiaInformacaoEstoquePipesModule } from './../pipes/pipes.module';\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { RouterModule } from '@angular/router';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport ptBr from '@angular/common/locales/pt';\nimport { defineLocale, ptBrLocale, BsDatepickerModule } from 'ngx-bootstrap';\nregisterLocaleData(ptBr);\ndefineLocale('pt-br', ptBrLocale);\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { TecnologiaInformacaoEstoqueMovimentacoesListaComponent } from './lista/lista.component';\nimport { TecnologiaInformacaoEstoqueMovimentacoesModuleRoutingModule } from './movimentacoes-routing.module';\nimport { TecnologiaInformacaoEstoqueMovimentacoesCadastroComponent } from './cadastro/cadastro.component';\n\n@NgModule({\n  declarations: [\n    TecnologiaInformacaoEstoqueMovimentacoesListaComponent,\n    TecnologiaInformacaoEstoqueMovimentacoesCadastroComponent\n  ],\n  imports: [\n    TecnologiaInformacaoEstoquePipesModule,\n    TecnologiaInformacaoEstoqueMovimentacoesModuleRoutingModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n    CurrencyMaskModule,\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\n})\nexport class TecnologiaInformacaoMovimentacoesModule {}\n","export default \".ScrollHistorico {\\n  height: auto;\\n  max-height: 400px;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n}\\n\\n.ScrollEstoque {\\n  height: auto;\\n  max-height: 200px;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy90ZWNub2xvZ2lhLWluZm9ybWFjYW8vZXN0b3F1ZS9tb3ZpbWVudGFjb2VzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQUFGOztBQUdBO0VBQ0UsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQUFGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy90ZWNub2xvZ2lhLWluZm9ybWFjYW8vZXN0b3F1ZS9tb3ZpbWVudGFjb2VzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uU2Nyb2xsSGlzdG9yaWNvIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXgtaGVpZ2h0OiA0MDBweDtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG4uU2Nyb2xsRXN0b3F1ZSB7XG4gIGhlaWdodDogYXV0bztcbiAgbWF4LWhlaWdodDogMjAwcHg7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuIl19 */\";","import { TecnologiaInformacaoEstoqueService } from './../../services/estoque.service';\nimport { TecnologiaInformacaoEstoqueTipoMovimentacoesService } from './../../tipo-movimentacoes/services/tipo-movimentacoes.service';\nimport { ITecnologiaInformacaoTipoMovimentacoes } from './../../tipo-movimentacoes/models/tipoMovimentacoes';\n//Services\nimport { TecnologiaInformacaoEstoqueProdutosService } from './../../produtos/services/produtos.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TecnologiaInformacaoEstoqueMovimentacoesService } from '../services/movimentacoes.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//Bootstrap\nimport { utilsBr } from 'js-brasil';\nimport { BsDatepickerConfig, BsModalRef, BsModalService } from 'ngx-bootstrap';\n//Angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//rxjs\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n//interfaces\nimport { ITecnologiaInformacaoTipoItem } from '../../../contratos/tipo-item/models/tipoItem';\nimport { ITecnologiaInformacaoModelo } from '../../../contratos/modelo/models/modelo';\nimport { ITecnologiaInformacaoNivelEstoque } from '../../nivel-estoque/models/nivelEstoque';\nimport { ITecnologiaInformacaoTipoProduto } from '../../tipo-produto/models/tipoProduto';\nimport { ITecnologiaInformacaoEstoqueProduto } from '../../produtos/models/produto';\n\n@Component({\n  selector: 'tecnologia-informacao-estoque-movimentacoes-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class TecnologiaInformacaoEstoqueMovimentacoesCadastroComponent\n  implements OnInit {\n  noResult: boolean;\n  $activatedRouteSubscription: Subscription;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  modalRef: BsModalRef;\n  formData: Array<FormData> = [];\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  tipos = [\n    {\n      cod: 'ENTRADA',\n      nome: 'ENTRADA',\n    },\n    {\n      cod: 'SAIDA',\n      nome: 'SAIDA',\n    },\n  ];\n\n\n  //loading\n  disabledForm = false;\n  loadingTipoItem: boolean;\n  loadingModelo: boolean;\n  loadingEmpresa: boolean;\n  loading = false;\n  loadingNavBar = false;\n  anexosLoaded: boolean = false;\n  // loadingMoeda: boolean;\n\n  //Interfaces\n  tipoItem: ITecnologiaInformacaoTipoItem[] = [];\n  modelo: ITecnologiaInformacaoModelo[] = [];\n  empresas = [];\n  precisao = 3;\n  produtos: Array<ITecnologiaInformacaoEstoqueProduto> = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private modalService: BsModalService,\n    private produtosService: TecnologiaInformacaoEstoqueProdutosService,\n    private titleService: TitleService,\n    private estoqueService: TecnologiaInformacaoEstoqueService,\n    private atividadesService: AtividadesService,\n    private movimentacoesService: TecnologiaInformacaoEstoqueMovimentacoesService\n  ) {}\n  public MASKS = utilsBr.MASKS;\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n    this.getEmpresas();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onActivatedRoute() {\n    const _params = this.activatedRoute.snapshot.params;\n    if (!_params.hasOwnProperty('id')) return this.getProdutos();\n    this.getProdutos({ ID_TEIN_ESTO_PROD: _params['id'] });\n  }\n  \n\n  getEmpresas(params?) {\n    this.loading = true;\n    const _params = params ?? {};\n    _params.IN_STAT = '1';\n    _params.TT_REGI_PAGI = '1000000';\n\n    this.loading = true;\n    this.estoqueService\n      .getEmpresas(_params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.empresas = response.body['result'];\n        }\n      });\n  }\n\n  getProdutos(params?: Partial<ITecnologiaInformacaoEstoqueProduto>) {\n    this.loading = true;\n    const _params = params ?? {};\n    _params.IN_STAT = '1';\n    _params.IN_PAGI = '0';\n    this.produtosService\n      .getProdutos(_params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            let tipoQuantidade = response.body['data'][0]['DS_UNID_MEDI']\n            let codigoSerie = response.body['data'][0]['IN_CODI_SERI']\n            if(params){\n              this.form.get('ID_TEIN_ESTO_PROD').patchValue(response.body['data'][0]['ID_TEIN_ESTO_PROD'])\n              this.form.get('DS_UNID_MEDI').patchValue(tipoQuantidade)\n              this.form.controls['DS_UNID_MEDI'].disable();\n              this.tipoQuantidade(tipoQuantidade)\n              this.codigoSerie(codigoSerie)\n            } \n            this.produtos = response.body['data'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.produtos = [];\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  tipoQuantidade(params){\n    let tipoQuantidade = params\n    if(tipoQuantidade == 'KG' ||  tipoQuantidade == 'TON' ){\n      this.precisao = 3;\n    } else {\n      this.precisao = 0;\n    }\n  }\n\n  codigoSerie(params){\n    let codigoSerie = params\n    if(codigoSerie == 1 ){\n      this.form.controls['CD_ITEM'].setValidators(Validators.required);\n      this.form.controls['CD_ITEM'].enable();\n      this.form.controls['CD_ITEM'].updateValueAndValidity();\n    } else {\n      this.form.controls['CD_ITEM'].clearValidators();\n      this.form.controls['CD_ITEM'].disable();\n      this.form.controls['CD_ITEM'].updateValueAndValidity();\n      this.form.controls['CD_ITEM'].reset()\n      return\n    }\n  }\n  setBreadCrumb(): void {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.appTitle = 'Cadastro';\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/tecnologia-informacao/home',\n      },\n      {\n        descricao: 'Estoque',\n        routerLink: `/tecnologia-informacao/estoque/${id}`,\n      },\n      {\n        descricao: 'Movimentações',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //formulario\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      ID_TEIN_ESTO_PROD: [null, [Validators.required]],\n      TP_MOVI: [null, [Validators.required]],\n      TT_PROD: [null, [Validators.required]],\n      VL_UNIT: [null],\n      DS_UNID_MEDI: [null],\n      CD_REFE: [null],\n      CD_PEDI: [null],\n      NR_NOTA_FISC: [null],\n      ID_TECN_INFO_MOVI: [null],\n      IN_STAT: [null],\n      UUID_EMPR: [null, [Validators.required]],\n      IN_CODI_SERI: [0],\n      CD_ITEM: [null],\n      NM_MODE: [null],\n      DS_OBSE: [null],\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  validateFormProduto(produto) {\n    let codigoSerie= produto.IN_CODI_SERI\n    let tipoQuantidade = produto.DS_UNID_MEDI\n    this.form.get('ID_TEIN_ESTO_PROD').patchValue(produto.ID_TEIN_ESTO_PROD)\n    this.form.get('DS_UNID_MEDI').patchValue(tipoQuantidade)\n    this.form.controls['DS_UNID_MEDI'].disable();\n    this.tipoQuantidade(tipoQuantidade)\n    this.codigoSerie(codigoSerie)\n  }\n\n  // validateValor(produto: ITecnologiaInformacaoTipoMovimentacoes) {\n  //   if (produto.SG_MOVI_TIPO == 'SAID') {\n  //     this.form.controls['VL_UNIT'].disable();\n  //     return;\n  //   }\n  //   this.form.controls['VL_UNIT'].enable();\n  // }\n\n  postMovimentacoes() {\n    this.loadingNavBar = true;\n    this.movimentacoesService\n      .postMovimentacoes(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          try {\n            this.pnotify.error(error.error.message);\n          } catch (error) {\n            this.pnotify.error();\n          }\n        }\n      );\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, {\n      animated: false,\n      class: 'modal-lg',\n      backdrop: 'static',\n    });\n  }\n  hideModal() {\n    this.modalRef.hide();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { NumberIntPipe } from './number-int.pipe';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [ NumberIntPipe ],\n  imports: [\n    CommonModule\n  ],\n  exports:[\n    NumberIntPipe\n  ]\n})\nexport class TecnologiaInformacaoEstoquePipesModule { \n\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"MOVIMENTAÇÕES\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\n    (click)=\\\"postMovimentacoes()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\n        <legend>Dados da Movimentação</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md pl-0\\\">\\n            <label for=\\\"produtos\\\">Produto</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"produtos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              dropdownPosition=\\\"bottom\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              labelForId=\\\"ID_TEIN_ESTO_PROD\\\"\\n              bindLabel=\\\"NM_PROD\\\"\\n              bindValue=\\\"ID_TEIN_ESTO_PROD\\\"\\n              id=\\\"ID_TEIN_ESTO_PROD\\\"\\n              formControlName=\\\"ID_TEIN_ESTO_PROD\\\"\\n              (change)=\\\"validateFormProduto($event)\\\"\\n              >\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ID_TEIN_ESTO_PROD')\\\" message=\\\"Produto é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md pl-0\\\">\\n            <label for=\\\"empresas\\\">Empresa</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"empresas\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              dropdownPosition=\\\"bottom\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              labelForId=\\\"ID\\\"\\n              bindLabel=\\\"NM_FANT\\\"\\n              bindValue=\\\"ID\\\"\\n              id=\\\"ID\\\"\\n              formControlName=\\\"UUID_EMPR\\\"\\n              [ngClass]=\\\"onFieldRequired('TP_MOVI')\\\"\\n              >\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('UUID_EMPR')\\\" message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md pl-0\\\">\\n            <label for=\\\"TP_MOVI\\\">Tipo de Movimentação</label>\\n            <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"tipos\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"tipo\\\"\\n            bindLabel=\\\"nome\\\"\\n            bindValue=\\\"cod\\\"\\n            id=\\\"tipo\\\"\\n            formControlName=\\\"TP_MOVI\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            [ngClass]=\\\"onFieldRequired('TP_MOVI')\\\"\\n          >\\n            <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\n            </ng-template>\\n          </ng-select>\\n          <invalid-form-control [show]=\\\"onFieldInvalid('TP_MOVI')\\\" message=\\\"Tipo de movimentação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-4 pl-0\\\">\\n            <label for=\\\"DS_UNID_MEDI\\\">Unidade de Medida</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"DS_UNID_MEDI\\\"\\n              formControlName=\\\"DS_UNID_MEDI\\\"\\n              placeholder=\\\"Selecione o Produto...\\\"\\n              disabled\\n            >\\n          </div>\\n          <div class=\\\"form-group col-md-4 pl-0\\\">\\n            <label for=\\\"TT_PROD\\\">Quantidade</label>\\n            <input \\n              class=\\\"form-control\\\" \\n              type=\\\"text\\\"\\n              placeholder=\\\"Digite...\\\"\\n              id=\\\"TT_PROD\\\"\\n              formControlName=\\\"TT_PROD\\\"\\n              [ngClass]=\\\"onFieldRequired('TT_PROD')\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '' , thousands: '.', decimal: ',' , precision: precisao }\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('TT_PROD')\\\" message=\\\"Quantidade é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-4 pl-0\\\">\\n            <label for=\\\"VL_UNIT\\\">Valor Unitário</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"VL_UNIT\\\"\\n              formControlName=\\\"VL_UNIT\\\"\\n              placeholder=\\\"Digite...\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\n            <label for=\\\"CD_REFE\\\">Código de Referência</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"CD_REFE\\\"\\n              formControlName=\\\"CD_REFE\\\"\\n              placeholder=\\\"Digite...\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\n            <label for=\\\"CD_PEDI\\\">Número do Pedido</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"CD_PEDI\\\"\\n              formControlName=\\\"CD_PEDI\\\"\\n              placeholder=\\\"Digite...\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6 pl-0\\\" >\\n            <label for=\\\"CD_ITEM\\\">Informe o Número de Série</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"CD_ITEM\\\"\\n              formControlName=\\\"CD_ITEM\\\"\\n              placeholder=\\\"Digite...\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldRequired('CD_ITEM')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('CD_ITEM')\\\" message=\\\"Número de série é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6 pl-0\\\" >\\n            <label for=\\\"NR_NOTA_FISC\\\">Informe Nota Fiscal</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NR_NOTA_FISC\\\"\\n              formControlName=\\\"NR_NOTA_FISC\\\"\\n              placeholder=\\\"Digite...\\\"\\n              autocomplete=\\\"new-password\\\"\\n            />\\n          </div>\\n        </div>\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\n        <legend>Observação</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n          </div>\\n        </div>\\n        <br>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n</app-body>\";","import { TecnologiaInformacaoEstoqueService } from './../../services/estoque.service';\nimport { TecnologiaInformacaoEstoqueMovimentacoesService } from './../services/movimentacoes.service';\nimport { NumberIntPipe } from './../../pipes/number-int.pipe';\nimport { ITecnologiaInformacaoEstoqueMarcas } from './../../marcas/models/marcas';\nimport { TecnologiaInformacaoEstoqueMarcasService } from './../../marcas/services/marcas.service';\nimport { TecnologiaInformacaoEstoqueProdutosService } from './../../produtos/services/produtos.service';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\n//angular\nimport { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\n// rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n//modelos\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\nimport { ITecnologiaInformacaoMovimentacoes } from './../models/movimentacoes';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { ITecnologiaInformacaoEstoqueProduto } from '../../produtos/models/produto';\n\n@Component({\n  selector: 'tecnologia-informacao-estoque-produtos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class TecnologiaInformacaoEstoqueMovimentacoesListaComponent\n  implements OnInit, OnDestroy {\n  breadCrumbTree: Array<Breadcrumb>;\n  idSubModulo: number;\n  noResult: boolean;\n  loadingEstoque: boolean;\n  modalRef: BsModalRef;\n  loading = true; //Loading FullPage\n  loadingProdutos: boolean;\n  noMovimentacoes: boolean;\n  loadingMovimentacoes: boolean;\n  loadingNavBar = false; //Loading do NAVBAR\n  movimentacoes: Array<ITecnologiaInformacaoMovimentacoes>;\n  estoque = [];\n  noEstoque: boolean;\n  produtos: Array<ITecnologiaInformacaoEstoqueProduto>;\n  produtosForm: Array<ITecnologiaInformacaoEstoqueProduto>;\n  $activatedRouteSubscription: Subscription;\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: false,\n    border: true,\n  };\n\n  form: FormGroup;\n  formHistoricoMovimentacoes: FormGroup;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  produtoSelecionado: ITecnologiaInformacaoMovimentacoes;\n\n  // Tipos de Situação dos Tipos de Items (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '2',\n      nome: 'Inativos',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private produtosService: TecnologiaInformacaoEstoqueProdutosService,\n    private estoqueService: TecnologiaInformacaoEstoqueService,\n    private movimentacoesService: TecnologiaInformacaoEstoqueMovimentacoesService,\n    private formBuilder: FormBuilder,\n    private modalService: BsModalService,\n    private routerService: RouterService,\n    private dateService: DateService,\n    private marcasService: TecnologiaInformacaoEstoqueMarcasService,\n    private detailPanelService: DetailPanelService\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n    this.onDetailPanelEmitter();\n    this.getFormProdutos()\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n        this.getProdutos(this.getParams());\n      }\n    );\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.patchValue({\n      PAGI: 1,\n      TT_REGI_PAGI: 100,\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  \n  getFormProdutos(params?: Partial<ITecnologiaInformacaoEstoqueProduto>) {\n    this.loadingProdutos = true;\n    const _params = params ?? {};\n    _params.IN_STAT = '1';\n    _params.IN_PAGI = '0';\n    this.produtosService\n      .getProdutos(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingProdutos = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.produtosForm = response.body['data'];\n          } else {\n            this.produtosForm = [];\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n        }\n      );\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID_TECN_INFO_MOVI: [null],\n      ID_TEIN_ESTO_PROD: [null],\n      ID_TECN_INFO_ITEM_TIPO: [null],\n      ID_TEIN_ESTO_PRMA:[null],\n      ID_TECN_INFO_ITEM_MODE: [null],\n      IN_STAT: [null],\n      NM_CHAM: [null],\n      NM_MRCA: [null],\n      NM_TIPO: [null],\n      VL_UNIT: [null],\n      TT_ESTO_ATUA: [null],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n    this.formHistoricoMovimentacoes = this.formBuilder.group({\n      buscarPor: ['CD_REFE'],\n      pesquisa: [null],\n      CD_REFE: [null],\n      CD_ITEM: [null],\n      NR_NOTA_FISC: [null],\n      NM_USUA: [null]\n    });\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/tecnologia-informacao/home`,\n      },\n      {\n        descricao: 'Estoque',\n        routerLink: `/tecnologia-informacao/estoque/${id}`,\n      },\n      {\n        descricao: 'Movimentações',\n      },\n    ];\n  }\n\n  onFilter() {\n    this.detailPanelService.hide();\n    this.form.get('PAGI').setValue(1);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  onDetails(produto: ITecnologiaInformacaoMovimentacoes): void {\n    this.loadingNavBar = true;\n    this.getEstoque({ID_TEIN_ESTO_PROD: produto.ID_TEIN_ESTO_PROD})\n    this.detailPanelService.show();\n    this.produtoSelecionado = produto;\n    this.detailPanelService.loadedFinished(false);\n\n    setTimeout(() => {\n      this.loadingNavBar = false;\n    }, 500);\n  }\n\n  openModal(template: TemplateRef<any>, produto) {\n    this.produtoSelecionado = produto;\n    this.modalRef = this.modalService.show(template, {\n      animated: false,\n      class: 'modal-xl',\n    });\n    this.getMovimentacoes(produto.ID_TEIN_ESTO_PROD);\n  }\n\n  hideModal() {\n    this.modalRef.hide();\n  }\n\n  getProdutos(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n    this.produtosService\n      .getProdutos(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.produtos = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.produtos = [];\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n\n\n  getMovimentacoes(id?: Partial<ITecnologiaInformacaoMovimentacoes>) {\n    console.log(id)\n    this.loadingMovimentacoes = true;\n    this.noMovimentacoes = true\n    const _obj = this.formHistoricoMovimentacoes.value;\n    const params = {};\n    const _params = {...params,ID_TEIN_ESTO_PROD: id}\n    if (_obj['pesquisa']) _params[_obj['buscarPor']] = _obj['pesquisa'];\n    this.movimentacoesService\n      .getMovimentacoes(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingMovimentacoes = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.movimentacoes = response.body['data'];\n            this.noMovimentacoes = false;\n          } else {\n            this.movimentacoes = [];\n            this.pnotify.notice('Nenhuma movimentação encontrada!');\n            this.noMovimentacoes = true\n          }\n        },\n        (error) => {\n          this.pnotify.error('Erro ao carregar modelos');\n        }\n      );\n  }\n\n  openRegister(produtos: ITecnologiaInformacaoMovimentacoes) {\n    this.route.navigate(['../cadastro'], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(produtos),\n    });\n  }\n\n  onPageChanged(event) {\n    this.detailPanelService.hide();\n    this.form.get('PAGI').setValue(event.page);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  getEstoque(params?) {\n    console.log(params)\n    this.loadingEstoque = true;\n    this.estoqueService\n      .getEstoque(params)\n      .pipe(\n        finalize(() => {\n          this.loadingEstoque = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.estoque = response.body['data'];\n            this.noEstoque = false;\n          } else {\n            this.estoque = [];\n            this.noEstoque = false;\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noEstoque = false;\n          this.noResult = true;\n        }\n      );\n  }\n\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"MOVIMENTAÇÕES\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onReset()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md pl-0\\\">\\n              <label for=\\\"produtosForm\\\">Produto</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"produtosForm\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                dropdownPosition=\\\"bottom\\\"\\n                [loading]=\\\"loadingProdutos\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                labelForId=\\\"ID_TEIN_ESTO_PROD\\\"\\n                bindLabel=\\\"NM_PROD\\\"\\n                bindValue=\\\"ID_TEIN_ESTO_PROD\\\"\\n                id=\\\"ID_TEIN_ESTO_PROD\\\"\\n                formControlName=\\\"ID_TEIN_ESTO_PROD\\\"\\n                >\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\n              </ng-template>\\n            </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-1 pl-0\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\n      <div class=\\\"w-100\\\">\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\">ID</th>\\n              <th scope=\\\"col\\\">Produto</th>\\n              <th scope=\\\"col\\\"[hidden]=\\\"showDetailPanel\\\">Unidade de Medida</th>\\n              <th scope=\\\"col\\\"[hidden]=\\\"showDetailPanel\\\">Quantidade Atual</th>\\n              <th scope=\\\"col\\\" style=\\\"width:80px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let produto of produtos\\\"  [class.table-active]=\\\"produto?.ID_TEIN_ESTO_PROD == produtoSelecionado?.ID_TEIN_ESTO_PROD && showDetailPanel\\\">\\n              <td (click)=\\\"onDetails(produto)\\\">\\n              {{produto.ID_TEIN_ESTO_PROD }}\\n              </td>\\n              <td (click)=\\\"onDetails(produto)\\\">{{ produto.NM_PROD | uppercase }}</td>\\n              <td (click)=\\\"onDetails(produto)\\\" [hidden]=\\\"showDetailPanel\\\">{{ produto.DS_UNID_MEDI | uppercase }}</td>\\n              <td (click)=\\\"onDetails(produto)\\\" *ngIf=\\\"produto.TT_ESTO_ATUA != null \\\" [hidden]=\\\"showDetailPanel\\\">{{ produto.TT_ESTO_ATUA | numberInt:produto.DS_UNID_MEDI }} </td>\\n              <td (click)=\\\"onDetails(produto)\\\" *ngIf=\\\"produto.TT_ESTO_ATUA == null \\\" [hidden]=\\\"showDetailPanel\\\"> 0 </td>\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Nova Movimentação\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', produto.ID_TEIN_ESTO_PROD]\\\">\\n                    <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Histórico\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModal(historicoMovimentacoes, produto)\\\">\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </div>\\n      <div>\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel>\\n        <tabset>\\n          <tab heading=\\\"Detalhes\\\">\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n              <div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Produto</label>\\n                    <div *ngIf=\\\"produtoSelecionado?.NM_PROD == null\\\">NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"produtoSelecionado?.NM_PROD != null && produtoSelecionado?.NM_PROD != ''\\\">{{produtoSelecionado?.ID_TEIN_ESTO_PROD}} - {{ produtoSelecionado?.NM_PROD | uppercase}}</div>\\n                  </div>\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Quantidade Atual</label>\\n                    <div *ngIf=\\\"produtoSelecionado?.TT_ESTO_ATUA == null\\\" > 0 {{produtoSelecionado?.DS_UNID_MEDI}}</div>\\n                    <div *ngIf=\\\"produtoSelecionado?.TT_ESTO_ATUA != null\\\">{{ produtoSelecionado?.TT_ESTO_ATUA | numberInt:produtoSelecionado.DS_UNID_MEDI  }} {{produtoSelecionado?.DS_UNID_MEDI}}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Marca</label>\\n                    <div *ngIf=\\\"produtoSelecionado?.NM_MRCA == null\\\">NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"produtoSelecionado?.NM_MRCA != null && produtoSelecionado?.NM_MRCA != ''\\\">{{produtoSelecionado?.NM_MRCA}}</div>\\n                  </div>\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Tipo</label>\\n                    <div *ngIf=\\\"produtoSelecionado?.NM_TIPO == null\\\" >NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"produtoSelecionado?.NM_TIPO != null\\\">{{ produtoSelecionado?.NM_TIPO}}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-12\\\">\\n                    <label>Modelo</label>\\n                    <div *ngIf=\\\"produtoSelecionado?.NM_MODE == null\\\">NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"produtoSelecionado?.NM_MODE != null && produtoSelecionado?.NM_MODE != ''\\\">{{produtoSelecionado?.NM_MODE}}</div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </tab>\\n          <tab heading=\\\"Estoque por Empresa\\\">\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\" >\\n              <div *ngIf=\\\"!loadingEstoque && !noEstoque\\\" class=\\\"ScrollEstoque\\\">\\n                <table  class=\\\"table table-borderless text-center\\\" >\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th scope=\\\"col\\\" style=\\\"width:40px\\\"></th>\\n                        <th scope=\\\"col\\\">Empresa</th>\\n                        <th scope=\\\"col\\\">Quantidade</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody >\\n                      <tr *ngFor=\\\"let item of estoque; let i = index\\\">\\n                        <td class=\\\"d-flex\\\">\\n                          <i class=\\\"text-success fas fa-circle mr-3\\\" *ngIf=\\\"item.IN_STAT == 1\\\" tooltip=\\\"Ativo\\\" ></i>\\n                          <i class=\\\"text-danger  fas fa-circle mr-3\\\" *ngIf=\\\"item.IN_STAT == 2\\\" tooltip=\\\"Inativo\\\"></i>\\n                        </td>\\n                        <td>{{ item.NM_EMPR }}</td>\\n                        <td>{{ item.TT_PROD | numberInt:item.DS_UNID_MEDI }}</td>\\n                      </tr>\\n                    </tbody>\\n                </table>\\n              </div>\\n              <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"loadingEstoque && noEstoque\\\">\\n                <div class=\\\"spinner-border text-dark\\\"></div>\\n              </div>\\n              <div *ngIf=\\\"!loadingEstoque && noEstoque\\\" class=\\\"d-flex justify-content-center mb-3\\\">\\n                <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n              </div>\\n            </div>\\n          </tab>\\n        </tabset>\\n      </detail-panel>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n  <ng-template #historicoMovimentacoes>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Histórico de Movimentações - {{produtoSelecionado.NM_PROD}} </h4>\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n        <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\" *ngIf=\\\"loadingMovimentacoes\\\">\\n          <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"formHistoricoMovimentacoes\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-4\\\">\\n              <label for=\\\"cdItem\\\">BUSCAR POR</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"buscarPor\\\"\\n              >\\n                <option value=\\\"CD_REFE\\\" selected >Código de Referência</option>\\n                <option value=\\\"NR_NOTA_FISC\\\">Nota Fiscal</option>\\n                <option value=\\\"CD_ITEM\\\">Número de Série</option>\\n                <option value=\\\"NM_USUA\\\">Responsável</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-8\\\">\\n              <label>TERMO DE PESQUISA</label>\\n              <div class=\\\"input-group\\\">\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"pesquisa\\\"\\n                  >\\n                  <div class=\\\"input-group-append\\\">\\n                    <span \\n                      container=\\\"body\\\"\\n                      placement =\\\"left\\\"\\n                    >\\n                      <button\\n                        style=\\\"height: 25px;\\\"\\n                        class=\\\"input-group-text hover\\\"\\n                        (click)=\\\"getMovimentacoes(produtoSelecionado.ID_TEIN_ESTO_PROD)\\\"\\n                        >\\n                        <i class=\\\"fas fa-search\\\"></i>\\n                      </button>\\n                    </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n      <div class=\\\"ScrollHistorico\\\">\\n        <custom-table class=\\\"text-center\\\" *ngIf=\\\"!loadingMovimentacoes && !noMovimentacoes\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th>Data</th>\\n              <th>Tipo de Movimentação</th>\\n              <th>Quantidade</th>\\n              <th>Código de Referência</th>\\n              <th>Nota Fiscal</th>\\n              <th>Responsável</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody >\\n            <tr  *ngFor=\\\"let movimentacao of movimentacoes\\\">\\n              <td>{{movimentacao.DT_INCL | date: 'dd/MM/yyyy HH:mm'}}</td>\\n              <td>{{movimentacao.TP_MOVI | uppercase}}</td>\\n              <td>{{movimentacao.TT_PROD | numberInt:movimentacao.DS_UNID_MEDI}}</td>\\n              <td *ngIf=\\\"movimentacao.CD_REFE != 0\\\">{{movimentacao.CD_REFE }}</td>\\n              <td *ngIf=\\\"movimentacao.CD_REFE == 0\\\">NÃO INFORMADO</td>\\n              <td *ngIf=\\\"movimentacao.NR_NOTA_FISC != 0\\\">{{movimentacao.NR_NOTA_FISC }}</td>\\n              <td *ngIf=\\\"movimentacao.NR_NOTA_FISC == 0\\\">NÃO INFORMADO</td>\\n              <td>{{movimentacao.NM_USUA }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </div>\\n    </div>\\n  </ng-template>\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvbW92aW1lbnRhY29lcy9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//components\nimport { TecnologiaInformacaoEstoqueMovimentacoesListaComponent } from './lista/lista.component';\nimport { TecnologiaInformacaoEstoqueMovimentacoesCadastroComponent } from './cadastro/cadastro.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TecnologiaInformacaoEstoqueMovimentacoesListaComponent,\n  },\n  {\n    path: 'novo',\n    component: TecnologiaInformacaoEstoqueMovimentacoesCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: TecnologiaInformacaoEstoqueMovimentacoesCadastroComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TecnologiaInformacaoEstoqueMovimentacoesModuleRoutingModule {}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TecnologiaInformacaoEstoqueService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n  getEmpresas(params?) {\n    return this.http.get(`${this.API}/common/v2/empresas`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n  \n  getEstoque(params?) {\n    return this.http.get(\n      `${this.API}/tecnologia-informacao/estoque`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n    \n  }\n\n  getEstoqueItens(params?) {\n    return this.http.get(\n      `${this.API}/tecnologia-informacao/estoque/itens`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numberInt'\n})\nexport class NumberIntPipe implements PipeTransform {\n\n  transform(value, ...args) {\n    let argumento = args.toString()\n    let inteiro = parseInt(value)\n    if(argumento == 'UN' || argumento == 'PC' && value != null){\n      return inteiro;\n    }\n    if (Number.isNaN(value)){\n      return\n    }\n    if(!parseFloat(value)){\n      return\n    }\n    if(value < 1 && value > -1){\n      let _valor = value.toString()\n      return (0 + _valor)\n    }\n    return value\n  }\n\n}\n"]}