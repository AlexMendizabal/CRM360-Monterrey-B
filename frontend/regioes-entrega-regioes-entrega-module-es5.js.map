{"version":3,"sources":["webpack:///src/app/modules/logistica/cadastros/regioes-entrega/lista/lista.component.scss","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/logistica/cadastros/regioes-entrega/regioes-entrega.module.ts","webpack:///src/app/modules/logistica/cadastros/regioes-entrega/lista/lista.component.ts","webpack:///src/app/modules/logistica/cadastros/regioes-entrega/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/cadastros/regioes-entrega/regioes-entrega-routing.module.ts","webpack:///src/app/modules/logistica/cadastros/regioes-entrega/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/cadastros/regioes-entrega/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/cadastros/regioes-entrega/lista/lista.component.html"],"names":["DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","providedIn","RegioesEntregaModule","declarations","imports","forRoot","LogisticaRegioesEntregaListaComponent","route","service","pnotify","formBuilder","activatedRoute","atividadesService","routerService","dateService","appTitle","breadCrumbTree","showAdvancedFilter","itemsPerPage","totalItems","currentPage","loading","loadingNavBar","noResult","form","group","UUID","ID_REFE_ERP","NM_REGI_ENTR","IN_STAT","PAGI","TT_REGI_PAGI","TIME","getTime","registrarAcesso","subscribe","setBreadCrumb","onActivatedRoute","$activatedRouteSubscription","unsubscribe","queryParams","response","_response","getBase64UrlParams","patchValue","hasOwnProperty","getRegioesEntrega","getParams","descricao","routerLink","params","pipe","status","regioesEntrega","body","notice","error","event","get","setValue","page","navigate","relativeTo","setBase64UrlParams","reset","onFilter","_params","_obj","value","prop","convertToUrlDate","selector","template","LogisticaRegioesEntregaCadastroComponent","router","titleService","localeService","setFormBuilder","id","snapshot","idSubModulo","setTitle","getRegiaoEntrega","message","UUID_LOGI_REGI_ENTR","required","DS_OBSE","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","postRegiaoEntrega","success","routes","path","component","LogisticaRegioesEntregaRoutingModule","forChild","exports"],"mappings":"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","file":"regioes-entrega-regioes-entrega-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy9yZWdpb2VzLWVudHJlZ2EvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  PaginationModule,\n  TooltipModule,\n  TabsModule,\n  TimepickerModule,\n  BsDatepickerModule,\n  ModalModule,\n} from 'ngx-bootstrap';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\nimport { NgBrazil } from 'ng-brazil';\nimport { TextMaskModule } from 'angular2-text-mask';\n\nimport { LogisticaRegioesEntregaRoutingModule } from './regioes-entrega-routing.module';\n\nimport { LogisticaRegioesEntregaListaComponent } from './lista/lista.component';\nimport { LogisticaRegioesEntregaCadastroComponent } from './cadastro/cadastro.component';\n\n@NgModule({\n  declarations: [LogisticaRegioesEntregaListaComponent, LogisticaRegioesEntregaCadastroComponent],\n  imports: [\n    LogisticaRegioesEntregaRoutingModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n  ]\n})\nexport class RegioesEntregaModule { }\n","import { RouterService } from 'src/app/shared/services/core/router.service';\n// angular\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n//services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\n\n//rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { LogisticaRegioesEntregaService } from '../services/regioes-entrega.service';\n\n@Component({\n  selector: 'logistica-regioes-entrega-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class LogisticaRegioesEntregaListaComponent implements OnInit {\n\n  appTitle = \"Regiones de entrega\";\n\n  form: FormGroup;\n\n  breadCrumbTree: any = [];\n\n  showAdvancedFilter = true;\n  regioesEntrega: any;\n\n  idSubModulo: number;\n\n  $subscription: Subscription;\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 0;\n  currentPage = 1;\n  /* Pagination */\n\n  /*loading*/\n  loading = true;\n  loadingNavBar = false;\n  noResult = true;\n  /*loading*/\n\n  $activatedRouteSubscription: Subscription;\n\n  constructor(\n    private route: Router,\n    private service: LogisticaRegioesEntregaService,\n    private pnotify: PNotifyService,\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private routerService: RouterService,\n    private dateService: DateService,\n  ) {\n    this.form = this.formBuilder.group({\n      UUID: [null],\n      ID_REFE_ERP: [null],\n      NM_REGI_ENTR: [null],\n      IN_STAT: [null],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [(new Date).getTime()]\n    });\n  }\n\n  ngOnInit() {\n    this.atividadesService.registrarAcesso().subscribe();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n\n        if (_response.hasOwnProperty('TT_REGI_PAGI')){\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n        }\n        \n        this.getRegioesEntrega(this.getParams());\n      }\n    );\n  }\n\n  setBreadCrumb() {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Logistica'\n      },\n      {\n        descricao: 'Cadastros',\n        routerLink: '../../'\n      },\n      {\n        descricao: this.appTitle\n      }\n    ];\n  }\n\n  getRegioesEntrega(params?) {\n\n    if (this.loading === false) {\n      this.loadingNavBar = true;\n    }\n\n    return this.service\n      .getRegioesEntrega(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.regioesEntrega = response.body[\"data\"];\n            this.totalItems = response.body[\"total\"];\n            this.noResult = false;\n          } else {\n            this.pnotify.notice(\"Ningún resultado encontrado\");\n            this.noResult = true;\n          }\n        },\n        (error) => {\n          this.noResult = true;\n          this.pnotify.error();\n        }\n      );\n  }\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  onShowFilter() {\n    this.showAdvancedFilter = !this.showAdvancedFilter;\n  }\n\n  onFilter() {\n    this.form.get(\"PAGI\").setValue(1);\n    this.form.get(\"TIME\").setValue((new Date).getTime());\n\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\n    });\n\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.get(\"status\").setValue(\"T\");\n    this.onFilter();\n    this.route.navigate([],\n      {\n        relativeTo: this.activatedRoute,\n        queryParams: null\n      }\n    );\n  }\n\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n}\n","import { RouterService } from 'src/app/shared/services/core/router.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap';\nimport { finalize } from 'rxjs/operators';\n\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  AbstractControl,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//interfaces\n\nimport { Subscription } from 'rxjs';\nimport { ILogisticaRegiaoEntrega } from '../models/ILogisticaRegiaoEntrega';\nimport { LogisticaRegioesEntregaService } from '../services/regioes-entrega.service';\n\n@Component({\n  selector: 'logistica-regioes-entrega-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss']\n})\nexport class LogisticaRegioesEntregaCadastroComponent implements OnInit {\n\n  noResult: boolean;\n  loading = false;\n  loadingNavBar = false;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  regiaoEntrega: ILogisticaRegiaoEntrega;\n  $activatedRouteSubscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private routerService: RouterService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n    private localeService: BsLocaleService,\n    private service: LogisticaRegioesEntregaService\n  ) {}\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.appTitle = 'Cadastro';\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'Cadastros',\n        routerLink: `/logistica/cadastros/${id}`,\n      },\n      {\n        descricao: 'Regiones de entrega',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //Consumir informações que estão na rota para editar\n  ngOnDestroy() {\n  }\n\n  onActivatedRoute() {\n    const id = this.activatedRoute.snapshot.params?.id;\n    if(id){\n      this.getRegiaoEntrega(id)\n    }\n  }\n\n  getRegiaoEntrega(id){\n    this.loading = true;\n    this.service\n      .getRegiaoEntrega(id)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe(\n        response => {\n          if(response.status != 200){\n            this.pnotify.error();\n            return\n          }\n\n          this.form.patchValue(response.body['data']);\n        },\n        error => {\n          const message = error?.error?.message;\n          message ? this.pnotify.error(message) : this.pnotify.error();\n        }\n      )\n  }\n\n  //formulario\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      UUID_LOGI_REGI_ENTR: [null],\n      NM_REGI_ENTR: [null, [Validators.required]],\n      ID_REFE_ERP: [null, [Validators.required]],\n      IN_STAT: ['1', [Validators.required]],\n      DS_OBSE: [null],\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  postRegiaoEntrega() {\n    this.loadingNavBar = true;\n    this.service\n      .postRegiaoEntrega(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            this.form.reset();\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          const message = error?.error?.message;\n          message ? this.pnotify.error(message) : this.pnotify.error();\n        }\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LogisticaRegioesEntregaCadastroComponent } from './cadastro/cadastro.component';\nimport { LogisticaRegioesEntregaListaComponent } from './lista/lista.component';\n\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaRegioesEntregaListaComponent,\n  },\n  {\n    path: 'novo',\n    component: LogisticaRegioesEntregaCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: LogisticaRegioesEntregaCadastroComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LogisticaRegioesEntregaRoutingModule { }\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false\\\"\\n    (click)=\\\"postRegiaoEntrega()\\\"\\n    >\\n    Ahorrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"NM_REGI_ENTR\\\">Descripción</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_REGI_ENTR\\\"\\n              formControlName=\\\"NM_REGI_ENTR\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('NM_REGI_ENTR') + ' ' + onFieldRequired('NM_REGI_ENTR')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_REGI_ENTR')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"idErp\\\">Código ERP</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"ID_REFE_ERP\\\"\\n              [ngClass]=\\\"onFieldError('ID_REFE_ERP') + ' ' + onFieldRequired('ID_REFE_ERP')\\\"  \\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ID_REFE_ERP')\\\" message=\\\"O código da região é obrigatória.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"status\\\">Situación</label>\\n            <select\\n                name=\\\"status\\\"\\n                id=\\\"status\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"IN_STAT\\\"\\n                [ngClass]=\\\"onFieldError('IN_STAT') + ' ' + onFieldRequired('IN_STAT')\\\"\\n            >\\n                <option value=\\\"1\\\">Activo</option>\\n                <option value=\\\"0\\\">Inactivo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('IN_STAT')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"observacao\\\" >Observación:</label>\\n            <textarea class=\\\"form-control\\\" id=\\\"observacao\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy9yZWdpb2VzLWVudHJlZ2EvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button (click)=\\\"onReset()\\\">\\n    Limpiar\\n  </button>\\n  <button (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n  <button [routerLink]=\\\"['../novo']\\\" >\\n    Nuevo\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <advanced-filter>\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"codigo\\\">Código</label>\\n          <input\\n            id=\\\"codigo\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\" \\n            placeholder=\\\"DIGITE...\\\" \\n            formControlName=\\\"ID_REFE_ERP\\\" \\n            (keyup.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"nome\\\">Nombre</label>\\n          <input\\n            id=\\\"nome\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\" \\n            placeholder=\\\"DIGITE...\\\" \\n            formControlName=\\\"NM_REGI_ENTR\\\" \\n            (keyup.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"status\\\">Status</label>\\n          <select\\n            name=\\\"status\\\"\\n            id=\\\"status\\\"\\n            class=\\\"form-control\\\">\\n            <option value=\\\"\\\">Todos</option>\\n            <option value=\\\"1\\\">Activo</option>\\n            <option value=\\\"0\\\">Inactivo</option>\\n          </select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div  class=\\\"col-12 p-0 mt-3\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div>\\n      <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th>Id</th>\\n            <th>Código</th>\\n            <th>Nombre</th>\\n            <th>Usuario</th>\\n            <th width=\\\"70px\\\"></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of regioesEntrega; let i = index\\\">\\n            <td class=\\\"text-truncate\\\"  [ngClass]=\\\"item.IN_STAT == 1 ? 'border-success' : 'border-danger'\\\"> {{ item.UUID }} </td>  \\n            <td class=\\\"text-truncate\\\"> {{ item.ID_REFE_ERP }} </td>\\n            <td class=\\\"text-truncate\\\"> {{ item.NM_REGI_ENTR }} </td>\\n            <td class=\\\"text-truncate\\\"> \\n              <span *ngIf=\\\"!item.DT_ATUA\\\">[{{ item.DT_INCL | date : 'dd/MM/yyyy HH:mm' }}]&nbsp;</span>\\n              <span *ngIf=\\\"item.DT_ATUA\\\">[{{ item.DT_ATUA | date : 'dd/MM/yyyy HH:mm' }}]&nbsp;</span>\\n              <span>({{ item.NR_MATR }})&nbsp; {{ item.NM_USUA }}</span>\\n            </td>\\n            <td class=\\\"align-middle\\\">\\n              <a class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['../', item.UUID]\\\">\\n                <i class=\\\"fas fa-edit\\\"></i>\\n              </a>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div>\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n      <pagination\\n        [maxSize]=\\\"10\\\"\\n        [totalItems]=\\\"totalItems\\\"\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        [(ngModel)]=\\\"currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\"\\n        nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 250px\\\">\\n    <empty-result message=\\\"No se encontró información\\\"></empty-result>\\n  </div>\\n</app-body>\";"]}