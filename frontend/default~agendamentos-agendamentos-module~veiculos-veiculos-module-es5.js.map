{"version":3,"sources":["webpack:///src/app/modules/logistica/cadastros/veiculos/veiculos-routing.module.ts","webpack:///src/app/modules/logistica/cadastros/veiculos/services/veiculo.service.ts","webpack:///src/app/modules/logistica/cadastros/veiculos/modais/transportadoras/transportadoras.component.html","webpack:///src/app/modules/logistica/cadastros/veiculos/modais/motoristas/motoristas.component.scss","webpack:///src/app/modules/logistica/cadastros/veiculos/modais/motoristas/motoristas.component.ts","webpack:///src/app/modules/logistica/cadastros/veiculos/lista/lista.component.scss","webpack:///src/app/modules/logistica/cadastros/tipo-veiculo/services/tipo-veiculo.service.ts","webpack:///src/app/modules/logistica/cadastros/veiculos/lista/lista.component.html","webpack:///src/app/modules/logistica/cadastros/veiculos/modais/transportadoras/transportadoras.component.ts","webpack:///src/app/modules/logistica/cadastros/veiculos/veiculos.module.ts","webpack:///src/app/modules/logistica/cadastros/transportadoras/services/transportadoras.service.ts","webpack:///src/app/modules/logistica/cadastros/veiculos/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/cadastros/veiculos/modais/motoristas/motoristas.component.html","webpack:///src/app/modules/logistica/cadastros/veiculos/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/cadastros/veiculos/modais/transportadoras/transportadoras.component.scss","webpack:///src/app/modules/logistica/cadastros/veiculos/lista/lista.component.ts","webpack:///src/app/modules/logistica/cadastros/veiculos/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/cadastros/motoristas/services/motorista.service.ts"],"names":["routes","path","component","LogisticaVeiculosRoutingModule","imports","forChild","exports","LogisticaVeiculoService","http","API","params","get","observe","post","providedIn","LogisticaVeiculosModaisMotoristasComponent","formBuilder","motoristasServices","select","close","loading","itemsPerPage","totalItems","currentPage","motoristas","setFormBuilder","form","group","buscarPor","pesquisa","required","PAGI","TT_REGI_PAGI","value","getMotoristas","pipe","subscribe","response","status","body","error","event","setValue","page","motorista","emit","onClose","selector","template","LogisticaTipoVeiculoService","LogisticaVeiculosModaisTransportadorasComponent","transportadorasSerivices","transportadoras","ID_LOGI_TRAN","NM_FANT","NR_CNPJ","getTransportadoras","transportadora","LogisticaVeiculosModule","declarations","forRoot","LogisticaTransportadorasService","id","LogisticaVeiculosCadastroComponent","pnotify","activatedRoute","router","routerService","titleService","atividadesService","localeService","veiculoService","tipoVeiculoService","modalService","dateService","loadingNavBar","breadCrumbTree","tipoVeiculo","loadingTransportadoras","loadingMotoristas","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setBreadCrumb","onActivatedRoute","getTipoVeiculo","appTitle","snapshot","idSubModulo","setTitle","descricao","routerLink","$activatedRouteSubscription","unsubscribe","modalRef","hide","queryParams","_response","getBase64UrlParams","patchValue","ID_LOGI_VEIC","DS_VEIC","PLAC","NM_TRAN","disabled","NM_MOTO","ID_LOGI_MOTO","IN_STAT","DS_OBSE","ID_LOGI_VEIC_TIPO","loadingTipoVeiculo","getTipoVeiculos","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","postVeiculo","reset","success","navigate","relativeTo","show","animated","ignoreBackdropClick","_params","_obj","prop","Date","convertToUrlDate","LogisticaVeiculosListaComponent","route","confirmModalService","tipos","cod","nome","subtitles","text","color","buildForm","getVeiculos","getParams","TIME","getTime","onFilter","setBase64UrlParams","veiculos","noResult","veiculo","stat","confirmChange","asObservable","result","showConfirm","LogisticaMotoristaService"],"mappings":"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","file":"default~agendamentos-agendamentos-module~veiculos-veiculos-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\nimport { LogisticaVeiculosCadastroComponent } from './cadastro/cadastro.component';\nimport { LogisticaVeiculosListaComponent } from './lista/lista.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaVeiculosListaComponent,\n  },\n  {\n    path: 'novo',\n    component: LogisticaVeiculosCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: LogisticaVeiculosCadastroComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LogisticaVeiculosRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaVeiculoService {\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient) { }\n\n  getVeiculos(params?) {\n    return this.http.get(`${this.API}/logistica/veiculos`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  postVeiculo(params) {\n    return this.http.post(`${this.API}/logistica/veiculo`, params, {\n      observe: 'response',\n    });\n  }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n  <h4>Búsqueda de Transportadoras</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <advanced-filter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-4\\\">\\n          <label for=\\\"buscarPor\\\">Buscar Por</label>\\n          <select name=\\\"buscarPor\\\" id=\\\"buscarPor\\\" class=\\\"form-control\\\" formControlName=\\\"buscarPor\\\">\\n            <option value=\\\"ID_LOGI_TRAN\\\">Id</option>\\n            <option value=\\\"NM_FANT\\\">Nome Fantasia</option>\\n            <option value=\\\"NR_CNPJ\\\">CNPJ</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-8\\\">\\n          <label>TÉRMINO DE BÚSQUEDA</label>\\n          <div class=\\\"input-group\\\">\\n            <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"pesquisa\\\"\\n            >\\n            <div class=\\\"input-group-append\\\">\\n              <button\\n                tooltip=\\\"Clique para pesquiar\\\"\\n                container=\\\"body\\\"\\n                class=\\\"input-group-text hover\\\"\\n                (click)=\\\"getTransportadoras()\\\"\\n                >\\n                <i class=\\\"fas fa-search\\\"></i>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"spinner-border\\\" role=\\\"status\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"sr-only\\\">Loading...</span>\\n  </div>\\n  <table *ngIf=\\\"transportadoras?.length != 0 && !loading\\\"  class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n    <thead class=\\\"thead-light\\\">\\n      <tr>\\n        <th>ID </th>\\n        <th>Nome Fantasia</th>\\n        <th>Razão Social</th>\\n        <th>CNPJ</th>\\n        <th style=\\\"width:80px\\\" ></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let transportadora of transportadoras; let i = index\\\">\\n        <td [ngClass]=\\\"transportadora.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n        {{transportadora.ID_LOGI_TRAN | number : '6.0-0'}}\\n        </td>\\n        <td class=\\\"text-truncate\\\">{{ transportadora.NM_FANT }} </td>\\n        <td class=\\\"text-truncate\\\">{{ transportadora.NM_RAZA_SOCI }}</td>\\n        <td>{{ transportadora.NR_CNPJ | cnpj}}</td>\\n        <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\n          <span class=\\\"mr-3\\\" tooltip=\\\"Salvar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onSelect(transportadora);\\\">\\n              <i class=\\\"far fa-save\\\"></i>\\n            </button>\\n          </span>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <div [hidden]=\\\"(transportadoras?.length == 0) || (loading)\\\">\\n    Mostrando {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n    <pagination\\n      [maxSize]=\\\"10\\\"\\n      [totalItems]=\\\"totalItems\\\"\\n      (pageChanged)=\\\"onPageChanged($event)\\\"\\n      [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n      [boundaryLinks]=\\\"true\\\"\\n      [(ngModel)]=\\\"currentPage\\\"\\n      previousText=\\\"&lsaquo;\\\"\\n      nextText=\\\"&rsaquo;\\\"\\n      firstText=\\\"&laquo;\\\"\\n      lastText=\\\"&raquo;\\\">\\n    </pagination>\\n  </div>\\n</div>\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy92ZWljdWxvcy9tb2RhaXMvbW90b3Jpc3Rhcy9tb3RvcmlzdGFzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { LogisticaMotoristaService } from './../../../motoristas/services/motorista.service';\n\n@Component({\n  selector: 'logistica-veiculos-modais-motoristas',\n  templateUrl: './motoristas.component.html',\n  styleUrls: ['./motoristas.component.scss']\n})\nexport class LogisticaVeiculosModaisMotoristasComponent implements OnInit {\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() close: EventEmitter<any> = new EventEmitter();\n\n  loading = false;\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  motoristas = [];\n\n  form: FormGroup;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private motoristasServices: LogisticaMotoristaService\n  ) { }\n\n  ngOnInit(): void {\n    this.setFormBuilder();\n  }\n\n  //formulario\n  setFormBuilder(): void {\n\n    this.form = this.formBuilder.group({\n      buscarPor: ['NM_MOTO'],\n      pesquisa: [null, Validators.required],\n      PAGI: 1,\n      TT_REGI_PAGI: 100\n    });\n  }\n\n  getMotoristas() {\n    \n    const buscarPor = this.form.get('buscarPor').value ?? '';\n    const pesquisa = this.form.get('pesquisa').value ?? '';\n\n    let params = {}\n\n    if(buscarPor){\n      params[buscarPor] = pesquisa;\n    }\n\n    params['PAGI'] = this.form.get('PAGI').value;\n    params['TT_REGI_PAGI'] = 100;\n\n    this.loading = true;\n\n    this.motoristasServices\n      .getMotoristas(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.motoristas = response.body['data'];\n            this.totalItems = response.body['total'];\n          } else {\n            this.motoristas = [];\n          }\n        },\n        (error) => {\n        }\n      );\n  }\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.getMotoristas();\n  }\n\n  onSelect(motorista){\n    this.select.emit(motorista);\n    this.onClose();\n  }\n\n  onClose(){\n    this.close.emit(true);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy92ZWljdWxvcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaTipoVeiculoService {\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient) { }\n\n  getTipoVeiculos(params?) {\n    return this.http.get(`${this.API}/logistica/tipo-veiculo`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  postTipoVeiculo(params) {\n    return this.http.post(`${this.API}/logistica/tipo-veiculo`, params, {\n      observe: 'response',\n    });\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Vehículos\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onReset()\\\">\\n    Limpiar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../cadastro']\\\">\\n    Añadir\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\">\\n              <label for=\\\"ID_LOGI_VEIC\\\">ID</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"ID_LOGI_VEIC\\\"\\n                placeholder=\\\"DIGITE...\\\"\\n                formControlName=\\\"ID_LOGI_VEIC\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col\\\">\\n              <label for=\\\"PLAC\\\">Matricula</label>\\n              <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"PLAC\\\"\\n              formControlName=\\\"PLAC\\\"\\n              placeholder=\\\"DIGITE...\\\"\\n              (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"DS_VEIC\\\">Descripción</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"DS_VEIC\\\"\\n                formControlName=\\\"DS_VEIC\\\"\\n                placeholder=\\\"DIGITE...\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col\\\">\\n              <label for=\\\"IN_STAT\\\">Status</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"tipos\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"tipo\\\"\\n                bindLabel=\\\"nome\\\"\\n                bindValue=\\\"cod\\\"\\n                id=\\\"tipo\\\"\\n                (change)=\\\"onFilter()\\\"\\n                formControlName=\\\"IN_STAT\\\"\\n                placeholder=\\\"Seleccione...\\\"\\n              >\\n                <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\n                </ng-template>\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div>\\n      <table  class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th>ID </th>\\n            <th>Matricula</th>\\n            <th>Conductor</th>\\n            <th>Transportadora</th>\\n            <th>Descripción</th>\\n            <th style=\\\"width:80px\\\" ></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let veiculo of veiculos; let i = index\\\">\\n            <td [ngClass]=\\\"veiculo.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n            {{veiculo.ID_LOGI_VEIC | number : '6.0-0'}}\\n            </td>\\n            <td>{{ veiculo.PLAC | uppercase }} </td>\\n            <td class=\\\"text-truncate\\\">{{ veiculo.NM_MOTO | uppercase | hifen }}</td>\\n            <td class=\\\"text-truncate\\\">{{ veiculo.NM_TRAN | uppercase | hifen }}</td>\\n            <td>{{ veiculo.DS_VEIC | uppercase | hifen}}</td>\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\n              <span class=\\\"mr-3\\\" [tooltip]=\\\"veiculo.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(veiculo)\\\">\\n                  <i [ngClass]=\\\"veiculo.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openRegister(veiculo)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div>\\n      Mostrando {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n      <pagination\\n        [maxSize]=\\\"10\\\"\\n        [totalItems]=\\\"totalItems\\\"\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        [(ngModel)]=\\\"currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\"\\n        nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Ningún informacion econtrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { finalize } from 'rxjs/operators';\nimport { LogisticaTransportadorasService } from '../../../transportadoras/services/transportadoras.service';\n\n@Component({\n  selector: 'logistica-veiculos-modais-transportadoras',\n  templateUrl: './transportadoras.component.html',\n  styleUrls: ['./transportadoras.component.scss']\n})\nexport class LogisticaVeiculosModaisTransportadorasComponent implements OnInit {\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() close: EventEmitter<any> = new EventEmitter();\n\n  loading = false;\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  transportadoras = [];\n\n  form: FormGroup;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private transportadorasSerivices: LogisticaTransportadorasService\n  ) { }\n\n  ngOnInit(): void {\n    this.setFormBuilder();\n  }\n\n  //formulario\n  setFormBuilder(): void {\n\n    this.form = this.formBuilder.group({\n      buscarPor: ['NM_FANT'],\n      pesquisa: [null, Validators.required],\n      ID_LOGI_TRAN:[null],\n      NM_FANT:[null],\n      NR_CNPJ:[null],\n      PAGI: 1,\n      TT_REGI_PAGI: 100\n    });\n  }\n\n  getTransportadoras() {\n    \n    const buscarPor = this.form.get('buscarPor').value ?? '';\n    const pesquisa = this.form.get('pesquisa').value ?? '';\n\n    let params = {}\n\n    if(buscarPor){\n      params[buscarPor] = pesquisa;\n    }\n\n    params['PAGI'] = this.form.get('PAGI').value;\n    params['TT_REGI_PAGI'] = 100;\n\n    this.loading = true;\n\n    this.transportadorasSerivices\n      .getTransportadoras(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.transportadoras = response.body['data'];\n            this.totalItems = response.body['total'];\n          } else {\n            this.transportadoras = [];\n          }\n        },\n        (error) => {\n        }\n      );\n  }\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.getTransportadoras();\n  }\n\n  onSelect(transportadora){\n    this.select.emit(transportadora);\n    this.onClose();\n  }\n\n  onClose(){\n    this.close.emit(true);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  PaginationModule,\n  TooltipModule,\n  TabsModule,\n  TimepickerModule,\n  BsDatepickerModule,\n  ModalModule,\n} from 'ngx-bootstrap';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\nimport { NgBrazil } from 'ng-brazil';\nimport { TextMaskModule } from 'angular2-text-mask';\n\nimport { LogisticaVeiculosListaComponent } from './lista/lista.component';\nimport { LogisticaVeiculosCadastroComponent } from './cadastro/cadastro.component';\nimport { LogisticaVeiculosModaisMotoristasComponent } from './modais/motoristas/motoristas.component';\nimport { LogisticaVeiculosModaisTransportadorasComponent } from './modais/transportadoras/transportadoras.component';\n\nimport { LogisticaVeiculosRoutingModule } from './veiculos-routing.module';\n\n@NgModule({\n  declarations: [\n    LogisticaVeiculosListaComponent,\n    LogisticaVeiculosCadastroComponent,\n    LogisticaVeiculosModaisMotoristasComponent,\n    LogisticaVeiculosModaisTransportadorasComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n    LogisticaVeiculosRoutingModule\n  ],\n  exports:[\n    LogisticaVeiculosModaisMotoristasComponent,\n    LogisticaVeiculosModaisTransportadorasComponent\n  ]\n})\nexport class LogisticaVeiculosModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaTransportadorasService {\n\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient) { }\n\n  getTransportadoras(params?) {\n    return this.http.get(`${this.API}/logistica/transportadoras`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  getTransportadora(id: number) {\n    return this.http.get(`${this.API}/logistica/transportadoras/${id}`, {\n      observe: 'response',\n    });\n  }\n\n  postTransportadora(params) {\n    return this.http.post(`${this.API}/logistica/transportadoras`, params, {\n      observe: 'response',\n    });\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Prontuário de Vehículos\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false\\\"\\n    (click)=\\\"postVeiculo()\\\"\\n  >\\n    Ahorrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"DS_VEIC\\\">Descripción</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"DS_VEIC\\\"\\n              formControlName=\\\"DS_VEIC\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('DS_VEIC') + ' ' + onFieldRequired('DS_VEIC')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('DS_VEIC')\\\" message=\\\"El vehículo es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"placa\\\">Matricula</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"placa\\\"\\n              formControlName=\\\"PLAC\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('PLAC') + ' ' + onFieldRequired('PLAC')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('PLAC')\\\" message=\\\"La matricula del vehículo es obligatoria.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"IN_STAT\\\">Status</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"IN_STAT\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              [ngClass]=\\\"onFieldRequired('IN_STAT')\\\">\\n              <option value=\\\"1\\\">Activo</option>\\n              <option value=\\\"0\\\">Inactivo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('IN_STAT')\\\" message=\\\"El status es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-12\\\">\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <label for=\\\"motorista\\\">Conductor</label>\\n              <label>\\n                <a\\n                  href=\\\"javascript:void(0)\\\"\\n                  (click)=\\\"openModal(modalMotoristas)\\\">\\n                  SELECCIONAR\\n                </a>\\n              </label>\\n            </div>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"motorista\\\"\\n              formControlName=\\\"NM_MOTO\\\"\\n              placeholder=\\\"Digite...\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-12\\\">\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <label for=\\\"nomeTransportadora\\\">Transportadora</label>\\n              <label>\\n                <a\\n                  href=\\\"javascript:void(0)\\\"\\n                  (click)=\\\"openModal(modalTransportadoras)\\\">\\n                  SELECCIONAR\\n                </a>\\n              </label>\\n            </div>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeTransportadora\\\"\\n              formControlName=\\\"NM_TRAN\\\"\\n              placeholder=\\\"Digite...\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"tipoVeiculo\\\">Tipo de Vehículo</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"tipoVeiculo\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Seleccione...\\\"\\n                [loading]=\\\"loadingTipoVeiculo\\\"\\n                labelForId=\\\"ID_LOGI_VEIC_TIPO\\\"\\n                bindLabel=\\\"NM_VEIC_TIPO\\\"\\n                bindValue=\\\"ID_LOGI_VEIC_TIPO\\\"\\n                id=\\\"ID_LOGI_VEIC_TIPO\\\"\\n                formControlName=\\\"ID_LOGI_VEIC_TIPO\\\"\\n                [ngClass]=\\\"onFieldRequired('ID_LOGI_VEIC_TIPO')\\\"\\n              >\\n              </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ID_LOGI_VEIC_TIPO')\\\" message=\\\"El Tipo de vehículo es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"DS_OBSE\\\" >Observacion:</label>\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\\n<ng-template #modalMotoristas>\\n  <logistica-veiculos-modais-motoristas\\n    (select)=\\\"onMotorista($event)\\\"\\n    (close)=\\\"modalRef.hide()\\\"\\n  >\\n  </logistica-veiculos-modais-motoristas>\\n</ng-template>\\n<ng-template #modalTransportadoras>\\n  <logistica-veiculos-modais-transportadoras\\n    (select)=\\\"onTransportadora($event)\\\"\\n    (close)=\\\"modalRef.hide()\\\"\\n  >\\n  </logistica-veiculos-modais-transportadoras>\\n</ng-template>\\n\\n\";","export default \"<div class=\\\"modal-header\\\">\\n  <h4>Búsqueda de conductor</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <advanced-filter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-4\\\">\\n          <label for=\\\"buscarPor\\\">Buscar Por</label>\\n          <select name=\\\"buscarPor\\\" id=\\\"buscarPor\\\" class=\\\"form-control\\\" formControlName=\\\"buscarPor\\\">\\n            <option value=\\\"ID_LOGI_MOTO\\\">Id</option>\\n            <option value=\\\"NM_MOTO\\\">Nombre</option>\\n            <option value=\\\"CPF\\\">Seguro social</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-8\\\">\\n          <label>TÉRMINO DE BÚSQUEDA</label>\\n          <div class=\\\"input-group\\\">\\n            <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"pesquisa\\\"\\n            >\\n            <div class=\\\"input-group-append\\\">\\n              <button\\n                tooltip=\\\"Haga clic para buscar\\\"\\n                container=\\\"body\\\"\\n                class=\\\"input-group-text hover\\\"\\n                (click)=\\\"getMotoristas()\\\"\\n                >\\n                <i class=\\\"fas fa-search\\\"></i>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"spinner-border\\\" role=\\\"status\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"sr-only\\\">Loading...</span>\\n  </div>\\n  <table *ngIf=\\\"motoristas?.length != 0 && !loading\\\"  class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n    <thead class=\\\"thead-light\\\">\\n      <tr>\\n        <th>ID </th>\\n        <th>Nombre</th>\\n        <th>Seguro social</th>\\n        <th style=\\\"width:80px\\\" ></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let motorista of motoristas; let i = index\\\">\\n        <td [ngClass]=\\\"motorista.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n        {{motorista.ID_LOGI_MOTO | number : '6.0-0'}}\\n        </td>\\n        <td class=\\\"text-truncate\\\">{{ motorista.NM_MOTO }} </td>\\n        <td>{{ motorista.CPF | cpf}}</td>\\n        <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\n          <span class=\\\"mr-3\\\" tooltip=\\\"Ahorrar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onSelect(motorista);\\\">\\n              <i class=\\\"far fa-save\\\"></i>\\n            </button>\\n          </span>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <div [hidden]=\\\"(motoristas?.length == 0) || (loading)\\\">\\n    Mostrando {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n    <pagination\\n      [maxSize]=\\\"10\\\"\\n      [totalItems]=\\\"totalItems\\\"\\n      (pageChanged)=\\\"onPageChanged($event)\\\"\\n      [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n      [boundaryLinks]=\\\"true\\\"\\n      [(ngModel)]=\\\"currentPage\\\"\\n      previousText=\\\"&lsaquo;\\\"\\n      nextText=\\\"&rsaquo;\\\"\\n      firstText=\\\"&laquo;\\\"\\n      lastText=\\\"&raquo;\\\">\\n    </pagination>\\n  </div>\\n</div>\";","import { RouterService } from 'src/app/shared/services/core/router.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { BsLocaleService, BsDatepickerConfig, BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { finalize } from 'rxjs/operators';\n\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  AbstractControl,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//interfaces\nimport { ILogisticaVeiculo } from './../models/veiculo';\nimport { ILogisticaTipoVeiculo } from './../../tipo-veiculo/models/tipo-veiculo';\n\n//rxjs\nimport { Subscription } from 'rxjs';\nimport { LogisticaTipoVeiculoService } from '../../tipo-veiculo/services/tipo-veiculo.service';\nimport { LogisticaVeiculoService } from '../services/veiculo.service';\nimport { LogisticaTransportadorasService } from '../../transportadoras/services/transportadoras.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\nimport { LogisticaVeiculosModaisMotoristasComponent } from './../modais/motoristas/motoristas.component';\n\n@Component({\n  selector: 'logistica-veiculos-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class LogisticaVeiculosCadastroComponent implements OnInit, OnDestroy {\n\n  noResult: boolean;\n  loading = false;\n  loadingNavBar = false;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  bsConfig: Partial<BsDatepickerConfig>;\n  modalRef: BsModalRef;\n  veiculos: Array<ILogisticaVeiculo>;\n  $activatedRouteSubscription: Subscription;\n\n  tipoVeiculo: ILogisticaTipoVeiculo[] = [];\n  loadingTipoVeiculo: boolean;\n\n  formTransportadora: FormGroup;\n  transportadoras = [];\n  loadingTransportadoras = false;\n\n  formMotoristas: FormGroup;\n  motoristas = [];\n  loadingMotoristas = false;\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private routerService: RouterService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n    private localeService: BsLocaleService,\n    private veiculoService: LogisticaVeiculoService,\n    private tipoVeiculoService: LogisticaTipoVeiculoService,\n    private modalService: BsModalService,\n    private dateService: DateService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n    this.getTipoVeiculo();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.appTitle = 'Prontuário';\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'Prontuários',\n        routerLink: `/logistica/cadastros/${id}`,\n      },\n      {\n        descricao: 'Vehículos',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //Consumir informações que estão na rota para editar\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n    if(this.modalRef){\n      this.modalRef.hide();\n    }\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n      }\n    );\n  }\n\n  //formulario\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      ID_LOGI_VEIC: [null],\n      DS_VEIC: [null],\n      PLAC: [null, [Validators.required]],\n      NM_TRAN: [{value:null, disabled: true}],\n      NM_MOTO: [{value:null, disabled: true}],\n      ID_LOGI_MOTO: [null],\n      ID_LOGI_TRAN: [null],\n      IN_STAT: ['1'],\n      DS_OBSE: [null],\n      ID_LOGI_VEIC_TIPO: [null, [Validators.required]],\n    });\n\n  }\n\n  getTipoVeiculo() {\n    this.loadingTipoVeiculo = true;\n    this.tipoVeiculoService\n      .getTipoVeiculos({ IN_STAT: '1' })\n      .pipe(\n        finalize(() => {\n          this.loadingTipoVeiculo = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tipoVeiculo = response.body['data'];\n        }\n      });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  postVeiculo() {\n    this.loadingNavBar = true;\n    this.veiculoService\n      .postVeiculo(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            this.form.reset();\n            this.pnotify.success();\n            this.router.navigate(['./../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          this.pnotify.error();\n        }\n      );\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, {\n      animated: false,\n      ignoreBackdropClick: false,\n      class: 'modal-xl'\n    });\n  }\n\n  getParams(form) {\n    let _params = {};\n    let _obj = form;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  onMotorista(motorista){\n    this.form.patchValue(motorista);\n  }\n\n  onTransportadora(transportadora){\n    this.form.patchValue(transportadora);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy92ZWljdWxvcy9tb2RhaXMvdHJhbnNwb3J0YWRvcmFzL3RyYW5zcG9ydGFkb3Jhcy5jb21wb25lbnQuc2NzcyJ9 */\";","//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\n\n// rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\nimport { take, switchMap } from 'rxjs/operators';\n\n//modelos\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { ILogisticaVeiculo } from './../models/veiculo';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { LogisticaVeiculoService } from '../services/veiculo.service';\n\n@Component({\n  selector: 'logistica-veiculos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class LogisticaVeiculosListaComponent implements OnInit, OnDestroy {\n  breadCrumbTree: Array<Breadcrumb>;\n\n  idSubModulo: number;\n  veiculos: Array<ILogisticaVeiculo>;\n  noResult: boolean;\n  loading = true; //Loading FullPage\n  loadingNavBar = false; //Loading do NAVBAR\n\n  $activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n\n  // Tipos de Situação dos Veiculos (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Activos',\n    },\n    {\n      cod: '0',\n      nome: 'Inactivos',\n    },\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Activo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inactivo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 0;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private veiculoService: LogisticaVeiculoService,\n    private formBuilder: FormBuilder,\n    private confirmModalService: ConfirmModalService,\n    private routerService: RouterService,\n    private dateService: DateService\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        this.getVeiculos(this.getParams());\n      }\n    );\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID_LOGI_VEIC: [null],\n      PLAC: [null],\n      DS_VEIC: [null],\n      IN_STAT: [null],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/logistica/home`,\n      },\n      {\n        descricao: 'Prontuários',\n        routerLink: `/logistica/cadastros/${id}`,\n      },\n      {\n        descricao: 'Vehículos',\n      },\n    ];\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  onFilter() {\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.patchValue({\n      PAGI: 1,\n      TT_REGI_PAGI: 100,\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  getVeiculos(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n\n    this.veiculoService\n      .getVeiculos(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.veiculos = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.veiculos = [];\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  changeType(veiculo: ILogisticaVeiculo) {\n    const stat = veiculo.IN_STAT == '1' ? '0' : '1';\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loadingNavBar = true;\n          veiculo.IN_STAT = stat;\n          return this.veiculoService.postVeiculo(veiculo);\n        }),\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotify.success();\n          //tipoContrato.IN_STAT = stat;\n        },\n        (error: any) => {\n          veiculo.IN_STAT = veiculo.IN_STAT == '1' ? '0' : '1';\n          this.pnotify.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == '1')\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Desea continuar?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar in inactivación',\n      'Desea continuar?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  openRegister(veiculo: ILogisticaVeiculo) {\n    this.route.navigate(['../cadastro'], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(veiculo),\n    });\n  }\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.onFilter();\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy92ZWljdWxvcy9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaMotoristaService {\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient) { }\n\n  getMotoristas(params?) {\n    return this.http.get(`${this.API}/logistica/motoristas`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  postMotorista(params) {\n    return this.http.post(`${this.API}/logistica/motorista`, params, {\n      observe: 'response',\n    });\n  }\n}\n"]}