{"version":3,"sources":["webpack:///src/app/modules/comercial/estoque/estoque-routing.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/estoque.component.ts","webpack:///src/app/modules/comercial/estoque/lista/lista.component.ts","webpack:///src/app/modules/comercial/estoque/lista/lista.component.scss","webpack:///src/app/modules/comercial/estoque/lista/lista.component.html","webpack:///src/app/modules/comercial/estoque/estoque.module.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/estoque.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/estoque-routing.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/estoque.component.scss","webpack:///src/app/modules/comercial/estoque/estoque.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/estoque.component.html","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["routes","path","component","ComercialEstoqueRoutingModule","imports","forChild","exports","TecnologiaInformacaoEstoqueComponent","activatedRoute","router","atividadesService","pnotifyService","titleService","loaderFullScreen","breadCrumbTree","descricao","routerLink","atividades","getPNotify","setTitle","params","subscribe","registrarAcesso","getAtividadesInternas","idSubModulo","response","handleAtividadesInternasError","error","navigate","selector","template","ComercialEstoqueListaComponent","modalService","location","formBuilder","estoqueService","comercialService","loaderNavbar","subtitles","text","color","tableConfig","subtitleBorder","itemsPerPage","currentPage","maxSize","clientesPagination","detalhes","idMaterial","totalItems","showAdvancedFilter","almacenes","depositos","filteredDepositos","grupos","linhas","classes","filteredClasses","dados","dadosReturned","dadosLoaded","dadosEmpty","datos","estoqueUnidades","pedidosCompra","pedidos","totaisPedCompra","estoqueComprometido","totaisComprometido","detalhesLote","totaisLote","detalhesSuspenso","orderBy","orderType","totalSuspenso","getFiltros","setFormFilter","pipe","next","responseCode","result","unshift","ID","ALMACEN","i","length","id","push","idClasse","idLinha","nomeClasse","handleSearchError","formValue","id_almacen","id_familia","id_grupo","id_linea","codigo_material","nombre_material","registros","activatedRouteSubscription","queryParams","Object","keys","atob","JSON","parse","forEach","formKey","paramKey","isNaN","Number","unsubscribe","checkRouterParams","form","group","grupo","empresa","deposito","linha","classeMaterial","codMaterial","descMaterial","estoqueDisponivel","value","getMateriales","slice","sincronizarMateriales","reset","controls","setValue","console","log","relativeTo","q","btoa","stringify","event","page","getPaginateData","startIndex","endIndex","idEmpresa","filter","clase","getLinhasId","idClase","id_linha","getSublineasId","modalRef","titulo","codigoMaterial","estoqueSuspenso","possuiLote","nomeMaterial","onSelectComprometidos","setTimeout","show","hide","onGetPedidosCompra","onGetEstoqueComprometido","onGetLote","onGetEstoqueSuspenso","pedidosCompraLoaded","pedidosCompraEmpty","getPedidosCompra","analitico","total","notice","comprometidoLoaded","comprometidoEmpty","getStockComprometido","loteLoaded","loteEmpty","getLote","column","sort","a","b","valueA","valueB","suspensoLoaded","suspensoEmpty","getStockSuspeso","field","onFieldInvalid","get","status","touched","required","formControl","validator","validationResult","textClass","suspenso","borderClass","msg","back","ComercialEstoqueModule","declarations","forRoot","providers","ComercialService","http","API","httpParams","param","append","codCliente","providedIn","TecnologiaInformacaoEstoqueModule","children","loadChildren","then","m","TecnologiaInformacaoNivelEstoqueModule","TecnologiaInformacaoMovimentacoesModule","TecnologiaInformacaoTipoMovimentacoesModule","TecnologiaInformacaoEstoqueProdutosModule","TecnologiaInformacaoEstoqueTipoProdutosModule","TecnologiaInformacaoEstoqueModeloModule","TecnologiaInformacaoEstoqueMarcasModule","TecnologiaInformacaoEstoquePainelAprovacaoModule","TecnologiaInformacaoEstoqueRoutingModule","ComercialEstoqueService","tidSoftwareService","getAlmacen","getClasses","getDepositos","grupoManetoni","sucursales","getEscritorios","empresas","getEmpresas","getLinhas","ComercialTidSoftwareService","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao","data","post"],"mappings":"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","file":"estoque-estoque-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Components\r\nimport { ComercialEstoqueListaComponent } from './lista/lista.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ComercialEstoqueListaComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialEstoqueRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'tecnologia-informacao-estoque',\r\n  templateUrl: './estoque.component.html',\r\n  styleUrls: ['./estoque.component.scss'],\r\n})\r\nexport class TecnologiaInformacaoEstoqueComponent implements OnInit {\r\n  loaderFullScreen: boolean = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/tecnologia-informacao/home',\r\n    },\r\n    {\r\n      descricao: 'Estoque',\r\n    },\r\n  ];\r\n\r\n  atividades: any = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private atividadesService: AtividadesService,\r\n    private pnotifyService: PNotifyService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.titleService.setTitle('estoque');\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.registrarAcesso();\r\n      this.getAtividadesInternas(params['idSubModulo']);\r\n    });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getAtividadesInternas(idSubModulo: number) {\r\n    this.atividadesService.getAtividadesInternas(idSubModulo).subscribe(\r\n      (response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.atividades = response['result'];\r\n          this.loaderFullScreen = false;\r\n        } else {\r\n          this.handleAtividadesInternasError();\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.handleAtividadesInternasError();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleAtividadesInternasError() {\r\n    this.pnotifyService.error();\r\n    this.router.navigate(['/tecnologia-informacao/home']);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ElementRef,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialEstoqueService } from './../estoque.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { Estoque } from '../models/estoque';\r\nimport { ComercialService } from '../../comercial.service';\r\n\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { Console } from 'console';\r\n\r\nimport * as ExcelJS from 'exceljs/dist/exceljs.min.js';\r\n\r\n@Component({\r\n  selector: 'comercial-estoque-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialEstoqueListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home',\r\n    },\r\n    {\r\n      descricao: 'Estoque',\r\n    },\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      text: 'Estoque suspenso',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n  idEmpresa: number;\r\n  codMaterial: number;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  itemsPerPage = 10;\r\n  currentPage = 1;\r\n  maxSize = 10;\r\n\r\n  clientesPagination: Array<any> = [];\r\n\r\n  detalhes = false;\r\n\r\n  nomeMaterial: string;\r\n  idMaterial = 0;\r\n  totalItems = 10;\r\n  showAdvancedFilter = true;\r\n\r\n  materialSelected: string;\r\n  linhaSelected: string;\r\n  classeSelected: string;\r\n  empresaSelected: string;\r\n\r\n  almacenes: Array<any> = [];\r\n  depositos: Array<any> = [];\r\n  filteredDepositos: Array<any> = [];\r\n  grupos: Array<any> = [];\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n  filteredClasses: Array<any> = [];\r\n\r\n  dados: Array<Estoque> = [];\r\n  dadosReturned: Array<Estoque> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  datos: Array<any> = [];\r\n\r\n  estoqueUnidades: Array<any> = [];\r\n  pedidosCompra: Array<any> = [];\r\n\r\n  pedidos: Array<any> = [];\r\n  totaisPedCompra: Array<any> = [];\r\n  estoqueComprometido: Array<any> = [];\r\n  totaisComprometido: Array<any> = [];\r\n  detalhesLote: Array<any> = [];\r\n  totaisLote: Array<any> = [];\r\n  detalhesSuspenso: Array<any> = [];\r\n\r\n  unidadesLoaded: boolean;\r\n  pedidosCompraLoaded: boolean;\r\n  pedidosCompraEmpty: boolean;\r\n  comprometidoLoaded: boolean;\r\n  comprometidoEmpty: boolean;\r\n  loteLoaded: boolean;\r\n  loteEmpty: boolean;\r\n  suspensoLoaded: boolean;\r\n  suspensoEmpty: boolean;\r\n  possuiLote: boolean;\r\n  orderBy: string = ''; // Variable para almacenar el nombre de la columna seleccionada para ordenar\r\n  orderType: 'asc' | 'desc' = 'asc'; // Variable para almacenar el tipo de orden (ascendente o descendente)  \r\n  totalSuspenso: Array<any> = [];\r\n\r\n  modalDetalhes: TemplateRef<any>;\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private atividadesService: AtividadesService,\r\n    private estoqueService: ComercialEstoqueService,\r\n    private titleService: TitleService,\r\n    private comercialService: ComercialService,\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registrarAcesso();\r\n    this.getFiltros();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Estoque');\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getFiltros() {\r\n    this.estoqueService\r\n      .getFiltros()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response[0].responseCode == 200) {\r\n            this.almacenes = response[0].result;\r\n          }\r\n          this.almacenes.unshift({\r\n            ID: 0,\r\n            ALMACEN: 'TODOS',\r\n          });\r\n\r\n\r\n          if (response[1].responseCode == 200) {\r\n            this.depositos = response[1].result;\r\n            this.filteredDepositos = this.depositos;\r\n          }\r\n\r\n          if (response[2].responseCode == 200) {\r\n            for (let i = 0; i < response[2].result.length; i++) {\r\n              if (response[2].result[i].id != 2) {\r\n                this.linhas.push(response[2].result[i]);\r\n              }\r\n            }\r\n            this.linhas.unshift({\r\n              id: 0,\r\n              descricao: 'EXIBIR TODOS',\r\n            });\r\n          }\r\n\r\n          if (response[1].responseCode == 200) {\r\n            this.classes = response[1].result;\r\n            this.filteredClasses = this.classes;\r\n            this.filteredClasses.unshift({\r\n              idClasse: 0,\r\n              idLinha: 0,\r\n              nomeClasse: 'TODOS',\r\n            });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.handleSearchError('Ocorreu um erro ao carregar filtros.');\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n\r\n      id_almacen: 0,\r\n      id_familia: 0,\r\n      id_grupo: 0,\r\n      id_linea: 0,\r\n      codigo_material: null,\r\n      nombre_material: null,\r\n      registros: 300,\r\n\r\n      /*  empresa: null,\r\n       deposito: null,\r\n       linha: 0,\r\n       classeMaterial: 0,\r\n       estoqueDisponivel: 0,\r\n       codMaterial: null,\r\n       descMaterial: null,\r\n       registros: 300, */\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          /* this.search(params); */\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  setFormFilter() {\r\n    const formValue: any = this.checkRouterParams();\r\n    this.form = this.formBuilder.group({\r\n      grupo: [formValue.grupo],\r\n      empresa: [formValue.empresa],\r\n      deposito: [formValue.deposito],\r\n      linha: [formValue.linha],\r\n      classeMaterial: [formValue.classeMaterial],\r\n      registros: [formValue.registros],\r\n      codMaterial: [formValue.codMaterial],\r\n      descMaterial: [formValue.descMaterial],\r\n      estoqueDisponivel: [formValue.estoqueDisponivel]\r\n\r\n    });\r\n  }\r\n  onFilter() {\r\n    /*  this.setRouterParams(this.verificaParams());\r\n     this.currentPage = 1;\r\n     this.itemsPerPage = this.form.value.registros;\r\n \r\n     this.scrollToFilter.nativeElement.scrollIntoView({\r\n       behavior: 'instant',\r\n     }); */\r\n    this.totalItems = 0;\r\n    this.dados = [];\r\n    this.dadosReturned = [];\r\n    const formValue = this.form.value;\r\n    this.loaderNavbar = true;\r\n\r\n\r\n\r\n    let params: any = {\r\n      id_almacen: formValue.empresa,\r\n      id_familia: formValue.classeMaterial,\r\n      id_grupo: formValue.grupo,\r\n      id_linea: formValue.linha,\r\n      codigo_material: formValue.codMaterial,\r\n      nombre_material: formValue.descMaterial,\r\n      registros: formValue.registros,\r\n    };\r\n\r\n    this.comercialService.getMateriales(params).subscribe({\r\n      next: (response: any) => {\r\n        if (response.responseCode === 200) {\r\n          this.loaderNavbar = false;\r\n\r\n          this.dados = [];\r\n          this.datos = response.result;\r\n          this.dadosReturned = this.datos.slice(0, this.itemsPerPage);\r\n\r\n          this.totalItems = this.datos.length;\r\n          /* console.log(this.datos); */\r\n          this.dadosEmpty = false;\r\n        } else {\r\n          this.loaderNavbar = false;\r\n          this.dadosEmpty = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  sincronizar() {\r\n    this.comercialService.sincronizarMateriales().subscribe({\r\n      next: (response: any) => {\r\n        if (response.responseCode === 200) {\r\n          \r\n        } else {\r\n          \r\n        }\r\n      },error: (error: any) => {\r\n        this.handleSearchError('Ocorreu um erro ao carregar filtros.');\r\n      }\r\n    });\r\n  }\r\n  onResetForm() {\r\n    this.form.reset();\r\n    this.form.controls.registros.setValue(300);\r\n    this.filteredDepositos = this.depositos;\r\n    this.showAdvancedFilter = true;\r\n  }\r\n\r\n  setRouterParams(params: any) {\r\n    console.log(params);\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    /* this.search(params); */\r\n  }\r\n\r\n  onAdvancedFilter() {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  /* search(params: any) {\r\n    this.loaderNavbar = true;\r\n    this.idEmpresa = params.deposito;\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.dados = [];\r\n    this.dadosReturned = [];\r\n    this.totalItems = 0;\r\n\r\n    this.estoqueService\r\n      .getEstoqueAtual(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosReturned = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else {\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.handleSearchError('Erro ao carregar lista de materiais.');\r\n        }\r\n      });\r\n  } */\r\n\r\n  /* verificaParams() {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.empresa) {\r\n      params.empresa = parseInt(this.form.value.empresa);\r\n    }\r\n\r\n    if (this.form.value.deposito) {\r\n      params.deposito = parseInt(this.form.value.deposito);\r\n    }\r\n\r\n    if (this.form.value.linha) {\r\n      params.linha = parseInt(this.form.value.linha);\r\n    }\r\n\r\n    if (this.form.value.classeMaterial) {\r\n      params['classe'] = parseInt(this.form.value.classeMaterial);\r\n    }\r\n\r\n    if (this.form.value.estoqueDisponivel) {\r\n      params.estoqueDisponivel = this.form.value.estoqueDisponivel;\r\n    }\r\n\r\n    if (this.form.value.codMaterial) {\r\n      params.codMaterial = parseInt(this.form.value.codMaterial);\r\n    }\r\n\r\n    if (this.form.value.descMaterial) {\r\n      params.descMaterial = btoa(this.form.value.descMaterial);\r\n    }\r\n\r\n    if (this.form.value.registros) {\r\n      params.registros = this.form.value.registros;\r\n    }\r\n\r\n    return params;\r\n  } */\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.currentPage = event.page;\r\n    this.getPaginateData();\r\n  }\r\n\r\n  getPaginateData(): any[] {\r\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n    const endIndex = startIndex + this.itemsPerPage;\r\n    return this.datos.slice(startIndex, endIndex);\r\n  }\r\n  onChangeAlmacen(id: number) {\r\n    /* this.form.controls.deposito.reset(); */\r\n    /*  console.log(this.filteredDepositos);\r\n     this.filteredDepositos = this.depositos.filter(\r\n       (value: any) => value.idEmpresa == id\r\n     );\r\n     if(this.filteredDepositos.length == 1){\r\n       this.form.controls.deposito.setValue(this.filteredDepositos[0].idEmpresa);\r\n     } */\r\n  }\r\n\r\n  onChangeDeposito(deposito: any) {\r\n    this.form.controls.empresa.setValue(deposito.idEmpresa);\r\n  }\r\n\r\n  onChangeLinha(idLinha: number) {\r\n    this.form.controls.classeMaterial.setValue(0);\r\n\r\n    if (idLinha != 0) {\r\n      this.filteredClasses = this.classes.filter(\r\n        (value: any) => value.idLinha == idLinha\r\n      );\r\n\r\n      this.filteredClasses.unshift({\r\n        idClasse: 0,\r\n        idLinha: 0,\r\n        nomeClasse: 'TODOS',\r\n      });\r\n    } else {\r\n      this.filteredClasses = this.classes;\r\n    }\r\n  }\r\n\r\n  onChangeClasse(clase: any) {\r\n    this.form.controls.grupo.reset();\r\n    var idClasse = clase.idClasse;\r\n    this.comercialService.getLinhasId(idClasse).subscribe({\r\n      next: (response: any) => {\r\n        if (response.responseCode == 200) {\r\n          this.grupos = response.result;\r\n        }\r\n        this.grupos.unshift({\r\n          id: 0,\r\n          descricao: 'TODOS',\r\n        });\r\n      },\r\n      error: (error: any) => {\r\n        this.handleSearchError('Ocurrió un error al cargar los datos.');\r\n      }\r\n    });\r\n  }\r\n  onChangegrupo(clase: any) {\r\n    /*      console.log(clase); \r\n     */\r\n    this.form.controls.linha.reset();\r\n    var idClase = clase.id_linha;\r\n    this.comercialService.getSublineasId(idClase).subscribe({\r\n      next: (response: any) => {\r\n        if (response.responseCode == 200) {\r\n          this.linhas = response.result;\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.handleSearchError('Ocurrió un error al cargar los datos.');\r\n      }\r\n    });\r\n  }\r\n  openModal(\r\n    modalRef: TemplateRef<any>,\r\n    titulo: string,\r\n    idMaterial: number,\r\n    codigoMaterial: number,\r\n    estoqueSuspenso: any\r\n  ) {\r\n    this.loaderNavbar = true;\r\n    this.possuiLote = false;\r\n    this.nomeMaterial = `(${codigoMaterial}) ${titulo}`;\r\n    this.codMaterial = idMaterial;\r\n\r\n    if (estoqueSuspenso > 0) {\r\n      this.possuiLote = true;\r\n    }\r\n    this.onSelectComprometidos();\r\n\r\n    /*     this.onGetOutrasUnidades(idMaterial); */\r\n\r\n\r\n    setTimeout(() => {\r\n      this.loaderNavbar = false;\r\n      this.modalRef = this.modalService.show(modalRef, {\r\n        class: 'modal-xl',\r\n      });\r\n    }, 600);\r\n  }\r\n\r\n  closeModal(modalRef: TemplateRef<any>) {\r\n    this.modalRef.hide();\r\n    this.codMaterial = null;\r\n  }\r\n\r\n  onSelectPedidos() {\r\n    this.onGetPedidosCompra(this.idEmpresa, this.codMaterial);\r\n  }\r\n\r\n  onSelectComprometidos() {\r\n    this.onGetEstoqueComprometido(this.codMaterial);\r\n  }\r\n\r\n  onSelectLote() {\r\n    this.onGetLote(this.idEmpresa, this.codMaterial);\r\n  }\r\n\r\n  onSelectEstoqueSuspenso() {\r\n    this.onGetEstoqueSuspenso(this.codMaterial);\r\n  }\r\n\r\n  /* onGetOutrasUnidades(idMaterial: number) {\r\n    this.unidadesLoaded = false;\r\n\r\n    this.estoqueService.getOutrasUnidades(idMaterial).subscribe({\r\n      next: (response: any) => {\r\n        if (response.responseCode === 200) {\r\n          this.estoqueUnidades = response.result;\r\n          this.unidadesLoaded = true;\r\n        } else {\r\n          this.pnotifyService.notice('Datos no encontrados.');\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.handleSearchError('Erro ao carregar estoque de outras unidades.');\r\n      }\r\n    });\r\n  } */\r\n\r\n  onGetPedidosCompra(idEmpresa: number, idMaterial: number) {\r\n    this.pedidosCompraLoaded = false;\r\n    this.pedidosCompraEmpty = false;\r\n\r\n    let params: any = {\r\n      idEmpresa: idEmpresa,\r\n      idMaterial: idMaterial,\r\n    };\r\n\r\n    this.estoqueService.getPedidosCompra(params).subscribe({\r\n      next: (response: any) => {\r\n        if (response.responseCode === 200) {\r\n          this.pedidosCompra = response.result.analitico;\r\n          this.totaisPedCompra = response.result.total;\r\n          this.pedidosCompraLoaded = true;\r\n        } else {\r\n          this.pnotifyService.notice('Datos no encontrados.');\r\n          this.pedidosCompraEmpty = true;\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.handleSearchError('Erro ao carregar pedidos de compra.');\r\n      }\r\n    });\r\n  }\r\n\r\n  onGetEstoqueComprometido(idMaterial: number) {\r\n    this.comprometidoLoaded = false;\r\n    this.comprometidoEmpty = false;\r\n\r\n    let params: any = {\r\n      idMaterial: idMaterial,\r\n    };\r\n\r\n    this.estoqueService.getStockComprometido(params).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 200) {\r\n          this.estoqueComprometido = response.result.analitico;\r\n          this.totaisComprometido = response.result.total;\r\n          this.comprometidoLoaded = true;\r\n        } else {\r\n          this.pnotifyService.notice('Datos no encontrados.');\r\n          this.comprometidoEmpty = true;\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.handleSearchError('Erro ao carregar estoque comprometido.');\r\n      }\r\n    );\r\n  }\r\n\r\n  onGetLote(idEmpresa: number, idMaterial: number) {\r\n    this.loteLoaded = false;\r\n    this.loteEmpty = false;\r\n    let params: any = {\r\n      idEmpresa: idEmpresa,\r\n      idMaterial: idMaterial,\r\n    };\r\n\r\n    this.estoqueService.getLote(params).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 200) {\r\n          this.detalhesLote = response.result.analitico;\r\n          this.totaisLote = response.result.total;\r\n          this.loteLoaded = true;\r\n        } else {\r\n          this.pnotifyService.notice('Datos no encontrados.');\r\n          this.loteEmpty = true;\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.handleSearchError('Erro ao carregar dados de lote.');\r\n      }\r\n    );\r\n  }\r\n  setOrderBy(column: string) {\r\n    if (this.orderBy === column) {\r\n      this.orderType = this.orderType === 'asc' ? 'desc' : 'asc'; // Cambiar el tipo de orden si se hace clic nuevamente en la misma columna\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'asc'; // Establecer el orden ascendente por defecto al hacer clic en una nueva columna\r\n    }\r\n\r\n    // Ordenar la matriz resultcliente en función del orden seleccionado\r\n    this.datos.sort((a, b) => {\r\n\r\n      const valueA = a[column]/* .toUpperCase(); */;\r\n      const valueB = b[column]/* .toUpperCase() */;\r\n      /*       console.log(this.datos);\r\n            console.log(column); */\r\n      if (valueA < valueB) {\r\n        return this.orderType === 'asc' ? -1 : 1;\r\n      }\r\n      if (valueA > valueB) {\r\n        return this.orderType === 'asc' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  onGetEstoqueSuspenso(idMaterial: number) {\r\n    this.suspensoLoaded = false;\r\n    this.suspensoEmpty = false;\r\n\r\n    let params: any = {\r\n      idMaterial: idMaterial,\r\n    };\r\n\r\n    this.estoqueService.getStockSuspeso(params).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 200) {\r\n          this.detalhesSuspenso = response.result.analitico;\r\n          this.totalSuspenso = response.result.total;\r\n\r\n          this.suspensoLoaded = true;\r\n        } else {\r\n          this.pnotifyService.notice('Datos no encontrados.');\r\n          this.suspensoEmpty = true;\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.handleSearchError('Erro ao carregar dados de estoque suspenso.');\r\n      }\r\n    );\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  classComparativo(value: number) {\r\n    let textClass = '';\r\n\r\n    if (value > 0) {\r\n      textClass = 'text-success';\r\n    } else if (value < 0) {\r\n      textClass = 'text-danger';\r\n    }\r\n\r\n    return textClass;\r\n  }\r\n\r\n  estoqueSuspensoClassStatusBorder(suspenso: number) {\r\n    let borderClass = '';\r\n    if (suspenso > 0) {\r\n      borderClass = 'border-danger';\r\n    } else {\r\n      borderClass = 'border-light';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  estoqueComprometidoClassStatusBorder(suspenso: number) {\r\n    let borderClass = '';\r\n\r\n    if (suspenso > 0) {\r\n      borderClass = 'border-primary';\r\n    } else {\r\n      borderClass = 'border-light';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  handleSearchError(msg: string = null) {\r\n    this.pnotifyService.error(msg);\r\n    this.location.back();\r\n  }\r\n}\r\n","export default \"::ng-deep .dropdown-item:hover {\\n  cursor: pointer;\\n}\\n::ng-deep .card-title {\\n  font-size: 1.05rem;\\n}\\n::ng-deep .card:hover {\\n  background-color: #f0f0f0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvZXN0b3F1ZS9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLGVBQUE7QUFBSjtBQUVFO0VBQ0Usa0JBQUE7QUFBSjtBQUVFO0VBQ0UseUJBQUE7QUFBSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2VzdG9xdWUvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAge1xyXG4gIC5kcm9wZG93bi1pdGVtOmhvdmVyIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgLmNhcmQtdGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxLjA1cmVtO1xyXG4gIH1cclxuICAuY2FyZDpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4gIH1cclxufVxyXG4iXX0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Estoque\\\">\\r\\n  <button type=\\\"button\\\" (click)=\\\"onResetForm()\\\">\\r\\n    Limpiar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\" [disabled]=\\\"!form.valid\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"sincronizar()\\\" [disabled]=\\\"!form.valid\\\">\\r\\n    <i class=\\\"fas fa-sync\\\"></i> Sincronizar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div #scrollToFilter>\\r\\n    <advanced-filter>\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <!-- <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"empresa\\\">Empresa</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"empresas\\\"\\r\\n              formControlName=\\\"empresa\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"empresa\\\"\\r\\n              bindLabel=\\\"nomeEmpresa\\\"\\r\\n              bindValue=\\\"idEmpresa\\\"\\r\\n              (change)=\\\"onChangeEmpresa($event.idEmpresa)\\\"\\r\\n              [ngClass]=\\\"onFieldError('empresa') + ' ' + onFieldRequired('empresa')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('empresa')\\\" message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\r\\n          </div> -->\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"empresa\\\"> Almacén </label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"almacenes\\\" formControlName=\\\"empresa\\\"\\r\\n              [virtualScroll]=\\\"true\\\" labelForId=\\\"empresa\\\" bindLabel=\\\"ALMACEN\\\" bindValue=\\\"ID\\\"\\r\\n              (change)=\\\"onChangeAlmacen($event.id)\\\"\\r\\n              [ngClass]=\\\"onFieldError('empresa') + ' ' + onFieldRequired('empresa')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('empresa')\\\"\\r\\n              message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"deposito\\\">Depósito</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"filteredDepositos\\\"\\r\\n              formControlName=\\\"deposito\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"deposito\\\"\\r\\n              bindLabel=\\\"nomeDeposito\\\"\\r\\n              bindValue=\\\"idDeposito\\\"\\r\\n              (change)=\\\"onChangeDeposito($event)\\\"\\r\\n              [ngClass]=\\\"onFieldError('deposito') + ' ' + onFieldRequired('deposito')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('deposito')\\\" message=\\\"Depósito é obrigatório.\\\"></invalid-form-control>\\r\\n          </div> -->\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"linha\\\">Familia</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"classes\\\" formControlName=\\\"classeMaterial\\\"\\r\\n              [virtualScroll]=\\\"true\\\" labelForId=\\\"classeMaterial\\\" bindLabel=\\\"nomeClasse\\\" bindValue=\\\"idClasse\\\"\\r\\n              (change)=\\\"onChangeClasse($event)\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"linha\\\">Grupo</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"grupos\\\" formControlName=\\\"grupo\\\"\\r\\n              [virtualScroll]=\\\"true\\\" labelForId=\\\"classeMaterial\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id_linha\\\"\\r\\n              (change)=\\\"onChangegrupo($event)\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"classeMaterial\\\">Linea</label>\\r\\n            <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"linhas\\\" formControlName=\\\"linha\\\"\\r\\n              [virtualScroll]=\\\"true\\\" labelForId=\\\"classeMaterial\\\" bindLabel=\\\"NM_SUB_LINH\\\" bindValue=\\\"ID\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n\\r\\n          <div class=\\\"form-group col-lg-3 mb-0\\\">\\r\\n            <label for=\\\"codMaterial\\\">Código material</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"codMaterial\\\" (keydown.enter)=\\\"onFilter()\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-4 mb-0\\\">\\r\\n            <label for=\\\"descMaterial\\\">Nombre material</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"descMaterial\\\" (keydown.enter)=\\\"onFilter()\\\">\\r\\n          </div>\\r\\n          <!-- <div class=\\\"form-group col-lg-3 mb-0\\\">\\r\\n            <label for=\\\"estoqueDisponivel\\\">Solo stock disponible</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"estoqueDisponivel\\\" formControlName=\\\"estoqueDisponivel\\\">\\r\\n              <option value=\\\"0\\\">Mostrar todo\\r\\n              </option>\\r\\n              <option value=\\\"1\\\">Disponible</option>\\r\\n              <option value=\\\"2\\\">No disponible</option>\\r\\n            </select>\\r\\n          </div> -->\\r\\n          <div class=\\\"form-group col-lg-2 mb-0\\\">\\r\\n            <label for=\\\"registros\\\">Registros</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"registros\\\" formControlName=\\\"registros\\\">\\r\\n              <option>25</option>\\r\\n              <option>50</option>\\r\\n              <option>100</option>\\r\\n              <option>200</option>\\r\\n              <option>300</option>\\r\\n            </select>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </form>\\r\\n    </advanced-filter>\\r\\n  </div>\\r\\n  <subtitles [data]=\\\"subtitles\\\" [show]=\\\"dados.length > 0 && !dadosEmpty\\\">\\r\\n  </subtitles>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"datos.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-truncate text-center\\\"\\r\\n            (click)=\\\"setOrderBy('codigo_material')\\\">              \\r\\n              <thead-sorter value=\\\"codigo\\\" [active]=\\\"orderBy == 'codigo'\\\" [sort]=\\\"orderType\\\"> Código </thead-sorter>\\r\\n            </th>\\r\\n            <th class=\\\"text-truncate text-left\\\"\\r\\n            (click)=\\\"setOrderBy('nombre')\\\">\\r\\n              <thead-sorter value=\\\"Nombre Material\\\"  [active]=\\\"orderBy == 'Nombre Material'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th class=\\\"text-truncate text-center\\\"\\r\\n            (click)=\\\"setOrderBy('cantidad')\\\">\\r\\n              <thead-sorter value=\\\"Cantidad Disp.\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th class=\\\"text-truncate text-center\\\"\\r\\n            (click)=\\\"setOrderBy('sigla')\\\">\\r\\n              <thead-sorter value=\\\"Un.\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th class=\\\"text-truncate text-center\\\"\\r\\n            (click)=\\\"setOrderBy('codigo_almacen')\\\">\\r\\n              <thead-sorter value=\\\"Almacén\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th class=\\\"text-truncate text-center\\\"\\r\\n            (click)=\\\"setOrderBy('nombre_almacen')\\\">\\r\\n              <thead-sorter value=\\\"Nombre almacén\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <ng-container>\\r\\n            <tr *ngFor=\\\"let dato of getPaginateData()\\\">\\r\\n              <td class=\\\"font-weight-bold hover text-center\\\"\\r\\n                (click)=\\\"openModal(modalDetalhes, dado.nombre, dato.id_material, dato.codigo_material, dato.cantidad)\\\">\\r\\n                {{dato.codigo_material}}</td>\\r\\n              <td class=\\\"font-weight-bold hover text-left\\\"\\r\\n                (click)=\\\"openModal(modalDetalhes, dato.nombre, dato.id_material, dato.codigo_material, dato.cantidad)\\\">\\r\\n                {{dato.nombre}}</td>\\r\\n              <td class=\\\"font-weight-bold hover text-center\\\"\\r\\n                (click)=\\\"openModal(modalDetalhes, dato.nombre, dato.id_material, dato.codigo_material, dato.cantidad)\\\">\\r\\n                {{dato.cantidad}}</td>\\r\\n              <td class=\\\"font-weight-bold hover text-center\\\"\\r\\n                (click)=\\\"openModal(modalDetalhes, dato.nombre, dato.id_material, dato.codigo_material, dato.cantidad)\\\">\\r\\n                {{dato.sigla}}</td>\\r\\n              <td class=\\\"font-weight-bold hover text-center\\\"\\r\\n                (click)=\\\"openModal(modalDetalhes, dato.nombre, dato.id_material, dato.codigo_material, dato.cantidad)\\\">\\r\\n                {{dato.codigo_almacen}}</td>\\r\\n              <td class=\\\"font-weight-bold hover text-center\\\"\\r\\n                (click)=\\\"openModal(modalDetalhes, dado.nombre, dato.codigo_material, dato.cantidad)\\\">\\r\\n                {{dato.nombre_almacen}}</td>\\r\\n            </tr>\\r\\n          </ng-container>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n\\r\\n      <empty-result message=\\\"Ningún registro encontrado.\\\" *ngIf=\\\"dadosEmpty\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n            [maxSize]=\\\"maxSize\\\"\\r\\n            [(totalItems)]=\\\"totalItems\\\"\\r\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n            [boundaryLinks]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"currentPage\\\"\\r\\n            previousText=\\\"&lsaquo;\\\"\\r\\n            nextText=\\\"&rsaquo;\\\"\\r\\n            firstText=\\\"&laquo;\\\"\\r\\n            lastText=\\\"&raquo;\\\">\\r\\n          </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</app-body>\\r\\n<ng-template #modalDetalhes>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\r\\n      {{ nomeMaterial }}\\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModal(modalDetalhes)\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <tabset>\\r\\n      <!-- <tab heading=\\\"Estoque outras unidades\\\" class=\\\"border-right border-left border-bottom\\\">\\r\\n        <div class=\\\"px-3 pt-3\\\">\\r\\n          <div class=\\\"form-row\\\" *ngIf=\\\"unidadesLoaded\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\" *ngFor=\\\"let estoque of estoqueUnidades\\\">\\r\\n              <label>{{ estoque.descEmpresa }}</label>\\r\\n              <div>{{ estoque.estoque | number:'1.3-3' }} {{ estoque.unidade }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!unidadesLoaded\\\">\\r\\n            <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab> -->\\r\\n\\r\\n      <tab heading=\\\"Stock comprometido\\\" class=\\\"border-right border-left border-bottom\\\"\\r\\n        (selectTab)=\\\"onSelectComprometidos()\\\">\\r\\n        <div class=\\\"p-3\\\">\\r\\n          <div *ngIf=\\\"comprometidoLoaded\\\">\\r\\n            <div class=\\\"d-flex\\\">\\r\\n              <div class=\\\"legend blue\\\">\\r\\n                <div class=\\\"square\\\"></div>\\r\\n                <div class=\\\"text\\\">STOCK COMPROMETIDO</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"estoqueComprometido.length > 0 && !comprometidoEmpty\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th class=\\\"text-center\\\">Código</th>\\r\\n                  <th class=\\\"text-center\\\">Oferta</th>\\r\\n                  <th class=\\\"text-center\\\">Fecha</th>\\r\\n                  <th class=\\\"text-center\\\">Cliente</th>\\r\\n                  <th class=\\\"text-center\\\">Vendedor</th>\\r\\n                  <th class=\\\"text-center\\\">Cantidad</th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let item of estoqueComprometido\\\">\\r\\n                  <td [ngClass]=\\\"estoqueComprometidoClassStatusBorder(item.id_oferta)\\\" class=\\\"text-center\\\">{{\\r\\n                    item.codigo_oferta }}</td>\\r\\n                  <td class=\\\"text-center\\\">{{ item.nombre_oferta }}</td>\\r\\n                  <td class=\\\"text-center\\\">{{ item.fecha_oferta }}</td>\\r\\n                  <td class=\\\"text-center\\\">{{ item.cliente }}</td>\\r\\n                  <td class=\\\"text-center\\\">{{ item.vendedor }}</td>\\r\\n                  <td class=\\\"text-center\\\">{{ item.cantidad | number:'1.4-4' }} {{ item.unidad }}</td>\\r\\n                </tr>\\r\\n                <tr class=\\\"bg-dark text-center text-dark\\\">\\r\\n                  <td colspan=\\\"4\\\" class=\\\"border-dark\\\"></td>\\r\\n                  <td><strong>Total</strong></td>\\r\\n                  <td class=\\\"text-center\\\"><strong>{{ totaisComprometido.cantidad | number:'1.4-4' }}</strong></td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n          <empty-result message=\\\"Ninguna información encontrada\\\" class=\\\"my-4\\\"\\r\\n            *ngIf=\\\"comprometidoEmpty && !comprometidoLoaded\\\"></empty-result>\\r\\n          <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!comprometidoLoaded && !comprometidoEmpty\\\">\\r\\n            <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Stock en suspenso\\\" class=\\\"border-right border-left border-bottom\\\"\\r\\n        (selectTab)=\\\"onSelectEstoqueSuspenso()\\\" *ngIf=\\\"possuiLote\\\">\\r\\n        <div class=\\\"p-3\\\" >\\r\\n          <div class=\\\"d-flex\\\" *ngIf=\\\"suspensoLoaded\\\">\\r\\n            <div class=\\\"legend red\\\">\\r\\n              <div class=\\\"square\\\"></div>\\r\\n              <div class=\\\"text\\\">STOCK EN SUSPENSO</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"detalhesSuspenso.length > 0 && suspensoLoaded\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Fecha</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Descripción</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Cantidad</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let item of detalhesSuspenso\\\">\\r\\n                <td [ngClass]=\\\"estoqueSuspensoClassStatusBorder(item.id)\\\" class=\\\"text-center\\\">{{ item.fecha }}</td>\\r\\n                <td class=\\\"text-center\\\" [ngClass]=\\\"border-danger\\\" class=\\\"text-center\\\">{{ item.descripcion }}</td>\\r\\n                <td class=\\\"text-center\\\" [ngClass]=\\\"border-danger\\\">{{ item.cantidad | number:'1.3-3' }} {{ item.unidad }}\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr class=\\\"bg-dark text-center text-dark\\\">\\r\\n                <td class=\\\"border-dark\\\"></td> \\r\\n                <td><strong>Total</strong></td>\\r\\n                <td class=\\\"text-center\\\"><strong>{{ totalSuspenso.cantidad | number:'1.4-4' }}</strong></td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n          <empty-result message=\\\"Ninguna información encontrada\\\" class=\\\"my-4\\\"\\r\\n            *ngIf=\\\"suspensoEmpty && !suspensoLoaded\\\"></empty-result>\\r\\n          <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!suspensoLoaded && !suspensoEmpty\\\">\\r\\n            <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</ng-template>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialEstoqueRoutingModule } from './estoque-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialEstoqueListaComponent } from './lista/lista.component';\r\n\r\n@NgModule({\r\n  declarations: [ComercialEstoqueListaComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ModalModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    ComercialEstoqueRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class ComercialEstoqueModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  \r\n  \r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos(){\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","import { NumberIntPipe } from './pipes/number-int.pipe';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// Modules\r\nimport { TecnologiaInformacaoEstoqueRoutingModule } from './estoque-routing.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { TecnologiaInformacaoEstoqueComponent } from './estoque.component';\r\n// Components\r\n\r\n@NgModule({\r\n  declarations: [TecnologiaInformacaoEstoqueComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    TecnologiaInformacaoEstoqueRoutingModule,\r\n    NotFoundModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    CurrencyMaskModule,\r\n    SharedModule,\r\n    PipesModule,\r\n    TemplatesModule,\r\n  ],\r\n})\r\nexport class TecnologiaInformacaoEstoqueModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Components\r\nimport { TecnologiaInformacaoEstoqueComponent } from './estoque.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: TecnologiaInformacaoEstoqueComponent,\r\n      },\r\n      {\r\n        path: 'nivel-estoque',\r\n        loadChildren: () =>\r\n          import('./nivel-estoque/nivel-estoque.module').then(\r\n            (m) => m.TecnologiaInformacaoNivelEstoqueModule\r\n          ),\r\n      },\r\n      {\r\n        path: 'movimentacoes',\r\n        loadChildren: () =>\r\n          import('./movimentacoes/movimentacoes.module').then(\r\n            (m) => m.TecnologiaInformacaoMovimentacoesModule\r\n          ),\r\n      },\r\n      {\r\n        path: 'tipo-movimentacoes',\r\n        loadChildren: () =>\r\n          import('./tipo-movimentacoes/tipo-movimentacoes.module').then(\r\n            (m) => m.TecnologiaInformacaoTipoMovimentacoesModule\r\n          ),\r\n      },\r\n      {\r\n        path: 'produtos',\r\n        loadChildren: () =>\r\n          import('./produtos/produtos.module').then(\r\n            (m) => m.TecnologiaInformacaoEstoqueProdutosModule\r\n          ),\r\n      },\r\n      {\r\n        path: 'tipo-produtos',\r\n        loadChildren: () =>\r\n          import('./tipo-produto/tipo-produto.module').then(\r\n            (m) => m.TecnologiaInformacaoEstoqueTipoProdutosModule\r\n          ),\r\n      },\r\n      {\r\n        path: 'modelo',\r\n        loadChildren: () =>\r\n          import('./modelo/modelo.module').then(\r\n            (m) => m.TecnologiaInformacaoEstoqueModeloModule\r\n          ),\r\n      },\r\n      {\r\n        path: 'marcas',\r\n        loadChildren: () =>\r\n          import('./marcas/marcas.module').then(\r\n            (m) => m.TecnologiaInformacaoEstoqueMarcasModule\r\n          ),\r\n      },\r\n      {\r\n        path: 'painel-aprovacao',\r\n        loadChildren: () =>\r\n          import('./painel-aprovacao/painel-aprovacao.module').then(\r\n            (m) => m.TecnologiaInformacaoEstoquePainelAprovacaoModule\r\n          ),\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TecnologiaInformacaoEstoqueRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvZXN0b3F1ZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialEstoqueService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/estoque`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) { }\r\n\r\n  getFiltros(): Observable<Object | JsonResponse> {\r\n    /* Almacen */\r\n    let almacenes = this.comercialService.getAlmacen();\r\n    /* Familia */\r\n    let classes = this.comercialService.getClasses(null);\r\n    let depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\r\n\r\n    let sucursales = this.comercialService.getEscritorios();\r\n    let empresas = this.tidSoftwareService.getEmpresas('estoques');\r\n    let linhas = this.tidSoftwareService.getLinhas();\r\n\r\n\r\n    return forkJoin([almacenes, classes, depositos, sucursales, empresas, linhas]).pipe(\r\n      take(1),\r\n      retry(2)\r\n    );\r\n  }\r\n\r\n  getEstoqueAtual(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/estoque-atual`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getOutrasUnidades(id: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/outras-unidades/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getPedidosCompra(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/pedidos-compra/${params.idMaterial}/${params.idEmpresa}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getComprometido(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoque-comprometido/${params.idMaterial}/${params.idEmpresa}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLote(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/lote/${params.idMaterial}/${params.idEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getEstoqueSuspenso(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoque-suspenso/${params.idMaterial}/${params.idEmpresa}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getStockComprometido(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoquecomprometido/${params.idMaterial}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getStockSuspeso(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoquesuspenso/${params.idMaterial}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"ESTOQUE\\\"></app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <card-group text=\\\"Selecione uma atividade\\\" [list]=\\\"atividades\\\"></card-group>\\r\\n</app-body>\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}