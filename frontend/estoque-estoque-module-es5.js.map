{"version":3,"sources":["webpack:///src/app/modules/comercial/estoque/estoque-routing.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/estoque.component.ts","webpack:///src/app/modules/comercial/estoque/lista/lista.component.ts","webpack:///src/app/modules/comercial/estoque/lista/lista.component.scss","webpack:///src/app/modules/comercial/estoque/lista/lista.component.html","webpack:///src/app/modules/comercial/estoque/estoque.module.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/estoque.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/estoque-routing.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/estoque.component.scss","webpack:///src/app/modules/comercial/estoque/estoque.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/estoque.component.html","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["routes","path","component","ComercialEstoqueRoutingModule","imports","forChild","exports","TecnologiaInformacaoEstoqueComponent","activatedRoute","router","atividadesService","pnotifyService","titleService","loaderFullScreen","breadCrumbTree","descricao","routerLink","atividades","getPNotify","setTitle","params","subscribe","registrarAcesso","getAtividadesInternas","idSubModulo","response","handleAtividadesInternasError","error","navigate","selector","template","ComercialEstoqueListaComponent","modalService","location","formBuilder","estoqueService","loaderNavbar","subtitles","text","color","tableConfig","subtitleBorder","itemsPerPage","currentPage","maxSize","clientesPagination","detalhes","idMaterial","totalItems","showAdvancedFilter","empresas","depositos","filteredDepositos","linhas","classes","filteredClasses","dados","dadosReturned","dadosLoaded","dadosEmpty","estoqueUnidades","pedidosCompra","pedidos","totaisPedCompra","estoqueComprometido","totaisComprometido","detalhesLote","totaisLote","detalhesSuspenso","getFiltros","setFormFilter","pipe","next","responseCode","result","i","length","id","push","unshift","idClasse","idLinha","nomeClasse","handleSearchError","formValue","checkRouterParams","form","group","empresa","required","deposito","linha","classeMaterial","estoqueDisponivel","codMaterial","descMaterial","registros","activatedRouteSubscription","queryParams","Object","keys","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","setRouterParams","verificaParams","value","scrollToFilter","nativeElement","scrollIntoView","behavior","reset","controls","setValue","relativeTo","q","btoa","stringify","idEmpresa","getEstoqueAtual","success","data","slice","parseInt","event","startItem","page","endItem","filter","classe","modalRef","titulo","estoqueSuspenso","possuiLote","nomeMaterial","onGetOutrasUnidades","setTimeout","show","hide","onGetPedidosCompra","onGetEstoqueComprometido","onGetLote","onGetEstoqueSuspenso","unidadesLoaded","getOutrasUnidades","notice","pedidosCompraLoaded","pedidosCompraEmpty","getPedidosCompra","analitico","total","comprometidoLoaded","comprometidoEmpty","getComprometido","loteLoaded","loteEmpty","getLote","suspensoLoaded","suspensoEmpty","getEstoqueSuspenso","field","onFieldInvalid","get","status","touched","formControl","validator","validationResult","textClass","suspenso","borderClass","msg","back","ComercialEstoqueModule","declarations","forRoot","providers","ComercialService","http","API","httpParams","param","append","providedIn","TecnologiaInformacaoEstoqueModule","children","loadChildren","then","m","TecnologiaInformacaoNivelEstoqueModule","TecnologiaInformacaoMovimentacoesModule","TecnologiaInformacaoTipoMovimentacoesModule","TecnologiaInformacaoEstoqueProdutosModule","TecnologiaInformacaoEstoqueTipoProdutosModule","TecnologiaInformacaoEstoqueModeloModule","TecnologiaInformacaoEstoqueMarcasModule","TecnologiaInformacaoEstoquePainelAprovacaoModule","TecnologiaInformacaoEstoqueRoutingModule","ComercialEstoqueService","comercialService","tidSoftwareService","getEmpresas","getDepositos","grupoManetoni","getLinhas","getClasses","ComercialTidSoftwareService","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao","post"],"mappings":"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","file":"estoque-estoque-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { ComercialEstoqueListaComponent } from './lista/lista.component';\n\nconst routes: Routes = [\n  { path: '', component: ComercialEstoqueListaComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialEstoqueRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'tecnologia-informacao-estoque',\n  templateUrl: './estoque.component.html',\n  styleUrls: ['./estoque.component.scss'],\n})\nexport class TecnologiaInformacaoEstoqueComponent implements OnInit {\n  loaderFullScreen: boolean = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/tecnologia-informacao/home',\n    },\n    {\n      descricao: 'Estoque',\n    },\n  ];\n\n  atividades: any = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private atividadesService: AtividadesService,\n    private pnotifyService: PNotifyService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle('estoque');\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.registrarAcesso();\n      this.getAtividadesInternas(params['idSubModulo']);\n    });\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getAtividadesInternas(idSubModulo: number) {\n    this.atividadesService.getAtividadesInternas(idSubModulo).subscribe(\n      (response: any) => {\n        if (response['responseCode'] === 200) {\n          this.atividades = response['result'];\n          this.loaderFullScreen = false;\n        } else {\n          this.handleAtividadesInternasError();\n        }\n      },\n      (error: any) => {\n        this.handleAtividadesInternasError();\n      }\n    );\n  }\n\n  handleAtividadesInternasError() {\n    this.pnotifyService.error();\n    this.router.navigate(['/tecnologia-informacao/home']);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialEstoqueService } from './../estoque.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { Estoque } from '../models/estoque';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-estoque-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialEstoqueListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home',\n    },\n    {\n      descricao: 'Estoque',\n    },\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      text: 'Estoque suspenso',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n  idEmpresa: number;\n  codMaterial: number;\n\n  modalRef: BsModalRef;\n\n  itemsPerPage = 50;\n  currentPage = 1;\n  maxSize = 10;\n\n  clientesPagination: Array<any> = [];\n\n  detalhes = false;\n\n  nomeMaterial: string;\n  idMaterial = 0;\n  totalItems = 10;\n  showAdvancedFilter = true;\n\n  materialSelected: string;\n  linhaSelected: string;\n  classeSelected: string;\n  empresaSelected: string;\n\n  empresas: Array<any> = [];\n  depositos: Array<any> = [];\n  filteredDepositos: Array<any> = [];\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n  filteredClasses: Array<any> = [];\n\n  dados: Array<Estoque> = [];\n  dadosReturned: Array<Estoque> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  estoqueUnidades: Array<any> = [];\n  pedidosCompra: Array<any> = [];\n\n  pedidos: Array<any> = [];\n  totaisPedCompra: Array<any> = [];\n  estoqueComprometido: Array<any> = [];\n  totaisComprometido: Array<any> = [];\n  detalhesLote: Array<any> = [];\n  totaisLote: Array<any> = [];\n  detalhesSuspenso: Array<any> = [];\n\n  unidadesLoaded: boolean;\n  pedidosCompraLoaded: boolean;\n  pedidosCompraEmpty: boolean;\n  comprometidoLoaded: boolean;\n  comprometidoEmpty: boolean;\n  loteLoaded: boolean;\n  loteEmpty: boolean;\n  suspensoLoaded: boolean;\n  suspensoEmpty: boolean;\n  possuiLote: boolean;\n\n  modalDetalhes: TemplateRef<any>;\n\n  constructor(\n    private modalService: BsModalService,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private estoqueService: ComercialEstoqueService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.registrarAcesso();\n    this.getFiltros();\n    this.setFormFilter();\n    this.titleService.setTitle('Estoque');\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getFiltros() {\n    this.estoqueService\n      .getFiltros()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response[0].responseCode == 200) {\n            this.empresas = response[0].result;\n          }\n\n          if (response[1].responseCode == 200) {\n            this.depositos = response[1].result;\n            this.filteredDepositos = this.depositos;\n          }\n\n          if (response[2].responseCode == 200) {\n            for (let i = 0; i < response[2].result.length; i++) {\n              if (response[2].result[i].id != 2) {\n                this.linhas.push(response[2].result[i]);\n              }\n            }\n\n            this.linhas.unshift({\n              id: 0,\n              descricao: 'EXIBIR TODOS',\n            });\n          }\n\n          if (response[3].responseCode == 200) {\n            this.classes = response[3].result;\n            this.filteredClasses = this.classes;\n\n            this.filteredClasses.unshift({\n              idClasse: 0,\n              idLinha: 0,\n              nomeClasse: 'EXIBIR TODOS',\n            });\n          }\n        },\n        error: (error: any) => {\n          this.handleSearchError('Ocorreu um erro ao carregar filtros.');\n        }\n      });\n  }\n\n  setFormFilter() {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      empresa: [formValue.empresa, Validators.required],\n      deposito: [formValue.deposito, Validators.required],\n      linha: [formValue.linha],\n      classeMaterial: [formValue.classeMaterial],\n      estoqueDisponivel: [formValue.estoqueDisponivel],\n      codMaterial: [formValue.codMaterial],\n      descMaterial: [formValue.descMaterial],\n      registros: [formValue.registros],\n    });\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      empresa: null,\n      deposito: null,\n      linha: 0,\n      classeMaterial: 0,\n      estoqueDisponivel: 0,\n      codMaterial: null,\n      descMaterial: null,\n      registros: 300,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  onFilter() {\n    this.setRouterParams(this.verificaParams());\n    this.currentPage = 1;\n    this.itemsPerPage = this.form.value.registros;\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  onResetForm() {\n    this.form.reset();\n    this.form.controls.registros.setValue(300);\n    this.filteredDepositos = this.depositos;\n    this.showAdvancedFilter = true;\n  }\n\n  setRouterParams(params: any) {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  onAdvancedFilter() {\n    this.showAdvancedFilter = !this.showAdvancedFilter;\n  }\n\n  search(params: any) {\n    this.loaderNavbar = true;\n    this.idEmpresa = params.deposito;\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.dados = [];\n    this.dadosReturned = [];\n    this.totalItems = 0;\n\n    this.estoqueService\n      .getEstoqueAtual(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.success === true) {\n            this.dados = response.data;\n            this.dadosReturned = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else {\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.handleSearchError('Erro ao carregar lista de materiais.');\n        }\n      });\n  }\n\n  verificaParams() {\n    let params: any = {};\n\n    if (this.form.value.empresa) {\n      params.empresa = parseInt(this.form.value.empresa);\n    }\n\n    if (this.form.value.deposito) {\n      params.deposito = parseInt(this.form.value.deposito);\n    }\n\n    if (this.form.value.linha) {\n      params.linha = parseInt(this.form.value.linha);\n    }\n\n    if (this.form.value.classeMaterial) {\n      params['classe'] = parseInt(this.form.value.classeMaterial);\n    }\n\n    if (this.form.value.estoqueDisponivel) {\n      params.estoqueDisponivel = this.form.value.estoqueDisponivel;\n    }\n\n    if (this.form.value.codMaterial) {\n      params.codMaterial = parseInt(this.form.value.codMaterial);\n    }\n\n    if (this.form.value.descMaterial) {\n      params.descMaterial = btoa(this.form.value.descMaterial);\n    }\n\n    if (this.form.value.registros) {\n      params.registros = this.form.value.registros;\n    }\n\n    return params;\n  }\n\n  onPageChanged(event: PageChangedEvent) {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosReturned = this.dados.slice(startItem, endItem);\n  }\n\n  onChangeEmpresa(idEmpresa: number) {\n    this.form.controls.deposito.reset();\n\n    this.filteredDepositos = this.depositos.filter(\n      (value: any) => value.idEmpresa == idEmpresa\n    );\n    if(this.filteredDepositos.length == 1){\n      this.form.controls.deposito.setValue(this.filteredDepositos[0].idEmpresa);\n    }\n  }\n\n  onChangeDeposito(deposito: any) {\n    this.form.controls.empresa.setValue(deposito.idEmpresa);\n  }\n\n  onChangeLinha(idLinha: number) {\n    this.form.controls.classeMaterial.setValue(0);\n\n    if (idLinha != 0) {\n      this.filteredClasses = this.classes.filter(\n        (value: any) => value.idLinha == idLinha\n      );\n\n      this.filteredClasses.unshift({\n        idClasse: 0,\n        idLinha: 0,\n        nomeClasse: 'EXIBIR TODOS',\n      });\n    } else {\n      this.filteredClasses = this.classes;\n    }\n  }\n\n  onChangeClasse(classe: any) {\n    this.form.controls.linha.setValue(classe.idLinha);\n  }\n\n  openModal(\n    modalRef: TemplateRef<any>,\n    titulo: string,\n    idMaterial: number,\n    estoqueSuspenso: any\n  ) {\n    this.loaderNavbar = true;\n    this.possuiLote = false;\n    this.nomeMaterial = `(${idMaterial}) ${titulo}`;\n    this.codMaterial = idMaterial;\n\n    if (estoqueSuspenso > 0) {\n      this.possuiLote = true;\n    }\n\n    this.onGetOutrasUnidades(idMaterial);\n\n    setTimeout(() => {\n      this.loaderNavbar = false;\n      this.modalRef = this.modalService.show(modalRef, {\n        class: 'modal-xl',\n      });\n    }, 600);\n  }\n\n  closeModal(modalRef: TemplateRef<any>) {\n    this.modalRef.hide();\n    this.codMaterial = null;\n  }\n\n  onSelectPedidos() {\n    this.onGetPedidosCompra(this.idEmpresa, this.codMaterial);\n  }\n\n  onSelectComprometidos() {\n    this.onGetEstoqueComprometido(this.idEmpresa, this.codMaterial);\n  }\n\n  onSelectLote() {\n    this.onGetLote(this.idEmpresa, this.codMaterial);\n  }\n\n  onSelectEstoqueSuspenso() {\n    this.onGetEstoqueSuspenso(this.idEmpresa, this.codMaterial);\n  }\n\n  onGetOutrasUnidades(idMaterial: number) {\n    this.unidadesLoaded = false;\n\n    this.estoqueService.getOutrasUnidades(idMaterial).subscribe({\n      next: (response: any) => {\n        if (response.responseCode === 200) {\n          this.estoqueUnidades = response.result;\n          this.unidadesLoaded = true;\n        } else {\n          this.pnotifyService.notice('Dados não encontrados.');\n        }\n      },\n      error: (error: any) => {\n        this.handleSearchError('Erro ao carregar estoque de outras unidades.');\n      }\n    });\n  }\n\n  onGetPedidosCompra(idEmpresa: number, idMaterial: number) {\n    this.pedidosCompraLoaded = false;\n    this.pedidosCompraEmpty = false;\n\n    let params: any = {\n      idEmpresa: idEmpresa,\n      idMaterial: idMaterial,\n    };\n\n    this.estoqueService.getPedidosCompra(params).subscribe({\n      next: (response: any) => {\n        if (response.responseCode === 200) {\n          this.pedidosCompra = response.result.analitico;\n          this.totaisPedCompra = response.result.total;\n          this.pedidosCompraLoaded = true;\n        } else {\n          this.pnotifyService.notice('Dados não encontrados.');\n          this.pedidosCompraEmpty = true;\n        }\n      },\n      error: (error: any) => {\n        this.handleSearchError('Erro ao carregar pedidos de compra.');\n      }\n    });\n  }\n\n  onGetEstoqueComprometido(idEmpresa: number, idMaterial: number) {\n    this.comprometidoLoaded = false;\n    this.comprometidoEmpty = false;\n\n    let params: any = {\n      idEmpresa: idEmpresa,\n      idMaterial: idMaterial,\n    };\n\n    this.estoqueService.getComprometido(params).subscribe(\n      (response: any) => {\n        if (response.responseCode === 200) {\n          this.estoqueComprometido = response.result.analitico;\n          this.totaisComprometido = response.result.total;\n          this.comprometidoLoaded = true;\n        } else {\n          this.pnotifyService.notice('Dados não encontrados.');\n          this.comprometidoEmpty = true;\n        }\n      },\n      (error: any) => {\n        this.handleSearchError('Erro ao carregar estoque comprometido.');\n      }\n    );\n  }\n\n  onGetLote(idEmpresa: number, idMaterial: number) {\n    this.loteLoaded = false;\n    this.loteEmpty = false;\n    let params: any = {\n      idEmpresa: idEmpresa,\n      idMaterial: idMaterial,\n    };\n\n    this.estoqueService.getLote(params).subscribe(\n      (response: any) => {\n        if (response.responseCode === 200) {\n          this.detalhesLote = response.result.analitico;\n          this.totaisLote = response.result.total;\n          this.loteLoaded = true;\n        } else {\n          this.pnotifyService.notice('Dados não encontrados.');\n          this.loteEmpty = true;\n        }\n      },\n      (error: any) => {\n        this.handleSearchError('Erro ao carregar dados de lote.');\n      }\n    );\n  }\n\n  onGetEstoqueSuspenso(idEmpresa: number, idMaterial: number) {\n    this.suspensoLoaded = false;\n    this.suspensoEmpty = false;\n\n    let params: any = {\n      idEmpresa: idEmpresa,\n      idMaterial: idMaterial,\n    };\n\n    this.estoqueService.getEstoqueSuspenso(params).subscribe(\n      (response: any) => {\n        if (response.responseCode === 200) {\n          this.detalhesSuspenso = response.result;\n          this.suspensoLoaded = true;\n        } else {\n          this.pnotifyService.notice('Dados não encontrados.');\n          this.suspensoEmpty = true;\n        }\n      },\n      (error: any) => {\n        this.handleSearchError('Erro ao carregar dados de estoque suspenso.');\n      }\n    );\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  classComparativo(value: number) {\n    let textClass = '';\n\n    if (value > 0) {\n      textClass = 'text-success';\n    } else if (value < 0) {\n      textClass = 'text-danger';\n    }\n\n    return textClass;\n  }\n\n  estoqueSuspensoClassStatusBorder(suspenso: number) {\n    let borderClass = '';\n\n    if (suspenso > 0) {\n      borderClass = 'border-danger';\n    } else {\n      borderClass = 'border-light';\n    }\n\n    return borderClass;\n  }\n\n  estoqueComprometidoClassStatusBorder(suspenso: number) {\n    let borderClass = '';\n\n    if (suspenso > 0) {\n      borderClass = 'border-primary';\n    } else {\n      borderClass = 'border-light';\n    }\n\n    return borderClass;\n  }\n\n  handleSearchError(msg: string = null) {\n    this.pnotifyService.error(msg);\n    this.location.back();\n  }\n}\n","export default \"::ng-deep .dropdown-item:hover {\\n  cursor: pointer;\\n}\\n::ng-deep .card-title {\\n  font-size: 1.05rem;\\n}\\n::ng-deep .card:hover {\\n  background-color: #f0f0f0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvZXN0b3F1ZS9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLGVBQUE7QUFBSjtBQUVFO0VBQ0Usa0JBQUE7QUFBSjtBQUVFO0VBQ0UseUJBQUE7QUFBSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2VzdG9xdWUvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAge1xuICAuZHJvcGRvd24taXRlbTpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIC5jYXJkLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDEuMDVyZW07XG4gIH1cbiAgLmNhcmQ6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XG4gIH1cbn1cbiJdfQ== */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Estoque\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onResetForm()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\"\\n    [disabled]=\\\"!form.valid\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div #scrollToFilter>\\n    <advanced-filter>\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"empresa\\\">Empresa</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"empresas\\\"\\n              formControlName=\\\"empresa\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"empresa\\\"\\n              bindLabel=\\\"nomeEmpresa\\\"\\n              bindValue=\\\"idEmpresa\\\"\\n              (change)=\\\"onChangeEmpresa($event.idEmpresa)\\\"\\n              [ngClass]=\\\"onFieldError('empresa') + ' ' + onFieldRequired('empresa')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('empresa')\\\" message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"deposito\\\">Depósito</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"filteredDepositos\\\"\\n              formControlName=\\\"deposito\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"deposito\\\"\\n              bindLabel=\\\"nomeDeposito\\\"\\n              bindValue=\\\"idDeposito\\\"\\n              (change)=\\\"onChangeDeposito($event)\\\"\\n              [ngClass]=\\\"onFieldError('deposito') + ' ' + onFieldRequired('deposito')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('deposito')\\\" message=\\\"Depósito é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"linha\\\">Linha</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"linha\\\"\\n              formControlName=\\\"linha\\\"\\n              (change)=\\\"onChangeLinha(form.value['linha'])\\\">\\n              <option *ngFor=\\\"let item of linhas\\\" [value]=\\\"item.id\\\">{{ item.descricao }}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"classeMaterial\\\">Classe</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"filteredClasses\\\"\\n              formControlName=\\\"classeMaterial\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"classeMaterial\\\"\\n              bindLabel=\\\"nomeClasse\\\"\\n              bindValue=\\\"idClasse\\\"\\n              (change)=\\\"onChangeClasse($event)\\\">\\n            </ng-select>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-3 mb-0\\\">\\n            <label for=\\\"estoqueDisponivel\\\">Somente estoque disponível</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"estoqueDisponivel\\\"\\n              formControlName=\\\"estoqueDisponivel\\\">\\n              <option value=\\\"0\\\">Exibir todos</option>\\n              <option value=\\\"1\\\">Sim</option>\\n              <option value=\\\"2\\\">Não</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group col-lg-3 mb-0\\\">\\n            <label for=\\\"codMaterial\\\">Código material</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"codMaterial\\\"\\n              (keydown.enter)=\\\"onFilter()\\\">\\n          </div>\\n          <div class=\\\"form-group col-lg-4 mb-0\\\">\\n            <label for=\\\"descMaterial\\\">Descrição material</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"descMaterial\\\"\\n              (keydown.enter)=\\\"onFilter()\\\">\\n          </div>\\n          <div class=\\\"form-group col-lg-2 mb-0\\\">\\n            <label for=\\\"registros\\\">Registros</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"registros\\\"\\n              formControlName=\\\"registros\\\">\\n              <option>25</option>\\n              <option>50</option>\\n              <option>100</option>\\n              <option>200</option>\\n              <option>300</option>\\n            </select>\\n          </div>\\n        </div>\\n      </form>\\n    </advanced-filter>\\n  </div>\\n  <subtitles\\n    [data]=\\\"subtitles\\\"\\n    [show]=\\\"dados.length > 0 && !dadosEmpty\\\">\\n  </subtitles>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosReturned.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th class=\\\"text-truncate\\\" width=\\\"9%\\\">Código</th>\\n            <th class=\\\"text-truncate text-left\\\" width=\\\"35%\\\">Descrição</th>\\n            <th class=\\\"text-truncate\\\" width=\\\"4%\\\">Un</th>\\n            <th class=\\\"text-truncate\\\" width=\\\"10%\\\">Compra</th>\\n            <th class=\\\"text-truncate\\\" width=\\\"10%\\\">Atual</th>\\n            <th class=\\\"text-truncate\\\" width=\\\"10%\\\">Comprometido</th>\\n            <th class=\\\"text-truncate\\\" width=\\\"10%\\\">Pedido</th>\\n            <th class=\\\"text-truncate\\\" width=\\\"10%\\\">Disponível</th>\\n            <th></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let dado of dadosReturned\\\" [class.table-active]=\\\"dado.id == codMaterial\\\">\\n            <td\\n              class=\\\"font-weight-bold hover\\\"\\n              [ngClass]=\\\"estoqueSuspensoClassStatusBorder(dado.estoqueSuspenso)\\\"\\n              (click)=\\\"openModal(modalDetalhes, dado.descricao, dado.id, dado.estoqueSuspenso)\\\">\\n              {{ dado.id }}\\n            </td>\\n            <td\\n              class=\\\"text-left text-truncate hover\\\"\\n              (click)=\\\"openModal(modalDetalhes, dado.descricao, dado.id, dado.estoqueSuspenso)\\\">\\n              {{ dado.descricao }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"openModal(modalDetalhes, dado.descricao, dado.id, dado.estoqueSuspenso)\\\">\\n              {{ dado.medida }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"openModal(modalDetalhes, dado.descricao, dado.id, dado.estoqueSuspenso)\\\">\\n              {{ dado.pedCompra | number:'1.3-3' }}\\n            </td>\\n            <td\\n              class=\\\"font-weight-bold hover\\\"\\n              (click)=\\\"openModal(modalDetalhes, dado.descricao, dado.id, dado.estoqueSuspenso)\\\">\\n              {{ dado.estoqueAtual | number:'1.3-3' }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"openModal(modalDetalhes, dado.descricao, dado.id, dado.estoqueSuspenso)\\\">\\n              {{ dado.estoqueComprometido | number:'1.3-3' }}\\n            </td>\\n            <td\\n              class=\\\"font-weight-bold hover\\\"\\n              (click)=\\\"openModal(modalDetalhes, dado.descricao, dado.id, dado.estoqueSuspenso)\\\">\\n              {{ dado.pedido | number:'1.3-3' }}\\n            </td>\\n            <td\\n              class=\\\"font-weight-bold hover\\\"\\n              (click)=\\\"openModal(modalDetalhes, dado.descricao, dado.id, dado.estoqueSuspenso)\\\">\\n              {{ dado.estoqueDisponivel | number:'1.3-3' }}\\n            </td>\\n            <td class=\\\"text-center\\\">\\n              <a\\n                class=\\\"btn-icon-sm\\\"\\n                tooltip=\\\"Avise-me quando disponível\\\"\\n                container=\\\"body\\\"\\n                [routerLink]=\\\"['/comercial/disponibilidade-material/novo/', dado.id]\\\"\\n                target=\\\"_blank\\\">\\n                <i class=\\\"fas fa-bell\\\"></i>\\n              </a>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && !dadosLoaded\\\"></empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n<ng-template #modalDetalhes>\\n  <div class=\\\"modal-header\\\">\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n      {{ nomeMaterial }}\\n    </h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModal(modalDetalhes)\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <tabset>\\n      <tab heading=\\\"Estoque outras unidades\\\" class=\\\"border-right border-left border-bottom\\\">\\n        <div class=\\\"px-3 pt-3\\\">\\n          <div class=\\\"form-row\\\" *ngIf=\\\"unidadesLoaded\\\">\\n            <div class=\\\"form-group col-lg-3\\\" *ngFor=\\\"let estoque of estoqueUnidades\\\">\\n              <label>{{ estoque.descEmpresa }}</label>\\n              <div>{{ estoque.estoque | number:'1.3-3' }} {{ estoque.unidade }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!unidadesLoaded\\\">\\n            <div class=\\\"spinner-border text-dark\\\"></div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Pedidos de compra\\\"  class=\\\"border-right border-left border-bottom\\\" (selectTab)=\\\"onSelectPedidos()\\\">\\n        <div class=\\\"p-3\\\">\\n          <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!pedidosCompraLoaded && !pedidosCompraEmpty\\\">\\n            <div class=\\\"spinner-border text-dark\\\"></div>\\n          </div>\\n          <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"pedidosCompra.length > 0 && !pedidosCompraEmpty && pedidosCompraLoaded\\\" class=\\\"text-center\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th>Data prevista</th>\\n                <th>Em aberto</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody >\\n              <tr *ngFor=\\\"let item of pedidosCompra\\\">\\n                <td>{{ item.dataPrevistaEntrega }}</td>\\n                <td>{{ item.qtdAberto | number:'1.3-3' }}</td>\\n              </tr>\\n              <tr class=\\\"bg-dark text-dark\\\">\\n                <td><strong>Total</strong></td>\\n                <td class=\\\"text-center\\\"><strong>{{ totaisPedCompra.totalAberto | number:'1.3-3' }}</strong></td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n          <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"my-4\\\" *ngIf=\\\"pedidosCompraEmpty && !pedidosCompraLoaded\\\"></empty-result>\\n         \\n        </div>\\n      </tab>\\n      <tab heading=\\\"Estoque comprometido\\\" class=\\\"border-right border-left border-bottom\\\" (selectTab)=\\\"onSelectComprometidos()\\\">\\n        <div class=\\\"p-3\\\">\\n          <div *ngIf=\\\"comprometidoLoaded\\\">\\n            <div class=\\\"d-flex\\\">\\n              <div class=\\\"legend blue\\\">\\n                <div class=\\\"square\\\"></div>\\n                <div class=\\\"text\\\">ESTOQUE COMPROMETIDO</div>\\n              </div>\\n            </div>\\n            <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"estoqueComprometido.length > 0 && !comprometidoEmpty\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th>Pedido</th>\\n                  <th>Data</th>\\n                  <th>Lote</th>\\n                  <th>Empresa</th>\\n                  <th>Cliente</th>\\n                  <th>Vendedor</th>\\n                  <th>Qtde.</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of estoqueComprometido\\\">\\n                  <td [ngClass]=\\\"estoqueComprometidoClassStatusBorder(item.idComprometido)\\\">{{ item.numeroPedido }}</td>\\n                  <td>{{ item.dataEmissao }}</td>\\n                  <td></td>\\n                  <td>{{ item.empresa }}</td>\\n                  <td>{{ item.fantasiaCliente }}</td>\\n                  <td>{{ item.nomeVendedor }}</td>\\n                  <td>{{ item.quantidade | number:'1.3-3' }}</td>\\n                </tr>\\n                <tr class=\\\"bg-dark text-center text-dark\\\">\\n                  <td colspan=\\\"5\\\" class=\\\"border-dark\\\"></td>\\n                  <td><strong>Total</strong></td>\\n                  <td class=\\\"text-center\\\"><strong>{{ totaisComprometido.quantidade | number:'1.3-3' }}</strong></td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n          <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"my-4\\\" *ngIf=\\\"comprometidoEmpty && !comprometidoLoaded\\\"></empty-result>\\n          <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!comprometidoLoaded && !comprometidoEmpty\\\">\\n            <div class=\\\"spinner-border text-dark\\\"></div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Detalhamento por lote\\\" class=\\\"border-right border-left border-bottom\\\" (selectTab)=\\\"onSelectLote()\\\">\\n        <div class=\\\"p-3\\\">\\n          <custom-table *ngIf=\\\"detalhesLote.length > 0 && !loteEmpty\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th rowspan=\\\"2\\\" class=\\\"align-middle text-center\\\">Seq.</th>\\n                <th rowspan=\\\"2\\\" class=\\\"align-middle text-center\\\">Lote fabricação</th>\\n                <th rowspan=\\\"2\\\" class=\\\"align-middle text-center\\\">Localização</th>\\n                <th rowspan=\\\"2\\\" class=\\\"align-middle text-center\\\">Estoque</th>\\n                <th colspan=\\\"2\\\" class=\\\"text-center\\\">Relatório de Recebimento</th>\\n              </tr>\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Número</th>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Item</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let item of detalhesLote\\\">\\n                <td>{{ item.sequencia }}</td>\\n                <td>{{ item.lote }}</td>\\n                <td>{{ item.localizacao }}</td>\\n                <td>{{ item.qtdEstoque | number:'1.3-3' }}</td>\\n                <td>{{ item.relatorio }}</td>\\n                <td>{{ item.itemRelatorio }}</td>\\n              </tr>\\n              <tr class=\\\"bg-dark text-center text-dark\\\">\\n                <td colspan=\\\"5\\\"><strong>Total</strong></td>\\n                <td class=\\\"text-center\\\"><strong>{{ totaisLote.quantidade | number:'1.3-3' }}</strong></td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n          <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"my-4\\\" *ngIf=\\\"loteEmpty && !loteLoaded\\\"></empty-result>\\n          <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!loteLoaded && !loteEmpty\\\">\\n            <div class=\\\"spinner-border text-dark\\\"></div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Estoque suspenso\\\" class=\\\"border-right border-left border-bottom\\\" (selectTab)=\\\"onSelectEstoqueSuspenso()\\\" *ngIf=\\\"possuiLote\\\">\\n        <div class=\\\"p-3\\\">\\n          <custom-table *ngIf=\\\"detalhesSuspenso.length > 0 && suspensoLoaded\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Quantidade</th>\\n                <th scope=\\\"col\\\">Data</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let item of detalhesSuspenso\\\">\\n                <td class=\\\"text-center\\\">{{ item.estoqueSuspenso | number:'1.3-3' }}</td>\\n                <td class=\\\"text-center\\\">{{ item.data }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n          <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"my-4\\\" *ngIf=\\\"suspensoEmpty && !suspensoLoaded\\\"></empty-result>\\n          <div class=\\\"d-flex justify-content-center mb-3\\\" *ngIf=\\\"!suspensoLoaded && !suspensoEmpty\\\">\\n            <div class=\\\"spinner-border text-dark\\\"></div>\\n          </div>\\n        </div>\\n      </tab>\\n    </tabset>\\n  </div>\\n</ng-template>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialEstoqueRoutingModule } from './estoque-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialEstoqueListaComponent } from './lista/lista.component';\n\n@NgModule({\n  declarations: [ComercialEstoqueListaComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModalModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    ComercialEstoqueRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialEstoqueModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { NumberIntPipe } from './pipes/number-int.pipe';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\nimport { NgBrazil } from 'ng-brazil';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Modules\nimport { TecnologiaInformacaoEstoqueRoutingModule } from './estoque-routing.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { TecnologiaInformacaoEstoqueComponent } from './estoque.component';\n// Components\n\n@NgModule({\n  declarations: [TecnologiaInformacaoEstoqueComponent ],\n  imports: [\n    CommonModule,\n    TecnologiaInformacaoEstoqueRoutingModule,\n    NotFoundModule,\n    SharedModule,\n    TemplatesModule,\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    CurrencyMaskModule,\n    SharedModule,\n    PipesModule,\n    TemplatesModule,\n  ],\n})\nexport class TecnologiaInformacaoEstoqueModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { TecnologiaInformacaoEstoqueComponent } from './estoque.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        component: TecnologiaInformacaoEstoqueComponent,\n      },\n      {\n        path: 'nivel-estoque',\n        loadChildren: () =>\n          import('./nivel-estoque/nivel-estoque.module').then(\n            (m) => m.TecnologiaInformacaoNivelEstoqueModule\n          ),\n      },\n      {\n        path: 'movimentacoes',\n        loadChildren: () =>\n          import('./movimentacoes/movimentacoes.module').then(\n            (m) => m.TecnologiaInformacaoMovimentacoesModule\n          ),\n      },\n      {\n        path: 'tipo-movimentacoes',\n        loadChildren: () =>\n          import('./tipo-movimentacoes/tipo-movimentacoes.module').then(\n            (m) => m.TecnologiaInformacaoTipoMovimentacoesModule\n          ),\n      },\n      {\n        path: 'produtos',\n        loadChildren: () =>\n          import('./produtos/produtos.module').then(\n            (m) => m.TecnologiaInformacaoEstoqueProdutosModule\n          ),\n      },\n      {\n        path: 'tipo-produtos',\n        loadChildren: () =>\n          import('./tipo-produto/tipo-produto.module').then(\n            (m) => m.TecnologiaInformacaoEstoqueTipoProdutosModule\n          ),\n      },\n      {\n        path: 'modelo',\n        loadChildren: () =>\n          import('./modelo/modelo.module').then(\n            (m) => m.TecnologiaInformacaoEstoqueModeloModule\n          ),\n      },\n      {\n        path: 'marcas',\n        loadChildren: () =>\n          import('./marcas/marcas.module').then(\n            (m) => m.TecnologiaInformacaoEstoqueMarcasModule\n          ),\n      },\n      {\n        path: 'painel-aprovacao',\n        loadChildren: () =>\n          import('./painel-aprovacao/painel-aprovacao.module').then(\n            (m) => m.TecnologiaInformacaoEstoquePainelAprovacaoModule\n          ),\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TecnologiaInformacaoEstoqueRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvZXN0b3F1ZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../comercial.service';\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialEstoqueService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/estoque`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getFiltros(): Observable<Object | JsonResponse> {\n    let empresas = this.tidSoftwareService.getEmpresas('estoques');\n    let depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\n    let linhas = this.tidSoftwareService.getLinhas();\n    let classes = this.comercialService.getClasses(null);\n\n    return forkJoin([empresas, depositos, linhas, classes]).pipe(\n      take(1),\n      retry(2)\n    );\n  }\n\n  getEstoqueAtual(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/estoque-atual`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getOutrasUnidades(id: any): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/outras-unidades/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getPedidosCompra(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .get(\n        `${this.API}/pedidos-compra/${params.idMaterial}/${params.idEmpresa}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getComprometido(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .get(\n        `${this.API}/estoque-comprometido/${params.idMaterial}/${params.idEmpresa}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getLote(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/lote/${params.idMaterial}/${params.idEmpresa}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getEstoqueSuspenso(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .get(\n        `${this.API}/estoque-suspenso/${params.idMaterial}/${params.idEmpresa}`\n      )\n      .pipe(take(1), retry(2));\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"ESTOQUE\\\"></app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <card-group text=\\\"Selecione uma atividade\\\" [list]=\\\"atividades\\\"></card-group>\\n</app-body>\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}