{"version":3,"sources":["webpack:///src/app/modules/controladoria/fluxo-caixa/listas/bancos/bancos.component.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/modals/logs/logs.component.scss","webpack:///src/app/modules/controladoria/fluxo-caixa/cadastros/fluxo-caixa/fluxo-caixa.component.scss","webpack:///src/app/modules/controladoria/fluxo-caixa/cadastros/bancos/bancos.component.scss","webpack:///src/app/modules/controladoria/fluxo-caixa/listas/fluxo-caixa/fluxo-caixa.component.html","webpack:///src/app/modules/controladoria/fluxo-caixa/services/tipos-fluxo-caixa.service.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/cadastros/fluxo-caixa/fluxo-caixa.component.html","webpack:///src/app/modules/controladoria/fluxo-caixa/listas/fluxo-caixa/fluxo-caixa.component.scss","webpack:///src/app/modules/controladoria/fluxo-caixa/fluxo-caixa.module.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/listas/empresas/empresas.component.html","webpack:///src/app/modules/controladoria/fluxo-caixa/fluxo-caixa-routing.module.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/cadastros/fluxo-caixa/fluxo-caixa.component.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/cadastros/tipos-fluxo-caixa/tipos-fluxo-caixa.component.html","webpack:///src/app/modules/controladoria/fluxo-caixa/listas/bancos/bancos.component.scss","webpack:///src/app/modules/controladoria/fluxo-caixa/listas/tipos-fluxo-caixa/tipos-fluxo-caixa.component.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/fluxo-caixa.component.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/services/bancos.service.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/cadastros/bancos/bancos.component.html","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/cadastros/empresas/empresas.component.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/services/fluxo-caixa.service.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/cadastros/tipos-fluxo-caixa/tipos-fluxo-caixa.component.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/cadastros/empresas/empresas.component.html","webpack:///src/app/modules/controladoria/fluxo-caixa/fluxo-caixa.component.html","webpack:///src/app/modules/controladoria/fluxo-caixa/listas/empresas/empresas.component.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/cadastros/tipos-fluxo-caixa/tipos-fluxo-caixa.component.scss","webpack:///src/app/modules/controladoria/fluxo-caixa/modals/logs/logs.component.html","webpack:///src/app/modules/controladoria/fluxo-caixa/services/empresas.service.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/listas/empresas/empresas.component.scss","webpack:///src/app/modules/controladoria/fluxo-caixa/listas/fluxo-caixa/fluxo-caixa.component.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/modals/logs/logs.component.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/cadastros/bancos/bancos.component.ts","webpack:///src/app/modules/controladoria/fluxo-caixa/cadastros/empresas/empresas.component.scss","webpack:///src/app/modules/controladoria/fluxo-caixa/fluxo-caixa.component.scss","webpack:///src/app/modules/controladoria/fluxo-caixa/listas/bancos/bancos.component.html","webpack:///src/app/modules/controladoria/fluxo-caixa/listas/tipos-fluxo-caixa/tipos-fluxo-caixa.component.scss","webpack:///src/app/modules/controladoria/fluxo-caixa/listas/tipos-fluxo-caixa/tipos-fluxo-caixa.component.html"],"names":["ControladoriaListaBancosComponent","activatedRoute","bancosService","route","notice","appTitle","breadCrumbTree","spinnerFullScreen","loaderNavbar","noResult","bancos","dadosEmpty","tableConfig","subtitleBorder","itemsPerPage","currentPage","begin","end","setBreadCrumb","getBancos","descricao","routerLink","event","page","idLancBanc","subscribe","response","status","body","totalItems","length","selector","template","ControladoriaTiposFluxoCaixaService","http","BASE_URL","param","get","params","observe","COD_TIPO_LANCAMENTO","undefined","put","post","providedIn","ControladoriaFluxoCaixaModule","declarations","imports","forRoot","providers","provide","useValue","routes","path","children","component","ControladoriaFluxoCaixaRoutingModule","forChild","exports","ControladoriaCadastrosFluxoCaixaComponent","fluxoCaixaService","tiposFluxoCaixaService","empresaService","bancoService","routerService","formBuilder","localeService","modalService","dateService","location","data","Date","tipos","tipo","tiposLancamentos","empresas","validaPagamento","inativaBotao","config","animated","ignoreBackdropClick","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","form","group","COD_LANCAMENTO","DATA_VENCIMENTO","required","DATA_EXECUCAO","COD_TIPO","COD_EMPR_LANCAMENTO","COD_EMPR_RECEBIMENTO","COD_BANCO","VALOR","OBSERVACAO","JUSTIFICATIVA","minLength","time","getTime","getTipos","getEmpresas","onActivatedRoute","snapshot","queryParams","hasOwnProperty","getFluxoCaixa","id","decoded","getBase64UrlParams","getTiposFluxoCaixa","patchValue","setValue","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","value","mostraCampos","getParams","enable","_params","_obj","prop","convertToBrazilianDate","substring","postCadastrar","modalRef","show","success","back","error","navigate","relativeTo","pipe","ControladoriaTiposFluxoCaixaComponent","DESC_TIPO","DESC_TIPO_LANCAMENTO","ControladoriaFluxoCaixaComponent","atividadesService","registrarAcesso","ControladoriaBancosService","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","currentDate","startOfWeek","setDate","setHours","endOfWeek","y","m","d","h","i","toString","padStart","s","getSeconds","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","ControladoriaCadastroEmpresasComponent","idLancEmpr","DESC_EMPR","COD_EMPR","putEmpresas","ControladoriaFluxoCaixaService","modalEmitter","detailPanelEmitter","state","emit","ControladoriaCadastroTiposFluxoCaixaComponent","cadastroTiposService","lista","putTiposFluxoCaixa","ControladoriaListaEmpresasComponent","ControladoriaEmpresasService","ControladoriaListaFluxoCaixaComponent","xlsxService","detailPanelService","listas","item","listaSelecionada","listaLog","editParam","showDetailPanel","detailPanel","COD","NOME","subtitles","text","color","DT_INIC","getFirstDayMonth","DT_FINA","IN_STAT","getActiveRoute","onDetailPanel","exportFile","$showDetailPanelSubscription","unsubscribe","$activateRoutedSubscription","$lancamentoServiceSubscription","setBase64UrlParams","showAdvancedFilter","keys","_response","forEach","element","INDICE","showing","map","selected","getDetailPanel","loadedFinished","setDetailPanel","reset","_saldo","JSON","parse","stringify","setStateModal","ControladoriaFluxoCaixaLogsComponent","service","dados","items","log","tableLogConfig","hover","openModal","$serviceSubscription","$serviceModalSubscription","getStateModal","console","getLog","ControladoriaCadastroBancosComponent","DESC_BANCO","putBancos"],"mappings":"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","file":"fluxo-caixa-fluxo-caixa-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ControladoriaBancosService } from '../../services/bancos.service';\r\n\r\n@Component({\r\n  selector: 'lista-bancos',\r\n  templateUrl: './bancos.component.html',\r\n  styleUrls: ['./bancos.component.scss']\r\n})\r\nexport class ControladoriaListaBancosComponent implements OnInit {\r\n  appTitle = 'Bancos/Fundos';\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  noResult = false;\r\n  bancos = [];\r\n  dadosEmpty = false;\r\n\r\n  /* Config Table */\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: false,\r\n  };\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private bancosService: ControladoriaBancosService,\r\n    private route: Router,\r\n    private notice: PNotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getBancos();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  getBancos() {\r\n    let idLancBanc = 0;\r\n    this.spinnerFullScreen = true;\r\n    this.bancosService.getBancos(idLancBanc).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe bancos cadastrados.');\r\n        this.spinnerFullScreen = false;\r\n      } else {\r\n        this.bancos = response.body['data'];\r\n        this.totalItems = response.body['data'].length;\r\n        this.spinnerFullScreen = false;\r\n        this.noResult = true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9tb2RhbHMvbG9ncy9sb2dzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9jYWRhc3Ryb3MvZmx1eG8tY2FpeGEvZmx1eG8tY2FpeGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9jYWRhc3Ryb3MvYmFuY29zL2JhbmNvcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"exportarExcel()\\\"\\r\\n    [disabled]=\\\"!noResult\\\"\\r\\n    >\\r\\n    Exportar\\r\\n  </button>\\r\\n  <button\\r\\n    [routerLink]=\\\"['../bancos']\\\"\\r\\n    >\\r\\n    Cadastrar Bancos/Fundo\\r\\n  </button>\\r\\n  <button\\r\\n    [routerLink]=\\\"['../empresas']\\\"\\r\\n    >\\r\\n    Cadastrar Empresas\\r\\n  </button>\\r\\n  <button\\r\\n    [routerLink]=\\\"['../tipos-fluxo-caixa']\\\"\\r\\n    >\\r\\n    Cadastrar Tipos Lançamentos\\r\\n  </button>\\r\\n  <button\\r\\n    [routerLink]=\\\"['../novo']\\\"\\r\\n    >\\r\\n    Inserir\\r\\n  </button>\\r\\n  <button\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    >\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- Início dos Filtros -->\\r\\n  <advanced-filter #scrollToFilter>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row justify-content-center\\\">\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"tipo\\\"> Tipo </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tipos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipo\\\"\\r\\n            bindLabel=\\\"DESC_TIPO\\\"\\r\\n            bindValue=\\\"COD_TIPO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"COD_TIPO\\\"\\r\\n            (change) =\\\"getTiposFluxoCaixa($event)\\\"\\r\\n            [ngClass]=\\\"onFieldError('COD_TIPO') + ' ' + onFieldRequired('COD_TIPO')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('COD_TIPO')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"tipoLancamentos\\\"> Tipo de lançamentos </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tiposLancamentos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipoLancamentos\\\"\\r\\n            bindLabel=\\\"DESC_TIPO_LANCAMENTO\\\"\\r\\n            bindValue=\\\"COD_TIPO_LANCAMENTO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"COD_TIPO_LANCAMENTO\\\"\\r\\n            [ngClass]=\\\"onFieldError('COD_TIPO_LANCAMENTO') + ' ' + onFieldRequired('COD_TIPO_LANCAMENTO')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('COD_TIPO_LANCAMENTO')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"empresa\\\"> Empresa de lançamento </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"empresas\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipoDocumento\\\"\\r\\n            bindLabel=\\\"DESC_EMPR\\\"\\r\\n            bindValue=\\\"COD_EMPR\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"COD_EMPR_LANCAMENTO\\\"\\r\\n            [ngClass]=\\\"onFieldError('COD_EMPR_LANCAMENTO') + ' ' + onFieldRequired('COD_EMPR_LANCAMENTO')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('COD_EMPR_LANCAMENTO')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"dataInicio\\\"> Data inicial </label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">\\r\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"inicioData\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_INIC\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_INIC') + ' ' + onFieldRequired('DT_INIC')\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('DT_INIC')\\\"\\r\\n            message=\\\"Data inicial é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"dataInicio\\\"> Data final </label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">\\r\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"fimData\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_FINA\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_FINA') + ' ' + onFieldRequired('DT_FINA')\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('DT_FINA')\\\"\\r\\n            message=\\\"Data final é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"status\\\"> Status </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"status\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipo\\\"\\r\\n            bindLabel=\\\"NOME\\\"\\r\\n            bindValue=\\\"COD\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"IN_STAT\\\"\\r\\n            [ngClass]=\\\"onFieldError('IN_STAT') + ' ' + onFieldRequired('IN_STAT')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('IN_STAT')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Início da Lista -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-7 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" [hidden] = \\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:10px\\\"></th>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:10px\\\"></th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Nr. Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Tipo Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Descrição Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Empresa de lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Data de execução </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\" [hidden]=\\\"showDetailPanel\\\"> Valor </th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">Status</th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">Log</th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody >\\r\\n          <tr *ngFor=\\\"let lista of listas | slice : begin : end; let i = index\\\"\\r\\n              [ngClass]=\\\"{'item-selected':lista.selected}\\\" class=\\\"hover text-center\\\">\\r\\n              <td [ngClass]=\\\"{\\r\\n                'border-success'    : lista.IN_STAT == '1',\\r\\n                'border-danger'     : lista.IN_STAT == '0'\\r\\n              }\\\" (click)=\\\"openTab(lista)\\\"\\r\\n              ></td>\\r\\n              <td class=\\\"p-0\\\" (click)=\\\"openTab(lista)\\\">\\r\\n                <span class=\\\"\\\" [tooltip]=\\\"lista.DESC_TIPO == 'RECEBIMENTO' ? 'Recebimento' : 'Pagamento'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\r\\n                  <i [ngClass]=\\\"lista.DESC_TIPO == 'RECEBIMENTO' ? 'fas fa-hand-holding-usd' : 'far fa-credit-card'\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"openTab(lista)\\\">{{ lista.COD_LANCAMENTO }}</td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"openTab(lista)\\\">{{ lista.DESC_TIPO | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"openTab(lista)\\\">{{ lista.DESC_TIPO_LANCAMENTO | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"openTab(lista)\\\">{{ lista.DESC_EMPR_LANCAMENTO | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"openTab(lista)\\\">{{ lista.DATA_EXECUCAO }}</td>\\r\\n            <td class=\\\"text-end\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"openTab(lista)\\\">{{ lista.VALOR | currency:'BRL' }}</td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span class=\\\"\\\" [tooltip]=\\\"lista.IN_STAT == '1' ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openJustificativa(template, lista)\\\">\\r\\n                  <i [ngClass]=\\\"lista.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span tooltip=\\\"Histórico\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\"  (click)=\\\"openLog(lista)\\\">\\r\\n                  <i class=\\\"fas fa-list-ul\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(lista)\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span tooltip=\\\"Duplicar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" (click)=\\\"onDuplicate(lista)\\\">\\r\\n                  <i class=\\\"fas fa-copy\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n    <!-- Início da tabela de informações -->\\r\\n    <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"appTitle\\\">\\r\\n        <div class=\\\"d-flex\\\">\\r\\n          <div class=\\\"col-6 pl-0\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Empresa de lançamento </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.DESC_EMPR_LANCAMENTO | uppercase }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Data de lançamento </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.DATA_INCLUSAO }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Data de vencimento </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.DATA_VENCIMENTO }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Data de execução </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.DATA_EXECUCAO }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>  \\r\\n          <div class=\\\"col-6\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Empresa de recebimento </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.DESC_EMPR_RECEBIMENTO | uppercase }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Valor </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.VALOR | currency:'BRL' }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Banco/Fundo </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.DESC_BANCO | uppercase }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Observação </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.OBSERVACAO }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-template #template>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h6 for=\\\"JUSTIFICATIVA\\\"> Justifique sua alteração! </h6>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"75\\\" rows=\\\"10\\\" formControlName=\\\"JUSTIFICATIVA\\\" #JUSTIFICATIVA minlength=\\\"10\\\"></textarea>\\r\\n        <div class=\\\"text-right\\\">\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-secondary mr-1\\\" (click)=\\\"modalRef.hide()\\\"\\r\\n            >\\r\\n            Cancelar \\r\\n          </button>\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"changeType(); modalRef.hide()\\\"\\r\\n            [disabled]=\\\"form.get('JUSTIFICATIVA').status == 'INVALID' || !form.get('JUSTIFICATIVA').value\\\"\\r\\n            >\\r\\n            Salvar \\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n  <controladoria-fluxo-caixa-logs></controladoria-fluxo-caixa-logs>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControladoriaTiposFluxoCaixaService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTiposFluxoCaixa(param) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/tipos-fluxo-caixa`,\r\n      {\r\n        params: param,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  putTiposFluxoCaixa(params) {\r\n    if (params.COD_TIPO_LANCAMENTO != undefined) {\r\n      return this.http.put(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/tipos-fluxo-caixa`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    } else {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/tipos-fluxo-caixa`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"validaSalvar(template)\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- Início dos Filtros -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"row col-6\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"tipo\\\"> Tipo </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"tipos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"tipo\\\"\\r\\n                bindLabel=\\\"DESC_TIPO\\\"\\r\\n                bindValue=\\\"COD_TIPO\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"COD_TIPO\\\"\\r\\n                (change) =\\\"getTiposFluxoCaixa($event)\\\"\\r\\n                [ngClass]=\\\"onFieldError('COD_TIPO') + ' ' + onFieldRequired('COD_TIPO')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('COD_TIPO')\\\"\\r\\n                message=\\\"Tipo é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"tipoLancamentos\\\"> Tipo de lançamentos </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"tiposLancamentos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                dropdownPosition=\\\"bottom\\\"\\r\\n                labelForId=\\\"tipoLancamentos\\\"\\r\\n                bindLabel=\\\"DESC_TIPO_LANCAMENTO\\\"\\r\\n                bindValue=\\\"COD_TIPO_LANCAMENTO\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"COD_TIPO_LANCAMENTO\\\"\\r\\n                [ngClass]=\\\"onFieldError('COD_TIPO_LANCAMENTO') + ' ' + onFieldRequired('COD_TIPO_LANCAMENTO')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('COD_TIPO_LANCAMENTO')\\\"\\r\\n                message=\\\"Tipo de lançamento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"datavenc\\\"> Data vencimento </label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">\\r\\n                    <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"datavenc\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"DATA_VENCIMENTO\\\"\\r\\n                [ngClass]=\\\"onFieldError('DATA_VENCIMENTO') + ' ' + onFieldRequired('DATA_VENCIMENTO')\\\"\\r\\n                >\\r\\n              </div>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('DATA_VENCIMENTO')\\\"\\r\\n                message=\\\"Data inicial é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label *ngIf=\\\"tipo == 1\\\" for=\\\"dataFlux\\\"> Data recebimento </label>\\r\\n              <label *ngIf=\\\"tipo != 1\\\" for=\\\"dataFlux\\\"> Data pagamento </label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">\\r\\n                    <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataFlux\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"DATA_EXECUCAO\\\"\\r\\n                [ngClass]=\\\"onFieldError('DATA_EXECUCAO') + ' ' + onFieldRequired('DATA_EXECUCAO')\\\"\\r\\n                >\\r\\n              </div>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('DATA_EXECUCAO')\\\"\\r\\n                message=\\\"Data final é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"empresaPagamento\\\"> Empresa de lançamento </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"empresas\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"empresaPagamento\\\"\\r\\n                bindLabel=\\\"DESC_EMPR\\\"\\r\\n                bindValue=\\\"COD_EMPR\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"COD_EMPR_LANCAMENTO\\\"\\r\\n                [ngClass]=\\\"onFieldError('COD_EMPR_LANCAMENTO') + ' ' + onFieldRequired('COD_EMPR_LANCAMENTO')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('COD_EMPR_LANCAMENTO')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"validaPagamento\\\" class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"empresaRecebimento\\\"> Empresa de recebimento </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"empresas\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"empresaRecebimento\\\"\\r\\n                bindLabel=\\\"DESC_EMPR\\\"\\r\\n                bindValue=\\\"COD_EMPR\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"COD_EMPR_RECEBIMENTO\\\"\\r\\n                [ngClass]=\\\"onFieldError('COD_EMPR_RECEBIMENTO') + ' ' + onFieldRequired('COD_EMPR_RECEBIMENTO')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('COD_EMPR_RECEBIMENTO')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"valor\\\"> Valor </label>\\r\\n              <input\\r\\n                currencyMask\\r\\n                [options] = \\\" {align: 'left', prefix: 'R$', thousands: '.', decimal: ','} \\\"\\r\\n                id=\\\"valor\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"VALOR\\\"\\r\\n                [ngClass]=\\\"onFieldError('VALOR') + ' ' + onFieldRequired('VALOR')\\\"\\r\\n              >\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('VALOR')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"banco\\\"> Banco/Fundo </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"bancos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"banco\\\"\\r\\n                bindLabel=\\\"DESC_BANCO\\\"\\r\\n                bindValue=\\\"COD_BANCO\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"COD_BANCO\\\"\\r\\n                [ngClass]=\\\"onFieldError('COD_BANCO') + ' ' + onFieldRequired('COD_BANCO')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('COD_BANCO')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n              <label for=\\\"valor\\\"> Observação </label>\\r\\n              <input\\r\\n                id=\\\"observacao\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"OBSERVACAO\\\"\\r\\n                [ngClass]=\\\"onFieldError('OBSERVACAO') + ' ' + onFieldRequired('OBSERVACAO')\\\"\\r\\n              >\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('OBSERVACAO')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-template #template>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h6 for=\\\"JUSTIFICATIVA\\\"> Justifique sua alteração! </h6>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"75\\\" rows=\\\"10\\\" formControlName=\\\"JUSTIFICATIVA\\\" #JUSTIFICATIVA minlength=\\\"10\\\"></textarea>\\r\\n        <div class=\\\"text-right\\\">\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-secondary mr-1\\\" (click)=\\\"modalRef.hide()\\\"\\r\\n            >\\r\\n            Cancelar \\r\\n          </button>\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"postCadastrar(); modalRef.hide()\\\"\\r\\n            [disabled]=\\\"form.get('JUSTIFICATIVA').status == 'INVALID' || !form.get('JUSTIFICATIVA').value\\\"\\r\\n            >\\r\\n            Salvar \\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n</app-body>\\r\\n\";","export default \"tr.item-selected td {\\n  background-color: #8fb9ef !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb250cm9sYWRvcmlhL2ZsdXhvLWNhaXhhL2xpc3Rhcy9mbHV4by1jYWl4YS9mbHV4by1jYWl4YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG9DQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbnRyb2xhZG9yaWEvZmx1eG8tY2FpeGEvbGlzdGFzL2ZsdXhvLWNhaXhhL2ZsdXhvLWNhaXhhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidHIuaXRlbS1zZWxlY3RlZCB0ZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOGZiOWVmICFpbXBvcnRhbnQ7XHJcbiAgfSJdfQ== */\";","import { SharedModule } from './../../../shared/modules/shared.module';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\n\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { \r\n  TooltipModule, \r\n  TimepickerModule,\r\n  ptBrLocale,\r\n  BsDatepickerModule,\r\n  PaginationModule,\r\n  TabsModule, \r\n  defineLocale } from 'ngx-bootstrap';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport ptBr from '@angular/common/locales/pt';\r\n\r\nimport { ControladoriaFluxoCaixaRoutingModule } from './fluxo-caixa-routing.module';\r\nimport { ControladoriaFluxoCaixaComponent } from './fluxo-caixa.component';\r\nimport { ControladoriaListaFluxoCaixaComponent } from './listas/fluxo-caixa/fluxo-caixa.component';\r\nimport { ControladoriaCadastrosFluxoCaixaComponent } from './cadastros/fluxo-caixa/fluxo-caixa.component';\r\nimport { ControladoriaFluxoCaixaLogsComponent } from './modals/logs/logs.component';\r\nimport { ControladoriaTiposFluxoCaixaComponent } from './listas/tipos-fluxo-caixa/tipos-fluxo-caixa.component';\r\nimport { ControladoriaCadastroTiposFluxoCaixaComponent } from './cadastros/tipos-fluxo-caixa/tipos-fluxo-caixa.component';\r\nimport { ControladoriaListaEmpresasComponent } from './listas/empresas/empresas.component';\r\nimport { ControladoriaCadastroEmpresasComponent } from './cadastros/empresas/empresas.component';\r\nimport { ControladoriaListaBancosComponent } from './listas/bancos/bancos.component';\r\nimport { ControladoriaCadastroBancosComponent } from './cadastros/bancos/bancos.component';\r\n\r\nregisterLocaleData(ptBr);\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ControladoriaFluxoCaixaComponent,\r\n    ControladoriaListaFluxoCaixaComponent,\r\n    ControladoriaCadastrosFluxoCaixaComponent,\r\n    ControladoriaTiposFluxoCaixaComponent,\r\n    ControladoriaCadastroTiposFluxoCaixaComponent,\r\n    ControladoriaListaEmpresasComponent, \r\n    ControladoriaCadastroEmpresasComponent,\r\n    ControladoriaListaBancosComponent, \r\n    ControladoriaCadastroBancosComponent,\r\n    ControladoriaFluxoCaixaLogsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ControladoriaFluxoCaixaRoutingModule,\r\n    ModuleWrapperModule,\r\n    TemplatesModule.forRoot(),\r\n    FormsModule,\r\n    NgSelectModule,\r\n    SharedModule,\r\n    TooltipModule,\r\n    NotFoundModule,\r\n    PipesModule,\r\n    CurrencyMaskModule,\r\n    ReactiveFormsModule,\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-PT' }],\r\n})\r\nexport class ControladoriaFluxoCaixaModule { }\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    [routerLink]=\\\"['./novo']\\\"\\r\\n    >\\r\\n    Cadastrar Empresa\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- <advanced-filter #scrollToFilter></advanced-filter> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" [hidden] = \\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Código Empresa </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Nome </th>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let empresa of empresas | slice : begin : end; let i = index\\\" class=\\\"text-center\\\">\\r\\n            <td class=\\\"text-center\\\">{{ empresa.COD_EMPR }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ empresa.DESC_EMPR | uppercase }}</td>\\r\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n              <span tooltip=\\\"Visualizar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', empresa.COD_EMPR]\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\n\r\nimport { ControladoriaListaFluxoCaixaComponent } from './listas/fluxo-caixa/fluxo-caixa.component';\r\nimport { ControladoriaCadastrosFluxoCaixaComponent } from './cadastros/fluxo-caixa/fluxo-caixa.component';\r\nimport { ControladoriaTiposFluxoCaixaComponent } from './listas/tipos-fluxo-caixa/tipos-fluxo-caixa.component';\r\nimport { ControladoriaCadastroTiposFluxoCaixaComponent } from './cadastros/tipos-fluxo-caixa/tipos-fluxo-caixa.component';\r\nimport { ControladoriaListaEmpresasComponent } from './listas/empresas/empresas.component';\r\nimport { ControladoriaCadastroEmpresasComponent } from './cadastros/empresas/empresas.component';\r\nimport { ControladoriaListaBancosComponent } from './listas/bancos/bancos.component';\r\nimport { ControladoriaCadastroBancosComponent } from './cadastros/bancos/bancos.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'tipos-fluxo-caixa',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ControladoriaTiposFluxoCaixaComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: ControladoriaCadastroTiposFluxoCaixaComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: ControladoriaCadastroTiposFluxoCaixaComponent,\r\n      }      \r\n    ]\r\n  },\r\n  {\r\n  path: 'empresas',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ControladoriaListaEmpresasComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: ControladoriaCadastroEmpresasComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: ControladoriaCadastroEmpresasComponent,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n  path: 'bancos',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ControladoriaListaBancosComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: ControladoriaCadastroBancosComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: ControladoriaCadastroBancosComponent,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    component: ControladoriaListaFluxoCaixaComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ControladoriaCadastrosFluxoCaixaComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: ControladoriaCadastrosFluxoCaixaComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ControladoriaFluxoCaixaRoutingModule { }\r\n","import { finalize } from 'rxjs/operators';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport {\r\n  BsModalService,\r\n  BsModalRef,\r\n  ModalDirective,\r\n} from 'ngx-bootstrap/modal';\r\nimport { Location } from '@angular/common';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { ControladoriaFluxoCaixaService } from '../../services/fluxo-caixa.service';\r\nimport { ControladoriaTiposFluxoCaixaService } from '../../services/tipos-fluxo-caixa.service';\r\nimport { ControladoriaEmpresasService } from '../../services/empresas.service';\r\nimport { ControladoriaBancosService } from '../../services/bancos.service';\r\n\r\n@Component({\r\n  selector: 'cadastro-fluxo-caixa',\r\n  templateUrl: './fluxo-caixa.component.html',\r\n  styleUrls: ['./fluxo-caixa.component.scss'],\r\n})\r\nexport class ControladoriaCadastrosFluxoCaixaComponent\r\n  implements OnInit {\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  breadCrumbTree: any = [];\r\n  data: Date = new Date();\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  form: FormGroup;\r\n  tipos = [];\r\n  tipo = 0;\r\n  tiposLancamentos = [];\r\n  empresas = [];\r\n  bancos = [];\r\n  validaPagamento = false;\r\n\r\n  inativaBotao: boolean = true;\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: false,\r\n    ignoreBackdropClick: true,\r\n  };\r\n\r\n  appTitle = 'Cadastro de Lançamentos';\r\n\r\n  constructor(\r\n    private fluxoCaixaService: ControladoriaFluxoCaixaService,\r\n    private tiposFluxoCaixaService: ControladoriaTiposFluxoCaixaService,\r\n    private empresaService: ControladoriaEmpresasService,\r\n    private bancoService: ControladoriaBancosService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private routerService: RouterService,\r\n    private route: Router,\r\n    private notice: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private modalService: BsModalService,\r\n    private dateService: DateService,\r\n    private location: Location\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n\r\n    this.form = this.formBuilder.group({\r\n      COD_LANCAMENTO: [null],\r\n      DATA_VENCIMENTO: [null, Validators.required],\r\n      DATA_EXECUCAO: [null, Validators.required],\r\n      COD_TIPO: [null, Validators.required],\r\n      COD_TIPO_LANCAMENTO: [null, Validators.required],\r\n      COD_EMPR_LANCAMENTO: [null, Validators.required],\r\n      COD_EMPR_RECEBIMENTO: [null],\r\n      COD_BANCO: [null],\r\n      VALOR: [null, Validators.required],\r\n      OBSERVACAO: [null],\r\n      JUSTIFICATIVA: [null, Validators.minLength(10)],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getTipos();\r\n    this.getEmpresas();\r\n    this.getBancos();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    const queryParams = this.activatedRoute.snapshot.queryParams;\r\n\r\n    if (params.hasOwnProperty('id')) {\r\n      this.getFluxoCaixa({ COD_LANCAMENTO: params.id });\r\n    } else if (queryParams.hasOwnProperty('q')) {\r\n      const decoded = this.routerService.getBase64UrlParams(queryParams);\r\n\r\n      this.getTiposFluxoCaixa({ COD_TIPO: decoded['COD_TIPO'] });\r\n\r\n      this.form.patchValue(decoded);\r\n      this.form.get('COD_LANCAMENTO').setValue(undefined);\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getTipos() {\r\n    this.tipo;\r\n    this.fluxoCaixaService.getTipos().subscribe((response) => {\r\n      this.tipos = response['data'];\r\n    });\r\n  }\r\n\r\n  getTiposFluxoCaixa(params?) {\r\n    this.spinnerFullScreen = true;\r\n    this.tipo = this.form.value.COD_TIPO;\r\n    this.tiposFluxoCaixaService\r\n      .getTiposFluxoCaixa(params)\r\n      .subscribe((response) => {\r\n        if (response.status === 204) {\r\n          this.notice.notice('Não existe tipos de lançamentos cadastrados.');\r\n          this.spinnerFullScreen = false;\r\n          this.tiposLancamentos = [];\r\n        } else {\r\n          this.tiposLancamentos = response.body['data'];\r\n          this.spinnerFullScreen = false;\r\n          this.mostraCampos();\r\n        }\r\n      });\r\n  }\r\n\r\n  getEmpresas() {\r\n    this.empresaService\r\n      .getEmpresas(this.getParams())\r\n      .subscribe((response) => {\r\n        if (response.status === 204) {\r\n          this.notice.notice('Não existe empresas cadastradas.');\r\n        } else this.empresas = response.body['data'];\r\n      });\r\n  }\r\n\r\n  getBancos() {\r\n    this.bancoService.getBancos(this.getParams()).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe bancos cadastradas.');\r\n      } else this.bancos = response.body['data'];\r\n    });\r\n  }\r\n\r\n  mostraCampos(): boolean {\r\n    if (this.form.value['COD_TIPO'] == 2) {\r\n      this.validaPagamento = true;\r\n      this.form.controls['COD_EMPR_RECEBIMENTO'].enable();\r\n      this.form.controls['COD_BANCO'].enable();\r\n      return true;\r\n    } else if (this.form.value['COD_EMPR_RECEBIMENTO']) {\r\n      this.validaPagamento = false;\r\n      this.form.controls['COD_EMPR_RECEBIMENTO'].enable();\r\n      this.form.controls['COD_BANCO'].enable();\r\n      return true;\r\n    }\r\n    this.validaPagamento = true;\r\n    this.form.controls['COD_EMPR_RECEBIMENTO'].enable();\r\n    this.form.controls['COD_BANCO'].enable();\r\n    return false;\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  validaSalvar(template) {\r\n    if (!this.form.get('COD_LANCAMENTO').value) {\r\n      this.postCadastrar();\r\n    } else {\r\n      this.modalRef = this.modalService.show(template, this.config);\r\n    }\r\n  }\r\n\r\n  postCadastrar() {\r\n    this.spinnerFullScreen = true;\r\n    this.fluxoCaixaService.postCadastrar(this.getParams()).subscribe(\r\n      (response) => {\r\n        if (response.status === 200)\r\n          this.notice.success(response.body['mensagem']);\r\n        this.location.back();\r\n      },\r\n      (error) => this.notice.error()\r\n    );\r\n  }\r\n\r\n  retorna() {\r\n    this.route.navigate([`./../`], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  getFluxoCaixa(params) {\r\n    this.spinnerFullScreen = true;\r\n\r\n    this.fluxoCaixaService\r\n      .getFluxoCaixa(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        this.form.patchValue(response.body['data'][0]);\r\n        this.getTiposFluxoCaixa(this.getParams());\r\n      });\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"putTiposFluxoCaixa()\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"tipo\\\"> Tipo </label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"DESC_TIPO\\\"\\r\\n              bindValue=\\\"COD_TIPO\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              formControlName=\\\"COD_TIPO\\\"\\r\\n              [ngClass]=\\\"onFieldError('COD_TIPO') + ' ' + onFieldRequired('COD_TIPO')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('COD_TIPO')\\\"\\r\\n              message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n              <label for=\\\"lancamento\\\"> Descrição do lançamento </label>\\r\\n              <input\\r\\n                id=\\\"lancamento\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"DESC_TIPO_LANCAMENTO\\\"\\r\\n                [ngClass]=\\\"onFieldError('DESC_TIPO_LANCAMENTO') + ' ' + onFieldRequired('DESC_TIPO_LANCAMENTO')\\\">\\r\\n            </div>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('DESC_TIPO_LANCAMENTO')\\\"\\r\\n              message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9saXN0YXMvYmFuY29zL2JhbmNvcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\nimport { finalize } from 'rxjs/operators';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { ControladoriaTiposFluxoCaixaService } from '../../services/tipos-fluxo-caixa.service';\r\nimport { ControladoriaFluxoCaixaService } from '../../services/fluxo-caixa.service';\r\n\r\n@Component({\r\n  selector: 'lista-tipos-fluxo-caixa',\r\n  templateUrl: './tipos-fluxo-caixa.component.html',\r\n  styleUrls: ['./tipos-fluxo-caixa.component.scss']\r\n})\r\nexport class ControladoriaTiposFluxoCaixaComponent implements OnInit {\r\n  appTitle = 'Tipos de Lançamentos';\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  tipos = [];\r\n  tiposLancamentos = [];\r\n  form: FormGroup;\r\n  noResult = false;\r\n  dadosEmpty = false;\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  /* Config Table */\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private tiposFluxoCaixaService: ControladoriaTiposFluxoCaixaService,\r\n    private fluxoCaixaService: ControladoriaFluxoCaixaService,\r\n    private formBuilder: FormBuilder,\r\n    private route: Router,\r\n    private routerService: RouterService,\r\n    private notice: PNotifyService,\r\n    private dateService: DateService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      COD_TIPO: [null],\r\n      DESC_TIPO: [null],\r\n      COD_TIPO_LANCAMENTO: [null],\r\n      DESC_TIPO_LANCAMENTO: [null],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getTipos();\r\n    this.getTiposFluxoCaixa(this.getParams());\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  getTipos() {\r\n    this.fluxoCaixaService.getTipos().subscribe((response) => {\r\n      this.tipos = response['data'];\r\n    });\r\n  }\r\n\r\n  getTiposFluxoCaixa(param) {\r\n    this.spinnerFullScreen = true;\r\n    this.tiposFluxoCaixaService\r\n      .getTiposFluxoCaixa(param)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n          this.noResult = true;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 204) {\r\n          this.notice.notice('Não existe tipos de lançamentos cadastrados.');\r\n          this.tiposLancamentos = [];\r\n        } else {\r\n          this.tiposLancamentos = response.body['data'];\r\n          this.totalItems = response.body['data'].length;\r\n        }\r\n      });\r\n  }\r\n\r\n  onFilter() {\r\n    this.getTiposFluxoCaixa(this.getParams());\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","import { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n@Component({\r\n  selector: 'fluxo-caixa',\r\n  templateUrl: './fluxo-caixa.component.html',\r\n  styleUrls: ['./fluxo-caixa.component.scss']\r\n})\r\nexport class ControladoriaFluxoCaixaComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private atividadesService: AtividadesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.navigate(['/controladoria/fluxo-caixa']);\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControladoriaBancosService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getBancos(param) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/bancos`,\r\n      {\r\n        params: param,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  putBancos(params) {\r\n    if (params.COD_BANCO != undefined) {\r\n      return this.http.put(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/bancos`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    } else {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/bancos`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"putBancos()\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <div class=\\\"form-group col-md-12 p-0\\\">\\r\\n              <label for=\\\"banco\\\"> Nome Banco/Fundo </label>\\r\\n              <input\\r\\n                id=\\\"banco\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"DESC_BANCO\\\"\\r\\n                [ngClass]=\\\"onFieldError('DESC_BANCO') + ' ' + onFieldRequired('DESC_BANCO')\\\">\\r\\n            </div>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('DESC_BANCO')\\\"\\r\\n              message=\\\"Informar banco é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { Location } from '@angular/common';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ControladoriaEmpresasService } from '../../services/empresas.service';\r\n\r\n@Component({\r\n  selector: 'cadastro-empresas',\r\n  templateUrl: './empresas.component.html',\r\n  styleUrls: ['./empresas.component.scss']\r\n})\r\nexport class ControladoriaCadastroEmpresasComponent implements OnInit {\r\n  idLancEmpr: number = this.activatedRoute.snapshot.params['id'];\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  appTitle = 'Cadastro de Empresas';\r\n  form: FormGroup;\r\n  empresas = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private notice: PNotifyService,\r\n    private empresaService: ControladoriaEmpresasService,\r\n    private route: Router,\r\n    private location: Location,\r\n    private dateService: DateService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      DESC_EMPR: [null, Validators.required],\r\n      COD_EMPR: [null],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: 'Empresas',\r\n        routerLink: '/controladoria/fluxo-caixa/empresas',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getEmpresas(param) {\r\n    this.spinnerFullScreen = true;\r\n    this.empresaService.getEmpresas(param).subscribe((response) => {\r\n      this.empresas = response.body['data'];\r\n      this.spinnerFullScreen = false;\r\n      this.form.patchValue(response.body['data'][0]);\r\n    });\r\n  }\r\n\r\n  putEmpresas() {\r\n    this.spinnerFullScreen = true;\r\n    this.empresaService.putEmpresas(this.getParams()).subscribe(\r\n      (response) => {\r\n        if (response.status === 200)\r\n          this.notice.success(response.body['mensagem']);\r\n        this.location.back();\r\n      },\r\n      (error) => this.notice.error()\r\n    );\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    if (params.hasOwnProperty('id')) {\r\n      this.getEmpresas({ COD_EMPR: params.id });\r\n    }\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","import { Injectable, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControladoriaFluxoCaixaService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  private modalEmitter: EventEmitter<any> = new EventEmitter();\r\n  private detailPanelEmitter: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTipos() {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/tipo`\r\n    );\r\n  }\r\n\r\n  getFluxoCaixa(params) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/fluxo-caixa`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getLog(params) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/logs`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  setStateModal(params = { state: true, template: undefined, data: [] }): void {\r\n    return this.modalEmitter.emit(params);\r\n  }\r\n\r\n  getStateModal() {\r\n    return this.modalEmitter;\r\n  }\r\n\r\n  setDetailPanel(value: string) {\r\n    return this.detailPanelEmitter.emit(value);\r\n  }\r\n\r\n  getDetailPanel() {\r\n    return this.detailPanelEmitter;\r\n  }\r\n\r\n  postCadastrar(param) {\r\n    if (!param.COD_LANCAMENTO) {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/fluxo-caixa`,\r\n        param,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n    return this.http.put(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/fluxo-caixa`,\r\n      param,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { Location } from '@angular/common';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ControladoriaTiposFluxoCaixaService } from '../../services/tipos-fluxo-caixa.service';\r\nimport { ControladoriaFluxoCaixaService } from '../../services/fluxo-caixa.service';\r\n\r\n@Component({\r\n  selector: 'cadastro-tipos-fluxo-caixa',\r\n  templateUrl: './tipos-fluxo-caixa.component.html',\r\n  styleUrls: ['./tipos-fluxo-caixa.component.scss']\r\n})\r\nexport class ControladoriaCadastroTiposFluxoCaixaComponent implements OnInit {\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  appTitle = 'Cadastro de Lançamentos';\r\n  form: FormGroup;\r\n  tipos = [];\r\n  tiposLancamentos = [];\r\n  idLancLanc: number;\r\n\r\n  constructor(\r\n    private cadastroTiposService: ControladoriaTiposFluxoCaixaService,\r\n    private fluxoCaixaService: ControladoriaFluxoCaixaService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private notice: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private location: Location,\r\n    private dateService: DateService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      COD_TIPO: [null, Validators.required],\r\n      DESC_TIPO_LANCAMENTO: [null, Validators.required],\r\n      COD_TIPO_LANCAMENTO: [null],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getTipos();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: 'Tipos de Lançamentos',\r\n        routerLink: '/controladoria/fluxo-caixa/tipos-fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getTipos() {\r\n    this.fluxoCaixaService.getTipos().subscribe((response) => {\r\n      this.tipos = response['data'];\r\n    });\r\n  }\r\n\r\n  getTiposFluxoCaixa(params) {\r\n    this.spinnerFullScreen = true;\r\n    this.cadastroTiposService.getTiposFluxoCaixa(params).subscribe((response) => {\r\n      this.form.patchValue(response.body['data'][0]);\r\n      this.spinnerFullScreen = false;\r\n    });\r\n  }\r\n\r\n  getTiposLancamentosAtualizado() {\r\n    let lista = this.tiposLancamentos[0];\r\n    this.form.controls['cadastroTipo'].setValue(lista.COD_TIPO);\r\n    this.form.controls['cadastroLancamento'].setValue(\r\n      lista.DESC_TIPO_LANCAMENTO\r\n    );\r\n  }\r\n\r\n  putTiposFluxoCaixa() {\r\n    this.spinnerFullScreen = true;\r\n    this.cadastroTiposService.putTiposFluxoCaixa(this.getParams()).subscribe(\r\n      (response) => {\r\n        if (response.status === 200) {\r\n          this.notice.success(response.body['mensagem']);\r\n          this.location.back();\r\n        }\r\n      },\r\n      (error) => this.notice.error()\r\n    );\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n\r\n    if (params.hasOwnProperty('id')) {\r\n      this.getTiposFluxoCaixa({ COD_TIPO_LANCAMENTO: params.id });\r\n    }\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"putEmpresas()\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <div class=\\\"form-group col-md-12 p-0\\\">\\r\\n              <label for=\\\"lancamento\\\"> Nome Empresa </label>\\r\\n              <input\\r\\n                id=\\\"empresa\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"DESC_EMPR\\\"\\r\\n                [ngClass]=\\\"onFieldError('DESC_EMPR') + ' ' + onFieldRequired('DESC_EMPR')\\\">\\r\\n            </div>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('DESC_EMPR')\\\"\\r\\n              message=\\\"Informar empresa é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","export default \"<p>fluxo-caixa works!</p>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ControladoriaEmpresasService } from '../../services/empresas.service';\r\n\r\n@Component({\r\n  selector: 'lista-empresas',\r\n  templateUrl: './empresas.component.html',\r\n  styleUrls: ['./empresas.component.scss']\r\n})\r\nexport class ControladoriaListaEmpresasComponent implements OnInit {\r\n  appTitle = 'Empresas';\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  noResult = false;\r\n  empresas = [];\r\n  dadosEmpty = false;\r\n\r\n  /* Config Table */\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: false,\r\n  };\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private empresaService: ControladoriaEmpresasService,\r\n    private route: Router,\r\n    private notice: PNotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getEmpresas();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  getEmpresas() {\r\n    let idLancEmpr = 0;\r\n    this.spinnerFullScreen = true;\r\n    this.empresaService.getEmpresas(idLancEmpr).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe empresas cadastradas.');\r\n        this.spinnerFullScreen = false;\r\n      } else {\r\n        this.empresas = response.body['data'];\r\n        this.totalItems = response.body['data'].length;\r\n        this.spinnerFullScreen = false;\r\n        this.noResult = true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9jYWRhc3Ryb3MvdGlwb3MtZmx1eG8tY2FpeGEvdGlwb3MtZmx1eG8tY2FpeGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <h5>Log de lançamentos e alterações de fluxo de caixa</h5>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div [ngClass]=\\\"{'col-12': !showDetailPanel, 'col-7 pr-0': showDetailPanel}\\\">\\r\\n        <custom-table [config]=\\\"tableLogConfig\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Nr. Lançamento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Tipo Lançamento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Descrição Lançamento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Empresa de Lançamento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Empresa de Recebimento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Cod. Usuário de Alteração </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Nome Usuário de Alteração </th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody >\\r\\n            <tr class=\\\"text-center text-white\\\" (click)=\\\"openTab(dados)\\\">\\r\\n              <td class=\\\"text-center bg-primary\\\">{{ dados?.COD_LANCAMENTO }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\">{{ dados?.DESC_TIPO | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\">{{ dados?.DESC_TIPO_LANCAMENTO | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ dados?.DESC_EMPR_LANCAMENTO | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ dados?.DESC_EMPR_RECEBIMENTO | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ dados?.COD_USUARIO }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ dados?.NM_USUARIO }}</td>\\r\\n            </tr>\\r\\n            <tr class=\\\"text-center\\\" *ngFor=\\\"let item of items | slice : begin : end; let i = index\\\" (click)=\\\"openTab(item)\\\">\\r\\n              <td class=\\\"text-center\\\">{{ item?.COD_LANCAMENTO }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item?.DESC_TIPO | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item?.DESC_TIPO_LANCAMENTO | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.DESC_EMPR_LANCAMENTO | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.DESC_EMPR_RECEBIMENTO | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.COD_USUARIO }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.NM_USUARIO }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n        <div class=\\\"mt-3\\\">\\r\\n          Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n          <div class=\\\"row justify-content-between\\\">\\r\\n            <div class=\\\"ml-3\\\">\\r\\n              <pagination\\r\\n                [maxSize]=\\\"10\\\"\\r\\n                [totalItems]=\\\"totalItems\\\"\\r\\n                [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n                (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n                [boundaryLinks]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"currentPage\\\"\\r\\n                previousText=\\\"&lsaquo;\\\"\\r\\n                nextText=\\\"&rsaquo;\\\"\\r\\n                firstText=\\\"&laquo;\\\"\\r\\n                lastText=\\\"&raquo;\\\">\\r\\n              </pagination>\\r\\n            </div>\\r\\n            <div class=\\\"mr-2 pr-1\\\">\\r\\n              <button  \\r\\n                type=\\\"button\\\" class=\\\"btn btn-secondary mr-1\\\" (click)=\\\"modalRef.hide()\\\"\\r\\n                >\\r\\n                Fechar \\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <empty-result\\r\\n          message=\\\"Nenhuma informação encontrada\\\"\\r\\n          class=\\\"my-3\\\"\\r\\n          *ngIf=\\\"dadosEmpty\\\">\\r\\n        </empty-result>\\r\\n      </div>\\r\\n      <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n        <detail-panel [panelTitle]=\\\"appTitle\\\">\\r\\n          <div class=\\\"d-flex\\\">\\r\\n            <div class=\\\"col-6 pl-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Cod. Usuário de Alteração </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.COD_USUARIO }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Empresa de lançamento </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DESC_EMPR_LANCAMENTO | uppercase }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Data de lançamento </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DATA_INCLUSAO }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Data de vencimento </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DATA_VENCIMENTO }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Data de execução </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DATA_EXECUCAO }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>  \\r\\n            <div class=\\\"col-6\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Nome Usuário de Alteração </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.NM_USUARIO | uppercase }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Empresa de recebimento </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DESC_EMPR_RECEBIMENTO | uppercase }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Valor </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.VALOR | currency:'BRL' }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Banco/Fundo </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DESC_BANCO | uppercase }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Observação </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.OBSERVACAO }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col p-0\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Justificativa da alteração </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ log.JUSTIFICATIVA | uppercase }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControladoriaEmpresasService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getEmpresas(param) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/empresas`,\r\n      {\r\n        params: param,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  putEmpresas(params) {\r\n    if (params.COD_EMPR != undefined) {\r\n      return this.http.put(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/empresas`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    } else {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/empresas`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9saXN0YXMvZW1wcmVzYXMvZW1wcmVzYXMuY29tcG9uZW50LnNjc3MifQ== */\";","// ANGULAR\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// BOOTSTRAP\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport {\r\n  BsModalService,\r\n  BsModalRef,\r\n  ModalDirective,\r\n} from 'ngx-bootstrap/modal';\r\n\r\n// SERVICES\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// INTERFACES\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { ControladoriaFluxoCaixaService } from '../../services/fluxo-caixa.service';\r\nimport { ControladoriaEmpresasService } from '../../services/empresas.service';\r\nimport { ControladoriaTiposFluxoCaixaService } from '../../services/tipos-fluxo-caixa.service';\r\n\r\n@Component({\r\n  selector: 'lista-fluxo-caixa',\r\n  templateUrl: './fluxo-caixa.component.html',\r\n  styleUrls: ['./fluxo-caixa.component.scss'],\r\n})\r\nexport class ControladoriaListaFluxoCaixaComponent\r\n  implements OnInit, OnDestroy {\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  breadCrumbTree: any = [];\r\n  data: Date = new Date();\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  form: FormGroup;\r\n  tipos = [];\r\n  tiposLancamentos = [];\r\n  empresas = [];\r\n  noResult = false;\r\n  dadosEmpty = false;\r\n  $activateRoutedSubscription: Subscription;\r\n  $lancamentoServiceSubscription: Subscription;\r\n  listas: any = [];\r\n  item: any = {};\r\n  showAdvancedFilter: boolean;\r\n  listaSelecionada: any = [];\r\n  listaLog: any = [];\r\n  editParam: any = [];\r\n\r\n  appTitle = 'Lançamento Fluxo de Caixa';\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  /* Painel de detalhes */\r\n  $showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanel = 'principal';\r\n\r\n  /* Config Table */\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  status = [\r\n    {\r\n      COD: '1',\r\n      NOME: 'Ativos',\r\n    },\r\n    {\r\n      COD: '0',\r\n      NOME: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: false,\r\n    ignoreBackdropClick: true,\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private route: Router,\r\n    private routerService: RouterService,\r\n    private fluxoCaixaService: ControladoriaFluxoCaixaService,\r\n    private tiposFluxoCaixaService: ControladoriaTiposFluxoCaixaService,\r\n    private empresaService: ControladoriaEmpresasService,\r\n    private notice: PNotifyService,\r\n    private localeService: BsLocaleService,\r\n    private dateService: DateService,\r\n    private xlsxService: XlsxService,\r\n    private detailPanelService: DetailPanelService,\r\n    private modalService: BsModalService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n\r\n    this.form = this.formBuilder.group({\r\n      DT_INIC: [this.dateService.getFirstDayMonth(), Validators.required],\r\n      DT_FINA: [this.data, Validators.required],\r\n      COD_TIPO: [null],\r\n      COD_TIPO_LANCAMENTO: [null],\r\n      COD_EMPR_LANCAMENTO: [null],\r\n      IN_STAT: [null],\r\n      JUSTIFICATIVA: [null, Validators.minLength(10)],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getTipos();\r\n    this.getEmpresas();\r\n    this.getActiveRoute();\r\n    this.onDetailPanel();\r\n    this.getTiposFluxoCaixa(this.getParams());\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  exportarExcel() {\r\n    this.xlsxService.exportFile(this.listas, 'lançamentos');\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$showDetailPanelSubscription.unsubscribe();\r\n    this.$activateRoutedSubscription.unsubscribe();\r\n    this.$lancamentoServiceSubscription.unsubscribe();\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('time').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onShowFilter() {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  getTipos() {\r\n    this.fluxoCaixaService.getTipos().subscribe((response) => {\r\n      this.tipos = response['data'];\r\n    });\r\n  }\r\n\r\n  getTiposFluxoCaixa(param) {\r\n    this.tiposFluxoCaixaService\r\n      .getTiposFluxoCaixa(param['COD_TIPO'])\r\n      .subscribe((response) => {\r\n        if (response.status === 204) {\r\n          this.notice.notice('Não existe tipos de lançamentos cadastrados.');\r\n        } else this.tiposLancamentos = response.body['data'];\r\n      });\r\n  }\r\n\r\n  getEmpresas() {\r\n    this.empresaService.getEmpresas(this.getParams()).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe empresas cadastradas.');\r\n      } else this.empresas = response.body['data'];\r\n    });\r\n  }\r\n\r\n  getActiveRoute() {\r\n    this.$activateRoutedSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        if (Object.keys(response).length > 0) {\r\n          const _response = this.routerService.getBase64UrlParams(response);\r\n          this.form.patchValue(_response);\r\n        }\r\n        this.getFluxoCaixa(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  getFluxoCaixa(params) {\r\n    this.spinnerFullScreen = true;\r\n\r\n    if (this.form.status === 'VALID') {\r\n      this.fluxoCaixaService\r\n        .getFluxoCaixa(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.spinnerFullScreen = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response) => {\r\n            if (response.status === 204) {\r\n              this.notice.notice('Não há informações para esse período.');\r\n              this.dadosEmpty = true;\r\n              this.noResult = false;\r\n            } else {\r\n              this.listas = response.body['data'];\r\n              this.listas.forEach((element, i) => {\r\n                element.INDICE = i + 1;\r\n              });\r\n              this.totalItems = response.body['data'].length;\r\n              this.dadosEmpty = false;\r\n              this.noResult = true;\r\n              this.showAdvancedFilter = true;\r\n            }\r\n          },\r\n          (error) => this.notice.error()\r\n        );\r\n    }\r\n  }\r\n\r\n  onDetailPanel(): void {\r\n    this.$showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        if (this.detailPanel !== 'principal') return;\r\n\r\n        this.showDetailPanel = event.showing;\r\n\r\n        if (!this.showDetailPanel)\r\n          this.listas.map((lista) => (lista.selected = false));\r\n      }\r\n    );\r\n\r\n    this.$lancamentoServiceSubscription = this.fluxoCaixaService\r\n      .getDetailPanel()\r\n      .subscribe((event) => {\r\n        this.detailPanel = event;\r\n        this.detailPanelService.loadedFinished(false);\r\n      });\r\n  }\r\n\r\n  openTab(item) {\r\n    this.listas.map((lista) => (lista.selected = false));\r\n    this.item = item;\r\n    this.item.selected = true;\r\n    this.fluxoCaixaService.setDetailPanel('principal');\r\n  }\r\n\r\n  openJustificativa(template, data) {\r\n    this.form.get('JUSTIFICATIVA').reset();\r\n    this.listaSelecionada = [];\r\n    this.listaSelecionada = data;\r\n    this.modalRef = this.modalService.show(template, this.config);\r\n  }\r\n\r\n  changeType() {\r\n    this.spinnerFullScreen = true;\r\n    let _saldo = JSON.parse(JSON.stringify(this.listaSelecionada));\r\n\r\n    _saldo.IN_STAT = _saldo['IN_STAT'] == '1' ? '0' : '1';\r\n    _saldo.JUSTIFICATIVA = this.form.value['JUSTIFICATIVA'];\r\n\r\n    this.fluxoCaixaService\r\n      .postCadastrar(_saldo)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200)\r\n            this.notice.success(response.body['mensagem']);\r\n          this.listaSelecionada.IN_STAT = _saldo.IN_STAT;\r\n        },\r\n        (error) => this.notice.error()\r\n      );\r\n  }\r\n\r\n  openLog(data) {\r\n    this.fluxoCaixaService.setStateModal(data);\r\n  }\r\n\r\n  onDuplicate(item) {\r\n    this.route.navigate(['./novo'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(item),\r\n    });\r\n  }\r\n\r\n  onEdit(item) {\r\n    this.route.navigate(['./', item.COD_LANCAMENTO], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(item),\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit,ViewChild,\r\n  ElementRef,\r\n  OnDestroy, } from '@angular/core';\r\n\r\n  import { BsModalRef, BsModalService } from 'ngx-bootstrap';\r\n  import { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n  import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n  import { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n  import { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n  import { Subscription } from 'rxjs';  \r\nimport { ControladoriaFluxoCaixaService } from '../../services/fluxo-caixa.service';\r\n\r\n@Component({\r\n  selector: 'controladoria-fluxo-caixa-logs',\r\n  templateUrl: './logs.component.html',\r\n  styleUrls: ['./logs.component.scss']\r\n})\r\nexport class ControladoriaFluxoCaixaLogsComponent implements OnInit, OnDestroy {\r\n  @ViewChild('template', { static: false }) template: ElementRef;\r\n  spinnerFullScreen: boolean = false;\r\n  dados: any = [];\r\n  items = [];\r\n  noResult = false;\r\n  dadosEmpty = false;\r\n  log: any = {};\r\n  $serviceSubscription: Subscription;\r\n  $serviceModalSubscription: Subscription;\r\n\r\n  appTitle = 'Detalhes';\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: false,\r\n    ignoreBackdropClick: true,\r\n    class: 'modal-xxl',\r\n  };\r\n\r\n  /* Painel de detalhes */\r\n  $showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanel = 'modal';\r\n\r\n  tableLogConfig: Partial<CustomTableConfig> = {\r\n    hover: true,\r\n  };\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private service: ControladoriaFluxoCaixaService,\r\n    private notice: PNotifyService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.openModal();\r\n    this.onDetailPanel();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$serviceSubscription.unsubscribe();\r\n    this.$serviceModalSubscription.unsubscribe();\r\n  }\r\n\r\n  openModal(): void {\r\n    this.$serviceModalSubscription = this.service\r\n      .getStateModal()\r\n      .subscribe((response) => {\r\n        console.log(response)\r\n        this.dados = response;\r\n        this.modalRef = this.modalService.show(this.template, this.config);\r\n        this.showDetailPanel = false;\r\n        this.getLog();\r\n      });\r\n  }\r\n\r\n  getLog() {\r\n    this.items = [];\r\n    this.spinnerFullScreen = true;\r\n    let param = {\r\n      COD_LANCAMENTO: this.dados['COD_LANCAMENTO'],\r\n    };\r\n    this.service.getLog(param).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe log registrado.');\r\n        this.spinnerFullScreen = false;\r\n      } else {\r\n        this.items = response.body['data'];\r\n        this.totalItems = response.body['data'].length;\r\n        this.dadosEmpty = false;\r\n        this.noResult = true;\r\n        this.spinnerFullScreen = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  onDetailPanel(): void {\r\n    this.$showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        if (this.detailPanel !== 'modal') return;\r\n\r\n        this.showDetailPanel = event.showing;\r\n        if (!this.showDetailPanel)\r\n          this.items.map((item) => (item.selected = false));\r\n      }\r\n    );\r\n\r\n    this.$serviceSubscription = this.service\r\n      .getDetailPanel()\r\n      .subscribe((event) => {\r\n        this.detailPanel = event;\r\n        this.detailPanelService.loadedFinished(false);\r\n      });\r\n  }\r\n\r\n  openTab(log) {\r\n    console.log(log);\r\n    this.items.map((item) => (item.selected = false));\r\n    this.log = log;\r\n    this.log.selected = true;\r\n    this.service.setDetailPanel('modal');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { Location } from '@angular/common';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ControladoriaBancosService } from '../../services/bancos.service';\r\n\r\n@Component({\r\n  selector: 'cadastro-bancos',\r\n  templateUrl: './bancos.component.html',\r\n  styleUrls: ['./bancos.component.scss']\r\n})\r\nexport class ControladoriaCadastroBancosComponent implements OnInit {\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  appTitle = 'Cadastro de Bancos/Fundos';\r\n  form: FormGroup;\r\n  bancos = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private notice: PNotifyService,\r\n    private bancosService: ControladoriaBancosService,\r\n    private route: Router,\r\n    private location: Location,\r\n    private dateService: DateService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      DESC_BANCO: [null, Validators.required],\r\n      COD_BANCO: [null],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: 'Bancos',\r\n        routerLink: '/controladoria/fluxo-caixa/bancos',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getBancos(param) {\r\n    this.spinnerFullScreen = true;\r\n    this.bancosService.getBancos(param).subscribe((response) => {\r\n      this.bancos = response.body['data'];\r\n      this.spinnerFullScreen = false;\r\n      this.form.patchValue(response.body['data'][0]);\r\n    });\r\n  }\r\n\r\n  putBancos() {\r\n    this.spinnerFullScreen = true;\r\n    this.bancosService.putBancos(this.getParams()).subscribe(\r\n      (response) => {\r\n        if (response.status === 200)\r\n          this.notice.success(response.body['mensagem']);\r\n        this.location.back();\r\n      },\r\n      (error) => this.notice.error()\r\n    );\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    if (params.hasOwnProperty('id')) {\r\n      this.getBancos({ COD_BANCO: params.id });\r\n    }\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9jYWRhc3Ryb3MvZW1wcmVzYXMvZW1wcmVzYXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9mbHV4by1jYWl4YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    [routerLink]=\\\"['./novo']\\\"\\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- <advanced-filter #scrollToFilter></advanced-filter> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" [hidden] = \\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Código Banco/Fundo </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Nome </th>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let banco of bancos | slice : begin : end; let i = index\\\" class=\\\"text-center\\\">\\r\\n            <td class=\\\"text-center\\\">{{ banco.COD_BANCO }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ banco.DESC_BANCO | uppercase }}</td>\\r\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n              <span tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', banco.COD_BANCO]\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9saXN0YXMvdGlwb3MtZmx1eG8tY2FpeGEvdGlwb3MtZmx1eG8tY2FpeGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    [routerLink]=\\\"['./novo']\\\" \\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n  <button\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    >\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- Início dos Filtros -->\\r\\n  <advanced-filter #scrollToFilter>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row justify-content-center\\\">\\r\\n        <div class=\\\"form-group col-md-4\\\">\\r\\n          <label for=\\\"tipo\\\"> Tipo de lançamento</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tipos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipo\\\"\\r\\n            bindLabel=\\\"DESC_TIPO\\\"\\r\\n            bindValue=\\\"COD_TIPO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"COD_TIPO\\\"\\r\\n            (change) =\\\"getTiposFluxoCaixa($event)\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-4\\\">\\r\\n          <label for=\\\"tipoLancamentos\\\"> Tipo de lançamentos </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tiposLancamentos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipoLancamentos\\\"\\r\\n            bindLabel=\\\"DESC_TIPO_LANCAMENTO\\\"\\r\\n            bindValue=\\\"COD_TIPO_LANCAMENTO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"COD_TIPO_LANCAMENTO\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" [hidden] = \\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Nr. Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Descrição Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Tipo Lançamento </th>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let lancamento of tiposLancamentos | slice : begin : end; let i = index\\\" class=\\\"text-center\\\">\\r\\n              <td [ngClass]=\\\"{\\r\\n                'border-success'    : lancamento.DESC_TIPO == 'Recebimento',\\r\\n                'border-danger'     : lancamento.DESC_TIPO == 'Pagamento'\\r\\n              }\\\"\\r\\n              >{{ lancamento.COD_TIPO_LANCAMENTO }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ lancamento.DESC_TIPO_LANCAMENTO | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ lancamento.DESC_TIPO | uppercase }}</td>\\r\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n              <span tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', lancamento.COD_TIPO_LANCAMENTO]\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";"]}