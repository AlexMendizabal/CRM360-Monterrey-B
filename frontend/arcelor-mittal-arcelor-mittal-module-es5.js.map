{"version":3,"sources":["webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/classes-materiais/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/arcelor-mittal-routing.module.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/classes-materiais/classes-materiais.component.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/classes-materiais/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/classes-materiais/classes-materiais.component.scss","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/arcelor-mittal.component.scss","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/classes-materiais/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/arcelor-mittal.module.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/classes-materiais/classes-materiais.component.html","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/arcelor-mittal.component.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/classes-materiais/formulario/formulario.component.html","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/classes-materiais/classes-materiais.service.ts","webpack:///src/app/modules/comercial/integracoes/arcelor-mittal/arcelor-mittal.component.html"],"names":["ComercialIntegracoesArcelorMittalClassesMateriaisFormularioComponent","classesMateriaisService","activatedRoute","formBuilder","location","pnotifyService","loaderFullScreen","loadingNavBar","formChanged","submittingForm","breadCrumbTree","classesMateriais","getPNotify","setBreadCrumb","getFormFields","setFormBuilder","params","subscribe","descricao","routerLink","getClasses","pipe","next","response","handleGetFormFields","error","back","form","group","idArcelorMittal","required","dsArcelorMittal","value","snapshot","data","disabled","idManetoni","updateAssociacao","success","selector","template","routes","path","children","component","resolve","detalhes","loadChildren","then","m","ComercialIntegracoesArcelorMittalVendedoresModule","ComercialIntegracoesArcelorMittalRoutingModule","imports","forChild","exports","ComercialIntegracoesArcelorMittalClassesMateriaisComponent","getLista","handleGetListaError","ComercialIntegracoesClassesMateriaisFormularioResolverGuard","route","getAssociacoes","responseCode","result","providedIn","ComercialIntegracoesArcelorMittalModule","declarations","forRoot","ComercialIntegracoesArcelorMittalComponent","atividadesService","_atividadesService","titleService","atividades","setTitle","registrarAcesso","getAtividadesInternas","idSubModulo","matricula","JSON","parse","localStorage","getItem","info","submoduloId","exibeSidebar","getAtividades","status","handleAtividadesInternasError","body","ComercialIntegracoesArcelorMittalClassesMateriaisService","http","API","get","put"],"mappings":"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","file":"arcelor-mittal-arcelor-mittal-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { finalize } from 'rxjs/operators';\n\n// Services\nimport { ComercialIntegracoesArcelorMittalClassesMateriaisService } from './../classes-materiais.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-integracoes-arcelor-mittal-classes-materiais-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class ComercialIntegracoesArcelorMittalClassesMateriaisFormularioComponent\n  implements OnInit {\n  loaderFullScreen = true;\n  loadingNavBar = false;\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  classesMateriais: any = [];\n\n  constructor(\n    private classesMateriaisService: ComercialIntegracoesArcelorMittalClassesMateriaisService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private location: Location,\n    private pnotifyService: PNotifyService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.setBreadCrumb();\n    this.getFormFields();\n    this.setFormBuilder();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Integração com Arcelor Mittal',\n          routerLink: `/comercial/integracoes/arcelor-mittal/${params['idSubModulo']}`\n        },\n        {\n          descricao: 'Classes de Materiais',\n          routerLink: `/comercial/integracoes/arcelor-mittal/${params['idSubModulo']}/classes-de-materiais`\n        },\n        {\n          descricao: 'Cadastro'\n        }\n      ];\n    });\n  }\n\n  getFormFields(): void {\n    this.classesMateriaisService\n      .getClasses()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response['responseCode'] === 200) {\n            this.classesMateriais = response['result'];\n          } else {\n            this.handleGetFormFields();\n          }\n        },\n        error: (error: any) => {\n          this.handleGetFormFields();\n        }\n      });\n  }\n\n  handleGetFormFields(): void {\n    this.pnotifyService.error();\n    this.location.back();\n  }\n\n  setFormBuilder(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.form = this.formBuilder.group({\n        idArcelorMittal: [params['id'], Validators.required],\n        dsArcelorMittal: [\n          {\n            value: this.activatedRoute.snapshot.data['detalhes'][\n              'nomeArcelorMittal'\n            ],\n            disabled: true\n          }\n        ],\n        idManetoni: [this.activatedRoute.snapshot.data['detalhes']['result']]\n      });\n    });\n  }\n\n  onSave() {\n    this.loadingNavBar = true;\n\n    this.classesMateriaisService\n      .updateAssociacao(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response) => {\n          if (response['responseCode'] === 200) {\n            this.pnotifyService.success();\n            this.location.back();\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { ComercialIntegracoesClassesMateriaisFormularioResolverGuard } from './classes-materiais/formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialIntegracoesArcelorMittalComponent } from './arcelor-mittal.component';\nimport { ComercialIntegracoesArcelorMittalClassesMateriaisComponent } from './classes-materiais/classes-materiais.component';\nimport { ComercialIntegracoesArcelorMittalClassesMateriaisFormularioComponent } from './classes-materiais/formulario/formulario.component';\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        component: ComercialIntegracoesArcelorMittalComponent,\n      },\n      {\n        path: 'classes-de-materiais',\n        children: [\n          {\n            path: '',\n            component: ComercialIntegracoesArcelorMittalClassesMateriaisComponent,\n          },\n          {\n            path: 'editar/:id',\n            component: ComercialIntegracoesArcelorMittalClassesMateriaisFormularioComponent,\n            resolve: {\n              detalhes: ComercialIntegracoesClassesMateriaisFormularioResolverGuard,\n            },\n          },\n        ],\n      },\n      {\n        path: 'vendedores',\n        loadChildren: () =>\n          import('./vendedores/vendedores.module').then(\n            (m) => m.ComercialIntegracoesArcelorMittalVendedoresModule\n          ),\n      },\n    ],\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialIntegracoesArcelorMittalRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { finalize } from 'rxjs/operators';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialIntegracoesArcelorMittalClassesMateriaisService } from './classes-materiais.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-integracoes-arcelor-mittal-classes-materiais',\n  templateUrl: './classes-materiais.component.html',\n  styleUrls: ['./classes-materiais.component.scss']\n})\nexport class ComercialIntegracoesArcelorMittalClassesMateriaisComponent\n  implements OnInit {\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  classesMateriais: any = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private location: Location,\n    private pnotifyService: PNotifyService,\n    private classesMateriaisService: ComercialIntegracoesArcelorMittalClassesMateriaisService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.setBreadCrumb();\n    this.getLista();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Integração com Arcelor Mittal',\n          routerLink: `/comercial/integracoes/arcelor-mittal/${params['idSubModulo']}`\n        },\n        {\n          descricao: 'Classe de materiais'\n        }\n      ];\n    });\n  }\n\n  getLista(): void {\n    this.classesMateriaisService\n      .getLista()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response['responseCode'] === 200) {\n            this.classesMateriais = response['result'];\n          } else {\n            this.handleGetListaError();\n          }\n        },\n        error: (error: any) => {\n          this.handleGetListaError();\n        }\n      });\n  }\n\n  handleGetListaError(): void {\n    this.pnotifyService.error();\n    this.location.back();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2FyY2Vsb3ItbWl0dGFsL2NsYXNzZXMtbWF0ZXJpYWlzL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2FyY2Vsb3ItbWl0dGFsL2NsYXNzZXMtbWF0ZXJpYWlzL2NsYXNzZXMtbWF0ZXJpYWlzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2FyY2Vsb3ItbWl0dGFsL2FyY2Vsb3ItbWl0dGFsLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialIntegracoesArcelorMittalClassesMateriaisService } from '../classes-materiais.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialIntegracoesClassesMateriaisFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private classesMateriaisService: ComercialIntegracoesArcelorMittalClassesMateriaisService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params['id']) {\n      return this.classesMateriaisService.getAssociacoes(route.params['id']);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      responseCode: 200,\n      result: []\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// Modules\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialIntegracoesArcelorMittalRoutingModule } from './arcelor-mittal-routing.module';\n\n// Components\nimport { ComercialIntegracoesArcelorMittalComponent } from './arcelor-mittal.component';\nimport { ComercialIntegracoesArcelorMittalClassesMateriaisComponent } from './classes-materiais/classes-materiais.component';\nimport { ComercialIntegracoesArcelorMittalClassesMateriaisFormularioComponent } from './classes-materiais/formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialIntegracoesArcelorMittalComponent,\n    ComercialIntegracoesArcelorMittalClassesMateriaisComponent,\n    ComercialIntegracoesArcelorMittalClassesMateriaisFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgSelectModule,\n    ReactiveFormsModule,\n    NotFoundModule,\n    SharedModule.forRoot(),\n    PipesModule.forRoot(),\n    TemplatesModule.forRoot(),\n    ComercialIntegracoesArcelorMittalRoutingModule,\n  ],\n})\nexport class ComercialIntegracoesArcelorMittalModule {}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Classe de materiais\\\"></app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <custom-table>\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Classe (Arcelor Mittal)</th>\\n            <th scope=\\\"col\\\">Classe (Manetoni)</th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of classesMateriais\\\">\\n            <td>{{ item.nomeArcelorMittal }}</td>\\n            <td>\\n              <div *ngIf=\\\"item.associado == 0\\\">\\n                <i class=\\\"far fa-square text-danger mr-2\\\"></i>\\n                <span>Não associado</span>\\n              </div>\\n              <div *ngIf=\\\"item.associado == 1\\\">\\n                <i class=\\\"far fa-check-square text-success mr-2\\\"></i>\\n                <span>{{ item.nomeManetoni }}</span>\\n              </div>\\n            </td>\\n            <td class=\\\"text-right\\\">\\n              <a\\n                class=\\\"btn-icon-sm mr-2\\\"\\n                [routerLink]=\\\"['editar', item.idArcelorMittal]\\\">\\n                <i class=\\\"fas fa-edit\\\"></i>\\n              </a>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { AdminAtividadesService } from 'src/app/modules/admin/atividades/services/atividades.service';\n\n@Component({\n  selector: 'comercial-integracoes-arcelor-mittal',\n  templateUrl: './arcelor-mittal.component.html',\n  styleUrls: ['./arcelor-mittal.component.scss']\n})\nexport class ComercialIntegracoesArcelorMittalComponent implements OnInit {\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home'\n    },\n    {\n      descricao: 'Integração com Arcelor Mittal'\n    }\n  ];\n\n  atividades: any = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private _atividadesService: AdminAtividadesService,\n    private pnotifyService: PNotifyService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle('Integração com Arcelor Mittal');\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.registrarAcesso();\n      this.getAtividadesInternas(params['idSubModulo']);\n    });\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getAtividadesInternas(idSubModulo: number) {\n\n    let matricula = (JSON.parse(localStorage.getItem('currentUser')))?.info?.matricula;\n\n    let params = {\n      submoduloId: idSubModulo,\n      matricula: matricula,\n      exibeSidebar: 0\n    }\n\n    this._atividadesService\n      .getAtividades(params)\n      .subscribe(\n        response => {\n          if(response.status !== 200){\n            this.handleAtividadesInternasError();\n            return\n          }\n\n          this.atividades = response.body[\"data\"];\n          this.loaderFullScreen = false;\n\n        },\n        (error: any) => {\n          this.handleAtividadesInternasError();\n        }\n      )\n  }\n\n  // getAtividadesInternas(idSubModulo: number) {\n  //   this.atividadesService.getAtividadesInternas(idSubModulo).subscribe({\n  //     next: (response: any) => {\n  //       if (response['responseCode'] === 200) {\n  //         this.atividades = response['result'];\n  //         this.loaderFullScreen = false;\n  //       } else {\n  //         this.handleAtividadesInternasError();\n  //       }\n  //     },\n  //     error: (error: any) => {\n  //       this.handleAtividadesInternasError();\n  //     }\n  //   });\n  // }\n\n  handleAtividadesInternasError() {\n    this.pnotifyService.error();\n    this.location.back();\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Cadastro de classes\\\">\\n  <button \\n  (click)=\\\"onSave()\\\"\\n  [disabled] = \\\"form.status == 'INVALID'\\\"\\n  >\\n  Salvar\\n  </button> \\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"dsArcelorMittal\\\">Classe  (Arcelor Mittal)</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"dsArcelorMittal\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"idManetoni\\\">Classe  (Manetoni)</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              multiple = \\\"true\\\"\\n              [closeOnSelect]=\\\"false\\\"\\n              [items]=\\\"classesMateriais\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"SELECIONE...\\\"\\n              labelForId=\\\"idManetoni\\\"\\n              bindLabel=\\\"nomeClasse\\\"\\n              bindValue=\\\"idClasse\\\"\\n              id=\\\"idManetoni\\\"\\n              formControlName=\\\"idManetoni\\\"\\n            >\\n            </ng-select>\\n          </div>\\n        </div>        \\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialIntegracoesArcelorMittalClassesMateriaisService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/integracoes/arcelor-mittal/classes-materiais`;\n\n  constructor(protected http: HttpClient) {}\n\n  getLista() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1));\n  }\n\n  getAssociacoes(idArcelorMittal: number) {\n    return this.http\n      .get(`${this.API}/associacoes/${idArcelorMittal}`)\n      .pipe(take(1));\n  }\n\n  getClasses() {\n    return this.http.get(`${this.API}/classes`).pipe(take(1));\n  }\n\n  updateAssociacao(data: any) {\n    return this.http.put(`${this.API}/salvar`, data).pipe(take(1));\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Integração com Arcelor Mittal\\\"></app-header>\\n<app-body [show]=\\\"!loaderFullScreen\\\" [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-10\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-md-3 text-center mb-4 mb-sm-0\\\" *ngFor=\\\"let atividade of atividades\\\">\\n          <card-button\\n            [icon]=\\\"atividade.iconeAtividade\\\"\\n            [text]=\\\"atividade.nomeAtividade\\\"\\n            [routerLink]=\\\"[atividade.rotaAtividade]\\\">\\n          </card-button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";"]}