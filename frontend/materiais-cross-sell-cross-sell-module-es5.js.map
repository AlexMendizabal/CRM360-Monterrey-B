{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/cross-sell/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/cross-sell/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/cross-sell/formulario/formulario.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/cross-sell/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/cross-sell/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/cross-sell/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/cross-sell/cross-sell.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/cross-sell/cross-sell.service.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/cross-sell/cross-sell-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/cross-sell/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialCadastrosMateriaisCrossSellFormularioComponent","activatedRoute","router","location","formBuilder","materiaisCrossSellService","pnotifyService","atividadesService","titleService","confirmModalService","MASKS","loaderFullScreen","breadCrumbTree","tableConfigAssocMateriais","fixedHeader","bodyHeight","hover","tableConfigMateriais","formChanged","showMateriais","linhas","classes","filteredClasses","toggleAll","searching","materiaisLista","materiaisListaLoaded","materiaisListaEmpty","getPNotify","registrarAcesso","setBreadCrumb","getFilterValues","setFormBuilder","setTitle","subscribe","params","id","appTitle","action","descricao","routerLink","idSubModulo","pipe","response","responseCode","result","error","back","resolver","snapshot","data","detalhes","success","form","group","codCrossSell","codLinha","codClasse","codMaterial","value","disabled","nomeMaterial","codSituacao","required","assocMateriais","array","setMateriais","materiais","length","i","onAddMaterial","get","material","manipulateForm","source","checkMaterialExists","push","codAssociacao","setTimeout","markAsTouched","markAsDirty","some","el","index","confirmDelete","deleteMaterial","showConfirm","removeAt","loaderNavbar","desassociaMaterial","hasOwnProperty","mensagem","onFilterMateriaisMaisVendidos","getRawValue","getMateriais","map","o","Object","assign","checked","codigoMaterial","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","checkFormValidation","valid","submittingForm","save","reset","navigateTo","navigate","relativeTo","notice","isValid","confirm","event","limparMaterialPrincipal","onInput","controls","setValue","selector","template","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialCadastrosMateriaisCrossSellListaComponent","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosLoaded","dadosEmpty","setFormFilter","onDetailPanelEmitter","setCrossSellSelecionada","showDetailPanelSubscription","config","showing","formValue","checkRouterParams","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","keys","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","crossSellSelecionada","codUsuario","nomeUsuario","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaCrossSell","total","crossSell","borderClass","page","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","getAssociacoesMateriais","loadedFinished","confirmActivate","asObservable","activateCrossSell","refreshMainData","confirmInactive","inactivateCrossSell","ComercialCadastrosMateriaisCrossSellModule","declarations","imports","forRoot","providers","ComercialCadastrosMateriaisCrossSellService","http","comercialService","tidSoftwareService","API","httpParams","param","append","record","post","put","updateCrossSell","saveCrossSell","getLinhas","getClasses","FormDeactivateGuard","component","route","state","formCanDeactivate","routes","path","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMateriaisCrossSellRoutingModule","forChild","exports","ComercialCadastrosMateriaisCrossSellFormularioResolverGuard","getDetalhes","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"materiais-cross-sell-cross-sell-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY3Jvc3Mtc2VsbC9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Cross-Sell de materiais\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"material\\\">\\r\\n                <span class=\\\"mr-1\\\">Material</span>\\r\\n                <ng-template #tooltipLabelMaterialTemplate>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Código</p>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">do material</p>\\r\\n                </ng-template>\\r\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelMaterialTemplate\\\" container=\\\"body\\\"></i>\\r\\n              </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"material\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"0\\\">Inativos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Código \\\"\\r\\n                [active]=\\\"orderBy == 'codMaterial'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codMaterial')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Material\\\"\\r\\n                [active]=\\\"orderBy == 'nomeMaterial'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeMaterial')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let crossSell of dados; let i = index;\\\" [class.table-active]=\\\"crossSell.codMaterial == crossSellSelecionada.codMaterial && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(crossSell)\\\"\\r\\n              (click)=\\\"onDetails(crossSell)\\\">\\r\\n              {{ crossSell.codMaterial }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(crossSell)\\\">\\r\\n              {{ crossSell.nomeMaterial | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(crossSell)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"crossSell.nomeUsuario === null\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"crossSell.nomeUsuario !== null\\\">\\r\\n                {{ crossSell.nomeUsuario | uppercase }}\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <span *ngIf=\\\"crossSell.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, crossSell)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"crossSell.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, crossSell)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(crossSell)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && !dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiais.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n              <th scope=\\\"col\\\">Material</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let material of materiais\\\">\\r\\n              <td class=\\\"text-center\\\">{{ material.codMaterial }}</td>\\r\\n              <td>{{ material.nomeMaterial | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { TabDirective } from 'ngx-bootstrap/tabs';\r\n\r\n// ng-brazil\r\nimport { MASKS } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisCrossSellService } from '../cross-sell.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { ICrossSell } from '../models/cross-sell';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-cross-sell-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisCrossSellFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = MASKS;\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  action: string;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  limparMaterialPrincipal: boolean;\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  showMateriais = true;\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n  filteredClasses: Array<any> = [];\r\n\r\n  toggleAll = false;\r\n  searching = false;\r\n\r\n  materiaisLista: Array<any> = [];\r\n  materiaisListaLoaded = false;\r\n  materiaisListaEmpty = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private materiaisCrossSellService: ComercialCadastrosMateriaisCrossSellService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFilterValues();\r\n    this.setFormBuilder();\r\n    this.titleService.setTitle('Cadastro de cross-sell de materiais');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar cross-sell de materiais';\r\n        this.action = 'update';\r\n      } else {\r\n        this.appTitle = 'Nova cross-sell de materiais';\r\n        this.action = 'create';\r\n      }\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Cross-Sell de materiais',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/cross-sell/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.materiaisCrossSellService\r\n      .getFilterValues()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n\r\n        if (response[1].responseCode === 200) {\r\n          this.classes = response[1].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\r\n\r\n    if (resolver.success === true) {\r\n      const detalhes: ICrossSell = resolver.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codCrossSell: [detalhes.codCrossSell],\r\n        codLinha: [detalhes.codLinha],\r\n        codClasse: [detalhes.codClasse],\r\n        codMaterial: [{ value: detalhes.codMaterial, disabled: true }],\r\n        nomeMaterial: [{ value: detalhes.nomeMaterial, disabled: true }],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\r\n        assocMateriais: this.formBuilder.array([]),\r\n      });\r\n\r\n      this.setMateriais(detalhes.materiais);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  setMateriais(materiais: any): void {\r\n    if (materiais.length > 0) {\r\n      for (let i = 0; i < materiais.length; i++) {\r\n        this.onAddMaterial(materiais[i], false, 'application');\r\n      }\r\n    }\r\n  }\r\n\r\n  get assocMateriais(): FormArray {\r\n    return this.form.get('assocMateriais') as FormArray;\r\n  }\r\n\r\n  /**\r\n   * @source = 'application' || 'user'\r\n   * */\r\n  onAddMaterial(material: any, manipulateForm: boolean, source: string): void {\r\n    if (this.checkMaterialExists(material) === false) {\r\n      this.assocMateriais.push(\r\n        this.formBuilder.group({\r\n          codAssociacao: [material.codAssociacao],\r\n          codMaterial: [material.codMaterial],\r\n          nomeMaterial: [material.nomeMaterial],\r\n          source: [source],\r\n        })\r\n      );\r\n\r\n      if (this.form.value.assocMateriais.length > 9) {\r\n        if (this.tableConfigAssocMateriais.fixedHeader === false) {\r\n          this.showMateriais = false;\r\n          this.tableConfigAssocMateriais.fixedHeader = true;\r\n\r\n          setTimeout(() => {\r\n            this.showMateriais = true;\r\n          }, 1);\r\n        }\r\n      }\r\n\r\n      if (manipulateForm) {\r\n        this.form.markAsTouched();\r\n        this.form.markAsDirty();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkMaterialExists(material: any): boolean {\r\n    return this.form.value.assocMateriais.some((el: any) => {\r\n      return el.codMaterial === material.codMaterial;\r\n    });\r\n  }\r\n\r\n  onDeleteMaterial(index: number): void {\r\n    this.confirmDelete().subscribe((response: boolean) =>\r\n      response ? this.deleteMaterial(index) : null\r\n    );\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  deleteMaterial(index: number) {\r\n    if (this.form.value.assocMateriais[index].source === 'user') {\r\n      this.assocMateriais.removeAt(index);\r\n    } else if (this.form.value.assocMateriais[index].source === 'application') {\r\n      this.loaderNavbar = true;\r\n\r\n      this.activatedRoute.params.subscribe((params: any) => {\r\n        this.materiaisCrossSellService\r\n          .desassociaMaterial(\r\n            params.id,\r\n            this.form.value.assocMateriais[index].codAssociacao\r\n          )\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n            })\r\n          )\r\n          .subscribe(\r\n            (response: JsonResponse) => {\r\n              if (response.success) {\r\n                this.assocMateriais.removeAt(index);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            (error: any) => {\r\n              if (\r\n                error.error.hasOwnProperty('mensagem') &&\r\n                (error.mensagem !== null || error.mensagem !== '')\r\n              ) {\r\n                this.pnotifyService.error(error.error.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            }\r\n          );\r\n      });\r\n    }\r\n\r\n    this.form.markAsTouched();\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  onSelectTabMaisVendidos(): void {\r\n    if (this.materiaisListaLoaded && this.materiaisLista.length > 0) return;\r\n\r\n    this.onFilterMateriaisMaisVendidos();\r\n  }\r\n\r\n  onFilterMateriaisMaisVendidos(): void {\r\n    if (this.form.getRawValue().codMaterial !== null) {\r\n      this.searching = true;\r\n\r\n      let params = {\r\n        codMaterial: this.form.getRawValue().codMaterial,\r\n      };\r\n\r\n      this.materiaisCrossSellService\r\n        .getMateriais(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.searching = false;\r\n            this.loaderNavbar = false;\r\n            this.materiaisListaLoaded = true;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.materiaisLista = response.data.map(function (el: any) {\r\n                var o = Object.assign({}, el);\r\n                o.checked = 0;\r\n                return o;\r\n              });\r\n\r\n              if (this.materiaisLista.length > 9) {\r\n                this.tableConfigMateriais.fixedHeader = true;\r\n              } else {\r\n                this.tableConfigMateriais.fixedHeader = false;\r\n              }\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n              this.materiaisListaEmpty = true;\r\n            } else {\r\n              this.pnotifyService.error();\r\n              this.materiaisListaEmpty = true;\r\n            }\r\n          },\r\n          (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onToggleAll() {\r\n    this.toggleAll = !this.toggleAll;\r\n\r\n    for (let index = 0; index < this.materiaisLista.length; index++) {\r\n      this.materiaisLista[index].checked = this.toggleAll === true ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  onCheckMaterial(index: number, material: any): void {\r\n    this.materiaisLista[index].checked = material.checked == 0 ? 1 : 0;\r\n  }\r\n\r\n  onAssociarMateriais(): void {\r\n    this.toggleAll = false;\r\n\r\n    for (let index = 0; index < this.materiaisLista.length; index++) {\r\n      if (this.materiaisLista[index].checked === 1) {\r\n        const material = {\r\n          codMaterial: this.materiaisLista[index].codigoMaterial,\r\n          nomeMaterial: this.materiaisLista[index].descricao,\r\n        };\r\n\r\n        this.onAddMaterial(material, true, 'user');\r\n        this.materiaisLista[index].checked = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.action === 'update' && this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.checkFormValidation() && this.form.valid) {\r\n        if (this.form.value.assocMateriais.length > 0) {\r\n          this.loaderNavbar = true;\r\n          this.submittingForm = true;\r\n\r\n          this.materiaisCrossSellService\r\n            .save(this.form.getRawValue())\r\n            .pipe(\r\n              finalize(() => {\r\n                this.loaderNavbar = false;\r\n                this.submittingForm = false;\r\n              })\r\n            )\r\n            .subscribe(\r\n              (response: any) => {\r\n                if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === true\r\n                ) {\r\n                  this.form.reset();\r\n                  this.formChanged = false;\r\n                  this.pnotifyService.success(response.mensagem);\r\n\r\n                  this.activatedRoute.params.subscribe((params: any) => {\r\n                    let navigateTo: string;\r\n\r\n                    if (params.hasOwnProperty('id')) {\r\n                      navigateTo = '../../lista';\r\n                    } else {\r\n                      navigateTo = '../lista';\r\n                    }\r\n\r\n                    this.router.navigate([navigateTo], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  });\r\n                } else if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === false\r\n                ) {\r\n                  this.pnotifyService.error(response.mensagem);\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              },\r\n              (error: any) => {\r\n                this.pnotifyService.error();\r\n              }\r\n            );\r\n        } else {\r\n          this.pnotifyService.notice('Associe pelo menos um material.');\r\n        }\r\n      } else {\r\n        this.pnotifyService.notice('Selecione um material.');\r\n      }\r\n    }\r\n  }\r\n\r\n  checkFormValidation(): boolean {\r\n    let isValid = true;\r\n\r\n    if (this.form.getRawValue().codMaterial === null) {\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onLoaderNavbar(event: boolean): void {\r\n    this.loaderNavbar = event;\r\n  }\r\n\r\n  onLimparMaterialPrincipal(): void {\r\n    this.limparMaterialPrincipal = true;\r\n    this.onInput();\r\n\r\n    this.form.controls.codMaterial.setValue(null);\r\n    this.form.controls.nomeMaterial.setValue(null);\r\n\r\n    this.materiaisLista = [];\r\n\r\n    setTimeout(() => {\r\n      this.limparMaterialPrincipal = false;\r\n    }, 100);\r\n  }\r\n\r\n  materialPrincipal(material: any): void {\r\n    this.onInput();\r\n\r\n    this.form.controls.codLinha.setValue(material.codLinha);\r\n    this.form.controls.codClasse.setValue(material.codClasse);\r\n    this.form.controls.codMaterial.setValue(material.codigoMaterial);\r\n    this.form.controls.nomeMaterial.setValue(material.descricao);\r\n\r\n    this.onFilterMateriaisMaisVendidos();\r\n  }\r\n\r\n  materialAssociado(material: any): void {\r\n    this.onAddMaterial(material, true, 'user');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisCrossSellService } from '../cross-sell.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { ICrossSell, IMateriaisCrossSell } from '../models/cross-sell';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-cross-sell-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisCrossSellListaComponent\r\n  implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'nomeMaterial';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<ICrossSell> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  crossSellSelecionada: ICrossSell;\r\n  materiais: Array<IMateriaisCrossSell> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private materiaisCrossSellService: ComercialCadastrosMateriaisCrossSellService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Cross-Sell de materiais');\r\n    this.onDetailPanelEmitter();\r\n    this.setCrossSellSelecionada();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Cross-Sell de materiais',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      material: [formValue.material],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      material: null,\r\n      codSituacao: '',\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setCrossSellSelecionada(): void {\r\n    this.crossSellSelecionada = {\r\n      codCrossSell: null,\r\n      codMaterial: null,\r\n      nomeMaterial: null,\r\n      codUsuario: null,\r\n      nomeUsuario: null,\r\n      materiais: [],\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.material) {\r\n      params.material = this.form.value.material;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.pagina = this.form.value.pagina;\r\n    params.registros = this.form.value.registros;\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.materiaisCrossSellService\r\n      .getListaCrossSell(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.totalItems = this.dados[0].total;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  classStatusBorder(crossSell: ICrossSell): string {\r\n    let borderClass: string;\r\n\r\n    if (crossSell.codSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    } else if (crossSell.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    if (this.form.value.pagina != event.page) {\r\n      this.detailPanelService.hide();\r\n      this.form.value.pagina = event.page;\r\n      this.onFilter();\r\n\r\n      this.scrollToFilter.nativeElement.scrollIntoView({\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }\r\n\r\n  onDetails(crossSell: ICrossSell): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Associações (${crossSell.nomeMaterial})`;\r\n    this.setCrossSellSelecionada();\r\n    this.crossSellSelecionada = crossSell;\r\n    this.materiais = [];\r\n\r\n    this.materiaisCrossSellService\r\n      .getAssociacoesMateriais(crossSell.codCrossSell)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.materiais = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  onEdit(crossSell: ICrossSell): void {\r\n    this.router.navigate(['../editar', crossSell.codCrossSell], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, crossSell: ICrossSell): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateCrossSell(index, crossSell) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(crossSell);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dados[index].codSituacao = 0;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateCrossSell(index: number, crossSell: ICrossSell): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 1;\r\n\r\n    return this.materiaisCrossSellService.activateCrossSell(\r\n      crossSell.codCrossSell\r\n    );\r\n  }\r\n\r\n  onInactivate(index: number, crossSell: ICrossSell): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateCrossSell(index, crossSell) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(crossSell);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dados[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateCrossSell(index: number, crossSell: ICrossSell): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 0;\r\n\r\n    return this.materiaisCrossSellService.inactivateCrossSell(\r\n      crossSell.codCrossSell\r\n    );\r\n  }\r\n\r\n  refreshMainData(crossSell: ICrossSell): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (crossSell.codCrossSell === this.dados[i].codCrossSell) {\r\n        this.dados[i].codSituacao = crossSell.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div [hidden]=\\\"form.getRawValue().codMaterial != null\\\">\\r\\n        <comercial-cadastros-materiais-templates-material-principal\\r\\n          [linhas]=\\\"linhas\\\"\\r\\n          [classes]=\\\"classes\\\"\\r\\n          [limparMaterialSelecionado]=\\\"limparMaterialPrincipal\\\"\\r\\n          (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\r\\n          (materialPrincipal)=\\\"materialPrincipal($event)\\\">\\r\\n        </comercial-cadastros-materiais-templates-material-principal>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div [hidden]=\\\"form.getRawValue().codMaterial === null\\\">\\r\\n          <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col mt-auto\\\">\\r\\n              <div class=\\\"mtc-title mb-0\\\">Principal material da associação</div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\" *ngIf=\\\"form.getRawValue().codMaterial != null\\\">\\r\\n              <div class=\\\"d-flex justify-content-end\\\">\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                  (click)=\\\"onLimparMaterialPrincipal()\\\">\\r\\n                  <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  <span>Limpar</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codMaterial\\\">Cód. Material</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"codMaterial\\\"\\r\\n                formControlName=\\\"codMaterial\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codMaterial')\\\" message=\\\"Código é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-7\\\">\\r\\n              <label for=\\\"nomeMaterial\\\">Material</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"nomeMaterial\\\"\\r\\n                formControlName=\\\"nomeMaterial\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('nomeMaterial')\\\" message=\\\"Material é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\"\\r\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n              </select>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <hr>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div formArrayName=\\\"assocMateriais\\\">\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length > 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"mtc-title\\\">Materiais associados</div>\\r\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let material of assocMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <td style=\\\"width: 95%\\\">\\r\\n                      {{ form.value.assocMateriais[i].codMaterial }} - {{ form.value.assocMateriais[i].nomeMaterial | uppercase }}\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                      <btn-icon\\r\\n                        icon=\\\"fas fa-trash\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        (click)=\\\"onDeleteMaterial(i)\\\">\\r\\n                      </btn-icon>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length === 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <message\\r\\n                icon=\\\"fas fa-exchange-alt\\\"\\r\\n                text=\\\"Nenhuma associação encontrada\\\">\\r\\n              </message>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <tabset>\\r\\n        <tab heading=\\\"Pesquisar materiais\\\">\\r\\n          <div class=\\\"p-3 border-left border-right border-bottom\\\">\\r\\n            <comercial-cadastros-materiais-templates-associacoes\\r\\n              [linhas]=\\\"linhas\\\"\\r\\n              [classes]=\\\"classes\\\"\\r\\n              [linhaSelecionada]=\\\"form.value.codLinha\\\"\\r\\n              [classeSelecionada]=\\\"form.value.codClasse\\\"\\r\\n              (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\r\\n              (materialAssociado)=\\\"materialAssociado($event)\\\">\\r\\n            </comercial-cadastros-materiais-templates-associacoes>\\r\\n          </div>\\r\\n        </tab>\\r\\n        <tab heading=\\\"Materiais mais vendidos\\\" (selectTab)=\\\"onSelectTabMaisVendidos()\\\">\\r\\n          <div class=\\\"p-3 border-left border-right border-bottom\\\">\\r\\n            <div *ngIf=\\\"form.getRawValue().codMaterial !== null && materiaisLista.length > 0\\\">\\r\\n              <div class=\\\"row mb-2\\\">\\r\\n                <div class=\\\"col mt-auto\\\">\\r\\n                  <div class=\\\"mtc-title mb-0\\\">Seleção de materiais</div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"d-flex justify-content-end\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn btn-sm btn-outline-primary\\\"\\r\\n                      (click)=\\\"onAssociarMateriais()\\\"\\r\\n                      [disabled]=\\\"searching === true\\\">\\r\\n                      <i class=\\\"fas fa-exchange-alt\\\"></i>\\r\\n                      <span>Associar</span>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <custom-table [config]=\\\"tableConfigMateriais\\\">\\r\\n                    <ng-template #thead let-thead>\\r\\n                      <tr>\\r\\n                        <th\\r\\n                          scope=\\\"col\\\"\\r\\n                          class=\\\"text-center\\\"\\r\\n                          style=\\\"width: 5%\\\">\\r\\n                          <btn-icon\\r\\n                            [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                            size=\\\"small\\\"\\r\\n                            (click)=\\\"onToggleAll()\\\">\\r\\n                          </btn-icon>\\r\\n                        </th>\\r\\n                        <th scope=\\\"col\\\" style=\\\"width: 80%\\\">Material</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 15%\\\">Núm. vendas</th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                    <ng-template #tbody let-tbody>\\r\\n                      <tr *ngFor=\\\"let material of materiaisLista; let i = index;\\\">\\r\\n                        <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                          <btn-icon\\r\\n                            [icon]=\\\"material.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                            size=\\\"small\\\"\\r\\n                            (click)=\\\"onCheckMaterial(i, material)\\\">\\r\\n                          </btn-icon>\\r\\n                        </td>\\r\\n                        <td\\r\\n                          class=\\\"hover\\\"\\r\\n                          style=\\\"width: 80%\\\"\\r\\n                          (click)=\\\"onCheckMaterial(i, material)\\\">\\r\\n                          {{ material.codigoDescricaoMaterial | uppercase }}\\r\\n                        </td>\\r\\n                        <td\\r\\n                          class=\\\"text-center hover\\\"\\r\\n                          style=\\\"width: 15%\\\"\\r\\n                          (click)=\\\"onCheckMaterial(i, material)\\\">\\r\\n                          {{ material.nrVendas }}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </custom-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <message\\r\\n                  icon=\\\"fas fa-cog fa-spin\\\"\\r\\n                  text=\\\"Estamos pesquisando os materiais para você...\\\">\\r\\n                </message>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"searching === false\\\">\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"materiaisListaEmpty && materiaisListaLoaded\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <message\\r\\n                    icon=\\\"fas fa-box-open\\\"\\r\\n                    text=\\\"Nenhuma informação encontrada\\\">\\r\\n                  </message>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"form.getRawValue().codMaterial === null || materiaisLista.length === 0\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <message\\r\\n                    icon=\\\"fas fa-exclamation-circle\\\"\\r\\n                    text=\\\"Selecione um material principal ao lado para pesquisar os materiais mais vendidos\\\">\\r\\n                  </message>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </tab>\\r\\n      </tabset>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY3Jvc3Mtc2VsbC9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosMateriaisCrossSellRoutingModule } from './cross-sell-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialCadastrosMateriaisTemplatesModule } from '../templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisCrossSellListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisCrossSellFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisCrossSellService } from './cross-sell.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosMateriaisCrossSellListaComponent,\r\n    ComercialCadastrosMateriaisCrossSellFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule,\r\n    TooltipModule,\r\n    TabsModule.forRoot(),\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialCadastrosMateriaisCrossSellRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ComercialCadastrosMateriaisTemplatesModule,\r\n  ],\r\n  providers: [PNotifyService, ComercialCadastrosMateriaisCrossSellService],\r\n})\r\nexport class ComercialCadastrosMateriaisCrossSellModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../../../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\r\n\r\n// Interfaces\r\nimport { ICrossSell } from './models/cross-sell';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisCrossSellService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/materiais/cross-sell`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) {}\r\n\r\n  getListaCrossSell(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista-materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAssociacoesMateriais(\r\n    codCrossSell: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/associacoes/${codCrossSell}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhes(codCrossSell: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codCrossSell}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  private saveCrossSell(record: ICrossSell): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1), retry(2));\r\n  }\r\n\r\n  private updateCrossSell(\r\n    record: ICrossSell\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  save(record: ICrossSell): Observable<Object | JsonResponse> {\r\n    if (record.codCrossSell !== null) {\r\n      return this.updateCrossSell(record);\r\n    }\r\n\r\n    return this.saveCrossSell(record);\r\n  }\r\n\r\n  activateCrossSell(codCrossSell: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/ativar`, codCrossSell)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  inactivateCrossSell(codCrossSell: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codCrossSell).pipe(take(1));\r\n  }\r\n\r\n  desassociaMaterial(\r\n    codCrossSell: number,\r\n    codAssociacao: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .delete(`${this.API}/desassociar/${codCrossSell}/${codAssociacao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getFilterValues(): Observable<Object | JsonResponse> {\r\n    const linhas = this.tidSoftwareService.getLinhas();\r\n    const classes = this.comercialService.getClasses(null);\r\n\r\n    return forkJoin([linhas, classes]);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosMateriaisCrossSellFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisCrossSellListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisCrossSellFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialCadastrosMateriaisCrossSellListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosMateriaisCrossSellFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisCrossSellFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosMateriaisCrossSellFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisCrossSellFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosMateriaisCrossSellRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisCrossSellService } from '../cross-sell.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisCrossSellFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private materiaisCrossSellService: ComercialCadastrosMateriaisCrossSellService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.materiaisCrossSellService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      mensagem: null,\r\n      data: {\r\n        codCrossSell: null,\r\n        codLinha: null,\r\n        codClasse: null,\r\n        codMaterial: null,\r\n        nomeMaterial: null,\r\n        codSituacao: null,\r\n        materiais: [],\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}