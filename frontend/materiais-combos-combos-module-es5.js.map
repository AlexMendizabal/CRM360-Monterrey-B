{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/combos/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/combos/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/combos/formulario/formulario.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/combos/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/combos/combos.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/combos/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/combos/combos-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/combos/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/combos/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialCadastrosMateriaisComboListaComponent","activatedRoute","router","location","formBuilder","pnotifyService","atividadesService","titleService","detailPanelService","comercialService","materiaisComboService","confirmModalService","loaderNavbar","loaderFullScreen","breadCrumbTree","tableConfig","subtitleBorder","tableConfigMateriais","hover","showDetailPanel","orderBy","orderType","linhas","classes","filteredClasses","materiais","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosLoaded","dadosEmpty","materiaisAssociados","registrarAcesso","setBreadCrumb","getFilterValues","setFormFilter","setTitle","onDetailPanelEmitter","setComboSelecionado","subscribe","params","descricao","routerLink","idSubModulo","showDetailPanelSubscription","config","event","showing","pipe","checkValuesLinhaClasse","response","responseCode","result","unshift","id","error","back","idClasse","nomeClasse","codLinha","reset","form","value","controls","codClasse","enable","setValue","disable","updateValueAndValidity","codMaterial","filter","idLinha","src","getMateriais","materiaisLoader","tipoMaterial","comercializa","next","hasOwnProperty","success","data","codigoMaterial","codigoDescricaoMaterial","mensagem","formValue","checkRouterParams","group","codSituacao","pagina","registros","required","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","onChangeLinha","onChangeClasse","comboSelecionado","codCombo","nomeMaterial","quantidade","nomeUsuario","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","hide","getListaCombos","combo","borderClass","page","scrollToFilter","nativeElement","scrollIntoView","behavior","show","detailPanelTitle","getAssociacoesMateriais","setTimeout","loadedFinished","index","confirmActivate","asObservable","activateCombo","refreshMainData","showConfirm","confirmInactive","inactivateCombo","i","selector","template","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialCadastrosMateriaisComboModule","declarations","imports","forRoot","providers","FormDeactivateGuard","component","route","state","formCanDeactivate","ComercialCadastrosMateriaisComboFormularioComponent","MASKS","tableConfigAssocMateriais","fixedHeader","bodyHeight","formChanged","submittingForm","showMateriais","getPNotify","setFormBuilder","appTitle","action","resolver","snapshot","detalhes","disabled","assocMateriais","array","setMateriais","onAddMaterial","material","manipulateForm","source","checkMaterialExists","push","codAssociacao","markAsTouched","markAsDirty","some","el","limparMaterialPrincipal","onInput","confirmDelete","deleteMaterial","removeAt","deleteAssociacao","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","checkFormValidation","save","getRawValue","console","log","navigateTo","notice","isValid","confirm","routes","path","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMateriaisComboRoutingModule","forChild","exports","ComercialCadastrosMateriaisComboFormularioResolverGuard","materiaisCombosService","getDetalhes","ComercialTidSoftwareService","http","API","empresas","getEmpresas","getLinhas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao","post"],"mappings":"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","file":"materiais-combos-combos-module-es5.js","sourcesContent":["import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription, Observable, EMPTY } from 'rxjs';\nimport { finalize, take, switchMap } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ComercialCadastrosMateriaisComboService } from '../combos.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { ICombo, IMateriaisCombo } from '../models/combo';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-combos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosMateriaisComboListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    hover: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  detailPanelTitle: string;\n\n  form: FormGroup;\n  orderBy = 'codMaterial';\n  orderType = 'ASC';\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n  filteredClasses: Array<any> = [];\n  materiais: Array<any> = [];\n  materiaisLoader: boolean;\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: ICombo[] = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  comboSelecionado: ICombo;\n  materiaisAssociados: IMateriaisCombo[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private detailPanelService: DetailPanelService,\n    private comercialService: ComercialService,\n    private materiaisComboService: ComercialCadastrosMateriaisComboService,\n    private confirmModalService: ConfirmModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.setFormFilter();\n    this.titleService.setTitle('Combos de materiais');\n    this.onDetailPanelEmitter();\n    this.setComboSelecionado();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Combos de materiais',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  getFilterValues(): void {\n    this.materiaisComboService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n\n          this.checkValuesLinhaClasse();\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n\n          this.linhas.unshift({\n            id: 0,\n            descricao: 'EXIBIR TODOS',\n          });\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].responseCode === 200) {\n          this.classes = response[1].result;\n\n          this.filteredClasses.unshift({\n            idClasse: 0,\n            nomeClasse: 'EXIBIR TODOS',\n          });\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  onChangeLinha(codLinha: number, reset: boolean) {\n    if (reset) {\n      if (this.form.value.codLinha !== 0) {\n        this.form.controls.codClasse.enable();\n        this.form.controls.codClasse.setValue(0);\n      } else {\n        this.form.controls.codClasse.disable();\n        this.form.controls.codClasse.setValue(null);\n      }\n\n      this.form.controls.codClasse.updateValueAndValidity();\n\n      this.materiais = [];\n      this.form.controls.codMaterial.reset();\n      this.form.controls.codMaterial.disable();\n      this.form.controls.codMaterial.setValue(null);\n      this.form.controls.codMaterial.updateValueAndValidity();\n    }\n\n    this.filteredClasses = this.classes.filter(\n      (value: any) => value.idLinha == codLinha\n    );\n\n    this.filteredClasses.unshift({\n      idClasse: 0,\n      nomeClasse: 'EXIBIR TODOS',\n    });\n  }\n\n  onChangeClasse(codClasse: number, reset: boolean, src: string) {\n    if (reset) {\n      this.form.controls.codMaterial.reset();\n      this.form.controls.codMaterial.enable();\n      this.form.controls.codMaterial.setValue(0);\n      this.form.controls.codMaterial.updateValueAndValidity();\n    }\n\n    this.getMateriais(codClasse, src);\n  }\n\n  getMateriais(codClasse: number, src: string): void {\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\n      if (src === 'application') {\n        this.loaderNavbar = true;\n      }\n      this.materiaisLoader = true;\n      this.materiais = [];\n\n      const params = {\n        codClasse: codClasse,\n        tipoMaterial: 'Distribuidora',\n        comercializa: 0,\n      };\n\n      this.comercialService\n        .getMateriais(params)\n        .pipe(\n          finalize(() => {\n            if (src === 'application') {\n              this.loaderNavbar = false;\n            }\n            this.materiaisLoader = false;\n          })\n        )\n        .subscribe({\n          next: (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.materiais = response.data;\n\n              this.materiais.unshift({\n                codigoMaterial: 0,\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\n              });\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          error: (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        });\n    }\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      codLinha: [formValue.codLinha],\n      codClasse: [formValue.codClasse],\n      codMaterial: [formValue.codMaterial],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      codLinha: 0,\n      codClasse: 0,\n      codMaterial: 0,\n      codSituacao: '',\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  checkValuesLinhaClasse(): void {\n    if (this.form.value.codLinha !== 0) {\n      this.onChangeLinha(this.form.value.codLinha, false);\n    }\n\n    if (this.form.value.codClasse !== 0) {\n      this.onChangeClasse(this.form.value.codClasse, false, 'verify');\n    } else {\n      this.form.controls.codClasse.disable();\n      this.form.controls.codMaterial.disable();\n\n      this.form.controls.codClasse.updateValueAndValidity();\n      this.form.controls.codMaterial.updateValueAndValidity();\n    }\n  }\n\n  setComboSelecionado(): void {\n    this.comboSelecionado = {\n      codCombo: null,\n      codLinha: null,\n      codClasse: null,\n      codMaterial: null,\n      codSituacao: null,\n      nomeMaterial: null,\n      quantidade: null,\n      nomeUsuario: null,\n    };\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.codLinha) {\n      params.codLinha = this.form.value.codLinha;\n    }\n\n    if (this.form.value.codClasse) {\n      params.codClasse = this.form.value.codClasse;\n    }\n\n    if (this.form.value.codMaterial) {\n      params.codMaterial = this.form.value.codMaterial;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.pagina = this.form.value.pagina;\n    params.registros = this.form.value.registros;\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    this.dados = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.materiaisComboService\n      .getListaCombos(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.totalItems = this.dados[0]['total'];\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(combo: ICombo): string {\n    let borderClass: string;\n\n    if (combo.codSituacao === 0) {\n      borderClass = 'border-danger';\n    } else if (combo.codSituacao === 1) {\n      borderClass = 'border-success';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent) {\n    if (this.form.value.pagina != event.page) {\n      this.detailPanelService.hide();\n      this.setComboSelecionado();\n      this.form.value.pagina = event.page;\n      this.onFilter();\n\n      this.scrollToFilter.nativeElement.scrollIntoView({\n        behavior: 'instant',\n      });\n    }\n  }\n\n  onDetails(combo: ICombo): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.detailPanelTitle = `Materiais associados (${combo.nomeMaterial})`;\n    this.setComboSelecionado();\n    this.comboSelecionado = combo;\n    this.materiaisAssociados = [];\n\n    this.materiaisComboService\n      .getAssociacoesMateriais(combo.codCombo)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.materiaisAssociados = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        error: (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onEdit(combo: ICombo): void {\n    this.router.navigate(['../editar', combo.codCombo], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, combo: ICombo): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateCombo(index, combo) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(combo);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dados[index].codSituacao = 0;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateCombo(index: number, combo: ICombo): Observable<any> {\n    this.loaderNavbar = true;\n    this.dados[index].codSituacao = 1;\n\n    return this.materiaisComboService.activateCombo(combo.codCombo);\n  }\n\n  onInactivate(index: number, combo: ICombo): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateCombo(index, combo) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(combo);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dados[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateCombo(index: number, combo: ICombo): Observable<any> {\n    this.loaderNavbar = true;\n    this.dados[index].codSituacao = 0;\n\n    return this.materiaisComboService.inactivateCombo(combo.codCombo);\n  }\n\n  refreshMainData(combo: ICombo): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (combo.codCombo === this.dados[i].codCombo) {\n        this.dados[i].codSituacao = combo.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Combos de materiais\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codLinha\\\">Linha</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"linhas\\\"\\n                formControlName=\\\"codLinha\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codLinha\\\"\\n                bindLabel=\\\"descricao\\\"\\n                bindValue=\\\"id\\\"\\n                (change)=\\\"onChangeLinha($event.id, true)\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codClasse\\\">Classe</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"filteredClasses\\\"\\n                formControlName=\\\"codClasse\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codClasse\\\"\\n                bindLabel=\\\"nomeClasse\\\"\\n                bindValue=\\\"idClasse\\\"\\n                (change)=\\\"onChangeClasse($event.idClasse, true, 'application')\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codMaterial\\\">Material</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"materiais\\\"\\n                formControlName=\\\"codMaterial\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codMaterial\\\"\\n                bindLabel=\\\"codigoDescricaoMaterial\\\"\\n                bindValue=\\\"codigoMaterial\\\"\\n                [loading]=\\\"materiaisLoader\\\"\\n                loadingText=\\\"Carregando...\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"0\\\">Inativos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-1\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\n              <thead-sorter\\n                value=\\\"Código\\\"\\n                [active]=\\\"orderBy == 'codMaterial'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('codMaterial')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Nome material\\\"\\n                [active]=\\\"orderBy == 'nomeMaterial'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeMaterial')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Quantidade</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr\\n            *ngFor=\\\"let material of dados; let i = index;\\\"\\n            [class.table-active]=\\\"material.codMaterial == comboSelecionado.codMaterial && showDetailPanel\\\">\\n            <td\\n              class=\\\"text-center hover\\\"\\n              [ngClass]=\\\"classStatusBorder(material)\\\"\\n              (click)=\\\"onDetails(material)\\\">\\n              {{ material.codMaterial }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(material)\\\">\\n              {{ material.nomeMaterial | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"onDetails(material)\\\">\\n              {{ material.quantidade | number:'1.3-3' }} TON\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(material)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"material.nomeUsuario === null\\\">NÃO INFORMADO</span>\\n              <span *ngIf=\\\"material.nomeUsuario !== null\\\">\\n                {{ material.nomeUsuario | uppercase }}\\n              </span>\\n            </td>\\n            <td class=\\\"text-right\\\">\\n              <span *ngIf=\\\"material.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, material)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"material.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, material)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(material)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiaisAssociados.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\n              <th scope=\\\"col\\\">Material</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Qtde.</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiaisAssociados\\\">\\n              <td class=\\\"text-center\\\">{{ material.codMaterial }}</td>\\n              <td>{{ material.nomeMaterial | uppercase }}</td>\\n              <td class=\\\"text-center\\\">{{ material.quantidade | number:'1.3-3' }} {{ material.unidade | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY29tYm9zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY29tYm9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosMateriaisComboRoutingModule } from './combos-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialCadastrosMateriaisTemplatesModule } from '../templates/templates.module';\n\n// Components\nimport { ComercialCadastrosMateriaisComboListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisComboFormularioComponent } from './formulario/formulario.component';\n\n// Services\nimport { ComercialCadastrosMateriaisComboService } from './combos.service';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosMateriaisComboListaComponent,\n    ComercialCadastrosMateriaisComboFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule,\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialCadastrosMateriaisComboRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    ComercialCadastrosMateriaisTemplatesModule,\n  ],\n  providers: [PNotifyService, ComercialCadastrosMateriaisComboService],\n})\nexport class ComercialCadastrosMateriaisComboModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// ng-brazil\nimport { MASKS } from 'ng-brazil';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosMateriaisComboService } from '../combos.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { ICombo, IMateriaisCombo } from '../models/combo';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-combos-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosMateriaisComboFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  public MASKS = MASKS;\n\n  loaderFullScreen = true;\n  loaderNavbar: boolean;\n\n  appTitle: string;\n  action: string;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm = false;\n\n  showMateriais = true;\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n\n  limparMaterialPrincipal: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private materiaisComboService: ComercialCadastrosMateriaisComboService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private comercialService: ComercialService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.setFormBuilder();\n    this.titleService.setTitle('Cadastro de combo de materiais');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar combo de materiais';\n        this.action = 'update';\n      } else {\n        this.appTitle = 'Novo combo de materiais';\n        this.action = 'create';\n      }\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Combos de materiais',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/combos/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  getFilterValues(): void {\n    this.materiaisComboService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].responseCode === 200) {\n          this.classes = response[1].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormBuilder(): void {\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\n\n    if (resolver.success === true) {\n      const detalhes: ICombo = resolver.data;\n\n      this.form = this.formBuilder.group({\n        codCombo: [detalhes.codCombo],\n        codLinha: [detalhes.codLinha],\n        codClasse: [detalhes.codClasse],\n        codMaterial: [{ value: detalhes.codMaterial, disabled: true }],\n        nomeMaterial: [{ value: detalhes.nomeMaterial, disabled: true }],\n        quantidade: [detalhes.quantidade, [Validators.required]],\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\n        assocMateriais: this.formBuilder.array([]),\n      });\n\n      this.setMateriais(detalhes.materiais);\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  setMateriais(materiais: IMateriaisCombo[]): void {\n    if (materiais.length > 0) {\n      for (let i = 0; i < materiais.length; i++) {\n        this.onAddMaterial(materiais[i], false, 'application');\n      }\n    }\n  }\n\n  get assocMateriais(): FormArray {\n    return this.form.get('assocMateriais') as FormArray;\n  }\n\n  /**\n   * @source = 'application' || 'user'\n   */\n  onAddMaterial(\n    material: IMateriaisCombo,\n    manipulateForm: boolean,\n    source: string\n  ): void {\n    if (this.checkMaterialExists(material) === false) {\n      this.assocMateriais.push(\n        this.formBuilder.group({\n          codAssociacao: [material.codAssociacao],\n          codMaterial: [material.codMaterial],\n          nomeMaterial: [material.nomeMaterial],\n          quantidade: [source === 'user' ? 0 : material.quantidade],\n          source: [source],\n        })\n      );\n\n      if (this.form.value.assocMateriais.length > 9) {\n        if (this.tableConfigAssocMateriais.fixedHeader === false) {\n          this.showMateriais = false;\n          this.tableConfigAssocMateriais.fixedHeader = true;\n\n          setTimeout(() => {\n            this.showMateriais = true;\n          }, 1);\n        }\n      }\n\n      if (manipulateForm) {\n        this.form.markAsTouched();\n        this.form.markAsDirty();\n      }\n    }\n  }\n\n  checkMaterialExists(material: IMateriaisCombo): boolean {\n    return this.form.value.assocMateriais.some((el: any) => {\n      return el.codMaterial === material.codMaterial;\n    });\n  }\n\n  onLimparMaterialPrincipal(): void {\n    this.limparMaterialPrincipal = true;\n    this.onInput();\n\n    this.form.controls.codMaterial.setValue(null);\n    this.form.controls.nomeMaterial.setValue(null);\n\n    setTimeout(() => {\n      this.limparMaterialPrincipal = false;\n    }, 100);\n  }\n\n  onDeleteMaterial(index: number): void {\n    if (this.submittingForm === false) {\n      this.confirmDelete().subscribe((response: boolean) =>\n        response ? this.deleteMaterial(index) : null\n      );\n    }\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  deleteMaterial(index: number) {\n    if (this.form.value.assocMateriais[index].source === 'user') {\n      this.assocMateriais.removeAt(index);\n    } else if (this.form.value.assocMateriais[index].source === 'application') {\n      this.loaderNavbar = true;\n\n      this.activatedRoute.params.subscribe((params: any) => {\n        this.materiaisComboService\n          .deleteAssociacao(\n            params.id,\n            this.form.value.assocMateriais[index].codAssociacao\n          )\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n            })\n          )\n          .subscribe({\n            next: (response: JsonResponse) => {\n              if (response.success) {\n                this.assocMateriais.removeAt(index);\n                this.pnotifyService.success('Material desassociado com sucesso.');\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              if (\n                error.error.hasOwnProperty('mensagem') &&\n                (error.mensagem !== null || error.mensagem !== '')\n              ) {\n                this.pnotifyService.error(error.error.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            }\n          });\n      });\n    }\n\n    this.form.markAsTouched();\n    this.form.markAsDirty();\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.action === 'update' && this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.checkFormValidation() && this.form.valid) {\n        if (this.form.value.assocMateriais.length > 0) {\n          this.loaderNavbar = true;\n          this.submittingForm = true;\n\n          this.materiaisComboService\n            .save(this.form.getRawValue(), this.action)\n            .pipe(\n              finalize(() => {\n                this.loaderNavbar = false;\n                this.submittingForm = false;\n                console.log(this.form);\n              })\n            )\n            .subscribe({\n              next: (response: any) => {\n                if (\n                  response.hasOwnProperty('success') &&\n                  response.success === true\n                ) {\n                  this.form.reset();\n                  this.formChanged = false;\n                  this.pnotifyService.success(response.mensagem);\n\n                  this.activatedRoute.params.subscribe((params: any) => {\n                    let navigateTo: string;\n\n                    if (params.hasOwnProperty('id')) {\n                      navigateTo = '../../lista';\n                    } else {\n                      navigateTo = '../lista';\n                    }\n\n                    this.router.navigate([navigateTo], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  });\n                } else if (\n                  response.hasOwnProperty('success') &&\n                  response.success === false\n                ) {\n                  this.pnotifyService.error(response.mensagem);\n                } else {\n                  this.pnotifyService.error();\n                }\n              },\n              error: (error: any) => {\n                this.pnotifyService.error();\n              }\n            });\n        } else {\n          this.pnotifyService.notice('Associe pelo menos um material.');\n        }\n      } else {\n        this.pnotifyService.notice('Selecione um material.');\n      }\n    }\n  }\n\n  checkFormValidation(): boolean {\n    let isValid = true;\n\n    if (this.form.getRawValue().codMaterial === null) {\n      isValid = false;\n    }\n\n    return isValid;\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onLoaderNavbar(event: boolean): void {\n    this.loaderNavbar = event;\n  }\n\n  materialPrincipal(material: any): void {\n    this.onInput();\n\n    this.form.controls.codLinha.setValue(material.codLinha);\n    this.form.controls.codClasse.setValue(material.codClasse);\n    this.form.controls.codMaterial.setValue(material.codigoMaterial);\n    this.form.controls.nomeMaterial.setValue(material.descricao);\n  }\n\n  materialAssociado(material: any): void {\n    this.onAddMaterial(material, true, 'user');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosMateriaisComboFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosMateriaisComboListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisComboFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialCadastrosMateriaisComboListaComponent },\n  {\n    path: 'novo',\n    component: ComercialCadastrosMateriaisComboFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMateriaisComboFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosMateriaisComboFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMateriaisComboFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosMateriaisComboRoutingModule {}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <div [hidden]=\\\"form.getRawValue().codMaterial != null\\\">\\n        <comercial-cadastros-materiais-templates-material-principal\\n          [linhas]=\\\"linhas\\\"\\n          [classes]=\\\"classes\\\"\\n          [limparMaterialSelecionado]=\\\"limparMaterialPrincipal\\\"\\n          (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\n          (materialPrincipal)=\\\"materialPrincipal($event)\\\">\\n        </comercial-cadastros-materiais-templates-material-principal>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <hr>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <form [formGroup]=\\\"form\\\">\\n        <div [hidden]=\\\"form.getRawValue().codMaterial === null\\\">\\n          <div class=\\\"row mb-3\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Principal material do combo</div>\\n            </div>\\n            <div class=\\\"col\\\" *ngIf=\\\"form.getRawValue().codMaterial != null\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\n                  (click)=\\\"onLimparMaterialPrincipal()\\\">\\n                  <i class=\\\"fas fa-trash\\\"></i>\\n                  <span>Limpar</span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codMaterial\\\">Cód. material</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"codMaterial\\\"\\n                formControlName=\\\"codMaterial\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codMaterial')\\\" message=\\\"Código é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-10\\\">\\n              <label for=\\\"nomeMaterial\\\">Nome material</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"nomeMaterial\\\"\\n                formControlName=\\\"nomeMaterial\\\"\\n                autocomplete=\\\"new-password\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"quantidade\\\">Qtde.</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"quantidade\\\"\\n                formControlName=\\\"quantidade\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\"\\n                [ngClass]=\\\"onFieldError('quantidade') + ' ' + onFieldRequired(form.controls.quantidade)\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('quantidade')\\\" message=\\\"Quantidade é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\"\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n                <option value=\\\"0\\\">Inativo</option>\\n                <option value=\\\"1\\\">Ativo</option>\\n              </select>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"col\\\">\\n              <hr>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div formArrayName=\\\"assocMateriais\\\">\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length > 0\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"mtc-title\\\">Materiais associados ao combo</div>\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" style=\\\"width: 75%\\\">Material</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 20%\\\">Qtde.</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let material of assocMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                    <td style=\\\"width: 75%\\\">\\n                      {{ form.value.assocMateriais[i].codMaterial }} - {{ form.value.assocMateriais[i].nomeMaterial | uppercase }}\\n                    </td>\\n                    <td>\\n                      <input\\n                        type=\\\"text\\\"\\n                        id=\\\"quantidade\\\"\\n                        class=\\\"form-control text-center\\\"\\n                        formControlName=\\\"quantidade\\\"\\n                        currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\">\\n                    </td>\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        icon=\\\"fas fa-trash\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"onDeleteMaterial(i)\\\">\\n                      </btn-icon>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length === 0\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-exchange-alt\\\"\\n                text=\\\"Nenhuma associação encontrada\\\">\\n              </message>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <comercial-cadastros-materiais-templates-associacoes\\n        [linhas]=\\\"linhas\\\"\\n        [classes]=\\\"classes\\\"\\n        [linhaSelecionada]=\\\"form.value.codLinha\\\"\\n        [classeSelecionada]=\\\"form.value.codClasse\\\"\\n        (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\n        (materialAssociado)=\\\"materialAssociado($event)\\\">\\n      </comercial-cadastros-materiais-templates-associacoes>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosMateriaisComboService } from '../combos.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisComboFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private materiaisCombosService: ComercialCadastrosMateriaisComboService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.materiaisCombosService.getDetalhes(route.params.id);\n    }\n\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      mensagem: null,\n      data: {\n        codCombo: null,\n        codLinha: null,\n        codClasse: null,\n        codMaterial: null,\n        codSituacao: 1,\n        nomeMaterial: null,\n        quantidade: 0,\n        materiais: [],\n      },\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}