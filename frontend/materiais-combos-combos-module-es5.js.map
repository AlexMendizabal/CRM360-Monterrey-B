{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/combos/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/combos/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/combos/formulario/formulario.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/combos/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/combos/combos.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/combos/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/combos/combos-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/combos/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/combos/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialCadastrosMateriaisComboListaComponent","activatedRoute","router","location","formBuilder","pnotifyService","atividadesService","titleService","detailPanelService","comercialService","materiaisComboService","confirmModalService","loaderNavbar","loaderFullScreen","breadCrumbTree","tableConfig","subtitleBorder","tableConfigMateriais","hover","showDetailPanel","orderBy","orderType","linhas","classes","filteredClasses","materiais","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosLoaded","dadosEmpty","materiaisAssociados","registrarAcesso","setBreadCrumb","getFilterValues","setFormFilter","setTitle","onDetailPanelEmitter","setComboSelecionado","subscribe","params","descricao","routerLink","idSubModulo","showDetailPanelSubscription","config","event","showing","pipe","checkValuesLinhaClasse","response","responseCode","result","unshift","id","error","back","idClasse","nomeClasse","codLinha","reset","form","value","controls","codClasse","enable","setValue","disable","updateValueAndValidity","codMaterial","filter","idLinha","src","getMateriais","materiaisLoader","tipoMaterial","comercializa","next","hasOwnProperty","success","data","codigoMaterial","codigoDescricaoMaterial","mensagem","formValue","checkRouterParams","group","codSituacao","pagina","registros","required","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","onChangeLinha","onChangeClasse","comboSelecionado","codCombo","nomeMaterial","quantidade","nomeUsuario","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","hide","getListaCombos","combo","borderClass","page","scrollToFilter","nativeElement","scrollIntoView","behavior","show","detailPanelTitle","getAssociacoesMateriais","setTimeout","loadedFinished","index","confirmActivate","asObservable","activateCombo","refreshMainData","showConfirm","confirmInactive","inactivateCombo","i","selector","template","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialCadastrosMateriaisComboModule","declarations","imports","forRoot","providers","FormDeactivateGuard","component","route","state","formCanDeactivate","ComercialCadastrosMateriaisComboFormularioComponent","MASKS","tableConfigAssocMateriais","fixedHeader","bodyHeight","formChanged","submittingForm","showMateriais","getPNotify","setFormBuilder","appTitle","action","resolver","snapshot","detalhes","disabled","assocMateriais","array","setMateriais","onAddMaterial","get","material","manipulateForm","source","checkMaterialExists","push","codAssociacao","markAsTouched","markAsDirty","some","el","limparMaterialPrincipal","onInput","confirmDelete","deleteMaterial","removeAt","deleteAssociacao","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","checkFormValidation","save","getRawValue","console","log","navigateTo","notice","isValid","confirm","routes","path","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMateriaisComboRoutingModule","forChild","exports","ComercialCadastrosMateriaisComboFormularioResolverGuard","materiaisCombosService","getDetalhes","ComercialTidSoftwareService","http","API","empresas","getEmpresas","getLinhas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao","post"],"mappings":"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","file":"materiais-combos-combos-module-es5.js","sourcesContent":["import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription, Observable, EMPTY } from 'rxjs';\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { ComercialCadastrosMateriaisComboService } from '../combos.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { ICombo, IMateriaisCombo } from '../models/combo';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-combos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisComboListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'codMaterial';\r\n  orderType = 'ASC';\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n  filteredClasses: Array<any> = [];\r\n  materiais: Array<any> = [];\r\n  materiaisLoader: boolean;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: ICombo[] = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  comboSelecionado: ICombo;\r\n  materiaisAssociados: IMateriaisCombo[] = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private detailPanelService: DetailPanelService,\r\n    private comercialService: ComercialService,\r\n    private materiaisComboService: ComercialCadastrosMateriaisComboService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFilterValues();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Combos de materiais');\r\n    this.onDetailPanelEmitter();\r\n    this.setComboSelecionado();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Combos de materiais',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.materiaisComboService\r\n      .getFilterValues()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n\r\n          this.checkValuesLinhaClasse();\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n\r\n          this.linhas.unshift({\r\n            id: 0,\r\n            descricao: 'EXIBIR TODOS',\r\n          });\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n\r\n        if (response[1].responseCode === 200) {\r\n          this.classes = response[1].result;\r\n\r\n          this.filteredClasses.unshift({\r\n            idClasse: 0,\r\n            nomeClasse: 'EXIBIR TODOS',\r\n          });\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  onChangeLinha(codLinha: number, reset: boolean) {\r\n    if (reset) {\r\n      if (this.form.value.codLinha !== 0) {\r\n        this.form.controls.codClasse.enable();\r\n        this.form.controls.codClasse.setValue(0);\r\n      } else {\r\n        this.form.controls.codClasse.disable();\r\n        this.form.controls.codClasse.setValue(null);\r\n      }\r\n\r\n      this.form.controls.codClasse.updateValueAndValidity();\r\n\r\n      this.materiais = [];\r\n      this.form.controls.codMaterial.reset();\r\n      this.form.controls.codMaterial.disable();\r\n      this.form.controls.codMaterial.setValue(null);\r\n      this.form.controls.codMaterial.updateValueAndValidity();\r\n    }\r\n\r\n    this.filteredClasses = this.classes.filter(\r\n      (value: any) => value.idLinha == codLinha\r\n    );\r\n\r\n    this.filteredClasses.unshift({\r\n      idClasse: 0,\r\n      nomeClasse: 'EXIBIR TODOS',\r\n    });\r\n  }\r\n\r\n  onChangeClasse(codClasse: number, reset: boolean, src: string) {\r\n    if (reset) {\r\n      this.form.controls.codMaterial.reset();\r\n      this.form.controls.codMaterial.enable();\r\n      this.form.controls.codMaterial.setValue(0);\r\n      this.form.controls.codMaterial.updateValueAndValidity();\r\n    }\r\n\r\n    this.getMateriais(codClasse, src);\r\n  }\r\n\r\n  getMateriais(codClasse: number, src: string): void {\r\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\r\n      if (src === 'application') {\r\n        this.loaderNavbar = true;\r\n      }\r\n      this.materiaisLoader = true;\r\n      this.materiais = [];\r\n\r\n      const params = {\r\n        codClasse: codClasse,\r\n        tipoMaterial: 'Distribuidora',\r\n        comercializa: 0,\r\n      };\r\n\r\n      this.comercialService\r\n        .getMateriais(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            if (src === 'application') {\r\n              this.loaderNavbar = false;\r\n            }\r\n            this.materiaisLoader = false;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.materiais = response.data;\r\n\r\n              this.materiais.unshift({\r\n                codigoMaterial: 0,\r\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\r\n              });\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      codLinha: [formValue.codLinha],\r\n      codClasse: [formValue.codClasse],\r\n      codMaterial: [formValue.codMaterial],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      codLinha: 0,\r\n      codClasse: 0,\r\n      codMaterial: 0,\r\n      codSituacao: '',\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  checkValuesLinhaClasse(): void {\r\n    if (this.form.value.codLinha !== 0) {\r\n      this.onChangeLinha(this.form.value.codLinha, false);\r\n    }\r\n\r\n    if (this.form.value.codClasse !== 0) {\r\n      this.onChangeClasse(this.form.value.codClasse, false, 'verify');\r\n    } else {\r\n      this.form.controls.codClasse.disable();\r\n      this.form.controls.codMaterial.disable();\r\n\r\n      this.form.controls.codClasse.updateValueAndValidity();\r\n      this.form.controls.codMaterial.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  setComboSelecionado(): void {\r\n    this.comboSelecionado = {\r\n      codCombo: null,\r\n      codLinha: null,\r\n      codClasse: null,\r\n      codMaterial: null,\r\n      codSituacao: null,\r\n      nomeMaterial: null,\r\n      quantidade: null,\r\n      nomeUsuario: null,\r\n    };\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.codLinha) {\r\n      params.codLinha = this.form.value.codLinha;\r\n    }\r\n\r\n    if (this.form.value.codClasse) {\r\n      params.codClasse = this.form.value.codClasse;\r\n    }\r\n\r\n    if (this.form.value.codMaterial) {\r\n      params.codMaterial = this.form.value.codMaterial;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.pagina = this.form.value.pagina;\r\n    params.registros = this.form.value.registros;\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.materiaisComboService\r\n      .getListaCombos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.totalItems = this.dados[0]['total'];\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(combo: ICombo): string {\r\n    let borderClass: string;\r\n\r\n    if (combo.codSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    } else if (combo.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent) {\r\n    if (this.form.value.pagina != event.page) {\r\n      this.detailPanelService.hide();\r\n      this.setComboSelecionado();\r\n      this.form.value.pagina = event.page;\r\n      this.onFilter();\r\n\r\n      this.scrollToFilter.nativeElement.scrollIntoView({\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }\r\n\r\n  onDetails(combo: ICombo): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Materiais associados (${combo.nomeMaterial})`;\r\n    this.setComboSelecionado();\r\n    this.comboSelecionado = combo;\r\n    this.materiaisAssociados = [];\r\n\r\n    this.materiaisComboService\r\n      .getAssociacoesMateriais(combo.codCombo)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.materiaisAssociados = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onEdit(combo: ICombo): void {\r\n    this.router.navigate(['../editar', combo.codCombo], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, combo: ICombo): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateCombo(index, combo) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(combo);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dados[index].codSituacao = 0;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateCombo(index: number, combo: ICombo): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 1;\r\n\r\n    return this.materiaisComboService.activateCombo(combo.codCombo);\r\n  }\r\n\r\n  onInactivate(index: number, combo: ICombo): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateCombo(index, combo) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(combo);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dados[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateCombo(index: number, combo: ICombo): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 0;\r\n\r\n    return this.materiaisComboService.inactivateCombo(combo.codCombo);\r\n  }\r\n\r\n  refreshMainData(combo: ICombo): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (combo.codCombo === this.dados[i].codCombo) {\r\n        this.dados[i].codSituacao = combo.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Combos de materiais\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codLinha\\\">Linha</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"linhas\\\"\\r\\n                formControlName=\\\"codLinha\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codLinha\\\"\\r\\n                bindLabel=\\\"descricao\\\"\\r\\n                bindValue=\\\"id\\\"\\r\\n                (change)=\\\"onChangeLinha($event.id, true)\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codClasse\\\">Classe</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"filteredClasses\\\"\\r\\n                formControlName=\\\"codClasse\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codClasse\\\"\\r\\n                bindLabel=\\\"nomeClasse\\\"\\r\\n                bindValue=\\\"idClasse\\\"\\r\\n                (change)=\\\"onChangeClasse($event.idClasse, true, 'application')\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"codMaterial\\\">Material</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"materiais\\\"\\r\\n                formControlName=\\\"codMaterial\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codMaterial\\\"\\r\\n                bindLabel=\\\"codigoDescricaoMaterial\\\"\\r\\n                bindValue=\\\"codigoMaterial\\\"\\r\\n                [loading]=\\\"materiaisLoader\\\"\\r\\n                loadingText=\\\"Carregando...\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"0\\\">Inativos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Código\\\"\\r\\n                [active]=\\\"orderBy == 'codMaterial'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codMaterial')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Nome material\\\"\\r\\n                [active]=\\\"orderBy == 'nomeMaterial'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeMaterial')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Quantidade</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr\\r\\n            *ngFor=\\\"let material of dados; let i = index;\\\"\\r\\n            [class.table-active]=\\\"material.codMaterial == comboSelecionado.codMaterial && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(material)\\\"\\r\\n              (click)=\\\"onDetails(material)\\\">\\r\\n              {{ material.codMaterial }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(material)\\\">\\r\\n              {{ material.nomeMaterial | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              (click)=\\\"onDetails(material)\\\">\\r\\n              {{ material.quantidade | number:'1.3-3' }} TON\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(material)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"material.nomeUsuario === null\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"material.nomeUsuario !== null\\\">\\r\\n                {{ material.nomeUsuario | uppercase }}\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <span *ngIf=\\\"material.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, material)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"material.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, material)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(material)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiaisAssociados.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n              <th scope=\\\"col\\\">Material</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Qtde.</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let material of materiaisAssociados\\\">\\r\\n              <td class=\\\"text-center\\\">{{ material.codMaterial }}</td>\\r\\n              <td>{{ material.nomeMaterial | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ material.quantidade | number:'1.3-3' }} {{ material.unidade | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY29tYm9zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY29tYm9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosMateriaisComboRoutingModule } from './combos-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialCadastrosMateriaisTemplatesModule } from '../templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisComboListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisComboFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisComboService } from './combos.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosMateriaisComboListaComponent,\r\n    ComercialCadastrosMateriaisComboFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialCadastrosMateriaisComboRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ComercialCadastrosMateriaisTemplatesModule,\r\n  ],\r\n  providers: [PNotifyService, ComercialCadastrosMateriaisComboService],\r\n})\r\nexport class ComercialCadastrosMateriaisComboModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ng-brazil\r\nimport { MASKS } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisComboService } from '../combos.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { ICombo, IMateriaisCombo } from '../models/combo';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-combos-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisComboFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = MASKS;\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  action: string;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm = false;\r\n\r\n  showMateriais = true;\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n\r\n  limparMaterialPrincipal: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private materiaisComboService: ComercialCadastrosMateriaisComboService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private comercialService: ComercialService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFilterValues();\r\n    this.setFormBuilder();\r\n    this.titleService.setTitle('Cadastro de combo de materiais');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar combo de materiais';\r\n        this.action = 'update';\r\n      } else {\r\n        this.appTitle = 'Novo combo de materiais';\r\n        this.action = 'create';\r\n      }\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Combos de materiais',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/combos/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.materiaisComboService\r\n      .getFilterValues()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n\r\n        if (response[1].responseCode === 200) {\r\n          this.classes = response[1].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\r\n\r\n    if (resolver.success === true) {\r\n      const detalhes: ICombo = resolver.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codCombo: [detalhes.codCombo],\r\n        codLinha: [detalhes.codLinha],\r\n        codClasse: [detalhes.codClasse],\r\n        codMaterial: [{ value: detalhes.codMaterial, disabled: true }],\r\n        nomeMaterial: [{ value: detalhes.nomeMaterial, disabled: true }],\r\n        quantidade: [detalhes.quantidade, [Validators.required]],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\r\n        assocMateriais: this.formBuilder.array([]),\r\n      });\r\n\r\n      this.setMateriais(detalhes.materiais);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  setMateriais(materiais: IMateriaisCombo[]): void {\r\n    if (materiais.length > 0) {\r\n      for (let i = 0; i < materiais.length; i++) {\r\n        this.onAddMaterial(materiais[i], false, 'application');\r\n      }\r\n    }\r\n  }\r\n\r\n  get assocMateriais(): FormArray {\r\n    return this.form.get('assocMateriais') as FormArray;\r\n  }\r\n\r\n  /**\r\n   * @source = 'application' || 'user'\r\n   */\r\n  onAddMaterial(\r\n    material: IMateriaisCombo,\r\n    manipulateForm: boolean,\r\n    source: string\r\n  ): void {\r\n    if (this.checkMaterialExists(material) === false) {\r\n      this.assocMateriais.push(\r\n        this.formBuilder.group({\r\n          codAssociacao: [material.codAssociacao],\r\n          codMaterial: [material.codMaterial],\r\n          nomeMaterial: [material.nomeMaterial],\r\n          quantidade: [source === 'user' ? 0 : material.quantidade],\r\n          source: [source],\r\n        })\r\n      );\r\n\r\n      if (this.form.value.assocMateriais.length > 9) {\r\n        if (this.tableConfigAssocMateriais.fixedHeader === false) {\r\n          this.showMateriais = false;\r\n          this.tableConfigAssocMateriais.fixedHeader = true;\r\n\r\n          setTimeout(() => {\r\n            this.showMateriais = true;\r\n          }, 1);\r\n        }\r\n      }\r\n\r\n      if (manipulateForm) {\r\n        this.form.markAsTouched();\r\n        this.form.markAsDirty();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkMaterialExists(material: IMateriaisCombo): boolean {\r\n    return this.form.value.assocMateriais.some((el: any) => {\r\n      return el.codMaterial === material.codMaterial;\r\n    });\r\n  }\r\n\r\n  onLimparMaterialPrincipal(): void {\r\n    this.limparMaterialPrincipal = true;\r\n    this.onInput();\r\n\r\n    this.form.controls.codMaterial.setValue(null);\r\n    this.form.controls.nomeMaterial.setValue(null);\r\n\r\n    setTimeout(() => {\r\n      this.limparMaterialPrincipal = false;\r\n    }, 100);\r\n  }\r\n\r\n  onDeleteMaterial(index: number): void {\r\n    if (this.submittingForm === false) {\r\n      this.confirmDelete().subscribe((response: boolean) =>\r\n        response ? this.deleteMaterial(index) : null\r\n      );\r\n    }\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  deleteMaterial(index: number) {\r\n    if (this.form.value.assocMateriais[index].source === 'user') {\r\n      this.assocMateriais.removeAt(index);\r\n    } else if (this.form.value.assocMateriais[index].source === 'application') {\r\n      this.loaderNavbar = true;\r\n\r\n      this.activatedRoute.params.subscribe((params: any) => {\r\n        this.materiaisComboService\r\n          .deleteAssociacao(\r\n            params.id,\r\n            this.form.value.assocMateriais[index].codAssociacao\r\n          )\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: JsonResponse) => {\r\n              if (response.success) {\r\n                this.assocMateriais.removeAt(index);\r\n                this.pnotifyService.success('Material desassociado com sucesso.');\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              if (\r\n                error.error.hasOwnProperty('mensagem') &&\r\n                (error.mensagem !== null || error.mensagem !== '')\r\n              ) {\r\n                this.pnotifyService.error(error.error.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            }\r\n          });\r\n      });\r\n    }\r\n\r\n    this.form.markAsTouched();\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.action === 'update' && this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.checkFormValidation() && this.form.valid) {\r\n        if (this.form.value.assocMateriais.length > 0) {\r\n          this.loaderNavbar = true;\r\n          this.submittingForm = true;\r\n\r\n          this.materiaisComboService\r\n            .save(this.form.getRawValue(), this.action)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.loaderNavbar = false;\r\n                this.submittingForm = false;\r\n                console.log(this.form);\r\n              })\r\n            )\r\n            .subscribe({\r\n              next: (response: any) => {\r\n                if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === true\r\n                ) {\r\n                  this.form.reset();\r\n                  this.formChanged = false;\r\n                  this.pnotifyService.success(response.mensagem);\r\n\r\n                  this.activatedRoute.params.subscribe((params: any) => {\r\n                    let navigateTo: string;\r\n\r\n                    if (params.hasOwnProperty('id')) {\r\n                      navigateTo = '../../lista';\r\n                    } else {\r\n                      navigateTo = '../lista';\r\n                    }\r\n\r\n                    this.router.navigate([navigateTo], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  });\r\n                } else if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === false\r\n                ) {\r\n                  this.pnotifyService.error(response.mensagem);\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              },\r\n              error: (error: any) => {\r\n                this.pnotifyService.error();\r\n              }\r\n            });\r\n        } else {\r\n          this.pnotifyService.notice('Associe pelo menos um material.');\r\n        }\r\n      } else {\r\n        this.pnotifyService.notice('Selecione um material.');\r\n      }\r\n    }\r\n  }\r\n\r\n  checkFormValidation(): boolean {\r\n    let isValid = true;\r\n\r\n    if (this.form.getRawValue().codMaterial === null) {\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onLoaderNavbar(event: boolean): void {\r\n    this.loaderNavbar = event;\r\n  }\r\n\r\n  materialPrincipal(material: any): void {\r\n    this.onInput();\r\n\r\n    this.form.controls.codLinha.setValue(material.codLinha);\r\n    this.form.controls.codClasse.setValue(material.codClasse);\r\n    this.form.controls.codMaterial.setValue(material.codigoMaterial);\r\n    this.form.controls.nomeMaterial.setValue(material.descricao);\r\n  }\r\n\r\n  materialAssociado(material: any): void {\r\n    this.onAddMaterial(material, true, 'user');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosMateriaisComboFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisComboListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisComboFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialCadastrosMateriaisComboListaComponent },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosMateriaisComboFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisComboFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosMateriaisComboFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisComboFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosMateriaisComboRoutingModule {}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div [hidden]=\\\"form.getRawValue().codMaterial != null\\\">\\r\\n        <comercial-cadastros-materiais-templates-material-principal\\r\\n          [linhas]=\\\"linhas\\\"\\r\\n          [classes]=\\\"classes\\\"\\r\\n          [limparMaterialSelecionado]=\\\"limparMaterialPrincipal\\\"\\r\\n          (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\r\\n          (materialPrincipal)=\\\"materialPrincipal($event)\\\">\\r\\n        </comercial-cadastros-materiais-templates-material-principal>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div [hidden]=\\\"form.getRawValue().codMaterial === null\\\">\\r\\n          <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col mt-auto\\\">\\r\\n              <div class=\\\"mtc-title mb-0\\\">Principal material do combo</div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\" *ngIf=\\\"form.getRawValue().codMaterial != null\\\">\\r\\n              <div class=\\\"d-flex justify-content-end\\\">\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                  (click)=\\\"onLimparMaterialPrincipal()\\\">\\r\\n                  <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  <span>Limpar</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codMaterial\\\">Cód. material</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"codMaterial\\\"\\r\\n                formControlName=\\\"codMaterial\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codMaterial')\\\" message=\\\"Código é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-10\\\">\\r\\n              <label for=\\\"nomeMaterial\\\">Nome material</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"nomeMaterial\\\"\\r\\n                formControlName=\\\"nomeMaterial\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"quantidade\\\">Qtde.</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"quantidade\\\"\\r\\n                formControlName=\\\"quantidade\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n                currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\"\\r\\n                [ngClass]=\\\"onFieldError('quantidade') + ' ' + onFieldRequired(form.controls.quantidade)\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('quantidade')\\\" message=\\\"Quantidade é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\"\\r\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n              </select>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <hr>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div formArrayName=\\\"assocMateriais\\\">\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length > 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"mtc-title\\\">Materiais associados ao combo</div>\\r\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 75%\\\">Material</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 20%\\\">Qtde.</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let material of assocMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <td style=\\\"width: 75%\\\">\\r\\n                      {{ form.value.assocMateriais[i].codMaterial }} - {{ form.value.assocMateriais[i].nomeMaterial | uppercase }}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        id=\\\"quantidade\\\"\\r\\n                        class=\\\"form-control text-center\\\"\\r\\n                        formControlName=\\\"quantidade\\\"\\r\\n                        currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\">\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                      <btn-icon\\r\\n                        icon=\\\"fas fa-trash\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        (click)=\\\"onDeleteMaterial(i)\\\">\\r\\n                      </btn-icon>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length === 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <message\\r\\n                icon=\\\"fas fa-exchange-alt\\\"\\r\\n                text=\\\"Nenhuma associação encontrada\\\">\\r\\n              </message>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <comercial-cadastros-materiais-templates-associacoes\\r\\n        [linhas]=\\\"linhas\\\"\\r\\n        [classes]=\\\"classes\\\"\\r\\n        [linhaSelecionada]=\\\"form.value.codLinha\\\"\\r\\n        [classeSelecionada]=\\\"form.value.codClasse\\\"\\r\\n        (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\r\\n        (materialAssociado)=\\\"materialAssociado($event)\\\">\\r\\n      </comercial-cadastros-materiais-templates-associacoes>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisComboService } from '../combos.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisComboFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private materiaisCombosService: ComercialCadastrosMateriaisComboService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.materiaisCombosService.getDetalhes(route.params.id);\r\n    }\r\n\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      mensagem: null,\r\n      data: {\r\n        codCombo: null,\r\n        codLinha: null,\r\n        codClasse: null,\r\n        codMaterial: null,\r\n        codSituacao: 1,\r\n        nomeMaterial: null,\r\n        quantidade: 0,\r\n        materiais: [],\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}