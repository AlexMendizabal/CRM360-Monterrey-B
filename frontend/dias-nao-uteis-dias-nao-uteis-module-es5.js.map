{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/dias-nao-uteis/dias-nao-uteis.module.ts","webpack:///src/app/modules/comercial/cadastros/dias-nao-uteis/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/dias-nao-uteis/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/dias-nao-uteis/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/dias-nao-uteis/lista/lista.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/dias-nao-uteis/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/dias-nao-uteis/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/dias-nao-uteis/formulario/formulario.component.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/cadastros/dias-nao-uteis/dias-nao-uteis-routing.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/dias-nao-uteis/dias-nao-uteis.service.ts"],"names":["ComercialCadastrosDiaNaoUtilModule","declarations","imports","forRoot","providers","ComercialCadastrosDiaNaoUtilListaComponent","localeService","activatedRoute","router","formBuilder","diaNaoUtilService","pnotifyService","atividadesService","titleService","dateService","confirmModalService","detailPanelService","loaderNavbar","breadCrumbTree","subtitles","id","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getPNotify","registrarAcesso","setBreadCrumb","setFormFilter","setTitle","onDetailPanelEmitter","setDiaUtilSelecionado","showDetailPanelSubscription","unsubscribe","subscribe","params","descricao","routerLink","config","event","showing","formValue","checkRouterParams","form","group","dataInicial","required","dataFinal","motivo","codSituacao","feriado","pagina","registros","checkOrder","getFirstDayYear","getLastDayYear","activatedRouteSubscription","queryParams","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","convertStringToDate","isNaN","Number","value","diaNaoUtilSelecionado","codigo","data","situacao","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","convertToUrlDate","Date","getListaDiasNaoUteis","pipe","next","response","hasOwnProperty","success","slice","error","mensagem","diaNaoUtil","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","show","detailPanelTitle","formatWithSlashes","getAlteracoes","setTimeout","loadedFinished","index","confirmActivate","asObservable","result","activateDiaNaoUtil","refreshMainData","showConfirm","confirmInactive","inactivateDiaNaoUtil","i","selector","template","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialCadastrosDiaNaoUtilFormularioResolverGuard","route","getDetalhes","ComercialCadastrosDiaNaoUtilFormularioComponent","location","formChanged","setFormBuilder","appTitle","idSubModulo","snapshot","detalhes","back","pristine","submittingForm","save","reset","notice","confirm","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosDiaNaoUtilModuleRoutingModule","forChild","exports","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosDiaNaoUtilService","http","API","httpParams","param","append","record","post","put","updateDiaNaoUtil","saveDiaNaoUtil"],"mappings":"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","file":"dias-nao-uteis-dias-nao-uteis-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosDiaNaoUtilModuleRoutingModule } from './dias-nao-uteis-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosDiaNaoUtilListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosDiaNaoUtilFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosDiaNaoUtilListaComponent,\r\n    ComercialCadastrosDiaNaoUtilFormularioComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosDiaNaoUtilModuleRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class ComercialCadastrosDiaNaoUtilModule {}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { ComercialCadastrosDiaNaoUtilService } from '../dias-nao-uteis.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { DiaNaoUtil } from '../models/dia-nao-util';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-dia-nao-util-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class ComercialCadastrosDiaNaoUtilListaComponent\r\n  implements OnInit, OnDestroy {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red'\r\n    }\r\n  ];\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'data';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<DiaNaoUtil> = [];\r\n  dadosPagination: Array<DiaNaoUtil> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  diaNaoUtilSelecionado: DiaNaoUtil;\r\n  alteracoes: Array<any> = [];\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private diaNaoUtilService: ComercialCadastrosDiaNaoUtilService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private dateService: DateService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Dias não úteis');\r\n    this.onDetailPanelEmitter();\r\n    this.setDiaUtilSelecionado();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`\r\n        },\r\n        {\r\n          descricao: 'Dias não úteis'\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      dataInicial: [formValue.dataInicial, [Validators.required]],\r\n      dataFinal: [formValue.dataFinal, [Validators.required]],\r\n      motivo: [formValue.motivo],\r\n      codSituacao: [formValue.codSituacao],\r\n      feriado: [formValue.feriado],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required]\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      dataInicial: this.dateService.getFirstDayYear(),\r\n      dataFinal: this.dateService.getLastDayYear(),\r\n      motivo: null,\r\n      codSituacao: 0,\r\n      feriado: 0,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach(formKey => {\r\n            Object.keys(params).forEach(paramKey => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\r\n                  formValue[formKey] = this.dateService.convertStringToDate(\r\n                    params[paramKey],\r\n                    'pt-br'\r\n                  );\r\n                } else {\r\n                  if (!isNaN(Number(params[paramKey]))) {\r\n                    formValue[formKey] = Number(params[paramKey]);\r\n                  } else {\r\n                    formValue[formKey] = params[paramKey];\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setDiaUtilSelecionado(): void {\r\n    this.diaNaoUtilSelecionado = {\r\n      codigo: -1,\r\n      data: null,\r\n      motivo: null,\r\n      codSituacao: null,\r\n      situacao: null,\r\n      feriado: null\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) }\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.codigo) {\r\n      params.codigo = this.form.value.codigo;\r\n    }\r\n\r\n    if (this.form.value.dataInicial) {\r\n      params.dataInicial = this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.dataInicial)\r\n      );\r\n    }\r\n\r\n    if (this.form.value.dataFinal) {\r\n      params.dataFinal = this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.dataFinal)\r\n      );\r\n    }\r\n\r\n    if (this.form.value.motivo) {\r\n      params.motivo = this.form.value.motivo;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    if (this.form.value.feriado) {\r\n      params.feriado = this.form.value.feriado;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.diaNaoUtilService\r\n      .getListaDiasNaoUteis(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(diaNaoUtil: DiaNaoUtil): string {\r\n    let borderClass: string;\r\n\r\n    if (diaNaoUtil.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (diaNaoUtil.codSituacao === 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant'\r\n    });\r\n  }\r\n\r\n  onDetails(diaNaoUtil: DiaNaoUtil): void {\r\n    if (diaNaoUtil.feriado === 2) {\r\n      this.loaderNavbar = true;\r\n      this.detailPanelService.show();\r\n      this.detailPanelTitle = `HISTÓRICO DE ALTERAÇÕES / ${this.dateService.formatWithSlashes(\r\n        diaNaoUtil.data,\r\n        'pt-br'\r\n      )} (${diaNaoUtil.motivo})`;\r\n      this.setDiaUtilSelecionado();\r\n      this.diaNaoUtilSelecionado = diaNaoUtil;\r\n      this.alteracoes = [];\r\n\r\n      this.diaNaoUtilService\r\n        .getAlteracoes(diaNaoUtil.codigo)\r\n        .pipe(\r\n          finalize(() => {\r\n            setTimeout(() => {\r\n              this.loaderNavbar = false;\r\n            }, 500);\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: any) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              // Não está vazio.\r\n              this.detailPanelService.loadedFinished(false);\r\n              this.alteracoes = response.data;\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false\r\n            ) {\r\n              // Vazio.\r\n              this.detailPanelService.loadedFinished(true);\r\n            } else {\r\n              // Vazio e com possível erro.\r\n              this.pnotifyService.error();\r\n              this.detailPanelService.loadedFinished(true);\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            // Vazio e com erro.\r\n            this.detailPanelService.loadedFinished(true);\r\n\r\n            if (error.error.hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  onEdit(diaNaoUtil: DiaNaoUtil): void {\r\n    this.router.navigate(['../editar', diaNaoUtil.codigo], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, diaNaoUtil: DiaNaoUtil): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap(result =>\r\n          result ? this.activateDiaNaoUtil(index, diaNaoUtil) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(diaNaoUtil);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateDiaNaoUtil(index: number, diaNaoUtil: DiaNaoUtil): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.diaNaoUtilService.activateDiaNaoUtil(diaNaoUtil.codigo);\r\n  }\r\n\r\n  onInactivate(index: number, diaNaoUtil: DiaNaoUtil): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap(result =>\r\n          result ? this.inactivateDiaNaoUtil(index, diaNaoUtil) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(diaNaoUtil);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateDiaNaoUtil(index: number, diaNaoUtil: DiaNaoUtil): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 2;\r\n\r\n    return this.diaNaoUtilService.inactivateDiaNaoUtil(diaNaoUtil.codigo);\r\n  }\r\n\r\n  refreshMainData(diaNaoUtil: DiaNaoUtil): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (diaNaoUtil.codigo === this.dados[i].codigo) {\r\n        this.dados[i].codSituacao = diaNaoUtil.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9kaWFzLW5hby11dGVpcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"motivo\\\">Motivo</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"motivo\\\"\\r\\n              formControlName=\\\"motivo\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('motivo') + ' ' + onFieldRequired(form.controls.motivo)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('motivo')\\\" message=\\\"Motivo é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"data\\\">Data</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"data\\\"\\r\\n              type=\\\"text\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"data\\\"\\r\\n              [ngClass]=\\\"onFieldError('data') + ' ' + onFieldRequired(form.controls.data)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('data')\\\" message=\\\"Data é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"codSituacao\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n              <option value=\\\"2\\\">Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Dias não úteis\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dataInicial\\\">Data inicial</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataInicial\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataInicial\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired(form.controls.dataInicial)\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dataFinal\\\">Data final</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataFinal\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataFinal\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired(form.controls.dataFinal)\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"motivo\\\">Motivo</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"motivo\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"0\\\">Todos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n                <option value=\\\"2\\\">Inativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"feriado\\\">Feriados</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"feriado\\\"\\r\\n                formControlName=\\\"feriado\\\">\\r\\n                <option value=\\\"0\\\">Todos</option>\\r\\n                <option value=\\\"1\\\">Sim</option>\\r\\n                <option value=\\\"2\\\">Não</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover text-center\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Data\\\"\\r\\n                [active]=\\\"orderBy == 'data'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('data')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\">Motivo</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Feriado</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let diaNaoUtil of dadosPagination; let i = index\\\" [class.table-active]=\\\"diaNaoUtil.codigo == diaNaoUtilSelecionado.codigo && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"text-center\\\"\\r\\n              [class.hover]=\\\"diaNaoUtil.feriado == 2\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(diaNaoUtil)\\\"\\r\\n              (click)=\\\"onDetails(diaNaoUtil)\\\">\\r\\n              {{ diaNaoUtil.data | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              [class.hover]=\\\"diaNaoUtil.feriado == 2\\\"\\r\\n              (click)=\\\"onDetails(diaNaoUtil)\\\">\\r\\n              {{ diaNaoUtil.motivo | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center\\\"\\r\\n              [class.hover]=\\\"diaNaoUtil.feriado == 2\\\"\\r\\n              (click)=\\\"onDetails(diaNaoUtil)\\\">\\r\\n              {{ diaNaoUtil.feriado == 1 ? 'SIM' : 'NÃO' }}\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <div *ngIf=\\\"diaNaoUtil.feriado == 2\\\">\\r\\n                <span *ngIf=\\\"diaNaoUtil.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, diaNaoUtil)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"diaNaoUtil.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, diaNaoUtil)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(diaNaoUtil)\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n              <th scope=\\\"col\\\">Alteração</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\r\\n              <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\r\\n              <td>{{ alteracao.mensagem | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9kaWFzLW5hby11dGVpcy9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosDiaNaoUtilService } from '../dias-nao-uteis.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosDiaNaoUtilFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(private diaNaoUtilService: ComercialCadastrosDiaNaoUtilService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.diaNaoUtilService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codigo: null,\r\n        data: null,\r\n        motivo: null,\r\n        codSituacao: 1\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosDiaNaoUtilService } from '../dias-nao-uteis.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// Interfaces\r\nimport { DiaNaoUtil } from '../models/dia-nao-util';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-dia-nao-util-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss']\r\n})\r\nexport class ComercialCadastrosDiaNaoUtilFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private diaNaoUtilService: ComercialCadastrosDiaNaoUtilService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private dateService: DateService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar data';\r\n      } else {\r\n        this.appTitle = 'Nova data';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`\r\n        },\r\n        {\r\n          descricao: 'Dias não úteis',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/dias-nao-uteis/lista`\r\n        },\r\n        {\r\n          descricao: this.appTitle\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: DiaNaoUtil = this.activatedRoute.snapshot.data.detalhes\r\n        .data;\r\n\r\n      const data: Date =\r\n        detalhes.data === null\r\n          ? new Date()\r\n          : this.dateService.convertStringToDate(detalhes.data, 'usa');\r\n\r\n      this.form = this.formBuilder.group({\r\n        codigo: [detalhes.codigo],\r\n        data: [data, [Validators.required]],\r\n        motivo: [detalhes.motivo, [Validators.required]],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]]\r\n      });\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.diaNaoUtilService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosDiaNaoUtilFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosDiaNaoUtilListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosDiaNaoUtilFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialCadastrosDiaNaoUtilListaComponent },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosDiaNaoUtilFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosDiaNaoUtilFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosDiaNaoUtilFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosDiaNaoUtilFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialCadastrosDiaNaoUtilModuleRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { DiaNaoUtil } from './models/dia-nao-util';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosDiaNaoUtilService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/dias-nao-uteis`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaDiasNaoUteis(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codigo: number): Observable<any> {\r\n    return this.http.get(`${this.API}/alteracoes/${codigo}`).pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codigo: number): Observable<any> {\r\n    return this.http.get(`${this.API}/detalhes/${codigo}`).pipe(take(1));\r\n  }\r\n\r\n  private saveDiaNaoUtil(record: DiaNaoUtil) {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\r\n  }\r\n\r\n  private updateDiaNaoUtil(record: DiaNaoUtil) {\r\n    return this.http.put(`${this.API}/atualizar`, record).pipe(take(1));\r\n  }\r\n\r\n  save(record: DiaNaoUtil): Observable<any> {\r\n    if (record.codigo !== null) {\r\n      return this.updateDiaNaoUtil(record);\r\n    }\r\n\r\n    return this.saveDiaNaoUtil(record);\r\n  }\r\n\r\n  activateDiaNaoUtil(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  inactivateDiaNaoUtil(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\r\n  }\r\n}\r\n"]}