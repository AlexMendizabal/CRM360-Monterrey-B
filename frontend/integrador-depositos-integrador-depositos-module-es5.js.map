{"version":3,"sources":["webpack:///src/app/modules/abastecimento/cadastros/integrador-depositos/lista/lista.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/abastecimento/cadastros/integrador-depositos/cadastro/cadastro.component.html","webpack:///src/app/modules/abastecimento/cadastros/integrador-depositos/integrador-depositos.module.ts","webpack:///src/app/modules/abastecimento/cadastros/integrador-depositos/cadastro/cadastro.component.ts","webpack:///src/app/modules/abastecimento/cadastros/integrador-depositos/integrador-depositos-routing.module.ts","webpack:///src/app/modules/abastecimento/cadastros/integrador-depositos/integrador-depositos.service.ts","webpack:///src/app/modules/abastecimento/cadastros/integrador-depositos/lista/lista.component.ts","webpack:///src/app/modules/abastecimento/cadastros/integrador-depositos/cadastro/cadastro.component.scss","webpack:///src/app/modules/abastecimento/cadastros/integrador-depositos/lista/lista.component.scss"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","AbastecimentoCadastrosIntegradorDepositosModule","declarations","imports","forRoot","providers","provide","useValue","AbastecimentoCadastrosIntegradorDepositosCadastroComponent","activatedRoute","formBuilder","pnotifyService","atividadesService","routerService","titleService","confirmModalService","service","loaderFullScreen","noResultDepositos","currentUser","JSON","parse","localStorage","getItem","idUsuario","breadCrumbTree","depositos","dadosDepositosAssociados","depositosFilter","form","group","required","setTimeout","registrarAcesso","setBreadCrumb","checkRouterParams","setTitle","subscribe","params","descricao","routerLink","activatedRouteSubscription","queryParams","Object","keys","length","_response","getBase64UrlParams","setValuesIntegrador","item","getDepositos","unsubscribe","get","value","record","ID_APOI_INTE_PEDI","IdIntegrador","ID_DEPO","toString","IN_STAT","ID_USUA","parseInt","postIntegradorDepositos","loaderNavbar","pipe","resetValuesForm","loadDepositosAssociados","res","success","error","ID_ASSO_INTE_PEDI_DEPO","ID","confirmDelete","asObservable","result","deleteIntegradorDepositos","showConfirm","getIntegradorDepositos","idSituacao","filterArrayDepositos","status","notice","depositosFiltrados","idDeposito","forEach","deposito","push","filter","map","val","indexOf","reduce","acc","cum","Integrador","reset","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","selector","template","routes","path","children","component","redirectTo","pathMatch","AbastecimentoCadastrosIntegradorDepositosRoutingModule","forChild","exports","AbastecimentoCadastrosIntegradorDepositosService","httpClient","BASE_URL","API","observe","post","options","headers","body","AbastecimentoCadastrosIntegradorDepositosListaComponent","router","loading","loadingDetalhes","noResult","noResultDetalhes","compressedTable","selectedRow","dados","dadosDetalhes","integradores","reverse","key","itemsPerPage","totalItems","currentPage","begin","end","tableConfig","subtitleBorder","integrador","getIntegradores","search","setFormValues","patchValue","getIntegradoresPedidosFiltro","setRouterParams","undefined","NR_PAGE_INIC","TT_REGI_PAGI","ORDE_BY","ORDE_TYPE","onClose","navigate","relativeTo","setBase64UrlParams","getIntegradoresPedidos","i","select","e","event","page"],"mappings":"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","file":"integrador-depositos-integrador-depositos-module-es5.js","sourcesContent":["export default \"<loader-spinner-full-screen\\n  *ngIf=\\\"loaderFullScreen\\\"\\n></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Vínculo Integrador X Depósito\\\">\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <advanced-filter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3\\\">\\n          <label for=\\\"integrador\\\">Integrador</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [multiple]=\\\"true\\\"\\n            [items]=\\\"integradores\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            [hideSelected]=\\\"true\\\"\\n            [closeOnSelect]=\\\"true\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            bindLabel=\\\"NM_APOI_INTE_PEDI\\\"\\n            bindValue=\\\"ID\\\"\\n            formControlName=\\\"integrador\\\"\\n          >\\n          </ng-select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row\\\">\\n    <div\\n      [ngClass]=\\\"{ 'col-12': !compressedTable, 'col-6 pr-0': compressedTable }\\\"\\n      *ngIf=\\\"loading\\\"\\n    >\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr class=\\\"text-center\\\">\\n            <th scope=\\\"col\\\" class=\\\"hover\\\" (click)=\\\"sort('NM_APOI_INTE_PEDI')\\\">\\n              Integrador\\n              <span *ngIf=\\\"key == 'NM_APOI_INTE_PEDI'\\\"\\n                ><i\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\n                ></i\\n              ></span>\\n              <span *ngIf=\\\"key != 'NM_APOI_INTE_PEDI'\\\"\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\n              ></span>\\n            </th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"hover\\\"\\n              [hidden]=\\\"compressedTable\\\"\\n              width=\\\"5%\\\"\\n            ></th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"hover\\\"\\n              [hidden]=\\\"compressedTable\\\"\\n              width=\\\"5%\\\"\\n            ></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr\\n            *ngFor=\\\"\\n              let item of dados | orderBy: key:reverse | slice: begin:end;\\n              let i = index\\n            \\\"\\n          >\\n            <td\\n              class=\\\"text-center\\\"\\n              [ngClass]=\\\"[\\n                item.select ? 'bg-row-selected' : '',\\n                item.IN_STAT == 0 ? 'border-danger' : 'border-success'\\n              ]\\\"\\n            >\\n              {{ item.NM_APOI_INTE_PEDI }}\\n            </td>\\n            <td class=\\\"text-center\\\" [hidden]=\\\"compressedTable\\\" width=\\\"5%\\\">\\n              <div>\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn-icon-sm\\\"\\n                  tooltip=\\\"Editar\\\"\\n                  placement=\\\"left\\\"\\n                  container=\\\"body\\\"\\n                >\\n                  <i class=\\\"fas fa-edit\\\" (click)=\\\"onAdd(item)\\\"> </i>\\n                </button>\\n              </div>\\n            </td>\\n            <td class=\\\"text-center\\\" [hidden]=\\\"compressedTable\\\" width=\\\"5%\\\">\\n              <div>\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn-icon-sm\\\"\\n                  (click)=\\\"openTab(item)\\\"\\n                  tooltip=\\\"Detalhes\\\"\\n                  placement=\\\"left\\\"\\n                  container=\\\"body\\\"\\n                >\\n                  <i class=\\\"fas fa-search\\\"></i>\\n                </button>\\n              </div>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n    <div class=\\\"col-6\\\">\\n      <tabset [hidden]=\\\"!compressedTable\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn-icon close position-absolute\\\"\\n          (click)=\\\"onClose()\\\"\\n        >\\n          <i class=\\\"fas fa-times\\\"></i>\\n        </button>\\n        <tab heading=\\\"Detalhes\\\">\\n          <div\\n            class=\\\"border-right border-left border-bottom px-3 pt-3\\\"\\n            style=\\\"overflow: auto; height: 338px;\\\"\\n          >\\n            <custom-table *ngIf=\\\"!noResultDetalhes && loadingDetalhes\\\">\\n              <ng-template #thead let-thead>\\n                <tr class=\\\"text-center\\\">\\n                  <th scope=\\\"col\\\">Empresa</th>\\n                  <th scope=\\\"col\\\">Depósito</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of dadosDetalhes\\\">\\n                  <td class=\\\"text-left\\\">{{ item.NM_EMPR }}</td>\\n                  <td class=\\\"text-left\\\">{{ item.NM_DEPO }}</td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n            <div\\n              *ngIf=\\\"noResultDetalhes\\\"\\n              class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\n              style=\\\"height: 80%;\\\"\\n            >\\n              <empty-result\\n                message=\\\"Nenhuma informação encontrada\\\"\\n              ></empty-result>\\n            </div>\\n          </div>\\n        </tab>\\n      </tabset>\\n    </div>\\n    <div\\n      class=\\\"col-12 mb-2 ml-2\\\"\\n      *ngIf=\\\"!noResult && dados?.length > itemsPerPage\\\"\\n    >\\n      Exibindo {{ begin + 1 }} a {{ end }} de {{ dados?.length }}\\n      <div class=\\\"d-flex\\\">\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"dados?.length\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\"\\n        >\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n  <div\\n    *ngIf=\\\"noResult\\\"\\n    class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\n    style=\\\"height: 80%;\\\"\\n  >\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-full-screen\\n  *ngIf=\\\"loaderFullScreen\\\"\\n></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Cadastro\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\n    (click)=\\\"onSave()\\\"\\n  >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"row justify-content-md-center mt-3\\\">\\n        <div class=\\\"col-md-7\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <p class=\\\"pFont\\\">\\n                <strong>INTEGRADOR</strong><br />\\n                {{ Integrador }}\\n              </p>\\n            </div>\\n          </div>\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-lg-6 mb-lg-0\\\">\\n                <label for=\\\"deposito\\\">Depósitos</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"true\\\"\\n                  [multiple]=\\\"true\\\"\\n                  [items]=\\\"depositosFilter\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  [hideSelected]=\\\"true\\\"\\n                  [closeOnSelect]=\\\"false\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  bindLabel=\\\"NM_DEPO\\\"\\n                  bindValue=\\\"ID\\\"\\n                  formControlName=\\\"depositos\\\"\\n                  [ngClass]=\\\"onFieldRequired('depositos')\\\">\\n                >\\n                </ng-select>\\n                <invalid-form-control [show]=\\\"onFieldInvalid('depositos')\\\" message=\\\"Depósito é obrigatório.\\\"></invalid-form-control>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n      <div\\n        class=\\\"row justify-content-md-center mt-3\\\"\\n        [hidden]=\\\"noResultDepositos\\\"\\n      >\\n        <div class=\\\"form-group col-md-7\\\">\\n          <label for=\\\"depositosVinculados\\\">Depósitos Vinculados</label>\\n          <table\\n            class=\\\"table table-sm table-hover border-left border-right border-bottom text-center table-fixed w-100\\\"\\n          >\\n            <tbody>\\n              <tr *ngFor=\\\"let item of dadosDepositosAssociados\\\">\\n                <td class=\\\"text-truncate text-left\\\">{{ item.NM_DEPO }}</td>\\n                <td style=\\\"width: 40px;\\\">\\n                  <button\\n                    class=\\\"btn-icon-sm\\\"\\n                    style=\\\"color: red;\\\"\\n                    tooltip=\\\"Excluir\\\"\\n                    (click)=\\\"onDelete(item)\\\"\\n                  >\\n                    <i class=\\\"far fa-trash-alt\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\nimport { TooltipModule, PaginationModule, TabsModule, ModalModule } from 'ngx-bootstrap';\nimport { OrderModule } from 'ngx-order-pipe';\n\n/* Localização Brasil */\nimport { registerLocaleData } from '@angular/common';\nimport ptBr from '@angular/common/locales/pt';\nregisterLocaleData(ptBr)\n/* Localização Brasil */\n\nimport { AbastecimentoCadastrosIntegradorDepositosRoutingModule } from './integrador-depositos-routing.module';\nimport { AbastecimentoCadastrosIntegradorDepositosListaComponent } from './lista/lista.component';\nimport { AbastecimentoCadastrosIntegradorDepositosCadastroComponent } from './cadastro/cadastro.component';\n\n@NgModule({\n  declarations: [\n    AbastecimentoCadastrosIntegradorDepositosListaComponent, \n    AbastecimentoCadastrosIntegradorDepositosCadastroComponent\n  ],\n  imports: [\n    CommonModule,\n    AbastecimentoCadastrosIntegradorDepositosRoutingModule,\n    NotFoundModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    TooltipModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    NgSelectModule,\n    TemplatesModule,\n    OrderModule\n  ],\n  providers: [{ provide: LOCALE_ID, useValue: 'pt-PT' }]\n})\nexport class AbastecimentoCadastrosIntegradorDepositosModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl\n} from '@angular/forms';\n\nimport { Subscription, EMPTY } from 'rxjs';\nimport { finalize, take, switchMap } from 'rxjs/operators';\n\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n//Converte rota em base64\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\nimport { AbastecimentoCadastrosIntegradorDepositosService } from './../integrador-depositos.service';\n\n@Component({\n  selector: 'cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss']\n})\nexport class AbastecimentoCadastrosIntegradorDepositosCadastroComponent implements OnInit {\n  loaderFullScreen = true;\n  loaderNavbar: boolean;\n  noResultDepositos: boolean = false;\n\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\n  idUsuario: any = this.currentUser['info']['id'];\n\n  form: FormGroup;\n\n  breadCrumbTree: any = [];\n  depositos: any = [];\n  dadosDepositosAssociados: any = [];\n  depositosFilter: any = [];\n  Integrador: string;\n  IdIntegrador: string;\n\n  activatedRouteSubscription: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private routerService: RouterService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private service: AbastecimentoCadastrosIntegradorDepositosService\n  ) {\n    this.form = this.formBuilder.group({\n      depositos: [null, Validators.required]\n    })\n   }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.loaderFullScreen = false;\n    }, 1000);\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.checkRouterParams();\n    this.titleService.setTitle('Vinculo Integrador X Depósitos');  \n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/abastecimento/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/abastecimento/cadastros/${params['idSubModulo']}`\n        },\n        {\n          descricao: 'Vínculo Integrador X Depósitos',\n          routerLink: `/abastecimento/cadastros/${params['idSubModulo']}/integrador-depositos/lista`\n        },\n        {\n          descricao: 'Cadastro'\n        },\n      ];\n    });\n  }\n\n  checkRouterParams(): void {\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let _response = this.routerService.getBase64UrlParams(queryParams);\n          this.setValuesIntegrador(_response.item);\n          this.getDepositos();\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n  }\n\n  onSave(): void {\n    let depositos = this.form.get(\"depositos\").value;\n   \n    let record = {\n      ID_APOI_INTE_PEDI: this.IdIntegrador,\n      ID_DEPO: depositos.toString(),\n      IN_STAT: 1,\n      ID_USUA: parseInt(this.idUsuario)\n    };\n\n    this.postIntegradorDepositos(record);\n  }\n\n  postIntegradorDepositos(record: any): void {\n    this.loaderNavbar = true;\n    \n    this.service\n      .postIntegradorDepositos(record)\n      .pipe(\n        finalize(() => {\n          (this.loaderNavbar = false), this.resetValuesForm(), this.loadDepositosAssociados();\n        })\n      )\n      .subscribe(\n        (res: any) => {\n          if (Object.keys(res).length > 0) {\n            if (res['responseCode'] === 201) {\n              this.pnotifyService.success(res['message']);\n            } else {\n              this.pnotifyService.error(res['message']);\n            }\n          }\n        },\n        error => {\n          this.pnotifyService.error(error['error']);\n        }\n      );\n  }\n\n  onDelete(item: any): void { \n    this.loaderNavbar = true;\n\n    let record = {\n      ID_ASSO_INTE_PEDI_DEPO: item.ID,\n      ID_USUA: parseInt(this.idUsuario)\n    }\n\n    this.confirmDelete()\n    .asObservable()\n    .pipe(\n      take(1),\n      switchMap(result =>\n        result ? this.deleteIntegradorDepositos(record) : EMPTY\n      )\n    )\n    .subscribe(\n      (success: any) => {\n        this.pnotifyService.success();\n        this.loaderNavbar = false;\n        this.loadDepositosAssociados();\n      },\n      (error: any) => {\n        this.pnotifyService.error();\n        this.loaderNavbar = false;\n        this.loadDepositosAssociados();\n      }\n    );\n\n    this.deleteIntegradorDepositos(record);\n  }\n\n  deleteIntegradorDepositos(record: any): any {\n    return this.service.deleteIntegradorDepositos(record);\n  }\n\n  confirmDelete() {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  loadDepositosAssociados(): void {\n    this.getIntegradorDepositos({\n      ID_APOI_INTE_PEDI: this.IdIntegrador\n    });\n  }\n\n  getDepositos(): void {\n    let idSituacao = 1;\n    this.loaderNavbar = true;\n    this.depositos = [];\n\n    this.service\n      .getDepositos(idSituacao)\n      .pipe(finalize(() => {(this.loaderNavbar = false); (this.loadDepositosAssociados())}))\n      .subscribe(\n        res => {\n          if (Object.keys(res).length > 0) {\n            this.depositos = res['body']['result'];\n          }\n        },\n        error => {\n          this.pnotifyService.error('Erro ao carregar Depositos');\n        }\n      );\n  }\n\n  getIntegradorDepositos(params: any): void {\n    this.dadosDepositosAssociados = [];\n    this.loaderNavbar = true;\n\n    this.service\n      .getIntegradorDepositos(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.filterArrayDepositos();\n        })\n      )\n      .subscribe(\n        res => {\n          if (res.status === 200) {\n            if (res['body']['responseCode'] === 200) {               \n              this.noResultDepositos = false;\n              this.dadosDepositosAssociados = res['body']['result'];\n            } else if (res['body']['responseCode'] === 404) {\n              this.noResultDepositos = true;\n              this.pnotifyService.notice(res['body']['message']);\n            }\n          }\n        },\n        error => {\n          this.pnotifyService.error(\n            'Erro ao carregar depósitos associados'\n          );\n        }\n      );\n  }\n  \n  filterArrayDepositos(): void {\n    this.depositosFilter = [];\n    let depositosFiltrados: Array<any> = [];\n    let idDeposito: Array<any> = [];\n\n    if(this.dadosDepositosAssociados.length > 0) {\n      this.dadosDepositosAssociados.forEach(deposito => {\n        return idDeposito.push(deposito['ID_DEPO']);\n      });\n      \n      depositosFiltrados = this.depositos.filter(item =>\n        idDeposito\n        .map(val => item.ID.indexOf(val))\n        .map(val => (val > -1 ? false : true))\n        .reduce((acc, cum) => acc && cum)\n        );\n        \n        this.depositosFilter = depositosFiltrados;\n    } else {\n      this.depositosFilter = this.depositos;\n    }\n\n     \n  }\n\n  setValuesIntegrador(params: any): void {\n    this.Integrador = params['NM_APOI_INTE_PEDI'];\n    this.IdIntegrador = params['ID'];\n  }\n\n  resetValuesForm() {\n    this.form.get('depositos').reset();\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any): any {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string): any {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AbastecimentoCadastrosIntegradorDepositosCadastroComponent } from './cadastro/cadastro.component';\nimport { AbastecimentoCadastrosIntegradorDepositosListaComponent } from './lista/lista.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path:'lista',\n        component: AbastecimentoCadastrosIntegradorDepositosListaComponent\n      },\n  \n      {\n        path: 'cadastro',\n        component: AbastecimentoCadastrosIntegradorDepositosCadastroComponent\n      },\n      {\n        path: '',\n        redirectTo: 'lista',\n        pathMatch: 'full'\n      }\n    ]\n  }\n  ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AbastecimentoCadastrosIntegradorDepositosRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AbastecimentoCadastrosIntegradorDepositosService {\n\n  private readonly BASE_URL = environment.API;\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  getDepositos(idSituacao) {\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/depositos`, {\n      params: {\n        IN_STAT: idSituacao\n      },\n      observe: \"response\"\n    });\n  }\n\n  getIntegradorDepositos(params) : Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/cadastros/associacao-integrador-pedidos-depositos`,\n    {\n      params: {\n        ID_APOI_INTE_PEDI: params['ID_APOI_INTE_PEDI']\n      },\n      observe: \"response\"\n    })\n    .pipe(take(1))\n  }\n\n  getIntegradoresPedidosFiltro(params) : Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/integradores-pedidos`, {\n      params: {\n        IN_STAT: params\n      },\n      observe: \"response\"\n    });\n  }\n\n  getIntegradoresPedidos(params) : Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/integradores-pedidos`, {\n      params: {\n        IN_STAT: params['IN_STAT'],\n        ID: params['ID_APOI_INTE_PEDI']\n      },\n      observe: \"response\"\n    });\n  }\n\n  postIntegradorDepositos(record) : Observable<any> {\n    return this.httpClient.post(`${this.BASE_URL}/abastecimento/cadastros/associacao-integrador-pedidos-depositos`,\n      record\n    )\n    .pipe(take(1))\n  }\n\n  deleteIntegradorDepositos(record) : Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n      body: record\n    };\n    return this.httpClient.delete(`${this.BASE_URL}/abastecimento/cadastros/associacao-integrador-pedidos-deposito`,\n    options\n    )\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n//Converte rota em base64\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\nimport { PageChangedEvent } from 'ngx-bootstrap';\nimport { AbastecimentoCadastrosIntegradorDepositosService } from '../integrador-depositos.service';\n\n@Component({\n  selector: 'lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class AbastecimentoCadastrosIntegradorDepositosListaComponent implements OnInit {\n  loaderFullScreen = true;\n  loaderNavbar: boolean;\n  loading: boolean = false;\n  loadingDetalhes: boolean = false;\n  noResult: boolean = false;\n  noResultDetalhes: boolean = false;\n  compressedTable: boolean = false;\n  selectedRow: boolean = false;\n\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\n  idUsuario: any = this.currentUser['info']['id'];\n\n  form: FormGroup;\n\n  breadCrumbTree: any = [];\n  dados: any = [];\n  dadosDetalhes: any = [];\n  integradores: any = [];\n\n  activatedRouteSubscription: Subscription;\n\n  /* Ordenação */\n  reverse: boolean = false;\n  key: string = 'TP_MATE';\n  /* Ordenação */\n\n  /* Paginação */\n  itemsPerPage: number = 15;\n  totalItems: number = 15;\n  currentPage: number = 1;\n  begin: number = 0;\n  end: number = 15;\n  /* Paginação */\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private routerService: RouterService,\n    private titleService: TitleService,\n    private service: AbastecimentoCadastrosIntegradorDepositosService\n  ) { \n    this.form = this.formBuilder.group({\n      integrador: [null]\n    });\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.loaderFullScreen = false;\n    }, 1000);\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.checkRouterParams();\n    this.getIntegradores();\n    this.titleService.setTitle('Vínculo Integrador X Depósito');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/abastecimento/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/abastecimento/cadastros/${params['idSubModulo']}`\n        },\n        {\n          descricao: 'Vínculo Integrador X Depósito'\n        }\n      ];\n    });\n  }\n\n  checkRouterParams(): void {\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let _response = this.routerService.getBase64UrlParams(queryParams);\n          this.search(_response);\n          this.setFormValues(_response);\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n  }\n\n  setFormValues(queryParams: any): void {\n    let integrador = queryParams['ID_APOI_INTE_PEDI'] ? queryParams['ID_APOI_INTE_PEDI'] : \"\";;\n\n    this.form.patchValue({\n      integrador: integrador\n    });\n  }\n\n  getIntegradores(): void {\n    let idSituacao = 1;\n    this.loaderNavbar = true;\n    this.integradores = [];\n\n    this.service\n      .getIntegradoresPedidosFiltro(idSituacao)\n      .pipe(finalize(() => (this.loaderNavbar = false)))\n      .subscribe(\n        res => {\n          if (Object.keys(res).length > 0) {\n            this.integradores = res['body']['result'];\n          }\n        },\n        error => {\n          this.pnotifyService.error('Erro ao carregar fornecedor');\n        }\n      );\n  }\n\n  onFilter(): void {\n    this.setRouterParams({\n      ID_APOI_INTE_PEDI:\n        this.form.value['integrador'] === null ||\n        this.form.value['integrador'] === undefined\n          ? ''\n          : this.form.value['integrador'],\n      IN_STAT: '',\n      NR_PAGE_INIC: '',\n      TT_REGI_PAGI: '',\n      ORDE_BY: '',\n      ORDE_TYPE: ''\n      });\n\n    this.onClose();\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(params)\n    });\n    this.search(params);\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.loading = false;\n\n    this.service\n      .getIntegradoresPedidos(params)\n      .pipe(finalize(() => (this.loaderNavbar = false)))\n      .subscribe(\n        (res: any) => {\n          if (res.status === 200) {\n            if (res['body']['responseCode'] === 200) {\n              this.dados = res['body']['result'];\n              this.loading = true;\n              this.noResult = false;\n            } else if (res['body']['responseCode'] === 404) {\n              this.noResult = true;\n              this.pnotifyService.notice('Não há dados');\n            }\n          }\n        },\n        error => {\n          this.pnotifyService.error('Erro ao carregar dados');\n          this.noResult = true;\n        }\n      );\n  }\n\n  openTab(i: any): void {\n    i.select = !i.select;\n\n    this.getIntegradorDepositos({\n        ID_APOI_INTE_PEDI: i['ID']\n    });\n\n    this.compressedTable = true;\n  }\n\n  getIntegradorDepositos(params: any): void {\n    this.loadingDetalhes = false;\n    this.noResultDetalhes= false;\n    this.loaderNavbar = true;\n\n    this.dadosDetalhes = [];\n    \n    this.service\n    .getIntegradorDepositos(params)\n    .pipe(finalize(() => (this.loaderNavbar = false)))\n    .subscribe(\n      (res: any) => {\n        if (Object.keys(res).length > 0) {\n          if (res['body']['responseCode'] == 200) {\n            this.dadosDetalhes = res['body']['result'];\n            this.noResultDetalhes= false;\n            this.loadingDetalhes = true;\n          } else if (res['body']['responseCode'] == 404) {\n            this.loadingDetalhes = false;\n            this.noResultDetalhes= true;\n            this.pnotifyService.notice(res['body']['message']);\n            }\n          }\n        },\n        error => {\n          this.loadingDetalhes = false;\n          this.pnotifyService.error('Erro ao carregar depósitos vinculados');\n        }\n      );\n  }\n\n  onClose(): void {\n    this.dados.forEach(e => {\n      e.select = false;\n    });\n    this.selectedRow = false;\n    this.compressedTable = false;\n  }\n\n  onAdd(item: any): void {\n    this.router.navigate(['../cadastro'], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams({\n       item\n      })\n    });\n  }\n\n  /* Ordenação */\n  sort(key: string): void {\n    this.key = key;\n    this.reverse = !this.reverse;\n  }\n  /* Ordenação */\n\n  /* Paginação Tabela Principal*/\n  onPageChanged(event: PageChangedEvent): void {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n  /* Paginação */\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWJhc3RlY2ltZW50by9jYWRhc3Ryb3MvaW50ZWdyYWRvci1kZXBvc2l0b3MvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","export default \".bg-row-selected {\\n  background-color: #91b8f0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hYmFzdGVjaW1lbnRvL2NhZGFzdHJvcy9pbnRlZ3JhZG9yLWRlcG9zaXRvcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9DQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2FiYXN0ZWNpbWVudG8vY2FkYXN0cm9zL2ludGVncmFkb3ItZGVwb3NpdG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJnLXJvdy1zZWxlY3RlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM5MWI4ZjAhaW1wb3J0YW50O1xufSJdfQ== */\";"]}