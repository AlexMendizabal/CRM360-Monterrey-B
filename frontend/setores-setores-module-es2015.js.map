{"version":3,"sources":["./src/app/modules/logistica/yms/setores/lista/lista.component.ts","./src/app/modules/logistica/yms/setores/cadastro/cadastro.component.scss","./src/app/modules/logistica/yms/setores/cadastro/cadastro.component.ts","./src/app/modules/logistica/yms/setores/setores-routing.module.ts","./src/app/modules/logistica/yms/setores/lista/lista.component.html","./src/app/modules/logistica/yms/setores/associacao-materiais/associacao-materiais.component.ts","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/logistica/yms/setores/associacao-materiais/associacao-materiais.component.scss","./src/app/modules/logistica/yms/setores/lista/lista.component.scss","./src/app/modules/logistica/yms/setores/setores.module.ts","./src/app/modules/logistica/yms/setores/cadastro/cadastro.component.html","./src/app/modules/logistica/yms/setores/associacao-materiais/associacao-materiais.component.html"],"names":[],"mappings":"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","file":"setores-setores-module-es2015.js","sourcesContent":["import { LogisticaYmsTiposSetorService } from './../../tipos-setor/services/tipos-setor.service';\r\nimport { ILogisticaYmsTiposSetor } from './../../tipos-setor/models/tipos-setor';\r\n//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, Data } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { LogisticaYmsSetoresService } from '../services/setores.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaYmsSetores } from './../models/setores';\r\nimport { LogisticaFiliaisService } from '../../../cadastros/filiais/services/filiais.service';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-yms-setores-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaYmsSetoresListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  loadingSetores: boolean;\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false;\r\n  loadingTiposSetor: boolean;\r\n  loadingFilial: boolean;\r\n  loadingAssociacaoMateriais: boolean;\r\n  loadingAssociacaoIntervalos: boolean;\r\n\r\n  //VARIAVEIS\r\n  noAssocIntervalos: boolean\r\n  associacaoIntervalos: Array<ILogisticaYmsSetores>;\r\n  noAssocMateriais: boolean\r\n  associacaoMateriais: Array<ILogisticaYmsSetores>;\r\n  totalItens: any = [];\r\n  filial = []\r\n  filterSetores: Array<ILogisticaYmsSetores>;\r\n  setores: Array<ILogisticaYmsSetores>;\r\n  setorSelecionado: ILogisticaYmsSetores;\r\n  tiposSetor: Array<ILogisticaYmsTiposSetor>;\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigAssocIntervalos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  // Tipos de Situação dos Setores (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private dateService: DateService,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private detailPanelService: DetailPanelService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private setoresService: LogisticaYmsSetoresService,\r\n    private filiaisService: LogisticaFiliaisService,\r\n    private tiposSetorService: LogisticaYmsTiposSetorService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.onDetailPanelEmitter();\r\n    this.getFilterSetores();\r\n    this.getTiposSetor();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n          this.getSetores(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_YMS_SETO: [null],\r\n      NM_SETO: [null],\r\n      UUID_LOGI_YMS_SETO_TIPO: [null],\r\n      NM_SETO_TIPO: [null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      NR_MATR: [null],\r\n      NM_USUA: [null],\r\n      DT_INCL: [null],\r\n      DT_ATUA: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'YMS',\r\n        routerLink: `/logistica/yms/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Setores',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onDetails(setores: ILogisticaYmsSetores): void {\r\n    this.getIntervalos({UUID_LOGI_YMS_SETO: setores.UUID_LOGI_YMS_SETO})\r\n    this.getMateriaisAssociados({UUID_LOGI_YMS_SETO: setores.UUID_LOGI_YMS_SETO});\r\n    this.detailPanelService.show();\r\n    this.setorSelecionado = setores;\r\n    this.detailPanelService.loadedFinished(false);\r\n  }\r\n\r\n  getIntervalos(params?) {\r\n    params.IN_STAT = '1';\r\n    params.IN_PAGI = '0';\r\n    params.ORDE_BY = 'ID_REFE_ERP'\r\n    params.ORDE_TYPE = 'desc'\r\n\r\n    this.loadingAssociacaoIntervalos = true;\r\n    this.setoresService\r\n      .getIntervalos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingAssociacaoIntervalos = false;\r\n        })\r\n      )\r\n      .subscribe(response => {\r\n        if (response.status === 200) {\r\n          this.associacaoIntervalos = response.body['data'];\r\n\r\n          if (this.associacaoIntervalos.length > 9) {\r\n            this.tableConfigAssocIntervalos.fixedHeader = true;\r\n          }\r\n\r\n          this.noAssocIntervalos = false\r\n        } else {\r\n          this.pnotify.notice('Nenhuma associação encontrada!');\r\n          this.noAssocIntervalos = true\r\n          this.associacaoIntervalos = [];\r\n        }\r\n      },\r\n      (error) => {\r\n        this.pnotify.error();\r\n      }\r\n    );\r\n  }\r\n\r\n  getMateriaisAssociados(params){\r\n    this.loadingAssociacaoMateriais = true;\r\n    params.IN_STAT = '1';\r\n    params.IN_PAGI = '0';\r\n    params.ORDE_BY = 'ID_REFE_ERP'\r\n    params.ORDE_TYPE = 'desc'\r\n    console.log(params)\r\n    this.setoresService\r\n      .getMateriaisAssociados(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingAssociacaoMateriais = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.associacaoMateriais = response.body['data'];\r\n\r\n            if (this.associacaoMateriais.length > 9) {\r\n              this.tableConfigAssocMateriais.fixedHeader = true;\r\n            }\r\n\r\n            this.noAssocMateriais = false\r\n          } else {\r\n            this.pnotify.notice('Nenhuma associação encontrada!');\r\n            this.noAssocMateriais = true\r\n            this.associacaoMateriais = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n\r\n  getSetores(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.setoresService\r\n      .getSetores(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.setores = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.setores = [];\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.noResult = true;\r\n          const message = error.error.message\r\n          message ? this.pnotify.error(message): this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getFilterSetores(params?: Partial<ILogisticaYmsSetores>) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = 1;\r\n    _params.IN_PAGI = 0;\r\n    this.loadingSetores = true;\r\n    this.setoresService\r\n      .getSetores(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingSetores = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.filterSetores = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      },\r\n      (error: any) => {\r\n        const message = error.error.message\r\n        message ? this.pnotify.error(message): this.pnotify.error();\r\n      }\r\n    );\r\n  }\r\n\r\n  getTiposSetor() {\r\n    this.loadingTiposSetor = true;\r\n    this.tiposSetorService\r\n      .getTiposSetor({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTiposSetor = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.tiposSetor = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      },\r\n      (error: any) => {\r\n        const message = error.error.message\r\n        message ? this.pnotify.error(message): this.pnotify.error();\r\n      }\r\n    );\r\n}\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(setores: ILogisticaYmsSetores): string {\r\n    let borderClass: string;\r\n\r\n    if (setores.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (setores.IN_STAT == 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(params: ILogisticaYmsSetores) {\r\n    const stat = params.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          params.IN_STAT = stat;\r\n          return this.setoresService.postSetores(params);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.setores.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Setores${dataExport}`);\r\n  }\r\n  convertMysqlTime(time: string) {\r\n    return this.dateService.convertMysqlTime(time);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9zZXRvcmVzL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { IconesFontAwesomeService } from 'src/app/shared/services/core/icons-fonts-awesome.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { LogisticaYmsTurnosService } from './../../turnos/services/turnos.service';\r\nimport { ILogisticaYmsTurnos } from './../../turnos/models/turnos';\r\nimport { LogisticaFiliaisService } from './../../../cadastros/filiais/services/filiais.service';\r\nimport { ILogisticaFiliais } from './../../../cadastros/filiais/models/filiais';\r\nimport { ILogisticaYmsTiposCircuito } from './../../tipos-circuito/models/tipos-circuito';\r\nimport { LogisticaYmsTiposCircuitoService } from './../../tipos-circuito/services/tipos-circuito.service';\r\nimport { FormArray } from '@angular/forms';\r\nimport { ILogisticaYmsTiposSetor } from './../../tipos-setor/models/tipos-setor';\r\nimport { LogisticaYmsTiposSetorService } from './../../tipos-setor/services/tipos-setor.service';\r\n//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription, forkJoin } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LogisticaYmsSetoresService } from '../services/setores.service';\r\n//interfaces\r\nimport { ILogisticaYmsSetores } from '../models/setores';\r\nimport { isNull } from 'util';\r\nimport { elasticIn } from '@amcharts/amcharts4/.internal/core/utils/Ease';\r\n\r\n@Component({\r\n  selector: 'logistica-yms-setores-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaYmsSetoresCadastroComponent\r\n  implements OnInit {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  icone: string;\r\n  icones: Array<any>;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  filiais: Array<ILogisticaFiliais>;\r\n  turnos: Array<ILogisticaYmsTurnos>;\r\n  tiposSetor: Array<ILogisticaYmsTiposSetor>;\r\n  tiposCircuito:Array<ILogisticaYmsTiposCircuito>;\r\n\r\n  //loading\r\n  disabledForm = false;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n  loadingFiliais: boolean;\r\n  loadingIcones: boolean;\r\n  loadingTurnos: boolean;\r\n  loadingTiposSetor: boolean;\r\n  loadingTiposCircuito: boolean;\r\n  loadingTiposCircuitoSetor: boolean;\r\n\r\n  tipos = [\r\n    {\r\n      nome: 'FIXO',\r\n      cod: 'FIXO',\r\n    },\r\n    { \r\n      nome: 'VARIÁVEL',\r\n      cod: 'VARIAVEL',\r\n    },\r\n  ];\r\n\r\n\r\n  constructor(\r\n    private dateService: DateService,\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private localeService: BsLocaleService,\r\n    private filiaisService: LogisticaFiliaisService,\r\n    private setoresService: LogisticaYmsSetoresService,\r\n    private foawService: IconesFontAwesomeService,\r\n    private tiposSetorService: LogisticaYmsTiposSetorService,\r\n    private tiposCircuitoService: LogisticaYmsTiposCircuitoService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n    this.getTiposSetor();\r\n    this.getTiposCircuito()\r\n    this.getFiliais();\r\n    this.getIcones();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id')) {\r\n      this.getSetor(_params['id']);\r\n      this.getIntervalos({ UUID_LOGI_YMS_SETO: _params['id'], IN_STAT:'1' });\r\n    } else { \r\n      this.onAddIntervalos();\r\n    } \r\n  }\r\n\r\n  getIntervalos(params?) {\r\n    this.loadingNavBar = true;\r\n    this.loadingTiposCircuitoSetor = true\r\n    this.setoresService\r\n      .getIntervalos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n          this.loadingTiposCircuitoSetor = false\r\n        })\r\n      )\r\n      .subscribe(async (response) => {\r\n        if (response.status !== 200) {\r\n          return;\r\n        }\r\n        const intervalos = response['body']['data'];\r\n        const promise = () => intervalos.forEach(() => this.onAddIntervalos());\r\n        await Promise.resolve(promise());\r\n        this.form.get('intervalos').patchValue(intervalos)\r\n         \r\n      },\r\n      (error) => {\r\n        this.pnotify.error('Não foi encontrado nenhum material');\r\n      }\r\n    );\r\n  }\r\n\r\n  getTiposCircuito() {\r\n    this.loadingTiposCircuito = true;\r\n    this.tiposCircuitoService\r\n      .getTiposCircuito({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTiposCircuito = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.tiposCircuito = response.body['data'];\r\n        }else{\r\n          this.tiposCircuito = [];\r\n          this.pnotify.notice('Nenhum tipo de circuito encontrado!')\r\n        }\r\n      }),\r\n      (error: any) => {\r\n        const message = error.error.message\r\n        message ? this.pnotify.error(message): this.pnotify.error();\r\n      }\r\n  }\r\n\r\n  getTiposSetor() {\r\n    this.loadingTiposSetor = true;\r\n    this.tiposSetorService\r\n      .getTiposSetor({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTiposSetor = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.tiposSetor = response.body['data'];\r\n        }else{\r\n          this.tiposSetor = [];\r\n          this.pnotify.notice('Nenhum tipo de setor encontrado!')\r\n        }\r\n      },\r\n      (error: any) => {\r\n        const message = error.error.message\r\n        message ? this.pnotify.error(message): this.pnotify.error();\r\n      }\r\n    );\r\n  }\r\n\r\n  getSetor(id: string) {\r\n    this.loading = true;\r\n    this.setoresService\r\n      .getSetor(id)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            const data : Partial<ILogisticaYmsSetores> = response.body['data']\r\n            this.form.patchValue(data)\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.noResult = true;\r\n          const message = error.error.message\r\n          message ? this.pnotify.error(message): this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n  \r\n  getFiliais() {\r\n    this.loadingFiliais = true;\r\n    this.filiaisService\r\n      .getFiliais({ IN_STAT: '1', IN_PAGI: '0', IN_YMS: 1 })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingFiliais = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.filiais = response.body['data'];\r\n        }else{\r\n          this.filiais = [];\r\n          this.pnotify.notice('Nenhuma filial encontrada!')\r\n        }\r\n      }),\r\n      (error: any) => {\r\n        const message = error.error.message\r\n        message ? this.pnotify.error(message): this.pnotify.error();\r\n      }\r\n  }\r\n\r\n\r\n  get formIntervalos() {\r\n    return this.form.get('intervalos') as FormArray;\r\n  }\r\n\r\n  onAddIntervalos() {\r\n    this.formIntervalos.push(\r\n      this.formBuilder.group({\r\n        UUID_LOGI_YMS_SETO: [null],\r\n        UUID_LOGI_YMS_CIRC_TIPO: [null, [Validators.required]],\r\n        TP_INTV: [null, [Validators.required]],\r\n        HR_INTV: [null, [Validators.required]],\r\n      })\r\n    );\r\n  }\r\n\r\n  onDeleteTipoCircuito(index: number) {\r\n    if (this.formIntervalos.length === 1) {\r\n      this.pnotify.notice('Informe ao menos um tipo de circuito.');\r\n      return\r\n    }\r\n    const id = this.form.get('UUID_LOGI_YMS_SETO').value\r\n    let intervalos = this.formIntervalos.at(index).value;\r\n    intervalos.UUID_LOGI_YMS_SETO = id,\r\n    intervalos = {...intervalos,'IN_STAT':'0'}\r\n    if(!intervalos['UUID_LOGI_YMS_CIRC_TIPO']){\r\n      this.formIntervalos.removeAt(index);\r\n      return;\r\n    }\r\n    this.loadingNavBar= true;\r\n    this.setoresService\r\n      .postIntervalos(intervalos)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loadingNavBar= false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response) => {\r\n            if (response.status === 200) {\r\n              this.formIntervalos.removeAt(index);\r\n              this.pnotify.success();\r\n            } else {\r\n              this.pnotify.error();\r\n            }\r\n          },\r\n          (error) => {\r\n            this.pnotify.error();\r\n          }\r\n        );\r\n}\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'YMS',\r\n        routerLink: `/logistica/yms/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Setores',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_YMS_SETO: [null],\r\n      NM_SETO: [null, [Validators.required]],\r\n      UUID_LOGI_YMS_SETO_TIPO: [null, [Validators.required]],\r\n      UUID_LOGI_FILI: [null, [Validators.required]],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      DS_ICON: [null, [Validators.required]],\r\n      intervalos: this.formBuilder.array([]),\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postSetores() {\r\n    let params = this.form.value;\r\n    delete params['intervalos']\r\n    this.loadingNavBar = true;\r\n    this.setoresService\r\n      .postSetores(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            const id = response.body['data'];\r\n            this.form.get('UUID_LOGI_YMS_SETO').setValue(id);\r\n            if(this.form.get('intervalos').value[0]['UUID_LOGI_YMS_CIRC_TIPO']){\r\n              this.postIntervalos(id);\r\n            }\r\n            this.pnotify.success();\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          const message = error.error.message\r\n          message ? this.pnotify.error(message): this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  async postIntervalos(id:number){\r\n    let request = [];\r\n    const tpCircuitos = this.formIntervalos.value;\r\n    if (!tpCircuitos){\r\n      this.router.navigate(['../'], {\r\n        relativeTo: this.activatedRoute,\r\n      });\r\n      return\r\n    }\r\n\r\n    const promise = () => {\r\n      tpCircuitos.forEach(el => {\r\n        if (el.HR_INTV instanceof Date){\r\n          el.HR_INTV = this.dateService.convert2PhpDate(el.HR_INTV);\r\n        }\r\n        const params = {...el,'UUID_LOGI_YMS_SETO':id}\r\n        request.push(this.setoresService\r\n          .postIntervalos(params)\r\n      )});\r\n    }\r\n    await Promise.resolve(promise());\r\n    forkJoin(request)\r\n    .pipe(\r\n      finalize(() => {\r\n        this.loading = false;\r\n        this.loadingNavBar = false;\r\n      })\r\n    )\r\n    .subscribe(\r\n      (responses: Array<any>) => {\r\n        this.pnotify.success('Intervalos cadastrados com sucesso');\r\n        this.router.navigate(['../'], {\r\n          relativeTo: this.activatedRoute,\r\n        });\r\n      },\r\n      (error: any) => {\r\n        const message = error.error.message\r\n        message ? this.pnotify.error(message): this.pnotify.error();\r\n      }\r\n    )\r\n  }\r\n\r\n  \r\n  onNestedFieldError(formGroup: string, index: number, field: string) {\r\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n    field = nestedForm.controls[index].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n\r\n    if (nestedForm.controls[index].get(field).validator) {\r\n      let validationResult = nestedForm.controls[index]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getIcones() {\r\n    this.loadingIcones = true;\r\n    this.foawService.getIcones().pipe(\r\n      finalize(() => {\r\n        this.loadingIcones = false;\r\n      })\r\n    ).subscribe(response => {\r\n      if (response.status === 200) {\r\n        this.icones = response.body['icones'];\r\n      }\r\n    });\r\n  }\r\n\r\n  onIconSelected(event) {\r\n    this.icone = event.classe;\r\n  }\r\n   \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\nimport { LogisticaYmsSetoresListaComponent } from './lista/lista.component';\r\nimport { LogisticaYmsSetoresCadastroComponent } from './cadastro/cadastro.component';\r\nimport { LogisticaYmsSetoresAssociacaoMateriaisComponent } from './associacao-materiais/associacao-materiais.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaYmsSetoresListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: LogisticaYmsSetoresCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: LogisticaYmsSetoresCadastroComponent,\r\n  },\r\n  {\r\n    path: 'materiais/:id',\r\n    component: LogisticaYmsSetoresAssociacaoMateriaisComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LogisticaYmsSetoresRoutingModule {}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Setores\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onExport()\\\"\\r\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n              <label for=\\\"tiposSetor\\\">Tipo de Setor</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"tiposSetor\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingTiposSetor\\\"\\r\\n                labelForId=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n                bindLabel=\\\"NM_SETO_TIPO\\\"\\r\\n                bindValue=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n                id=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n                formControlName=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n                (change)=\\\"getFilterSetores({'UUID_LOGI_YMS_SETO_TIPO': $event?.UUID_LOGI_YMS_SETO_TIPO || ''})\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n              <label for=\\\"filterSetores\\\">Setor</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"filterSetores\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingSetores\\\"\\r\\n                labelForId=\\\"UUID_LOGI_YMS_SETO\\\"\\r\\n                bindLabel=\\\"NM_SETO\\\"\\r\\n                bindValue=\\\"UUID_LOGI_YMS_SETO\\\"\\r\\n                id=\\\"UUID_LOGI_YMS_SETO\\\"\\r\\n                formControlName=\\\"UUID_LOGI_YMS_SETO\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              (keydown.enter)=\\\"onFilter()\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" ></th>\\r\\n              <th scope=\\\"col\\\" >ID</th>\\r\\n              <th scope=\\\"col\\\" >Descrição</th>\\r\\n              <th scope=\\\"col\\\" >Tipo de Setor</th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:160px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let setor of setores\\\"  [class.table-active]=\\\"setor?.UUID_LOGI_YMS_SETO == setorSelecionado?.UUID_LOGI_YMS_SETO && showDetailPanel\\\">\\r\\n              <td  [ngClass]=\\\"setor.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n                <div [class]=\\\"setor.DS_ICON\\\"></div>\\r\\n              </td>\\r\\n              <td>{{setor.UUID_LOGI_YMS_SETO }}</td>\\r\\n              <td >{{ setor.NM_SETO | uppercase}}</td>\\r\\n              <td >{{ setor.NM_SETO_TIPO | uppercase}}</td>\\r\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"setor.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(setor)\\\">\\r\\n                    <i [ngClass]=\\\"setor.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', setor.UUID_LOGI_YMS_SETO]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Associar Materiais\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../materiais/', setor.UUID_LOGI_YMS_SETO]\\\">\\r\\n                    <i class=\\\"fas fa-th-large\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(setor)\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Detalhes\\\">\\r\\n        <tabset>\\r\\n          <tab heading=\\\"Dados do Setor\\\">\\r\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n              <div>\\r\\n                <div class=\\\"d-flex w-100\\\">\\r\\n                  <div class=\\\"rounded-circle text-white icon-40 bg-secondary\\\" >\\r\\n                    <i [class]=\\\"setorSelecionado?.DS_ICON\\\"></i>\\r\\n                  </div>\\r\\n                  <strong class=\\\"my-auto ml-3 text-truncate\\\" >\\r\\n                    {{setorSelecionado?.NM_SETO | uppercase}}\\r\\n                  </strong>\\r\\n                </div>\\r\\n                <div class=\\\"form-row mt-3\\\">\\r\\n                  <div class=\\\"form-group col-lg-6\\\">\\r\\n                    <label>ID do Setor</label>\\r\\n                    <div>{{ setorSelecionado?.UUID_LOGI_YMS_SETO}}</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col-lg-6\\\">\\r\\n                    <label>Tipo de Setor</label>\\r\\n                    <div>{{ setorSelecionado?.NM_SETO_TIPO | uppercase}}</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col-lg-6\\\">\\r\\n                    <label>Filial</label>\\r\\n                    <div>{{ setorSelecionado?.NM_FILI | uppercase}}</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-row \\\">\\r\\n                  <div class=\\\"form-group col-lg-12\\\">\\r\\n                    <label>Observação:</label>\\r\\n                    <div>{{ setorSelecionado?.DS_OBSE | uppercase}}</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <hr>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col\\\">\\r\\n                    <label *ngIf=\\\"!setorSelecionado?.DT_ATUA == null\\\">Usuário Responsável Pelo Cadastro</label>\\r\\n                    <label *ngIf=\\\"setorSelecionado?.DT_ATUA == null\\\">Usuário Responsável Pela Atualização</label>\\r\\n                    <div>{{ setorSelecionado?.NM_USUA | uppercase }}</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col\\\">\\r\\n                    <label *ngIf=\\\"!setorSelecionado?.DT_ATUA == null\\\">Data do Cadastro</label>\\r\\n                    <label *ngIf=\\\"setorSelecionado?.DT_ATUA == null\\\">Data da Atualização</label>\\r\\n                    <div>{{(setorSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (setorSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </tab>\\r\\n          <tab  heading=\\\"Materiais Associados\\\">\\r\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n              <div class=\\\"mb-3\\\">\\r\\n                <custom-table  [config]=\\\"tableConfigAssocMateriais\\\"  class=\\\"text-center\\\" *ngIf=\\\"!loadingAssociacaoMateriais && !noAssocMateriais\\\">\\r\\n                  <ng-template #thead let-thead>\\r\\n                    <tr>\\r\\n                      <th scope=\\\"col\\\"  width=\\\"20%\\\">Código</th>\\r\\n                      <th scope=\\\"col\\\"  width=\\\"80%\\\">Material</th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                  <ng-template #tbody let-tbody>\\r\\n                    <tr *ngFor=\\\"let material of associacaoMateriais\\\">\\r\\n                      <td  width=\\\"20%\\\">{{ material?.ID_REFE_ERP }}</td>\\r\\n                      <td  width=\\\"80%\\\">{{ material?.NM_MATE | uppercase }}</td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </custom-table>\\r\\n                <message\\r\\n                  *ngIf=\\\"loadingAssociacaoMateriais\\\"\\r\\n                  icon=\\\"fas fa-cog fa-spin\\\"\\r\\n                  text=\\\"Estamos pesquisando os materiais para você...\\\">\\r\\n                </message>\\r\\n                <div [hidden]=\\\"loadingAssociacaoMateriais || !noAssocMateriais\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n                  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </tab>  \\r\\n          <tab  heading=\\\"Intervalos\\\">\\r\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n              <div class=\\\"mb-3\\\">\\r\\n                <custom-table  [config]=\\\"tableConfigAssocIntervalos\\\" class=\\\"text-center\\\" *ngIf=\\\"!loadingAssociacaoIntervalos && !noAssocIntervalos\\\">\\r\\n                  <ng-template #thead let-thead>\\r\\n                    <tr>\\r\\n                      <th scope=\\\"col\\\"  width=\\\"40%\\\">Tipo de Circuito</th>\\r\\n                      <th scope=\\\"col\\\"  width=\\\"40%\\\">\\r\\n                        Tipo de Intervalo\\r\\n                        <button\\r\\n                          class=\\\"btn-icon-sm\\\"\\r\\n                          [tooltip]=\\\"tooltipTipoIntervalo\\\"\\r\\n                          container=\\\"body\\\"\\r\\n                          placement=\\\"top\\\"  \\r\\n                          >\\r\\n                          <i class=\\\"far fa-question-circle\\\"></i>\\r\\n                        </button>\\r\\n                      \\r\\n                        <ng-template #tooltipTipoIntervalo>\\r\\n                          <table>\\r\\n                            <tbody>\\r\\n                              <tr>\\r\\n                                <th><i class=\\\"fas fa-circle text-primary\\\"></i> FIXO :Tempo fixo de permanência</th>\\r\\n                              </tr>\\r\\n                              <br>\\r\\n                              <tr>\\r\\n                                <th><i class=\\\"fas fa-circle text-primary\\\"></i>Variável : Tempo de permanência pode variar de acordo com a quantidade</th>\\r\\n                              </tr>\\r\\n                            </tbody>\\r\\n                          </table>\\r\\n                        </ng-template>\\r\\n\\r\\n                      </th>\\r\\n                      <th scope=\\\"col\\\"  width=\\\"20%\\\">Tempo</th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                  <ng-template #tbody let-tbody>\\r\\n                    <tr *ngFor=\\\"let intervalo of associacaoIntervalos\\\">\\r\\n                      <td  width=\\\"40%\\\">{{ intervalo?.NM_CIRC_TIPO  | uppercase }}</td>\\r\\n                      <td  width=\\\"40%\\\">{{ intervalo?.TP_INTV | uppercase }}</td>\\r\\n                      <td  width=\\\"20%\\\">{{ convertMysqlTime(intervalo?.HR_INTV) | date: 'HH:mm'}}</td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </custom-table>\\r\\n                <message\\r\\n                  *ngIf=\\\"loadingAssociacaoIntervalos\\\"\\r\\n                  icon=\\\"fas fa-cog fa-spin\\\"\\r\\n                  text=\\\"Estamos pesquisando os intervalos para você...\\\">\\r\\n                </message>\\r\\n                <div [hidden]=\\\"loadingAssociacaoIntervalos || !noAssocIntervalos\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n                  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </tab>       \\r\\n        </tabset> \\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","import { ILogisticaYmsSetores } from './../models/setores';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n// angular\r\nimport { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n// services\r\nimport { LogisticaYmsSetoresService } from '../services/setores.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n// rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'logistica-Setores-associacao-materiais',\r\n  templateUrl: './associacao-materiais.component.html',\r\n  styleUrls: ['./associacao-materiais.component.scss']\r\n})\r\nexport class LogisticaYmsSetoresAssociacaoMateriaisComponent implements OnInit {\r\n\r\n  appTitle = \"Associação Material\";\r\n\r\n  form: FormGroup;\r\n  formMateriais: FormGroup;\r\n\r\n  breadCrumbTree: any = [];\r\n  idSubModulo: number;\r\n  $subscription: Subscription;\r\n\r\n  /*loading*/\r\n  loading = false;\r\n  loadingNavBar = false;\r\n  noResult = true;\r\n  loadingSetores: boolean;\r\n  /*loading*/\r\n\r\n  materiais = [];\r\n  materiaisLoading = false;\r\n  loadingMateriais = false;\r\n  setores: Array<ILogisticaYmsSetores>;\r\n\r\n  materiaisAssociados = [];\r\n  materiaisAssociadosLoading = false;\r\n\r\n  tableConfigMateriaisAssociados: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n    hover: false,\r\n  };\r\n  \r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  toggle = {\r\n    materiais: false,\r\n    materiaisAssociados: false\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private setoresService: LogisticaYmsSetoresService,\r\n    private pnotify: PNotifyService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private atividadesService: AtividadesService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      \"UUID_LOGI_YMS_SETO\": [{value:null, disabled:true}],\r\n      \"NM_SETO\": [null],\r\n    });\r\n\r\n    this.formMateriais = this.formBuilder.group({\r\n      buscarPor: ['NM_MATE'],\r\n      pesquisa: [null, Validators.required],\r\n      UUID_REFE_ERP:[null],\r\n      NM_MATE:[null],\r\n      NM_CLAS:[null],\r\n      NM_LINH:[null],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n    this.onActivatedRoute();\r\n    this.setBreadCrumb();\r\n    this.getSetores();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n\r\n    if (!params?.id){\r\n      this.loading = false;\r\n      return\r\n    }\r\n    this.form.get('UUID_LOGI_YMS_SETO').setValue(params['id'])\r\n    this.getMateriaisAssociados({\"UUID_LOGI_YMS_SETO\": params?.id})  \r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'Cadastro',\r\n        routerLink: `/logistica/cadastros/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Setores',\r\n        routerLink: `../../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle\r\n      }\r\n    ];\r\n  }\r\n\r\n  getSetores() {\r\n    this.loadingSetores = true;\r\n    this.setoresService\r\n      .getSetores({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingSetores = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.setores = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      });\r\n  }\r\n\r\n  getMateriais(){\r\n\r\n    const buscarPor = this.formMateriais.get('buscarPor')?.value;\r\n    const pesquisa = this.formMateriais.get('pesquisa')?.value;\r\n\r\n    let params = {};\r\n    \r\n    if(buscarPor){\r\n      params[buscarPor] = pesquisa ?? '';\r\n    }\r\n    params['situacao'] = '1';\r\n    params['qtItensPagina'] = 100;\r\n\r\n    this.materiaisLoading = true\r\n\r\n    this.setoresService\r\n      .getMateriais(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.materiaisLoading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          let materiais = response.body['result'];\r\n          this.materiais = materiais.filter(material => {\r\n            return !this.materiaisAssociados.some(item => item.UUID_MATE == material.ID)\r\n          })\r\n\r\n          this.tableConfigMateriais.fixedHeader = this.materiais.length > 9 ? true : false;\r\n         \r\n        }\r\n      )\r\n  }\r\n\r\n  getMateriaisAssociados(params){\r\n    this.loadingMateriais = true;\r\n    params.IN_STAT = '1';\r\n    params.IN_PAGI = '0';\r\n    params.ORDE_BY = 'ID_REFE_ERP'\r\n\r\n    this.setoresService\r\n      .getMateriaisAssociados(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingMateriais = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if(response.status !== 200){\r\n            return\r\n          }\r\n\r\n          this.materiaisAssociados = response.body['data'];\r\n          this.tableConfigMateriaisAssociados.fixedHeader = this.materiaisAssociados.length > 9 ? true : false;\r\n        }\r\n      )\r\n  }\r\n\r\n  onAssociarMateriais(){\r\n    \r\n    let materiais = this.materiais.filter(material => material.checked);\r\n    this.toggle.materiais = false;\r\n\r\n    materiais.map(item => {\r\n      \r\n      item.loading = true;\r\n\r\n      if(this.materiaisAssociados.some(material => material?.ID_REFE_ERP === item.ID_REFE_ERP)){\r\n        return\r\n      }\r\n\r\n      let params = {\r\n        \"UUID_LOGI_YMS_SETO\": this.form.get(\"UUID_LOGI_YMS_SETO\").value ?? \"\",\r\n        \"UUID_MATE\": item?.ID ?? \"\",\r\n        \"IN_STAT\": \"1\"\r\n      }\r\n      this.setoresService\r\n        .postMateriaisAssociados(params)\r\n        .subscribe(\r\n          response => {\r\n            if(response.status === 200){\r\n              \r\n              this.materiaisAssociados = [...this.materiaisAssociados,\r\n                {\r\n                  ...item,\r\n                  checked: false,\r\n                  loading: false,\r\n                  UUID_MATE: item.ID,\r\n                  UUID_LOGI_YMS_SETO: this.form.get('UUID_LOGI_YMS_SETO').value\r\n                }\r\n              ];\r\n              \r\n              this.materiais = this.materiais.filter(material => !material.checked)\r\n              this.tableConfigMateriaisAssociados.fixedHeader = this.materiaisAssociados.length > 9 ? true : false;\r\n\r\n            }\r\n          }\r\n        )\r\n    });\r\n\r\n  }\r\n\r\n  confirmDelete(): Observable<boolean> {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onRemoverAssociacao(material?){\r\n    \r\n    let materiais = material ? [material] : this.materiaisAssociados.filter(material => material.checked);\r\n    this.toggle.materiaisAssociados = false;\r\n\r\n    if(materiais.length == 0){\r\n      this.pnotify.notice(\"Nenhum material selecionado.\");\r\n      return\r\n    }\r\n\r\n    this.confirmDelete()\r\n      .subscribe(\r\n        (response: boolean) => {\r\n          \r\n          if(!response){\r\n            return\r\n          }\r\n          materiais.map(item => {\r\n            item.IN_STAT = '0';\r\n            item.loading = true;\r\n\r\n            this.setoresService\r\n              .deleteAssociacoes(item)\r\n              .pipe(finalize(() => {\r\n                item.loading = false;\r\n              }))\r\n              .subscribe(\r\n                response => {\r\n                  \r\n                  if(response.status !== 200){\r\n                    return\r\n                  }\r\n                  this.materiaisAssociados = this.materiaisAssociados\r\n                    .filter(material => material.UUID_MATE != item.UUID_MATE);\r\n                  \r\n                  this.tableConfigMateriaisAssociados.fixedHeader = this.materiaisAssociados.length > 9 ? true : false;\r\n                }\r\n              );\r\n              (error) => {\r\n                const message = error.error.message\r\n                message ? this.pnotify.error(message): this.pnotify.error();\r\n              }\r\n          \r\n          })\r\n          \r\n        }\r\n      )\r\n  }\r\n\r\n  onToggleAll(item: string){\r\n    this.toggle[item] = !this.toggle[item];\r\n    this[item].map(material => material.checked = this.toggle[item]);\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL3NldG9yZXMvYXNzb2NpYWNhby1tYXRlcmlhaXMvYXNzb2NpYWNhby1tYXRlcmlhaXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2lzdGljYS95bXMvc2V0b3Jlcy9hc3NvY2lhY2FvLW1hdGVyaWFpcy9hc3NvY2lhY2FvLW1hdGVyaWFpcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbltkaXNhYmxlZF17XHJcbiAgY3Vyc29yOiBuby1kcm9wO1xyXG59Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9zZXRvcmVzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  PaginationModule,\r\n  TooltipModule,\r\n  TabsModule,\r\n  TimepickerModule,\r\n  BsDatepickerModule,\r\n  ModalModule,\r\n} from 'ngx-bootstrap';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n\r\nimport { LogisticaYmsSetoresListaComponent } from './lista/lista.component';\r\nimport { LogisticaYmsSetoresCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nimport { LogisticaYmsSetoresRoutingModule } from './setores-routing.module';\r\nimport { LogisticaYmsSetoresAssociacaoMateriaisComponent } from './associacao-materiais/associacao-materiais.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogisticaYmsSetoresListaComponent,\r\n    LogisticaYmsSetoresCadastroComponent,\r\n    LogisticaYmsSetoresAssociacaoMateriaisComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    LogisticaYmsSetoresRoutingModule\r\n  ]\r\n})\r\nexport class LogisticaYmsSetoresModule { }\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Setores\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postSetores()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Dados da Setor</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n            <label for=\\\"classe\\\">Icone</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"icones\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              labelForId=\\\"classe\\\"\\r\\n              [loading]=\\\"loadingIcones\\\"\\r\\n              bindLabel=\\\"classe\\\"\\r\\n              bindValue=\\\"classe\\\"\\r\\n              id=\\\"classe\\\"\\r\\n              (change)=\\\"onIconSelected($event)\\\"\\r\\n              formControlName=\\\"DS_ICON\\\"\\r\\n              [ngClass]=\\\"onFieldError('DS_ICON') + ' ' + onFieldRequired('DS_ICON')\\\"\\r\\n\\r\\n              >\\r\\n              <ng-template ng-label-tmp let-item=\\\"item\\\" let-clear=\\\"clear\\\">\\r\\n                <div class=\\\"d-flex align-items-center\\\">\\r\\n                    <div [class]=\\\"item.classe\\\" style=\\\"min-width: 25px;\\\"></div>\\r\\n                    <div>{{item.classe}}</div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\r\\n                <div class=\\\"d-flex align-items-center\\\">\\r\\n                  <div [class]=\\\"item.classe\\\" style=\\\"min-width: 25px;\\\"></div>\\r\\n                  <div>{{item.classe}}</div>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('DS_ICON')\\\" message=\\\"Icone é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-8 pl-0\\\">\\r\\n            <label for=\\\"NM_SETO\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_SETO\\\"\\r\\n              formControlName=\\\"NM_SETO\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_SETO') + ' ' + onFieldRequired('NM_SETO')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_SETO')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\r\\n            <label for=\\\"tiposSetor\\\">Tipo de Setor</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"tiposSetor\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              [loading]=\\\"loadingTiposSetor\\\"\\r\\n              labelForId=\\\"tiposSetor\\\"\\r\\n              bindLabel=\\\"NM_SETO_TIPO\\\"\\r\\n              bindValue=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n              id=\\\"tiposSetor\\\"\\r\\n              formControlName=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n              [ngClass]=\\\"onFieldError('UUID_LOGI_YMS_SETO_TIPO') + ' ' + onFieldRequired('UUID_LOGI_YMS_SETO_TIPO')\\\"\\r\\n              >\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('UUID_LOGI_YMS_SETO_TIPO')\\\" message=\\\"Tipo de Setor é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\r\\n            <label for=\\\"filiais\\\">Filial</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"filiais\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              [loading]=\\\"loadingFiliais\\\"\\r\\n              labelForId=\\\"filiais\\\"\\r\\n              bindLabel=\\\"NM_FILI\\\"\\r\\n              bindValue=\\\"UUID_LOGI_FILI\\\"\\r\\n              id=\\\"filiais\\\"\\r\\n              formControlName=\\\"UUID_LOGI_FILI\\\"\\r\\n              [ngClass]=\\\"onFieldError('UUID_LOGI_FILI') + ' ' + onFieldRequired('UUID_LOGI_FILI')\\\"\\r\\n              >\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('UUID_LOGI_FILI')\\\" message=\\\"Filial é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Intervalos</legend>\\r\\n        <div formArrayName=\\\"intervalos\\\" *ngIf=\\\"loadingTiposCircuitoSetor != true\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\"></div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddIntervalos()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\"  *ngFor=\\\"let item of formIntervalos.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n                  <label for=\\\"tiposCircuito\\\">Tipo de Circuito</label>\\r\\n                  <ng-select\\r\\n                    [searchable]=\\\"true\\\"\\r\\n                    [clearable]=\\\"true\\\"\\r\\n                    [items]=\\\"tiposCircuito\\\"\\r\\n                    [virtualScroll]=\\\"true\\\"\\r\\n                    placeholder=\\\"Selecione...\\\"\\r\\n                    [loading]=\\\"loadingTiposCircuito\\\"\\r\\n                    labelForId=\\\"tiposCircuito\\\"\\r\\n                    bindLabel=\\\"NM_CIRC_TIPO\\\"\\r\\n                    bindValue=\\\"UUID_LOGI_YMS_CIRC_TIPO\\\"\\r\\n                    id=\\\"tiposCircuito\\\"\\r\\n                    formControlName=\\\"UUID_LOGI_YMS_CIRC_TIPO\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('intervalos', i, 'UUID_LOGI_YMS_CIRC_TIPO') + ' ' + onNestedFieldRequired('intervalos', i, 'UUID_LOGI_YMS_CIRC_TIPO')\\\"\\r\\n\\r\\n                    >\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n                  <label for=\\\"TP_INTV\\\">tipo de tempo médio de Permanência</label>\\r\\n                  <ng-select\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"false\\\"\\r\\n                  [items]=\\\"tipos\\\"\\r\\n                  [virtualScroll]=\\\"true\\\"\\r\\n                  labelForId=\\\"tipo\\\"\\r\\n                  bindLabel=\\\"nome\\\"\\r\\n                  bindValue=\\\"cod\\\"\\r\\n                  id=\\\"tipo\\\"\\r\\n                  formControlName=\\\"TP_INTV\\\"\\r\\n                  [ngClass]=\\\"onNestedFieldError('intervalos', i, 'TP_INTV') + ' ' + onNestedFieldRequired('intervalos', i, 'TP_INTV')\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  >\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n                  <label for=\\\"HR_INTV\\\" style=\\\"margin-bottom: 2px;\\\">Tempo Médio</label>\\r\\n                  <timepicker\\r\\n                  [showMeridian]=\\\"false\\\"\\r\\n                  [showSpinners]=\\\"false\\\"\\r\\n                  [mousewheel]=\\\"false\\\"\\r\\n                  formControlName=\\\"HR_INTV\\\"\\r\\n                  [ngClass]=\\\"onNestedFieldError('intervalos', i, 'HR_INTV') + ' ' + onNestedFieldRequired('intervalos', i, 'HR_INTV')\\\"\\r\\n                  >\\r\\n                </timepicker>\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteTipoCircuito(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"loadingTiposCircuitoSetor == true\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-cog fa-spin\\\"\\r\\n              text=\\\"Estamos pesquisando os intervalos para você...\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Observação</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"loadingNavBar === true\\\"\\r\\n    [routerLink]=\\\"['../../']\\\"\\r\\n    >\\r\\n    Finalizar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"mtc-title\\\">Dados da Setor</div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col pl-0\\\">\\r\\n            <label for=\\\"setores\\\">Setor</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"setores\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              [loading]=\\\"loadingSetores\\\"\\r\\n              labelForId=\\\"setores\\\"\\r\\n              bindLabel=\\\"NM_SETO\\\"\\r\\n              bindValue=\\\"UUID_LOGI_YMS_SETO\\\"\\r\\n              id=\\\"setores\\\"\\r\\n              formControlName=\\\"UUID_LOGI_YMS_SETO\\\"\\r\\n              >\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <div class=\\\"row mb-4\\\">\\r\\n        <div class=\\\"col mb-3\\\">\\r\\n          <hr>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div [hidden]=\\\"loadingMateriais\\\">\\r\\n        <div class=\\\"row mb-2 mt-4\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Materiais associados a Setor</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                (click)=\\\"onRemoverAssociacao()\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n                <span>Limpar</span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!materiaisAssociadosLoading && materiaisAssociados.length > 0\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <custom-table [config]=\\\"tableConfigMateriaisAssociados\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th\\r\\n                    scope=\\\"col\\\"\\r\\n                    class=\\\"text-center\\\"\\r\\n                    style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"toggle?.materiaisAssociados ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onToggleAll('materiaisAssociados')\\\">\\r\\n                    </btn-icon>\\r\\n                  </th>\\r\\n                  <th scope=\\\"col\\\" width=\\\"20%\\\">ID</th>\\r\\n                  <th scope=\\\"col\\\" width=\\\"70%\\\">Material</th>\\r\\n                  <th scope=\\\"col\\\" width=\\\"5%\\\"></th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let item of materiaisAssociados\\\" >\\r\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    </btn-icon>\\r\\n                  </td>\\r\\n                  <td width=\\\"20%\\\">{{ item.ID_REFE_ERP }}</td>\\r\\n                  <td width=\\\"70%\\\">\\r\\n                   {{ item.NM_MATE | uppercase }}\\r\\n                  </td>\\r\\n                  <td class=\\\"text-center\\\" width=\\\"5%\\\" height=\\\"26px\\\">\\r\\n                    <btn-icon\\r\\n                      icon=\\\"fas fa-trash\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onRemoverAssociacao(item)\\\"\\r\\n                      *ngIf=\\\"!item.loading\\\"  \\r\\n                    >\\r\\n                    </btn-icon>\\r\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\r\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!loadingMateriais && materiaisAssociados.length === 0\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-exchange-alt\\\"\\r\\n              text=\\\"Nenhuma associação encontrada\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"loadingMateriais\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-cog fa-spin\\\"\\r\\n              text=\\\"Estamos pesquisando os materiais para você...\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <div class=\\\"row mb-2\\\">\\r\\n        <div class=\\\"col mt-auto\\\">\\r\\n          <div class=\\\"mtc-title mb-0\\\">Pesquisa de Materiais</div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-end\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n              (click)=\\\"getMateriais()\\\"\\r\\n              [disabled]=\\\" formMateriais.valid == false\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n              <span \\r\\n              [tooltip]=\\\"formMateriais.valid == false ? 'Digite um termo de pesquisa':''\\\"\\r\\n              container=\\\"body\\\"\\r\\n              placement =\\\"left\\\">Pesquisar</span>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formMateriais\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-3\\\">\\r\\n              <label for=\\\"cdItem\\\">BUSCAR POR</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"buscarPor\\\"\\r\\n              >\\r\\n                <option value=\\\"ID_REFE_ERP\\\">ID ERP</option>\\r\\n                <option value=\\\"NM_MATE\\\" selected> Nome Material</option>\\r\\n                <option value=\\\"NM_CLAS\\\">Classe</option>\\r\\n                <option value=\\\"NM_LINH\\\">Linha</option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-9\\\">\\r\\n              <label>TERMO DE PESQUISA</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"Digite...\\\"\\r\\n                  formControlName=\\\"pesquisa\\\"\\r\\n                  (keydown.enter)=\\\"getMateriais()\\\"\\r\\n                >\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <div *ngIf=\\\"materiais.length > 0 && !materiaisLoading\\\">\\r\\n        <div class=\\\"row mb-2\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Seleção de Material</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\r\\n                (click)=\\\"onAssociarMateriais()\\\"\\r\\n                [disabled]=\\\"searching === true || form.valid === false\\\">\\r\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\r\\n                <span\\r\\n                  [tooltip]=\\\"form.valid == false ? 'Selecione uma Setor':''\\\"\\r\\n                  container=\\\"body\\\"\\r\\n                  placement =\\\"left\\\">Associar\\r\\n                </span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <custom-table [config]=\\\"tableConfigMateriais\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th\\r\\n                    scope=\\\"col\\\"\\r\\n                    class=\\\"text-center\\\"\\r\\n                    style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"toggle?.materiais ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onToggleAll('materiais')\\\">\\r\\n                    </btn-icon>\\r\\n                  </th>\\r\\n                  <th scope=\\\"col\\\" style=\\\"width: 90%\\\">Materiais</th>\\r\\n                  <th style=\\\"width: 5%\\\"></th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let item of materiais\\\">\\r\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    </btn-icon>\\r\\n                  </td>\\r\\n                  <td\\r\\n                    class=\\\"hover\\\"\\r\\n                    style=\\\"width: 90%\\\"\\r\\n                    (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    {{ item.ID_REFE_ERP }} - {{ item.NM_MATE | uppercase }}\\r\\n                  </td>\\r\\n                  <td style=\\\"width: 5%; height: 26px\\\">\\r\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\r\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"materiaisLoading\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <message\\r\\n            icon=\\\"fas fa-cog fa-spin\\\"\\r\\n            text=\\\"Estamos pesquisando os materiais para você...\\\">\\r\\n          </message>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"(materiais.length == 0) && !materiaisLoading\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-box-open\\\"\\r\\n              text=\\\"Nenhuma informação encontrada\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-search\\\"\\r\\n              text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";"],"sourceRoot":"webpack:///"}