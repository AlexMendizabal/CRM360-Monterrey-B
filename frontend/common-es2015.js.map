{"version":3,"sources":["./src/app/modules/comercial/cadastros/tipo-operadores/tipo-operadores.service.ts","./src/app/modules/tecnologia-informacao/estoque/movimentacoes/services/movimentacoes.service.ts","./src/app/modules/comercial/cadastros/equipe-venda/equipe-venda.service.ts","./src/app/modules/comercial/clientes/cadastro/enderecos/formulario/formulario.service.ts","./src/app/modules/comercial/cadastros/materiais/grupos/grupos.service.ts","./node_modules/ngx-filter-pipe/esm2015/ngx-filter-pipe.js","./src/app/modules/admin/perfis/services/perfis.service.ts","./src/app/core/not-found/not-found.component.ts","./src/app/core/not-found/not-found.component.html","./src/app/modules/logistica/cadastros/restricoes-transporte/services/restricoes.service.ts","./src/app/modules/comercial/agenda/agenda.service.ts","./src/app/shared/services/ws/cep.service.ts","./src/app/modules/logistica/entrada-materiais/notas-fiscais/services/notas-fiscais.service.ts","./src/app/modules/logistica/services/steellog.service.ts","./src/app/modules/comercial/ciclo-vendas/pedidos-producao-telas/formulario/formulario.service.ts","./src/app/shared/services/core/xlsx.service.ts","./src/app/modules/tecnologia-informacao/contratos/modelo/services/modelo.service.ts","./src/app/modules/logistica/cadastros/regioes-entrega/services/regioes-entrega.service.ts","./src/app/shared/services/core/icons-fonts-awesome.service.ts","./src/app/modules/sul-fluminense/estoque-avancado/services/generic.service.ts","./src/app/modules/comercial/cadastros/escritorios/escritorios.service.ts","./src/app/modules/comercial/cadastros/materiais/combos/combos.service.ts","./src/app/shared/services/requests/estados.service.ts","./src/app/modules/logistica/entrega/services/fusion.service.ts","./src/app/shared/services/requests/generic.service.ts","./src/app/modules/logistica/yms/checklist/services/checklist.service.ts","./src/app/modules/logistica/cadastros/prazo-entrega/services/prazo-entrega.service.ts","./src/app/shared/services/requests/submodulos.service.ts","./src/app/modules/comercial/cadastros/associacao-linhas/associacao-linhas.service.ts","./src/app/shared/services/requests/escritorios.service.ts","./src/app/modules/logistica/cadastros/filiais/services/filiais.service.ts","./src/app/modules/logistica/entrega/desmembramento/services/desmembramento.service.ts","./src/app/modules/comercial/cadastros/representantes/representantes.service.ts","./src/app/modules/logistica/yms/etapas/services/etapas.service.ts","./node_modules/@amcharts/amcharts4/themes/animated.js","./src/app/modules/tecnologia-informacao/estoque/produtos/services/produtos.service.ts","./node_modules/@amcharts/amcharts4/lang/pt_BR.js","./node_modules/@amcharts/amcharts4/themes/material.js","./src/app/modules/tecnologia-informacao/contratos/contrato/services/contrato.service.ts","./src/app/modules/tecnologia-informacao/contratos/tipo-contrato/services/tipo-contrato.service.ts","./src/app/modules/comercial/comissoes/representantes/gestao-comissionamentos/gestao-comissionamentos.service.ts","./node_modules/file-saver/src/FileSaver.js","./src/app/core/not-found/not-found.component.scss","./src/app/modules/comercial/gestao/associacoes/coordenadores-escritorios/coordenadores-escritorios.service.ts","./node_modules/ngx-order-pipe/fesm2015/ngx-order-pipe.js","./src/app/modules/tecnologia-informacao/estoque/marcas/services/marcas.service.ts","./src/app/modules/admin/submodulos/services/submodulos.service.ts","./src/app/modules/logistica/dashboards/conferencia-cte/conferencia-cte.service.ts","./src/app/modules/logistica/yms/tipos-circuito/services/tipos-circuito.service.ts","./src/app/modules/logistica/dashboards/analise-frete/services/analise-frete.service.ts","./src/app/modules/comercial/cadastros/motivo-associacao/motivo-associacao.service.ts","./src/app/modules/servicos/contatos/services/contato.service.ts","./src/app/modules/tecnologia-informacao/contratos/tipo-item/services/tipo-item.service.ts","./src/app/modules/comercial/gestao/contratos-comerciais/contratos-comerciais.service.ts","./src/app/core/not-found/not-found.module.ts","./node_modules/@amcharts/amcharts4/.internal/themes/animated.js","./node_modules/@amcharts/amcharts4/.internal/themes/material.js","./src/app/modules/logistica/yms/tipos-setor/services/tipos-setor.service.ts","./src/app/modules/comercial/cadastros/tipos-comissionamento/tipo-comissionamento.service.ts","./src/app/modules/logistica/yms/tipos-etapa/services/tipos-etapa.service.ts","./src/app/modules/logistica/yms/setores/services/setores.service.ts","./src/app/modules/logistica/cadastros/tipo-motorista/services/tipo-motorista.service.ts","./src/app/modules/comercial/akna/mensagens/mensagens.service.ts","./src/app/modules/logistica/yms/circuitos/services/circuitos.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA2C;AACmB;AAExB;IAUzB,qCAAqC,SAArC,qCAAqC;IAGhD,YAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFrB,QAAG,GAAG,uEAAuE,CAAC;IAEtD,CAAC;IAE1C,oBAAoB,CAAC,MAAW;QAC9B,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,QAAQ,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aAChD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,aAAa,CAAC,eAAuB;QACnC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,eAAe,eAAe,EAAE,CAAC;aAChD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,WAAW,CAAC,eAAuB;QACjC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa,eAAe,EAAE,CAAC;aAC9C,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEO,gBAAgB,CAAC,YAA0B;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAEO,kBAAkB,CAAC,YAA0B;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,YAAY,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,IAAI,CAAC,YAA0B;QAC7B,IAAI,YAAY,CAAC,eAAe,KAAK,IAAI,EAAE;YACzC,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;SAC9C;QAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;IAC7C,CAAC;IAED,oBAAoB,CAAC,eAAuB;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,EAAE,eAAe,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,sBAAsB,CAAC,eAAuB;QAC5C,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,WAAW,EAAE,eAAe,CAAC;aAC7C,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;CACF;;YAlEQ,+DAAU;;AAYN,qCAAqC;IAHjD,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAI4B,+DAAU;GAH3B,qCAAqC,CAsDjD;AAtDiD;;;;;;;;;;;;;;;;;;;;ACblD,SAAS;AACkC;AAE3C,WAAW;AACgD;AACT;IAMrC,+CAA+C,SAA/C,+CAA+C;IAG1D,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,QAAG,GAAG,wEAAW,CAAC,GAAG,CAAC;IAEA,CAAC;IAExC,6EAA6E;IAE7E,gBAAgB,CAAC,MAAO;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,IAAI,CAAC,GAAG,8CAA8C,EACzD;YACE,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,UAAU;SACpB,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,IAAwC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,IAAI,CAAC,GAAG,8CAA8C,EACzD,IAAI,EACJ;YACE,OAAO,EAAE,UAAU;SACpB,CACF,CAAC;IACJ,CAAC;CAGF;;YAlCQ,+DAAU;;AAMN,+CAA+C;IAH3D,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAI0B,+DAAU;GAHzB,+CAA+C,CA4B3D;AA5B2D;;;;;;;;;;;;;;;;;;;;ACXjB;AACmB;AAExB;IAUzB,oCAAoC,SAApC,oCAAoC;IAG/C,YAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFrB,QAAG,GAAG,sEAAsE,CAAC;IAErD,CAAC;IAE1C,oBAAoB,CAAC,MAAY;QAC/B,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,QAAQ,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aAChD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,aAAa,CAAC,cAAsB;QAClC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,eAAe,cAAc,EAAE,CAAC;aAC/C,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,WAAW,CAAC,cAAsB;QAChC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa,cAAc,EAAE,CAAC;aAC7C,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEO,eAAe,CAAC,WAAwB;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;IAEO,iBAAiB,CAAC,WAAwB;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,YAAY,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,IAAI,CAAC,WAAwB;QAC3B,IAAI,WAAW,CAAC,cAAc,KAAK,IAAI,EAAE;YACvC,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;SAC5C;QAED,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,mBAAmB,CAAC,MAAc;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,qBAAqB,CAAC,MAAc;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,WAAW,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC;CACF;;YApEQ,+DAAU;;AAYN,oCAAoC;IAHhD,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAI4B,+DAAU;GAH3B,oCAAoC,CAwDhD;AAxDgD;;;;;;;;;;;;;;;;;;;;;;ACbN;AACmB;AACxB;AACM;AAI5C,WAAW;AACoF;IAQlF,mDAAmD,SAAnD,mDAAmD;IAG9D,YACY,IAAgB,EAClB,eAAyC;QADvC,SAAI,GAAJ,IAAI,CAAY;QAClB,oBAAe,GAAf,eAAe,CAA0B;QAJlC,QAAG,GAAG,sFAAsF,CAAC;IAK3G,CAAC;IAEJ,aAAa,CAAC,UAAe;QAC3B,IAAI,uBAAuB,GAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAChE,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC9C,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAC/D,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAE9C,OAAO,qDAAQ,CAAC;YACd,uBAAuB;YACvB,cAAc;YACd,aAAa;YACb,aAAa;YACb,aAAa;YACb,UAAU;YACV,aAAa;YACb,cAAc;SACf,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,0BAA0B;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,4BAA4B,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,kBAAkB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,cAAc,CAAC,IAAS;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,gBAAgB,CAAC,OAAY;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,mBAAmB,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,yBAAyB,CAAC,MAAc;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,8BAA8B,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,iBAAiB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,iBAAiB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,iBAAiB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,iBAAiB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,kBAAkB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,SAAS,CAAC,WAAmB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,WAAW,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,UAAU,CAAC,UAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mEAAmE,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACtH,CAAC;IAED,UAAU,CACR,MAAM,EACN,WAAmB,EACnB,UAAkB;QAElB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,IAAI,CAAC,GAAG,8BAA8B,WAAW,eAAe,UAAU,EAAE,EAC/E,MAAM,CACP,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,QAAgB;QAC1B,IAAI,MAAM,GAAG;YACX,QAAQ,EAAE,QAAQ;SACnB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,iBAAiB,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;CACF;;YA/GQ,+DAAU;YAOV,4GAAwB;;AAQpB,mDAAmD;IAH/D,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAKkB,+DAAU;QACD,4GAAwB;GALxC,mDAAmD,CAgG/D;AAhG+D;;;;;;;;;;;;;;;;;;;;;;;AChBrB;AACmB;AAClB;AACC;AAI7C,WAAW;AACmD;AAC2B;IAS5E,uCAAuC,SAAvC,uCAAuC;IAGlD,YACY,IAAgB,EAClB,gBAAkC,EAClC,kBAA+C;QAF7C,SAAI,GAAJ,IAAI,CAAY;QAClB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,uBAAkB,GAAlB,kBAAkB,CAA6B;QALxC,QAAG,GAAG,0EAA0E,CAAC;IAM/F,CAAC;IAEJ,cAAc,CAAC,MAAW;QACxB,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,QAAQ,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aAChD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,uBAAuB,CAAC,QAAgB;QACtC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,gBAAgB,QAAQ,EAAE,CAAC;aAC1C,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,WAAW,CAAC,QAAgB;QAC1B,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa,QAAQ,EAAE,CAAC;aACvC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAEO,SAAS,CAAC,MAAc;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAEO,WAAW,CAAC,MAAc;QAChC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,YAAY,EAAE,MAAM,CAAC;aACpC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,IAAI,CAAC,MAAc;QACjB,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,EAAE;YAC5B,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SACjC;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,aAAa,CAAC,QAAgB;QAC5B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,EAAE,QAAQ,CAAC;aACpC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,QAAgB;QAC9B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,WAAW,EAAE,QAAQ,CAAC;aACtC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEvD,OAAO,qDAAQ,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;IACrC,CAAC;CACF;;YAtFQ,+DAAU;YAOV,mEAAgB;YAChB,8FAA2B;;AASvB,uCAAuC;IAHnD,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAKkB,+DAAU;QACA,mEAAgB;QACd,8FAA2B;GAN9C,uCAAuC,CAqEnD;AArEmD;;;;;;;;;;;;;AClBpD;AAAA;AAAA;AAAA;AAA2D;;AAE3D;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B,6BAA6B,EAAE;AAC/B,6BAA6B,EAAE;AAC/B,6BAA6B,EAAE;AAC/B,gCAAgC,EAAE,UAAU,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa,IAAI;AACjB,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G,2BAA2B,EAAE,MAAM,CAAC;aACnD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;CAEF;;YA1NQ,+DAAU;;AAWN,+CAA+C;IAH3D,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAI4B,+DAAU;GAH3B,+CAA+C,CA+M3D;AA/M2D;;;;;;;;;;;;ACb5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,2EAA2E;AAC3E,0DAA0D,kBAAkB;AAC5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,8BAA8B,8BAA8B;AAC5D,8BAA8B,WAAW;AACzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wDAAwD,GAAG,yBAAyB;AACpF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,8BAA8B,2BAA2B;AACzD;AACA;AACA;;AAEA;;AAEA,IAAI,IAA6B;AACjC;AACA;;;;;;;;;;;;;ACrKA;AAAe,qFAAsB,kBAAkB,GAAG,kCAAkC,2BAA2B,4BAA4B,yBAAyB,kBAAkB,iBAAiB,0BAA0B,gCAAgC,gBAAgB,GAAG,uCAAuC,iBAAiB,uBAAuB,GAAG,yCAAyC,mBAAmB,oBAAoB,qBAAqB,2BAA2B,GAAG,2CAA2C,mBAAmB,oBAAoB,qBAAqB,GAAG,6CAA6C,uzEAAuzE,E;;;;;;;;;;;;;;;;;;;ACAp5F;AACO;AACZ;IAOzB,yDAAyD,SAAzD,yDAAyD;IAGpE,YAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFrB,QAAG,GAAG,+EAA+E,CAAC;IAE9D,CAAC;IAE1C,gCAAgC;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,kCAAkC,CAAC,IAAS;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC;CACF;;YApBQ,+DAAU;;AAQN,yDAAyD;IAHrE,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAI4B,+DAAU;GAH3B,yDAAyD,CAYrE;AAZqE;;;;;;;;;;;;;ACTtE;AAAA;AAAA;AAAA;AAAA;AAAmC;AACY;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0BAA0B,wDAAU;AACpC,IAAI,0DAAI;AACR;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,8DAAQ;AACZ;AACA;AACA;AACA,KAAK;AACL;;AAEkC;AAClC;;;;;;;;;;;;;;;;;;;;AC/MA,SAAS;AACkC;AAE3C,WAAW;AACgD;AACT;IAMrC,wCAAwC,SAAxC,wCAAwC;IAGnD,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,QAAG,GAAG,wEAAW,CAAC,GAAG,CAAC;IAEA,CAAC;IAExC,SAAS,CAAC,MAAO;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,IAAI,CAAC,GAAG,gDAAgD,EAC3D;YACE,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,UAAU;SACpB,CACF,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,KAAyC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,IAAI,CAAC,GAAG,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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { TipoOperador } from './models/tipo-operador';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosTipoOperadorService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/tipo-operador`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaTipoOperador(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codTipoOperador: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codTipoOperador}`)\n      .pipe(take(1));\n  }\n\n  getDetalhes(codTipoOperador: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codTipoOperador}`)\n      .pipe(take(1));\n  }\n\n  private saveTipoOperador(tipoOperador: TipoOperador) {\n    return this.http.post(`${this.API}/salvar`, tipoOperador).pipe(take(1));\n  }\n\n  private updateTipoOperador(tipoOperador: TipoOperador) {\n    return this.http.put(`${this.API}/atualizar`, tipoOperador).pipe(take(1));\n  }\n\n  save(tipoOperador: TipoOperador): Observable<any> {\n    if (tipoOperador.codTipoOperador !== null) {\n      return this.updateTipoOperador(tipoOperador);\n    }\n\n    return this.saveTipoOperador(tipoOperador);\n  }\n\n  activateTipoOperador(codTipoOperador: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codTipoOperador).pipe(take(1));\n  }\n\n  inactivateTipoOperador(codTipoOperador: number): Observable<any> {\n    return this.http\n      .post(`${this.API}/inativar`, codTipoOperador)\n      .pipe(take(1));\n  }\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ITecnologiaInformacaoMovimentacoes } from '../models/movimentacoes';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TecnologiaInformacaoEstoqueMovimentacoesService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n  //-----------------------------------MOVIMENTACÃO--------------------------\\\\\n\n  getMovimentacoes(params?) {\n    return this.http.get(\n      `${this.API}/tecnologia-informacao/estoque/movimentacoes`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postMovimentacoes(item: ITecnologiaInformacaoMovimentacoes) {\n    return this.http.post(\n      `${this.API}/tecnologia-informacao/estoque/movimentacoes`,\n      item,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { EquipeVenda } from './models/equipe-venda';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosEquipeVendaService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/equipe-venda`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaEquipesVenda(params?: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codEquipeVenda: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codEquipeVenda}`)\n      .pipe(take(1));\n  }\n\n  getDetalhes(codEquipeVenda: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codEquipeVenda}`)\n      .pipe(take(1));\n  }\n\n  private saveEquipeVenda(equipeVenda: EquipeVenda) {\n    return this.http.post(`${this.API}/salvar`, equipeVenda).pipe(take(1));\n  }\n\n  private updateEquipeVenda(equipeVenda: EquipeVenda) {\n    return this.http.put(`${this.API}/atualizar`, equipeVenda).pipe(take(1));\n  }\n\n  save(equipeVenda: EquipeVenda): Observable<any> {\n    if (equipeVenda.codEquipeVenda !== null) {\n      return this.updateEquipeVenda(equipeVenda);\n    }\n\n    return this.saveEquipeVenda(equipeVenda);\n  }\n\n  activateEquipeVenda(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n  }\n\n  inactivateEquipeVenda(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n  }\n\n  getListaEquipesERP(): Observable<any> {\n    return this.http.get(`${this.API}/erp/lista`).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { forkJoin, Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialClientesCadastroEnderecosFormularioService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes/cadastro/formulario/enderecos`;\n\n  constructor(\n    protected http: HttpClient,\n    private clientesService: ComercialClientesService\n  ) {}\n\n  loadDepencies(codCliente: any) {\n    let regioesAtuacaoComercial = this.getRegioesAtuacaoComercial();\n    let regioesEntrega = this.getRegioesEntrega();\n    let tiposMaterial = this.getTiposMaterial();\n    let tiposDescarga = this.getTiposDescarga();\n    let modosDescarga = this.getModosDescarga();\n    let validacoes = this.clientesService.getEnderecos(codCliente);\n    let tiposVeiculos = this.getTiposVeiculos();\n    let dadosEspeciais = this.getDadosEspeciais();\n\n    return forkJoin([\n      regioesAtuacaoComercial,\n      regioesEntrega,\n      tiposMaterial,\n      tiposDescarga,\n      modosDescarga,\n      validacoes,\n      tiposVeiculos,\n      dadosEspeciais,\n    ]).pipe(take(1));\n  }\n\n  getRegioesAtuacaoComercial() {\n    return this.http.get(`${this.API}/regioes-atuacao-comercial`).pipe(take(1));\n  }\n\n  getRegioesEntrega() {\n    return this.http.get(`${this.API}/regioes-entrega`).pipe(take(1));\n  }\n\n  getIbgeCidades(data: any) {\n    return this.http.post(`${this.API}/ibge`, data).pipe(take(1));\n  }\n\n  getRegiaoEntrega(codIBGE: any) {\n    return this.http.get(`${this.API}/regiao-entrega/${codIBGE}`).pipe(take(1));\n  }\n\n  getRegiaoEntregaPorBairro(bairro: string) {\n    return this.http.get(`${this.API}/regiao-entrega-por-bairro/${bairro}`).pipe(take(1));\n  }\n\n  getTiposMaterial() {\n    return this.http.get(`${this.API}/tipos-material`).pipe(take(1));\n  }\n\n  getTiposDescarga() {\n    return this.http.get(`${this.API}/tipos-descarga`).pipe(take(1));\n  }\n\n  getModosDescarga() {\n    return this.http.get(`${this.API}/modos-descarga`).pipe(take(1));\n  }\n\n  getTiposVeiculos() {\n    return this.http.get(`${this.API}/tipos-veiculos`).pipe(take(1));\n  }\n\n  getDadosEspeciais() {\n    return this.http.get(`${this.API}/dados-especiais`).pipe(take(1));\n  }\n\n  getAnexos(codEndereco: number): Observable<Object | JsonResponse> {\n    return this.http.get(`${this.API}/anexos/${codEndereco}`).pipe(take(1));\n  }\n\n  getCliente(codCliente){\n    return this.http.get(`https://crm360.monterrey.com.bo/api/comercial/clientes/detalhes/${codCliente}`).pipe(take(1));\n  }\n\n  postAnexos(\n    params,\n    codEndereco: number,\n    codCliente: number\n  ): Observable<Object | JsonResponse> {\n    return this.http.post(\n      `${this.API}/anexos/salvar?codEndereco=${codEndereco}&codCliente=${codCliente}`,\n      params\n    );\n  }\n\n  deleteAnexo(codAnexo: number): Observable<Object | JsonResponse> {\n    let params = {\n      codAnexo: codAnexo,\n    };\n\n    return this.http.put(`${this.API}/anexos/excluir`, params).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\n\n// Interfaces\nimport { IGrupo } from './models/grupo';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisGrupoService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/materiais/grupos`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getListaGrupos(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getAssociacoesMateriais(codGrupo: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/associacoes/${codGrupo}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codGrupo: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/detalhes/${codGrupo}`)\n      .pipe(take(1), retry(2));\n  }\n\n  private saveGrupo(record: IGrupo): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1), retry(2));\n  }\n\n  private updateGrupo(record: IGrupo): Observable<Object | JsonResponse> {\n    return this.http\n      .put(`${this.API}/atualizar`, record)\n      .pipe(take(1), retry(2));\n  }\n\n  save(record: IGrupo): Observable<Object | JsonResponse> {\n    if (record.codGrupo !== null) {\n      return this.updateGrupo(record);\n    }\n\n    return this.saveGrupo(record);\n  }\n\n  activateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/ativar`, codGrupo)\n      .pipe(take(1), retry(2));\n  }\n\n  inactivateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/inativar`, codGrupo)\n      .pipe(take(1), retry(2));\n  }\n\n  getFilterValues(): Observable<Object | JsonResponse> {\n    const linhas = this.tidSoftwareService.getLinhas();\n    const classes = this.comercialService.getClasses(null);\n\n    return forkJoin([linhas, classes]);\n  }\n}\n","import { Pipe, Injectable, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass FilterPipe {\n    /**\n     * @param {?} value\n     * @param {?} key\n     * @return {?}\n     */\n    static isFoundOnWalking(value, key) {\n        let /** @type {?} */ walker = value;\n        let /** @type {?} */ found = false;\n        do {\n            if (walker.hasOwnProperty(key) || Object.getOwnPropertyDescriptor(walker, key)) {\n                found = true;\n                break;\n            }\n        } while (walker = Object.getPrototypeOf(walker));\n        return found;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    static isNumber(value) {\n        return !isNaN(parseInt(value, 10)) && isFinite(value);\n    }\n    /**\n     * Checks function's value if type is function otherwise same value\n     * @param {?} value\n     * @return {?}\n     */\n    static getValue(value) {\n        return typeof value === 'function' ? value() : value;\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByString(filter) {\n        if (filter) {\n            filter = filter.toLowerCase();\n        }\n        return value => !filter || (value ? ('' + value).toLowerCase().indexOf(filter) !== -1 : false);\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByBoolean(filter) {\n        return value => Boolean(value) === filter;\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByObject(filter) {\n        return value => {\n            for (const /** @type {?} */ key in filter) {\n                if (key === '$or') {\n                    if (!this.filterByOr(filter.$or)(FilterPipe.getValue(value))) {\n                        return false;\n                    }\n                    continue;\n                }\n                if (!value || !FilterPipe.isFoundOnWalking(value, key)) {\n                    return false;\n                }\n                if (!this.isMatching(filter[key], FilterPipe.getValue(value[key]))) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    }\n    /**\n     * @param {?} filter\n     * @param {?} val\n     * @return {?}\n     */\n    isMatching(filter, val) {\n        switch (typeof filter) {\n            case 'boolean':\n                return this.filterByBoolean(filter)(val);\n            case 'string':\n                return this.filterByString(filter)(val);\n            case 'object':\n                return this.filterByObject(filter)(val);\n        }\n        return this.filterDefault(filter)(val);\n    }\n    /**\n     * Filter value by $or\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByOr(filter) {\n        return (value) => {\n            const /** @type {?} */ length = filter.length;\n            const /** @type {?} */ arrayComparison = (i) => value.indexOf(filter[i]) !== -1;\n            const /** @type {?} */ otherComparison = (i) => this.isMatching(filter[i], value);\n            const /** @type {?} */ comparison = Array.isArray(value) ? arrayComparison : otherComparison;\n            for (let /** @type {?} */ i = 0; i < length; i++) {\n                if (comparison(i)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n    /**\n     * Default filterDefault function\n     * @param {?} filter\n     * @return {?}\n     */\n    filterDefault(filter) {\n        return (value) => filter === undefined || filter == value;\n    }\n    /**\n     * @param {?} array\n     * @param {?} filter\n     * @return {?}\n     */\n    transform(array, filter) {\n        if (!array) {\n            return array;\n        }\n        switch (typeof filter) {\n            case 'boolean':\n                return array.filter(this.filterByBoolean(filter));\n            case 'string':\n                if (FilterPipe.isNumber(filter)) {\n                    return array.filter(this.filterDefault(filter));\n                }\n                return array.filter(this.filterByString(filter));\n            case 'object':\n                return array.filter(this.filterByObject(filter));\n            case 'function':\n                return array.filter(filter);\n        }\n        return array.filter(this.filterDefault(filter));\n    }\n}\nFilterPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filterBy',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/** @nocollapse */\nFilterPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass FilterPipeModule {\n}\nFilterPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [FilterPipe],\n                providers: [FilterPipe],\n                exports: [FilterPipe]\n            },] },\n];\n/** @nocollapse */\nFilterPipeModule.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FilterPipeModule, FilterPipe };\n//# sourceMappingURL=ngx-filter-pipe.js.map\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\n\nimport { IAdminPeril } from '../models/perfil';\nimport { event } from '../models/event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminPerfisService {\n\n  private readonly API: string = environment.API;\n\n  event: EventEmitter<Partial<event>> = new EventEmitter<Partial<event>>();\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getPerfil(perfil = {}) {\n    return this.http.get<IAdminPeril>(`${this.API}/core/perfis`, {\n      params: perfil,\n      observe: \"response\"\n    })\n  }\n\n  getPerfis(params?) {\n    return this.http.get<IAdminPeril>(`${this.API}/core/perfis`, {\n      params: params,\n      observe: \"response\"\n    })\n  }\n\n  postPerfil(perfil) {\n    return this.http.post(`${this.API}/core/perfis`,\n      perfil,\n      { observe: \"response\" }\n    )\n  }\n\n  getAtividadesAssociadas(params?) {\n    return this.http.get<IAdminPeril>(`${this.API}/core/perfis/atividades`, {\n      params: params,\n      observe: \"response\"\n    })\n  }\n\n  postAtividadesAssociadas(params) {\n    return this.http.post(`${this.API}/core/perfis/atividades`,\n      params,\n      { observe: \"response\" }\n    )\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","export default \"<div class=\\\"row\\\" id=\\\"application-header\\\">\\n  <div class=\\\"col-6\\\">\\n    <div id=\\\"title\\\">\\n      <back-button></back-button>\\n      <h1>Página não encontrada</h1>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\" id=\\\"application-body\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"not-found\\\">\\n      <img id=\\\"img\\\" src=\\\"../../../assets/images/system-alerts/404.png\\\">\\n      <div>\\n        <div id=\\\"title\\\">Oops! Página não encontrada</div>\\n        <div id=\\\"message\\\">A página que você está tentando acessar não existe\\n    </div>\\n  </div>\\n</div>\\n\\n\";","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaEntergaRestricoesService {\n\n  API = environment.API;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getRestricoes(params?) {\n    return this.http.get(`${this.API}/logistica/restricoes-transporte`, {\n      params: params,\n      observe: \"response\"\n    });\n  }\n\n  getRestricao(uuid: string) {\n    return this.http.get(`${this.API}/logistica/restricoes-transporte/${uuid}`, {\n      observe: \"response\"\n    });\n  }\n\n  postRestricoes(params) {\n    return this.http.post(`${this.API}/logistica/restricoes-transporte`, params, {\n      observe: \"response\"\n    })\n  }\n\n  postMateriaisAssociados(params) {\n    return this.http.post(`${this.API}/logistica/restricoes-transporte/materiais`, params, {\n      observe: \"response\"\n    })\n  }\n\n  getMateriais(params?){\n    return this.http.get(`${this.API}/logistica/entrada-materiais/materiais`, {\n      params: params,\n      observe: \"response\"\n    })\n  }\n\n  getMateriaisAssociados(params?){\n    return this.http.get(`${this.API}/logistica/restricoes-transporte/materiais`, {\n      params: params,\n      observe: \"response\"\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialAgendaService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/agenda`;\n\n  constructor(protected http: HttpClient) {}\n\n  getAcessos() {\n    return this.http.get(`${this.API}/acessos`).pipe(take(1), retry(2));\n  }\n\n  getCompromissos(params: any) {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/compromissos/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getCompromisso(id: any) {\n    return this.http\n      .get(`${this.API}/compromissos/detalhes/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  private saveCompromisso(record: any) {\n    return this.http\n      .post(`${this.API}/compromisso/salvar`, record)\n      .pipe(take(1), retry(2));\n  }\n  private saveCompromisso2(record: any) {\n    return this.http\n      .post(`${this.API}/compromiso/actualizar`, record)\n      .pipe(take(1), retry(2));\n  }\n\n  private updateCompromisso(record: any) {\n    return this.http\n      .post(`${this.API}/compromiso/actualizar` , record)\n      .pipe(take(1), retry(2));\n  }\n\n  private rescheduleCompromisso(record: any) {\n    return this.http\n      .post(`${this.API}/compromisso/reagendar`, record)\n      .pipe(take(1), retry(2));\n  }\n\n  save(action: string, record: any) {\n\n    if (action == 'editar') {\n      return this.updateCompromisso(record);\n    } else if (action == 'reagendar') {\n      return this.rescheduleCompromisso(record);\n    }\n\n    return this.saveCompromisso(record);\n  }\n\n  deleteCompromisso(id: any) {\n    const record = { id: id };\n    return this.http\n      .post(`${this.API}/compromiso/eliminar`, record)\n      .pipe(take(1), retry(2));\n  }\n  \n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CepService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/common/services/cep`;\n\n  constructor(protected http: HttpClient) {}\n\n  getData(cep: string) {\n    cep = cep.replace(/\\D/g, '');\n\n    if (cep !== '') {\n      let validaCep = /^[0-9]{8}$/;\n\n      if (validaCep.test(cep)) {\n        return this.http.get(`${this.API}/${cep}`);\n      }\n    }\n\n    return of({});\n  }\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ILogisticaEntradaMateriaisNotasFiscais } from '../models/notasFiscais';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaEntradaMateriaisNotasFiscaisService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n\n  getNotasFiscais(params?) {\n    return this.http.get(\n      `${this.API}/logistica/entrada-materiais/notas-fiscais`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getExport(params?) {\n    return this.http.get(\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/relatorio`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getAlteracoes(params?) {\n    return this.http.get(\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/historico`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getLotesDuplicados(params?) {\n    return this.http.get(\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/materiais/lotes-duplicados`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n  postNotasDuplicadas(notas: ILogisticaEntradaMateriaisNotasFiscais) {\n    return this.http.post(\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/materiais/lotes-duplicados`,\n      notas,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n\n  postNotasFiscais(notas) {\n    return this.http.post(\n      `${this.API}/logistica/entrada-materiais/notas-fiscais`,\n      notas,\n      {\n        observe: 'response',\n      }\n    );\n  }\n  \n  getHistoricoMateriais(params?) {\n    return this.http.get(\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/materiais/historico`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getNotasMateriais(params?) {\n    return this.http.get(\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/materiais`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postMateriais(notas) {\n    return this.http.post(\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/materiais`,\n      notas,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaSteellogService {\n\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient) { }\n\n  getTipoTransporte(params?) {\n    return this.http.get(`${this.API}/logistica/steellog/tipo-transporte`, {\n      params: params,\n      observe: \"response\"\n    });\n  }\n\n  getEmpresas(params?) {\n    return this.http.get(`${this.API}/logistica/steellog/empresas`, {\n      params: params,\n      observe: \"response\"\n    });\n  }\n\n}\n","import { IDescontoModel } from './../../cotacoes/formulario/models/descontos';\nimport { ICalculoModel } from './../../cotacoes/formulario/models/calculo';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpParams} from '@angular/common/http';\nimport { Subject, Observable, forkJoin, BehaviorSubject, of } from 'rxjs';\nimport { take, delay } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialVendedoresService } from '../../../services/vendedores.service';\nimport { ComercialCadastrosSituacaoPropostaService } from '../../../cadastros/situacao-proposta/situacao-proposta.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCicloVendasPedidosProducaoTelasFormularioService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/ciclo-vendas/pedidos-producao-telas`;\n\n  private notifySubmit = new Subject<any>();\n\n  notifySubmitObservable$ = this.notifySubmit.asObservable();\n\n  materiaisSubject: Subject<Array<any>> = new Subject<Array<any>>();\n  limparCarrinhoSubject: Subject<boolean> = new Subject<boolean>();\n  calculoSubject: Subject<ICalculoModel> = new Subject<ICalculoModel>();\n  dataSubject: Subject<ICalculoModel> = new Subject<ICalculoModel>();\n  descontoSubject: Subject<IDescontoModel> = new Subject<IDescontoModel>();\n\n  calculoBehavior: BehaviorSubject<ICalculoModel>;\n  calculoObservable: Observable<ICalculoModel>;\n\n  carteiraClientesSubject: BehaviorSubject<any>;\n  carteiraClientes: Observable<any>;\n  carteiraClientesLoaded: boolean;\n\n  codCliente: EventEmitter<number> = new EventEmitter();\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private vendedoresService: ComercialVendedoresService,\n    private situacoesService: ComercialCadastrosSituacaoPropostaService,\n  ) {}\n\n\n  public onNotifySubmit(data: boolean) {\n    this.notifySubmit.next(data);\n  }\n\n\n  loadDependencies(): Observable<Array<Object | JsonResponse>> {\n    const situacoes = this.situacoesService.getListaSituacaoProposta(null);\n    const empresas = this.comercialService.getEmpresas({ tipo: 'faturamento' });\n    const depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\n\n    return forkJoin([\n      situacoes,\n      empresas,\n      depositos\n    ]);\n  }\n\n  createCarteiraClientes(carteiraClientes: Array<any>): void {\n    this.carteiraClientesSubject = new BehaviorSubject<any>(carteiraClientes);\n    this.carteiraClientes = this.carteiraClientesSubject.asObservable();\n    this.carteiraClientesSubject.next(carteiraClientes);\n    this.carteiraClientesLoaded = true;\n  }\n\n  getCurrentCarteiraClientes(): Array<any> {\n    let _carteiraClientes = [];\n\n    if (this.carteiraClientesLoaded === true) {\n      _carteiraClientes = this.carteiraClientesSubject.value;\n    }\n\n    return _carteiraClientes;\n  }\n\n  getCarteiraClientes(): Observable<Object | JsonResponse> {\n    return this.vendedoresService.getCarteiraClientes();\n  }\n\n  clearCarteiraClientes(): void {\n    if (typeof this.carteiraClientesSubject !== 'undefined') {\n      this.carteiraClientesSubject.next([]);\n    }\n  }\n\n  getPesquisaCliente(termoPesquisa: string): Observable<Object | JsonResponse> {\n    return of([\n      {\n        codCliente: 78919,\n        razaoSocial: 'LINDSAY',\n      },\n    ]).pipe(delay(1000));\n  }\n\n  postProducao(nrPedido: number): Observable<any> {\n    return this.http.post(`${this.API}/producao`, nrPedido).pipe(take(1));\n  }\n\n  postExpedicao(nrPedido: number): Observable<any> {\n    return this.http.post(`${this.API}/expedicao`, nrPedido).pipe(take(1));\n  }\n\n  // getCalculoMaterial(\n  //   params\n  // ): Observable<Object | JsonResponse> {\n  //   return this.http\n  //     .get(`${this.API}/material/calculo`, params)\n  //     .pipe(take(1));\n  // }\n\n  getCalculoMaterial(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/material/calculo`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\nimport { IXlsxExport } from 'src/app/models/xlsx-export';\n\n// xlsx\nimport * as XLSX from 'xlsx';\ntype AOA = any[][];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class XlsxService {\n\n  private data: AOA;\n  private wopts: XLSX.WritingOptions = { bookType: 'xlsx', type: 'array' };\n\n  fileLoaded: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  export(params: Partial<IXlsxExport>) {\n\n    let varExport: any = [];\n\n    const headers = params.headers ?? Object.keys(params.data[0]);\n\n    varExport.push(headers);\n\n    params.data.forEach(element => {\n      varExport.push(Object.values(element));\n    });\n\n    /* generate worksheet */\n    const ws: XLSX.WorkSheet = XLSX.utils.aoa_to_sheet(varExport);\n\n    /* generate workbook and add the worksheet */\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n    /* save to file */\n    XLSX.writeFile(wb, (this.getFileName(params.filename)) + '.xlsx');\n  }\n\n  getFile(evt: any) {\n\n    /* wire up file reader */\n    const target: DataTransfer = <DataTransfer>evt.target;\n\n    if (target.files.length !== 1) throw new Error('Cannot use multiple files');\n\n    const reader: FileReader = new FileReader();\n    reader.onload = (e: any) => {\n      /* read workbook */\n      const bstr: string = e.target.result;\n      const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\n\n      /* grab first sheet */\n      const wsname: string = wb.SheetNames[0];\n      const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n      /* save data */\n      this.fileLoaded.emit(<AOA>XLSX.utils.sheet_to_json(ws, { header: 1 }));\n    };\n\n    reader.readAsBinaryString(target.files[0]);\n  }\n\n  getFileName(filename: string = 'relatorio'){\n\n    filename = filename ?? 'relatorio'\n\n    const d = (new Date());\n    const timestamp = `${d.getFullYear()}_${d.getMonth()}_${d.getDate()}_${d.getHours()}_${d.getMinutes()}_${d.getSeconds()}`;\n    return `${filename}__${timestamp}`;\n  }\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ITecnologiaInformacaoModelo } from '../models/modelo';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TecnologiaInformacaoCadastroModeloService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n  getModelo(params?) {\n    return this.http.get(`${this.API}/tecnologia-informacao/item/modelos`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  postModelo(modelo: ITecnologiaInformacaoModelo) {\n    return this.http.post(\n      `${this.API}/tecnologia-informacao/item/modelo`,\n      modelo,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaRegioesEntregaService {\n\n  API = environment.API;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  postRegiaoEntrega(params){\n    return this.http.post(`${this.API}/logistica/regioes-entrega`, params, {\n      observe: \"response\"\n    })\n  }\n\n  getRegioesEntrega(params?){\n    return this.http.get(`${this.API}/logistica/regioes-entrega`, {\n      params: params,\n      observe: \"response\"\n    })\n  }\n\n  getRegiaoEntrega(id){\n    return this.http.get(`${this.API}/logistica/regioes-entrega/${id}`, {\n      observe: \"response\"\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IconesFontAwesomeService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n  getIcones(\n    icone = {\n      qtItensPorPagina: '1000000'\n    }\n  ) {\n    return this.http.get(`${this.API}/servicos/icons`, {\n      params: icone,\n      observe: 'response'\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SulFluminenseEstoqueAvancadoGenericService {\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient) { }\n\n  getLinhas() {\n    return this.http.get(`${this.BASE_URL}/common/v2/linhas`,{\n      observe: 'response'\n    },\n    );\n  }\n\n  getClasses(params) {\n    return this.http.get(`${this.BASE_URL}/common/v2/classes`, {\n      params,\n      observe: 'response'\n    });\n  }\n\n  getMateriais(params = {}) {\n    return this.http.get(`${this.BASE_URL}/common/v2/materiais`, {\n      params,\n      observe: 'response'\n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { Escritorio } from './models/escritorio';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosEscritorioService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/escritorio`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaEscritorios(params?: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codEscritorio: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codEscritorio}`)\n      .pipe(take(1));\n  }\n\n  getDetalhes(codEscritorio: number): Observable<any> {\n    return this.http.get(`${this.API}/detalhes/${codEscritorio}`).pipe(take(1));\n  }\n\n  private saveEscritorio(escritorio: Escritorio) {\n    return this.http.post(`${this.API}/salvar`, escritorio).pipe(take(1));\n  }\n\n  private updateEscritorio(escritorio: Escritorio) {\n    return this.http.put(`${this.API}/atualizar`, escritorio).pipe(take(1));\n  }\n\n  save(escritorio: Escritorio): Observable<any> {\n    if (escritorio.codEscritorio !== null) {\n      return this.updateEscritorio(escritorio);\n    }\n\n    return this.saveEscritorio(escritorio);\n  }\n\n  activateEscritorio(codEscritorio: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codEscritorio).pipe(take(1));\n  }\n\n  inactivateEscritorio(codEscritorio: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codEscritorio).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\n\n// Interfaces\nimport { ICombo } from './models/combo';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisComboService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/materiais/combos`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getListaCombos(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getAssociacoesMateriais(\n    codMaterial: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/associacoes/${codMaterial}`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codMaterial: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/detalhes/${codMaterial}`)\n      .pipe(take(1), retry(2));\n  }\n\n  private saveCombo(record: ICombo): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1), retry(2));\n  }\n\n  private updateCombo(record: ICombo): Observable<Object | JsonResponse> {\n    return this.http\n      .put(`${this.API}/atualizar`, record)\n      .pipe(take(1), retry(2));\n  }\n\n  save(record: ICombo, action: string): Observable<Object | JsonResponse> {\n    if (action === 'update') {\n      return this.updateCombo(record);\n    }\n\n    return this.saveCombo(record);\n  }\n\n  deleteAssociacao(\n    codCombo: number,\n    codAssociacao: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .delete(`${this.API}/associacao/remover/${codCombo}/${codAssociacao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  activateCombo(codCombo: number): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/ativar`, codCombo)\n      .pipe(take(1), retry(2));\n  }\n\n  inactivateCombo(codCombo: number): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/inativar`, codCombo).pipe(take(1));\n  }\n\n  getFilterValues(): Observable<Object | JsonResponse> {\n    const linhas = this.tidSoftwareService.getLinhas();\n    const classes = this.comercialService.getClasses(null);\n\n    return forkJoin([linhas, classes]);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EstadosService {\n  estados: any = [\n    {\n      sigla: 'AC',\n      descricao: 'Acre',\n    },\n    {\n      sigla: 'AL',\n      descricao: 'Alagoas',\n    },\n    {\n      sigla: 'AP',\n      descricao: 'Amapá',\n    },\n    {\n      sigla: 'AM',\n      descricao: 'Amazonas',\n    },\n    {\n      sigla: 'BA',\n      descricao: 'Bahia',\n    },\n    {\n      sigla: 'CE',\n      descricao: 'Ceará',\n    },\n    {\n      sigla: 'DF',\n      descricao: 'Distrito Federal',\n    },\n    {\n      sigla: 'ES',\n      descricao: 'Espírito Santo',\n    },\n    {\n      sigla: 'GO',\n      descricao: 'Goiás',\n    },\n    {\n      sigla: 'MA',\n      descricao: 'Maranhão',\n    },\n    {\n      sigla: 'MT',\n      descricao: 'Mato Grosso',\n    },\n    {\n      sigla: 'MS',\n      descricao: 'Mato Grosso do Sul',\n    },\n    {\n      sigla: 'MG',\n      descricao: 'Minas Gerais',\n    },\n    {\n      sigla: 'PA',\n      descricao: 'Pará',\n    },\n    {\n      sigla: 'PB',\n      descricao: 'Paraíba',\n    },\n    {\n      sigla: 'PR',\n      descricao: 'Paraná',\n    },\n    {\n      sigla: 'PE',\n      descricao: 'Pernambuco',\n    },\n    {\n      sigla: 'PI',\n      descricao: 'Piauí',\n    },\n    {\n      sigla: 'RJ',\n      descricao: 'Rio de Janeiro',\n    },\n    {\n      sigla: 'RN',\n      descricao: 'Rio Grande do Norte',\n    },\n    {\n      sigla: 'RS',\n      descricao: 'Rio Grande do Sul',\n    },\n    {\n      sigla: 'RO',\n      descricao: 'Rondônia',\n    },\n    {\n      sigla: 'RR',\n      descricao: 'Roraima',\n    },\n    {\n      sigla: 'SC',\n      descricao: 'Santa Catarina',\n    },\n    {\n      sigla: 'SP',\n      descricao: 'São Paulo',\n    },\n    {\n      sigla: 'SE',\n      descricao: 'Sergipe',\n    },\n    {\n      sigla: 'TO',\n      descricao: 'Tocantins',\n    },\n  ];\n\n  getEstados() {\n    return this.estados;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaEntregaFusionService {\n  private API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n  getPedidos(params = {}) {\n    return this.http.get(`${this.API}/logistica/integracoes/fusion/pedidos`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  integraPedidoFusion(params) {\n    return this.http.post(\n      `${this.API}/logistica/integracoes/fusion/pedidos`,\n      params,\n      { observe: 'response' }\n    );\n  }\n\n  getManifestos(params) {\n    return this.http.get(\n      `${this.API}/logistica/integracoes/fusion/steellog/manifestos`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postManifesto(params) {\n    return this.http.post(\n      `${this.API}/logistica/integracoes/fusion/steellog/manifestos`,\n      params,\n      { observe: 'response' }\n    );\n  }\n\n  getFiliais() {\n    return [\n      {\n        id: '1',\n        nome: 'Centro Logístico 01',\n        cnpj: '1028555020',\n      },\n      {\n        id: '21',\n        nome: 'Centro Logístico 03',\n        cnpj: '1028555020',\n      },\n      {\n        id: '2',\n        nome: 'Centro Logístico 07',\n        cnpj: '1028555020',\n      },\n      {\n        id: '3',\n        nome: 'Centro Logístico 08',\n        cnpj: '1028555020',\n      },\n      {\n        nome: 'Almacen 09 - Montero',\n        id: '9',\n        cnpj: '1028555020',\n      },\n      {\n        nome: 'Almacen 11 - Trinidad',\n        id: '11',\n        cnpj: '1028555020',\n      },\n      {\n        nome: 'Almacen 12 - Satelite',\n        id: '12',\n        cnpj: '1028555020',\n      },\n      {\n        nome: 'Almacen 17 - Sucre',\n        id: '17',\n        cnpj: '1028555020',\n      },\n      {\n        nome: 'Almacen 18 - La Paz',\n        id: '18',\n        cnpj: '1028555020',\n      },\n      {\n        nome: 'Almacen 19 - Potosi',\n        id: '19',\n        cnpj: '1028555020',\n      },\n      {\n        nome: 'Almacen 20 - Tarija',\n        id: '20',\n        cnpj: '1028555020',\n      },\n      {\n        nome: 'Almacen V 32',\n        id: '25',\n        cnpj: '1028555020',\n      },\n      {\n        nome: 'Centro de Acopio y Distribucion',\n        id: '14',\n        cnpj: '1028555020',\n      },\n      {\n        nome: 'Producción 07',\n        id: '22',\n        cnpj: '1028555020',\n      },\n      {\n        nome: 'Producción 17',\n        id: '23',\n        cnpj: '1028555020',\n      },\n      {\n        nome: 'Producción 20',\n        id: '24',\n        cnpj: '1028555020',\n      }\n    ];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenericService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/common`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEscritorios() {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1));\n  }\n\n  getEmpresas() {\n    return this.http.get(`${this.API}/empresas`).pipe(take(1));\n  }\n\n  getDepositos(idEmpresa: number) {\n    return this.http.get(`${this.API}/depositos/${idEmpresa}`);\n  }\n\n  getClasses(linha: any) {\n    return this.http.get(`${this.API}/classes/${linha}`).pipe(take(1));\n  }\n\n  getMateriais(params: any = []) {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getSituacoes() {\n    return this.http.get(`${this.API}/situacoes`).pipe(take(1));\n  }\n\n  getFiltros() {\n    let materiais = this.getMateriais();\n    let linhas = this.getLinhas();\n    let empresas = this.getEmpresas();\n\n    return forkJoin([materiais, linhas, empresas]).pipe(take(1));\n  }\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ILogisticaYmsChecklist } from '../models/checklist';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaYmsChecklistService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n\n  getChecklist(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/checklist`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postChecklist(checklist: ILogisticaYmsChecklist) {\n    return this.http.post(\n      `${this.API}/logistica/yms/checklist`,\n      checklist,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaPrazoEntregaService {\n\n  API = environment.API;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  postPrazoEntrega(params){\n    return this.http.post(`${this.API}/logistica/prazos-entrega`, params, {\n      observe: \"response\"\n    })\n  }\n\n  getPrazosEntrega(params?){\n    return this.http.get(`${this.API}/logistica/prazos-entrega`, {\n      params: params,\n      observe: \"response\"\n    })\n  }\n\n  getPrazoEntrega(id){\n    return this.http.get(`${this.API}/logistica/prazos-entrega/${id}`, {\n      observe: \"response\"\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubModulosService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/core/submodulo`;\n\n  constructor(protected http: HttpClient) {}\n\n  getSubModulo(idSubModulo: number) {\n    return this.http\n      .get(`${this.API}/${idSubModulo}`, { observe: 'response' })\n      .pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../../comercial.service';\nimport { ComercialTidSoftwareService } from '../../tid-software/tid-software.service';\n\n// Interfaces\nimport { ILinha } from './models/associacao-linhas';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosAssociacaoLinhasService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/emailMarketing/associacao`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getListaLinhas(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getAssociacoesSetores(params?) {\n    return this.http.get(`${this.API}/lista-associacoes`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  getLinhas(params?) {\n    return this.http.get(`${this.API}/linhas`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n  getSetoresFilter(params?) {\n    return this.http.get(`${this.API}/setor-atividade`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  getDetalhes(params?): Observable<Object | JsonResponse> {\n    return this.http.get(`${this.API}/lista-associacoes`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  private saveLinha(record: ILinha): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/lista-associacoes`, record)\n      .pipe(take(1), retry(2));\n  }\n\n\n  save(record: ILinha): Observable<Object | JsonResponse> {\n    return this.saveLinha(record);\n  }\n\n  getSetores(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/setor-atividade`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EscritoriosService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/common/escritorios`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEscritorios() {\n    return this.http.get(`${this.API}`).pipe(take(1));\n  }\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ILogisticaFiliais } from '../models/filiais';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaFiliaisService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n\n  getFiliais(params?) {\n    return this.http.get(\n      `${this.API}/logistica/filiais`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getFilial(id: number) {\n    return this.http.get(\n      `${this.API}/logistica/filiais/${id}`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  postFiliais(filiais: ILogisticaFiliais) {\n    return this.http.post(\n      `${this.API}/logistica/filiais`,\n      filiais,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  getUsuariosAssociados(params?) {\n    return this.http.get(\n      `${this.API}/logistica/filiais/usuarios`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n\n  postUsuariosAssociados(associacao) {\n    return this.http.post(\n      `${this.API}/logistica/filiais/usuarios`,\n      associacao,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  deleteAssociacoes(params) {\n    return this.http.delete(\n      `${this.API}/logistica/filiais/usuarios`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getUsuarios(params?) {\n    return this.http.get(\n      `${this.API}/core/mtcorp/usuarios`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n}\n","// angular\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// services\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaEntregaDesmembramentoService {\n\n  private readonly API = environment.API;\n\n  constructor(\n    private http: HttpClient\n  ) {}\n\n  getProdutos(params) {\n    return this.http.get(`${this.API}/logistica/pedidos/produtos`, {\n      params: params,\n      observe: \"response\"\n    })\n  }\n\n  getTipoOperacao(params) {\n    return this.http.get(`${this.API}/logistica/pedidos/tipo-operacao`, {\n      params: params,\n      observe: \"response\"\n    })\n  }\n\n  post(params) {\n    return this.http.post(`${this.API}/logistica/pedidos/desmembramento`, params, {\n      observe: \"response\"\n    });\n  }\n\n  put(params){\n    return this.http.put(`${this.API}/logistica/pedidos/desmembramento`, params, {\n      observe: \"response\"\n    });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, tap, retry } from 'rxjs/operators';\n\nimport { setRepresentantes } from './models/representantes';\n\nimport { environment } from './../../../../../environments/environment';\nimport { JsonResponse } from './../../../../models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosRepresentantesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/representantes`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaRepresentantes(params: any = []): Observable<any> {\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  private saveERP(record: any): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/save`, record).pipe(take(1));\n  }\n\n  private updateERP(record: any): Observable<Object | JsonResponse> {\n    return this.http\n      .put(`${this.API}/update`, record)\n      .pipe(take(1));\n  }\n\n  save(record: any, action: string): Observable<Object | JsonResponse> {\n    console.log(record)\n    if (action === 'update') {\n      console.log(record)\n      return this.updateERP(record);\n    }\n\n    return this.saveERP(record);\n\n  }\n\n  getDetalhes(codRepresentante: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/detalhes/${codRepresentante}`)\n      .pipe(\n        take(1),\n        retry(2)\n        );\n  }\n\n  getTipoComissionamento() {\n    return this.http.get(`${this.API}/tipo-comissionamento`).pipe(take(1), retry(2));\n  }\n\n  getBancos() {\n    return this.http.get(`${this.API}/bancos`).pipe(take(1), retry(2));\n  }\n\n  getTipoVendedor() {\n    return this.http.get(`${this.API}/tipo-vendedor`).pipe(take(1), retry(2));\n  }\n\n  activateERP(codERP: number): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/ativar`, codERP)\n      .pipe(take(1), retry(2));\n  }\n\n  inactivateERP(codERP: number): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/inativar`, codERP).pipe(take(1));\n  }\n\n  getAnexos(codRepresentante: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/anexo/documentos/${codRepresentante}`)\n      .pipe(take(1));\n  }\n\n  postAnexos(params, codRepresentante: number): Observable<any> {\n    return this.http.post(\n      `${this.API}/anexo/documentos/salvar?codRepresentante=${codRepresentante}`,\n      params\n    ).pipe(take(1));\n  }\n\n  deleteAnexo(codAnexo: number): Observable<any> {\n    let params = {\n      codAnexo: codAnexo,\n    };\n\n    return this.http\n      .put(`${this.API}/anexo/documentos/excluir`, params)\n      .pipe(take(1));\n  }\n\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ILogisticaYmsEtapas } from '../models/etapas';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaYmsEtapasService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n\n  getEtapas(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/etapas`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getEtapa(id: number) {\n    return this.http.get(\n      `${this.API}/logistica/yms/etapas/${id}`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  postEtapas(etapas: ILogisticaYmsEtapas) {\n    return this.http.post(\n      `${this.API}/logistica/yms/etapas`,\n      etapas,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  getSetoresAssociados(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/etapas/setores`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getSetores(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/setores`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n\n  deleteAssociacoes(params) {\n    return this.http.delete(\n      `${this.API}/logistica/yms/etapas/setores`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n\n  postSetoresAssociados(associacao) {\n    return this.http.post(\n      `${this.API}/logistica/yms/etapas/setores`,\n      associacao,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","export { default } from \"../.internal/themes/animated\";\r\n//# sourceMappingURL=animated.js.map","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ITecnologiaInformacaoEstoqueProduto } from '../models/produto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TecnologiaInformacaoEstoqueProdutosService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n  getProdutos(params?) {\n    return this.http.get(`${this.API}/tecnologia-informacao/estoque/produtos`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  getProduto(id: number) {\n    return this.http.get(`${this.API}/tecnologia-informacao/estoque/produtos/${id}`, {\n      observe: 'response',\n    });\n  }\n\n  postProdutos(item: ITecnologiaInformacaoEstoqueProduto) {\n    return this.http.post(\n      `${this.API}/tecnologia-informacao/estoque/produtos`,\n      item,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","/**\r\n * amCharts 4 locale\r\n *\r\n * Locale: pt_BR\r\n * Language: Brazilian Portuguese\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v4/tutorials/creating-translations/) to make corrections or add new translations.\r\n */\r\nexport default {\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \",\",\r\n    \"_thousandSeparator\": \".\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_day\": \"dd MMM\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_hour\": \"hh\",\r\n    \"_duration_day\": \"dd\",\r\n    \"_duration_week\": \"ww\",\r\n    \"_duration_month\": \"MM\",\r\n    \"_duration_year\": \"yyyy\",\r\n    // Era translations\r\n    \"_era_ad\": \"DC\",\r\n    \"_era_bc\": \"AC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    \"January\": \"Janeiro\",\r\n    \"February\": \"Fevereiro\",\r\n    \"March\": \"Março\",\r\n    \"April\": \"Abril\",\r\n    \"May\": \"Maio\",\r\n    \"June\": \"Junho\",\r\n    \"July\": \"Julho\",\r\n    \"August\": \"Agosto\",\r\n    \"September\": \"Setembro\",\r\n    \"October\": \"Outubro\",\r\n    \"November\": \"Novembro\",\r\n    \"December\": \"Dezembro\",\r\n    \"Jan\": \"Jan\",\r\n    \"Feb\": \"Fev\",\r\n    \"Mar\": \"Mar\",\r\n    \"Apr\": \"Abr\",\r\n    \"May(short)\": \"Mai\",\r\n    \"Jun\": \"Jun\",\r\n    \"Jul\": \"Jul\",\r\n    \"Aug\": \"Ago\",\r\n    \"Sep\": \"Set\",\r\n    \"Oct\": \"Out\",\r\n    \"Nov\": \"Nov\",\r\n    \"Dec\": \"Dez\",\r\n    // Weekdays.\r\n    \"Sunday\": \"Domingo\",\r\n    \"Monday\": \"Segunda-feira\",\r\n    \"Tuesday\": \"Terça-feira\",\r\n    \"Wednesday\": \"Quarta-feira\",\r\n    \"Thursday\": \"Quinta-feira\",\r\n    \"Friday\": \"Sexta-feira\",\r\n    \"Saturday\": \"Sábado\",\r\n    \"Sun\": \"Dom\",\r\n    \"Mon\": \"Seg\",\r\n    \"Tue\": \"Ter\",\r\n    \"Wed\": \"Qua\",\r\n    \"Thu\": \"Qui\",\r\n    \"Fri\": \"Sex\",\r\n    \"Sat\": \"Sáb\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        return \"º\";\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"Aumentar Zoom\",\r\n    // Timeline buttons\r\n    \"Play\": \"Play\",\r\n    \"Stop\": \"Parar\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"Legenda\",\r\n    // Legend's item screen reader indicator.\r\n    \"Click, tap or press ENTER to toggle\": \"Clique, toque ou pressione ENTER para alternar\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"Carregando\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"Início\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"Gráfico\",\r\n    \"Serial chart\": \"Gráfico Serial\",\r\n    \"X/Y chart\": \"Gráfico XY\",\r\n    \"Pie chart\": \"Gráfico de Pizza\",\r\n    \"Gauge chart\": \"Gráfico Indicador\",\r\n    \"Radar chart\": \"Gráfico de Radar\",\r\n    \"Sankey diagram\": \"Diagrama Sankey\",\r\n    \"Chord diagram\": \"Diagram Chord\",\r\n    \"Flow diagram\": \"Diagrama Flow\",\r\n    \"TreeMap chart\": \"Gráfico de Mapa de Árvore\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"Séries\",\r\n    \"Candlestick Series\": \"Séries do Candlestick\",\r\n    \"Column Series\": \"Séries de Colunas\",\r\n    \"Line Series\": \"Séries de Linhas\",\r\n    \"Pie Slice Series\": \"Séries de Fatias de Pizza\",\r\n    \"X/Y Series\": \"Séries de XY\",\r\n    // Map-related stuff.\r\n    \"Map\": \"Mapa\",\r\n    \"Press ENTER to zoom in\": \"Pressione ENTER para aumentar o zoom\",\r\n    \"Press ENTER to zoom out\": \"Pressione ENTER para diminuir o zoom\",\r\n    \"Use arrow keys to zoom in and out\": \"Use as setas para diminuir ou aumentar o zoom\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"Use as teclas mais ou menos no seu teclado para diminuir ou aumentar o zoom\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"Exportar\",\r\n    \"Image\": \"Imagem\",\r\n    \"Data\": \"Dados\",\r\n    \"Print\": \"Imprimir\",\r\n    \"Click, tap or press ENTER to open\": \"Clique, toque ou pressione ENTER para abrir\",\r\n    \"Click, tap or press ENTER to print.\": \"Clique, toque ou pressione ENTER para imprimir\",\r\n    \"Click, tap or press ENTER to export as %1.\": \"Clique, toque ou pressione ENTER para exportar como %1.\",\r\n    'To save the image, right-click this link and choose \"Save picture as...\"': \"Para salvar a imagem, clique no link com o botão da direira e escolha \\\"Salvar imagem como...\\\"\",\r\n    'To save the image, right-click thumbnail on the left and choose \"Save picture as...\"': \"Para salvar, clique na imagem à esquerda com o botão direito e escolha \\\"Salvar imagem como...\\\"\",\r\n    \"(Press ESC to close this message)\": \"(Pressione ESC para fechar esta mensagem)\",\r\n    \"Image Export Complete\": \"A exportação da imagem foi completada\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"A exportação da imagem demorou mais do que o experado. Algo deve ter dado errado.\",\r\n    \"Saved from\": \"Salvo de\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"Use TAB para selecionar os botões ou setas para a direita ou esquerda para mudar a seleção\",\r\n    \"Use left and right arrows to move selection\": \"Use as setas para a esquerda ou direita para mover a seleção\",\r\n    \"Use left and right arrows to move left selection\": \"Use as setas para a esquerda ou direita para mover a seleção da esquerda\",\r\n    \"Use left and right arrows to move right selection\": \"Use as setas para a esquerda ou direita para mover a seleção da direita\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"Use TAB para selecionar os botões ou setas para cima ou para baixo para mudar a seleção\",\r\n    \"Use up and down arrows to move selection\": \"Use as setas para cima ou para baixo para mover a seleção\",\r\n    \"Use up and down arrows to move lower selection\": \"Use as setas para cima ou para baixo para mover a seleção de baixo\",\r\n    \"Use up and down arrows to move upper selection\": \"Use as setas para cima ou para baixo para mover a seleção de cima\",\r\n    \"From %1 to %2\": \"De %1 para %2\",\r\n    \"From %1\": \"De %1\",\r\n    \"To %1\": \"Para %1\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"Não há um interpretador para este arquivo: %1\",\r\n    \"Error parsing file: %1\": \"Erro analizando o arquivo: %1\",\r\n    \"Unable to load file: %1\": \"O arquivo não pôde ser carregado: %1\",\r\n    \"Invalid date\": \"Data inválida\",\r\n};\r\n//# sourceMappingURL=pt_BR.js.map","export { default } from \"../.internal/themes/material\";\r\n//# sourceMappingURL=material.js.map","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ITecnologiaInformacaoContrato } from '../models/contrato';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TecnologiaInformacaoCadastroContratoService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n  //-----------------------------------ITENS--------------------------\\\\\n\n  getContrato(params?) {\n    return this.http.get(`${this.API}/tecnologia-informacao/contratos`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  postContrato(contrato) {\n    return this.http.post(\n      `${this.API}/tecnologia-informacao/contrato`,\n      contrato,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  //-----------------------------------Docuementos--------------------------\\\\\n  getDocumento(params) {\n    return this.http.get(\n      `${this.API}/tecnologia-informacao/contratos/documentos`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postDocumento(params, ID_TECN_INFO_CONT: number) {\n    return this.http.post(\n      `${this.API}/tecnologia-informacao/contrato/documento?ID_TECN_INFO_CONT=${ID_TECN_INFO_CONT}`,\n      params,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  putDocumento(params) {\n    return this.http.put(\n      `${this.API}/tecnologia-informacao/contrato/documento`,\n      params,\n      {\n        observe: 'response',\n      }\n    );\n  }\n  //------------------------------------  EMPRESAS ------------------------------//\n\n  getEmpresas(params?) {\n    return this.http.get(`${this.API}/tecnologia-informacao/empresas`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  getEmpresasAssoc(params?) {\n    return this.http.get(\n      `${this.API}/tecnologia-informacao/contratos/empresas`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postEmpresas(params) {\n    return this.http.post(\n      `${this.API}/tecnologia-informacao/contratos/empresas`,\n      params,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  getIndices(params?) {\n    return this.http.get(`${this.API}/servicos/indices`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ITecnologiaInformacaoTipoContrato } from '../models/tipoContrato';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TecnologiaInformacaoCadastroTipoContratoService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n  getTipoContrato(params?) {\n    return this.http.get(\n      `${this.API}/tecnologia-informacao/contrato/tipo-contrato`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postTipoContrato(tipoContrato: ITecnologiaInformacaoTipoContrato) {\n    return this.http.post(\n      `${this.API}/tecnologia-informacao/contrato/tipo-contrato`,\n      tipoContrato,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","import { descricaoTabela, assocTabela } from './models/tabela-precos';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { take, tap, retry } from 'rxjs/operators';\nimport { JsonResponse } from './../../../../../models/json-response';\nimport { environment } from './../../../../../../environments/environment';\n\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialComissoesGestaoComissionamentosService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/comissoes/representantes/gestao-comissionamentos`;\n\n  constructor(protected http: HttpClient) {}\n\n  getComissionamentos(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getListaComissoes(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getListaEdicaoComissoes(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/lista-edicao`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getDetalhesRepresentante(params): Observable<any> {\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/representantes-detalhes`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getDetalhesUnidades(params): Observable<any> {\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/unidades-detalhes`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  // getDetalhesRepresentante(params): Observable<any> {\n  //   return this.http.get(`${this.API}/comissoes-detalhes/${codGestao}/${codComissao}`)\n  //   .pipe(\n  //     take(1),\n  //     retry(2)\n  //     );\n  // }\n\n  getFormComissoes(params): Observable<any> {\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/dados-comissoes`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getHistorico(codComissaoRepresentante): Observable<any> {\n    return this.http.get(`${this.API}/historico/${codComissaoRepresentante}`)\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getModelo(codGestao): Observable<any> {\n    return this.http.get(`${this.API}/modelos/${codGestao}`)\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getSituacao(): Observable<any> {\n    return this.http.get(`${this.API}/situacao`)\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  // getFilterValues(): Observable<Object | JsonResponse> {\n  //   let escritorios = this.getEscritorios();\n  //   let representantes = this.getRepresentantes();\n\n  //   return forkJoin([\n  //     escritorios,\n  //     representantes,\n  //   ]).pipe(take(1));\n  // }\n\n  getRepresentantes(codEscritorio): Observable<any> {\n  return this.http.get(`${this.API}/representantes/${codEscritorio}`)\n  .pipe(\n    take(1),\n    retry(2)\n    );\n  }\n\n  getEscritorios(): Observable<any> {\n    return this.http.get(`${this.API}/escritorios`)\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getDetalhes(idAnoMes): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/detalhes/${idAnoMes}`)\n      .pipe(\n        take(1),\n        retry(2)\n        );\n  }\n\n  getPermissoesAcesso(): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/permissoes-acesso`)\n      .pipe(take(1), retry(2));\n  }\n\n  saveComissao(record: any, action?): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\n  }\n\n  updateComissao(record: any, action?): Observable<Object | JsonResponse> {\n    return this.http.put(`${this.API}/atualizar`, record).pipe(take(1));\n  }\n\n  // getSolicitaNfEscritorio(){\n  //   return this.http.get(`${this.API}/solicitar-nf-escritorio`).pipe(take(1));\n  // }\n\n  getSolicitaNfRepresentante(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/solicitar-nf-representante`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  postValores(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/salvar-valores`, params)\n      .pipe(take(1));\n  }\n\n\n   postAprovar(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/aprovar`, params)\n      .pipe(take(1));\n  }\n\n  postReprovar(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/reprovar`, params)\n      .pipe(take(1));\n  }\n\n  getAnexos(codComissao: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/anexo/documentos/${codComissao}`)\n      .pipe(take(1));\n  }\n\n  postAnexos(params, codComissaoRepresentante: number): Observable<any> {\n    return this.http.post(\n      `${this.API}/anexo/documentos/salvar?codComissaoRepresentante=${codComissaoRepresentante}`,\n      params\n    );\n  }\n\n  deleteAnexo(codAnexo: number): Observable<any> {\n    let params = {\n      codAnexo: codAnexo,\n    };\n\n    return this.http\n      .put(`${this.API}/anexo/documentos/excluir`, params)\n      .pipe(take(1));\n  }\n\n}\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile)\n  : 'download' in HTMLAnchorElement.prototype\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari)) && typeof FileReader === 'object') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","export default \"::ng-deep not-found {\\n  height: 100vh;\\n}\\n::ng-deep not-found .not-found {\\n  -ms-flex-align: center;\\n      align-items: center;\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: 100%;\\n  -ms-flex-pack: center;\\n      justify-content: center;\\n  width: 100%;\\n}\\n::ng-deep not-found .not-found #img {\\n  height: 70px;\\n  margin-right: 15px;\\n}\\n::ng-deep not-found .not-found #title {\\n  color: #586464;\\n  font-size: 18px;\\n  font-weight: 500;\\n  letter-spacing: 0.25px;\\n}\\n::ng-deep not-found .not-found #message {\\n  color: #212529;\\n  font-size: 16px;\\n  font-weight: 400;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIiwic3JjL2Fzc2V0cy9zY3NzL3ZhcmlhYmxlcy5zY3NzIiwic3JjL2Fzc2V0cy9zY3NzL2NvbG9ycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlFO0VBQ0UsYUFBQTtBQUhKO0FBSUk7RUFDRSxzQkFBQTtNQUFBLG1CQUFBO0VBQ0Esb0JBQUE7RUFBQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLHFCQUFBO01BQUEsdUJBQUE7RUFDQSxXQUFBO0FBRk47QUFHTTtFQUNFLFlBQUE7RUFDQSxrQkNkQztBRGFUO0FBR007RUFDRSxjRWRNO0VGZU4sZUFBQTtFQUNBLGdCQUFBO0VBQ0Esc0JBQUE7QUFEUjtBQUdNO0VBQ0UsY0VyQkk7RUZzQkosZUFBQTtFQUNBLGdCQUFBO0FBRFIiLCJmaWxlIjoic3JjL2FwcC9jb3JlL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAge1xuICBAaW1wb3J0ICcuLi8uLi8uLi9hc3NldHMvc2Nzcy9jb2xvcnMnO1xuICBAaW1wb3J0ICcuLi8uLi8uLi9hc3NldHMvc2Nzcy92YXJpYWJsZXMnO1xuXG4gIG5vdC1mb3VuZCB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAubm90LWZvdW5kIHtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgICNpbWcge1xuICAgICAgICBoZWlnaHQ6IDcwcHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogJGd1dHRlcjtcbiAgICAgIH1cbiAgICAgICN0aXRsZSB7XG4gICAgICAgIGNvbG9yOiAkbWVkaXVtLWdyYXk7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMjVweDtcbiAgICAgIH1cbiAgICAgICNtZXNzYWdlIHtcbiAgICAgICAgY29sb3I6ICRkYXJrLWdyYXk7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIiRndXR0ZXI6IDE1cHg7XG4kc2lkZWJhci1zaXplOiA0OHB4O1xuJHNpZGViYXItb3Blbi1zaXplOiAyNTBweDtcbiRuYXZiYXItc2l6ZTogNDhweDtcbiRoZWFkZXItc2l6ZTogNDVweDtcbiIsIiRibGFjazogIzAwMDAwMDtcbiRncmF5OiAjNWE1YTVhO1xuJGRhcmstZ3JheTogIzIxMjUyOTtcbiRtZWRpdW0tZ3JheTogIzU4NjQ2NDtcbiRsaWdodC1ncmF5OiAjZTVlNWUzO1xuJGN5YW5vOiAjMDBlMGQ4O1xuJGJsdWU6ICMwMDVmZGM7XG4kbGlnaHQtYmx1ZTogIzhGQjlFRjtcbiRkYXJrLWJsdWU6ICMwNDMzNWU7XG4kcmVkOiAjYjgzNDJjO1xuJG9yYW5nZTogI2ZmNjYzMztcbiRsaWdodC1vcmFuZ2U6ICNmZjg0Mjk7XG4kYXF1YTogIzIyZmZhMTtcbiRncmVlbjogIzRkY2M3MTtcbiRsaWdodC1ncmVlbjogI2JmZmYwMDtcbiRkYXJrLWdyZWVuOiAjMDA4MDYwO1xuJHllbGxvdzogI2ZmZWEwMDtcbiRnb2xkZW46ICNjYTlmMWQ7XG4kcGluazogI2NjMDc2NjtcbiRwdXJwbGU6ICM3OTBhYTM7XG4kd2hpdGU6ICNmZmZmZmY7XG4kaWNlOiAjZjdmN2Y3O1xuJHB1cnBsZU10Q29ycDogIzNlMDc1MjtcbiRwdXJwbGVMaWdodE10Q29ycDogIzk2MjE4ZTtcbiRvcmFuZ2VNdENvcnA6ICNGQzlGM0E7XG4kb3JhbmdlRGFya010Q29ycDogIzllNTIwMTtcbiJdfQ== */\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialGestaoAssociacoesCoordenadoresEscritoriosService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/gestao/associacao-coordenadores`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaCoordenadoresEscritorios() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1));\n  }\n\n  putAssociacaoCoordenadorEscritorio(data: any) {\n    return this.http.put(`${this.API}/salvar`, data).pipe(take(1));\n  }\n}\n","import { __decorate } from 'tslib';\nimport { Pipe, NgModule } from '@angular/core';\n\nvar OrderPipe_1;\nlet OrderPipe = OrderPipe_1 = class OrderPipe {\n    /**\n     * Check if a value is a string\n     *\n     * @param value\n     */\n    static isString(value) {\n        return typeof value === \"string\" || value instanceof String;\n    }\n    /**\n     * Sorts values ignoring the case\n     *\n     * @param a\n     * @param b\n     */\n    static caseInsensitiveSort(a, b) {\n        if (OrderPipe_1.isString(a) && OrderPipe_1.isString(b)) {\n            return a.localeCompare(b);\n        }\n        return OrderPipe_1.defaultCompare(a, b);\n    }\n    /**\n     * Default compare method\n     *\n     * @param a\n     * @param b\n     */\n    static defaultCompare(a, b) {\n        if (a === b) {\n            return 0;\n        }\n        if (a == null) {\n            return 1;\n        }\n        if (b == null) {\n            return -1;\n        }\n        return a > b ? 1 : -1;\n    }\n    /**\n     * Parse expression, split into items\n     * @param expression\n     * @returns {string[]}\n     */\n    static parseExpression(expression) {\n        expression = expression.replace(/\\[(\\w+)\\]/g, \".$1\");\n        expression = expression.replace(/^\\./, \"\");\n        return expression.split(\".\");\n    }\n    /**\n     * Get value by expression\n     *\n     * @param object\n     * @param expression\n     * @returns {any}\n     */\n    static getValue(object, expression) {\n        for (let i = 0, n = expression.length; i < n; ++i) {\n            if (!object) {\n                return;\n            }\n            const k = expression[i];\n            if (!(k in object)) {\n                return;\n            }\n            if (typeof object[k] === \"function\") {\n                object = object[k]();\n            }\n            else {\n                object = object[k];\n            }\n        }\n        return object;\n    }\n    /**\n     * Set value by expression\n     *\n     * @param object\n     * @param value\n     * @param expression\n     */\n    static setValue(object, value, expression) {\n        let i;\n        for (i = 0; i < expression.length - 1; i++) {\n            object = object[expression[i]];\n        }\n        object[expression[i]] = value;\n    }\n    transform(value, expression, reverse, isCaseInsensitive = false, comparator) {\n        if (!value) {\n            return value;\n        }\n        if (Array.isArray(expression)) {\n            return this.multiExpressionTransform(value, expression, reverse, isCaseInsensitive, comparator);\n        }\n        if (Array.isArray(value)) {\n            return this.sortArray(value.slice(), expression, reverse, isCaseInsensitive, comparator);\n        }\n        if (typeof value === \"object\") {\n            return this.transformObject(Object.assign({}, value), expression, reverse, isCaseInsensitive, comparator);\n        }\n        return value;\n    }\n    /**\n     * Sort array\n     *\n     * @param value\n     * @param expression\n     * @param reverse\n     * @param isCaseInsensitive\n     * @param comparator\n     * @returns {any[]}\n     */\n    sortArray(value, expression, reverse, isCaseInsensitive, comparator) {\n        const isDeepLink = expression && expression.indexOf(\".\") !== -1;\n        if (isDeepLink) {\n            expression = OrderPipe_1.parseExpression(expression);\n        }\n        let compareFn;\n        if (comparator && typeof comparator === \"function\") {\n            compareFn = comparator;\n        }\n        else {\n            compareFn = isCaseInsensitive\n                ? OrderPipe_1.caseInsensitiveSort\n                : OrderPipe_1.defaultCompare;\n        }\n        const array = value.sort((a, b) => {\n            if (!expression) {\n                return compareFn(a, b);\n            }\n            if (!isDeepLink) {\n                if (a && b) {\n                    return compareFn(a[expression], b[expression]);\n                }\n                return compareFn(a, b);\n            }\n            return compareFn(OrderPipe_1.getValue(a, expression), OrderPipe_1.getValue(b, expression));\n        });\n        if (reverse) {\n            return array.reverse();\n        }\n        return array;\n    }\n    /**\n     * Transform Object\n     *\n     * @param value\n     * @param expression\n     * @param reverse\n     * @param isCaseInsensitive\n     * @param comparator\n     * @returns {any[]}\n     */\n    transformObject(value, expression, reverse, isCaseInsensitive, comparator) {\n        const parsedExpression = OrderPipe_1.parseExpression(expression);\n        let lastPredicate = parsedExpression.pop();\n        let oldValue = OrderPipe_1.getValue(value, parsedExpression);\n        if (!Array.isArray(oldValue)) {\n            parsedExpression.push(lastPredicate);\n            lastPredicate = null;\n            oldValue = OrderPipe_1.getValue(value, parsedExpression);\n        }\n        if (!oldValue) {\n            return value;\n        }\n        OrderPipe_1.setValue(value, this.transform(oldValue, lastPredicate, reverse, isCaseInsensitive), parsedExpression);\n        return value;\n    }\n    /**\n     * Apply multiple expressions\n     *\n     * @param value\n     * @param {any[]} expressions\n     * @param {boolean} reverse\n     * @param {boolean} isCaseInsensitive\n     * @param {Function} comparator\n     * @returns {any}\n     */\n    multiExpressionTransform(value, expressions, reverse, isCaseInsensitive = false, comparator) {\n        return expressions.reverse().reduce((result, expression) => {\n            return this.transform(result, expression, reverse, isCaseInsensitive, comparator);\n        }, value);\n    }\n};\nOrderPipe = OrderPipe_1 = __decorate([\n    Pipe({\n        name: \"orderBy\",\n        pure: false\n    })\n], OrderPipe);\n\nlet OrderModule = class OrderModule {\n};\nOrderModule = __decorate([\n    NgModule({\n        declarations: [OrderPipe],\n        exports: [OrderPipe],\n        providers: [OrderPipe]\n    })\n], OrderModule);\n\nexport { OrderModule, OrderPipe };\n//# sourceMappingURL=ngx-order-pipe.js.map\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ITecnologiaInformacaoEstoqueMarcas } from '../models/marcas';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TecnologiaInformacaoEstoqueMarcasService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n  getMarcas(params?) {\n    return this.http.get(\n      `${this.API}/tecnologia-informacao/estoque/produtos/marcas`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postMarcas(marca: ITecnologiaInformacaoEstoqueMarcas) {\n    return this.http.post(\n      `${this.API}/tecnologia-informacao/estoque/produtos/marcas`,\n      marca,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { IAdminSubModulo } from '../models/submodulo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminSubModulosService {\n\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) { }\n\n  getSubModulos(submodulo = {}) {\n    return this.http.get<IAdminSubModulo[]>(`${this.API}/core/submodulos`, {\n      params: submodulo,\n      observe: \"response\"\n    });\n  }\n\n  getSubModulo(id: any) {\n    return this.http.get<IAdminSubModulo[]>(`${this.API}/core/submodulos/${id}`, {\n      observe: \"response\"\n    });\n  }\n\n  postSubModulo(subModulo) {\n    return this.http.post<IAdminSubModulo>(`${this.API}/core/submodulos`,\n      subModulo,\n      { observe: \"response\" }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaDashboardConferenciaCteService {\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient) { }\n\n  getConferencia(params?) {\n    return this.http.get(`${this.API}/logistica/indicadores/conferencia-cte`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  getRelatorio(params){\n    return this.http.get(`${this.API}/logistica/indicadores/conferencia-cte/relatorio`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ILogisticaYmsTiposCircuito } from '../models/tipos-circuito';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaYmsTiposCircuitoService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n\n  getTiposCircuito(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/circuitos/tipo`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postTiposCircuito(tipo: ILogisticaYmsTiposCircuito) {\n    return this.http.post(\n      `${this.API}/logistica/yms/circuitos/tipo`,\n      tipo,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaDashboardsAnaliseFreteService {\n\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient) { }\n\n\n  getIndicadores(params){\n    return this.http.get(`${this.API}/logistica/dashboards/analise-frete`, {\n      params: params,\n      observe: \"response\"\n    })\n  }\n\n  getRotulos(params?){\n    return this.http.get(`${this.API}/logistica/dashboards/analise-frete/rotulos`, {\n      params: params,\n      observe: \"response\"\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { MotivoAssociacao } from './models/motivo-associacao';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosMotivoAssociacaoService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/motivo-associacao`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaMotivosAssociacao(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codMotivoAssociacao: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codMotivoAssociacao}`)\n      .pipe(take(1));\n  }\n\n  getDetalhes(codMotivoAssociacao: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codMotivoAssociacao}`)\n      .pipe(take(1));\n  }\n\n  private saveMotivoAssociacao(motivoAssociacao: MotivoAssociacao) {\n    return this.http.post(`${this.API}/salvar`, motivoAssociacao).pipe(take(1));\n  }\n\n  private updateMotivoAssociacao(motivoAssociacao: MotivoAssociacao) {\n    return this.http\n      .put(`${this.API}/atualizar`, motivoAssociacao)\n      .pipe(take(1));\n  }\n\n  save(motivoAssociacao: MotivoAssociacao): Observable<any> {\n    if (motivoAssociacao.codMotivoAssociacao !== null) {\n      return this.updateMotivoAssociacao(motivoAssociacao);\n    }\n\n    return this.saveMotivoAssociacao(motivoAssociacao);\n  }\n\n  activateMotivoAssociacao(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n  }\n\n  inactivateMotivoAssociacao(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContatoService {\n\n  private readonly API = environment.API;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  get(params?) {\n    return this.http.get(`${this.API}/servicos/contatos`, {\n      observe: \"response\",\n      params: params\n    })\n  }\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ITecnologiaInformacaoTipoItem } from '../models/tipoItem';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TecnologiaInformacaoCadastroTipoItemService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n  getTipoItem(params?) {\n    return this.http.get(`${this.API}/tecnologia-informacao/item/tipo-item`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  postTipoItem(tipoItem: ITecnologiaInformacaoTipoItem) {\n    return this.http.post(\n      `${this.API}/tecnologia-informacao/item/tipo-item`,\n      tipoItem,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialGestaoContratosComerciaisService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/gestao/contratos-comerciais`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaContratos(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n   getListaRepresentantes(params: any = []): Observable<any> {\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n   getDetailPanel(codContrato: number): Observable<Object | JsonResponse> {\n    return this.http.get(`${this.API}/detail-panel/${codContrato}`).pipe(take(1));\n  }\n\n  getDetalhes(codContrato: number): Observable<Object | JsonResponse> {\n    return this.http.get(`${this.API}/detalhes/${codContrato}`).pipe(take(1));\n  }\n\n  aprovaReprovaEndereco(record: any) {\n    return this.http\n      .put(`${this.API}/aprova-reprova-endereco`, record)\n      .pipe(take(1));\n  }\n\n  getUltimaCompra(codCliente: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/ultima-compra/${codCliente}`)\n      .pipe(take(1));\n  }\n\n  private saveContrato(record: any): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/save`, record).pipe(take(1));\n  }\n\n  private updateContrato(record: any): Observable<Object | JsonResponse> {\n    return this.http\n      .put(`${this.API}/atualizar`, record)\n      .pipe(take(1));\n  }\n\n  save(record: any, action: string): Observable<Object | JsonResponse> {\n\n    if (action === 'update') {\n \n      return this.updateContrato(record);\n    }\n\n    return this.saveContrato(record);\n\n  }\n\n  getSituacao(): Observable<any> {\n    return this.http\n      .get(`${this.API}/situacao`)\n      .pipe(take(1));\n  }\n\n  getTiposFrete(): Observable<any> {\n    return this.http\n      .get(`${this.API}/tipos-frete`)\n      .pipe(take(1));\n  }\n\n  getTipoServico(): Observable<any> {\n    return this.http\n      .get(`${this.API}/tipo-servico`)\n      .pipe(take(1));\n  }\n\n  postAprovacao(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/aprovar`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  postReprovacao(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/reprovar`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  getAnexos(codContrato: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/anexo/documentos/${codContrato}`)\n      .pipe(take(1));\n  }\n\n  postAnexos(params, codContrato: number): Observable<any> {\n    return this.http.post(\n      `${this.API}/anexo/documentos/salvar?codContrato=${codContrato}`,\n      params\n    ).pipe(take(1));\n  }\n\n  deleteAnexo(codAnexo: number): Observable<any> {\n    let params = {\n      codAnexo: codAnexo,\n    };\n\n    return this.http\n      .put(`${this.API}/anexo/documentos/excluir`, params)\n      .pipe(take(1));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\n\n// Components\nimport { NotFoundComponent } from './not-found.component';\n\n@NgModule({\n  declarations: [NotFoundComponent],\n  imports: [CommonModule, SharedModule],\n  exports: [NotFoundComponent]\n})\nexport class NotFoundModule {}\n","import { is } from \"../core/Registry\";\r\nvar theme = function (object) {\r\n    if (is(object, \"SpriteState\")) {\r\n        object.transitionDuration = 400;\r\n    }\r\n    if (is(object, \"Component\")) {\r\n        object.rangeChangeDuration = 500;\r\n        object.interpolationDuration = 500;\r\n        object.sequencedInterpolation = false;\r\n        if (is(object, \"SankeyDiagram\")) {\r\n            object.sequencedInterpolation = true;\r\n        }\r\n        if (is(object, \"FunnelSeries\")) {\r\n            object.sequencedInterpolation = true;\r\n        }\r\n    }\r\n    if (is(object, \"Chart\")) {\r\n        object.defaultState.transitionDuration = 2000;\r\n        object.hiddenState.transitionDuration = 1000;\r\n    }\r\n    if (is(object, \"Tooltip\")) {\r\n        object.animationDuration = 400;\r\n        object.defaultState.transitionDuration = 400;\r\n        object.hiddenState.transitionDuration = 400;\r\n    }\r\n    if (is(object, \"Scrollbar\")) {\r\n        object.animationDuration = 500;\r\n    }\r\n    if (is(object, \"Series\")) {\r\n        object.defaultState.transitionDuration = 1000;\r\n        object.hiddenState.transitionDuration = 700;\r\n        object.hiddenState.properties.opacity = 1;\r\n        object.showOnInit = true;\r\n    }\r\n    if (is(object, \"MapSeries\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n    if (is(object, \"PercentSeries\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n    if (is(object, \"FunnelSlice\")) {\r\n        object.defaultState.transitionDuration = 800;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Slice\")) {\r\n        object.defaultState.transitionDuration = 700;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Preloader\")) {\r\n        object.hiddenState.transitionDuration = 2000;\r\n    }\r\n    if (is(object, \"Column\")) {\r\n        object.defaultState.transitionDuration = 700;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Column3D\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n};\r\nexport default theme;\r\n//# sourceMappingURL=animated.js.map","import { is } from \"../core/Registry\";\r\nimport { color } from \"../core/utils/Color\";\r\nvar theme = function (object) {\r\n    if (is(object, \"ColorSet\")) {\r\n        object.list = [\r\n            color(\"#F44336\"),\r\n            color(\"#E91E63\"),\r\n            color(\"#9C27B0\"),\r\n            color(\"#673AB7\"),\r\n            color(\"#3F51B5\"),\r\n            color(\"#2196F3\"),\r\n            color(\"#03A9F4\"),\r\n            color(\"#00BCD4\"),\r\n            color(\"#009688\"),\r\n            color(\"#4CAF50\"),\r\n            color(\"#8BC34A\"),\r\n            color(\"#CDDC39\"),\r\n            color(\"#FFEB3B\"),\r\n            color(\"#FFC107\"),\r\n            color(\"#FF9800\"),\r\n            color(\"#FF5722\"),\r\n            color(\"#795548\"),\r\n            color(\"#9E9E9E\"),\r\n            color(\"#607D8B\")\r\n        ];\r\n        object.minLightness = 0.2;\r\n        object.maxLightness = 0.7;\r\n        object.reuse = true;\r\n    }\r\n    if (is(object, \"ResizeButton\")) {\r\n        object.background.cornerRadiusTopLeft = 20;\r\n        object.background.cornerRadiusTopRight = 20;\r\n        object.background.cornerRadiusBottomLeft = 20;\r\n        object.background.cornerRadiusBottomRight = 20;\r\n    }\r\n    if (is(object, \"Tooltip\")) {\r\n        object.animationDuration = 800;\r\n    }\r\n};\r\nexport default theme;\r\n//# sourceMappingURL=material.js.map","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ILogisticaYmsTiposSetor } from '../models/tipos-setor';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaYmsTiposSetorService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n\n  getTiposSetor(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/setores/tipo`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getTipo(id: string) {\n    return this.http.get(\n      `${this.API}/logistica/yms/setores/tipo/${id}`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  postTiposSetor(tipo: ILogisticaYmsTiposSetor) {\n    return this.http.post(\n      `${this.API}/logistica/yms/setores/tipo`,\n      tipo,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","import { JsonResponse } from 'src/app/models/json-response';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { TipoComissionamento } from './models/tipo-comissionamento';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosTipoComissionamentoService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/tipo-comissionamento`;\n\n  constructor(protected http: HttpClient) {}\n\n  getTipoComissionamento(params?: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codTipoComissionamento: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codTipoComissionamento}`)\n      .pipe(take(1));\n  }\n\n  getDetalhes(codTipoComissionamento: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codTipoComissionamento}`)\n      .pipe(take(1));\n  }\n\n  getDetailTipoComissionamento(codTipoComissionamento: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/faixa-percentual/${codTipoComissionamento}`)\n      .pipe(take(1));\n  }\n\n  getFilterValues(): Observable<Object | JsonResponse> {\n    let linhas = this.getLinhas();\n    let classes = this.getClasses(null);\n\n    return forkJoin([\n      linhas,\n      classes,\n    ]).pipe(take(1));\n  }\n\n\n  getLinhas(): Observable<any> {\n    return this.http\n      .get(`${this.API}/linhas`)\n      .pipe(take(1));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1));\n  }\n\n  private saveTipoComissionamento(codTipoComissionamento) {\n    return this.http.post(`${this.API}/salvar`, codTipoComissionamento).pipe(take(1));\n  }\n\n  private updateTipoComissionamento(codTipoComissionamento) {\n    return this.http.put(`${this.API}/atualizar`, codTipoComissionamento).pipe(take(1));\n  }\n\n  save(codTipoComissionamento): Observable<any> {\n    if (codTipoComissionamento.codTipoComissionamento !== null) {\n      return this.updateTipoComissionamento(codTipoComissionamento);\n    }\n\n    return this.saveTipoComissionamento(codTipoComissionamento);\n  }\n\n  deleteFaixa(params: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/delete`, params)\n      .pipe(take(1));\n  }\n\n  activateTipoComissionamento(codTipoComissionamento: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codTipoComissionamento).pipe(take(1));\n  }\n\n  inactivateTipoComissionamento(codTipoComissionamento: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codTipoComissionamento).pipe(take(1));\n  }\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ILogisticaYmsTiposEtapa } from '../models/tipos-etapa';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaYmsTiposEtapaService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n\n  getTiposEtapa(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/etapas/tipo`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getTipo(id: string) {\n    return this.http.get(\n      `${this.API}/logistica/yms/etapas/tipo/${id}`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  postTiposEtapa(tipo: ILogisticaYmsTiposEtapa) {\n    return this.http.post(\n      `${this.API}/logistica/yms/etapas/tipo`,\n      tipo,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n","import { ILogisticaYmsTiposCircuito } from './../../tipos-circuito/models/tipos-circuito';\n//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ILogisticaYmsSetores } from '../models/setores';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaYmsSetoresService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n\n  getSetores(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/setores`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getSetor(id: string) {\n    return this.http.get(\n      `${this.API}/logistica/yms/setores/${id}`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  postSetores(setores: ILogisticaYmsSetores) {\n    return this.http.post(\n      `${this.API}/logistica/yms/setores`,\n      setores,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n\n  postIntervalos(params: ILogisticaYmsTiposCircuito) {\n    return this.http.post(\n      `${this.API}/logistica/yms/setores/intervalos`,\n      params,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  getIntervalos(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/setores/intervalos`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getMateriaisAssociados(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/setores/materiais`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getMateriais(params?) {\n    return this.http.get(\n      `${this.API}/common/v2/materiais`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n\n  deleteAssociacoes(params) {\n    return this.http.delete(\n      `${this.API}/logistica/yms/setores/materiais`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n\n  postMateriaisAssociados(associacao) {\n    return this.http.post(\n      `${this.API}/logistica/yms/setores/materiais`,\n      associacao,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaTipoMotoristaService {\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient) {}\n\n  getTipoMotoristas(params?) {\n    return this.http.get(`${this.API}/logistica/tipo-motorista`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  postTipoMotorista(params) {\n    return this.http.post(`${this.API}/logistica/tipo-motorista`, params, {\n      observe: 'response',\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { IComercialAknaMensagens } from './models/mensagens';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialAknaMensagensService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n  getMensagens(params?) {\n    return this.http.get(\n      `${this.API}/comercial/integracoes/akna/lista-mensagens`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postMensagens(mensagens: IComercialAknaMensagens) {\n    return this.http.post(`${this.API}/comercial/akna/mensagens`, mensagens, {\n      observe: 'response',\n    });\n  }\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ILogisticaYmsCircuitos } from '../models/circuitos';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaYmsCircuitosService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n\n  getCircuitos(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/circuitos`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getCircuito(id: number) {\n    return this.http.get(\n      `${this.API}/logistica/yms/circuitos/${id}`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n\n  postCircuitos(circuitos: ILogisticaYmsCircuitos) {\n    return this.http.post(\n      `${this.API}/logistica/yms/circuitos`,\n      circuitos,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  getEtapasAssociados(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/circuitos/etapas`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getEtapas(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/etapas`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n\n  deleteAssociacoes(params) {\n    return this.http.delete(\n      `${this.API}/logistica/yms/circuitos/etapas`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n\n  postEtapasAssociados(associacao) {\n    return this.http.post(\n      `${this.API}/logistica/yms/circuitos/etapas`,\n      associacao,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}