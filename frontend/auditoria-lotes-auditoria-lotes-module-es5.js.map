{"version":3,"sources":["webpack:///src/app/modules/sul-fluminense/estoque-avancado/auditoria-lotes/auditoria-lotes.component.scss","webpack:///src/app/modules/sul-fluminense/estoque-avancado/auditoria-lotes/auditoria-lotes.component.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/sul-fluminense/estoque-avancado/auditoria-lotes/auditoria-lotes-routing.module.ts","webpack:///src/app/modules/sul-fluminense/estoque-avancado/auditoria-lotes/auditoria-lotes.service.ts","webpack:///src/app/modules/sul-fluminense/estoque-avancado/auditoria-lotes/auditoria-lotes.component.html","webpack:///src/app/modules/sul-fluminense/estoque-avancado/auditoria-lotes/auditoria-lotes.module.ts"],"names":["SulFluminenseEstoqueAvancadoAuditoriaLotesComponent","rotaAtiva","formBuilder","serviceAuditoria","pnotify","router","routerService","activatedRoute","xlsxService","atividadesService","dateService","params","reverse","key","itemsPerPage","begin","end","carregando","carregandoNavBar","carregou","exibirFiltro","visualizaTabela","listaVazia","linhas","classes","materiais","listaAuditoria","listaAuditoriaExcel","tipoRelatorios","id_tipo","nome","tableConfig","isFixed","form","group","relatorio","required","CD_LINH","time","Date","getTime","registrarAcesso","onBreadCumbTree","get","disable","getLinhas","onActivatedRoute","subscribe","$subscription","queryParams","Object","keys","length","_response","getBase64UrlParams","patchValue","getLotesConferidos","setValoresFormulario","getParams","getRelatorioAuditoriaLotes","unsubscribe","parseInt","setValue","getClasses","pipe","res","enable","setValorMaterial","status","getMateriais","result","idSubModulo","breadCrumbTree","descricao","routerLink","navigate","relativeTo","setBase64UrlParams","getParam","value","notice","error","undefined","setValidators","descricaoLinhas","reset","nullValidator","idClasses","response","responseCode","id_tipo_tabela","$event","forEach","element","exportFile","event","page","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","_params","_obj","prop","convertToBrazilianDate","substring","body","selector","template","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","currentDate","startOfWeek","setDate","setHours","endOfWeek","y","m","d","h","i","toString","padStart","s","getSeconds","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","substr","days","providedIn","routes","path","component","SulFluminenseEstoqueAvancadoAuditoriaLotesRoutingModule","imports","forChild","exports","SulFluminenseAuditoriaLotesService","httpClient","BASE_URL","API","observe","btoa","tipoRelatorio","material","SulFluminenseEstoqueAvancadoAuditoriaLotesModule","declarations","forRoot"],"mappings":"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","file":"auditoria-lotes-auditoria-lotes-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3VsLWZsdW1pbmVuc2UvZXN0b3F1ZS1hdmFuY2Fkby9hdWRpdG9yaWEtbG90ZXMvYXVkaXRvcmlhLWxvdGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\n//Converte rota em base64\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination/ngx-bootstrap-pagination';\r\n\r\nimport { SulFluminenseAuditoriaLotesService } from './auditoria-lotes.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'auditoria-lotes',\r\n  templateUrl: './auditoria-lotes.component.html',\r\n  styleUrls: ['./auditoria-lotes.component.scss']\r\n})\r\nexport class SulFluminenseEstoqueAvancadoAuditoriaLotesComponent implements OnInit {\r\n  idSubModulo: any;\r\n\r\n  form: FormGroup;\r\n\r\n  breadCrumbTree: any;\r\n\r\n  $subscription: Subscription;\r\n\r\n  params: any = {};\r\n\r\n  /* Ordenação */\r\n  reverse: boolean = false;\r\n  key: string = 'CODIGO_MATERIAL';\r\n  /* Ordenação */\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 15;\r\n  begin: number = 0;\r\n  end: number = 15;\r\n  /* Paginação */\r\n\r\n  carregando: boolean = false;\r\n  carregandoNavBar: boolean = false;\r\n  carregou: boolean = false;\r\n  exibirFiltro: boolean = false;\r\n  visualizaTabela: boolean = false;\r\n  listaVazia: boolean = false;\r\n\r\n  id_tipo: string;\r\n  id_tipo_tabela: string;\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n  materiais: Array<any> = [];\r\n  listaAuditoria: Array<any> = [];\r\n  listaAuditoriaExcel: Array<any> = [];\r\n\r\n  tipoRelatorios = [\r\n    { id_tipo: '5', nome: 'Lotes Conferidos' },\r\n    { id_tipo: '4', nome: 'Auditoria de estoque' },\r\n/*     { id_tipo: '3', nome: 'Estoque por lote' },\r\n    { id_tipo: '2', nome: 'Estoque de faturamento' }, */\r\n    { id_tipo: '1', nome: 'Materias em lote' }\r\n  ];\r\n\r\n  /* Config Table */\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    isFixed: true,\r\n  };\r\n\r\n  constructor(\r\n    private rotaAtiva: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private serviceAuditoria: SulFluminenseAuditoriaLotesService,\r\n    private pnotify: PNotifyService,\r\n    private router: Router,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private xlsxService: XlsxService,\r\n    private atividadesService: AtividadesService,\r\n    private dateService: DateService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      relatorio: [null, [Validators.required]],\r\n      linhas: [null],\r\n      classes: [null],\r\n      materiais: [null],\r\n      CD_LINH: [null],\r\n      time: [new Date().getTime()]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.onBreadCumbTree();\r\n    this.form.get('classes').disable();\r\n    this.form.get('materiais').disable();\r\n    this.getLinhas();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute(): void {\r\n    this.$subscription = this.activatedRoute.queryParams.subscribe(\r\n      queryParams => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let _response = this.routerService.getBase64UrlParams(queryParams);\r\n          this.form.patchValue(_response);\r\n          if(_response['relatorio'] == 5){\r\n            this.getLotesConferidos();\r\n            this.setValoresFormulario(this.getParams(_response));\r\n          } else{\r\n            this.getRelatorioAuditoriaLotes(this.getParams(_response));\r\n            this.setValoresFormulario(this.getParams(_response));\r\n          }\r\n        }\r\n      }\r\n    );\r\n    this.$subscription.unsubscribe();\r\n  }\r\n\r\n  setValoresFormulario(params: any): void {\r\n    let relatorio = params['relatorio'];\r\n    let linhas = params['linhas'];\r\n    let classes = parseInt(params['classes']);\r\n    let materiais = parseInt(params['materiais']);\r\n\r\n    if (relatorio) {\r\n      this.exibirFiltro = true;\r\n    }\r\n\r\n    this.form.get('relatorio').setValue(relatorio);\r\n    this.form.get('linhas').setValue(linhas);\r\n\r\n    if (linhas) {\r\n      this.serviceAuditoria\r\n        .getClasses(linhas)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.form.patchValue({\r\n              classes: classes\r\n            });\r\n          })\r\n        )\r\n        .subscribe((res: any) => {\r\n          if (Object.keys(res).length > 0) {\r\n            this.classes = res['body'];\r\n            this.form.get('classes').enable();\r\n            this.setValorMaterial(linhas, classes, materiais);\r\n          }\r\n        });\r\n    } else {\r\n      this.form.get('classes').disable();\r\n    }\r\n  }\r\n\r\n  setValorMaterial(linhas: any, classes: any, materiais: any): void {\r\n    if (this.form.get('classes').status == 'VALID') {\r\n      this.serviceAuditoria\r\n        .getMateriais(linhas, classes)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.form.patchValue({\r\n              materiais: materiais\r\n            });\r\n          })\r\n        )\r\n        .subscribe((res: any) => {\r\n          if (Object.keys(res).length > 0) {\r\n            this.materiais = res['body'].result;\r\n            this.form.get('materiais').enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.form.get('materiais').disable();\r\n    }\r\n  }\r\n\r\n  onBreadCumbTree(): void {\r\n    this.rotaAtiva.params.subscribe((params: any) => {\r\n      this.idSubModulo = params['idSubModulo'];\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/sul-fluminense/home'\r\n        },\r\n        {\r\n          descricao: 'Estoque Avançado',\r\n          routerLink: `/sul-fluminense/estoque-avancado/${this.idSubModulo}`\r\n        },\r\n        {\r\n          descricao: 'Painel de auditoria Estoque Avançado'\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  onFilter(): void {\r\n    this.exibirFiltro = true;\r\n    this.form.get('time').setValue(new Date().getTime());\r\n\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParam())\r\n    });\r\n\r\n    if(this.form.value['relatorio'] == 5){\r\n      this.getLotesConferidos();\r\n    } else\r\n    this.getRelatorioAuditoriaLotes(this.getParam());\r\n  }\r\n\r\n  getParams(params: any): any {\r\n    let relatorio = params['relatorio'];\r\n    let linhas = params['linhas'];\r\n    let classes = params['classes'];\r\n    let materiais = params['materiais'];\r\n\r\n    return {\r\n      relatorio: relatorio,\r\n      linhas: linhas,\r\n      classes: classes,\r\n      materiais: materiais\r\n    };\r\n  }\r\n\r\n  AtivaFiltro(): void {\r\n    this.exibirFiltro = !this.exibirFiltro;\r\n  }\r\n\r\n  getLinhas(): void {\r\n    this.carregandoNavBar = true;\r\n\r\n    this.serviceAuditoria\r\n      .getLinhas()\r\n      .pipe()\r\n      .subscribe((res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res.status == 200) {\r\n            this.carregandoNavBar = false;\r\n            this.linhas = res['body'];\r\n          } else if (res.status == 204) {\r\n            this.pnotify.notice('Não há dados');\r\n          }\r\n        } else {\r\n          this.pnotify.error('Erro ao carregar dados');\r\n        }\r\n      });\r\n  }\r\n\r\n  getClasses(): void {\r\n    this.classes = [];\r\n    this.carregandoNavBar = true;\r\n\r\n    if (this.form.get('linhas').value != undefined) {\r\n      if(this.form.value['relatorio'] != 5){\r\n        this.form.get('classes').setValidators([Validators.required]);\r\n        this.form.get('materiais').setValidators([Validators.required]);\r\n      }\r\n\r\n      let descricaoLinhas = this.form.get('linhas').value;\r\n      this.serviceAuditoria.getClasses(descricaoLinhas).subscribe(\r\n        (res: any) => {\r\n          if (Object.keys(res).length > 0) {\r\n            if (res.status == 200) {\r\n              this.carregandoNavBar = false;\r\n              this.classes = res['body'];\r\n            }\r\n            this.form.get('classes').reset();\r\n            this.form.get('classes').enable();\r\n          }\r\n        },\r\n        error => {\r\n          this.pnotify.error('Erro ao carregar filtro Classes');\r\n        }\r\n      );\r\n    } else {\r\n      this.form.get('classes').setValidators([Validators.nullValidator]);\r\n      this.form.get('materiais').setValidators([Validators.nullValidator]);\r\n      this.form.get('classes').reset();\r\n      this.form.get('materiais').reset();\r\n      this.form.get('classes').disable();\r\n      this.form.get('materiais').disable();\r\n    }\r\n  }\r\n\r\n  getMateriais(): void {\r\n    this.materiais = [];\r\n    this.carregandoNavBar = true;\r\n\r\n    if (\r\n      this.form.get('classes').value !== undefined &&\r\n      this.form.get('classes').status === 'VALID'\r\n    ) {\r\n      let descricaoLinhas = this.form.get('linhas').value;\r\n      let idClasses = this.form.get('classes').value;\r\n      this.serviceAuditoria.getMateriais(descricaoLinhas, idClasses).subscribe(\r\n        (response: any) => {\r\n          if (Object.keys(response).length > 0) {\r\n            if (response['body'].responseCode === 200) {\r\n              this.materiais = response['body'].result;\r\n              this.form.get('materiais').reset();\r\n              this.form.get('materiais').enable();\r\n            } else if (response['body'].responseCode === 204) {\r\n              this.materiais = [];\r\n              this.pnotify.notice(\r\n                'Não há materiais cadastrados para essa classe'\r\n              );\r\n            }\r\n          }\r\n          this.carregandoNavBar = false;\r\n        },\r\n        error => {\r\n          this.pnotify.error('Erro ao carregar filtro Materias');\r\n        }\r\n      );\r\n    } else {\r\n      this.form.get('materiais').reset();\r\n      this.form.get('materiais').disable();\r\n    }\r\n  }\r\n\r\n  getRelatorioAuditoriaLotes(params: any): void {\r\n    this.begin = 0;\r\n    this.end = 15;\r\n    this.id_tipo_tabela = params['relatorio'];\r\n    this.visualizaTabela = false;\r\n    this.carregando = true;\r\n    this.carregandoNavBar = false;\r\n\r\n    this.serviceAuditoria\r\n      .getRelatorioAuditoriaLotes(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.carregando = false;\r\n        })\r\n      )\r\n      .subscribe(res => {\r\n        if (res['status'] == 200) {\r\n          this.visualizaTabela = true;\r\n          this.listaVazia = false;\r\n          this.listaAuditoria = res['body']['data'];\r\n          this.listaAuditoriaExcel = res['body']['data'];\r\n        } else if (res['status'] == 204) {\r\n          this.pnotify.notice('Não há dados a serem exibidos.');\r\n          this.listaVazia = true;\r\n        } else {\r\n          this.pnotify.error('Erro ao carregar dados');\r\n        }\r\n      });\r\n  }\r\n\r\n  setTooltip($event: any): void {\r\n    this.id_tipo = $event.id_tipo;\r\n  }\r\n\r\n  exportarExcel(): void {\r\n    /* Remove a coluna NF_EMISSAO_CLARION da lista */\r\n    this.listaAuditoriaExcel.forEach(\r\n      element => {\r\n        delete element['DATA_ENTRADA_CLARION'],\r\n        delete element['ID_CLASSE'],\r\n        delete element['ID_LINHA']\r\n      }\r\n    );\r\n\r\n    /* Chama o serviço para exportar dados em documento excel */\r\n    this.xlsxService.exportFile(this.listaAuditoriaExcel, 'relatório');\r\n  }\r\n\r\n  /* Ordenação */\r\n  sort(key: string): void {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  /* Ordenação */\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  /* VALIDAÇÕES DO FILTRO */\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): any {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string): any {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getParam() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  getLotesConferidos(){\r\n    this.carregando = true;\r\n    this.id_tipo_tabela = this.form.value['relatorio']\r\n    this.serviceAuditoria\r\n    .getLotesConferidos(this.getParam())\r\n    .pipe(\r\n      finalize(() =>{\r\n        this.carregando = false;\r\n        this.visualizaTabela = true;\r\n      })\r\n    )\r\n    .subscribe(response => {\r\n      if (response.status === 204) {\r\n        this.pnotify.notice('Não há lotes conferidos.');\r\n      } else {\r\n        this.listaAuditoria = response.body['data'];\r\n        this.listaAuditoriaExcel = response.body['data'];\r\n      }\r\n    });\r\n  }\r\n\r\n  getReset(){\r\n    this.form.get('classes').setValidators([Validators.nullValidator]);\r\n    this.form.get('materiais').setValidators([Validators.nullValidator]);\r\n    this.form.get('linhas').reset();\r\n    this.form.get('classes').reset();\r\n    this.form.get('materiais').reset();\r\n    this.form.get('classes').disable();\r\n    this.form.get('materiais').disable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SulFluminenseEstoqueAvancadoAuditoriaLotesComponent } from './auditoria-lotes.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SulFluminenseEstoqueAvancadoAuditoriaLotesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SulFluminenseEstoqueAvancadoAuditoriaLotesRoutingModule { }\r\n","import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SulFluminenseAuditoriaLotesService {\r\n\r\n  private readonly BASE_URL = environment.API;\r\n\r\n  constructor(\r\n    private httpClient : HttpClient\r\n  ) { }\r\n\r\n  getLinhas(): Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/linhas`,{\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getClasses(descricaoLinhas): Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/classes`, {\r\n      params: {\r\n        linhas: btoa(descricaoLinhas) \r\n      },\r\n      observe: \"response\" \r\n    });\r\n  }\r\n\r\n  getMateriais(descricaoLinhas, idClasses): Observable<any> {\r\n    if (!idClasses)\r\n      idClasses = \"\";\r\n\r\n    return this.httpClient.get(`${this.BASE_URL}/common/materiais`, {\r\n      params: {\r\n        linhas: btoa(descricaoLinhas),\r\n        classes: btoa(idClasses),\r\n        // tipo_material: \"Sul Fluminense\",\r\n        // situacao: \"A\"\r\n\r\n      },\r\n       observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getRelatorioAuditoriaLotes(params): Observable<any> {\r\n    let tipoRelatorio = params[\"relatorio\"];\r\n    let material = params[\"materiais\"] ? params[\"materiais\"] : \"0\";\r\n\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/auditoria-estoque-avancado`,{\r\n      params: {\r\n        \"id_tipo\": tipoRelatorio,\r\n        \"id_material\": material\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getLotesConferidos(params) {\r\n    return this.httpClient.get(\r\n      `${this.BASE_URL}/abastecimento/relatorios/lotes-conferidos`,\r\n      {\r\n        params,\r\n        observe: \"response\"\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"carregando\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"carregandoNavBar\\\"></loader-spinner-navbar>\\r\\n\\r\\n<app-header appTitle=\\\"Painel de auditoria Estoque Avançado\\\">\\r\\n  <button \\r\\n    (click)=\\\"exportarExcel()\\\"\\r\\n    [disabled]=\\\"!visualizaTabela\\\"\\r\\n    >\\r\\n    Exportar\\r\\n  </button>\\r\\n  <button \\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    [disabled] = \\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!carregando\\\">\\r\\n  <advanced-filter>\\r\\n    <form id=\\\"form-sul-fluminense-auditoria-lotes\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"relatorio\\\">Tipo de Relatório</label>\\r\\n          <!-- INICIO - Template do tooltip de tipo 4 -->\\r\\n          <ng-template #tipo4>\\r\\n            <div>\\r\\n                <p class=\\\"text-justify\\\"> Visão aberta por lote, de todos os materiais da consulta de estoque do Faturamento:</p>\\r\\n                <ul>\\r\\n                  <li><p class=\\\"text-justify\\\">ESTOQUE CONSOLIDADO = Visão da consulta de estoque de Faturamento;</p></li>\\r\\n                  <li><p class=\\\"text-justify\\\">ESTOQUE DETALHADO = Visão da consulta de estoque de Faturamento, aberta por lote;</p></li>\\r\\n                  <li><p class=\\\"text-justify\\\">ESTOQUE AVANÇADO = Visão consolidada dos lotes disponíveis para conferência, do módulo de Estoque Avançado do sistema TID.</p></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n          <!-- FIM - Template do tooltip de tipo 4 -->\\r\\n          <!-- INICIO - Tooltips -->             \\r\\n          <i *ngIf = \\\"id_tipo == null\\\" \\r\\n            class=\\\"far fa-question-circle hover ml-1\\\" \\r\\n            tooltip=\\\"Selecione um tipo de relatório\\\" \\r\\n            placement=\\\"auto\\\">\\r\\n          </i>\\r\\n          <i *ngIf = \\\"id_tipo == '1'\\\" \\r\\n            class=\\\"far fa-question-circle hover ml-1\\\" \\r\\n            tooltip=\\\"Visão de todos os lotes do sistema, disponíveis para conferência\\\"\\r\\n            placement=\\\"auto\\\">\\r\\n          </i>\\r\\n          <i *ngIf = \\\"id_tipo == '2'\\\" \\r\\n            class=\\\"far fa-question-circle hover ml-1\\\" \\r\\n            tooltip=\\\"Cópia fiel da tela de consulta de estoques do faturamento, do sistema TID, na localização de estoque 'Sul Fluminense Avançado'\\\" \\r\\n            placement=\\\"auto\\\">\\r\\n          </i>\\r\\n          <i *ngIf = \\\"id_tipo == '3'\\\" \\r\\n            class=\\\"far fa-question-circle hover ml-1\\\" \\r\\n            [tooltip]=\\\"tipo4\\\" \\r\\n            placement=\\\"auto\\\">\\r\\n          </i>\\r\\n          <i *ngIf = \\\"id_tipo == '4'\\\" \\r\\n            class=\\\"far fa-question-circle hover ml-1\\\" \\r\\n            tooltip=\\\"Auditoria em relação as três visões de estoque no sistema TID. Todas as informações devem ser iguais, para serem consideradas corretas.\\\" \\r\\n            placement=\\\"auto\\\">\\r\\n          </i>\\r\\n          <i *ngIf = \\\"id_tipo == '5'\\\" \\r\\n            class=\\\"far fa-question-circle hover ml-1\\\" \\r\\n            tooltip=\\\"Auditoria em relação as três visões de estoque no sistema TID. Todas as informações devem ser iguais, para serem consideradas corretas.\\\" \\r\\n            placement=\\\"auto\\\">\\r\\n          </i>\\r\\n          <!-- FIM - Tooltips -->  \\r\\n          <ng-select\\r\\n            [searchable]=\\\"false\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"tipoRelatorios\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"true\\\"\\r\\n            labelForId=\\\"nome\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"id_tipo\\\"\\r\\n            placeholder=\\\"Selecione tipo\\\"\\r\\n            formControlName=\\\"relatorio\\\"\\r\\n            (change) = \\\"setTooltip($event); getReset()\\\"\\r\\n            [ngClass]=\\\"onFieldError('relatorio') + ' ' + onFieldRequired('relatorio')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('relatorio')\\\"\\r\\n            message=\\\"Tipo de relatório é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"linha\\\">Linha</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"linhas\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              [hideSelected]=\\\"true\\\"\\r\\n              [closeOnSelect]=\\\"true\\\"\\r\\n              placeholder=\\\"Selecione linha\\\"\\r\\n              bindLabel=\\\"linha\\\"\\r\\n              bindValue=\\\"linha\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              formControlName=\\\"linhas\\\"\\r\\n              (change) = \\\"getClasses()\\\"\\r\\n              [ngClass]=\\\"onFieldError('linhas') + ' ' + onFieldRequired('linhas')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('linhas')\\\"\\r\\n              message=\\\"Linha é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"classe\\\">Classe</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"classes\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"true\\\"\\r\\n            labelForId=\\\"classe\\\"\\r\\n            bindLabel=\\\"classeDescricao\\\"\\r\\n            bindValue=\\\"classeId\\\"\\r\\n            placeholder=\\\"Selecione classe\\\"\\r\\n            formControlName=\\\"classes\\\"\\r\\n            (change) = \\\"getMateriais()\\\"\\r\\n            [ngClass]=\\\"onFieldError('classes') + ' ' + onFieldRequired('classes')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('classes')\\\"\\r\\n            message=\\\"Classes é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-6\\\">\\r\\n          <label for=\\\"material\\\">Material</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"materiais\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              [hideSelected]=\\\"true\\\"\\r\\n              [closeOnSelect]=\\\"true\\\"\\r\\n              labelForId=\\\"material\\\"\\r\\n              bindLabel=\\\"codigoDescricaoMaterial\\\"\\r\\n              bindValue=\\\"codigoMaterial\\\"\\r\\n              placeholder=\\\"Selecione material\\\"\\r\\n              formControlName=\\\"materiais\\\"\\r\\n              [ngClass]=\\\"onFieldError('materiais') + ' ' + onFieldRequired('materiais')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('materiais')\\\"\\r\\n              message=\\\"Materiais é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"col-12 p-0\\\">\\r\\n    <div *ngIf=\\\"listaVazia && !carregando\\\"class=\\\"text-center p-5\\\" style=\\\"height: 80%\\\">\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n    </div>\\r\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"!carregando && visualizaTabela && id_tipo_tabela == '1'\\\">\\r\\n      <custom-table>\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_MATERIAL')\\\">Cód. Material\\r\\n              <span *ngIf=\\\"key == 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_MATERIAL')\\\">Material\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_LINHA')\\\">Linha\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_CLASSE')\\\">Cód. Classe\\r\\n              <span *ngIf=\\\"key == 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_CLASSE')\\\">Classe\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('LOTE')\\\">Lote\\r\\n              <span *ngIf=\\\"key == 'LOTE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'LOTE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('QUANTIDADE')\\\">Qtde\\r\\n              <span *ngIf=\\\"key == 'QUANTIDADE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'QUANTIDADE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DATA_ENTRADA_CLARION')\\\">Dt. Entrada\\r\\n              <span *ngIf=\\\"key == 'DATA_ENTRADA_CLARION'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DATA_ENTRADA_CLARION'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of listaAuditoria | orderBy: key : reverse | slice: begin : end; let i = index\\\">\\r\\n            <td class=\\\"text-center\\\">{{item.CODIGO_MATERIAL | number: '0.0-0'}}</td>\\r\\n            <td>{{item.DESCRICAO_MATERIAL}}</td>\\r\\n            <td>{{item.DESCRICAO_LINHA}}</td>\\r\\n            <td class=\\\"text-center\\\">{{item.CODIGO_CLASSE | number: '0.0-0'}}</td>\\r\\n            <td>{{item.DESCRICAO_CLASSE}}</td>\\r\\n            <td class=\\\"text-center\\\">{{item.LOTE}}</td>\\r\\n            <td class=\\\"text-right\\\">{{item.QUANTIDADE | number: '0.3-3'}}</td>\\r\\n            <td class=\\\"text-center\\\">{{item.DATA_ENTRADA}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"!carregando && visualizaTabela && id_tipo_tabela == '2'\\\">\\r\\n      <custom-table>\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_MATERIAL')\\\">Cód. Material\\r\\n              <span *ngIf=\\\"key == 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_MATERIAL')\\\">Material\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_LINHA')\\\">Linha\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_CLASSE')\\\">Cód. Classe\\r\\n              <span *ngIf=\\\"key == 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_CLASSE')\\\">Classe\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('ESTOQUE_CONSOLIDADO')\\\">Estoque Consolidado\\r\\n              <span *ngIf=\\\"key == 'ESTOQUE_CONSOLIDADO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'ESTOQUE_CONSOLIDADO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of listaAuditoria | orderBy: key : reverse | slice: begin : end\\\">\\r\\n            <td class=\\\"text-center\\\">{{item.CODIGO_MATERIAL | number: '0.0-0'}}</td>\\r\\n            <td>{{item.DESCRICAO_MATERIAL}}</td>\\r\\n            <td>{{item.DESCRICAO_LINHA}}</td>\\r\\n            <td class=\\\"text-center\\\">{{item.CODIGO_CLASSE | number: '0.0-0'}}</td>\\r\\n            <td>{{item.DESCRICAO_CLASSE}}</td>\\r\\n            <td class=\\\"text-right\\\">{{item.ESTOQUE_CONSOLIDADO | number: '0.3-3'}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"!carregando && visualizaTabela && id_tipo_tabela == '3'\\\">\\r\\n      <custom-table>\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_MATERIAL')\\\">Cód. Material\\r\\n              <span *ngIf=\\\"key == 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_MATERIAL')\\\">Material\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_LINHA')\\\">Linha\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_CLASSE')\\\">Cód. Classe\\r\\n              <span *ngIf=\\\"key == 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_CLASSE')\\\">Classe\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('LOTE')\\\">Lote\\r\\n              <span *ngIf=\\\"key == 'LOTE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'LOTE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('QUANTIDADE')\\\">Qtde\\r\\n              <span *ngIf=\\\"key == 'QUANTIDADE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'QUANTIDADE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of listaAuditoria | orderBy: key : reverse | slice: begin : end\\\">\\r\\n            <td class=\\\"text-center\\\">{{item.CODIGO_MATERIAL | number: '0.0-0'}}</td>\\r\\n            <td>{{item.DESCRICAO_MATERIAL}}</td>\\r\\n            <td>{{item.DESCRICAO_LINHA}}</td>\\r\\n            <td class=\\\"text-center\\\">{{item.CODIGO_CLASSE | number: '0.0-0'}}</td>\\r\\n            <td>{{item.DESCRICAO_CLASSE}}</td>\\r\\n            <td class=\\\"text-center\\\">{{item.LOTE}}</td>\\r\\n            <td class=\\\"text-right\\\">{{item.QUANTIDADE | number: '0.3-3'}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"!carregando && visualizaTabela && id_tipo_tabela == '4'\\\">\\r\\n      <custom-table>\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_MATERIAL')\\\">Cód. Material\\r\\n              <span *ngIf=\\\"key == 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_MATERIAL')\\\">Material\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_LINHA')\\\">Linha\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_CLASSE')\\\">Cód. Classe\\r\\n              <span *ngIf=\\\"key == 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_CLASSE')\\\">Classe\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('ESTOQUE_CONSOLIDADO')\\\">Estoque Consolidado\\r\\n              <span *ngIf=\\\"key == 'ESTOQUE_CONSOLIDADO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'ESTOQUE_CONSOLIDADO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('ESTOQUE_DETALHADO')\\\">Estoque Detalhado\\r\\n              <span *ngIf=\\\"key == 'ESTOQUE_DETALHADO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'ESTOQUE_DETALHADO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover\\\" (click)=\\\"sort('ESTOQUE_AVANCADO')\\\">Estoque Avançado\\r\\n              <span *ngIf=\\\"key == 'ESTOQUE_AVANCADO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'ESTOQUE_AVANCADO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of listaAuditoria | orderBy: key : reverse | slice: begin : end\\\">\\r\\n            <td class=\\\"text-center\\\">{{item.CODIGO_MATERIAL | number: '0.0-0'}}</td>\\r\\n            <td>{{item.DESCRICAO_MATERIAL}}</td>\\r\\n            <td>{{item.DESCRICAO_LINHA}}</td>\\r\\n            <td class=\\\"text-center\\\">{{item.CODIGO_CLASSE | number: '0.0-0'}}</td>\\r\\n            <td>{{item.DESCRICAO_CLASSE}}</td>\\r\\n            <td class=\\\"text-right\\\">{{item.ESTOQUE_CONSOLIDADO | number: '0.3-3'}}</td>\\r\\n            <td class=\\\"text-right\\\">{{item.ESTOQUE_DETALHADO | number: '0.3-3'}}</td>\\r\\n            <td class=\\\"text-right\\\">{{item.ESTOQUE_AVANCADO | number: '0.3-3'}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"!carregando && visualizaTabela && id_tipo_tabela == '5'\\\">\\r\\n      <custom-table>\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('SITUACAO')\\\">Situação\\r\\n              <span *ngIf=\\\"key == 'SITUACAO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'SITUACAO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('SIGLA_FORNEC')\\\">Sigla Fornecedor\\r\\n              <span *ngIf=\\\"key == 'SIGLA_FORNEC'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'SIGLA_FORNEC'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('CD_MATERIAL')\\\">Cód. Material\\r\\n              <span *ngIf=\\\"key == 'CD_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'CD_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('DESCRICAO')\\\">Material\\r\\n              <span *ngIf=\\\"key == 'DESCRICAO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DESCRICAO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('LINHA')\\\">Linha\\r\\n              <span *ngIf=\\\"key == 'LINHA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'LINHA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('CLASSE')\\\">Classe\\r\\n              <span *ngIf=\\\"key == 'CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('UNIDADE')\\\">Uni. Medida\\r\\n              <span *ngIf=\\\"key == 'UNIDADE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'UNIDADE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('LOTE_MATERIAL')\\\">Num. Lote\\r\\n              <span *ngIf=\\\"key == 'LOTE_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'LOTE_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('QUANTIDADE')\\\">Quantidade\\r\\n              <span *ngIf=\\\"key == 'QUANTIDADE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'QUANTIDADE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('DT_ENTRADA')\\\">Data Entrada\\r\\n              <span *ngIf=\\\"key == 'DT_ENTRADA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DT_ENTRADA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('DATA_CONF')\\\">Data Conferência\\r\\n              <span *ngIf=\\\"key == 'DATA_CONF'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DATA_CONF'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('HORA_CONFE')\\\">Hora Conferência\\r\\n              <span *ngIf=\\\"key == 'HORA_CONFE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'HORA_CONFE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('USER_CONFE')\\\">Usuário Conferência\\r\\n              <span *ngIf=\\\"key == 'USER_CONFE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'USER_CONFE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('DATA_RETORNO')\\\">Data Retorno\\r\\n              <span *ngIf=\\\"key == 'DATA_RETORNO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DATA_RETORNO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('HORA_RETORNO')\\\">Hora Retorno\\r\\n              <span *ngIf=\\\"key == 'HORA_RETORNO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'HORA_RETORNO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('USER_RETORNO')\\\">Usuário Retorno\\r\\n              <span *ngIf=\\\"key == 'USER_RETORNO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'USER_RETORNO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('DATA_BAIXA')\\\">Data Baixa\\r\\n              <span *ngIf=\\\"key == 'DATA_BAIXA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'DATA_BAIXA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('HORA_BAIXA')\\\">Hora Baixa\\r\\n              <span *ngIf=\\\"key == 'HORA_BAIXA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'HORA_BAIXA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('USER_BAIXA')\\\">Usuário Baixa\\r\\n              <span *ngIf=\\\"key == 'USER_BAIXA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'USER_BAIXA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('NR_PEDIDO_TRANSF')\\\">Num. Tranferência\\r\\n              <span *ngIf=\\\"key == 'NR_PEDIDO_TRANSF'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'NR_PEDIDO_TRANSF'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('NR_PEDIDO_NF')\\\">Num. Pedido\\r\\n              <span *ngIf=\\\"key == 'NR_PEDIDO_NF'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n              <span *ngIf=\\\"key != 'NR_PEDIDO_NF'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of listaAuditoria | orderBy: key : reverse | slice: begin : end\\\">\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.SITUACAO}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.SIGLA_FORNEC}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.CD_MATERIAL | number: '0.0-0'}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.DESCRICAO}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.LINHA}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.CLASSE}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.UNIDADE}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.LOTE_MATERIAL}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.QUANTIDADE | number: '0.3-3'}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.DT_ENTRADA}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.DATA_CONF}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.HORA_CONFE}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.USER_CONFE}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.DATA_RETORNO}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.HORA_RETORNO}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.USER_RETORNO}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.DATA_BAIXA}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.HORA_BAIXA}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.USER_BAIXA}}</td>            \\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.NR_PEDIDO_NF}}</td>\\r\\n            <td class=\\\"text-center text-nowrap\\\">{{item.NR_PEDIDO_TRANSF}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div class=\\\"mt-3\\\" *ngIf=\\\"this.listaAuditoria?.length > 15 && !carregando && !listaVazia\\\">\\r\\n      Exibindo {{ begin + 1 }} a {{ end }} de {{ this.listaAuditoria?.length }}\\r\\n      <div class=\\\"d-flex\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"this.listaAuditoria?.length\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</app-body>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { TooltipModule, PaginationModule, BsDatepickerModule } from 'ngx-bootstrap';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\n\r\nimport { SulFluminenseEstoqueAvancadoAuditoriaLotesRoutingModule } from './auditoria-lotes-routing.module';\r\nimport { SulFluminenseEstoqueAvancadoAuditoriaLotesComponent } from './auditoria-lotes.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SulFluminenseEstoqueAvancadoAuditoriaLotesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SulFluminenseEstoqueAvancadoAuditoriaLotesRoutingModule,\r\n    NotFoundModule,\r\n    OrderModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    TooltipModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    TemplatesModule\r\n  ]\r\n})\r\nexport class SulFluminenseEstoqueAvancadoAuditoriaLotesModule { }\r\n"]}