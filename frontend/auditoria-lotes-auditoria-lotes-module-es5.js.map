{"version":3,"sources":["webpack:///src/app/modules/sul-fluminense/estoque-avancado/auditoria-lotes/auditoria-lotes.component.scss","webpack:///src/app/modules/sul-fluminense/estoque-avancado/auditoria-lotes/auditoria-lotes.component.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/sul-fluminense/estoque-avancado/auditoria-lotes/auditoria-lotes-routing.module.ts","webpack:///src/app/modules/sul-fluminense/estoque-avancado/auditoria-lotes/auditoria-lotes.service.ts","webpack:///src/app/modules/sul-fluminense/estoque-avancado/auditoria-lotes/auditoria-lotes.component.html","webpack:///src/app/modules/sul-fluminense/estoque-avancado/auditoria-lotes/auditoria-lotes.module.ts"],"names":["SulFluminenseEstoqueAvancadoAuditoriaLotesComponent","rotaAtiva","formBuilder","serviceAuditoria","pnotify","router","routerService","activatedRoute","xlsxService","atividadesService","dateService","params","reverse","key","itemsPerPage","begin","end","carregando","carregandoNavBar","carregou","exibirFiltro","visualizaTabela","listaVazia","linhas","classes","materiais","listaAuditoria","listaAuditoriaExcel","tipoRelatorios","id_tipo","nome","tableConfig","isFixed","form","group","relatorio","required","CD_LINH","time","Date","getTime","registrarAcesso","onBreadCumbTree","get","disable","getLinhas","onActivatedRoute","subscribe","$subscription","queryParams","Object","keys","length","_response","getBase64UrlParams","patchValue","getLotesConferidos","setValoresFormulario","getParams","getRelatorioAuditoriaLotes","unsubscribe","parseInt","setValue","getClasses","pipe","res","enable","setValorMaterial","status","getMateriais","result","idSubModulo","breadCrumbTree","descricao","routerLink","navigate","relativeTo","setBase64UrlParams","getParam","value","notice","error","undefined","setValidators","descricaoLinhas","reset","nullValidator","idClasses","response","responseCode","id_tipo_tabela","$event","forEach","element","exportFile","event","page","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","_params","_obj","prop","convertToBrazilianDate","substring","body","selector","template","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","i","toString","padStart","s","getSeconds","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","substr","days","setDate","providedIn","routes","path","component","SulFluminenseEstoqueAvancadoAuditoriaLotesRoutingModule","imports","forChild","exports","SulFluminenseAuditoriaLotesService","httpClient","BASE_URL","API","observe","btoa","tipoRelatorio","material","SulFluminenseEstoqueAvancadoAuditoriaLotesModule","declarations","forRoot"],"mappings":"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","file":"auditoria-lotes-auditoria-lotes-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3VsLWZsdW1pbmVuc2UvZXN0b3F1ZS1hdmFuY2Fkby9hdWRpdG9yaWEtbG90ZXMvYXVkaXRvcmlhLWxvdGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\n//Converte rota em base64\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination/ngx-bootstrap-pagination';\n\nimport { SulFluminenseAuditoriaLotesService } from './auditoria-lotes.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'auditoria-lotes',\n  templateUrl: './auditoria-lotes.component.html',\n  styleUrls: ['./auditoria-lotes.component.scss']\n})\nexport class SulFluminenseEstoqueAvancadoAuditoriaLotesComponent implements OnInit {\n  idSubModulo: any;\n\n  form: FormGroup;\n\n  breadCrumbTree: any;\n\n  $subscription: Subscription;\n\n  params: any = {};\n\n  /* Ordenação */\n  reverse: boolean = false;\n  key: string = 'CODIGO_MATERIAL';\n  /* Ordenação */\n\n  /* Paginação */\n  itemsPerPage: number = 15;\n  begin: number = 0;\n  end: number = 15;\n  /* Paginação */\n\n  carregando: boolean = false;\n  carregandoNavBar: boolean = false;\n  carregou: boolean = false;\n  exibirFiltro: boolean = false;\n  visualizaTabela: boolean = false;\n  listaVazia: boolean = false;\n\n  id_tipo: string;\n  id_tipo_tabela: string;\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n  materiais: Array<any> = [];\n  listaAuditoria: Array<any> = [];\n  listaAuditoriaExcel: Array<any> = [];\n\n  tipoRelatorios = [\n    { id_tipo: '5', nome: 'Lotes Conferidos' },\n    { id_tipo: '4', nome: 'Auditoria de estoque' },\n/*     { id_tipo: '3', nome: 'Estoque por lote' },\n    { id_tipo: '2', nome: 'Estoque de faturamento' }, */\n    { id_tipo: '1', nome: 'Materias em lote' }\n  ];\n\n  /* Config Table */\n  tableConfig: Partial<CustomTableConfig> = {\n    isFixed: true,\n  };\n\n  constructor(\n    private rotaAtiva: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private serviceAuditoria: SulFluminenseAuditoriaLotesService,\n    private pnotify: PNotifyService,\n    private router: Router,\n    private routerService: RouterService,\n    private activatedRoute: ActivatedRoute,\n    private xlsxService: XlsxService,\n    private atividadesService: AtividadesService,\n    private dateService: DateService\n  ) {\n    this.form = this.formBuilder.group({\n      relatorio: [null, [Validators.required]],\n      linhas: [null],\n      classes: [null],\n      materiais: [null],\n      CD_LINH: [null],\n      time: [new Date().getTime()]\n    });\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.onBreadCumbTree();\n    this.form.get('classes').disable();\n    this.form.get('materiais').disable();\n    this.getLinhas();\n    this.onActivatedRoute();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onActivatedRoute(): void {\n    this.$subscription = this.activatedRoute.queryParams.subscribe(\n      queryParams => {\n        if (Object.keys(queryParams).length > 0) {\n          let _response = this.routerService.getBase64UrlParams(queryParams);\n          this.form.patchValue(_response);\n          if(_response['relatorio'] == 5){\n            this.getLotesConferidos();\n            this.setValoresFormulario(this.getParams(_response));\n          } else{\n            this.getRelatorioAuditoriaLotes(this.getParams(_response));\n            this.setValoresFormulario(this.getParams(_response));\n          }\n        }\n      }\n    );\n    this.$subscription.unsubscribe();\n  }\n\n  setValoresFormulario(params: any): void {\n    let relatorio = params['relatorio'];\n    let linhas = params['linhas'];\n    let classes = parseInt(params['classes']);\n    let materiais = parseInt(params['materiais']);\n\n    if (relatorio) {\n      this.exibirFiltro = true;\n    }\n\n    this.form.get('relatorio').setValue(relatorio);\n    this.form.get('linhas').setValue(linhas);\n\n    if (linhas) {\n      this.serviceAuditoria\n        .getClasses(linhas)\n        .pipe(\n          finalize(() => {\n            this.form.patchValue({\n              classes: classes\n            });\n          })\n        )\n        .subscribe((res: any) => {\n          if (Object.keys(res).length > 0) {\n            this.classes = res['body'];\n            this.form.get('classes').enable();\n            this.setValorMaterial(linhas, classes, materiais);\n          }\n        });\n    } else {\n      this.form.get('classes').disable();\n    }\n  }\n\n  setValorMaterial(linhas: any, classes: any, materiais: any): void {\n    if (this.form.get('classes').status == 'VALID') {\n      this.serviceAuditoria\n        .getMateriais(linhas, classes)\n        .pipe(\n          finalize(() => {\n            this.form.patchValue({\n              materiais: materiais\n            });\n          })\n        )\n        .subscribe((res: any) => {\n          if (Object.keys(res).length > 0) {\n            this.materiais = res['body'].result;\n            this.form.get('materiais').enable();\n          }\n        });\n    } else {\n      this.form.get('materiais').disable();\n    }\n  }\n\n  onBreadCumbTree(): void {\n    this.rotaAtiva.params.subscribe((params: any) => {\n      this.idSubModulo = params['idSubModulo'];\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/sul-fluminense/home'\n        },\n        {\n          descricao: 'Estoque Avançado',\n          routerLink: `/sul-fluminense/estoque-avancado/${this.idSubModulo}`\n        },\n        {\n          descricao: 'Painel de auditoria Estoque Avançado'\n        }\n      ];\n    });\n  }\n\n  onFilter(): void {\n    this.exibirFiltro = true;\n    this.form.get('time').setValue(new Date().getTime());\n\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParam())\n    });\n\n    if(this.form.value['relatorio'] == 5){\n      this.getLotesConferidos();\n    } else\n    this.getRelatorioAuditoriaLotes(this.getParam());\n  }\n\n  getParams(params: any): any {\n    let relatorio = params['relatorio'];\n    let linhas = params['linhas'];\n    let classes = params['classes'];\n    let materiais = params['materiais'];\n\n    return {\n      relatorio: relatorio,\n      linhas: linhas,\n      classes: classes,\n      materiais: materiais\n    };\n  }\n\n  AtivaFiltro(): void {\n    this.exibirFiltro = !this.exibirFiltro;\n  }\n\n  getLinhas(): void {\n    this.carregandoNavBar = true;\n\n    this.serviceAuditoria\n      .getLinhas()\n      .pipe()\n      .subscribe((res: any) => {\n        if (Object.keys(res).length > 0) {\n          if (res.status == 200) {\n            this.carregandoNavBar = false;\n            this.linhas = res['body'];\n          } else if (res.status == 204) {\n            this.pnotify.notice('Não há dados');\n          }\n        } else {\n          this.pnotify.error('Erro ao carregar dados');\n        }\n      });\n  }\n\n  getClasses(): void {\n    this.classes = [];\n    this.carregandoNavBar = true;\n\n    if (this.form.get('linhas').value != undefined) {\n      if(this.form.value['relatorio'] != 5){\n        this.form.get('classes').setValidators([Validators.required]);\n        this.form.get('materiais').setValidators([Validators.required]);\n      }\n\n      let descricaoLinhas = this.form.get('linhas').value;\n      this.serviceAuditoria.getClasses(descricaoLinhas).subscribe(\n        (res: any) => {\n          if (Object.keys(res).length > 0) {\n            if (res.status == 200) {\n              this.carregandoNavBar = false;\n              this.classes = res['body'];\n            }\n            this.form.get('classes').reset();\n            this.form.get('classes').enable();\n          }\n        },\n        error => {\n          this.pnotify.error('Erro ao carregar filtro Classes');\n        }\n      );\n    } else {\n      this.form.get('classes').setValidators([Validators.nullValidator]);\n      this.form.get('materiais').setValidators([Validators.nullValidator]);\n      this.form.get('classes').reset();\n      this.form.get('materiais').reset();\n      this.form.get('classes').disable();\n      this.form.get('materiais').disable();\n    }\n  }\n\n  getMateriais(): void {\n    this.materiais = [];\n    this.carregandoNavBar = true;\n\n    if (\n      this.form.get('classes').value !== undefined &&\n      this.form.get('classes').status === 'VALID'\n    ) {\n      let descricaoLinhas = this.form.get('linhas').value;\n      let idClasses = this.form.get('classes').value;\n      this.serviceAuditoria.getMateriais(descricaoLinhas, idClasses).subscribe(\n        (response: any) => {\n          if (Object.keys(response).length > 0) {\n            if (response['body'].responseCode === 200) {\n              this.materiais = response['body'].result;\n              this.form.get('materiais').reset();\n              this.form.get('materiais').enable();\n            } else if (response['body'].responseCode === 204) {\n              this.materiais = [];\n              this.pnotify.notice(\n                'Não há materiais cadastrados para essa classe'\n              );\n            }\n          }\n          this.carregandoNavBar = false;\n        },\n        error => {\n          this.pnotify.error('Erro ao carregar filtro Materias');\n        }\n      );\n    } else {\n      this.form.get('materiais').reset();\n      this.form.get('materiais').disable();\n    }\n  }\n\n  getRelatorioAuditoriaLotes(params: any): void {\n    this.begin = 0;\n    this.end = 15;\n    this.id_tipo_tabela = params['relatorio'];\n    this.visualizaTabela = false;\n    this.carregando = true;\n    this.carregandoNavBar = false;\n\n    this.serviceAuditoria\n      .getRelatorioAuditoriaLotes(params)\n      .pipe(\n        finalize(() => {\n          this.carregando = false;\n        })\n      )\n      .subscribe(res => {\n        if (res['status'] == 200) {\n          this.visualizaTabela = true;\n          this.listaVazia = false;\n          this.listaAuditoria = res['body']['data'];\n          this.listaAuditoriaExcel = res['body']['data'];\n        } else if (res['status'] == 204) {\n          this.pnotify.notice('Não há dados a serem exibidos.');\n          this.listaVazia = true;\n        } else {\n          this.pnotify.error('Erro ao carregar dados');\n        }\n      });\n  }\n\n  setTooltip($event: any): void {\n    this.id_tipo = $event.id_tipo;\n  }\n\n  exportarExcel(): void {\n    /* Remove a coluna NF_EMISSAO_CLARION da lista */\n    this.listaAuditoriaExcel.forEach(\n      element => {\n        delete element['DATA_ENTRADA_CLARION'],\n        delete element['ID_CLASSE'],\n        delete element['ID_LINHA']\n      }\n    );\n\n    /* Chama o serviço para exportar dados em documento excel */\n    this.xlsxService.exportFile(this.listaAuditoriaExcel, 'relatório');\n  }\n\n  /* Ordenação */\n  sort(key: string): void {\n    this.key = key;\n    this.reverse = !this.reverse;\n  }\n  /* Ordenação */\n\n  /* Paginação */\n  onPageChanged(event: PageChangedEvent): void {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n  /* Paginação */\n\n  /* VALIDAÇÕES DO FILTRO */\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any): any {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string): any {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  getParam() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService\n            .convertToBrazilianDate(_obj[prop])\n            .substring(0, 10);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  getLotesConferidos(){\n    this.carregando = true;\n    this.id_tipo_tabela = this.form.value['relatorio']\n    this.serviceAuditoria\n    .getLotesConferidos(this.getParam())\n    .pipe(\n      finalize(() =>{\n        this.carregando = false;\n        this.visualizaTabela = true;\n      })\n    )\n    .subscribe(response => {\n      if (response.status === 204) {\n        this.pnotify.notice('Não há lotes conferidos.');\n      } else {\n        this.listaAuditoria = response.body['data'];\n        this.listaAuditoriaExcel = response.body['data'];\n      }\n    });\n  }\n\n  getReset(){\n    this.form.get('classes').setValidators([Validators.nullValidator]);\n    this.form.get('materiais').setValidators([Validators.nullValidator]);\n    this.form.get('linhas').reset();\n    this.form.get('classes').reset();\n    this.form.get('materiais').reset();\n    this.form.get('classes').disable();\n    this.form.get('materiais').disable();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SulFluminenseEstoqueAvancadoAuditoriaLotesComponent } from './auditoria-lotes.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SulFluminenseEstoqueAvancadoAuditoriaLotesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SulFluminenseEstoqueAvancadoAuditoriaLotesRoutingModule { }\n","import { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SulFluminenseAuditoriaLotesService {\n\n  private readonly BASE_URL = environment.API;\n\n  constructor(\n    private httpClient : HttpClient\n  ) { }\n\n  getLinhas(): Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/common/linhas`,{\n      observe: \"response\"\n    });\n  }\n\n  getClasses(descricaoLinhas): Observable<any> {\n    return this.httpClient.get(`${this.BASE_URL}/common/classes`, {\n      params: {\n        linhas: btoa(descricaoLinhas) \n      },\n      observe: \"response\" \n    });\n  }\n\n  getMateriais(descricaoLinhas, idClasses): Observable<any> {\n    if (!idClasses)\n      idClasses = \"\";\n\n    return this.httpClient.get(`${this.BASE_URL}/common/materiais`, {\n      params: {\n        linhas: btoa(descricaoLinhas),\n        classes: btoa(idClasses),\n        // tipo_material: \"Sul Fluminense\",\n        // situacao: \"A\"\n\n      },\n       observe: \"response\"\n    });\n  }\n\n  getRelatorioAuditoriaLotes(params): Observable<any> {\n    let tipoRelatorio = params[\"relatorio\"];\n    let material = params[\"materiais\"] ? params[\"materiais\"] : \"0\";\n\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/auditoria-estoque-avancado`,{\n      params: {\n        \"id_tipo\": tipoRelatorio,\n        \"id_material\": material\n      },\n      observe: \"response\"\n    });\n  }\n\n  getLotesConferidos(params) {\n    return this.httpClient.get(\n      `${this.BASE_URL}/abastecimento/relatorios/lotes-conferidos`,\n      {\n        params,\n        observe: \"response\"\n      }\n    );\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"carregando\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"carregandoNavBar\\\"></loader-spinner-navbar>\\n\\n<app-header appTitle=\\\"Painel de auditoria Estoque Avançado\\\">\\n  <button \\n    (click)=\\\"exportarExcel()\\\"\\n    [disabled]=\\\"!visualizaTabela\\\"\\n    >\\n    Exportar\\n  </button>\\n  <button \\n    (click)=\\\"onFilter()\\\"\\n    [disabled] = \\\"form.status == 'INVALID'\\\"\\n    >\\n    Filtrar\\n  </button>\\n</app-header>\\n\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!carregando\\\">\\n  <advanced-filter>\\n    <form id=\\\"form-sul-fluminense-auditoria-lotes\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label for=\\\"relatorio\\\">Tipo de Relatório</label>\\n          <!-- INICIO - Template do tooltip de tipo 4 -->\\n          <ng-template #tipo4>\\n            <div>\\n                <p class=\\\"text-justify\\\"> Visão aberta por lote, de todos os materiais da consulta de estoque do Faturamento:</p>\\n                <ul>\\n                  <li><p class=\\\"text-justify\\\">ESTOQUE CONSOLIDADO = Visão da consulta de estoque de Faturamento;</p></li>\\n                  <li><p class=\\\"text-justify\\\">ESTOQUE DETALHADO = Visão da consulta de estoque de Faturamento, aberta por lote;</p></li>\\n                  <li><p class=\\\"text-justify\\\">ESTOQUE AVANÇADO = Visão consolidada dos lotes disponíveis para conferência, do módulo de Estoque Avançado do sistema TID.</p></li>\\n                </ul>\\n            </div>\\n          </ng-template>\\n          <!-- FIM - Template do tooltip de tipo 4 -->\\n          <!-- INICIO - Tooltips -->             \\n          <i *ngIf = \\\"id_tipo == null\\\" \\n            class=\\\"far fa-question-circle hover ml-1\\\" \\n            tooltip=\\\"Selecione um tipo de relatório\\\" \\n            placement=\\\"auto\\\">\\n          </i>\\n          <i *ngIf = \\\"id_tipo == '1'\\\" \\n            class=\\\"far fa-question-circle hover ml-1\\\" \\n            tooltip=\\\"Visão de todos os lotes do sistema, disponíveis para conferência\\\"\\n            placement=\\\"auto\\\">\\n          </i>\\n          <i *ngIf = \\\"id_tipo == '2'\\\" \\n            class=\\\"far fa-question-circle hover ml-1\\\" \\n            tooltip=\\\"Cópia fiel da tela de consulta de estoques do faturamento, do sistema TID, na localização de estoque 'Sul Fluminense Avançado'\\\" \\n            placement=\\\"auto\\\">\\n          </i>\\n          <i *ngIf = \\\"id_tipo == '3'\\\" \\n            class=\\\"far fa-question-circle hover ml-1\\\" \\n            [tooltip]=\\\"tipo4\\\" \\n            placement=\\\"auto\\\">\\n          </i>\\n          <i *ngIf = \\\"id_tipo == '4'\\\" \\n            class=\\\"far fa-question-circle hover ml-1\\\" \\n            tooltip=\\\"Auditoria em relação as três visões de estoque no sistema TID. Todas as informações devem ser iguais, para serem consideradas corretas.\\\" \\n            placement=\\\"auto\\\">\\n          </i>\\n          <i *ngIf = \\\"id_tipo == '5'\\\" \\n            class=\\\"far fa-question-circle hover ml-1\\\" \\n            tooltip=\\\"Auditoria em relação as três visões de estoque no sistema TID. Todas as informações devem ser iguais, para serem consideradas corretas.\\\" \\n            placement=\\\"auto\\\">\\n          </i>\\n          <!-- FIM - Tooltips -->  \\n          <ng-select\\n            [searchable]=\\\"false\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"tipoRelatorios\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            [hideSelected]=\\\"true\\\"\\n            [closeOnSelect]=\\\"true\\\"\\n            labelForId=\\\"nome\\\"\\n            bindLabel=\\\"nome\\\"\\n            bindValue=\\\"id_tipo\\\"\\n            placeholder=\\\"Selecione tipo\\\"\\n            formControlName=\\\"relatorio\\\"\\n            (change) = \\\"setTooltip($event); getReset()\\\"\\n            [ngClass]=\\\"onFieldError('relatorio') + ' ' + onFieldRequired('relatorio')\\\"\\n          >\\n          </ng-select>\\n          <invalid-form-control\\n            [show]=\\\"onFieldInvalid('relatorio')\\\"\\n            message=\\\"Tipo de relatório é obrigatório.\\\">\\n          </invalid-form-control>\\n        </div>\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label for=\\\"linha\\\">Linha</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"linhas\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              [hideSelected]=\\\"true\\\"\\n              [closeOnSelect]=\\\"true\\\"\\n              placeholder=\\\"Selecione linha\\\"\\n              bindLabel=\\\"linha\\\"\\n              bindValue=\\\"linha\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              formControlName=\\\"linhas\\\"\\n              (change) = \\\"getClasses()\\\"\\n              [ngClass]=\\\"onFieldError('linhas') + ' ' + onFieldRequired('linhas')\\\"\\n            >\\n            </ng-select>\\n            <invalid-form-control\\n              [show]=\\\"onFieldInvalid('linhas')\\\"\\n              message=\\\"Linha é obrigatório.\\\">\\n            </invalid-form-control>\\n          </div>\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label for=\\\"classe\\\">Classe</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"classes\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            [hideSelected]=\\\"true\\\"\\n            [closeOnSelect]=\\\"true\\\"\\n            labelForId=\\\"classe\\\"\\n            bindLabel=\\\"classeDescricao\\\"\\n            bindValue=\\\"classeId\\\"\\n            placeholder=\\\"Selecione classe\\\"\\n            formControlName=\\\"classes\\\"\\n            (change) = \\\"getMateriais()\\\"\\n            [ngClass]=\\\"onFieldError('classes') + ' ' + onFieldRequired('classes')\\\"\\n          >\\n          </ng-select>\\n          <invalid-form-control\\n            [show]=\\\"onFieldInvalid('classes')\\\"\\n            message=\\\"Classes é obrigatório.\\\">\\n          </invalid-form-control>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"material\\\">Material</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"materiais\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              [hideSelected]=\\\"true\\\"\\n              [closeOnSelect]=\\\"true\\\"\\n              labelForId=\\\"material\\\"\\n              bindLabel=\\\"codigoDescricaoMaterial\\\"\\n              bindValue=\\\"codigoMaterial\\\"\\n              placeholder=\\\"Selecione material\\\"\\n              formControlName=\\\"materiais\\\"\\n              [ngClass]=\\\"onFieldError('materiais') + ' ' + onFieldRequired('materiais')\\\"\\n            >\\n            </ng-select>\\n            <invalid-form-control\\n              [show]=\\\"onFieldInvalid('materiais')\\\"\\n              message=\\\"Materiais é obrigatório.\\\">\\n            </invalid-form-control>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"col-12 p-0\\\">\\n    <div *ngIf=\\\"listaVazia && !carregando\\\"class=\\\"text-center p-5\\\" style=\\\"height: 80%\\\">\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n    </div>\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"!carregando && visualizaTabela && id_tipo_tabela == '1'\\\">\\n      <custom-table>\\n        <ng-template #thead let-thead>\\n          <tr class=\\\"text-center\\\">\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_MATERIAL')\\\">Cód. Material\\n              <span *ngIf=\\\"key == 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_MATERIAL')\\\">Material\\n              <span *ngIf=\\\"key == 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_LINHA')\\\">Linha\\n              <span *ngIf=\\\"key == 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_CLASSE')\\\">Cód. Classe\\n              <span *ngIf=\\\"key == 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_CLASSE')\\\">Classe\\n              <span *ngIf=\\\"key == 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('LOTE')\\\">Lote\\n              <span *ngIf=\\\"key == 'LOTE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'LOTE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('QUANTIDADE')\\\">Qtde\\n              <span *ngIf=\\\"key == 'QUANTIDADE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'QUANTIDADE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DATA_ENTRADA_CLARION')\\\">Dt. Entrada\\n              <span *ngIf=\\\"key == 'DATA_ENTRADA_CLARION'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DATA_ENTRADA_CLARION'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of listaAuditoria | orderBy: key : reverse | slice: begin : end; let i = index\\\">\\n            <td class=\\\"text-center\\\">{{item.CODIGO_MATERIAL | number: '0.0-0'}}</td>\\n            <td>{{item.DESCRICAO_MATERIAL}}</td>\\n            <td>{{item.DESCRICAO_LINHA}}</td>\\n            <td class=\\\"text-center\\\">{{item.CODIGO_CLASSE | number: '0.0-0'}}</td>\\n            <td>{{item.DESCRICAO_CLASSE}}</td>\\n            <td class=\\\"text-center\\\">{{item.LOTE}}</td>\\n            <td class=\\\"text-right\\\">{{item.QUANTIDADE | number: '0.3-3'}}</td>\\n            <td class=\\\"text-center\\\">{{item.DATA_ENTRADA}}</td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"!carregando && visualizaTabela && id_tipo_tabela == '2'\\\">\\n      <custom-table>\\n        <ng-template #thead let-thead>\\n          <tr class=\\\"text-center\\\">\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_MATERIAL')\\\">Cód. Material\\n              <span *ngIf=\\\"key == 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_MATERIAL')\\\">Material\\n              <span *ngIf=\\\"key == 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_LINHA')\\\">Linha\\n              <span *ngIf=\\\"key == 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_CLASSE')\\\">Cód. Classe\\n              <span *ngIf=\\\"key == 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_CLASSE')\\\">Classe\\n              <span *ngIf=\\\"key == 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('ESTOQUE_CONSOLIDADO')\\\">Estoque Consolidado\\n              <span *ngIf=\\\"key == 'ESTOQUE_CONSOLIDADO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'ESTOQUE_CONSOLIDADO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of listaAuditoria | orderBy: key : reverse | slice: begin : end\\\">\\n            <td class=\\\"text-center\\\">{{item.CODIGO_MATERIAL | number: '0.0-0'}}</td>\\n            <td>{{item.DESCRICAO_MATERIAL}}</td>\\n            <td>{{item.DESCRICAO_LINHA}}</td>\\n            <td class=\\\"text-center\\\">{{item.CODIGO_CLASSE | number: '0.0-0'}}</td>\\n            <td>{{item.DESCRICAO_CLASSE}}</td>\\n            <td class=\\\"text-right\\\">{{item.ESTOQUE_CONSOLIDADO | number: '0.3-3'}}</td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"!carregando && visualizaTabela && id_tipo_tabela == '3'\\\">\\n      <custom-table>\\n        <ng-template #thead let-thead>\\n          <tr class=\\\"text-center\\\">\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_MATERIAL')\\\">Cód. Material\\n              <span *ngIf=\\\"key == 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_MATERIAL')\\\">Material\\n              <span *ngIf=\\\"key == 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_LINHA')\\\">Linha\\n              <span *ngIf=\\\"key == 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_CLASSE')\\\">Cód. Classe\\n              <span *ngIf=\\\"key == 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_CLASSE')\\\">Classe\\n              <span *ngIf=\\\"key == 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('LOTE')\\\">Lote\\n              <span *ngIf=\\\"key == 'LOTE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'LOTE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('QUANTIDADE')\\\">Qtde\\n              <span *ngIf=\\\"key == 'QUANTIDADE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'QUANTIDADE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of listaAuditoria | orderBy: key : reverse | slice: begin : end\\\">\\n            <td class=\\\"text-center\\\">{{item.CODIGO_MATERIAL | number: '0.0-0'}}</td>\\n            <td>{{item.DESCRICAO_MATERIAL}}</td>\\n            <td>{{item.DESCRICAO_LINHA}}</td>\\n            <td class=\\\"text-center\\\">{{item.CODIGO_CLASSE | number: '0.0-0'}}</td>\\n            <td>{{item.DESCRICAO_CLASSE}}</td>\\n            <td class=\\\"text-center\\\">{{item.LOTE}}</td>\\n            <td class=\\\"text-right\\\">{{item.QUANTIDADE | number: '0.3-3'}}</td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"!carregando && visualizaTabela && id_tipo_tabela == '4'\\\">\\n      <custom-table>\\n        <ng-template #thead let-thead>\\n          <tr class=\\\"text-center\\\">\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_MATERIAL')\\\">Cód. Material\\n              <span *ngIf=\\\"key == 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'CODIGO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_MATERIAL')\\\">Material\\n              <span *ngIf=\\\"key == 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_LINHA')\\\">Linha\\n              <span *ngIf=\\\"key == 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO_LINHA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('CODIGO_CLASSE')\\\">Cód. Classe\\n              <span *ngIf=\\\"key == 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'CODIGO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('DESCRICAO_CLASSE')\\\">Classe\\n              <span *ngIf=\\\"key == 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO_CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('ESTOQUE_CONSOLIDADO')\\\">Estoque Consolidado\\n              <span *ngIf=\\\"key == 'ESTOQUE_CONSOLIDADO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'ESTOQUE_CONSOLIDADO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('ESTOQUE_DETALHADO')\\\">Estoque Detalhado\\n              <span *ngIf=\\\"key == 'ESTOQUE_DETALHADO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'ESTOQUE_DETALHADO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover\\\" (click)=\\\"sort('ESTOQUE_AVANCADO')\\\">Estoque Avançado\\n              <span *ngIf=\\\"key == 'ESTOQUE_AVANCADO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'ESTOQUE_AVANCADO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of listaAuditoria | orderBy: key : reverse | slice: begin : end\\\">\\n            <td class=\\\"text-center\\\">{{item.CODIGO_MATERIAL | number: '0.0-0'}}</td>\\n            <td>{{item.DESCRICAO_MATERIAL}}</td>\\n            <td>{{item.DESCRICAO_LINHA}}</td>\\n            <td class=\\\"text-center\\\">{{item.CODIGO_CLASSE | number: '0.0-0'}}</td>\\n            <td>{{item.DESCRICAO_CLASSE}}</td>\\n            <td class=\\\"text-right\\\">{{item.ESTOQUE_CONSOLIDADO | number: '0.3-3'}}</td>\\n            <td class=\\\"text-right\\\">{{item.ESTOQUE_DETALHADO | number: '0.3-3'}}</td>\\n            <td class=\\\"text-right\\\">{{item.ESTOQUE_AVANCADO | number: '0.3-3'}}</td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"!carregando && visualizaTabela && id_tipo_tabela == '5'\\\">\\n      <custom-table>\\n        <ng-template #thead let-thead>\\n          <tr class=\\\"text-center\\\">\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('SITUACAO')\\\">Situação\\n              <span *ngIf=\\\"key == 'SITUACAO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'SITUACAO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('SIGLA_FORNEC')\\\">Sigla Fornecedor\\n              <span *ngIf=\\\"key == 'SIGLA_FORNEC'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'SIGLA_FORNEC'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('CD_MATERIAL')\\\">Cód. Material\\n              <span *ngIf=\\\"key == 'CD_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'CD_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('DESCRICAO')\\\">Material\\n              <span *ngIf=\\\"key == 'DESCRICAO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DESCRICAO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('LINHA')\\\">Linha\\n              <span *ngIf=\\\"key == 'LINHA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'LINHA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('CLASSE')\\\">Classe\\n              <span *ngIf=\\\"key == 'CLASSE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'CLASSE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('UNIDADE')\\\">Uni. Medida\\n              <span *ngIf=\\\"key == 'UNIDADE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'UNIDADE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('LOTE_MATERIAL')\\\">Num. Lote\\n              <span *ngIf=\\\"key == 'LOTE_MATERIAL'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'LOTE_MATERIAL'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('QUANTIDADE')\\\">Quantidade\\n              <span *ngIf=\\\"key == 'QUANTIDADE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'QUANTIDADE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('DT_ENTRADA')\\\">Data Entrada\\n              <span *ngIf=\\\"key == 'DT_ENTRADA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DT_ENTRADA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('DATA_CONF')\\\">Data Conferência\\n              <span *ngIf=\\\"key == 'DATA_CONF'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DATA_CONF'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('HORA_CONFE')\\\">Hora Conferência\\n              <span *ngIf=\\\"key == 'HORA_CONFE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'HORA_CONFE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('USER_CONFE')\\\">Usuário Conferência\\n              <span *ngIf=\\\"key == 'USER_CONFE'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'USER_CONFE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('DATA_RETORNO')\\\">Data Retorno\\n              <span *ngIf=\\\"key == 'DATA_RETORNO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DATA_RETORNO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('HORA_RETORNO')\\\">Hora Retorno\\n              <span *ngIf=\\\"key == 'HORA_RETORNO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'HORA_RETORNO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('USER_RETORNO')\\\">Usuário Retorno\\n              <span *ngIf=\\\"key == 'USER_RETORNO'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'USER_RETORNO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('DATA_BAIXA')\\\">Data Baixa\\n              <span *ngIf=\\\"key == 'DATA_BAIXA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'DATA_BAIXA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('HORA_BAIXA')\\\">Hora Baixa\\n              <span *ngIf=\\\"key == 'HORA_BAIXA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'HORA_BAIXA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('USER_BAIXA')\\\">Usuário Baixa\\n              <span *ngIf=\\\"key == 'USER_BAIXA'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'USER_BAIXA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('NR_PEDIDO_TRANSF')\\\">Num. Tranferência\\n              <span *ngIf=\\\"key == 'NR_PEDIDO_TRANSF'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'NR_PEDIDO_TRANSF'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n            <th class=\\\"hover text-nowrap\\\" (click)=\\\"sort('NR_PEDIDO_NF')\\\">Num. Pedido\\n              <span *ngIf=\\\"key == 'NR_PEDIDO_NF'\\\"><i [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\n              <span *ngIf=\\\"key != 'NR_PEDIDO_NF'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\n            </th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of listaAuditoria | orderBy: key : reverse | slice: begin : end\\\">\\n            <td class=\\\"text-center text-nowrap\\\">{{item.SITUACAO}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.SIGLA_FORNEC}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.CD_MATERIAL | number: '0.0-0'}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.DESCRICAO}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.LINHA}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.CLASSE}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.UNIDADE}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.LOTE_MATERIAL}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.QUANTIDADE | number: '0.3-3'}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.DT_ENTRADA}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.DATA_CONF}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.HORA_CONFE}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.USER_CONFE}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.DATA_RETORNO}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.HORA_RETORNO}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.USER_RETORNO}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.DATA_BAIXA}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.HORA_BAIXA}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.USER_BAIXA}}</td>            \\n            <td class=\\\"text-center text-nowrap\\\">{{item.NR_PEDIDO_NF}}</td>\\n            <td class=\\\"text-center text-nowrap\\\">{{item.NR_PEDIDO_TRANSF}}</td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n    <div class=\\\"mt-3\\\" *ngIf=\\\"this.listaAuditoria?.length > 15 && !carregando && !listaVazia\\\">\\n      Exibindo {{ begin + 1 }} a {{ end }} de {{ this.listaAuditoria?.length }}\\n      <div class=\\\"d-flex\\\">\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"this.listaAuditoria?.length\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n\\n</app-body>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { OrderModule } from 'ngx-order-pipe';\nimport { TooltipModule, PaginationModule, BsDatepickerModule } from 'ngx-bootstrap';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\n\nimport { SulFluminenseEstoqueAvancadoAuditoriaLotesRoutingModule } from './auditoria-lotes-routing.module';\nimport { SulFluminenseEstoqueAvancadoAuditoriaLotesComponent } from './auditoria-lotes.component';\n\n\n@NgModule({\n  declarations: [\n    SulFluminenseEstoqueAvancadoAuditoriaLotesComponent\n  ],\n  imports: [\n    CommonModule,\n    SulFluminenseEstoqueAvancadoAuditoriaLotesRoutingModule,\n    NotFoundModule,\n    OrderModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    TooltipModule.forRoot(),\n    PaginationModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,\n    TemplatesModule\n  ]\n})\nexport class SulFluminenseEstoqueAvancadoAuditoriaLotesModule { }\n"]}