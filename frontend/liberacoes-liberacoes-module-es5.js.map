{"version":3,"sources":["webpack:///src/app/modules/comercial/gestao/liberacoes/liberacoes-routing.module.ts","webpack:///src/app/modules/comercial/gestao/liberacoes/detalhes/detalhes.component.ts","webpack:///src/app/modules/comercial/gestao/liberacoes/detalhes/detalhes.component.scss","webpack:///src/app/modules/comercial/services/vendedores.service.ts","webpack:///src/app/modules/comercial/gestao/liberacoes/lista/lista.component.scss","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/gestao/liberacoes/liberacoes.module.ts","webpack:///src/app/modules/comercial/gestao/liberacoes/lista/lista.component.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/gestao/liberacoes/lista/lista.component.html","webpack:///src/app/modules/comercial/gestao/liberacoes/detalhes/detalhes-resolver.guard.ts","webpack:///src/app/modules/comercial/gestao/liberacoes/services/liberacoes.service.ts","webpack:///src/app/modules/comercial/gestao/liberacoes/detalhes/detalhes.component.html"],"names":["routes","path","component","resolve","detalhes","redirectTo","pathMatch","ComercialGestaoLiberacoesModuleRoutingModule","imports","forChild","exports","ComercialGestaoLiberacoesDetalhesComponent","formBuilder","location","pnotify","router","liberacoesService","activatedRoute","modalService","contatosService","clientesService","confirmModalService","titleService","atividadesService","dateService","pnotifyService","noContato","noDetalhes","breadCrumbTree","formData","_materiaisSemEstoqueEmpty","profile","viewDetailsSolicitante","showPermissionDenied","loaderFullScreen","loadingNavBar","MASKS","registrarAcesso","onActivatedRoute","setBreadCrumb","getPerfil","setFormBuilder","subscribe","_params","snapshot","params","hasOwnProperty","getSolicitacoes","nrPedido","empresa","id","idSubModulo","appTitle","setTitle","descricao","routerLink","form","group","descObs","minLength","required","excluiPedido","getDetalhes","pipe","next","response","success","solicitacao","data","materiaisSemEstoqueEmpty","noResult","totais","comentario","controls","setValue","updateValueAndValidity","error","loadingDetalhes","cliente","getPermissoesAcesso","materiaisSemEstoque","length","template","modalRef","show","animated","backdrop","hide","exclui","value","codEmpresa","stat","confirmChange","asObservable","result","loaderNavbar","aprovaLiberacao","setParams","navigate","relativeTo","reprovaLiberacao","showConfirm","back","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","variacaoPreco","variacaoClass","valor","selector","ComercialVendedoresService","http","API","API_CADASTROS","codCliente","id_vendedor","id_sucursal","providedIn","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","currentDate","startOfWeek","setDate","setHours","endOfWeek","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","ComercialGestaoLiberacoesModule","declarations","forRoot","providers","provide","useValue","ComercialGestaoLiberacoesListaComponent","localeService","formularioService","cotacoesService","vendedoresService","escritoriosService","xlsxService","routerService","detailPanelService","permissoesAcesso","acessoClientes","historicoExclusao","duplicataCarteira","showDetailPanel","orderBy","orderType","loadingDetails","loadingModal","codClientErrors","empresas","clientes","linhas","vendedores","vendedoresTotal","escritorios","filteredVendedores","totalItens","dadosLoaded","dadosEmpty","dadosEmptyDetalhes","dadosPagination","contato","solicitante","tableConfig","subtitleBorder","subtitles","text","color","itemsPerPage","currentPage","getPNotify","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getFilterValues","setFormFilter","onDetailPanelEmitter","setSolicitacaoSelecionada","loadingFilterValues","showDetailPanelSubscription","unsubscribe","config","event","showing","formValue","checkRouterParams","idAprovacao","tipoData","dtInicial","getFirstDayMonth","dtFinal","getLastDayMonth","numPedido","nomeSolicitante","gerenciaSolicitante","codSituacao","linhaPredominante","pagina","registros","checkValuesGerente","checkOrder","activatedRouteSubscription","queryParams","keys","atob","q","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","solicitacaoSelecionada","nomeVendedor","matrVendedor","gerenciaVendedor","idMotivoSolic","descMotivoSolic","dataLancamento","statusItem","dtSolic","descSolic","codCli","razaoSocialCli","cnpjCli","dtAprov","matrUsuarioCad","dtPedido","nfPedido","formaPagtoPedido","enderecoPedido","depositoPedido","empresaPedido","situaPedido","valorPedido","pesoPedido","descUsuarioCad","dtInclusao","column","onFilter","valid","setRouterParams","verificaParams","tipoDataControl","btoa","stringify","convertDate","dados","slice","totalItems","mensagem","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","motivos","loadedFinished","getMotivosTrava","setTimeout","lista","getCotacaoFilterValues","responseCode","enable","loadDependencies","getVendedores","unshift","nome","getEscritorios","codEscritorio","nomeEscritorio","disable","reset","filter","idEscritorio","onChangeVendedores","onChangeEscritorio","tipo","setValidators","clearValidators","patchValue","PAGI","TT_REGI_PAGI","hideModal","borderClass","toLocaleDateString","dataExport","listagemExport","concat","exportFile","ComercialService","httpParams","param","append","ComercialLiberacoesDetalhesResolverGuard","route","ComercialGestaoLiberacoesService","liberacao","post","observe"],"mappings":"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","file":"liberacoes-liberacoes-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { ComercialLiberacoesDetalhesResolverGuard } from './detalhes/detalhes-resolver.guard';\r\n\r\n//components\r\nimport { ComercialGestaoLiberacoesListaComponent } from './lista/lista.component';\r\nimport { ComercialGestaoLiberacoesDetalhesComponent } from './detalhes/detalhes.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialGestaoLiberacoesListaComponent,\r\n  },\r\n  {\r\n    path: 'detalhes/:id/:empresa',\r\n    component: ComercialGestaoLiberacoesDetalhesComponent,\r\n    resolve: {\r\n      detalhes: ComercialLiberacoesDetalhesResolverGuard,\r\n    },\r\n  },\r\n\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialGestaoLiberacoesModuleRoutingModule {}\r\n","import { DateService } from './../../../../../shared/services/core/date.service';\r\nimport { IContato } from './../../../../servicos/contatos/models/contato';\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { ContatoService } from './../../../../servicos/contatos/services/contato.service';\r\nimport { ComercialGestaoLiberacoesService } from './../services/liberacoes.service';\r\nimport { finalize, switchMap, take } from 'rxjs/operators';\r\nimport { IComercialGestaoLiberacoes } from './../models/liberacoes';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\n\r\nimport { Location } from '@angular/common';\r\n//rxjs\r\nimport { EMPTY, Subscription } from 'rxjs';\r\nimport { MASKS } from 'ng-brazil';\r\n\r\n@Component({\r\n  selector: 'comercial-gestao-liberacoes-detalhes',\r\n  templateUrl: './detalhes.component.html',\r\n  styleUrls: ['./detalhes.component.scss'],\r\n})\r\nexport class ComercialGestaoLiberacoesDetalhesComponent implements OnInit {\r\n  noResult: boolean;\r\n  noContato = true;\r\n  noDetalhes = true;\r\n  activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  cliente: any;\r\n  solicitacao: any;\r\n  _materiaisSemEstoqueEmpty = false;\r\n  profile: any = [];\r\n  viewDetailsSolicitante = 1;\r\n  showPermissionDenied = false;\r\n  //loading\r\n  loaderFullScreen = false;\r\n  loadingNavBar = false;\r\n  loaderNavbar;\r\n  loadingDetalhes: boolean;\r\n\r\n  // loadingMoeda: boolean;\r\n  contato: IContato;\r\n\r\n  //Interfaces\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private location: Location,\r\n    private pnotify: PNotifyService,\r\n    private router: Router,\r\n    private liberacoesService: ComercialGestaoLiberacoesService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private modalService: BsModalService,\r\n    private contatosService: ContatoService,\r\n    private clientesService: ComercialClientesService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n    private dateService: DateService,\r\n    private pnotifyService: PNotifyService\r\n  ) {}\r\n\r\n  public MASKS = MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.onActivatedRoute();\r\n    this.setBreadCrumb();\r\n    this.getPerfil();\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    /* const _data = this.activatedRoute.snapshot.data.detalhes.data['0']; */\r\n    /* this.solicitacao = this.activatedRoute.snapshot.data.detalhes.data['0']; */\r\n\r\n    if (!_params.hasOwnProperty('id')) return this.getSolicitacoes();\r\n    this.getSolicitacoes({\r\n      nrPedido: _params['id'],\r\n      empresa: _params['empresa'],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Detalhes';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home',\r\n      },\r\n      {\r\n        descricao: 'Gestão',\r\n        routerLink: `/comercial/gestao/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Liberações Comerciais',\r\n        routerLink: `/comercial/gestao/${id}/liberacoes/lista`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  detailsSolicitante(params?) {\r\n    if (this.viewDetailsSolicitante == 1) {\r\n      this.viewDetailsSolicitante = 0;\r\n    } else {\r\n      this.viewDetailsSolicitante = 1;\r\n    }\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      descObs: [null, [Validators.minLength(3), Validators.required]],\r\n      excluiPedido: null,\r\n    });\r\n  }\r\n\r\n  getSolicitacoes(params?) {\r\n    this.loaderFullScreen = true;\r\n\r\n    this.liberacoesService\r\n      .getDetalhes(params.nrPedido, params.empresa)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success == true) {\r\n            this.solicitacao = response.data['0'];\r\n            this.materiaisSemEstoqueEmpty();\r\n            this.noResult = false;\r\n            if (this.solicitacao.totais[0].comentario != '') {\r\n              this.form.controls.descObs.setValue(\r\n                this.solicitacao.totais[0].comentario\r\n              );\r\n              this.form.controls.descObs.updateValueAndValidity();\r\n            }\r\n          } else {\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  getDetalhes() {\r\n    const _params = this.solicitacao;\r\n    this.noDetalhes = true;\r\n    this.loadingDetalhes = true;\r\n\r\n    this.clientesService\r\n      .getDetalhes(_params['codCliente'])\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingDetalhes = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success == true) {\r\n            this.cliente = response.data;\r\n            this.noDetalhes = false;\r\n          } else {\r\n            this.noDetalhes = true;\r\n            this.cliente = [];\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.noDetalhes = true;\r\n          this.pnotify.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  getPerfil() {\r\n    this.liberacoesService\r\n      .getPermissoesAcesso()\r\n\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success === true) {\r\n            this.profile = response.data;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.showPermissionDenied = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  materiaisSemEstoqueEmpty() {\r\n    if (this.solicitacao.materiaisSemEstoque.length == 0) {\r\n      this._materiaisSemEstoqueEmpty = true;\r\n    } else {\r\n      this._materiaisSemEstoqueEmpty = false;\r\n    }\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.getDetalhes();\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-lg',\r\n      backdrop: 'static',\r\n    });\r\n  }\r\n  hideModal() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  setParams(solicitacao): Object {\r\n    let params: any = {};\r\n\r\n    let exclui;\r\n\r\n    if (this.form.value.excluiPedido == true) {\r\n      exclui = 1;\r\n    } else {\r\n      exclui = 0;\r\n    }\r\n\r\n    params.descObs = this.form.value.descObs;\r\n    params.excluiPedido = exclui;\r\n    params.empresa = solicitacao.codEmpresa;\r\n    params.nrPedido = solicitacao.nrPedido;\r\n\r\n    return params;\r\n  }\r\n\r\n  requestSuccess(solicitacao: any) {\r\n    const stat = 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loaderNavbar = true;\r\n\r\n          return this.liberacoesService.aprovaLiberacao(\r\n            this.setParams(solicitacao)\r\n          );\r\n        }),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n          this.router.navigate(['/comercial/gestao/${id}/liberacoes/lista'], {\r\n            relativeTo: this.activatedRoute,\r\n          });\r\n        },\r\n        (error: any) => {\r\n          this.pnotify.error('Erro ao aprovar a solicitação');\r\n        }\r\n      );\r\n  }\r\n\r\n  requestFail(solicitacao: any) {\r\n    const stat = 2;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loaderNavbar = true;\r\n          return this.liberacoesService.reprovaLiberacao(\r\n            this.setParams(solicitacao)\r\n          );\r\n        }),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n          this.router.navigate(['/comercial/gestao/${id}/liberacoes/lista'], {\r\n            relativeTo: this.activatedRoute,\r\n          });\r\n        },\r\n        (error: any) => {\r\n          this.pnotify.error('Erro ao reprovar a solicitação');\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        'Confirmar Aprovação',\r\n        'Deseja realmente aprovar a solicitação?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      'Confirmar Reprovação',\r\n      'Deseja realmente reprovar a solicitação?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onVoltar(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  classVariacaoPreco(variacaoPreco: number): string {\r\n    let variacaoClass: string;\r\n\r\n    if (variacaoPreco > 0) {\r\n      variacaoClass = 'fas fa-caret-up text-success';\r\n    } else if (variacaoPreco < 0) {\r\n      variacaoClass = 'fas fa-caret-down text-danger';\r\n    }\r\n\r\n    return variacaoClass;\r\n  }\r\n\r\n  formatVariacaoPreco(variacaoPreco: number): string {\r\n    let valor: string;\r\n\r\n    if (variacaoPreco > 0) {\r\n      valor = `+${variacaoPreco}%`;\r\n    } else if (variacaoPreco < 0) {\r\n      valor = `${variacaoPreco}%`;\r\n    }\r\n\r\n    return valor;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby9saWJlcmFjb2VzL2RldGFsaGVzL2RldGFsaGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialVendedoresService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/vendedor`;\r\n  private readonly API_CADASTROS = `http://23.254.204.187/api/comercial/cadastros`;\r\n\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getDetalhesCadastro() {\r\n    return this.http\r\n      .get(`${this.API}/detalhes-cadastro`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedores() {\r\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedoresSucursal(id: number) {\r\n    return this.http\r\n      .get(`${this.API}/sucursal-vendedor/${id}`)\r\n  }\r\n\r\n  getGestiones() {\r\n    return this.http.get(`${this.API_CADASTROS}/titulos-agenda/lista?codSituacao=1`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/carteira-clientes`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCarteiraClientesCotizacion(params?): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/carteira-clientes-cotizacion`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getValidaClienteCarteira(\r\n    codCliente: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVinculoOperadores() {\r\n    return this.http\r\n      .get(`${this.API}/vinculo-operadores`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getDetalleVendedor(params) {\r\n  return this.http\r\n      .get(`${this.API}/detalles_vendedor`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getRubros(){\r\n    return this.http\r\n      .get(`${this.API}/rubros`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedorSucursal(id_vendedor: number): Observable<Object | JsonResponse>\r\n  {\r\n      return this.http\r\n        .get(`${this.API}/datosvendedor/${id_vendedor}`)\r\n        .pipe(take(1), retry(2));\r\n  }\r\n  \r\n  getSucursalVendedor(id_sucursal: number): Observable<Object | JsonResponse>\r\n  {\r\n      return this.http\r\n        .get(`${this.API_CADASTROS}/datossucursal/${id_sucursal}`)\r\n        .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby9saWJlcmFjb2VzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport ptBr from '@angular/common/locales/pt';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nregisterLocaleData(ptBr);\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialGestaoLiberacoesListaComponent } from './lista/lista.component';\r\nimport { ComercialGestaoLiberacoesModuleRoutingModule } from './liberacoes-routing.module';\r\nimport { ComercialGestaoLiberacoesDetalhesComponent } from './detalhes/detalhes.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialGestaoLiberacoesListaComponent,\r\n    ComercialGestaoLiberacoesDetalhesComponent,\r\n  ],\r\n  imports: [\r\n    ComercialGestaoLiberacoesModuleRoutingModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    NgBrazil,\r\n    TextMaskModule,\r\n    CurrencyMaskModule,\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\r\n})\r\nexport class ComercialGestaoLiberacoesModule {}\r\n","import { object, string } from '@amcharts/amcharts4/core';\r\nimport { IContato } from './../../../../servicos/contatos/models/contato';\r\nimport { ContatoService } from './../../../../servicos/contatos/services/contato.service';\r\n//angular\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialGestaoLiberacoesService } from '../services/liberacoes.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ComercialCicloVendasCotacoesFormularioService } from '../../../ciclo-vendas/cotacoes/formulario/formulario.service';\r\nimport { ComercialCicloVendasCotacoesService } from '../../../ciclo-vendas/cotacoes/cotacoes.service';\r\nimport { ComercialVendedoresService } from '../../../services/vendedores.service';\r\nimport { EscritoriosService } from 'src/app/shared/services/requests/escritorios.service';\r\nimport { ComercialClientesService } from '../../../services/clientes.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n//Interfaces\r\nimport { IComercialGestaoLiberacoes } from './../models/liberacoes';\r\nimport { IPermissoesAcessoModel } from '../../../ciclo-vendas/cotacoes/formulario/models/permissoes-acesso';\r\nimport { isValid } from 'date-fns';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\n\r\n@Component({\r\n  selector: 'comercial-gestao-liberacoes-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n  //changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ComercialGestaoLiberacoesListaComponent\r\n  implements OnInit, OnDestroy\r\n{\r\n  permissoesAcesso: IPermissoesAcessoModel = {\r\n    acessoClientes: false,\r\n    historicoExclusao: false,\r\n    duplicataCarteira: false,\r\n  };\r\n\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  formModal: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  $activatedRouteSubscription: Subscription;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  orderBy = 'nrPedido';\r\n  orderType = 'ASC';\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  //LOADINGS\r\n\r\n  loadingDetails = false;\r\n  loaderNavbar = false;\r\n  loadingModal = false;\r\n  loaderFullScreen = false;\r\n\r\n  //VARIAVEIS\r\n\r\n  codClienteSubscription: Subscription;\r\n  codClientErrors = false;\r\n  isCarteiraClientesLoaded: boolean;\r\n\r\n  empresas: Array<any> = [];\r\n  clientes: Array<any> = [];\r\n  linhas: Array<any> = [];\r\n  vendedores: Array<any> = [];\r\n  vendedoresTotal: Array<any> = [];\r\n  escritorios: Array<any> = [];\r\n  motivos: any;\r\n  comentario: any;\r\n\r\n  tipoDataControl: number;\r\n\r\n  filteredVendedores: Array<any> = [];\r\n\r\n  showPermissionDenied = false;\r\n\r\n  totalItens: any = [];\r\n\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n  dadosEmptyDetalhes = false;\r\n\r\n  dados: Array<IComercialGestaoLiberacoes>;\r\n  dadosPagination: Array<any> = [];\r\n  solicitacaoSelecionada: any;\r\n  detalhes: any = [];\r\n  profile: any = [];\r\n\r\n  contato: IContato[] = [];\r\n\r\n  viewHistorico: boolean;\r\n  solicitante: any = [];\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Analisar',\r\n      color: 'blue',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Reprovado',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems: number;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private atividadesService: AtividadesService,\r\n    private pnotify: PNotifyService,\r\n    private localeService: BsLocaleService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private liberacoesService: ComercialGestaoLiberacoesService,\r\n    private formBuilder: FormBuilder,\r\n    private contatosService: ContatoService,\r\n    private titleService: TitleService,\r\n    private formularioService: ComercialCicloVendasCotacoesFormularioService,\r\n    private location: Location,\r\n    private cotacoesService: ComercialCicloVendasCotacoesService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private escritoriosService: EscritoriosService,\r\n    private clientesService: ComercialClientesService,\r\n    // private motivosService: LogisticaEntradaMateriaisMotivosService,\r\n    private xlsxService: XlsxService,\r\n    private modalService: BsModalService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService,\r\n    private detailPanelService: DetailPanelService,\r\n    private pnotifyService: PNotifyService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFilterValues();\r\n    this.setFormFilter();\r\n    //this.setFormBuilder();\r\n    this.getPerfil();\r\n    this.titleService.setTitle('Liberações Comerciais');\r\n    this.onDetailPanelEmitter();\r\n    this.setSolicitacaoSelecionada();\r\n    this.loadingFilterValues();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: `/comercial/home`,\r\n        },\r\n        {\r\n          descricao: 'Gestão',\r\n          routerLink: `/comercial/gestao/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Liberações Comerciais',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter() {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      idAprovacao: [formValue.idAprovacao],\r\n      tipoData: [formValue.tipoData, [Validators.required]],\r\n      dtInicial: [\r\n        formValue.dtInicial\r\n          ? formValue.dtInicial\r\n          : this.dateService.getFirstDayMonth(),\r\n        [Validators.required],\r\n      ],\r\n      dtFinal: [\r\n        formValue.dtFinal\r\n          ? formValue.dtFinal\r\n          : this.dateService.getLastDayMonth(),\r\n        [Validators.required],\r\n      ],\r\n      numPedido: [formValue.numPedido],\r\n      nomeSolicitante: [formValue.nomeSolicitante],\r\n      gerenciaSolicitante: [formValue.gerenciaSolicitante],\r\n      empresa: [formValue.empresa, [Validators.required]],\r\n      codSituacao: [formValue.codSituacao],\r\n      cliente: [formValue.cliente],\r\n      linhaPredominante: [formValue.linhaPredominante],\r\n      descObs: [formValue.descObs],\r\n      excluiPedido: [formValue.excluiPedido],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n    });\r\n\r\n    this.checkValuesGerente();\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      idAprovacao: null,\r\n      tipoData: 1,\r\n      dtInicial: this.dateService.getFirstDayMonth(),\r\n      dtFinal: this.dateService.getLastDayMonth(),\r\n      numPedido: null,\r\n      nomeSolicitante: null,\r\n      gerenciaSolicitante: null,\r\n      empresa: null,\r\n      codSituacao: 1,\r\n      cliente: null,\r\n      linhaPredominante: null,\r\n      descObs: null,\r\n      excluiPedido: null,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams.q);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          if (params['pagina']) {\r\n            this.currentPage = params['pagina'];\r\n          }\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  convertDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y}`;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setSolicitacaoSelecionada() {\r\n    this.solicitacaoSelecionada = {\r\n      idAprovacao: null,\r\n      nomeVendedor: null,\r\n      matrVendedor: null,\r\n      gerenciaVendedor: null,\r\n      idMotivoSolic: null,\r\n      descMotivoSolic: null,\r\n      tipoData: null,\r\n      dataLancamento: null,\r\n      statusItem: null,\r\n      dtSolic: null,\r\n      descSolic: null,\r\n      codCli: null,\r\n      razaoSocialCli: null,\r\n      cnpjCli: null,\r\n      dtInicial: null,\r\n      dtFinal: null,\r\n      dtAprov: null,\r\n      descObs: null,\r\n      matrUsuarioCad: null,\r\n      dtPedido: null,\r\n      nfPedido: null,\r\n      formaPagtoPedido: null,\r\n      enderecoPedido: null,\r\n      depositoPedido: null,\r\n      empresaPedido: null,\r\n      situaPedido: null,\r\n      nrPedido: null,\r\n      valorPedido: null,\r\n      pesoPedido: null,\r\n      linhaPredominante: null,\r\n      descUsuarioCad: null,\r\n      dtInclusao: null,\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n      this.tipoDataControl = this.form.value.tipoData;\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.idAprovacao) {\r\n      params.idAprovacao = this.form.value.idAprovacao;\r\n    }\r\n\r\n    if (this.form.value.tipoData) {\r\n      params.tipoData = this.form.value.tipoData;\r\n    }\r\n\r\n    if (this.form.value.dtInicial) {\r\n      if (this.form.value.dtInicial instanceof Date) {\r\n        params.dtInicial = this.convertDate(this.form.value.dtInicial);\r\n      } else {\r\n        params.dtInicial = this.form.value.dtInicial;\r\n      }\r\n    }\r\n\r\n    if (this.form.value.dtFinal) {\r\n      if (this.form.value.dtFinal instanceof Date) {\r\n        params.dtFinal = this.convertDate(this.form.value.dtFinal);\r\n      } else {\r\n        params.dtFinal = this.form.value.dtFinal;\r\n      }\r\n    }\r\n\r\n    if (this.form.value.numPedido) {\r\n      params.numPedido = this.form.value.numPedido;\r\n    }\r\n\r\n    if (this.form.value.nomeSolicitante) {\r\n      params.nomeSolicitante = this.form.value.nomeSolicitante;\r\n    }\r\n\r\n    if (this.form.value.gerenciaSolicitante) {\r\n      params.gerenciaSolicitante = this.form.value.gerenciaSolicitante;\r\n    }\r\n\r\n    if (this.form.value.empresa) {\r\n      params.empresa = this.form.value.empresa;\r\n    }\r\n\r\n    if (this.form.value.cliente) {\r\n      params.cliente = this.form.value.cliente;\r\n    }\r\n\r\n    if (this.form.value.linhaPredominante) {\r\n      params.linhaPredominante = this.form.value.linhaPredominante;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    this.liberacoesService\r\n      .getSolicitacoes(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n\r\n    for (let i = 0; i < this.totalItems; i++) {}\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(solicitacao: any): void {\r\n    this.loaderNavbar = true;\r\n    this.loadingDetails = true;\r\n    this.detailPanelService.show();\r\n    this.setSolicitacaoSelecionada();\r\n    this.solicitacaoSelecionada = solicitacao;\r\n\r\n    this.motivos = [];\r\n    this.comentario = null;\r\n\r\n    this.loaderNavbar = false;\r\n    this.detailPanelService.loadedFinished(false);\r\n\r\n    this.liberacoesService\r\n      .getMotivosTrava(solicitacao.nrPedido, solicitacao.codEmpresa)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n            this.loadingDetails = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.motivos = response.data.motivos;\r\n            this.comentario = response.data.detalhes[0].comentario;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onVisualizar(lista: any): void {\r\n    this.router.navigate(['../detalhes', lista.nrPedido, lista.codEmpresa], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  getPerfil() {\r\n    this.liberacoesService\r\n      .getPermissoesAcesso()\r\n\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success === true) {\r\n            this.profile = response.data;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.showPermissionDenied = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.loaderFullScreen = true;\r\n    this.loaderNavbar = true;\r\n\r\n    this.cotacoesService.getCotacaoFilterValues().subscribe((response: any) => {\r\n      if (response[0].responseCode === 200) {\r\n        this.linhas = response[0].result;\r\n        this.form.controls.linhaPredominante.enable();\r\n      }\r\n    });\r\n\r\n    this.formularioService\r\n      .loadDependencies()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe((response: Array<JsonResponse | any>) => {\r\n        this.empresas = response[1].result || [];\r\n        this.form.controls.empresa.enable();\r\n      });\r\n\r\n    this.vendedoresService.getVendedores().subscribe((response: any) => {\r\n      if (response.responseCode === 200) {\r\n        this.vendedores = response.result;\r\n        this.form.controls.nomeSolicitante.enable();\r\n\r\n        this.vendedoresTotal = this.vendedores;\r\n        this.vendedores.unshift({\r\n          id: '',\r\n          nome: 'EXIBIR TODOS',\r\n        });\r\n      }\r\n    });\r\n\r\n    this.escritoriosService.getEscritorios().subscribe((response: any) => {\r\n      if (response.responseCode === 200) {\r\n        this.escritorios = response.result;\r\n        this.form.controls.gerenciaSolicitante.enable();\r\n\r\n        this.escritorios.unshift({\r\n          codEscritorio: '',\r\n          nomeEscritorio: 'EXIBIR TODOS',\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  loadingFilterValues() {\r\n    this.form.controls.empresa.disable();\r\n    this.form.controls.linhaPredominante.disable();\r\n    this.form.controls.gerenciaSolicitante.disable();\r\n    this.form.controls.nomeSolicitante.disable();\r\n  }\r\n\r\n  onChangeEscritorio(event: any, reset: boolean) {\r\n    if (reset == true) {\r\n      this.form.controls.nomeSolicitante.reset();\r\n      this.form.controls.nomeSolicitante.setValue(0);\r\n      this.vendedores = this.vendedoresTotal;\r\n    }\r\n    this.filteredVendedores = this.vendedores.filter(\r\n      (value: any) => value.idEscritorio == this.form.value.gerenciaSolicitante\r\n    );\r\n\r\n    this.filteredVendedores.unshift({\r\n      id: '',\r\n      nome: 'EXIBIR TODOS',\r\n    });\r\n    this.onChangeVendedores();\r\n\r\n    if (this.form.value.gerenciaSolicitante == '') {\r\n      this.vendedores = this.vendedoresTotal;\r\n    }\r\n  }\r\n\r\n  onChangeVendedores(): void {\r\n    this.vendedores = this.filteredVendedores;\r\n  }\r\n\r\n  checkValuesGerente(): void {\r\n    if (\r\n      this.form.value.gerenciaSolicitante !== '' &&\r\n      this.form.value.gerenciaSolicitante !== null\r\n    ) {\r\n      this.onChangeEscritorio(this.form.value.gerenciaSolicitante, false);\r\n    }\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, lista, tipo) {\r\n    if (tipo == 1) {\r\n      if (lista.materiaisSemEstoque.length == 0) {\r\n        this.loadingModal = true;\r\n        this.setSolicitacaoSelecionada();\r\n        this.solicitacaoSelecionada = lista;\r\n        this.modalRef = this.modalService.show(template, {\r\n          animated: false,\r\n          class: 'modal-lg',\r\n        });\r\n      } else {\r\n        this.pnotify.error('Solicitação possui materiais sem estoque');\r\n      }\r\n    } else {\r\n      this.loadingModal = true;\r\n      this.form.controls.descObs.setValidators([\r\n        Validators.minLength(3),\r\n        Validators.required,\r\n      ]);\r\n      this.form.controls.descObs.setValue(lista.comentario);\r\n      this.form.controls.descObs.updateValueAndValidity();\r\n      this.setSolicitacaoSelecionada();\r\n      this.solicitacaoSelecionada = lista;\r\n      this.modalRef = this.modalService.show(template, {\r\n        animated: false,\r\n        class: 'modal-lg',\r\n      });\r\n    }\r\n  }\r\n\r\n  hideModal() {\r\n    this.modalRef.hide();\r\n    this.form.controls.descObs.reset();\r\n    this.form.controls.descObs.clearValidators();\r\n    this.form.controls.descObs.updateValueAndValidity();\r\n    this.form.controls.excluiPedido.reset();\r\n    this.form.controls.excluiPedido.updateValueAndValidity();\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n    });\r\n  }\r\n\r\n  setParams(solicitacao): Object {\r\n    let params: any = {};\r\n\r\n    let exclui;\r\n\r\n    if (this.form.value.excluiPedido == true) {\r\n      exclui = 1;\r\n    } else {\r\n      exclui = 0;\r\n    }\r\n\r\n    params.descObs = this.form.value.descObs;\r\n    params.excluiPedido = exclui;\r\n    params.empresa = solicitacao.codEmpresa;\r\n    params.nrPedido = solicitacao.nrPedido;\r\n\r\n    return params;\r\n  }\r\n\r\n  requestSuccess(solicitacao: any) {\r\n    const stat = 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loaderNavbar = true;\r\n\r\n          return this.liberacoesService.aprovaLiberacao(\r\n            this.setParams(solicitacao)\r\n          );\r\n        }),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.hideModal();\r\n          this.checkRouterParams();\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n          this.onFilter();\r\n        },\r\n        (error: any) => {\r\n          this.pnotify.error('Erro ao aprovar a solicitação');\r\n        }\r\n      );\r\n  }\r\n\r\n  requestFail(solicitacao: any) {\r\n    const stat = 2;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loaderNavbar = true;\r\n          return this.liberacoesService.reprovaLiberacao(\r\n            this.setParams(solicitacao)\r\n          );\r\n        }),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.hideModal();\r\n          this.checkRouterParams();\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n          this.onFilter();\r\n        },\r\n        (error: any) => {\r\n          this.pnotify.error('Erro ao reprovar a solicitação');\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        'Confirmar Aprovação',\r\n        'Deseja realmente aprovar a solicitação ?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      'Confirmar Reprovação',\r\n      'Deseja realmente reprovar a solicitação?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  classStatusBorder(lista: any): string {\r\n    let borderClass: string;\r\n\r\n    if (lista.comentario != '') {\r\n      borderClass = 'border-danger';\r\n    } else if (lista.comentario == '' || lista.comentario == null) {\r\n      borderClass = 'border-primary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.dados.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Aprovacoes${dataExport}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`,  {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getUpSellService(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_suplementarios`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos() {\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"LIBERAÇÕES COMERCIAIS\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onExport()\\\"\\r\\n  [disabled]=\\\"loaderNavbar\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"tipoData\\\">Tipo de data</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"tipoData\\\"\\r\\n                formControlName=\\\"tipoData\\\"\\r\\n                [ngClass]=\\\"onFieldError('tipoData') + ' ' + onFieldRequired(form.controls.tipoData)\\\">\\r\\n                <option value=\\\"1\\\">Lançamento</option>\\r\\n                <option value=\\\"2\\\">Transferência</option>\\r\\n              </select>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('tipoData')\\\" message=\\\"Tipo de data é obrigatória\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"dtInicial\\\">Data Inicial</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dtInicial\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dtInicial\\\"\\r\\n                [ngClass]=\\\"onFieldError('dtInicial') + ' ' + onFieldRequired(form.controls.dtInicial)\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dtInicial')\\\" message=\\\"Data Inicial é obrigatória\\\"></invalid-form-control>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"dtFinal\\\">Data Final</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dtFinal\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dtFinal\\\"\\r\\n                [ngClass]=\\\"onFieldError('dtFinal') + ' ' + onFieldRequired(form.controls.dtFinal)\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dtFinal')\\\" message=\\\"Data Final é obrigatória\\\"></invalid-form-control>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-1 pl-0\\\">\\r\\n              <label for=\\\"numPedido\\\">N. Pedido</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"numPedido\\\"\\r\\n                formControlName=\\\"numPedido\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"gerenciaSolicitante\\\">Gerencia do Vendedor</label>\\r\\n                <ng-select\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"false\\\"\\r\\n                  [items]=\\\"escritorios\\\"\\r\\n                  labelForId=\\\"gerenciaSolicitante\\\"\\r\\n                  formControlName=\\\"gerenciaSolicitante\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  bindValue=\\\"codEscritorio\\\"\\r\\n                  bindLabel=\\\"nomeEscritorio\\\"\\r\\n                  (change)=\\\"onChangeEscritorio($event.id, true)\\\">\\r\\n                </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\r\\n              <label for=\\\"nomeSolicitante\\\">Vendedor</label>\\r\\n                <ng-select\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"false\\\"\\r\\n                  [items]=\\\"vendedores\\\"\\r\\n                  labelForId=\\\"nomeSolicitante\\\"\\r\\n                  formControlName=\\\"nomeSolicitante\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  bindValue=\\\"id\\\"\\r\\n                  bindLabel=\\\"nome\\\"\\r\\n                  >\\r\\n                </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"empresa\\\">Empresa</label>\\r\\n                <ng-select\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"false\\\"\\r\\n                  [items]=\\\"empresas\\\"\\r\\n                  formControlName=\\\"empresa\\\"\\r\\n                  [virtualScroll]=\\\"true\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  labelForId=\\\"empresa\\\"\\r\\n                  bindLabel=\\\"nomeEmpresa\\\"\\r\\n                  bindValue=\\\"idEmpresa\\\"\\r\\n                  [ngClass]=\\\"onFieldError('empresa') + ' ' + onFieldRequired(form.controls.empresa)\\\">\\r\\n                </ng-select>\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('empresa')\\\" message=\\\"Empresa é obrigatório\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n              <label for=\\\"cliente\\\">\\r\\n                <span>Cliente </span>\\r\\n                <ng-template #tooltipLabelClienteTemplate>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou razão social</p>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">do Cliente</p>\\r\\n                </ng-template>\\r\\n                <i class=\\\"fa fa-question-circle\\\" [tooltip]=\\\"tooltipLabelClienteTemplate\\\" container=\\\"body\\\"></i>\\r\\n              </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"cliente\\\"\\r\\n                formControlName=\\\"cliente\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"linhaPredominante\\\">Linha Predominante</label>\\r\\n                <ng-select\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"false\\\"\\r\\n                  [items]=\\\"linhas\\\"\\r\\n                  formControlName=\\\"linhaPredominante\\\"\\r\\n                  [virtualScroll]=\\\"true\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  labelForId=\\\"linhaPredominante\\\"\\r\\n                  bindLabel=\\\"descricao\\\"\\r\\n                  bindValue=\\\"id\\\"\\r\\n                >\\r\\n                </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1 pl-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row text-center justify-content-center\\\" >\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-7': showDetailPanel}\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">  \\r\\n      <custom-table  [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" ></th>\\r\\n            <th scope=\\\"col\\\" >N. Pedido</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Escritório</th>\\r\\n            <th scope=\\\"col\\\" >Vendedor</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\" *ngIf=\\\"tipoDataControl == 1\\\" >Data da Lançamento</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\" *ngIf=\\\"tipoDataControl == 2\\\" >Data da Transferência</th>\\r\\n            <th scope=\\\"col\\\" >Cliente</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Valor</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Peso</th>\\r\\n            \\r\\n            <th scope=\\\"col\\\" style=\\\"width:40px\\\" ></th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:40px\\\" ></th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:40px\\\" ></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let lista of dadosPagination; let i = index\\\" [class.table-active]=\\\"lista.nrPedido == solicitacaoSelecionada.nrPedido\\\">\\r\\n            <td (click)=\\\"onDetails(lista)\\\" [ngClass]=\\\"classStatusBorder(lista)\\\">\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Retira\\\" placement=\\\"center\\\" *ngIf=\\\"lista.inRetira == 1\\\" >\\r\\n                <i class=\\\"fas fa-folder-open\\\"></i>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td (click)=\\\"onDetails(lista)\\\" >{{ lista.nrPedido }}</td>\\r\\n            <td (click)=\\\"onDetails(lista)\\\" [hidden]=\\\"showDetailPanel\\\">{{ lista.escritorio | uppercase}}</td>\\r\\n            <td (click)=\\\"onDetails(lista)\\\" >{{ lista.vendedor | uppercase}}</td>\\r\\n            <td (click)=\\\"onDetails(lista)\\\" [hidden]=\\\"showDetailPanel\\\" *ngIf=\\\"tipoDataControl == 1\\\">{{ lista.dataLancamento | date:'dd/MM/yyyy HH:mm' }}</td>\\r\\n            <td (click)=\\\"onDetails(lista)\\\" [hidden]=\\\"showDetailPanel\\\" *ngIf=\\\"tipoDataControl == 2\\\">{{ lista.dataTransferencia | date:'dd/MM/yyyy HH:mm' }}</td>\\r\\n            <td (click)=\\\"onDetails(lista)\\\" >{{ lista.codCliente }} - {{ lista.razaoSocial }}</td>\\r\\n            <td (click)=\\\"onDetails(lista)\\\" [hidden]=\\\"showDetailPanel\\\">{{ lista.valorTotal | currency:'BRL':'symbol':'1.2-2'}}</td>\\r\\n            <td (click)=\\\"onDetails(lista)\\\" [hidden]=\\\"showDetailPanel\\\">{{ lista.pesoTotal }} To</td>\\r\\n            \\r\\n            <td>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Aprovar\\\" placement=\\\"left\\\" container=\\\"body\\\" *ngIf=\\\"profile.liberacoesAdm || profile.liberacoesPadrao\\\"> \\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModal(aprovarSolicitacao, lista, 1)\\\">\\r\\n                  <i class=\\\" text-success fas fa-thumbs-up\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td >\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Reprovar\\\" placement=\\\"left\\\" container=\\\"body\\\" *ngIf=\\\"profile.liberacoesAdm || profile.liberacoesPadrao\\\"> \\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModal(reprovarSolicitacao, lista, 2)\\\">\\r\\n                  <i class=\\\" text-danger fas fa-thumbs-down\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td>\\r\\n              <span   tooltip=\\\"Detalhe da Solicitação\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onVisualizar(lista)\\\">\\r\\n                  <i class=\\\"fas fa-search\\\"></i>                  \\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel || viewHistorico\\\">\\r\\n      <detail-panel panelTitle=\\\"Aguardando Resposta\\\">\\r\\n        <div class=\\\"d-flex justify-content-center mb-3\\\" [hidden]=\\\"!loadingDetails\\\">\\r\\n          <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"text-center\\\" [hidden]=\\\"loadingDetails\\\">\\r\\n          <blockquote class=\\\"blockquote mx-5\\\">\\r\\n            <p class=\\\"text-primary mb-0\\\">Detalhes da trava</p>\\r\\n            <footer class=\\\"blockquote-footer\\\">\\r\\n              <small class=\\\"text-muted\\\">\\r\\n                {{solicitacaoSelecionada?.dataLancamento | date: 'dd/MM/yyyy'}}\\r\\n              </small>\\r\\n            </footer>\\r\\n            <footer class=\\\"blockquote-footer\\\">\\r\\n              <small class=\\\"text-muted\\\">\\r\\n                  <cite ><strong>Motivos Trava:</strong></cite>\\r\\n                  <div *ngFor=\\\"let itens of motivos\\\" class=\\\"ml-3\\\"> {{ itens.desTrava }} </div>\\r\\n              </small>\\r\\n            </footer>\\r\\n            <footer class=\\\"blockquote-footer\\\" *ngIf=\\\"comentario != ''\\\" >\\r\\n              <small class=\\\"text-muted\\\">\\r\\n                  <cite ><strong>Observação da Reprovação:</strong></cite>\\r\\n                  <div class=\\\"ml-3\\\" > {{ comentario }} </div>\\r\\n              </small>\\r\\n            </footer>\\r\\n          </blockquote>\\r\\n        </div>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div class=\\\"text-center justify-content-center\\\" *ngIf=\\\"totalItems > itemsPerPage && !dadosEmpty\\\">\\r\\n    Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n    <pagination\\r\\n      class=\\\"text-center justify-content-center\\\"\\r\\n      [maxSize]=\\\"10\\\"\\r\\n      [totalItems]=\\\"totalItems\\\"\\r\\n      (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n      [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n      [boundaryLinks]=\\\"true\\\"\\r\\n      [(ngModel)]=\\\"currentPage\\\"\\r\\n      previousText=\\\"&lsaquo;\\\"\\r\\n      nextText=\\\"&rsaquo;\\\"\\r\\n      firstText=\\\"&laquo;\\\"\\r\\n      lastText=\\\"&raquo;\\\">\\r\\n    </pagination>\\r\\n  </div>\\r\\n  <div class=\\\"text-center justify-content-center\\\">\\r\\n  <empty-result\\r\\n    message=\\\"Nenhuma informação encontrada\\\"\\r\\n    class=\\\"my-3 justify-content-center text-center\\\"\\r\\n    *ngIf=\\\"dadosEmpty\\\">\\r\\n  </empty-result>\\r\\n  </div>\\r\\n  <ng-template #aprovarSolicitacao>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Observação de Aprovação #{{solicitacaoSelecionada?.nrPedido}}</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row justify-content-center\\\">\\r\\n            <div class=\\\"form-group col pl-0\\\">\\r\\n              <label for=\\\"descObs\\\" >Observação:</label>\\r\\n              <input \\r\\n                class=\\\"form-control\\\" \\r\\n                id=\\\"descObs\\\" \\r\\n                formControlName=\\\"descObs\\\" \\r\\n                rows=\\\"3\\\"\\r\\n                [ngClass]=\\\"onFieldError('descObs') + ' ' + onFieldRequired('form.controls.descObs')\\\">\\r\\n              \\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('descObs')\\\" message=\\\"Observação é obrigatório e deve conter no mínimo 3 dígitos.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n        <div  class=\\\"form-row justify-content-center text-center\\\">\\r\\n          <button \\r\\n            type=\\\"button\\\" \\r\\n            class=\\\"btn btn-default btn-lg m-2\\\"\\r\\n            (click)=\\\"requestSuccess(solicitacaoSelecionada)\\\"\\r\\n            [disabled]=\\\"form.valid === false || loaderNavbar === true\\\"\\r\\n          >\\r\\n            <span aria-hidden=\\\"true\\\">\\r\\n             <i class=\\\" text-success fas fa-thumbs-up\\\"></i>\\r\\n            </span>Aprovar\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n   <ng-template #reprovarSolicitacao>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Observação de Reprovação #{{solicitacaoSelecionada?.nrPedido}}</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row justify-content-center\\\">\\r\\n            <div class=\\\"form-group col pl-0\\\">\\r\\n              <label for=\\\"descObs\\\" >Observação:</label>\\r\\n              <input \\r\\n                class=\\\"form-control\\\" \\r\\n                id=\\\"descObs\\\" \\r\\n                formControlName=\\\"descObs\\\" \\r\\n                rows=\\\"3\\\"\\r\\n                [ngClass]=\\\"onFieldError('descObs') + ' ' + onFieldRequired('form.controls.descObs')\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('descObs')\\\" message=\\\"Observação é obrigatório e deve conter no mínimo 3 dígitos.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"checkbox\\\">\\r\\n            <label class=\\\"checkbox-inline\\\">\\r\\n              <input\\r\\n              type=\\\"checkbox\\\" \\r\\n              id=\\\"excluiPedido\\\"\\r\\n              formControlName=\\\"excluiPedido\\\"\\r\\n              > Excluir pedido\\r\\n            </label>\\r\\n          </div>\\r\\n        </form>\\r\\n        <div  class=\\\"form-row justify-content-center text-center\\\">\\r\\n          <button \\r\\n            type=\\\"button\\\" \\r\\n            class=\\\"btn btn-default btn-lg m-2\\\"\\r\\n            (click)=\\\"requestFail(solicitacaoSelecionada)\\\"\\r\\n            [disabled]=\\\"form.valid === false || loaderNavbar === true\\\"\\r\\n          >\\r\\n            <span aria-hidden=\\\"true\\\">\\r\\n             <i class=\\\" text-danger fas fa-thumbs-down\\\"></i>\\r\\n            </span>Reprovar\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</app-body>\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialGestaoLiberacoesService } from '../services/liberacoes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialLiberacoesDetalhesResolverGuard implements Resolve<any> {\r\n  constructor(private liberacoesService: ComercialGestaoLiberacoesService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n     if (route.params && route.params.id) {\r\n      return this.liberacoesService.getDetalhes(\r\n        route.params.id,\r\n        route.params.empresa\r\n      );\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        idAprovacao: null,\r\n        nomeVendedor: null,\r\n        matrVendedor: null,\r\n        gerenciaVendedor: null,\r\n        idMotivoSolic: null,\r\n        descMotivoSolic: null,\r\n        tipoData: null,\r\n        dataLancamento: null,\r\n        statusItem: null, //Status do Item (Ativo/Inativo)\r\n        dtSolic: null, // Data da Solicitação\r\n        descSolic: null, // Descrição da solicitação\r\n        codCli: null,\r\n        razaoSocialCli: null,\r\n        cnpjCli: null,\r\n        dtInicial: null,\r\n        dtFinal: null,\r\n        dtAprov: null,\r\n        descObs: null,\r\n        matrUsuarioCad: null,\r\n        dtPedido: null,\r\n        nfPedido: null,\r\n        formaPagtoPedido: null,\r\n        enderecoPedido: null,\r\n        depositoPedido: null,\r\n        empresaPedido: null,\r\n        situaPedido: null,\r\n        numPedido: null,\r\n        valorPedido: null,\r\n        pesoPedido: null,\r\n        linhaPredominante: null,\r\n        descUsuarioCad: null,\r\n        dtInclusao: null,\r\n      },\r\n    });\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { IComercialGestaoLiberacoes } from '../models/liberacoes';\r\nimport { Observable } from 'rxjs';\r\nimport { retry, take } from 'rxjs/operators';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialGestaoLiberacoesService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/gestao/liberacoes`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getSolicitacoes(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(nrPedido: number, codEmpresa: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${nrPedido}/${codEmpresa}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  postSolicitacoes(liberacao: IComercialGestaoLiberacoes) {\r\n    return this.http.post(\r\n      `${this.API}/comercial/gestao/liberacoes`,\r\n      liberacao,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getPermissoesAcesso(): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/permissoes-acesso`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMotivosTrava(nrPedido: number, codEmpresa: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/motivos-trava/${nrPedido}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  aprovaLiberacao(params:any): Observable<any>{\r\n    return this.http.post(`${this.API}/aprovacao`, params).pipe(take(1));\r\n  }\r\n\r\n  reprovaLiberacao(params:any): Observable<any>{\r\n    return this.http.post(`${this.API}/reprovacao`, params).pipe(take(1));\r\n  }\r\n\r\n\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Detalhes do Pedido\\\">\\r\\n  <!-- <button\\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postMovimentacoes()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button> -->\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click) = \\\"onVoltar()\\\"\\r\\n  >\\r\\n  Voltar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div [hidden] = \\\"loaderFullScreen\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <hr class=\\\"mt-0 mb-4\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-4\\\">\\r\\n          <label>Vendedor</label>\\r\\n          <div>{{ solicitacao?.vendedor }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-4\\\">\\r\\n          <label>Data da solicitação</label>\\r\\n          <div>{{ solicitacao?.dataCriacao | date: 'dd/MM/yyyy' }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-4\\\" style=\\\"color: rgb(200, 0, 0);\\\">\\r\\n          <label>Motivos da Trava</label>\\r\\n          <div *ngFor=\\\"let item of solicitacao?.motivoTrava\\\">- {{ item.desTrava}} </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n    </div>\\r\\n    <div class=\\\"col-12\\\" >\\r\\n      <label><strong>DADOS DO CLIENTE</strong></label>\\r\\n      <div class=\\\"form-row justify-content-center \\\">\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label>Cód. Cliente</label>\\r\\n          <div *ngIf=\\\"solicitacao?.codCliente == null\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"solicitacao?.codCliente != null\\\">{{ solicitacao?.codCliente}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-4\\\">\\r\\n          <label>Razão Social</label>\\r\\n          <div *ngIf=\\\"solicitacao?.razaoSocial == null\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"solicitacao?.razaoSocial != null\\\">{{ solicitacao?.razaoSocial}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\" *ngIf=\\\"solicitacao?.tipoPessoa == 'J'\\\">\\r\\n          <label >CNPJ</label>\\r\\n          <div *ngIf=\\\"solicitacao?.cpfCnpj == null\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"solicitacao?.cpfCnpj != null\\\"> {{ solicitacao?.cpfCnpj }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\" *ngIf=\\\"solicitacao?.tipoPessoa == 'F'\\\">\\r\\n          <label>CPF</label>\\r\\n          <div *ngIf=\\\"solicitacao?.cpfCnpj == null\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"solicitacao?.cpfCnpj != null\\\"> {{solicitacao?.cpfCnpj}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2 align-items-center text-right\\\">\\r\\n          <a\\r\\n          target=\\\"_blank\\\"\\r\\n          class=\\\"btn btn-default btn-lg m-2 \\\"\\r\\n          [routerLink]=\\\"['/comercial/clientes/historico-financeiro', solicitacao?.codCliente]\\\"\\r\\n          tooltip=\\\"Abrir Histórico Financeiro\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">\\r\\n           <i class=\\\" text-success fas fa-dollar-sign\\\"></i>\\r\\n          </span>Histórico Financeiro\\r\\n        </a>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2 align-items-center text-right\\\">\\r\\n          <a\\r\\n          target=\\\"_blank\\\"\\r\\n          class=\\\"btn btn-default btn-lg m-2 \\\"\\r\\n          (click)=\\\"openModal(detalhesCliente )\\\"\\r\\n          tooltip=\\\"Visualizar Detalhes do Cliente\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">\\r\\n           <i class=\\\" text-primary fas fa-user\\\"></i>\\r\\n          </span>Detalles do Cliente\\r\\n        </a>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n    </div>\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <label><strong>DADOS DO PEDIDO</strong></label>\\r\\n      <div class=\\\"form-row justify-content-start \\\">\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label>Nº Pedido</label>\\r\\n          <div *ngIf=\\\"solicitacao?.nrPedido == null\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"solicitacao?.nrPedido != null\\\">{{solicitacao?.nrPedido}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label>Data da Entrega</label>\\r\\n          <div *ngIf=\\\"solicitacao?.dataEntrega == null\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"solicitacao?.dataEntrega != null\\\"> {{solicitacao?.dataEntrega | date: 'dd/MM/yyyy' }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label>Empresa</label>\\r\\n          <div *ngIf=\\\"solicitacao?.nomeEmpresa == null\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"solicitacao?.nomeEmpresa != null\\\"> {{solicitacao?.nomeEmpresa}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label>Nota Fiscal Mãe</label>\\r\\n          <div *ngIf=\\\"solicitacao?.nfMae == null\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"solicitacao?.nfMae != null\\\"> {{solicitacao?.nfMae}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label>Forma de Pagamento</label>\\r\\n          <div *ngIf=\\\"solicitacao?.formaPagamento == null\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"solicitacao?.formaPagamento != null\\\"> {{solicitacao?.formaPagamento}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label>Linha Predominante</label>\\r\\n          <div *ngIf=\\\"solicitacao?.linha == null\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"solicitacao?.linha != null\\\">{{solicitacao?.linha}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-4\\\">\\r\\n          <label>Local de Entrega</label>\\r\\n          <div *ngIf=\\\"solicitacao?.enderecoEntrega == null\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"solicitacao?.enderecoEntrega != null\\\"> {{solicitacao?.enderecoEntrega}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-4\\\">\\r\\n          <label>UF de Entrega</label>\\r\\n          <div *ngIf=\\\"solicitacao?.ufEntrega == null\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"solicitacao?.ufEntrega != null\\\"> {{solicitacao?.ufEntrega}}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n      <hr>\\r\\n    <div class=\\\"col-12\\\" *ngIf=\\\"solicitacao?.materiais.length > 0\\\" >\\r\\n      <label><strong>MATERIAIS DO PEDIDO</strong></label>\\r\\n        <div *ngFor=\\\"let item of solicitacao?.materiais; let i = index\\\">\\r\\n          <div class=\\\"border border-success rounded p-2 mb-1\\\">\\r\\n            <label><strong>ITEM: {{ i + 1}}</strong></label><br>\\r\\n            <div class=\\\"form-row justify-content-start\\\">\\r\\n              <div class=\\\"form-group col-lg-4\\\">\\r\\n                <label>Material</label>\\r\\n                <div>{{item?.codMaterial}} - {{item?.nomeMaterial}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Valor Unitário</label>\\r\\n                <div>\\r\\n                  <span class=\\\"mr-2\\\">{{ item?.valorUnitarioMaterial | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n                  <i\\r\\n                    *ngIf=\\\"item?.variacaoPreco !== 0\\\"\\r\\n                    [ngClass]=\\\"classVariacaoPreco(item.variacaoPreco)\\\"\\r\\n                    [tooltip]=\\\"formatVariacaoPreco(item.variacaoPreco)\\\">\\r\\n                  </i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>Peso</label>\\r\\n                <div>{{item?.pesoTotalMaterial}} {{item?.UnidadeMedida}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>ICMS</label>\\r\\n                <div>{{item?.vrPercentualIcmsMaterial}} %</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>IPI</label>\\r\\n                <div>{{item?.vrPercentualIpiMaterial}} %</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>Custo</label>\\r\\n                <div>{{item?.valorCustoMaterial | currency:'BRL':'symbol':'1.2-2'}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>% MC</label>\\r\\n                <div>{{item?.porcMcMaterial}} %</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>Valor Total</label>\\r\\n                <div>{{item?.valorTotalMaterial | currency:'BRL':'symbol':'1.2-2'}}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row justify-content-start\\\">\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Margem de Lucro</label>\\r\\n                <div>{{item?.valorMargemLucroMaterial | currency:'BRL':'symbol':'1.2-2'}} / {{item?.porcMargemLucroMaterial}} %</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Preço Mínimo</label>\\r\\n                <div>{{item?.precoMinimoMaterial | currency:'BRL':'symbol':'1.2-2'}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Estoque Atual</label>\\r\\n                <div>{{item?.EstoqueAtual}} To</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <label><strong>DETALHES DA ÚLTIMA VENDA:</strong></label><br>\\r\\n            <div class=\\\"form-row justify-content-start\\\" *ngIf=\\\"item?.nrPedidoUltimaVendaMaterial != null\\\">\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>Nº Pedido</label>\\r\\n                <div>{{item?.nrPedidoUltimaVendaMaterial}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>Data</label>\\r\\n                <div>{{item?.dataUltimaVendaMaterial | date: 'dd/MM/yyyy' }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Valor Unitário</label>\\r\\n                <div>{{item?.valorUnitarioUltimaVenda | currency:'BRL':'symbol':'1.2-2'}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>Peso</label>\\r\\n                <div>{{item?.qtdeToneladasUltimaVenda}} {{item?.UnidadeMedida}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Empresa</label>\\r\\n                <div>{{item?.nomeEmpresaUltimaVenda}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Forma de pagamento</label>\\r\\n                <div>{{item?.formaPagamentoUltimaVenda}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\" *ngIf=\\\"item?.mediaDiasFormaPagamentoUltimaVenda != null\\\" >\\r\\n                <label>Média de dias</label>\\r\\n                <div>{{item?.mediaDiasFormaPagamentoUltimaVenda}} dias</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row justify-content-start\\\" *ngIf=\\\"item?.nrPedidoUltimaVendaMaterial == null\\\">\\r\\n              <div class=\\\"form-group col-lg-3\\\">\\r\\n                Primeiro pedido desse material.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-12\\\" *ngIf=\\\"solicitacao?.materiaisSemEstoque.length > 0\\\" >\\r\\n      <label><strong>MATERIAIS DO PEDIDO - SEM ESTOQUE</strong></label>\\r\\n        <div *ngFor=\\\"let item of solicitacao?.materiaisSemEstoque; let j = index\\\">\\r\\n          <div class=\\\"border border-danger rounded p-2 mb-1\\\">\\r\\n            <label><strong>ITEM: {{ j + 1}}</strong></label><br>\\r\\n            <div class=\\\"form-row justify-content-start\\\">\\r\\n              <div class=\\\"form-group col-lg-4\\\">\\r\\n                <label>Material</label>\\r\\n                <div>{{item?.codMaterial}} - {{item?.nomeMaterial}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Valor Unitário</label>\\r\\n                <div>\\r\\n                  <span class=\\\"mr-2\\\">{{ item?.valorUnitarioMaterial | currency:'BRL':'symbol':'1.2-2' }}</span>\\r\\n                  <i\\r\\n                    *ngIf=\\\"item?.variacaoPreco !== 0\\\"\\r\\n                    [ngClass]=\\\"classVariacaoPreco(item.variacaoPreco)\\\"\\r\\n                    [tooltip]=\\\"formatVariacaoPreco(item.variacaoPreco)\\\">\\r\\n                  </i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>Peso</label>\\r\\n                <div>{{item?.pesoTotalMaterial}} {{item?.UnidadeMedida}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>ICMS</label>\\r\\n                <div>{{item?.vrPercentualIcmsMaterial}} %</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>IPI</label>\\r\\n                <div>{{item?.vrPercentualIpiMaterial}} %</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>Custo</label>\\r\\n                <div>{{item?.valorCustoMaterial | currency:'BRL':'symbol':'1.2-2'}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>% MC</label>\\r\\n                <div>{{item?.porcMcMaterial}} %</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>Valor Total</label>\\r\\n                <div>{{item?.valorTotalMaterial | currency:'BRL':'symbol':'1.2-2'}}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row justify-content-start\\\">\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Margem de Lucro</label>\\r\\n                <div>{{item?.valorMargemLucroMaterial | currency:'BRL':'symbol':'1.2-2'}} / {{item?.porcMargemLucroMaterial}} %</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Preço Mínimo</label>\\r\\n                <div>{{item?.precoMinimoMaterial | currency:'BRL':'symbol':'1.2-2'}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Estoque Atual</label>\\r\\n                <div>{{item?.EstoqueAtual}} To</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <label><strong>DETALHES DA ÚLTIMA VENDA:</strong></label><br>\\r\\n            <div class=\\\"form-row justify-content-start\\\" *ngIf=\\\"item?.nrPedidoUltimaVendaMaterial != null\\\">\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>Nº Pedido</label>\\r\\n                <div>{{item?.nrPedidoUltimaVendaMaterial}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>Data</label>\\r\\n                <div>{{item?.dataUltimaVendaMaterial | date: 'dd/MM/yyyy' }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Valor Unitário</label>\\r\\n                <div>{{item?.valorUnitarioUltimaVenda | currency:'BRL':'symbol':'1.2-2'}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label>Peso</label>\\r\\n                <div>{{item?.qtdeToneladasUltimaVenda}} {{item?.UnidadeMedida}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Empresa</label>\\r\\n                <div>{{item?.nomeEmpresaUltimaVenda}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label>Forma de pagamento</label>\\r\\n                <div>{{item?.formaPagamentoUltimaVenda}}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\" *ngIf=\\\"item?.mediaDiasFormaPagamentoUltimaVenda != null\\\" >\\r\\n                <label>Média de dias</label>\\r\\n                <div>{{item?.mediaDiasFormaPagamentoUltimaVenda}} dias</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row justify-content-start\\\" *ngIf=\\\"item?.nrPedidoUltimaVendaMaterial == null\\\">\\r\\n              <div class=\\\"form-group col-lg-3\\\">\\r\\n                Primeiro pedido desse material.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-12\\\" *ngIf=\\\"solicitacao?.totais.length > 0\\\">\\r\\n      <label><strong>TOTAIS</strong></label>\\r\\n      <div class=\\\"form-row justify-content-start \\\">\\r\\n        <div class=\\\"form-group col-lg-1\\\">\\r\\n          <label>Peso</label>\\r\\n          <div>{{solicitacao?.totais[0].qtdeToneladas}} To</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-1\\\">\\r\\n          <label>ICMS</label>\\r\\n          <div>{{solicitacao?.totais[0].vrPercentualIcmsProposta}} %</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-1\\\">\\r\\n          <label>IPI</label>\\r\\n          <div>{{solicitacao?.totais[0].vrPercentualIpiProposta}} %</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-1\\\">\\r\\n          <label>Média % MC</label>\\r\\n          <div>{{solicitacao?.totais[0].porcMcProposta}} %</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-1\\\">\\r\\n          <label>Valor</label>\\r\\n          <div>{{solicitacao?.totais[0].valorPedido | currency:'BRL':'symbol':'1.2-2'}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label>Margem de Lucro</label>\\r\\n          <div>{{solicitacao?.totais[0].valorMargemLucroProposta | currency:'BRL':'symbol':'1.2-2'}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label>Média Margem de Lucro</label>\\r\\n          <div>{{solicitacao?.totais[0].porcMargemLucroProposta}} %</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n\\r\\n    <div class=\\\"col-12\\\" *ngIf=\\\"profile.liberacoesAdm || profile.liberacoesPadrao\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-group col-12\\\">\\r\\n          <label for=\\\"descObs\\\">Observação:</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"descObs\\\"\\r\\n            formControlName=\\\"descObs\\\"\\r\\n            placeholder=\\\"Digite...\\\"\\r\\n            [ngClass]=\\\"onFieldError('descObs') + ' ' + onFieldRequired('form.controls.descObs')\\\">\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('descObs')\\\" message=\\\"Descrição é obrigatório e deve conter no mínimo 3 dígitos.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"checkbox col-1\\\">\\r\\n          <label class=\\\"checkbox-inline\\\">\\r\\n            <input\\r\\n            type=\\\"checkbox\\\"\\r\\n            id=\\\"excluiPedido\\\"\\r\\n            formControlName=\\\"excluiPedido\\\"\\r\\n            > Excluir pedido\\r\\n          </label>\\r\\n        </div>\\r\\n      </form>\\r\\n      <div class=\\\"form-row justify-content-center\\\">\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-default btn-lg mx-1\\\"\\r\\n          (click)=\\\"requestSuccess(solicitacao)\\\"\\r\\n          [disabled]=\\\"_materiaisSemEstoqueEmpty === false || form.value.excluiPedido == true\\\">\\r\\n          <span aria-hidden=\\\"true\\\">\\r\\n          <i class=\\\" text-success fas fa-thumbs-up\\\"></i>\\r\\n          </span>Aprovar\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-default btn-lg mx-1\\\"\\r\\n          (click)=\\\"requestFail(solicitacao)\\\"\\r\\n          [disabled]=\\\"loaderNavbar === true || form.valid === false\\\">\\r\\n          <span aria-hidden=\\\"true\\\">\\r\\n          <i class=\\\" text-danger fas fa-thumbs-down\\\"></i>\\r\\n          </span>Reprovar\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-template #detalhesCliente>\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title pull-left\\\">Detalhes do Cliente</h4>\\r\\n        <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n          <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\" *ngIf=\\\"loadingDetalhes\\\">\\r\\n            <span class=\\\"sr-only\\\">Loading...</span>\\r\\n          </div>\\r\\n          <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\" *ngIf=\\\"!loadingDetalhes\\\">\\r\\n            <div class=\\\"form-row\\\" >\\r\\n              <div class=\\\"form-group col-lg-8\\\">\\r\\n                <label>Nome fantasia</label>\\r\\n                <div *ngIf=\\\"cliente.nomeFantasia == null\\\">NÃO INFORMADO</div>\\r\\n                <div *ngIf=\\\"cliente.nomeFantasia != null\\\">{{ cliente.nomeFantasia }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"cliente.tipoPessoa == 'F'\\\">\\r\\n                <label>CPF</label>\\r\\n                <div *ngIf=\\\"cliente.cpf == null\\\">NÃO INFORMADO</div>\\r\\n                <div *ngIf=\\\"cliente.cpf != null\\\">{{ cliente.cpf }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"cliente.tipoPessoa == 'J'\\\">\\r\\n                <label>CNPJ</label>\\r\\n                <div *ngIf=\\\"cliente.cnpj == null\\\">NÃO INFORMADO</div>\\r\\n                <div *ngIf=\\\"cliente.cnpj != null\\\">{{ cliente.cnpj }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                <label>Razão social</label>\\r\\n                <div *ngIf=\\\"cliente.razaoSocial == null\\\">NÃO INFORMADO</div>\\r\\n                <div *ngIf=\\\"cliente.razaoSocial != null\\\">{{ cliente.razaoSocial }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                <label>Endereço</label>\\r\\n                <div *ngIf=\\\"cliente.endereco == null\\\">NÃO INFORMADO</div>\\r\\n                <div *ngIf=\\\"cliente.endereco != null\\\">{{ cliente.endereco }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-lg-8\\\">\\r\\n                <label>Bairro</label>\\r\\n                <div *ngIf=\\\"cliente.bairro == null\\\">NÃO INFORMADO</div>\\r\\n                <div *ngIf=\\\"cliente.bairro != null\\\">{{ cliente.bairro }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-4\\\">\\r\\n                <label>CEP</label>\\r\\n                <div *ngIf=\\\"cliente.cep == null\\\">NÃO INFORMADO</div>\\r\\n                <div *ngIf=\\\"cliente.cep != null\\\">{{ cliente.cep }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-lg-8\\\">\\r\\n                <label>Cidade</label>\\r\\n                <div *ngIf=\\\"cliente.cidade == null\\\">NÃO INFORMADO</div>\\r\\n                <div *ngIf=\\\"cliente.cidade != null\\\">{{ cliente.cidade }} / {{ cliente.uf }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-4\\\">\\r\\n                <label>Segurado</label>\\r\\n                <div *ngIf=\\\"cliente.segurado != ''\\\">SIM</div>\\r\\n                <div *ngIf=\\\"cliente.segurado == ''\\\">NÃO</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-lg-8\\\">\\r\\n                <label>Vendedor</label>\\r\\n                <div *ngIf=\\\"cliente.vendedor == null\\\">NÃO INFORMADO</div>\\r\\n                <div *ngIf=\\\"cliente.vendedor != null\\\">{{ cliente.vendedor }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-4\\\">\\r\\n                <label>Escritório</label>\\r\\n                <div *ngIf=\\\"cliente.escritorio == null\\\">NÃO INFORMADO</div>\\r\\n                <div *ngIf=\\\"cliente.escritorio != null\\\">{{ cliente.escritorio }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"cliente.codSAP != '' && cliente.codSAP != null\\\">\\r\\n                <label>Código DBA</label>\\r\\n                <div>{{ cliente.codSAP }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"cliente.escritorioDba != '' && cliente.escritorioDba != null\\\">\\r\\n                <label>Escritório</label>\\r\\n                <div>{{ cliente.escritorioDba }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"cliente.ultimaCompraDba != '' && cliente.ultimaCompraDba != null\\\">\\r\\n                <label>Última compra</label>\\r\\n                <div>{{ cliente.ultimaCompraDba }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div [hidden]=\\\"!loadingDetalhes\\\" class=\\\"col-lg-12 text-muted \\\">\\r\\n            <p><strong>Buscando los detalles del cliente...</strong></p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</app-body>\\r\\n\";"]}