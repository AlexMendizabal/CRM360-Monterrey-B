{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/cnaes/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/cnaes/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/cnaes/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/cnaes/lista/lista.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/cnaes/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/cnaes/cnaes.module.ts","webpack:///src/app/modules/comercial/cadastros/cnaes/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/cnaes/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/cnaes/cnaes-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/cnaes/cnaes.service.ts","webpack:///src/app/guards/form-deactivate.guard.ts"],"names":["ComercialCadastrosCnaesFormularioComponent","activatedRoute","router","location","formBuilder","cnaesService","pnotifyService","atividadesService","titleService","loaderFullScreen","breadCrumbTree","formChanged","getPNotify","registrarAcesso","setBreadCrumb","setFormBuilder","subscribe","params","id","appTitle","setTitle","descricao","routerLink","idSubModulo","snapshot","data","detalhes","success","form","group","codigo","cnae","required","codParametroERP","codSituacao","error","back","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","valid","loaderNavbar","submittingForm","save","value","pipe","next","response","hasOwnProperty","reset","mensagem","navigate","relativeTo","notice","confirm","selector","template","ComercialCadastrosCnaesListaComponent","confirmModalService","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","setFormFilter","onDetailPanelEmitter","setCnaeSelecionado","showDetailPanelSubscription","unsubscribe","config","event","showing","formValue","checkRouterParams","associado","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","cnaeSelecionado","situacao","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaCnaes","slice","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","show","getAlteracoes","setTimeout","loadedFinished","index","confirmActivate","asObservable","result","activateCnae","refreshMainData","showConfirm","confirmInactive","inactivateCnae","i","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialCadastrosCnaesModule","declarations","imports","forRoot","providers","ComercialCadastrosCnaesFormularioResolverGuard","route","getDetalhes","codCnae","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosCnaesRoutingModule","forChild","exports","ComercialCadastrosCnaesService","http","API","httpParams","param","append","post","put","updateCnae","saveCnae","FormDeactivateGuard","state","formCanDeactivate"],"mappings":"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","file":"cnaes-cnaes-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jbmFlcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"cnae\\\">\\r\\n              <span class=\\\"mr-1\\\">Cnae</span>\\r\\n              <ng-template #tooltipLabelCnaeTemplate>\\r\\n                <p class=\\\"text-nowrap mb-0\\\">Código do Cnae</p>\\r\\n                <p class=\\\"text-nowrap mb-0\\\">sem pontuação</p>\\r\\n              </ng-template>\\r\\n              <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelCnaeTemplate\\\" container=\\\"body\\\"></i>\\r\\n            </label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"cnae\\\"\\r\\n              formControlName=\\\"cnae\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('cnae') + ' ' + onFieldRequired(form.controls.cnae)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnae')\\\" message=\\\"Cnae é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"descricao\\\">Descrição do Cnae</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"descricao\\\"\\r\\n              formControlName=\\\"descricao\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('descricao') + ' ' + onFieldRequired(form.controls.descricao)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('descricao')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <!-- <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codParametroERP\\\">Código TID</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codParametroERP\\\"\\r\\n              formControlName=\\\"codParametroERP\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('codParametroERP') + ' ' + onFieldRequired(form.controls.codParametroERP)\\\">\\r\\n          </div> -->\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"codSituacao\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n              <option value=\\\"2\\\">Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosCnaesService } from '../cnaes.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { ICnae } from '../models/cnaes';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-cnaes-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosCnaesFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderNavbar: boolean;\r\n  loaderFullScreen = true;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<any> = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private cnaesService: ComercialCadastrosCnaesService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar Cnae';\r\n      } else {\r\n        this.appTitle = 'Novo Cnae';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Cnaes',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/cnaes/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: ICnae = this.activatedRoute.snapshot.data.detalhes.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codigo: [detalhes.codigo],\r\n        cnae: [detalhes.cnae, [Validators.required]],\r\n        descricao: [detalhes.descricao, [Validators.required]],\r\n        codParametroERP: [detalhes.codParametroERP],\r\n        codSituacao: [\r\n          detalhes.codSituacao ? detalhes.codSituacao : 1,\r\n          [Validators.required],\r\n        ],\r\n      });\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.cnaesService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosCnaesService } from '../cnaes.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { ICnae } from '../models/cnaes';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-cnaes-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosCnaesListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'codigo';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<ICnae> = [];\r\n  dadosPagination: Array<ICnae> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  cnaeSelecionado: ICnae;\r\n  alteracoes: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private cnaesService: ComercialCadastrosCnaesService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Cnaes');\r\n    this.onDetailPanelEmitter();\r\n    this.setCnaeSelecionado();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Cnaes',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      cnae: [formValue.cnae],\r\n      associado: [formValue.associado],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      cnae: null,\r\n      associado: 0,\r\n      codSituacao: 1,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setCnaeSelecionado(): void {\r\n    this.cnaeSelecionado = {\r\n      codigo: null,\r\n      cnae: null,\r\n      associado: null,\r\n      descricao: null,\r\n      codParametroERP: 0,\r\n      codSituacao: 1,\r\n      situacao: null,\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.cnae) {\r\n      params.cnae = this.form.value.cnae;\r\n    }\r\n\r\n    if (this.form.value.associado) {\r\n      params.associado = this.form.value.associado;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    this.cnaesService\r\n      .getListaCnaes(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(cnae: ICnae): string {\r\n    let borderClass: string;\r\n\r\n    if (cnae.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (cnae.codSituacao === 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(cnae: ICnae): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.setCnaeSelecionado();\r\n    this.cnaeSelecionado = cnae;\r\n    this.alteracoes = [];\r\n\r\n    this.cnaesService\r\n      .getAlteracoes(cnae.codigo)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.alteracoes = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onEdit(cnae: ICnae): void {\r\n    this.router.navigate(['../editar', cnae.codigo], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, cnae: ICnae): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateCnae(index, cnae) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(cnae);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateCnae(index: number, cnae: ICnae): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.cnaesService.activateCnae(cnae.codigo);\r\n  }\r\n\r\n  onInactivate(index: number, cnae: ICnae): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateCnae(index, cnae) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(cnae);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateCnae(index: number, cnae: ICnae): Observable<any> {\r\n    this.loaderNavbar = true;\r\n\r\n    this.dadosPagination[index].codSituacao = 2;\r\n\r\n    return this.cnaesService.inactivateCnae(cnae.codigo);\r\n  }\r\n\r\n  refreshMainData(cnae: ICnae): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (cnae.codigo === this.dados[i].codigo) {\r\n        this.dados[i].codSituacao = cnae.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Cnaes\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n     <div class=\\\"row\\\" #scrollToFilter>\\r\\n      <div class=\\\"col\\\">\\r\\n        <advanced-filter>\\r\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-lg-4\\\">\\r\\n                <label for=\\\"cnae\\\">\\r\\n                  <span class=\\\"mr-1\\\">Cnae</span>\\r\\n                  <ng-template #tooltipLabelCnaeTemplate>\\r\\n                    <p class=\\\"text-nowrap mb-0\\\">Código ou Descrição</p>\\r\\n                    <p class=\\\"text-nowrap mb-0\\\">do Cnae</p>\\r\\n                  </ng-template>\\r\\n                  <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelCnaeTemplate\\\" container=\\\"body\\\"></i>\\r\\n                </label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"cnae\\\"\\r\\n                  (keydown.enter)=\\\"onFilter()\\\">\\r\\n              </div>\\r\\n              <!-- <div class=\\\"form-group col-lg-3\\\">\\r\\n                <label for=\\\"associado\\\">Associação com TID</label>\\r\\n                <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"associado\\\"\\r\\n                  formControlName=\\\"associado\\\">\\r\\n                  <option value=\\\"0\\\">Todos</option>\\r\\n                  <option value=\\\"1\\\">Sim</option>\\r\\n                  <option value=\\\"2\\\">Não</option>\\r\\n                </select>\\r\\n              </div> -->\\r\\n              <div class=\\\"form-group col-lg-3\\\">\\r\\n                <label for=\\\"codSituacao\\\">Situação</label>\\r\\n                <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"codSituacao\\\"\\r\\n                  formControlName=\\\"codSituacao\\\">\\r\\n                  <option value=\\\"0\\\">Todos</option>\\r\\n                  <option value=\\\"1\\\">Ativos</option>\\r\\n                  <option value=\\\"2\\\">Inativos</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label for=\\\"registros\\\">Registros</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"registros\\\"\\r\\n                  formControlName=\\\"registros\\\">\\r\\n                  <option>25</option>\\r\\n                  <option>50</option>\\r\\n                  <option>100</option>\\r\\n                  <option>200</option>\\r\\n                  <option>300</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </advanced-filter>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <subtitles\\r\\n          [data]=\\\"subtitles\\\"\\r\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        </subtitles>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col-2\\\">Código</th>\\r\\n              <th scope=\\\"col-2\\\">Cnae</th>\\r\\n              <th scope=\\\"col-4\\\">Descrição</th>\\r\\n              <!-- <th scope=\\\"col-2\\\">Código TID</th> -->\\r\\n              <th scope=\\\"col-2\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let cnae of dadosPagination; let i = index\\\" [class.table-active]=\\\"cnae.codigo == cnaeSelecionado.codigo\\\">\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                [ngClass]=\\\"classStatusBorder(cnae)\\\"\\r\\n                (click)=\\\"onDetails(cnae)\\\">\\r\\n                {{ cnae.codigo }}\\r\\n              </td>\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                (click)=\\\"onDetails(cnae)\\\">\\r\\n                {{ cnae.cnae }}\\r\\n              </td>\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                (click)=\\\"onDetails(cnae)\\\">\\r\\n                {{ cnae.descricao | uppercase }}\\r\\n              </td>\\r\\n              <!-- <td\\r\\n                class=\\\"hover\\\"\\r\\n                (click)=\\\"onDetails(cnae)\\\">\\r\\n                {{ cnae.codParametroERP }}\\r\\n              </td> -->\\r\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span *ngIf=\\\"cnae.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, cnae)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"cnae.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, cnae)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(cnae)\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n        <empty-result\\r\\n          message=\\\"Nenhuma informação encontrada\\\"\\r\\n          class=\\\"my-3\\\"\\r\\n          *ngIf=\\\"dadosEmpty\\\">\\r\\n        </empty-result>\\r\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n          <pagination\\r\\n            [maxSize]=\\\"maxSize\\\"\\r\\n            [(totalItems)]=\\\"totalItems\\\"\\r\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n            [boundaryLinks]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"currentPage\\\"\\r\\n            previousText=\\\"&lsaquo;\\\"\\r\\n            nextText=\\\"&rsaquo;\\\"\\r\\n            firstText=\\\"&laquo;\\\"\\r\\n            lastText=\\\"&raquo;\\\">\\r\\n          </pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n        <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\r\\n          <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                <th scope=\\\"col\\\">Usuário</th>\\r\\n                <th scope=\\\"col\\\">Alteração</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\r\\n                <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\r\\n                <td>{{ alteracao.mensagem | uppercase }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </app-body>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosCnaesRoutingModule } from './cnaes-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosCnaesListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosCnaesFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosCnaesListaComponent,\r\n    ComercialCadastrosCnaesFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosCnaesRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n  ],\r\n  providers: [PNotifyService],\r\n})\r\nexport class ComercialCadastrosCnaesModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosCnaesService } from '../cnaes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosCnaesFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(private cnaesService: ComercialCadastrosCnaesService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.cnaesService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codCnae: null,\r\n        cnae: null,\r\n        descricao: null,\r\n        codParametroERP: null,\r\n        codSituacao: null,\r\n        situacao: null,\r\n      },\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jbmFlcy9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosCnaesFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosCnaesListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosCnaesFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialCadastrosCnaesListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosCnaesFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosCnaesFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosCnaesFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosCnaesFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosCnaesRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { ICnae } from './models/cnaes';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosCnaesService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/cnaes`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaCnaes(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codCnae: number): Observable<any> {\r\n    return this.http.get(`${this.API}/alteracoes/${codCnae}`).pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codCnae: number): Observable<any> {\r\n    return this.http.get(`${this.API}/detalhes/${codCnae}`).pipe(take(1));\r\n  }\r\n\r\n  private saveCnae(cnae: ICnae) {\r\n    return this.http.post(`${this.API}/salvar`, cnae).pipe(take(1));\r\n  }\r\n\r\n  private updateCnae(cnae: ICnae) {\r\n    return this.http.put(`${this.API}/atualizar`, cnae).pipe(take(1));\r\n  }\r\n\r\n  save(cnae: ICnae): Observable<any> {\r\n    if (cnae.codigo !== null) {\r\n      return this.updateCnae(cnae);\r\n    }\r\n\r\n    return this.saveCnae(cnae);\r\n  }\r\n\r\n  activateCnae(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  inactivateCnae(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n"]}