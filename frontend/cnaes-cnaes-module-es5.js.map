{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/cnaes/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/cnaes/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/cnaes/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/cnaes/lista/lista.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/cnaes/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/cnaes/cnaes.module.ts","webpack:///src/app/modules/comercial/cadastros/cnaes/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/cnaes/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/cnaes/cnaes-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/cnaes/cnaes.service.ts","webpack:///src/app/guards/form-deactivate.guard.ts"],"names":["ComercialCadastrosCnaesFormularioComponent","activatedRoute","router","location","formBuilder","cnaesService","pnotifyService","atividadesService","titleService","loaderFullScreen","breadCrumbTree","formChanged","getPNotify","registrarAcesso","setBreadCrumb","setFormBuilder","subscribe","params","id","appTitle","setTitle","descricao","routerLink","idSubModulo","snapshot","data","detalhes","success","form","group","codigo","cnae","required","codParametroERP","codSituacao","error","back","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","valid","loaderNavbar","submittingForm","save","value","pipe","next","response","hasOwnProperty","reset","mensagem","navigate","relativeTo","notice","confirm","selector","template","ComercialCadastrosCnaesListaComponent","confirmModalService","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","setFormFilter","onDetailPanelEmitter","setCnaeSelecionado","showDetailPanelSubscription","unsubscribe","config","event","showing","formValue","checkRouterParams","associado","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","cnaeSelecionado","situacao","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaCnaes","slice","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","show","getAlteracoes","setTimeout","loadedFinished","index","confirmActivate","asObservable","result","activateCnae","refreshMainData","showConfirm","confirmInactive","inactivateCnae","i","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialCadastrosCnaesModule","declarations","imports","forRoot","providers","ComercialCadastrosCnaesFormularioResolverGuard","route","getDetalhes","codCnae","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosCnaesRoutingModule","forChild","exports","ComercialCadastrosCnaesService","http","API","httpParams","param","append","post","put","updateCnae","saveCnae","FormDeactivateGuard","state","formCanDeactivate"],"mappings":"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","file":"cnaes-cnaes-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jbmFlcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"cnae\\\">\\n              <span class=\\\"mr-1\\\">Cnae</span>\\n              <ng-template #tooltipLabelCnaeTemplate>\\n                <p class=\\\"text-nowrap mb-0\\\">Código do Cnae</p>\\n                <p class=\\\"text-nowrap mb-0\\\">sem pontuação</p>\\n              </ng-template>\\n              <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelCnaeTemplate\\\" container=\\\"body\\\"></i>\\n            </label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"cnae\\\"\\n              formControlName=\\\"cnae\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('cnae') + ' ' + onFieldRequired(form.controls.cnae)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnae')\\\" message=\\\"Cnae é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"descricao\\\">Descrição do Cnae</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"descricao\\\"\\n              formControlName=\\\"descricao\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('descricao') + ' ' + onFieldRequired(form.controls.descricao)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('descricao')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <!-- <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codParametroERP\\\">Código TID</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"codParametroERP\\\"\\n              formControlName=\\\"codParametroERP\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('codParametroERP') + ' ' + onFieldRequired(form.controls.codParametroERP)\\\">\\n          </div> -->\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codSituacao\\\">Situação</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"codSituacao\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n              <option value=\\\"1\\\">Ativo</option>\\n              <option value=\\\"2\\\">Inativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosCnaesService } from '../cnaes.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { ICnae } from '../models/cnaes';\n\n@Component({\n  selector: 'comercial-cadastros-cnaes-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosCnaesFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar: boolean;\n  loaderFullScreen = true;\n\n  appTitle: string;\n  breadCrumbTree: Array<any> = [];\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private cnaesService: ComercialCadastrosCnaesService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar Cnae';\n      } else {\n        this.appTitle = 'Novo Cnae';\n      }\n\n      this.titleService.setTitle(this.appTitle);\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Cnaes',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/cnaes/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes: ICnae = this.activatedRoute.snapshot.data.detalhes.data;\n\n      this.form = this.formBuilder.group({\n        codigo: [detalhes.codigo],\n        cnae: [detalhes.cnae, [Validators.required]],\n        descricao: [detalhes.descricao, [Validators.required]],\n        codParametroERP: [detalhes.codParametroERP],\n        codSituacao: [\n          detalhes.codSituacao ? detalhes.codSituacao : 1,\n          [Validators.required],\n        ],\n      });\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n\n    this.loaderFullScreen = false;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n\n        this.cnaesService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe({\n            next: (response: any) => {\n              if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                this.form.reset();\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  if (params.hasOwnProperty('id')) {\n                    this.location.back();\n                  } else {\n                    this.router.navigate(['../lista'], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  }\n                });\n              } else if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === false\n              ) {\n                this.pnotifyService.notice(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              this.pnotifyService.error();\n            }\n          });\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosCnaesService } from '../cnaes.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { ICnae } from '../models/cnaes';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-cnaes-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosCnaesListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  orderBy = 'codigo';\n  orderType = 'ASC';\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<ICnae> = [];\n  dadosPagination: Array<ICnae> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  cnaeSelecionado: ICnae;\n  alteracoes: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private cnaesService: ComercialCadastrosCnaesService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Cnaes');\n    this.onDetailPanelEmitter();\n    this.setCnaeSelecionado();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Cnaes',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      cnae: [formValue.cnae],\n      associado: [formValue.associado],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n    this.loaderFullScreen = false;\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      cnae: null,\n      associado: 0,\n      codSituacao: 1,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setCnaeSelecionado(): void {\n    this.cnaeSelecionado = {\n      codigo: null,\n      cnae: null,\n      associado: null,\n      descricao: null,\n      codParametroERP: 0,\n      codSituacao: 1,\n      situacao: null,\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.cnae) {\n      params.cnae = this.form.value.cnae;\n    }\n\n    if (this.form.value.associado) {\n      params.associado = this.form.value.associado;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    this.cnaesService\n      .getListaCnaes(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(cnae: ICnae): string {\n    let borderClass: string;\n\n    if (cnae.codSituacao === 1) {\n      borderClass = 'border-success';\n    } else if (cnae.codSituacao === 2) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  onDetails(cnae: ICnae): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.setCnaeSelecionado();\n    this.cnaeSelecionado = cnae;\n    this.alteracoes = [];\n\n    this.cnaesService\n      .getAlteracoes(cnae.codigo)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.alteracoes = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        error: (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onEdit(cnae: ICnae): void {\n    this.router.navigate(['../editar', cnae.codigo], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, cnae: ICnae): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateCnae(index, cnae) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(cnae);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateCnae(index: number, cnae: ICnae): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.cnaesService.activateCnae(cnae.codigo);\n  }\n\n  onInactivate(index: number, cnae: ICnae): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateCnae(index, cnae) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(cnae);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateCnae(index: number, cnae: ICnae): Observable<any> {\n    this.loaderNavbar = true;\n\n    this.dadosPagination[index].codSituacao = 2;\n\n    return this.cnaesService.inactivateCnae(cnae.codigo);\n  }\n\n  refreshMainData(cnae: ICnae): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (cnae.codigo === this.dados[i].codigo) {\n        this.dados[i].codSituacao = cnae.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Cnaes\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n     <div class=\\\"row\\\" #scrollToFilter>\\n      <div class=\\\"col\\\">\\n        <advanced-filter>\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"cnae\\\">\\n                  <span class=\\\"mr-1\\\">Cnae</span>\\n                  <ng-template #tooltipLabelCnaeTemplate>\\n                    <p class=\\\"text-nowrap mb-0\\\">Código ou Descrição</p>\\n                    <p class=\\\"text-nowrap mb-0\\\">do Cnae</p>\\n                  </ng-template>\\n                  <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelCnaeTemplate\\\" container=\\\"body\\\"></i>\\n                </label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"cnae\\\"\\n                  (keydown.enter)=\\\"onFilter()\\\">\\n              </div>\\n              <!-- <div class=\\\"form-group col-lg-3\\\">\\n                <label for=\\\"associado\\\">Associação com TID</label>\\n                <select\\n                  class=\\\"form-control custom-select\\\"\\n                  id=\\\"associado\\\"\\n                  formControlName=\\\"associado\\\">\\n                  <option value=\\\"0\\\">Todos</option>\\n                  <option value=\\\"1\\\">Sim</option>\\n                  <option value=\\\"2\\\">Não</option>\\n                </select>\\n              </div> -->\\n              <div class=\\\"form-group col-lg-3\\\">\\n                <label for=\\\"codSituacao\\\">Situação</label>\\n                <select\\n                  class=\\\"form-control custom-select\\\"\\n                  id=\\\"codSituacao\\\"\\n                  formControlName=\\\"codSituacao\\\">\\n                  <option value=\\\"0\\\">Todos</option>\\n                  <option value=\\\"1\\\">Ativos</option>\\n                  <option value=\\\"2\\\">Inativos</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group col-lg-2\\\">\\n                <label for=\\\"registros\\\">Registros</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"registros\\\"\\n                  formControlName=\\\"registros\\\">\\n                  <option>25</option>\\n                  <option>50</option>\\n                  <option>100</option>\\n                  <option>200</option>\\n                  <option>300</option>\\n                </select>\\n              </div>\\n            </div>\\n          </form>\\n        </advanced-filter>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <subtitles\\n          [data]=\\\"subtitles\\\"\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        </subtitles>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col-2\\\">Código</th>\\n              <th scope=\\\"col-2\\\">Cnae</th>\\n              <th scope=\\\"col-4\\\">Descrição</th>\\n              <!-- <th scope=\\\"col-2\\\">Código TID</th> -->\\n              <th scope=\\\"col-2\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let cnae of dadosPagination; let i = index\\\" [class.table-active]=\\\"cnae.codigo == cnaeSelecionado.codigo\\\">\\n              <td\\n                class=\\\"hover\\\"\\n                [ngClass]=\\\"classStatusBorder(cnae)\\\"\\n                (click)=\\\"onDetails(cnae)\\\">\\n                {{ cnae.codigo }}\\n              </td>\\n              <td\\n                class=\\\"hover\\\"\\n                (click)=\\\"onDetails(cnae)\\\">\\n                {{ cnae.cnae }}\\n              </td>\\n              <td\\n                class=\\\"hover\\\"\\n                (click)=\\\"onDetails(cnae)\\\">\\n                {{ cnae.descricao | uppercase }}\\n              </td>\\n              <!-- <td\\n                class=\\\"hover\\\"\\n                (click)=\\\"onDetails(cnae)\\\">\\n                {{ cnae.codParametroERP }}\\n              </td> -->\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span *ngIf=\\\"cnae.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, cnae)\\\">\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\n                  </button>\\n                </span>\\n                <span *ngIf=\\\"cnae.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, cnae)\\\">\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(cnae)\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <empty-result\\n          message=\\\"Nenhuma informação encontrada\\\"\\n          class=\\\"my-3\\\"\\n          *ngIf=\\\"dadosEmpty\\\">\\n        </empty-result>\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n          <pagination\\n            [maxSize]=\\\"maxSize\\\"\\n            [(totalItems)]=\\\"totalItems\\\"\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n            [boundaryLinks]=\\\"true\\\"\\n            [(ngModel)]=\\\"currentPage\\\"\\n            previousText=\\\"&lsaquo;\\\"\\n            nextText=\\\"&rsaquo;\\\"\\n            firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\">\\n          </pagination>\\n        </div>\\n      </div>\\n      <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n        <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\n          <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n                <th scope=\\\"col\\\">Usuário</th>\\n                <th scope=\\\"col\\\">Alteração</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\n                <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\n                <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\n                <td>{{ alteracao.mensagem | uppercase }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </detail-panel>\\n      </div>\\n    </div>\\n  </app-body>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosCnaesRoutingModule } from './cnaes-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosCnaesListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosCnaesFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosCnaesListaComponent,\n    ComercialCadastrosCnaesFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialCadastrosCnaesRoutingModule,\n    SharedModule,\n    TemplatesModule,\n  ],\n  providers: [PNotifyService],\n})\nexport class ComercialCadastrosCnaesModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosCnaesService } from '../cnaes.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosCnaesFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(private cnaesService: ComercialCadastrosCnaesService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.cnaesService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codCnae: null,\n        cnae: null,\n        descricao: null,\n        codParametroERP: null,\n        codSituacao: null,\n        situacao: null,\n      },\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jbmFlcy9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosCnaesFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosCnaesListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosCnaesFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialCadastrosCnaesListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialCadastrosCnaesFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosCnaesFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosCnaesFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosCnaesFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosCnaesRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { ICnae } from './models/cnaes';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosCnaesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/cnaes`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaCnaes(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codCnae: number): Observable<any> {\n    return this.http.get(`${this.API}/alteracoes/${codCnae}`).pipe(take(1));\n  }\n\n  getDetalhes(codCnae: number): Observable<any> {\n    return this.http.get(`${this.API}/detalhes/${codCnae}`).pipe(take(1));\n  }\n\n  private saveCnae(cnae: ICnae) {\n    return this.http.post(`${this.API}/salvar`, cnae).pipe(take(1));\n  }\n\n  private updateCnae(cnae: ICnae) {\n    return this.http.put(`${this.API}/atualizar`, cnae).pipe(take(1));\n  }\n\n  save(cnae: ICnae): Observable<any> {\n    if (cnae.codigo !== null) {\n      return this.updateCnae(cnae);\n    }\n\n    return this.saveCnae(cnae);\n  }\n\n  activateCnae(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n  }\n\n  inactivateCnae(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n"]}