{"version":3,"sources":["webpack:///src/app/modules/comercial/reenvio-xml/lista/lista.component.html","webpack:///src/app/modules/comercial/reenvio-xml/reenvio-xml.service.ts","webpack:///src/app/modules/comercial/reenvio-xml/reenvio-xml-routing.module.ts","webpack:///src/app/modules/comercial/reenvio-xml/lista/lista.component.ts","webpack:///src/app/modules/comercial/reenvio-xml/lista/lista.component.scss","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/reenvio-xml/reenvio-xml.module.ts"],"names":["ComercialReenvioXmlService","http","API","get","pipe","params","record","put","providedIn","routes","path","component","ComercialReenvioXmlRoutingModule","imports","forChild","exports","ComercialReenvioXmlListaComponent","activatedRoute","router","location","reenvioXMLService","formBuilder","pnotifyService","atividadesService","titleService","comercialService","detailPanelService","loaderNavbar","loaderFullScreen","breadCrumbTree","descricao","routerLink","showDetailPanel","enviosTotal","mes","ultimo","ultimoEnvio","horaUltimoEnvio","minutosUltimoEnvio","empresas","notasFiscais","dataLoaded","dataEmpty","searchSubmitted","registrarAcesso","getFiltros","setFormFilter","setFormReagendar","listCounts","setTitle","onDetailPanelEmitter","showDetailPanelSubscription","unsubscribe","subscribe","config","event","showing","onCloseDetailPanel","getEmpresas","tipo","idEmpresa","next","response","responseCode","result","unshift","nomeEmpresa","error","back","formValue","checkRouterParams","formFilter","group","codEmpresa","required","numNota","formReagendar","email1","value","disabled","email","email2","email3","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","setSubmittedSearch","search","forEach","formKey","paramKey","isNaN","Number","getContadores","totalEnvios","enviosMes","split","toFixed","setRouterParams","hide","notaFiscal","getLista","notice","navigate","relativeTo","q","btoa","stringify","enviado","contatos","loadedFinished","pedido","controls","setValue","field","enable","validation","checkValidatorsReagendamento","valid","formObj","getRawValue","putReagendarEnvio","numNfe","success","selector","template","ComercialService","httpParams","param","append","ComercialReenvioXmlModule","declarations","forRoot","providers"],"mappings":"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","file":"reenvio-xml-reenvio-xml-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Reenvio de XML\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onReagendarEnvio()\\\"\\n    [disabled]=\\\"!showDetailPanel\\\">\\n    Reagendar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\"\\n    [disabled]=\\\"!formFilter.valid\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center mb-2\\\">\\n    <div class=\\\"col-md-5\\\">\\n      <ul class=\\\"list-unstyled mb-0 d-flex justify-content-around\\\">\\n        <li class=\\\"text-center px-3\\\">\\n          <h6 class=\\\"text-muted font-weight-light\\\">Total de envios</h6>\\n          <div class=\\\"text-success\\\">\\n            <h4>\\n              <strong\\n                counto\\n                [step]=\\\"30\\\"\\n                [countTo]=\\\"enviosTotal\\\"\\n                [countFrom]=\\\"0\\\"\\n                [duration]=\\\"3\\\"\\n                (countoChange)=\\\"countoEnviosTotal = $event\\\">\\n                {{ handleCounter(countoEnviosTotal) }}\\n              </strong>\\n            </h4>\\n          </div>\\n        </li>\\n        <li class=\\\"text-center px-3\\\">\\n          <h6 class=\\\"text-muted font-weight-light\\\">Envios no mês</h6>\\n          <div class=\\\"text-primary\\\">\\n            <h4>\\n              <strong\\n                counto\\n                [step]=\\\"30\\\"\\n                [countTo]=\\\"mes\\\"\\n                [countFrom]=\\\"0\\\"\\n                [duration]=\\\"3\\\"\\n                (countoChange)=\\\"countoMes = $event\\\">\\n                {{ handleCounter(countoMes) }}\\n              </strong>\\n            </h4>\\n          </div>\\n        </li>\\n        <li class=\\\"text-center px-3\\\">\\n          <h6 class=\\\"text-muted font-weight-light\\\">Último envio</h6>\\n          <div class=\\\"text-secondary\\\">\\n            <h4 class=\\\"d-flex justify-content-center\\\">\\n              <strong\\n                counto\\n                [step]=\\\"30\\\"\\n                [countTo]=\\\"horaUltimoEnvio\\\"\\n                [countFrom]=\\\"0\\\"\\n                [duration]=\\\"3\\\"\\n                (countoChange)=\\\"countoHoraUltimoEnvio = $event\\\">\\n                {{ handleCounterHorario(countoHoraUltimoEnvio) }}\\n              </strong>\\n              :\\n              <strong\\n                counto\\n                [step]=\\\"30\\\"\\n                [countTo]=\\\"minutosUltimoEnvio\\\"\\n                [countFrom]=\\\"0\\\"\\n                [duration]=\\\"3\\\"\\n                (countoChange)=\\\"countoMinutosUltimoEnvio = $event\\\">\\n                {{ handleCounterHorario(countoMinutosUltimoEnvio) }}\\n              </strong>\\n            </h4>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n  <advanced-filter>\\n    <form [formGroup]=\\\"formFilter\\\" autocomplete=\\\"new-password\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-2\\\">\\n          <label for=\\\"codEmpresa\\\">Empresa</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"empresas\\\"\\n            formControlName=\\\"codEmpresa\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"codEmpresa\\\"\\n            bindLabel=\\\"nomeEmpresa\\\"\\n            bindValue=\\\"idEmpresa\\\">\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2\\\">\\n          <label for=\\\"numNota\\\">Número da NF</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"numNota\\\"\\n            autocomplete=\\\"new-password\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col-12': !showDetailPanel, 'col-7 pr-0': showDetailPanel}\\\">\\n      <custom-table *ngIf=\\\"notasFiscais.length > 0 && !dataEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th style=\\\"width: 5%;\\\" scope=\\\"col\\\"></th>\\n            <th style=\\\"width: 15%;\\\" scope=\\\"col\\\" class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">Unidade</th>\\n            <th style=\\\"width: 10%;\\\" scope=\\\"col\\\" class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">Enviado em</th>\\n            <th style=\\\"width: 10%;\\\" scope=\\\"col\\\" class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">Faturado em</th>\\n            <th style=\\\"width: 15%;\\\" scope=\\\"col\\\" class=\\\"text-center\\\">Pedido / Nota</th>\\n            <th style=\\\"width: 20%;\\\" scope=\\\"col\\\" class=\\\"text-center\\\">Cliente</th>\\n            <th style=\\\"width: 25%;\\\" scope=\\\"col\\\" class=\\\"text-center\\\">Vendedor</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let notaFiscal of notasFiscais\\\" [class.table-active]=\\\"notaFiscal.pedido == pedido\\\">\\n            <td class=\\\"text-center\\\">\\n              <i\\n                class=\\\"text-black-50 fas fa-envelope mr-3\\\"\\n                *ngIf=\\\"notaFiscal.enviado == 1\\\"\\n                tooltip=\\\"E-mail enviado\\\"\\n                placement=\\\"right\\\">\\n              </i>\\n              <i\\n                class=\\\"text-warning far fa-envelope mr-3\\\"\\n                *ngIf=\\\"notaFiscal.enviado == 0\\\"\\n                tooltip=\\\"E-mail reagendado\\\"\\n                placement=\\\"right\\\">\\n              </i>\\n            </td>\\n            <td\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"viewDetails(notaFiscal)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              {{ notaFiscal.empresa }}\\n            </td>\\n            <td\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"viewDetails(notaFiscal)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              {{ notaFiscal.dtEnvio | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"viewDetails(notaFiscal)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              {{ notaFiscal.dtFaturamento | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"viewDetails(notaFiscal)\\\">\\n              {{ notaFiscal.pedido | number:'1.0-0' }} / {{ notaFiscal.numNfe | number:'1.0-0' }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              (click)=\\\"viewDetails(notaFiscal)\\\">\\n              {{ notaFiscal.nomeFantasia }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              (click)=\\\"viewDetails(notaFiscal)\\\">\\n              {{ notaFiscal.nomeVendedor }}\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result\\n        class=\\\"my-3\\\"\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        *ngIf=\\\"dataEmpty\\\">\\n      </empty-result>\\n    </div>\\n    <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel panelTitle=\\\"Dados para envio\\\">\\n        <form [formGroup]=\\\"formReagendar\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"border-right border-left border-bottom\\\">\\n            <div class=\\\"px-3 py-2\\\">\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-10\\\">\\n                  <label for=\\\"email1\\\">E-mail NFe</label>\\n                  <input\\n                    type=\\\"email\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"email1\\\"\\n                    formControlName=\\\"email1\\\">\\n                </div>\\n                <div class=\\\"col-1 pt-4 d-flex justify-content-center\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon-sm\\\"\\n                    (click)=\\\"onEditEmail('email1')\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </div>\\n                <div class=\\\"col-1 pt-4 d-flex justify-content-center\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon-sm\\\"\\n                    (click)=\\\"onDeleteEmail('email1')\\\">\\n                    <i class=\\\"fas fa-trash\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\"><hr class=\\\"m-0\\\"></div>\\n            </div>\\n            <div class=\\\"px-3 py-2\\\">\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-10\\\">\\n                  <label for=\\\"email2\\\">E-mail NFe</label>\\n                  <input\\n                    type=\\\"email\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"email2\\\"\\n                    formControlName=\\\"email2\\\">\\n                </div>\\n                <div class=\\\"col-1 pt-4 d-flex justify-content-center\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon-sm\\\"\\n                    (click)=\\\"onEditEmail('email2')\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </div>\\n                <div class=\\\"col-1 pt-4 d-flex justify-content-center\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon-sm\\\"\\n                    (click)=\\\"onDeleteEmail('email2')\\\">\\n                    <i class=\\\"fas fa-trash\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\"><hr class=\\\"m-0\\\"></div>\\n            </div>\\n            <div class=\\\"px-3 py-2\\\">\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-10\\\">\\n                  <label for=\\\"email3\\\">E-mail NFe</label>\\n                  <input\\n                    type=\\\"email\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"email3\\\"\\n                    formControlName=\\\"email3\\\">\\n                </div>\\n                <div class=\\\"col-1 pt-4 d-flex justify-content-center\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon-sm\\\"\\n                    (click)=\\\"onEditEmail('email3')\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </div>\\n                <div class=\\\"col-1 pt-4 d-flex justify-content-center\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon-sm\\\"\\n                    (click)=\\\"onDeleteEmail('email3')\\\">\\n                    <i class=\\\"fas fa-trash\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialReenvioXmlService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/reenvio-xml`;\n\n  constructor(protected http: HttpClient) {}\n\n  getContadores() {\n    return this.http.get(`${this.API}/contadores`).pipe(take(1));\n  }\n\n  getLista(params: any) {\n    return this.http\n      .get(`${this.API}/lista/${params['codEmpresa']}/${params['numNota']}`)\n      .pipe(take(1));\n  }\n\n  putReagendarEnvio(record: any) {\n    return this.http.put(`${this.API}/reagendar-envio`, record).pipe(take(1));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { ComercialReenvioXmlListaComponent } from './lista/lista.component';\n\nconst routes: Routes = [\n  { path: '', component: ComercialReenvioXmlListaComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialReenvioXmlRoutingModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialReenvioXmlService } from '../reenvio-xml.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialService } from '../../comercial.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { ReenvioXml } from '../models/reenvio-xml';\n\n@Component({\n  selector: 'comercial-reenvio-xml-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class ComercialReenvioXmlListaComponent implements OnInit, OnDestroy {\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home'\n    },\n    {\n      descricao: 'Reenvio de XML'\n    }\n  ];\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  enviosTotal = 0;\n  mes = 0;\n  ultimo = 0;\n  ultimoEnvio = 0;\n  horaUltimoEnvio = 0;\n  minutosUltimoEnvio = 0;\n\n  countoEnviosTotal: number;\n  countoMes: number;\n  countoHoraUltimoEnvio: number;\n  countoMinutosUltimoEnvio: number;\n\n  formFilter: FormGroup;\n  empresas: Array<any> = [];\n\n  notasFiscais: Array<ReenvioXml> = [];\n  dataLoaded = false;\n  dataEmpty = false;\n  searchSubmitted = false;\n\n  formReagendar: FormGroup;\n\n  notaFiscal: any;\n  pedido: number;\n\n  activatedRouteSubscription: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private reenvioXMLService: ComercialReenvioXmlService,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private comercialService: ComercialService,\n    private detailPanelService: DetailPanelService\n  ) {}\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.getFiltros();\n    this.setFormFilter();\n    this.setFormReagendar();\n    this.listCounts();\n    this.titleService.setTitle('Reenvio de XML');\n    this.onDetailPanelEmitter();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n\n        if (this.showDetailPanel === false) {\n          this.onCloseDetailPanel();\n        }\n      }\n    );\n  }\n\n  getFiltros(): void {\n    this.comercialService\n      .getEmpresas({ tipo: 'search', idEmpresa: '4,6,18,55,79,77,83' })\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.responseCode === 200) {\n            this.empresas = response.result;\n\n            this.empresas.unshift({\n              idEmpresa: 0,\n              nomeEmpresa: 'EXIBIR TODOS'\n            });\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.formFilter = this.formBuilder.group({\n      codEmpresa: [formValue.codEmpresa, Validators.required],\n      numNota: [formValue.numNota, Validators.required]\n    });\n  }\n\n  setFormReagendar(): void {\n    this.formReagendar = this.formBuilder.group({\n      email1: [{ value: null, disabled: true }, [Validators.email]],\n      email2: [{ value: null, disabled: true }, [Validators.email]],\n      email3: [{ value: null, disabled: true }, [Validators.email]]\n    });\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      codEmpresa: null,\n      numNota: null\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      queryParams => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.setSubmittedSearch();\n          this.search(params);\n\n          Object.keys(formValue).forEach(formKey => {\n            Object.keys(params).forEach(paramKey => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  listCounts(): void {\n    this.reenvioXMLService.getContadores().subscribe((response: any) => {\n      if (response.responseCode === 200) {\n        this.enviosTotal = response.result.totalEnvios;\n        this.mes = response.result.enviosMes;\n\n        let ultimoEnvio = response.result.ultimoEnvio.split(':');\n\n        this.horaUltimoEnvio = ultimoEnvio[0];\n        this.minutosUltimoEnvio = ultimoEnvio[1];\n      }\n    });\n  }\n\n  handleCounter(value: any): void {\n    return value.toFixed(0);\n  }\n\n  handleCounterHorario(value: any): void {\n    value = value.toFixed(0);\n\n    if (value < 10) {\n      value = `0${value}`;\n    }\n\n    return value;\n  }\n\n  onFilter(): void {\n    this.setRouterParams(this.formFilter.value);\n    this.setSubmittedSearch();\n  }\n\n  search(params: any): void {\n    if (this.searchSubmitted) {\n      this.loaderNavbar = true;\n      this.dataLoaded = false;\n      this.dataEmpty = false;\n      this.detailPanelService.hide();\n      this.notaFiscal = [];\n\n      this.reenvioXMLService\n        .getLista(params)\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n          })\n        )\n        .subscribe({\n          next: (response: any) => {\n            if (response.responseCode === 200) {\n              if (Object.keys(response.result).length > 0) {\n                this.notasFiscais = response.result;\n                this.dataLoaded = true;\n              } else {\n                this.dataEmpty = true;\n              }\n            } else if (response.responseCode === 206) {\n              this.pnotifyService.notice(\n                'Nota fiscal não faz parte dos seus clientes.'\n              );\n              this.dataEmpty = true;\n            } else if (response.responseCode === 204) {\n              this.dataEmpty = true;\n            }\n          },\n          error: (error: any) => {\n            this.pnotifyService.error('Erro ao carregar dados');\n          }\n        });\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) }\n    });\n    this.setSubmittedSearch();\n    this.search(params);\n  }\n\n  setSubmittedSearch(): void {\n    this.searchSubmitted = true;\n  }\n\n  viewDetails(notaFiscal: ReenvioXml): void {\n    if (\n      notaFiscal.enviado == 1 ||\n      (notaFiscal.enviado == 0 &&\n        notaFiscal.contatos.email1 == '' &&\n        notaFiscal.contatos.email2 == '' &&\n        notaFiscal.contatos.email3 == '')\n    ) {\n      this.detailPanelService.loadedFinished(false);\n      this.notaFiscal = notaFiscal;\n      this.pedido = notaFiscal.pedido;\n\n      this.formReagendar.controls.email1.setValue(notaFiscal.contatos.email1);\n      this.formReagendar.controls.email2.setValue(notaFiscal.contatos.email2);\n      this.formReagendar.controls.email3.setValue(notaFiscal.contatos.email3);\n    } else {\n      this.pnotifyService.notice('Essa nota fiscal já foi reagendada.');\n    }\n  }\n\n  onEditEmail(field: string): void {\n    this.formReagendar.controls[field].enable();\n  }\n\n  onDeleteEmail(field: string): void {\n    this.formReagendar.controls[field].setValue(null);\n  }\n\n  onCloseDetailPanel(): void {\n    this.notaFiscal = [];\n    this.pedido = null;\n\n    this.formReagendar.controls.email1.setValue(null);\n    this.formReagendar.controls.email2.setValue(null);\n    this.formReagendar.controls.email3.setValue(null);\n  }\n\n  checkValidatorsReagendamento(): boolean {\n    let validation = true;\n\n    if (\n      (this.formReagendar.value.email1 == '' ||\n        this.formReagendar.value.email1 == null) &&\n      (this.formReagendar.value.email2 == '' ||\n        this.formReagendar.value.email2 == null) &&\n      (this.formReagendar.value.email3 == '' ||\n        this.formReagendar.value.email3 == null)\n    ) {\n      validation = false;\n    }\n\n    return validation;\n  }\n\n  onReagendarEnvio(): void {\n    if (!this.checkValidatorsReagendamento()) {\n      this.pnotifyService.notice('Informe pelo menos um e-mail.');\n      return;\n    }\n\n    if (this.formReagendar.valid) {\n      this.loaderNavbar = true;\n      const formObj = this.formReagendar.getRawValue();\n\n      this.reenvioXMLService\n        .putReagendarEnvio({\n          idEmpresa: this.notaFiscal.idEmpresa,\n          pedido: this.notaFiscal.pedido,\n          email1: formObj.email1,\n          email2: formObj.email2,\n          email3: formObj.email3\n        })\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n            this.search({\n              codEmpresa: this.notaFiscal.idEmpresa,\n              numNota: this.notaFiscal.numNfe\n            });\n          })\n        )\n        .subscribe({\n          next: (response: any) => {\n            if (response.responseCode === 200) {\n              this.pnotifyService.success('O envio do e-mail foi reagendado.');\n            } else {\n              this.pnotifyService.error(\n                'Ocorreu um erro ao reagendar o envio.'\n              );\n            }\n          },\n          error: (error: any) => {\n            this.pnotifyService.error('Ocorreu um erro ao reagendar o envio.');\n          }\n        });\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL3JlZW52aW8teG1sL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// Counto\nimport { CountoModule } from 'angular2-counto';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialReenvioXmlRoutingModule } from './reenvio-xml-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialReenvioXmlListaComponent } from './lista/lista.component';\n\n@NgModule({\n  declarations: [ComercialReenvioXmlListaComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    CountoModule,\n    ComercialReenvioXmlRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialReenvioXmlModule {}\n"]}