{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/concorrentes/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/concorrentes/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/concorrentes/concorrentes.module.ts","webpack:///src/app/modules/comercial/cadastros/concorrentes/concorrentes.service.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/concorrentes/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/concorrentes/concorrentes-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/concorrentes/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/concorrentes/lista/lista.component.html","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/concorrentes/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/concorrentes/formulario/formulario.component.ts"],"names":["ComercialCadastrosConcorrenteListaComponent","activatedRoute","router","formBuilder","concorrenteService","pnotifyService","atividadesService","titleService","confirmModalService","detailPanelService","breadCrumbTree","showDetailPanel","orderBy","orderType","showAdvancedFilter","maxSize","itemsPerPage","currentPage","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","getPNotify","registrarAcesso","setBreadCrumb","setFormFilter","setTitle","onDetailPanelEmitter","setConcorrenteSelecionado","subscribe","params","descricao","routerLink","showDetailPanelSubscription","config","event","showing","formValue","checkRouterParams","form","group","codConcorrenteTid","nomeConcorrente","nomeMarcaAco","pagina","registros","required","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","value","column","onFilter","hide","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","field","controls","setValue","disable","enable","loaderNavbar","getListaConcorrentes","pipe","next","response","hasOwnProperty","success","data","console","log","slice","totalItems","error","mensagem","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","concorrente","concorrenteSelecionado","codConcorrente","codSituacao","codUsuarioCadastro","nomeUsuarioCadastro","dataCadastro","show","getAlteracoes","setTimeout","loadedFinished","i","nomeCampo","de","para","index","confirmActivate","asObservable","result","activateConcorrente","refreshMainData","showConfirm","confirmInactive","inactivateConcorrente","selector","template","ComercialCadastrosConcorrenteModule","declarations","imports","forRoot","providers","ComercialCadastrosConcorrenteService","http","API","httpParams","param","append","get","codCnae","record","post","put","updateConcorrente","saveConcorrente","codigo","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","routes","path","component","resolve","detalhes","canDeactivate","redirectTo","pathMatch","ComercialCadastrosConcorrenteRoutingModule","forChild","exports","ComercialCadastrosTransportadoraFormularioResolverGuard","route","id","getConcorrente","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosConcorrenteFormularioComponent","location","formChanged","setFormBuilder","appTitle","snapshot","maxLength","back","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","valid","submittingForm","save","reset","notice","confirm"],"mappings":"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","file":"concorrentes-concorrentes-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"nomeConcorrente\\\">Nome do concorrente</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeConcorrente\\\"\\r\\n              formControlName=\\\"nomeConcorrente\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeConcorrente') + ' ' + onFieldRequired(form.controls.nomeConcorrente)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeConcorrente')\\\" message=\\\"Nome do concorrente é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"nomeMarcaAco\\\">Nome da marca de aço</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeMarcaAco\\\"\\r\\n              formControlName=\\\"nomeMarcaAco\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"codSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"codSituacao\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n              <option value='1'>Ativo</option>\\r\\n              <option value='0'>Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosConcorrenteService } from '../concorrentes.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { Concorrente } from './../models/concorrente';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-concorrente-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosConcorrenteListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar: boolean;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'nomeConcorrente';\r\n  orderType = 'ASC';\r\n\r\n  showAdvancedFilter = true;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems: number;\r\n\r\n  dados: Array<Concorrente> = [];\r\n  dadosPagination: Array<Concorrente> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  concorrenteSelecionado: Concorrente;\r\n  alteracoes: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private concorrenteService: ComercialCadastrosConcorrenteService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Concorrentes');\r\n    this.onDetailPanelEmitter();\r\n    this.setConcorrenteSelecionado();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Concorrentes',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      codConcorrenteTid: [formValue.codConcorrenteTid],\r\n      nomeConcorrente: [formValue.nomeConcorrente],\r\n      nomeMarcaAco: [formValue.nomeMarcaAco],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      codConcorrenteTid: null,\r\n      nomeConcorrente: null,\r\n      nomeMarcaAco: null,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    this.detailPanelService.hide();\r\n    this.itemsPerPage = this.form.value.registros;\r\n    this.currentPage = 1;\r\n    this.setRouterParams(this.verificaParams());\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.codConcorrenteTid) {\r\n      params.codConcorrenteTid = this.form.value.codConcorrenteTid;\r\n    }\r\n\r\n    if (this.form.value.nomeConcorrente) {\r\n      params.nomeConcorrente = this.form.value.nomeConcorrente;\r\n    }\r\n\r\n    if (this.form.value.nomeMarcaAco) {\r\n      params.nomeMarcaAco = this.form.value.nomeMarcaAco;\r\n    }\r\n\r\n    if (this.form.value.nomeMarcaAco) {\r\n      params.nomeMarcaAco = this.form.value.nomeMarcaAco;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  onAdvancedFilter(): void {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  onInput(field: string): void {\r\n    if (field === 'codConcorrenteTid') {\r\n      if (this.form.value.codConcorrenteTid.length > 0) {\r\n        this.form.controls.nomeConcorrente.setValue(null);\r\n        this.form.controls.nomeConcorrente.disable();\r\n        this.form.controls.nomeMarcaAco.setValue(null);\r\n        this.form.controls.nomeMarcaAco.disable();\r\n      } else {\r\n        this.form.controls.nomeConcorrente.enable();\r\n        this.form.controls.nomeMarcaAco.enable();\r\n      }\r\n    } else if (field === 'nomeConcorrente' || field === 'nomeMarcaAco') {\r\n      if (\r\n        (field === 'nomeConcorrente' &&\r\n          this.form.value.nomeConcorrente.length > 0) ||\r\n        (field === 'nomeMarcaAco' && this.form.value.nomeMarcaAco.length > 0)\r\n      ) {\r\n        this.form.controls.codConcorrenteTid.setValue(null);\r\n        this.form.controls.codConcorrenteTid.disable();\r\n      } else {\r\n        this.form.controls.codConcorrenteTid.enable();\r\n      }\r\n    }\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.concorrenteService\r\n      .getListaConcorrentes(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            console.log(this.dados)\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  viewRegister(concorrente: Concorrente): void {\r\n    this.router.navigate(['../editar', concorrente.codConcorrenteTid], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  setConcorrenteSelecionado(){\r\n    this.concorrenteSelecionado = {\r\n      codConcorrente: null,\r\n      codConcorrenteTid: null,\r\n      nomeConcorrente: null,\r\n      nomeMarcaAco: null,\r\n      codSituacao: null,\r\n      codUsuarioCadastro: null,\r\n      nomeUsuarioCadastro: null,\r\n      dataCadastro: null,\r\n    }\r\n  }\r\n\r\n  onDetails(concorrente: Concorrente): void {\r\n    if(concorrente.codConcorrente != null){\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.setConcorrenteSelecionado();\r\n    this.concorrenteSelecionado = concorrente;\r\n    this.alteracoes = [];\r\n\r\n    this.concorrenteService\r\n      .getAlteracoes(concorrente.codConcorrente)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.alteracoes = response.data;\r\n\r\n            for (let i = 0; i < this.alteracoes.length; i++) {\r\n              if (this.alteracoes[i].nomeCampo == \"Situação\") {\r\n                if (this.alteracoes[i].de == 1){\r\n                  this.alteracoes[i].de = \"Ativo\"\r\n                } else if (this.alteracoes[i].de == 0){\r\n                  this.alteracoes[i].de = \"Inativo\"\r\n                }\r\n\r\n                if (this.alteracoes[i].para == 1){\r\n                  this.alteracoes[i].para = \"Ativo\"\r\n                } else if (this.alteracoes[i].para == 0){\r\n                  this.alteracoes[i].para = \"Inativo\"\r\n                }\r\n              }\r\n            }\r\n\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.detailPanelService.show();\r\n      this.alteracoes = [];\r\n      this.detailPanelService.loadedFinished(true);\r\n    }\r\n  }\r\n\r\n  onActivate(index: number, concorrente: Concorrente): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateConcorrente(index, concorrente) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(concorrente);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 0;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateConcorrente(index: number, concorrente: Concorrente): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.concorrenteService.activateConcorrente(concorrente.codConcorrenteTid);\r\n  }\r\n\r\n  onInactivate(index: number, concorrente: Concorrente): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateConcorrente(index, concorrente) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(concorrente);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateConcorrente(index: number, concorrente: Concorrente): Observable<any> {\r\n    this.loaderNavbar = true;\r\n\r\n    this.dadosPagination[index].codSituacao = 0;\r\n\r\n    return this.concorrenteService.inactivateConcorrente(concorrente.codConcorrenteTid);\r\n  }\r\n\r\n  refreshMainData(concorrente: Concorrente): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (concorrente.codConcorrenteTid === this.dados[i].codConcorrenteTid) {\r\n        this.dados[i].codSituacao = concorrente.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosConcorrenteRoutingModule } from './concorrentes-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosConcorrenteListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosConcorrenteFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosConcorrenteListaComponent,\r\n    ComercialCadastrosConcorrenteFormularioComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosConcorrenteRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class ComercialCadastrosConcorrenteModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { Concorrente } from './models/concorrente';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosConcorrenteService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/concorrentes`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaConcorrentes(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getConcorrente(codConcorrenteTid: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codConcorrenteTid}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codCnae: number): Observable<any> {\r\n    return this.http.get(`${this.API}/alteracoes/${codCnae}`).pipe(take(1));\r\n  }\r\n\r\n  private saveConcorrente(record: any) {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\r\n  }\r\n\r\n  private updateConcorrente(record: any) {\r\n    return this.http.put(`${this.API}/atualizar`, record).pipe(take(1));\r\n  }\r\n\r\n  save(record: Concorrente): Observable<any> {\r\n    if (record.codConcorrenteTid !== null) {\r\n      return this.updateConcorrente(record);\r\n    }\r\n\r\n    return this.saveConcorrente(record);\r\n  }\r\n\r\n  activateConcorrente(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  inactivateConcorrente(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jb25jb3JyZW50ZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosTransportadoraFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosConcorrenteListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosConcorrenteFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialCadastrosConcorrenteListaComponent },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosConcorrenteFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosTransportadoraFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosConcorrenteFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosTransportadoraFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialCadastrosConcorrenteRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosConcorrenteService } from '../concorrentes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosTransportadoraFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private concorrenteService: ComercialCadastrosConcorrenteService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.concorrenteService.getConcorrente(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codConcorrenteTid: null,\r\n        nomeConcorrente: null,\r\n        nomeMarcaAco: null,\r\n        codSituacao: null\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Concorrentes\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\r\\n              <label for=\\\"codConcorrenteTid\\\">Código do concorrente</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"codConcorrenteTid\\\"\\r\\n                (input)=\\\"onInput('codConcorrenteTid')\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4 mb-lg-0\\\">\\r\\n              <label for=\\\"nomeConcorrente\\\">Nome do concorrente</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"nomeConcorrente\\\"\\r\\n                (input)=\\\"onInput('nomeConcorrente')\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4 mb-lg-0\\\">\\r\\n              <label for=\\\"nomeMarcaAco\\\">Nome da marca de aço</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"nomeMarcaAco\\\"\\r\\n                (input)=\\\"onInput('nomeMarcaAco')\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <ng-template #tooltipUltimaAlteracaoTemplate>\\r\\n        <p class=\\\"text-nowrap mb-0\\\">Última alteração</p>\\r\\n      </ng-template>\\r\\n      <custom-table *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Código\\\"\\r\\n                [active]=\\\"orderBy == 'codConcorrente'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codConcorrenteTid')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Nome concorrente\\\"\\r\\n                [active]=\\\"orderBy == 'nomeConcorrente'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeConcorrente')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Marca de aço</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span class=\\\"mr-1\\\">Usuário</span>\\r\\n              <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipUltimaAlteracaoTemplate\\\"></i>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span class=\\\"mr-1\\\">data última atualização</span>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let concorrente of dadosPagination; let i = index\\\" [class.table-active]=\\\"concorrente.codConcorrenteTid == concorrenteSelecionado.codConcorrenteTid\\\">\\r\\n            <td class=\\\"text-center hover\\\" (click)=\\\"onDetails(concorrente)\\\">{{ concorrente.codConcorrenteTid }}</td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(concorrente)\\\">{{ concorrente.nomeConcorrente | uppercase }}</td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(concorrente)\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"concorrente.nomeMarcaAco == null || concorrente.nomeMarcaAco ==''\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"concorrente.nomeMarcaAco != null\\\">{{ concorrente.nomeMarcaAco | uppercase }}</span>\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(concorrente)\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"concorrente.nomeUsuarioCadastro == null || concorrente.nomeUsuarioCadastro ==''\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"concorrente.nomeUsuarioCadastro != null\\\">{{ concorrente.nomeUsuarioCadastro | uppercase }}</span>\\r\\n            </td>\\r\\n            <td class=\\\"text-center hover\\\" (click)=\\\"onDetails(concorrente)\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"concorrente.dataCadastro == null || concorrente.dataCadastro == ''\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"concorrente.dataCadastro != null\\\">{{ concorrente.dataCadastro | date: 'dd/MM/yyyy' }}</span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <span *ngIf=\\\"concorrente.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, concorrente)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"concorrente.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, concorrente)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"viewRegister(concorrente)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\r\\n        <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n              <th scope=\\\"col\\\">Tipo</th>\\r\\n              <th scope=\\\"col\\\">Campo</th>\\r\\n              <th scope=\\\"col\\\">de</th>\\r\\n              <th scope=\\\"col\\\">para</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\r\\n              <td class=\\\"text-center\\\">{{ alteracao.dataCadastro | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\r\\n              <td>{{ alteracao.nomeTipoOperacao | uppercase }}</td>\\r\\n              <td>{{ alteracao.nomeCampo | uppercase }}</td>\\r\\n              <td>{{ alteracao.de | uppercase }}</td>\\r\\n              <td>{{ alteracao.para | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jb25jb3JyZW50ZXMvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosConcorrenteService } from '../concorrentes.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Concorrente } from '../models/concorrente';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-concorrente-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosConcorrenteFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private concorrenteService: ComercialCadastrosConcorrenteService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.titleService.setTitle('Cadastro de concorrente');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar concorrente';\r\n      } else {\r\n        this.appTitle = 'Novo concorrente';\r\n      }\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Concorrentes',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}/concorrentes/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: Concorrente = this.activatedRoute.snapshot.data.detalhes\r\n        .data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codConcorrenteTid: [detalhes.codConcorrenteTid],\r\n        nomeConcorrente: [\r\n          detalhes.nomeConcorrente,\r\n          [Validators.required, Validators.maxLength(40)],\r\n        ],\r\n        nomeMarcaAco: [detalhes.nomeMarcaAco, [Validators.maxLength(100)]],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]]\r\n      });\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.concorrenteService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n"]}