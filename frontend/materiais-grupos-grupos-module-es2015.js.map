{"version":3,"sources":["./src/app/modules/comercial/cadastros/materiais/grupos/grupos-routing.module.ts","./src/app/modules/comercial/cadastros/materiais/grupos/formulario/formulario.component.scss","./src/app/modules/comercial/cadastros/materiais/grupos/formulario/formulario.component.html","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/cadastros/materiais/grupos/lista/lista.component.html","./src/app/modules/comercial/comercial.service.ts","./src/app/modules/comercial/cadastros/materiais/grupos/lista/lista.component.scss","./src/app/modules/comercial/cadastros/materiais/grupos/formulario/formulario.component.ts","./src/app/guards/form-deactivate.guard.ts","./src/app/modules/comercial/cadastros/materiais/grupos/grupos.module.ts","./src/app/modules/comercial/cadastros/materiais/grupos/formulario/formulario-resolver.guard.ts","./src/app/modules/comercial/cadastros/materiais/grupos/lista/lista.component.ts","./src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":[],"mappings":"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","file":"materiais-grupos-grupos-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosMateriaisGrupoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosMateriaisGrupoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisGrupoFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialCadastrosMateriaisGrupoListaComponent },\n  {\n    path: 'novo',\n    component: ComercialCadastrosMateriaisGrupoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMateriaisGrupoFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosMateriaisGrupoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMateriaisGrupoFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosMateriaisGrupoRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZ3J1cG9zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"mtc-title\\\">Dados do grupo</div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"nomeGrupo\\\">Nome</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeGrupo\\\"\\n              formControlName=\\\"nomeGrupo\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('nomeGrupo') + ' ' + onFieldRequired(form.controls.nomeGrupo)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeGrupo')\\\" message=\\\"Nome é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"precoGrupo\\\">Preço</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"precoGrupo\\\"\\n              formControlName=\\\"precoGrupo\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',', precision: 2 }\\\"\\n              [ngClass]=\\\"onFieldError('precoGrupo') + ' ' + onFieldRequired(form.controls.precoGrupo)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('precoGrupo')\\\" message=\\\"Preço é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codSituacao\\\">Situação</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"codSituacao\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              (change)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n              <option value=\\\"\\\">SELECIONE UMA OPÇÃO</option>\\n              <option value=\\\"0\\\">Inativo</option>\\n              <option value=\\\"1\\\">Ativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"col\\\">\\n            <hr>\\n          </div>\\n        </div>\\n        <div formArrayName=\\\"assocMateriais\\\">\\n          <div class=\\\"row mb-2\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Materiais associados ao grupo</div>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\n                  (click)=\\\"onLimparAssociacoes()\\\">\\n                  <i class=\\\"fas fa-trash\\\"></i>\\n                  <span>Limpar</span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length > 0\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let material of assocMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                    <td style=\\\"width: 95%\\\">\\n                      {{ form.value.assocMateriais[i].codMaterial }} - {{ form.value.assocMateriais[i].nomeMaterial | uppercase }}\\n                    </td>\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        icon=\\\"fas fa-trash\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"onDeleteMaterial(i)\\\">\\n                      </btn-icon>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length === 0\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-exchange-alt\\\"\\n                text=\\\"Nenhuma associação encontrada\\\">\\n              </message>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <div class=\\\"row mb-2\\\">\\n        <div class=\\\"col mt-auto\\\">\\n          <div class=\\\"mtc-title mb-0\\\">Pesquisa de materiais</div>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <div class=\\\"d-flex justify-content-end\\\">\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\n              (click)=\\\"onFilterMateriais()\\\"\\n              [disabled]=\\\"searching === true\\\">\\n              <i class=\\\"fas fa-search\\\"></i>\\n              <span>Pesquisar</span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <advanced-filter>\\n        <form [formGroup]=\\\"formMateriais\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codLinha\\\">Linha</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"linhas\\\"\\n                formControlName=\\\"codLinha\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codLinha\\\"\\n                bindLabel=\\\"descricao\\\"\\n                bindValue=\\\"id\\\"\\n                (change)=\\\"onChangeLinha($event.id)\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codClasse\\\">Classe</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"filteredClasses\\\"\\n                formControlName=\\\"codClasse\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codClasse\\\"\\n                bindLabel=\\\"nomeClasse\\\"\\n                bindValue=\\\"idClasse\\\"\\n                (change)=\\\"onChangeClasse($event.idClasse)\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codMaterial\\\">Material</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"materiais\\\"\\n                formControlName=\\\"codMaterial\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codMaterial\\\"\\n                bindLabel=\\\"codigoDescricaoMaterial\\\"\\n                bindValue=\\\"codigoMaterial\\\"\\n                [loading]=\\\"materiaisLoader\\\"\\n                loadingText=\\\"Carregando...\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n      <div *ngIf=\\\"materiaisLista.length > 0\\\">\\n        <div class=\\\"row mb-2\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Seleção de materiais</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\n                (click)=\\\"onAssociarMateriais()\\\"\\n                [disabled]=\\\"searching === true\\\">\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                <span>Associar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigMateriais\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll()\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let material of materiaisLista; let i = index;\\\">\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"material.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onCheckMaterial(i, material)\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 95%\\\"\\n                    (click)=\\\"onCheckMaterial(i, material)\\\">\\n                    {{ material.codigoDescricaoMaterial | uppercase }}\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\n        <div class=\\\"col\\\">\\n          <message\\n            icon=\\\"fas fa-cog fa-spin\\\"\\n            text=\\\"Estamos pesquisando os materiais para você...\\\">\\n          </message>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"searching === false\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"materiaisListaEmpty && materiaisListaLoaded\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-box-open\\\"\\n              text=\\\"Nenhuma informação encontrada\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-search\\\"\\n              text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\n            </message>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Grupos de materiais\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"grupo\\\">\\n                <span class=\\\"mr-1\\\">Grupo</span>\\n                <ng-template #tooltipLabelGrupoTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou nome do grupo</p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelGrupoTemplate\\\" container=\\\"body\\\"></i>\\n              </label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"grupo\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"material\\\">\\n                <span class=\\\"mr-1\\\">Material</span>\\n                <ng-template #tooltipLabelMaterialTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou nome do material</p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelMaterialTemplate\\\" container=\\\"body\\\"></i>\\n              </label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"material\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"0\\\">Inativos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\n              <thead-sorter\\n                value=\\\"Código\\\"\\n                [active]=\\\"orderBy == 'codGrupo'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('codGrupo')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Nome grupo\\\"\\n                [active]=\\\"orderBy == 'nomeGrupo'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeGrupo')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Preço</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let grupo of dadosPagination; let i = index;\\\" [class.table-active]=\\\"grupo.codGrupo == grupoSelecionado.codGrupo && showDetailPanel\\\">\\n            <td\\n              class=\\\"text-center hover\\\"\\n              [ngClass]=\\\"classStatusBorder(grupo)\\\"\\n              (click)=\\\"onDetails(grupo)\\\">\\n              {{ grupo.codGrupo }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(grupo)\\\">\\n              {{ grupo.nomeGrupo | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"onDetails(grupo)\\\">\\n              {{ grupo.precoGrupo | currency:'BRL':'symbol':'1.2-2' }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(grupo)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"grupo.nomeUsuario === null\\\">NÃO INFORMADO</span>\\n              <span *ngIf=\\\"grupo.nomeUsuario !== null\\\">\\n                {{ grupo.nomeUsuario | uppercase }}\\n              </span>\\n            </td>\\n            <td class=\\\"text-right\\\">\\n              <span *ngIf=\\\"grupo.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, grupo)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"grupo.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, grupo)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(grupo)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiais.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\n              <th scope=\\\"col\\\">Material</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiais\\\">\\n              <td class=\\\"text-center\\\">{{ material.codMaterial }}</td>\\n              <td>{{ material.nomeMaterial | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZ3J1cG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// ng-brazil\nimport { MASKS } from 'ng-brazil';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosMateriaisGrupoService } from '../grupos.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { IGrupo } from '../models/grupo';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-grupos-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosMateriaisGrupoFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  public MASKS = MASKS;\n\n  loaderFullScreen = true;\n  loaderNavbar: boolean;\n\n  appTitle: string;\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  codClasse: number = null;\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n\n  showMateriais = true;\n\n  formMateriais: FormGroup;\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n  filteredClasses: Array<any> = [];\n  materiais: Array<any> = [];\n  materiaisLoader: boolean;\n\n  toggleAll = false;\n  searching = false;\n  firstSearch = false;\n\n  materiaisLista: Array<any> = [];\n  materiaisListaLoaded = false;\n  materiaisListaEmpty = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private comercialService: ComercialService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.setFormBuilder();\n    this.setFormMateriais();\n    this.titleService.setTitle('Cadastro de grupo de materiais');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar grupo de materiais';\n      } else {\n        this.appTitle = 'Novo grupo de materiais';\n      }\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Grupos de materiais',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/grupos/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  getFilterValues(): void {\n    this.materiaisGrupoService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].responseCode === 200) {\n          this.classes = response[1].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormBuilder(): void {\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\n\n    if (resolver.success === true) {\n      const detalhes: IGrupo = resolver.data;\n\n      this.form = this.formBuilder.group({\n        codGrupo: [detalhes.codGrupo],\n        nomeGrupo: [detalhes.nomeGrupo, [Validators.required]],\n        precoGrupo: [detalhes.precoGrupo, [Validators.required]],\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\n        assocMateriais: this.formBuilder.array([]),\n      });\n\n      this.setMateriais(detalhes.materiais);\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  setFormMateriais(): void {\n    this.formMateriais = this.formBuilder.group({\n      codLinha: [null, [Validators.required]],\n      codClasse: [null, [Validators.required]],\n      codMaterial: [null, [Validators.required]],\n    });\n  }\n\n  setMateriais(materiais: any): void {\n    if (materiais.length > 0) {\n      for (let i = 0; i < materiais.length; i++) {\n        this.onAddMaterial(materiais[i]);\n      }\n    }\n  }\n\n  get assocMateriais(): FormArray {\n    return this.form.get('assocMateriais') as FormArray;\n  }\n\n  onAddMaterial(material: any, manipulateForm?: boolean): void {\n    if (this.codClasse === null) {\n      this.codClasse = material.codClasse;\n    }\n\n    if (this.codClasse === material.codClasse) {\n      if (this.checkMaterialExists(material) === false) {\n        this.assocMateriais.push(\n          this.formBuilder.group({\n            codMaterial: [material.codMaterial],\n            nomeMaterial: [material.nomeMaterial],\n            codClasse: [material.codClasse],\n          })\n        );\n\n        if (this.form.value.assocMateriais.length > 9) {\n          if (this.tableConfigAssocMateriais.fixedHeader === false) {\n            this.showMateriais = false;\n            this.tableConfigAssocMateriais.fixedHeader = true;\n\n            setTimeout(() => {\n              this.showMateriais = true;\n            }, 1);\n          }\n        }\n\n        if (manipulateForm) {\n          this.form.markAsTouched();\n          this.form.markAsDirty();\n        }\n      }\n    } else {\n      this.pnotifyService.notice('Associe apenas materiais da mesma classe.');\n    }\n  }\n\n  checkMaterialExists(material: any): boolean {\n    return this.form.value.assocMateriais.some((el: any) => {\n      return el.codMaterial === material.codMaterial;\n    });\n  }\n\n  onLimparAssociacoes(): void {\n    const assocMateriais = this.form.get('assocMateriais') as FormArray;\n    assocMateriais.clear();\n    this.codClasse = null;\n  }\n\n  onDeleteMaterial(index: number): void {\n    this.confirmDelete().subscribe((response: boolean) =>\n      response ? this.deleteMaterial(index) : null\n    );\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  deleteMaterial(index: number) {\n    this.assocMateriais.removeAt(index);\n    this.form.markAsTouched();\n    this.form.markAsDirty();\n  }\n\n  onChangeLinha(codLinha: number) {\n    this.formMateriais.controls.codClasse.reset();\n    this.formMateriais.controls.codClasse.setValue(null);\n    this.formMateriais.controls.codClasse.enable();\n    this.formMateriais.controls.codClasse.setValidators([Validators.required]);\n    this.formMateriais.controls.codClasse.updateValueAndValidity();\n\n    this.formMateriais.controls.codMaterial.reset();\n    this.formMateriais.controls.codMaterial.disable();\n    this.formMateriais.controls.codMaterial.setValue(null);\n    this.formMateriais.controls.codMaterial.updateValueAndValidity();\n\n    this.filteredClasses = this.classes.filter(\n      (value: any) => value.idLinha == codLinha\n    );\n  }\n\n  onChangeClasse(codClasse: number) {\n    this.formMateriais.controls.codMaterial.reset();\n    this.formMateriais.controls.codMaterial.enable();\n    this.formMateriais.controls.codMaterial.setValue(null);\n    this.formMateriais.controls.codMaterial.updateValueAndValidity();\n\n    this.getMateriais(codClasse);\n  }\n\n  getMateriais(codClasse: number): void {\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\n      this.materiaisLoader = true;\n      this.materiais = [];\n\n      this.comercialService\n        .getMateriais({\n          codClasse: codClasse,\n          situacao: 'A'\n        })\n        .pipe(\n          finalize(() => {\n            this.materiaisLoader = false;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.materiais = response.data;\n\n              this.materiais.unshift({\n                codigoMaterial: 0,\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\n              });\n\n              this.formMateriais.controls.codMaterial.setValue(0);\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  onFilterMateriais(): void {\n    if (this.formMateriais.valid) {\n      this.loaderNavbar = true;\n      this.searching = true;\n      this.materiaisLista = [];\n      this.materiaisListaLoaded = false;\n      this.materiaisListaEmpty = false;\n\n      let params = {\n        codClasse: this.formMateriais.value.codClasse,\n      };\n\n      if (this.formMateriais.value.codMaterial !== 0) {\n        Object.assign(params, {\n          codMaterial: this.formMateriais.value.codMaterial,\n        });\n      }\n\n      this.comercialService\n        .getMateriais(params)\n        .pipe(\n          finalize(() => {\n            this.firstSearch = true;\n            this.searching = false;\n            this.loaderNavbar = false;\n            this.materiaisListaLoaded = true;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.materiaisLista = response.data.map(function (el: any) {\n                var o = Object.assign({}, el);\n                o.checked = 0;\n                return o;\n              });\n\n              if (this.materiaisLista.length > 9) {\n                this.tableConfigMateriais.fixedHeader = true;\n              } else {\n                this.tableConfigMateriais.fixedHeader = false;\n              }\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n              this.materiaisListaEmpty = true;\n            } else {\n              this.pnotifyService.error();\n              this.materiaisListaEmpty = true;\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  onToggleAll() {\n    this.toggleAll = !this.toggleAll;\n\n    for (let index = 0; index < this.materiaisLista.length; index++) {\n      this.materiaisLista[index].checked = this.toggleAll === true ? 1 : 0;\n    }\n  }\n\n  onCheckMaterial(index: number, material: any): void {\n    this.materiaisLista[index].checked = material.checked == 0 ? 1 : 0;\n  }\n\n  onAssociarMateriais(): void {\n    this.toggleAll = false;\n\n    for (let index = 0; index < this.materiaisLista.length; index++) {\n      if (this.materiaisLista[index].checked === 1) {\n        const material = {\n          codMaterial: this.materiaisLista[index].codigoMaterial,\n          nomeMaterial: this.materiaisLista[index].descricao,\n          codClasse: this.materiaisLista[index].codClasse,\n        };\n\n        this.onAddMaterial(material, true);\n        this.materiaisLista[index].checked = 0;\n      }\n    }\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        if (this.form.value.assocMateriais.length > 0) {\n          this.loaderNavbar = true;\n          this.submittingForm = true;\n\n          this.materiaisGrupoService\n            .save(this.form.value)\n            .pipe(\n              finalize(() => {\n                this.loaderNavbar = false;\n                this.submittingForm = false;\n              })\n            )\n            .subscribe(\n              (response: any) => {\n                if (\n                  response.hasOwnProperty('success') &&\n                  response.success === true\n                ) {\n                  this.form.reset();\n                  this.formChanged = false;\n                  this.pnotifyService.success(response.mensagem);\n\n                  this.activatedRoute.params.subscribe((params: any) => {\n                    let navigateTo: string;\n\n                    if (params.hasOwnProperty('id')) {\n                      navigateTo = '../../lista';\n                    } else {\n                      navigateTo = '../lista';\n                    }\n\n                    this.router.navigate([navigateTo], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  });\n                } else if (\n                  response.hasOwnProperty('success') &&\n                  response.success === false\n                ) {\n                  this.pnotifyService.error(response.mensagem);\n                } else {\n                  this.pnotifyService.error();\n                }\n              },\n              (error: any) => {\n                this.pnotifyService.error();\n              }\n            );\n        } else {\n          this.pnotifyService.notice('Associe pelo menos um material.');\n        }\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosMateriaisGrupoRoutingModule } from './grupos-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosMateriaisGrupoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisGrupoFormularioComponent } from './formulario/formulario.component';\n\n// Services\nimport { ComercialCadastrosMateriaisGrupoService } from './grupos.service';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosMateriaisGrupoListaComponent,\n    ComercialCadastrosMateriaisGrupoFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule,\n    TooltipModule,\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialCadastrosMateriaisGrupoRoutingModule,\n    SharedModule,\n    TemplatesModule,\n  ],\n  providers: [PNotifyService, ComercialCadastrosMateriaisGrupoService],\n})\nexport class ComercialCadastrosMateriaisGrupoModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosMateriaisGrupoService } from '../grupos.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisGrupoFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private materiaisGruposService: ComercialCadastrosMateriaisGrupoService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.materiaisGruposService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      mensagem: null,\n      data: {\n        codGrupo: null,\n        nomeGrupo: null,\n        precoGrupo: null,\n        codSituacao: '',\n        materiais: [],\n      },\n    });\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosMateriaisGrupoService } from '../grupos.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { IGrupo } from '../models/grupo';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-grupos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosMateriaisGrupoListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    hover: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  detailPanelTitle: string;\n\n  form: FormGroup;\n  orderBy = 'nomeGrupo';\n  orderType = 'ASC';\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<IGrupo> = [];\n  dadosPagination: Array<IGrupo> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  grupoSelecionado: IGrupo;\n  materiais: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Grupos de materiais');\n    this.onDetailPanelEmitter();\n    this.setGrupoSelecionado();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Grupos de materiais',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      grupo: [formValue.grupo],\n      material: [formValue.material],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      grupo: null,\n      material: null,\n      codSituacao: '',\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setGrupoSelecionado(): void {\n    this.grupoSelecionado = {\n      codGrupo: null,\n      nomeGrupo: null,\n      precoGrupo: null,\n      codSituacao: null,\n      situacao: null,\n      codUsuario: null,\n      nomeUsuario: null,\n      materiais: [],\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.grupo) {\n      params.grupo = this.form.value.grupo;\n    }\n\n    if (this.form.value.material) {\n      params.material = this.form.value.material;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.materiaisGrupoService\n      .getListaGrupos(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe(\n        (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  classStatusBorder(grupo: IGrupo): string {\n    let borderClass: string;\n\n    if (grupo.codSituacao === 0) {\n      borderClass = 'border-danger';\n    } else if (grupo.codSituacao === 1) {\n      borderClass = 'border-success';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  onDetails(grupo: IGrupo): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.detailPanelTitle = `Materiais associados (${grupo.nomeGrupo})`;\n    this.setGrupoSelecionado();\n    this.grupoSelecionado = grupo;\n    this.materiais = [];\n\n    this.materiaisGrupoService\n      .getAssociacoesMateriais(grupo.codGrupo)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.materiais = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  onEdit(grupo: IGrupo): void {\n    this.router.navigate(['../editar', grupo.codGrupo], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, grupo: IGrupo): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateGrupo(index, grupo) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(grupo);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateGrupo(index: number, grupo: IGrupo): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.materiaisGrupoService.activateGrupo(grupo.codGrupo);\n  }\n\n  onInactivate(index: number, grupo: IGrupo): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateGrupo(index, grupo) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(grupo);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateGrupo(index: number, grupo: IGrupo): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 0;\n\n    return this.materiaisGrupoService.inactivateGrupo(grupo.codGrupo);\n  }\n\n  refreshMainData(grupo: IGrupo): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (grupo.codGrupo === this.dados[i].codGrupo) {\n        this.dados[i].codSituacao = grupo.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"],"sourceRoot":"webpack:///"}