{"version":3,"sources":["./src/app/modules/comercial/akna/contatos/formulario/clientes/clientes.component.scss","./src/app/modules/comercial/akna/contatos/formulario/formulario.component.html","./src/app/modules/comercial/services/vendedores.service.ts","./src/app/modules/comercial/akna/contatos/formulario/formulario.component.ts","./src/app/modules/comercial/akna/contatos/lista/lista.component.ts","./src/app/modules/comercial/services/clientes.service.ts","./src/app/modules/comercial/akna/contatos/contatos.service.ts","./src/app/modules/comercial/akna/contatos/formulario/clientes/clientes.component.html","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/shared/services/core/date.service.ts","./src/app/modules/comercial/comercial.service.ts","./src/app/modules/comercial/akna/contatos/formulario/clientes/clientes.component.ts","./src/app/modules/comercial/akna/contatos/lista/lista.component.scss","./src/app/modules/comercial/akna/contatos/formulario/formulario.component.scss","./src/app/modules/comercial/akna/contatos/lista/lista.component.html","./src/app/modules/comercial/akna/contatos/contatos.module.ts","./src/app/modules/comercial/akna/contatos/contatos-routing.module.ts","./src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":[],"mappings":"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","file":"contatos-contatos-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FrbmEvY29udGF0b3MvZm9ybXVsYXJpby9jbGllbnRlcy9jbGllbnRlcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<!-- <loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen> -->\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Cadastro de Contatos\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false\\\"\\n    (click)=\\\"postContatos()\\\"\\n    >\\n    Salvar\\n  </button>\\n  <button\\n  type=\\\"button\\\"\\n  (click)=\\\"onFilter()\\\">\\n  Filtrar\\n</button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" >\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-12 pt-2 mx-auto\\\">\\n        <legend>Dados da Lista de Contatos</legend>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\n            <label for=\\\"DESCRICAO\\\">Descrição</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"DESCRICAO\\\"\\n              formControlName=\\\"DESCRICAO\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('DESCRICAO') + ' ' + onFieldRequired('DESCRICAO')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('DESCRICAO')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </fieldset>\\n  </form><br><br>\\n  <blockquote class=\\\"blockquote  text-center\\\" *ngIf=\\\"!idLista\\\">\\n    <p class=\\\"mb-0 text-danger\\\">Associação de Clientes</p>\\n    <footer class=\\\"blockquote-footer\\\">Associação de clientes é realizada somente com registros já existentes!</footer>\\n  </blockquote>\\n  <div  >\\n    <hr>\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-12 pt-2 mx-auto\\\">\\n        <legend>Pesquisar Clientes</legend>\\n        <comercial-akna-contatos-clientes></comercial-akna-contatos-clientes>\\n        <br>\\n      </fieldset>\\n    </fieldset>\\n  </div>\\n</app-body>\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialVendedoresService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\n\n  constructor(protected http: HttpClient) {}\n\n  getDetalhesCadastro() {\n    return this.http\n      .get(`${this.API}/detalhes-cadastro`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVendedores() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\n  }\n\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/carteira-clientes`,\n      {\n        params: params\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getValidaClienteCarteira(\n    codCliente: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVinculoOperadores() {\n    return this.http\n      .get(`${this.API}/vinculo-operadores`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { DateService } from './../../../../../shared/services/core/date.service';\nimport { RouterService } from './../../../../../shared/services/core/router.service';\nimport { ComercialAknaContatosService } from './../contatos.service';\n//Angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n\n//Services\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { MoedasService } from 'src/app/shared/services/requests/moedas.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n//Bootstrap\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\n\n//interfaces\nimport { IComercialAknaContatos } from './../models/contatos';\n\n//rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'comercial-akna-contatos-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialAknaContatosFormularioComponent implements OnInit {\n  noResult: boolean;\n  $activatedRouteSubscription: Subscription;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  bsConfig: Partial<BsDatepickerConfig>;\n  formData: Array<FormData> = [];\n  idLista: number;\n  compararData = null;\n  //loading\n  loading = true;\n  loadingNavBar = false;\n\n  //Interfaces\n  contatos: Array<IComercialAknaContatos>;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private localeService: BsLocaleService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n    private contatoService: ComercialAknaContatosService,\n    private routerService: RouterService,\n    private dateService: DateService,\n    private route: Router\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.appTitle = 'Cadastro';\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/postContatos/home',\n      },\n      {\n        descricao: 'Akna',\n        routerLink: `/comercial/akna/${id}`,\n      },\n      {\n        descricao: 'Contatos',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  onActivatedRoute() {\n    const params = this.activatedRoute.snapshot.params;\n    if (params.hasOwnProperty('id')) {\n      this.idLista = params.id;\n    }\n  }\n\n  //formulario\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      ID: [null],\n      DESCRICAO: [null, [Validators.required]],\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onFilter() {\n    this.contatoService.onEventFilter();\n  }\n\n  postContatos() {\n    this.loadingNavBar = true;\n\n    this.contatoService\n      .postContatos(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.status === 200) {\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        error: (error: any) => {\n          this.pnotify.error();\n        }\n      });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n}\n","import { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\nimport { HttpResponse } from '@angular/common/http';\nimport { ComercialAknaContatosService } from './../contatos.service';\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { IComercialAknaContatos } from './../models/contatos';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\n//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//modelos\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n@Component({\n  selector: 'comercial-akna-contatos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialAknaContatosListaComponent implements OnInit, OnDestroy {\n  breadCrumbTree: Array<Breadcrumb>;\n  noResult = false;\n  loading = false; //Loading FullPage\n  loadingNavBar = false; //Loading do NAVBAR\n\n  tableConfig: Partial<CustomTableConfig> = { subtitleBorder: true };\n\n  bsConfig: Partial<BsDatepickerConfig>;\n  $activatedRouteSubscription: Subscription;\n  contatoSelecionado: IComercialAknaContatos;\n  contatos: IComercialAknaContatos[] = [];\n  contatosFiltrados: IComercialAknaContatos[] = [];\n  form: FormGroup;\n\n  // Tipos de Situação dos Tipos de Items (Ativo/Inativo)\n  tipos = [\n    {\n      cod: 'N',\n      nome: 'Ativos',\n    },\n    {\n      cod: 'S',\n      nome: 'Arquivado',\n    },\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'ATIVO',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'ARQUIVADO',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage: number = 10;\n  totalItems: number;\n  currentPage: number = 1;\n  begin: number = 0;\n  end: number = 10;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private localeService: BsLocaleService,\n    private contatoService: ComercialAknaContatosService,\n    private confirmModalService: ConfirmModalService,\n    private routerService: RouterService,\n    private dateService: DateService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription =\n      this.activatedRoute.queryParams.subscribe((response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        this.getContatos(this.getParams());\n      });\n  }\n\n  getContatos(params?) {\n    this.loading = true;\n\n    this.contatoService\n      .getContatos(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe({\n        next: (response: HttpResponse<IComercialAknaContatos[]>) => {\n          if (response.status === 200) {\n            this.contatos = response.body;\n            this.contatosFiltrados = response.body;\n            this.totalItems = response.body.length;\n            this.loading = false;\n          } else {\n            this.noResult = true;\n            this.contatos = [];\n          }\n        },\n        error: (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      });\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID: [null],\n      DESCRICAO: [null],\n      ARQUIVADA: [null],\n      CONTATOS_VALIDOS: [null],\n      PAGI: [1],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/comercial/home`,\n      },\n      {\n        descricao: 'Akna',\n        routerLink: `/comercial/akna/${id}`,\n      },\n      {\n        descricao: 'Contatos',\n      },\n    ];\n  }\n\n  async onFilter() {\n    const { ID, DESCRICAO, ARQUIVADA } = this.getParams();\n\n    let _params = {};\n\n    if (ID) _params['ID'] = ID;\n\n    if (DESCRICAO) _params['DESCRICAO'] = DESCRICAO;\n\n    if (ARQUIVADA) _params['ARQUIVADA'] = ARQUIVADA;\n\n    if (Object.keys(_params).length === 0) {\n      this.contatosFiltrados = this.contatos;\n      return;\n    }\n\n    const promise = new Promise((resolve, reject) => {\n      try {\n        const filter = this.contatos.filter((contato) => {\n          let _match = false;\n          for (const key in _params) {\n            if (key === 'DESCRICAO') {\n              if (\n                contato[key]\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(_params[key].toString().toLowerCase()) == -1\n              ) {\n                _match = false;\n                break;\n              }\n            } else if (contato[key] !== _params[key]) {\n              _match = false;\n              break;\n            }\n            _match = true;\n          }\n          return _match;\n        });\n        resolve(filter);\n      } catch (error) {\n        reject(error);\n      }\n    });\n\n    await promise\n      .then((contatos: IComercialAknaContatos[]) => {\n        this.contatosFiltrados = contatos;\n        console.log(contatos);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  openRegister(contato: IComercialAknaContatos) {\n    this.route.navigate(['../cadastro'], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(contato),\n    });\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n\n  getParams() {\n    let _params: Partial<IComercialAknaContatos> = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  classStatusBorder(contato: IComercialAknaContatos): string {\n    let borderClass: string;\n\n    if (contato.ARQUIVADA == 'N') {\n      borderClass = 'border-success';\n    } else if (contato.ARQUIVADA == 'S') {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialClientesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes`;\n\n  constructor(protected http: HttpClient) {}\n\n  getStatus(): Observable<Object> {\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1), retry(2));\n  }\n\n  getClientes(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/pesquisa/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getClientesGrupoEconomico(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/grupo-economico/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getPermissaoAcesso(id: any): Observable<Object> {\n    return this.http\n      .get(`${this.API}/permissao-acesso/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/pesquisa/detalhes/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatosResumido(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getExisteCpfCnpj(\n    documento: any,\n    getDadosCliente: boolean\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/verificar-cpf-cnpj/${documento}?getDadosCliente=${\n          getDadosCliente === true ? 1 : 0\n        }`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  postCliente(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/pre-cadastro`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPropostaAnaliseCredito(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/proposta-analise-credito/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosFaturamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-faturamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosFaturamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-faturamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteAtividadeSecundaria(\n    codCliente: number,\n    id: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/atividade-secundaria/${codCliente}/${id}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getEnderecos(\n    codCliente: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/cadastro/carregar/enderecos/${codCliente}`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getEndereco(\n    codCliente: number,\n    idEndereco: number,\n    idSituacao: number\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/endereco/${codCliente}/${idEndereco}/${idSituacao}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  updateEndereco(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/endereco`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteEndereco(codCliente: number, id: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/endereco/${codCliente}/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatos(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContato(\n    codCliente: number,\n    idContato: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contato/${codCliente}/${idContato}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateContato(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/contato`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteMeioContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/meio-contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteFilho(idFilho: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/filho/${idFilho}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosRelacionamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-relacionamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosRelacionamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-relacionamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPotencialCompra(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/potencial-compra/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updatePotencialCompra(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/potencial-compra`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getAnexos(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/anexos/${codCliente}`)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  uploadAnexo(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/cadastro/upload/anexo`, data)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  deleteAnexo(idAnexo: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/anexo/${idAnexo}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getFilial(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/filial/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getTravas(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/travas/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesFinanceiras(codCliente: number): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/informacoes-financeiras/${codCliente}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesComerciais(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/informacoes-comerciais/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getListaEmails(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/emails/lista/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { event } from './../../../admin/perfis/models/event';\nimport { Injectable, EventEmitter } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { IComercialAknaContatos } from './models/contatos';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialAknaContatosService {\n  private readonly API = environment.API;\n  event: EventEmitter<Partial<event>> = new EventEmitter<Partial<event>>();\n  constructor(private http: HttpClient) {}\n  getContatos(params?) {\n    return this.http.get(\n      `${this.API}/comercial/integracoes/akna/listas-contatos`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postContatos(contatos: IComercialAknaContatos) {\n    return this.http.post(`${this.API}/comercial/akna/contatos`, contatos, {\n      observe: 'response',\n    });\n  }\n\n  // -------------------------------------------Clientes-------------------------------\n\n  getClientes(params?) {\n    return this.http.get(\n      `${this.API}/comercial/integracoes/akna/listas-contatos-clientes`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n  getSetorAtividades(params?) {\n    return this.http.get(\n      `${this.API}/comercial/emailMarketing/associacao/setor-atividade`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postVinculoClientes(params) {\n    return this.http.post(`${this.API}`, params, {\n      observe: 'response',\n    });\n  }\n\n  onEventLoading(value: boolean): void {\n    this.event.emit({ loading: value });\n  }\n\n  onEventFilter(): void {\n    this.event.emit({ filter: true });\n  }\n}\n","export default \"\\n<div>\\n  <advanced-filter>\\n    <form [formGroup]=\\\"formFilter\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\n          <label for=\\\"buscarPor\\\">Buscar por</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"buscarPor\\\"\\n            formControlName=\\\"buscarPor\\\">\\n            <option value=\\\"1\\\">Código, nome fantasia ou razão social</option>\\n            <option value=\\\"2\\\">CPF ou CNPJ</option>\\n            <option value=\\\"3\\\">Cidade</option>\\n            <option value=\\\"4\\\">Código SAP</option>\\n            <option value=\\\"5\\\">Contatos</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-4  pl-0\\\">\\n          <label for=\\\"pesquisa\\\">Termo de pesquisa</label>\\n          <input\\n            type=\\\"text\\\"\\n            placeholder=\\\"digite...\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"pesquisa\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\n          <label for=\\\"linhas\\\">Linha</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"linhas\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            dropdownPosition=\\\"bottom\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            labelForId=\\\"ID_LINH\\\"\\n            bindLabel=\\\"NM_LINH\\\"\\n            bindValue=\\\"linha\\\"\\n            id=\\\"linha\\\"\\n            formControlName=\\\"linha\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2  pl-0\\\">\\n          <label for=\\\"tipoPessoa\\\">Tipo de pessoa</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"tipoPessoa\\\"\\n            formControlName=\\\"tipoPessoa\\\">\\n            <option value=\\\"F\\\">Pessoa física</option>\\n            <option value=\\\"J\\\">Pessoa jurídica</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\n          <label for=\\\"tipoData\\\">Tipo de Data</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"tipoData\\\"\\n            formControlName=\\\"tipoData\\\">\\n            <option value=\\\"1\\\">Data de Inclusão</option>\\n            <option value=\\\"2\\\">Data do Último Faturamento</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-md-2 pl-0\\\">\\n          <label for=\\\"dataInicio\\\">Data Inicial</label>\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n            </div>\\n            <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataInicio\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            data-placement=\\\"top\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"dataInicio\\\"\\n            >\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col-md-2 pl-0\\\">\\n          <label for=\\\"dataFinal\\\">Data Final</label>\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n            </div>\\n            <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataFinal\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            data-placement=\\\"top\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"dataFinal\\\"\\n            >\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\n          <label for=\\\"situacao\\\">Situação</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"situacao\\\"\\n            formControlName=\\\"situacao\\\">\\n            <option value=\\\"Ativo\\\">Ativos</option>\\n            <option value=\\\"Inativo\\\">Inativos</option>\\n            <option value=\\\"Potenci\\\">Potenciais</option>\\n            <option value=\\\"Arquivo\\\">Arquivados</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2  pl-0\\\">\\n          <label for=\\\"registros\\\">Registros</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"registros\\\"\\n            formControlName=\\\"registros\\\">\\n            <option>10</option>\\n            <option>25</option>\\n            <option>50</option>\\n            <option>100</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\n          <label for=\\\"gerentes\\\">Gerencia</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"gerentes\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            dropdownPosition=\\\"bottom\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            labelForId=\\\"gerente\\\"\\n            bindLabel=\\\"DS_GERE\\\"\\n            bindValue=\\\"gerente\\\"\\n            id=\\\"gerente\\\"\\n            formControlName=\\\"gerente\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-4  pl-0\\\">\\n          <label for=\\\"vendedores\\\">Vendedor</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"vendedores\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            dropdownPosition=\\\"bottom\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            labelForId=\\\"vendedor\\\"\\n            bindLabel=\\\"nome\\\"\\n            bindValue=\\\"id\\\"\\n            id=\\\"vendedor\\\"\\n            formControlName=\\\"vendedor\\\"\\n            >\\n          </ng-select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"dataLoaded && clientes.length > 0\\\">\\n    <div class=\\\"col-12\\\" *ngIf=\\\"clientes.length > 1\\\">\\n      <div class=\\\"custom-control custom-checkbox mr-sm-2 hover\\\">\\n        <input \\n        class=\\\"custom-control-input hover\\\" \\n        type=\\\"checkbox\\\" \\n        id=\\\"toggleAll\\\"\\n        (click)=\\\"onToggleAll()\\\">\\n        <label class=\\\"custom-control-label hover font-weight-bold\\\" for=\\\"toggleAll\\\">\\n          SELECIONAR OS {{totalClientes}} REGISTROS ENCONTRADOS\\n        </label>\\n      </div>\\n    </div>\\n    <br><br>\\n    <div class=\\\"col-12\\\">\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\"></th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"setOrderBy('codCliente')\\\">\\n              <thead-sorter value=\\\"Código\\\" [active]=\\\"orderBy == 'codCliente'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"hover\\\"\\n              (click)=\\\"setOrderBy('razaoSocial')\\\">\\n              <thead-sorter value=\\\"Razon Social\\\" [active]=\\\"orderBy == 'razaoSocial'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let cliente of clientes\\\" [class.table-active]=\\\"cliente.codCliente == clienteSelecionado\\\">\\n            <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n              <btn-icon\\n                [icon]=\\\"cliente.checked ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                size=\\\"small\\\"\\n                (click)=\\\"onCheckClientes(cliente)\\\">\\n              </btn-icon>\\n            </td>\\n            <td class=\\\"text-center hover\\\" (click)=\\\"onCheckClientes(cliente)\\\">{{ cliente.codCliente | number: '6.0-0' }}</td>\\n            <td (click)=\\\"onCheckClientes(cliente)\\\">\\n              <i class=\\\"text-success  fas fa-circle mr-3\\\" tooltip=\\\"Ativo\\\" *ngIf= \\\"cliente.situacao == 'Ativo'\\\" ></i>\\n              <i class=\\\"text-danger fas fa-circle mr-3\\\" tooltip=\\\"Inativo\\\" *ngIf= \\\"cliente.situacao == 'Inativo'\\\" ></i>\\n              <i class=\\\"text-primary fas fa-circle mr-3\\\" tooltip=\\\"Potencial\\\" *ngIf= \\\"cliente.situacao == 'Potenci'\\\"></i>\\n              <i class=\\\"text-warning fas fa-circle mr-3\\\"  tooltip=\\\"Arquivado\\\" *ngIf= \\\"cliente.situacao == 'Arquivo'\\\" ></i>\\n              <span>{{ cliente.razaoSocial}}</span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"clientes[0]['total'] > itemsPerPage\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalClientes\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { ComercialVendedoresService } from './../../../../services/vendedores.service';\nimport { ComercialCadastrosAssociacaoLinhasService } from './../../../../cadastros/associacao-linhas/associacao-linhas.service';\nimport { event } from './../../../../../admin/perfis/models/event';\nimport { ComercialAknaContatosService } from './../../contatos.service';\nimport { Breadcrumb } from './../../../../../../shared/modules/breadcrumb/breadcrumb';\nimport { TitleService } from './../../../../../../shared/services/core/title.service';\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from './../../../../clientes/cadastro/dados-faturamento/formulario/formulario.service';\nimport { AtividadesService } from './../../../../../../shared/services/requests/atividades.service';\nimport { JsonResponse } from './../../../../../../models/json-response';\nimport { ComercialClientesService } from './../../../../services/clientes.service';\n//angular\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n//services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//rxjs\nimport { finalize, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n//interfaces\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n@Component({\n  selector: 'comercial-akna-contatos-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.scss'],\n})\nexport class ComercialAknaContatosClientesComponent implements OnInit {\n  loaderNavbar = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home',\n    },\n    {\n      descricao: 'Busqueda de clientes',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n  $subscriptions: Subscription[] = [];\n  linhas: any = [];\n  vendedores: any = [];\n\n  idLista: number;\n  dataLoaded = false;\n  dadosCadastraisLoaded = false;\n  dadosCadastraisEmpty = false;\n  contatosLoaded = false;\n  contatosEmpty = false;\n  toggleAll = false;\n  searchSubmitted = false;\n  showAdvancedFilter = true;\n\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  matricula = this.currentUser['info']['matricula'];\n  bsConfig: Partial<BsDatepickerConfig>;\n  ativos = 0;\n  inativos = 0;\n  potencial = 0;\n  arquivados = 0;\n\n  formFilter: FormGroup;\n  buscandoPor: number;\n  tiposDatas: number;\n  pesquisa: string;\n  orderBy = 'codCliente';\n  orderType = 'desc';\n\n  maxSize = 10;\n  itemsPerPage = 50;\n  currentPage = 1;\n  totalClientes = 0;\n  gerentes: any = [];\n  clientes: any = [];\n  allClientes: any = [];\n  clientesPagination: any = [];\n\n  clienteSelecionado: number;\n  dadosCadastrais: any = {};\n  contatos: any = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private contatosService: ComercialAknaContatosService,\n    private clientesService: ComercialClientesService,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private localeService: BsLocaleService,\n    private comercialService: ComercialVendedoresService,\n    private setoresLinhaService: ComercialCadastrosAssociacaoLinhasService,\n    private titleService: TitleService\n  ) {\n    {\n      this.localeService.use('pt-br');\n      this.bsConfig = Object.assign(\n        {},\n        { containerClass: 'theme-dark-blue' },\n        { adaptivePosition: true },\n        { showWeekNumbers: false }\n      );\n    }\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.onEventSubscription();\n    this.getFormFilters();\n    this.setFormFilter();\n    this.titleService.setTitle('Busqueda de clientes');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getFormFilters(): void {\n    if (!this.idLista) {\n      this.setoresLinhaService\n        .getLinhas()\n        .pipe(finalize(() => {}))\n        .subscribe((response) => {\n          if (response.status === 200) {\n            this.linhas = response.body['data'];\n          }\n        });\n      this.comercialService\n        .getVendedores()\n        .pipe()\n        .subscribe((response: any) => {\n          if (response.responseCode === 200) {\n            this.vendedores = response.result;\n          }\n        });\n    }\n  }\n\n  setFormFilter(): void {\n    const formValue = this.checkRouterParams();\n    this.formFilter = this.formBuilder.group({\n      pesquisa: [formValue['pesquisa']],\n      linha: [formValue['linha']],\n      gerente: [formValue['gerente']],\n      dataFinal: [formValue['dataFinal']],\n      dataInicio: [formValue['dataInicio']],\n      vendedor: [formValue['vendedor']],\n      tipoPessoa: [formValue['tipoPessoa'], Validators.required],\n      buscarPor: [formValue['buscarPor'], Validators.required],\n      tipoData: [formValue['tipoData'], Validators.required],\n      situacao: [formValue['situacao'], Validators.required],\n      pagina: [formValue['pagina']],\n      registros: [formValue['registros'], Validators.required],\n    });\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      pesquisa: null,\n      buscarPor: 1,\n      tipoData: 1,\n      situacao: 'Ativo',\n      tipoPessoa: 'T',\n      pagina: 1,\n      linha: null,\n      registros: this.itemsPerPage,\n    };\n    const queryParams = this.activatedRoute.snapshot.queryParams;\n    if (Object.keys(queryParams).length > 0) {\n      let params = atob(queryParams['q']);\n      params = JSON.parse(params);\n      this.setSubmittedSearch();\n      this.search(params);\n\n      if (params['registros']) {\n        this.itemsPerPage = params['registros'];\n      }\n\n      Object.keys(formValue).forEach((formKey) => {\n        Object.keys(params).forEach((paramKey) => {\n          if (formKey == paramKey && formValue[formKey] != params[paramKey]) {\n            if (!isNaN(Number(params[paramKey]))) {\n              formValue[formKey] = Number(params[paramKey]);\n            } else {\n              formValue[formKey] = params[paramKey];\n            }\n          }\n        });\n      });\n    }\n\n    const params = this.activatedRoute.snapshot.params;\n    if (params.hasOwnProperty('id')) {\n      this.idLista = params.id;\n    }\n\n    return formValue;\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'desc') {\n        this.orderType = 'asc';\n      } else if (this.orderType == 'asc') {\n        this.orderType = 'desc';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'asc';\n    }\n    this.onFilter();\n  }\n\n  onAdvancedFilter(): void {\n    this.showAdvancedFilter = !this.showAdvancedFilter;\n  }\n\n  filterByStatus(status: string): void {\n    this.formFilter.get('situacao').setValue(status);\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    this.contatosService.onEventLoading(true);\n    let params = this.formFilter.value;\n    params['orderBy'] = this.orderBy;\n    params['orderType'] = this.orderType;\n\n    this.itemsPerPage = this.formFilter.value['registros'];\n    this.currentPage = 1;\n    this.setRouterParams(params);\n  }\n\n  setSubmittedSearch(): void {\n    this.searchSubmitted = true;\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n      queryParamsHandling: 'merge',\n    });\n    this.setSubmittedSearch();\n    this.search(params);\n  }\n\n  search(params: any): void {\n    if (this.searchSubmitted) {\n      this.loaderNavbar = true;\n      this.dataLoaded = false;\n      this.clientes = [];\n      this.buscandoPor = params['buscarPor'];\n      this.tiposDatas = params['tipoData'];\n      this.pesquisa = params['pesquisa'];\n\n      this.clientesService\n        .getClientes(params)\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n            this.dataLoaded = true;\n          })\n        )\n        .subscribe({\n          next: (response: any) => {\n            if (response['responseCode'] === 200) {\n              const clientes = response.result.analitico;\n              // clientes.map(function (el: any) {\n              //   el.checked = 0;\n              // });\n              this.clientes = clientes.slice(0, this.itemsPerPage);\n              this.allClientes =\n                response['result']['sintetico'][1]['quantidade'];\n              this.totalClientes = this.clientes[0]['total'];\n            } else if (response['responseCode'] === 204) {\n              this.ativos = 0;\n              this.inativos = 0;\n              this.potencial = 0;\n              this.arquivados = 0;\n              this.pnotifyService.notice('Nenhum registro encontrado!');\n            }\n          },\n          error: (error: any) => {\n            this.pnotifyService.error();\n          }\n        });\n    }\n  }\n\n  onToggleAll() {\n    this.toggleAll = !this.toggleAll;\n    this.clientes.map((cliente) => (cliente.checked = this.toggleAll));\n    this.postVinculoAllClientes();\n  }\n\n  onCheckClientes(cliente: any): void {\n    cliente.checked = !cliente.checked;\n    this.postVinculoClientes(cliente);\n  }\n\n  postVinculoAllClientes(cliente?) {\n    let _params = {};\n    this.contatosService.onEventLoading(true);\n    _params['filtros'] = this.formFilter.value;\n    _params['idLista'] = this.idLista;\n    if (this.toggleAll) {\n      _params['selectAll'] = '1';\n    } else {\n      _params['selectAll'] = '0';\n    }\n    this.contatosService\n      .postVinculoClientes(_params)\n      .pipe(\n        finalize(() => {\n          this.contatosService.onEventLoading(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.pnotifyService.success();\n        },\n        error: (error) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n  postVinculoClientes(cliente?) {\n    let _params = {};\n    this.contatosService.onEventLoading(true);\n    _params['situacao'] = cliente.checked == true ? 1 : 0;\n    _params['codCliente'] = cliente.codCliente;\n    _params['idLista'] = this.idLista;\n    this.contatosService\n      .postVinculoClientes(_params)\n      .pipe(\n        finalize(() => {\n          this.contatosService.onEventLoading(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.pnotifyService.success();\n        },\n        error: (error) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n\n  classStatusBorder(status: string): string {\n    let borderClass: string;\n\n    if (status == 'Ativo') {\n      borderClass = 'border-success';\n    } else if (status == 'Inativo') {\n      borderClass = 'border-danger';\n    } else if (status == 'Potenci') {\n      borderClass = 'border-primary';\n    } else if (status == 'Arquivo') {\n      borderClass = 'border-secondary';\n    }\n\n    return borderClass;\n  }\n\n  onEventSubscription() {\n    this.$subscriptions[2] = this.contatosService.event.subscribe(\n      (response: event) => {\n        if (response.filter === true) {\n          this.onFilter();\n        }\n      }\n    );\n  }\n\n  onPageChanged(event: PageChangedEvent) {\n    if (this.formFilter.value['pagina'] != event.page) {\n      this.resetClienteSelecionado();\n      this.formFilter.value['pagina'] = event.page;\n      this.onFilter();\n    }\n  }\n\n  onPreCadastroCpfCnpj() {\n    let pesquisa = this.pesquisa.replace(/\\D/g, '');\n\n    if (pesquisa.length === 11) {\n      return { cpf: pesquisa };\n    } else if (pesquisa.length === 14) {\n      return { cnpj: pesquisa };\n    }\n\n    return {};\n  }\n\n  handleCounter(value: any) {\n    return value.toFixed(0);\n  }\n\n  resetClienteSelecionado() {\n    this.clienteSelecionado = null;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FrbmEvY29udGF0b3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FrbmEvY29udGF0b3MvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"CONTATOS\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"ID\\\">ID</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"ID\\\"\\n                formControlName=\\\"ID\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"DESCRICAO\\\">Descrição</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"DESCRICAO\\\"\\n                formControlName=\\\"DESCRICAO\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"ARQUIVADA\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"ARQUIVADA\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\n              </ng-template>\\n            </ng-select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"!noResult\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">ID </th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Descrição</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Quantidade de e-mails</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let contato of contatosFiltrados | slice : begin : end; let i = index\\\">\\n            <td\\n              class=\\\"text-center hover\\\"\\n              [ngClass]=\\\"classStatusBorder(contato)\\\">\\n              {{contato.ID}}\\n            </td>\\n            <td  class=\\\"text-center hover\\\">{{ contato.DESCRICAO }}</td>\\n            <td  class=\\\"text-center hover\\\">{{ contato.CONTATOS_VALIDOS}}</td>\\n          </tr>\\n        </ng-template>\\n      </custom-table><br>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"noResult\\\">\\n      </empty-result>\\n      <div *ngIf=\\\"!noResult\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\";","import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { RouterModule } from '@angular/router';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport ptBr from '@angular/common/locales/pt';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nregisterLocaleData(ptBr);\ndefineLocale('pt-br', ptBrLocale);\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialAknaContatosListaComponent } from './lista/lista.component';\nimport { ComercialAknaContatosRoutingModule } from './contatos-routing.module';\nimport { ComercialAknaContatosFormularioComponent } from './formulario/formulario.component';\nimport { ComercialAknaContatosClientesComponent } from './formulario/clientes/clientes.component';\n\n@NgModule({\n  declarations: [\n    ComercialAknaContatosListaComponent,\n    ComercialAknaContatosFormularioComponent,\n    ComercialAknaContatosClientesComponent,\n  ],\n  imports: [\n    ComercialAknaContatosRoutingModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n    CurrencyMaskModule,\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\n})\nexport class ComercialAknaContatosModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//components\nimport { ComercialAknaContatosListaComponent } from './lista/lista.component';\nimport { ComercialAknaContatosFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialAknaContatosListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialAknaContatosFormularioComponent,\n  },\n  {\n    path: ':id',\n    component: ComercialAknaContatosFormularioComponent,\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialAknaContatosRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"],"sourceRoot":"webpack:///"}