{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/templates/templates.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/templates/associacoes/associacoes.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/templates/material-principal/material-principal.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/templates/material-principal/material-principal.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/templates/associacoes/associacoes.component.scss","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/templates/material-principal/material-principal.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/templates/associacoes/associacoes.component.html"],"names":["ComercialCadastrosMateriaisTemplatesModule","declarations","imports","exports","ComercialCadastrosMateriaisTemplatesAssociacoesComponent","formBuilder","pnotifyService","comercialService","linhas","classes","linhaSelecionada","classeSelecionada","loaderNavbar","materialAssociado","tableConfigMateriais","fixedHeader","bodyHeight","filteredClasses","materiais","toggleAll","searching","firstSearch","materiaisLista","materiaisListaLoaded","materiaisListaEmpty","getPNotify","setFormBuilder","events","currentValue","length","onChangeLinha","form","value","codLinha","onChangeClasse","codClasse","firstChange","setLinhaSelecionada","setClasseSelecionada","group","required","codMaterial","valid","emit","params","Object","assign","getMateriais","pipe","subscribe","response","hasOwnProperty","success","data","map","el","o","checked","error","mensagem","index","material","codigoMaterial","nomeMaterial","descricao","resetClasse","controls","reset","setValue","enable","setValidators","updateValueAndValidity","disable","filter","idLinha","materiaisLoader","situacao","unshift","codigoDescricaoMaterial","selector","template","ComercialCadastrosMateriaisTemplatesMaterialPrincipalComponent","materialPrincipal","codMaterialSelecionado","limparMaterialSelecionado","setMaterialSelecionado","ComercialService","http","API","httpParams","param","append","get","id","codCliente","providedIn"],"mappings":"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","file":"default~contratos-comerciais-contratos-comerciais-module~contratos-contratos-module~integracao-condi~c7866944-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// Modules\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisTemplatesMaterialPrincipalComponent } from './material-principal/material-principal.component';\r\nimport { ComercialCadastrosMateriaisTemplatesAssociacoesComponent } from './associacoes/associacoes.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosMateriaisTemplatesMaterialPrincipalComponent,\r\n    ComercialCadastrosMateriaisTemplatesAssociacoesComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    TemplatesModule,\r\n  ],\r\n  exports: [\r\n    ComercialCadastrosMateriaisTemplatesMaterialPrincipalComponent,\r\n    ComercialCadastrosMateriaisTemplatesAssociacoesComponent,\r\n  ],\r\n})\r\nexport class ComercialCadastrosMateriaisTemplatesModule {}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-templates-associacoes',\r\n  templateUrl: './associacoes.component.html',\r\n  styleUrls: ['./associacoes.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisTemplatesAssociacoesComponent\r\n  implements OnInit, OnChanges {\r\n  @Input('linhas') linhas: any[] = [];\r\n  @Input('classes') classes: any[] = [];\r\n\r\n  @Input('linhaSelecionada') linhaSelecionada: number = null;\r\n  @Input('classeSelecionada') classeSelecionada: number = null;\r\n\r\n  @Output('loaderNavbar') loaderNavbar: EventEmitter<\r\n    boolean\r\n  > = new EventEmitter();\r\n  @Output('materialAssociado') materialAssociado: EventEmitter<\r\n    object\r\n  > = new EventEmitter();\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  form: FormGroup;\r\n\r\n  filteredClasses: Array<any> = [];\r\n  materiais: Array<any> = [];\r\n  materiaisLoader: boolean;\r\n\r\n  toggleAll = false;\r\n  searching = false;\r\n  firstSearch = false;\r\n\r\n  materiaisLista: Array<any> = [];\r\n  materiaisListaLoaded = false;\r\n  materiaisListaEmpty = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  ngOnChanges(events: SimpleChanges): void {\r\n    if (events.linhas && events.linhas.currentValue.length > 0) {\r\n      this.onChangeLinha(this.form.value.codLinha, false);\r\n    }\r\n\r\n    if (events.classes && events.classes.currentValue.length > 0) {\r\n      this.onChangeClasse(this.form.value.codClasse);\r\n    }\r\n\r\n    if (\r\n      events.linhaSelecionada &&\r\n      events.linhaSelecionada.currentValue !== null &&\r\n      !events.linhaSelecionada.firstChange\r\n    ) {\r\n      this.setLinhaSelecionada(events.linhaSelecionada.currentValue);\r\n    }\r\n\r\n    if (\r\n      events.classeSelecionada &&\r\n      events.classeSelecionada.currentValue !== null &&\r\n      !events.classeSelecionada.firstChange\r\n    ) {\r\n      this.setClasseSelecionada(events.classeSelecionada.currentValue);\r\n    }\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      codLinha: [this.linhaSelecionada, [Validators.required]],\r\n      codClasse: [this.classeSelecionada, [Validators.required]],\r\n      codMaterial: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.loaderNavbar.emit(true);\r\n      this.searching = true;\r\n      this.materiaisLista = [];\r\n      this.materiaisListaLoaded = false;\r\n      this.materiaisListaEmpty = false;\r\n\r\n      let params = {\r\n        codClasse: this.form.value.codClasse,\r\n      };\r\n\r\n      if (this.form.value.codMaterial !== 0) {\r\n        Object.assign(params, {\r\n          codMaterial: this.form.value.codMaterial,\r\n        });\r\n      }\r\n\r\n      this.comercialService\r\n        .getMateriais(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.firstSearch = true;\r\n            this.searching = false;\r\n            this.loaderNavbar.emit(false);\r\n            this.materiaisListaLoaded = true;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.materiaisLista = response.data.map(function (el: any) {\r\n                var o = Object.assign({}, el);\r\n                o.checked = 0;\r\n                return o;\r\n              });\r\n\r\n              if (this.materiaisLista.length > 9) {\r\n                this.tableConfigMateriais.fixedHeader = true;\r\n              } else {\r\n                this.tableConfigMateriais.fixedHeader = false;\r\n              }\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n              this.materiaisListaEmpty = true;\r\n            } else {\r\n              this.pnotifyService.error();\r\n              this.materiaisListaEmpty = true;\r\n            }\r\n          },\r\n          (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onToggleAll() {\r\n    this.toggleAll = !this.toggleAll;\r\n\r\n    for (let index = 0; index < this.materiaisLista.length; index++) {\r\n      this.materiaisLista[index].checked = this.toggleAll === true ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  onCheckMaterial(index: number, material: any): void {\r\n    this.materiaisLista[index].checked = material.checked == 0 ? 1 : 0;\r\n  }\r\n\r\n  onAssociarMateriais(): void {\r\n    this.toggleAll = false;\r\n\r\n    for (let index = 0; index < this.materiaisLista.length; index++) {\r\n      if (this.materiaisLista[index].checked === 1) {\r\n        const material = {\r\n          codClasse: this.materiaisLista[index].codClasse,\r\n          codMaterial: this.materiaisLista[index].codigoMaterial,\r\n          nomeMaterial: this.materiaisLista[index].descricao,\r\n        };\r\n\r\n        this.materialAssociado.emit(material);\r\n        this.materiaisLista[index].checked = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangeLinha(codLinha: number, resetClasse = true) {\r\n    if (resetClasse) {\r\n      this.form.controls.codClasse.reset();\r\n      this.form.controls.codClasse.setValue(null);\r\n    }\r\n\r\n    this.form.controls.codClasse.enable();\r\n    this.form.controls.codClasse.setValidators([Validators.required]);\r\n    this.form.controls.codClasse.updateValueAndValidity();\r\n\r\n    this.form.controls.codMaterial.reset();\r\n    this.form.controls.codMaterial.disable();\r\n    this.form.controls.codMaterial.setValue(null);\r\n    this.form.controls.codMaterial.updateValueAndValidity();\r\n\r\n    this.filteredClasses = this.classes.filter(\r\n      (value: any) => value.idLinha == codLinha\r\n    );\r\n  }\r\n\r\n  onChangeClasse(codClasse: number) {\r\n    this.form.controls.codMaterial.reset();\r\n    this.form.controls.codMaterial.enable();\r\n    this.form.controls.codMaterial.setValue(null);\r\n    this.form.controls.codMaterial.updateValueAndValidity();\r\n\r\n    this.getMateriais(codClasse);\r\n  }\r\n\r\n  getMateriais(codClasse: number): void {\r\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\r\n      this.materiaisLoader = true;\r\n      this.materiais = [];\r\n\r\n      this.comercialService\r\n        .getMateriais({\r\n          codClasse: codClasse,\r\n          situacao: 'A'\r\n        })\r\n        .pipe(\r\n          finalize(() => {\r\n            this.materiaisLoader = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: JsonResponse) => {\r\n            if (response.success === true) {\r\n              this.materiais = response.data;\r\n\r\n              this.materiais.unshift({\r\n                codigoMaterial: 0,\r\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\r\n              });\r\n\r\n              this.form.controls.codMaterial.setValue(0);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  setLinhaSelecionada(codLinha: number): void {\r\n    this.form.controls.codLinha.setValue(codLinha);\r\n    this.onChangeLinha(codLinha, false);\r\n  }\r\n\r\n  setClasseSelecionada(codClasse: number): void {\r\n    this.form.controls.codClasse.setValue(codClasse);\r\n    this.onChangeClasse(codClasse);\r\n    this.materiaisLista = [];\r\n  }\r\n}\r\n","export default \"<div class=\\\"row mb-2\\\">\\r\\n  <div class=\\\"col mt-auto\\\">\\r\\n    <div class=\\\"mtc-title mb-0\\\">Pesquisar material principal</div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex justify-content-end\\\">\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n        (click)=\\\"onFilter()\\\"\\r\\n        [disabled]=\\\"searching === true\\\">\\r\\n        <i class=\\\"fas fa-search\\\"></i>\\r\\n        <span>Pesquisar</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<advanced-filter>\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label for=\\\"codLinha\\\">Linha</label>\\r\\n        <ng-select\\r\\n          [searchable]=\\\"true\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          [items]=\\\"linhas\\\"\\r\\n          formControlName=\\\"codLinha\\\"\\r\\n          [virtualScroll]=\\\"true\\\"\\r\\n          labelForId=\\\"codLinha\\\"\\r\\n          bindLabel=\\\"descricao\\\"\\r\\n          bindValue=\\\"id\\\"\\r\\n          (change)=\\\"onChangeLinha($event.id)\\\">\\r\\n        </ng-select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label for=\\\"codClasse\\\">Classe</label>\\r\\n        <ng-select\\r\\n          [searchable]=\\\"true\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          [items]=\\\"filteredClasses\\\"\\r\\n          formControlName=\\\"codClasse\\\"\\r\\n          [virtualScroll]=\\\"true\\\"\\r\\n          labelForId=\\\"codClasse\\\"\\r\\n          bindLabel=\\\"nomeClasse\\\"\\r\\n          bindValue=\\\"idClasse\\\"\\r\\n          (change)=\\\"onChangeClasse($event.idClasse)\\\">\\r\\n        </ng-select>\\r\\n      </div>\\r\\n    </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-12\\\">\\r\\n        <label for=\\\"codMaterial\\\">Material</label>\\r\\n        <ng-select\\r\\n          [searchable]=\\\"true\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          [items]=\\\"materiais\\\"\\r\\n          formControlName=\\\"codMaterial\\\"\\r\\n          [virtualScroll]=\\\"true\\\"\\r\\n          labelForId=\\\"codMaterial\\\"\\r\\n          bindLabel=\\\"codigoDescricaoMaterial\\\"\\r\\n          bindValue=\\\"codigoMaterial\\\"\\r\\n          [loading]=\\\"materiaisLoader\\\"\\r\\n          loadingText=\\\"Carregando...\\\">\\r\\n        </ng-select>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</advanced-filter>\\r\\n<div *ngIf=\\\"materiaisLista.length > 0\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"mtc-title\\\">Selecione o material principal</div>\\r\\n      <custom-table [config]=\\\"tableConfigMateriais\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 5%\\\"></th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let material of materiaisLista\\\" [class.table-active]=\\\"material.codigoMaterial == codMaterialSelecionado\\\">\\r\\n            <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n              <btn-icon\\r\\n                [icon]=\\\"material.codigoMaterial == codMaterialSelecionado ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                size=\\\"small\\\"\\r\\n                (click)=\\\"onCheckMaterial(material)\\\">\\r\\n              </btn-icon>\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              style=\\\"width: 95%\\\"\\r\\n              (click)=\\\"onCheckMaterial(material)\\\">\\r\\n              {{ material.codigoDescricaoMaterial | uppercase }}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <message\\r\\n      icon=\\\"fas fa-cog fa-spin\\\"\\r\\n      text=\\\"Estamos pesquisando os materiais para você...\\\">\\r\\n    </message>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"searching === false\\\">\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"materiaisListaEmpty && materiaisListaLoaded\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <message\\r\\n        icon=\\\"fas fa-box-open\\\"\\r\\n        text=\\\"Nenhuma informação encontrada\\\">\\r\\n      </message>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <message\\r\\n        icon=\\\"fas fa-search\\\"\\r\\n        text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\r\\n      </message>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChange,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-templates-material-principal',\r\n  templateUrl: './material-principal.component.html',\r\n  styleUrls: ['./material-principal.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisTemplatesMaterialPrincipalComponent\r\n  implements OnInit, OnChanges {\r\n  @Input('linhas') linhas: any[] = [];\r\n  @Input('classes') classes: any[] = [];\r\n\r\n  @Input('limparMaterialSelecionado') limparMaterialSelecionado: boolean;\r\n\r\n  @Output('loaderNavbar') loaderNavbar: EventEmitter<\r\n    boolean\r\n  > = new EventEmitter();\r\n  @Output('materialPrincipal') materialPrincipal: EventEmitter<\r\n    object\r\n  > = new EventEmitter();\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  form: FormGroup;\r\n\r\n  filteredClasses: Array<any> = [];\r\n  materiais: Array<any> = [];\r\n  materiaisLoader: boolean;\r\n\r\n  searching = false;\r\n  firstSearch = false;\r\n\r\n  materiaisLista: Array<any> = [];\r\n  materiaisListaLoaded = false;\r\n  materiaisListaEmpty = false;\r\n\r\n  codMaterialSelecionado: number = null;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  ngOnChanges(events: SimpleChanges): void {\r\n    if (\r\n      events.limparMaterialSelecionado &&\r\n      events.limparMaterialSelecionado.currentValue === true\r\n    ) {\r\n      this.setMaterialSelecionado(null);\r\n    }\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      codLinha: [null, [Validators.required]],\r\n      codClasse: [null, [Validators.required]],\r\n      codMaterial: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.loaderNavbar.emit(true);\r\n      this.searching = true;\r\n      this.materiaisLista = [];\r\n      this.materiaisListaLoaded = false;\r\n      this.materiaisListaEmpty = false;\r\n\r\n      let params = {\r\n        codClasse: this.form.value.codClasse,\r\n      };\r\n\r\n      if (this.form.value.codMaterial !== 0) {\r\n        Object.assign(params, {\r\n          codMaterial: this.form.value.codMaterial,\r\n        });\r\n      }\r\n\r\n      this.comercialService\r\n        .getMateriais(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.firstSearch = true;\r\n            this.searching = false;\r\n            this.loaderNavbar.emit(false);\r\n            this.materiaisListaLoaded = true;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.materiaisLista = response.data;\r\n\r\n              if (this.materiaisLista.length > 9) {\r\n                this.tableConfigMateriais.fixedHeader = true;\r\n              } else {\r\n                this.tableConfigMateriais.fixedHeader = false;\r\n              }\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n              this.materiaisListaEmpty = true;\r\n            } else {\r\n              this.pnotifyService.error();\r\n              this.materiaisListaEmpty = true;\r\n            }\r\n          },\r\n          (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onCheckMaterial(material: any): void {\r\n    this.setMaterialSelecionado(material.codigoMaterial);\r\n    this.materialPrincipal.emit(material);\r\n  }\r\n\r\n  setMaterialSelecionado(codMaterial: number): void {\r\n    this.codMaterialSelecionado = codMaterial;\r\n  }\r\n\r\n  onChangeLinha(codLinha: number) {\r\n    this.form.controls.codClasse.reset();\r\n    this.form.controls.codClasse.setValue(null);\r\n    this.form.controls.codClasse.enable();\r\n    this.form.controls.codClasse.setValidators([Validators.required]);\r\n    this.form.controls.codClasse.updateValueAndValidity();\r\n\r\n    this.form.controls.codMaterial.reset();\r\n    this.form.controls.codMaterial.disable();\r\n    this.form.controls.codMaterial.setValue(null);\r\n    this.form.controls.codMaterial.updateValueAndValidity();\r\n\r\n    this.filteredClasses = this.classes.filter(\r\n      (value: any) => value.idLinha == codLinha\r\n    );\r\n  }\r\n\r\n  onChangeClasse(codClasse: number) {\r\n    this.form.controls.codMaterial.reset();\r\n    this.form.controls.codMaterial.enable();\r\n    this.form.controls.codMaterial.setValue(null);\r\n    this.form.controls.codMaterial.updateValueAndValidity();\r\n\r\n    this.getMateriais(codClasse);\r\n  }\r\n\r\n  getMateriais(codClasse: number): void {\r\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\r\n      this.materiaisLoader = true;\r\n      this.materiais = [];\r\n\r\n      this.comercialService\r\n        .getMateriais({\r\n          codClasse: codClasse,\r\n        })\r\n        .pipe(\r\n          finalize(() => {\r\n            this.materiaisLoader = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: JsonResponse) => {\r\n            if (response.success === true) {\r\n              this.materiais = response.data;\r\n\r\n              this.materiais.unshift({\r\n                codigoMaterial: 0,\r\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\r\n              });\r\n\r\n              this.form.controls.codMaterial.setValue(0);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvdGVtcGxhdGVzL2Fzc29jaWFjb2VzL2Fzc29jaWFjb2VzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  \r\n  \r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos(){\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvdGVtcGxhdGVzL21hdGVyaWFsLXByaW5jaXBhbC9tYXRlcmlhbC1wcmluY2lwYWwuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<div *ngIf=\\\"linhas.length > 0 && classes.length > 0\\\">\\r\\n  <div class=\\\"row mb-2\\\">\\r\\n    <div class=\\\"col mt-auto\\\">\\r\\n      <div class=\\\"mtc-title mb-0\\\">Pesquisar por materiais para associação</div>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"d-flex justify-content-end\\\">\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n          (click)=\\\"onFilter()\\\"\\r\\n          [disabled]=\\\"searching === true\\\">\\r\\n          <i class=\\\"fas fa-search\\\"></i>\\r\\n          <span>Pesquisar</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <advanced-filter>\\r\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-6\\\">\\r\\n          <label for=\\\"codLinha\\\">Linha</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"linhas\\\"\\r\\n            formControlName=\\\"codLinha\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"codLinha\\\"\\r\\n            bindLabel=\\\"descricao\\\"\\r\\n            bindValue=\\\"id\\\"\\r\\n            (change)=\\\"onChangeLinha($event.id)\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-6\\\">\\r\\n          <label for=\\\"codClasse\\\">Classe</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"filteredClasses\\\"\\r\\n            formControlName=\\\"codClasse\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"codClasse\\\"\\r\\n            bindLabel=\\\"nomeClasse\\\"\\r\\n            bindValue=\\\"idClasse\\\"\\r\\n            (change)=\\\"onChangeClasse($event.idClasse)\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-12\\\">\\r\\n          <label for=\\\"codMaterial\\\">Material</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"materiais\\\"\\r\\n            formControlName=\\\"codMaterial\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"codMaterial\\\"\\r\\n            bindLabel=\\\"codigoDescricaoMaterial\\\"\\r\\n            bindValue=\\\"codigoMaterial\\\"\\r\\n            [loading]=\\\"materiaisLoader\\\"\\r\\n            loadingText=\\\"Carregando...\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div *ngIf=\\\"materiaisLista.length > 0\\\">\\r\\n    <div class=\\\"row mb-2\\\">\\r\\n      <div class=\\\"col mt-auto\\\">\\r\\n        <div class=\\\"mtc-title mb-0\\\">Seleção de materiais</div>\\r\\n      </div>\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"d-flex justify-content-end\\\">\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-sm btn-outline-primary\\\"\\r\\n            (click)=\\\"onAssociarMateriais()\\\"\\r\\n            [disabled]=\\\"searching === true\\\">\\r\\n            <i class=\\\"fas fa-exchange-alt\\\"></i>\\r\\n            <span>Associar</span>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <custom-table [config]=\\\"tableConfigMateriais\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center\\\"\\r\\n                style=\\\"width: 5%\\\">\\r\\n                <btn-icon\\r\\n                  [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  (click)=\\\"onToggleAll()\\\">\\r\\n                </btn-icon>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let material of materiaisLista; let i = index;\\\">\\r\\n              <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                <btn-icon\\r\\n                  [icon]=\\\"material.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  (click)=\\\"onCheckMaterial(i, material)\\\">\\r\\n                </btn-icon>\\r\\n              </td>\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                style=\\\"width: 95%\\\"\\r\\n                (click)=\\\"onCheckMaterial(i, material)\\\">\\r\\n                {{ material.codigoDescricaoMaterial | uppercase }}\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <message\\r\\n        icon=\\\"fas fa-cog fa-spin\\\"\\r\\n        text=\\\"Estamos pesquisando os materiais para você...\\\">\\r\\n      </message>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"searching === false\\\">\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"materiaisListaEmpty && materiaisListaLoaded\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <message\\r\\n          icon=\\\"fas fa-box-open\\\"\\r\\n          text=\\\"Nenhuma informação encontrada\\\">\\r\\n        </message>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <message\\r\\n          icon=\\\"fas fa-search\\\"\\r\\n          text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\r\\n        </message>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";"]}