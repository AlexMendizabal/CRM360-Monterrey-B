{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/templates/templates.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/templates/associacoes/associacoes.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/templates/material-principal/material-principal.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/templates/material-principal/material-principal.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/templates/associacoes/associacoes.component.scss","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/templates/material-principal/material-principal.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/templates/associacoes/associacoes.component.html"],"names":["ComercialCadastrosMateriaisTemplatesModule","declarations","imports","exports","ComercialCadastrosMateriaisTemplatesAssociacoesComponent","formBuilder","pnotifyService","comercialService","linhas","classes","linhaSelecionada","classeSelecionada","loaderNavbar","materialAssociado","tableConfigMateriais","fixedHeader","bodyHeight","filteredClasses","materiais","toggleAll","searching","firstSearch","materiaisLista","materiaisListaLoaded","materiaisListaEmpty","getPNotify","setFormBuilder","events","currentValue","length","onChangeLinha","form","value","codLinha","onChangeClasse","codClasse","firstChange","setLinhaSelecionada","setClasseSelecionada","group","required","codMaterial","valid","emit","params","Object","assign","getMateriais","pipe","subscribe","response","hasOwnProperty","success","data","map","el","o","checked","error","mensagem","index","material","codigoMaterial","nomeMaterial","descricao","resetClasse","controls","reset","setValue","enable","setValidators","updateValueAndValidity","disable","filter","idLinha","materiaisLoader","situacao","unshift","codigoDescricaoMaterial","selector","template","ComercialCadastrosMateriaisTemplatesMaterialPrincipalComponent","materialPrincipal","codMaterialSelecionado","limparMaterialSelecionado","setMaterialSelecionado","ComercialService","http","API","httpParams","param","append","get","providedIn"],"mappings":"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","file":"default~contratos-comerciais-contratos-comerciais-module~contratos-contratos-module~integracao-condi~c7866944-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// Modules\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosMateriaisTemplatesMaterialPrincipalComponent } from './material-principal/material-principal.component';\nimport { ComercialCadastrosMateriaisTemplatesAssociacoesComponent } from './associacoes/associacoes.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosMateriaisTemplatesMaterialPrincipalComponent,\n    ComercialCadastrosMateriaisTemplatesAssociacoesComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    TemplatesModule,\n  ],\n  exports: [\n    ComercialCadastrosMateriaisTemplatesMaterialPrincipalComponent,\n    ComercialCadastrosMateriaisTemplatesAssociacoesComponent,\n  ],\n})\nexport class ComercialCadastrosMateriaisTemplatesModule {}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\n\n// Interfaces\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-templates-associacoes',\n  templateUrl: './associacoes.component.html',\n  styleUrls: ['./associacoes.component.scss'],\n})\nexport class ComercialCadastrosMateriaisTemplatesAssociacoesComponent\n  implements OnInit, OnChanges {\n  @Input('linhas') linhas: any[] = [];\n  @Input('classes') classes: any[] = [];\n\n  @Input('linhaSelecionada') linhaSelecionada: number = null;\n  @Input('classeSelecionada') classeSelecionada: number = null;\n\n  @Output('loaderNavbar') loaderNavbar: EventEmitter<\n    boolean\n  > = new EventEmitter();\n  @Output('materialAssociado') materialAssociado: EventEmitter<\n    object\n  > = new EventEmitter();\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  form: FormGroup;\n\n  filteredClasses: Array<any> = [];\n  materiais: Array<any> = [];\n  materiaisLoader: boolean;\n\n  toggleAll = false;\n  searching = false;\n  firstSearch = false;\n\n  materiaisLista: Array<any> = [];\n  materiaisListaLoaded = false;\n  materiaisListaEmpty = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private comercialService: ComercialService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.setFormBuilder();\n  }\n\n  ngOnChanges(events: SimpleChanges): void {\n    if (events.linhas && events.linhas.currentValue.length > 0) {\n      this.onChangeLinha(this.form.value.codLinha, false);\n    }\n\n    if (events.classes && events.classes.currentValue.length > 0) {\n      this.onChangeClasse(this.form.value.codClasse);\n    }\n\n    if (\n      events.linhaSelecionada &&\n      events.linhaSelecionada.currentValue !== null &&\n      !events.linhaSelecionada.firstChange\n    ) {\n      this.setLinhaSelecionada(events.linhaSelecionada.currentValue);\n    }\n\n    if (\n      events.classeSelecionada &&\n      events.classeSelecionada.currentValue !== null &&\n      !events.classeSelecionada.firstChange\n    ) {\n      this.setClasseSelecionada(events.classeSelecionada.currentValue);\n    }\n  }\n\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      codLinha: [this.linhaSelecionada, [Validators.required]],\n      codClasse: [this.classeSelecionada, [Validators.required]],\n      codMaterial: [null, [Validators.required]],\n    });\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.loaderNavbar.emit(true);\n      this.searching = true;\n      this.materiaisLista = [];\n      this.materiaisListaLoaded = false;\n      this.materiaisListaEmpty = false;\n\n      let params = {\n        codClasse: this.form.value.codClasse,\n      };\n\n      if (this.form.value.codMaterial !== 0) {\n        Object.assign(params, {\n          codMaterial: this.form.value.codMaterial,\n        });\n      }\n\n      this.comercialService\n        .getMateriais(params)\n        .pipe(\n          finalize(() => {\n            this.firstSearch = true;\n            this.searching = false;\n            this.loaderNavbar.emit(false);\n            this.materiaisListaLoaded = true;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.materiaisLista = response.data.map(function (el: any) {\n                var o = Object.assign({}, el);\n                o.checked = 0;\n                return o;\n              });\n\n              if (this.materiaisLista.length > 9) {\n                this.tableConfigMateriais.fixedHeader = true;\n              } else {\n                this.tableConfigMateriais.fixedHeader = false;\n              }\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n              this.materiaisListaEmpty = true;\n            } else {\n              this.pnotifyService.error();\n              this.materiaisListaEmpty = true;\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  onToggleAll() {\n    this.toggleAll = !this.toggleAll;\n\n    for (let index = 0; index < this.materiaisLista.length; index++) {\n      this.materiaisLista[index].checked = this.toggleAll === true ? 1 : 0;\n    }\n  }\n\n  onCheckMaterial(index: number, material: any): void {\n    this.materiaisLista[index].checked = material.checked == 0 ? 1 : 0;\n  }\n\n  onAssociarMateriais(): void {\n    this.toggleAll = false;\n\n    for (let index = 0; index < this.materiaisLista.length; index++) {\n      if (this.materiaisLista[index].checked === 1) {\n        const material = {\n          codClasse: this.materiaisLista[index].codClasse,\n          codMaterial: this.materiaisLista[index].codigoMaterial,\n          nomeMaterial: this.materiaisLista[index].descricao,\n        };\n\n        this.materialAssociado.emit(material);\n        this.materiaisLista[index].checked = 0;\n      }\n    }\n  }\n\n  onChangeLinha(codLinha: number, resetClasse = true) {\n    if (resetClasse) {\n      this.form.controls.codClasse.reset();\n      this.form.controls.codClasse.setValue(null);\n    }\n\n    this.form.controls.codClasse.enable();\n    this.form.controls.codClasse.setValidators([Validators.required]);\n    this.form.controls.codClasse.updateValueAndValidity();\n\n    this.form.controls.codMaterial.reset();\n    this.form.controls.codMaterial.disable();\n    this.form.controls.codMaterial.setValue(null);\n    this.form.controls.codMaterial.updateValueAndValidity();\n\n    this.filteredClasses = this.classes.filter(\n      (value: any) => value.idLinha == codLinha\n    );\n  }\n\n  onChangeClasse(codClasse: number) {\n    this.form.controls.codMaterial.reset();\n    this.form.controls.codMaterial.enable();\n    this.form.controls.codMaterial.setValue(null);\n    this.form.controls.codMaterial.updateValueAndValidity();\n\n    this.getMateriais(codClasse);\n  }\n\n  getMateriais(codClasse: number): void {\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\n      this.materiaisLoader = true;\n      this.materiais = [];\n\n      this.comercialService\n        .getMateriais({\n          codClasse: codClasse,\n          situacao: 'A'\n        })\n        .pipe(\n          finalize(() => {\n            this.materiaisLoader = false;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (response.success === true) {\n              this.materiais = response.data;\n\n              this.materiais.unshift({\n                codigoMaterial: 0,\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\n              });\n\n              this.form.controls.codMaterial.setValue(0);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  setLinhaSelecionada(codLinha: number): void {\n    this.form.controls.codLinha.setValue(codLinha);\n    this.onChangeLinha(codLinha, false);\n  }\n\n  setClasseSelecionada(codClasse: number): void {\n    this.form.controls.codClasse.setValue(codClasse);\n    this.onChangeClasse(codClasse);\n    this.materiaisLista = [];\n  }\n}\n","export default \"<div class=\\\"row mb-2\\\">\\n  <div class=\\\"col mt-auto\\\">\\n    <div class=\\\"mtc-title mb-0\\\">Pesquisar material principal</div>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex justify-content-end\\\">\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-sm btn-outline-secondary\\\"\\n        (click)=\\\"onFilter()\\\"\\n        [disabled]=\\\"searching === true\\\">\\n        <i class=\\\"fas fa-search\\\"></i>\\n        <span>Pesquisar</span>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n<advanced-filter>\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label for=\\\"codLinha\\\">Linha</label>\\n        <ng-select\\n          [searchable]=\\\"true\\\"\\n          [clearable]=\\\"false\\\"\\n          [items]=\\\"linhas\\\"\\n          formControlName=\\\"codLinha\\\"\\n          [virtualScroll]=\\\"true\\\"\\n          labelForId=\\\"codLinha\\\"\\n          bindLabel=\\\"descricao\\\"\\n          bindValue=\\\"id\\\"\\n          (change)=\\\"onChangeLinha($event.id)\\\">\\n        </ng-select>\\n      </div>\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label for=\\\"codClasse\\\">Classe</label>\\n        <ng-select\\n          [searchable]=\\\"true\\\"\\n          [clearable]=\\\"false\\\"\\n          [items]=\\\"filteredClasses\\\"\\n          formControlName=\\\"codClasse\\\"\\n          [virtualScroll]=\\\"true\\\"\\n          labelForId=\\\"codClasse\\\"\\n          bindLabel=\\\"nomeClasse\\\"\\n          bindValue=\\\"idClasse\\\"\\n          (change)=\\\"onChangeClasse($event.idClasse)\\\">\\n        </ng-select>\\n      </div>\\n    </div>\\n      <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-12\\\">\\n        <label for=\\\"codMaterial\\\">Material</label>\\n        <ng-select\\n          [searchable]=\\\"true\\\"\\n          [clearable]=\\\"false\\\"\\n          [items]=\\\"materiais\\\"\\n          formControlName=\\\"codMaterial\\\"\\n          [virtualScroll]=\\\"true\\\"\\n          labelForId=\\\"codMaterial\\\"\\n          bindLabel=\\\"codigoDescricaoMaterial\\\"\\n          bindValue=\\\"codigoMaterial\\\"\\n          [loading]=\\\"materiaisLoader\\\"\\n          loadingText=\\\"Carregando...\\\">\\n        </ng-select>\\n      </div>\\n    </div>\\n  </form>\\n</advanced-filter>\\n<div *ngIf=\\\"materiaisLista.length > 0\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"mtc-title\\\">Selecione o material principal</div>\\n      <custom-table [config]=\\\"tableConfigMateriais\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 5%\\\"></th>\\n            <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let material of materiaisLista\\\" [class.table-active]=\\\"material.codigoMaterial == codMaterialSelecionado\\\">\\n            <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n              <btn-icon\\n                [icon]=\\\"material.codigoMaterial == codMaterialSelecionado ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                size=\\\"small\\\"\\n                (click)=\\\"onCheckMaterial(material)\\\">\\n              </btn-icon>\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              style=\\\"width: 95%\\\"\\n              (click)=\\\"onCheckMaterial(material)\\\">\\n              {{ material.codigoDescricaoMaterial | uppercase }}\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\n  <div class=\\\"col\\\">\\n    <message\\n      icon=\\\"fas fa-cog fa-spin\\\"\\n      text=\\\"Estamos pesquisando os materiais para você...\\\">\\n    </message>\\n  </div>\\n</div>\\n<div *ngIf=\\\"searching === false\\\">\\n  <div class=\\\"row\\\" *ngIf=\\\"materiaisListaEmpty && materiaisListaLoaded\\\">\\n    <div class=\\\"col\\\">\\n      <message\\n        icon=\\\"fas fa-box-open\\\"\\n        text=\\\"Nenhuma informação encontrada\\\">\\n      </message>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\n    <div class=\\\"col\\\">\\n      <message\\n        icon=\\\"fas fa-search\\\"\\n        text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\n      </message>\\n    </div>\\n  </div>\\n</div>\\n\";","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  SimpleChange,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\n\n// Interfaces\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-templates-material-principal',\n  templateUrl: './material-principal.component.html',\n  styleUrls: ['./material-principal.component.scss'],\n})\nexport class ComercialCadastrosMateriaisTemplatesMaterialPrincipalComponent\n  implements OnInit, OnChanges {\n  @Input('linhas') linhas: any[] = [];\n  @Input('classes') classes: any[] = [];\n\n  @Input('limparMaterialSelecionado') limparMaterialSelecionado: boolean;\n\n  @Output('loaderNavbar') loaderNavbar: EventEmitter<\n    boolean\n  > = new EventEmitter();\n  @Output('materialPrincipal') materialPrincipal: EventEmitter<\n    object\n  > = new EventEmitter();\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  form: FormGroup;\n\n  filteredClasses: Array<any> = [];\n  materiais: Array<any> = [];\n  materiaisLoader: boolean;\n\n  searching = false;\n  firstSearch = false;\n\n  materiaisLista: Array<any> = [];\n  materiaisListaLoaded = false;\n  materiaisListaEmpty = false;\n\n  codMaterialSelecionado: number = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private comercialService: ComercialService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.setFormBuilder();\n  }\n\n  ngOnChanges(events: SimpleChanges): void {\n    if (\n      events.limparMaterialSelecionado &&\n      events.limparMaterialSelecionado.currentValue === true\n    ) {\n      this.setMaterialSelecionado(null);\n    }\n  }\n\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      codLinha: [null, [Validators.required]],\n      codClasse: [null, [Validators.required]],\n      codMaterial: [null, [Validators.required]],\n    });\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.loaderNavbar.emit(true);\n      this.searching = true;\n      this.materiaisLista = [];\n      this.materiaisListaLoaded = false;\n      this.materiaisListaEmpty = false;\n\n      let params = {\n        codClasse: this.form.value.codClasse,\n      };\n\n      if (this.form.value.codMaterial !== 0) {\n        Object.assign(params, {\n          codMaterial: this.form.value.codMaterial,\n        });\n      }\n\n      this.comercialService\n        .getMateriais(params)\n        .pipe(\n          finalize(() => {\n            this.firstSearch = true;\n            this.searching = false;\n            this.loaderNavbar.emit(false);\n            this.materiaisListaLoaded = true;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.materiaisLista = response.data;\n\n              if (this.materiaisLista.length > 9) {\n                this.tableConfigMateriais.fixedHeader = true;\n              } else {\n                this.tableConfigMateriais.fixedHeader = false;\n              }\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n              this.materiaisListaEmpty = true;\n            } else {\n              this.pnotifyService.error();\n              this.materiaisListaEmpty = true;\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  onCheckMaterial(material: any): void {\n    this.setMaterialSelecionado(material.codigoMaterial);\n    this.materialPrincipal.emit(material);\n  }\n\n  setMaterialSelecionado(codMaterial: number): void {\n    this.codMaterialSelecionado = codMaterial;\n  }\n\n  onChangeLinha(codLinha: number) {\n    this.form.controls.codClasse.reset();\n    this.form.controls.codClasse.setValue(null);\n    this.form.controls.codClasse.enable();\n    this.form.controls.codClasse.setValidators([Validators.required]);\n    this.form.controls.codClasse.updateValueAndValidity();\n\n    this.form.controls.codMaterial.reset();\n    this.form.controls.codMaterial.disable();\n    this.form.controls.codMaterial.setValue(null);\n    this.form.controls.codMaterial.updateValueAndValidity();\n\n    this.filteredClasses = this.classes.filter(\n      (value: any) => value.idLinha == codLinha\n    );\n  }\n\n  onChangeClasse(codClasse: number) {\n    this.form.controls.codMaterial.reset();\n    this.form.controls.codMaterial.enable();\n    this.form.controls.codMaterial.setValue(null);\n    this.form.controls.codMaterial.updateValueAndValidity();\n\n    this.getMateriais(codClasse);\n  }\n\n  getMateriais(codClasse: number): void {\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\n      this.materiaisLoader = true;\n      this.materiais = [];\n\n      this.comercialService\n        .getMateriais({\n          codClasse: codClasse,\n        })\n        .pipe(\n          finalize(() => {\n            this.materiaisLoader = false;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (response.success === true) {\n              this.materiais = response.data;\n\n              this.materiais.unshift({\n                codigoMaterial: 0,\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\n              });\n\n              this.form.controls.codMaterial.setValue(0);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvdGVtcGxhdGVzL2Fzc29jaWFjb2VzL2Fzc29jaWFjb2VzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvdGVtcGxhdGVzL21hdGVyaWFsLXByaW5jaXBhbC9tYXRlcmlhbC1wcmluY2lwYWwuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<div *ngIf=\\\"linhas.length > 0 && classes.length > 0\\\">\\n  <div class=\\\"row mb-2\\\">\\n    <div class=\\\"col mt-auto\\\">\\n      <div class=\\\"mtc-title mb-0\\\">Pesquisar por materiais para associação</div>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <div class=\\\"d-flex justify-content-end\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-sm btn-outline-secondary\\\"\\n          (click)=\\\"onFilter()\\\"\\n          [disabled]=\\\"searching === true\\\">\\n          <i class=\\\"fas fa-search\\\"></i>\\n          <span>Pesquisar</span>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n  <advanced-filter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-6\\\">\\n          <label for=\\\"codLinha\\\">Linha</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"linhas\\\"\\n            formControlName=\\\"codLinha\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"codLinha\\\"\\n            bindLabel=\\\"descricao\\\"\\n            bindValue=\\\"id\\\"\\n            (change)=\\\"onChangeLinha($event.id)\\\">\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-6\\\">\\n          <label for=\\\"codClasse\\\">Classe</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"filteredClasses\\\"\\n            formControlName=\\\"codClasse\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"codClasse\\\"\\n            bindLabel=\\\"nomeClasse\\\"\\n            bindValue=\\\"idClasse\\\"\\n            (change)=\\\"onChangeClasse($event.idClasse)\\\">\\n          </ng-select>\\n        </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-12\\\">\\n          <label for=\\\"codMaterial\\\">Material</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"materiais\\\"\\n            formControlName=\\\"codMaterial\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"codMaterial\\\"\\n            bindLabel=\\\"codigoDescricaoMaterial\\\"\\n            bindValue=\\\"codigoMaterial\\\"\\n            [loading]=\\\"materiaisLoader\\\"\\n            loadingText=\\\"Carregando...\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div *ngIf=\\\"materiaisLista.length > 0\\\">\\n    <div class=\\\"row mb-2\\\">\\n      <div class=\\\"col mt-auto\\\">\\n        <div class=\\\"mtc-title mb-0\\\">Seleção de materiais</div>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <div class=\\\"d-flex justify-content-end\\\">\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-sm btn-outline-primary\\\"\\n            (click)=\\\"onAssociarMateriais()\\\"\\n            [disabled]=\\\"searching === true\\\">\\n            <i class=\\\"fas fa-exchange-alt\\\"></i>\\n            <span>Associar</span>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <custom-table [config]=\\\"tableConfigMateriais\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th\\n                scope=\\\"col\\\"\\n                class=\\\"text-center\\\"\\n                style=\\\"width: 5%\\\">\\n                <btn-icon\\n                  [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                  size=\\\"small\\\"\\n                  (click)=\\\"onToggleAll()\\\">\\n                </btn-icon>\\n              </th>\\n              <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiaisLista; let i = index;\\\">\\n              <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                <btn-icon\\n                  [icon]=\\\"material.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                  size=\\\"small\\\"\\n                  (click)=\\\"onCheckMaterial(i, material)\\\">\\n                </btn-icon>\\n              </td>\\n              <td\\n                class=\\\"hover\\\"\\n                style=\\\"width: 95%\\\"\\n                (click)=\\\"onCheckMaterial(i, material)\\\">\\n                {{ material.codigoDescricaoMaterial | uppercase }}\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\n    <div class=\\\"col\\\">\\n      <message\\n        icon=\\\"fas fa-cog fa-spin\\\"\\n        text=\\\"Estamos pesquisando os materiais para você...\\\">\\n      </message>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"searching === false\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"materiaisListaEmpty && materiaisListaLoaded\\\">\\n      <div class=\\\"col\\\">\\n        <message\\n          icon=\\\"fas fa-box-open\\\"\\n          text=\\\"Nenhuma informação encontrada\\\">\\n        </message>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\n      <div class=\\\"col\\\">\\n        <message\\n          icon=\\\"fas fa-search\\\"\\n          text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\n        </message>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";"]}