{"version":3,"sources":["webpack:///src/app/modules/logistica/yms/checklist/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/yms/checklist/checklist-routing.module.ts","webpack:///src/app/modules/logistica/yms/checklist/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/yms/checklist/lista/lista.component.ts","webpack:///src/app/modules/logistica/yms/checklist/lista/lista.component.scss","webpack:///src/app/modules/logistica/yms/checklist/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/yms/checklist/lista/lista.component.html","webpack:///src/app/modules/logistica/yms/checklist/checklist.module.ts"],"names":["routes","path","component","LogisticaYmsChecklistRoutingModule","imports","forChild","exports","LogisticaYmsChecklistListaComponent","route","pnotify","formBuilder","xlsxService","dateService","routerService","activatedRoute","detailPanelService","confirmModalService","checklistService","showDetailPanel","loading","loadingNavBar","totalItens","tableConfig","subtitleBorder","tipos","cod","nome","subtitles","id","text","color","itemsPerPage","totalItems","currentPage","buildForm","setBreadCrumb","onActivatedRoute","onDetailPanelEmitter","getFilterChecklist","$activatedRouteSubscription","unsubscribe","queryParams","subscribe","response","_response","getBase64UrlParams","form","patchValue","hasOwnProperty","TT_REGI_PAGI","getChecklist","getParams","showDetailPanelSubscription","config","event","showing","reset","PAGI","TIME","Date","getTime","group","ID_LOGI_YMS_CHEC","NM_CHEC","IN_STAT","DS_OBSE","NR_MATR","NM_USUA","DT_INCL","DT_ATUA","onFilter","snapshot","params","idSubModulo","breadCrumbTree","descricao","routerLink","hide","get","setValue","navigate","relativeTo","setBase64UrlParams","checklist","show","checklistSelecionado","loadedFinished","pipe","status","body","noResult","error","loadingChecklist","IN_PAGI","filterChecklist","notice","page","_params","_obj","value","prop","convertToUrlDate","borderClass","stat","confirmChange","asObservable","result","postChecklist","success","showConfirm","data","toLocaleDateString","split","dataExport","listagemExport","concat","exportFile","selector","template","LogisticaYmsChecklistCadastroComponent","router","localeService","titleService","atividadesService","formData","disabledForm","MASKS","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setFormBuilder","appTitle","setTitle","required","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","message","LogisticaYmsChecklistModule","declarations","forRoot"],"mappings":"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","file":"checklist-checklist-module-es5.js","sourcesContent":["export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Checklist\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\n    (click)=\\\"postChecklist()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\n        <legend>Dados do Checklist</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\n            <label for=\\\"NM_CHEC\\\">Descrição</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_CHEC\\\"\\n              formControlName=\\\"NM_CHEC\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('NM_CHEC') + ' ' + onFieldRequired('NM_CHEC')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_CHEC')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\n        <legend>Observação</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n          </div>\\n        </div>\\n        <br>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n</app-body>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\nimport { LogisticaYmsChecklistCadastroComponent } from './cadastro/cadastro.component';\nimport { LogisticaYmsChecklistListaComponent } from './lista/lista.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaYmsChecklistListaComponent,\n  },\n  {\n    path: 'novo',\n    component: LogisticaYmsChecklistCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: LogisticaYmsChecklistCadastroComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LogisticaYmsChecklistRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9jaGVja2xpc3QvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\nimport { LogisticaYmsChecklistService } from '../services/checklist.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//modelos\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\n\n//Interfaces\nimport { ILogisticaYmsChecklist } from './../models/checklist';\n\n\n@Component({\n  selector: 'logistica-yms-checklist-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class LogisticaYmsChecklistListaComponent\n  implements OnInit, OnDestroy {\n    \n  breadCrumbTree: Array<Breadcrumb>;\n  idSubModulo: number;\n  noResult: boolean;\n  loadingChecklist: boolean;\n  modalRef: BsModalRef;\n  form: FormGroup;\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  $activatedRouteSubscription: Subscription;\n\n  //LOADINGS\n  loading = true; \n  loadingNavBar = false; \n\n  //VARIAVEIS\n  totalItens: any = [];\n  filterChecklist: Array<ILogisticaYmsChecklist>;\n  checklist: Array<ILogisticaYmsChecklist>;\n  checklistSelecionado: ILogisticaYmsChecklist;\n\n  // CUSTOM TABLE\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  // Tipos de Situação dos Checklist (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '2',\n      nome: 'Inativos',\n    },\n  ];\n\n  // Subtitles (Ativo/Inativo)\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private formBuilder: FormBuilder,\n    private xlsxService: XlsxService,\n    private dateService: DateService,\n    private routerService: RouterService,\n    private activatedRoute: ActivatedRoute,\n    private detailPanelService: DetailPanelService,\n    private confirmModalService: ConfirmModalService,\n    private checklistService: LogisticaYmsChecklistService,\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n    this.onDetailPanelEmitter();\n    this.getFilterChecklist();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n          this.getChecklist(this.getParams());\n      }\n    );\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.patchValue({\n      PAGI: 1,\n      TT_REGI_PAGI: 100,\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID_LOGI_YMS_CHEC: [null],\n      NM_CHEC: [null],\n      IN_STAT: [null],\n      DS_OBSE: [null],\n      NR_MATR: [null],\n      NM_USUA: [null],\n      DT_INCL: [null],\n      DT_ATUA: [null],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/logistica/home`,\n      },\n      {\n        descricao: 'YMS',\n        routerLink: `/logistica/yms/${id}`,\n      },\n      {\n        descricao: 'Checklist',\n      },\n    ];\n  }\n\n  onFilter() {\n    this.detailPanelService.hide();\n    this.form.get('PAGI').setValue(1);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  onDetails(checklist: ILogisticaYmsChecklist): void {\n    this.detailPanelService.show();\n    this.checklistSelecionado = checklist;\n    this.detailPanelService.loadedFinished(false);\n  }\n\n  getChecklist(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n    this.checklistService\n      .getChecklist(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.checklist = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.checklist = [];\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  getFilterChecklist() {\n    this.loadingChecklist = true;\n    this.checklistService\n      .getChecklist({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingChecklist = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filterChecklist = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      });\n  }\n\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  classStatusBorder(checklist: ILogisticaYmsChecklist): string {\n    let borderClass: string;\n\n    if (checklist.IN_STAT == 1) {\n      borderClass = 'border-success';\n    } else if (checklist.IN_STAT == 2) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  changeType(params: ILogisticaYmsChecklist) {\n    const stat = params.IN_STAT == 1 ? 0 : 1;\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loadingNavBar = true;\n          params.IN_STAT = stat;\n          return this.checklistService.postChecklist(params);\n        }),\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotify.success();\n        },\n        (error: any) => {\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\n          this.pnotify.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == 1)\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Deseja realmente prosseguir com a ativação do registro?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onExport(): void {\n    let data = new Date().toLocaleDateString().split('/'),\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\n\n    let listagemExport: any = [];\n    listagemExport = this.checklist.concat(this.totalItens);\n\n    this.xlsxService.exportFile(listagemExport, `Checklist${dataExport}`);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9jaGVja2xpc3QvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","//Services\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//Bootstrap\nimport { utilsBr } from 'js-brasil';\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\n//Angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  FormArray,\n} from '@angular/forms';\n//rxjs\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LogisticaYmsChecklistService } from '../services/checklist.service';\n//interfaces\nimport { ILogisticaYmsChecklist } from '../models/checklist';\nimport { isNull } from 'util';\n\n@Component({\n  selector: 'logistica-yms-checklist-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class LogisticaYmsChecklistCadastroComponent\n  implements OnInit {\n  noResult: boolean;\n  $activatedRouteSubscription: Subscription;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  modalRef: BsModalRef;\n  formData: Array<FormData> = [];\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  //loading\n  disabledForm = false;\n  loading = false;\n  loadingNavBar = false;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private localeService: BsLocaleService,\n    private checklistService: LogisticaYmsChecklistService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n  public MASKS = utilsBr.MASKS;\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onActivatedRoute() {\n    const _params = this.activatedRoute.snapshot.params;\n    if (_params.hasOwnProperty('id'))\n    return this.getChecklist({ ID_LOGI_YMS_CHEC: _params['id'] }); \n  }\n\n\n  getChecklist(params?: Partial<ILogisticaYmsChecklist>) {\n    this.loading = true;\n    const _params = params ?? {};\n    this.checklistService\n      .getChecklist(_params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.form.patchValue(response.body['data'][0]) \n            this.noResult = false;\n          } else {\n            this.noResult = true;\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  setBreadCrumb(): void {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.appTitle = 'Cadastro';\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'YMS',\n        routerLink: `/logistica/yms/${id}`,\n      },\n      {\n        descricao: 'Checklist',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //formulario\n  setFormBuilder(): void {\n\n    this.form = this.formBuilder.group({\n      ID_LOGI_YMS_CHEC: [null],\n      NM_CHEC: [null, [Validators.required]],\n      IN_STAT: [isNull],\n      DS_OBSE: [null],\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  postChecklist() {\n    this.loadingNavBar = true;\n    this.checklistService\n      .postChecklist(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          try {\n            this.pnotify.error(error.error.message);\n          } catch (error) {\n            this.pnotify.error();\n          }\n        }\n      );\n  }\n  \n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Checklist\\\">\\n  <button\\n  type=\\\"button\\\"\\n  (click)=\\\"onExport()\\\"\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\n  Exportar\\n</button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onReset()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\n              <label for=\\\"filterChecklist\\\">Checklist</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"filterChecklist\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingChecklist\\\"\\n                labelForId=\\\"ID_LOGI_YMS_CHEC\\\"\\n                bindLabel=\\\"NM_CHEC\\\"\\n                bindValue=\\\"ID_LOGI_YMS_CHEC\\\"\\n                id=\\\"ID_LOGI_YMS_CHEC\\\"\\n                formControlName=\\\"ID_LOGI_YMS_CHEC\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              (keydown.enter)=\\\"onFilter()\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n            </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\n                (keydown.enter)=\\\"onFilter()\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\n      <div class=\\\"w-100\\\">\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" >ID</th>\\n              <th scope=\\\"col\\\" >Descrição</th>\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let check of checklist\\\"  [class.table-active]=\\\"check?.ID_LOGI_YMS_CHEC == checklistSelecionado?.ID_LOGI_ENMA_FHNC_OCPR && showDetailPanel\\\">\\n              <td  [ngClass]=\\\"check.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n              {{check.ID_LOGI_YMS_CHEC }}\\n              </td>\\n              <td >{{ check.NM_PARE | uppercase}}</td>\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"check.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(check)\\\">\\n                    <i [ngClass]=\\\"check.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', check.ID_LOGI_YMS_CHEC]\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(check)\\\">\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </div>\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel panelTitle=\\\"Histórico de alteração\\\">\\n        <custom-table>\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n              <th scope=\\\"col\\\">Usuário</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr>\\n              <td class=\\\"text-center\\\" *ngIf=\\\"checklistSelecionado?.DT_INCL != null && checklistSelecionado?.DT_ATUA == null \\\">{{ checklistSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm' }}</td>\\n              <td class=\\\"text-center\\\" *ngIf=\\\"checklistSelecionado?.DT_INCL != null && checklistSelecionado?.DT_ATUA != null \\\">{{ checklistSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm' }}</td>\\n              <td>{{ checklistSelecionado?.NM_USUA | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  PaginationModule,\n  TooltipModule,\n  TabsModule,\n  TimepickerModule,\n  BsDatepickerModule,\n  ModalModule,\n} from 'ngx-bootstrap';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n\nimport { LogisticaYmsChecklistListaComponent } from './lista/lista.component';\nimport { LogisticaYmsChecklistCadastroComponent } from './cadastro/cadastro.component';\n\nimport { LogisticaYmsChecklistRoutingModule } from './checklist-routing.module';\n\n@NgModule({\n  declarations: [\n    LogisticaYmsChecklistListaComponent,\n    LogisticaYmsChecklistCadastroComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    LogisticaYmsChecklistRoutingModule\n  ]\n})\nexport class LogisticaYmsChecklistModule { }\n"]}