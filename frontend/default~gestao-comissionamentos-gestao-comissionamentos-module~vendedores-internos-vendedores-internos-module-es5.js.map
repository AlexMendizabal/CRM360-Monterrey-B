{"version":3,"sources":["webpack:///src/app/modules/comercial/comissoes/vendedores-internos/gestao-comissionamentos/formulario/formulario.component.html","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/gestao-comissionamentos/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/gestao-comissionamentos/gestao-comissionamentos.module.ts","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/gestao-comissionamentos/gestao-comissionamentos.service.ts","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/gestao-comissionamentos/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/gestao-comissionamentos/lista/lista.component.ts","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/gestao-comissionamentos/lista/lista.component.scss","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/gestao-comissionamentos/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/gestao-comissionamentos/gestao-comissionamentos.routing.module.ts","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/gestao-comissionamentos/lista/lista.component.html"],"names":["ComercialComissoesVendedoresInternosGestaoComissionamentosModule","declarations","imports","forRoot","providers","ComercialComissoesVendedoresInternosGestaoComissionamentosService","http","API","codRepresentante","get","pipe","providedIn","ComercialComissoesVendedoresInternosGestaoComissionamentosFormularioResolverGuard","gestaoComissionamentosService","route","params","id","getDetalhes","success","mensagem","data","codSituacao","nome","endereco","bairro","cep","cidade","uf","cpf","rg","comissao","sap","codRH","telefone","celular","email","banco","tipo","agencia","titular","contaCorrente","dtInicio","dtRenovacao","dtVigencia","tipoComissao","nomeEmpresa","cnpj","ie","im","grupos","ComercialComissoesVendedoresInternosGestaoComissionamentosListaComponent","formBuilder","activatedRoute","localeService","dateService","router","detailPanelService","pnotifyService","cadastroRepresentantesService","confirmModalService","atividadesService","loaderNavbar","loaderFullScreen","breadCrumbTree","showDetailPanel","dadosPagination","codTabela","nomeTabela","dataInicial","dataFinal","situacao","nomeUsuario","dataCadastro","dados","modeloComissao","dadosLoaded","dadosEmpty","tableConfig","subtitleBorder","tableConfigMateriais","hover","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","use","registrarAcesso","setBreadCrumb","setFormFilter","getRegistros","onDetailPanelEmitter","setTabelaSelecionada","subscribe","descricao","routerLink","formValue","checkRouterParams","console","log","form","group","codVendedor","periodo","descTabela","pagina","registros","required","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","value","column","onFilter","valid","setRouterParams","getParams","hide","navigate","relativeTo","q","btoa","stringify","_params","_obj","prop","Date","convertToUrlDate","codPreco","dtInicioVigencia","dtFimVigencia","item","show","detailPanelTitle","tabelaSelecionada","showDetailPanelSubscription","config","event","showing","grupo","borderClass","page","scrollToFilter","nativeElement","scrollIntoView","behavior","i","field","onFieldInvalid","errors","hasOwnProperty","touched","formControl","controls","validator","validationResult","selector","template","ComercialComissoesVendedoresInternosGestaoComissionamentosFormularioComponent","bsModalService","modalService","titleService","escritoriosService","vendedoresService","showPermissionDenied","aprovarAnalista","reprovarAnalista","aprovarGerente","reprovarGerente","aprovarDiretor","reprovarDiretor","vendedor","nomeVendedor","escritorio","kpi","codKpi","descKpi","porcGanho","meta","totalRealizado","porcAlcancado","potencialGanho","ganhoEfetivo","vendedores","escritorios","profile","programado","getPerfil","getEscritorio","getVendedores","appTitle","setTitle","codStatus","getPermissoesAcesso","next","response","analistaMarketing","gerenteMarketing","gerenteDisabled","gerenteEscritorio","escritorioDisabled","gerenteFiscal","fiscalDisabled","diretorComercial","diretorDisabled","error","disable","setValue","lista","index","modalRef","responseCode","result","unshift","getListaCoordenadoresEscritorios","coordenadores","routes","path","children","component","redirectTo","pathMatch","resolve","detalhes","ComercialComissoesVendedoresInternosGestaoComissionamentosRoutingModule","forChild","exports"],"mappings":"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","file":"default~gestao-comissionamentos-gestao-comissionamentos-module~vendedores-internos-vendedores-internos-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<!-- <loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen> -->\\r\\n<app-header appTitle=\\\"Tela de criação e detalhes da tabela de comissionamento\\\">\\r\\n\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" >\\r\\n  <div class=\\\"row\\\" >\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg\\\">\\r\\n              <label for=\\\"periodo\\\">Período</label>\\r\\n              <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"periodo\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"periodo\\\"\\r\\n            >\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg\\\">\\r\\n              <label for=\\\"descTabela\\\">Descrição da tabela</label>\\r\\n              <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"descTabela\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"descTabela\\\"\\r\\n            >\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg\\\">\\r\\n              <label for=\\\"escritorio\\\">Gerente</label>\\r\\n              <ng-select\\r\\n                [items]=\\\"escritorios\\\"\\r\\n                labelForId=\\\"escritorio\\\"\\r\\n                formControlName=\\\"escritorio\\\"\\r\\n                bindValue=\\\"matricula\\\"\\r\\n                bindLabel=\\\"nome\\\"\\r\\n                [virtualScroll]=\\\"true\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg\\\">\\r\\n              <label for=\\\"vendedor\\\">Vendedor</label>\\r\\n              <ng-select\\r\\n                [items]=\\\"vendedores\\\"\\r\\n                labelForId=\\\"vendedor\\\"\\r\\n                formControlName=\\\"vendedor\\\"\\r\\n                bindValue=\\\"id\\\"\\r\\n                bindLabel=\\\"nome\\\"\\r\\n                [virtualScroll]=\\\"true\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"vendedoresInternos\\\">\\r\\n    <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th style=\\\"width: 45%\\\">\\r\\n            <div style=\\\"text-transform: uppercase; font-weight: bold;\\\">\\r\\n                Vendedor: {{ dados[0].vendedor[0].nomeVendedor }}\\r\\n            </div>\\r\\n          </th>\\r\\n          <!-- aprovar/reprovar -->\\r\\n          <th style=\\\"width: 5%\\\">\\r\\n            <!-- Analista de Marketing -->\\r\\n            <btn-icon\\r\\n                *ngIf=\\\"profile.analistaMarketing && aprovarAnalista && reprovarAnalista\\\"\\r\\n                icon=\\\"fas fa-check\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                tooltip=\\\"Aprovar\\\"\\r\\n                id=\\\"aprovado\\\"\\r\\n                (click)=\\\"onAprovarAnalista()\\\">\\r\\n            </btn-icon>\\r\\n            <btn-icon\\r\\n                *ngIf=\\\"profile.analistaMarketing && aprovarAnalista && reprovarAnalista\\\"\\r\\n                icon=\\\"fas fa-times\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                tooltip=\\\"Reprovar\\\"\\r\\n                id=\\\"reprovado\\\"\\r\\n                (click)=\\\"openModalAnalista(analista)\\\">\\r\\n            </btn-icon>\\r\\n            <btn-icon\\r\\n                *ngIf=\\\"(profile.analistaMarketing || profile.gerenteEscritorio) && (aprovarAnalista && !reprovarAnalista)\\\"\\r\\n                icon=\\\"fas fa-times\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                tooltip=\\\"Reprovado\\\"\\r\\n                id=\\\"reprovado\\\">\\r\\n            </btn-icon>\\r\\n            <btn-icon\\r\\n                *ngIf=\\\"(profile.analistaMarketing || profile.gerenteFiscal) && (!aprovarAnalista && reprovarAnalista)\\\"\\r\\n                icon=\\\"fas fa-check\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                tooltip=\\\"Aprovado\\\"\\r\\n                id=\\\"aprovado\\\">\\r\\n            </btn-icon>\\r\\n\\r\\n            <!-- Gerente de Marketing -->\\r\\n            <btn-icon\\r\\n                *ngIf=\\\"profile.gerenteMarketing && aprovarGerente && reprovarGerente\\\"\\r\\n                icon=\\\"fas fa-check\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                tooltip=\\\"Aprovar\\\"\\r\\n                id=\\\"aprovado\\\"\\r\\n                (click)=\\\"onAprovarGerente()\\\">\\r\\n            </btn-icon>\\r\\n            <btn-icon\\r\\n            *ngIf=\\\"profile.gerenteMarketing && aprovarGerente && reprovarGerente\\\"\\r\\n                icon=\\\"fas fa-times\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                tooltip=\\\"Reprovar\\\"\\r\\n                id=\\\"reprovado\\\"\\r\\n                (click)=\\\"openModalGerente(gerente)\\\">\\r\\n            </btn-icon>\\r\\n            <btn-icon\\r\\n                *ngIf=\\\"(profile.gerenteMarketing || profile.gerenteEscritorio) && (aprovarGerente && !reprovarGerente)\\\"\\r\\n                icon=\\\"fas fa-times\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                tooltip=\\\"Reprovado\\\"\\r\\n                id=\\\"reprovado\\\">\\r\\n            </btn-icon>\\r\\n            <btn-icon\\r\\n                *ngIf=\\\"(profile.gerenteMarketing || profile.gerenteFiscal) && (!aprovarGerente && reprovarGerente)\\\"\\r\\n                icon=\\\"fas fa-check\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                tooltip=\\\"Aprovado\\\"\\r\\n                id=\\\"aprovado\\\">\\r\\n            </btn-icon>\\r\\n\\r\\n            <!-- Diretor Comercial -->\\r\\n            <btn-icon\\r\\n                *ngIf=\\\"profile.diretorComercial && aprovarDiretor && reprovarDiretor\\\"\\r\\n                icon=\\\"fas fa-check\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                tooltip=\\\"Aprovar\\\"\\r\\n                id=\\\"aprovado\\\"\\r\\n                (click)=\\\"onAprovarDiretor()\\\">\\r\\n            </btn-icon>\\r\\n            <btn-icon\\r\\n                *ngIf=\\\"profile.diretorComercial && aprovarDiretor && reprovarDiretor\\\"\\r\\n                icon=\\\"fas fa-times\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                tooltip=\\\"Reprovar\\\"\\r\\n                id=\\\"reprovado\\\"\\r\\n                (click)=\\\"openModalDiretor(diretor)\\\">\\r\\n            </btn-icon>\\r\\n            <btn-icon\\r\\n                *ngIf=\\\"(profile.diretorComercial || profile.gerenteEscritorio) && (aprovarDiretor && !reprovarDiretor)\\\"\\r\\n                icon=\\\"fas fa-times\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                tooltip=\\\"Reprovado\\\"\\r\\n                id=\\\"reprovado\\\">\\r\\n            </btn-icon>\\r\\n            <btn-icon\\r\\n                *ngIf=\\\"(profile.diretorComercial || profile.gerenteFiscal) && (!aprovarDiretor && reprovarDiretor)\\\"\\r\\n                icon=\\\"fas fa-check\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                tooltip=\\\"Aprovado\\\"\\r\\n                id=\\\"aprovado\\\">\\r\\n            </btn-icon>\\r\\n          </th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr style=\\\"text-align: center;\\\" >\\r\\n          <th scope=\\\"col\\\">Fixo</th>\\r\\n          <th scope=\\\"col\\\">KPI's</th>\\r\\n          <th scope=\\\"col\\\">% Ganho</th>\\r\\n          <th scope=\\\"col\\\">Meta</th>\\r\\n          <th scope=\\\"col\\\">Total Realizado</th>\\r\\n          <th scope=\\\"col\\\">% Alcançado</th>\\r\\n          <th scope=\\\"col\\\">Potencial de Ganho</th>\\r\\n          <th scope=\\\"col\\\">Ganho Efetivo</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr style=\\\"text-align: center;\\\">\\r\\n            <!--*ngFor=\\\"let lista of dados[0].vendedor[0].kpi; let i = index\\\" [class.table-active]=\\\"lista.codTabela == rankingSelecionado.codClassificacao-->\\r\\n          <td>\\r\\n            0,15 \\r\\n          </td>\\r\\n          <td >\\r\\n            {{ dados[0].vendedor[0].kpi[0].descKpi }}\\r\\n          </td>\\r\\n          <td >\\r\\n            {{ dados[0].vendedor[0].kpi[0].porcGanho }}\\r\\n          </td>\\r\\n          <td >\\r\\n            {{ dados[0].vendedor[0].kpi[0].meta }}\\r\\n          </td>\\r\\n          <td *ngIf=\\\"dados[0].vendedor[0].kpi[0].totalRealizado < dados[0].vendedor[0].kpi[0].meta\\\" style=\\\"color: red;\\\">\\r\\n            {{ dados[0].vendedor[0].kpi[0].totalRealizado }}\\r\\n          </td>\\r\\n          <td *ngIf=\\\"dados[0].vendedor[0].kpi[0].totalRealizado >= dados[0].vendedor[0].kpi[0].meta\\\" style=\\\"color: green;\\\">\\r\\n            {{ dados[0].vendedor[0].kpi[0].totalRealizado }}\\r\\n          </td>\\r\\n          <td >\\r\\n            {{ dados[0].vendedor[0].kpi[0].porcAlcancado  }}\\r\\n          </td>\\r\\n          <td> \\r\\n            {{ dados[0].vendedor[0].kpi[0].potencialGanho }} \\r\\n          </td>\\r\\n          <td >\\r\\n            {{ dados[0].vendedor[0].kpi[0].ganhoEfetivo }}\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr style=\\\"text-align: center;\\\">\\r\\n          <td >\\r\\n            0,15 \\r\\n          </td>\\r\\n          <td >\\r\\n            {{ dados[0].vendedor[0].kpi[1].descKpi }}\\r\\n          </td>\\r\\n          <td >\\r\\n            {{ dados[0].vendedor[0].kpi[1].porcGanho }}\\r\\n          </td>\\r\\n          <td >\\r\\n            {{ dados[0].vendedor[0].kpi[1].meta }}\\r\\n          </td>\\r\\n          <td *ngIf=\\\"dados[0].vendedor[0].kpi[1].totalRealizado < dados[0].vendedor[0].kpi[1].meta\\\" style=\\\"color: red;\\\">\\r\\n            {{ dados[0].vendedor[0].kpi[0].totalRealizado }}\\r\\n          </td>\\r\\n          <td *ngIf=\\\"dados[0].vendedor[0].kpi[1].totalRealizado >= dados[0].vendedor[0].kpi[1].meta\\\" style=\\\"color: green;\\\" >\\r\\n            {{ dados[0].vendedor[0].kpi[1].totalRealizado }}\\r\\n          </td>\\r\\n          <td >\\r\\n            {{ dados[0].vendedor[0].kpi[1].porcAlcancado }}\\r\\n          </td>\\r\\n          <td >\\r\\n            {{ dados[0].vendedor[0].kpi[1].potencialGanho }}\\r\\n          </td>\\r\\n          <td >\\r\\n            {{ dados[0].vendedor[0].kpi[1].ganhoEfetivo }}\\r\\n          </td>\\r\\n        </tr>\\r\\n        <!-- <tr><td colspan=\\\"8\\\"></td></tr>\\r\\n        <tr style=\\\"text-align: center;\\\">\\r\\n          <td rowspan=\\\"2\\\">\\r\\n            Total Faturado (R$)\\r\\n          </td>\\r\\n          <td>\\r\\n            Manetoni\\r\\n          </td>\\r\\n          <td colspan=\\\"3\\\" style=\\\"text-align: end;\\\">\\r\\n            R$ 68.412,63\\r\\n          </td>\\r\\n          <td rowspan=\\\"2\\\">\\r\\n            R$ 102,62\\r\\n          </td>\\r\\n        </tr>\\r\\n      \\r\\n        <tr style=\\\"text-align: center;\\\">\\r\\n          <td>\\r\\n            DBA\\r\\n          </td>\\r\\n          <td colspan=\\\"3\\\" style=\\\"text-align: end;\\\">\\r\\n            -\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr style=\\\"text-align: center;\\\">\\r\\n          <td>\\r\\n            0,3\\r\\n          </td>\\r\\n          <td>\\r\\n            Corte e Dobra\\r\\n          </td>\\r\\n          <td>\\r\\n            -\\r\\n          </td>\\r\\n          <td>\\r\\n            0,3\\r\\n          </td>\\r\\n          <td>\\r\\n            -\\r\\n          </td>\\r\\n          <td>\\r\\n            R$ 32.396,60\\r\\n          </td>\\r\\n          <td>\\r\\n            CD\\r\\n          </td>\\r\\n          <td>\\r\\n            R$ 97,19\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr style=\\\"text-align: center;\\\">\\r\\n          <td>\\r\\n            0,3\\r\\n          </td>\\r\\n          <td >\\r\\n            Cercas\\r\\n          </td>\\r\\n          <td>\\r\\n            -\\r\\n          </td>\\r\\n          <td>\\r\\n            0,3\\r\\n          </td>\\r\\n          <td>\\r\\n            -\\r\\n          </td>\\r\\n          <td>\\r\\n            R$ 6.270,00\\r\\n          </td>\\r\\n          <td>\\r\\n            Cercas\\r\\n          </td>\\r\\n          <td>\\r\\n            R$ 18,81\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr style=\\\"text-align: center;\\\">\\r\\n          <td rowspan=\\\"2\\\" colspan=\\\"6\\\"></td>\\r\\n          <td>\\r\\n            RO\\r\\n          </td>\\r\\n          <td>\\r\\n            -\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr style=\\\"text-align: center;\\\">\\r\\n          <td>\\r\\n            GANHO FINAL\\r\\n          </td>\\r\\n          <td style=\\\"background-color: green;\\\">\\r\\n            R$ 218,62\\r\\n          </td>\\r\\n        </tr> -->\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <div class=\\\"total\\\">\\r\\n    <custom-table [config]=\\\"tableConfig\\\" >\\r\\n      <!-- *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\" -->\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <td class=\\\"hover ml-5\\\" style=\\\"background: rgb(248, 176, 176)\\\">\\r\\n\\r\\n          </td>\\r\\n          <td\\r\\n             style=\\\"background: rgb(248, 176, 176)\\\">\\r\\n          </td>\\r\\n          <td\\r\\n            \\r\\n            style=\\\"background: rgb(248, 176, 176);\\r\\n            text-transform: uppercase;\\r\\n            font-weight: bold;\\\">\\r\\n            Total Escritório\\r\\n          </td>\\r\\n          <td\\r\\n            \\r\\n            style=\\\"background: rgb(248, 176, 176);\\r\\n            font-weight: bold\\\">\\r\\n            R$ 18.310,62\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n    <pagination\\r\\n      [maxSize]=\\\"maxSize\\\"\\r\\n      [(totalItems)]=\\\"totalItems\\\"\\r\\n      (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n      [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n      [boundaryLinks]=\\\"true\\\"\\r\\n      [(ngModel)]=\\\"currentPage\\\"\\r\\n      previousText=\\\"&lsaquo;\\\"\\r\\n      nextText=\\\"&rsaquo;\\\"\\r\\n      firstText=\\\"&laquo;\\\"\\r\\n      lastText=\\\"&raquo;\\\">\\r\\n    </pagination>\\r\\n  </div> \\r\\n</app-body>\\r\\n\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NvbWlzc29lcy92ZW5kZWRvcmVzLWludGVybm9zL2dlc3Rhby1jb21pc3Npb25hbWVudG9zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from './../../../../../shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosMateriaisTemplatesModule } from './../../../cadastros/materiais/templates/templates.module';\r\nimport { ComercialTemplatesModule } from './../../../templates/templates.module';\r\nimport { TemplatesModule } from './../../../../../shared/templates/templates.module';\r\nimport { SharedModule } from './../../../../../shared/modules/shared.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ComercialComissoesVendedoresInternosGestaoComissionamentosRoutingModule } from './gestao-comissionamentos.routing.module';\r\n\r\n// Components\r\nimport { ComercialComissoesVendedoresInternosGestaoComissionamentosListaComponent } from './lista/lista.component';\r\nimport { ComercialComissoesVendedoresInternosGestaoComissionamentosFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialComissoesVendedoresInternosGestaoComissionamentosService } from './gestao-comissionamentos.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialComissoesVendedoresInternosGestaoComissionamentosListaComponent,\r\n    ComercialComissoesVendedoresInternosGestaoComissionamentosFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialComissoesVendedoresInternosGestaoComissionamentosRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ComercialTemplatesModule,\r\n    ComercialCadastrosMateriaisTemplatesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    PNotifyService,\r\n    ComercialComissoesVendedoresInternosGestaoComissionamentosService,\r\n  ],\r\n})\r\nexport class ComercialComissoesVendedoresInternosGestaoComissionamentosModule {}\r\n","import { descricaoTabela } from './models/tabela-precos';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, tap, retry } from 'rxjs/operators';\r\nimport { JsonResponse } from './../../../../../models/json-response';\r\nimport { environment } from './../../../../../../environments/environment';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialComissoesVendedoresInternosGestaoComissionamentosService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/comissoes/vendedores-internos/gestao-comissionamentos`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  /* getComissionamentos(params: any = []): Observable<any> {\r\n\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n    httpParams = httpParams.append(param, params[param]);    }\r\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  } */\r\n\r\n  /* getModelo(params: any = []): Observable<any> {\r\n\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n    httpParams = httpParams.append(param, params[param]);    }\r\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  } */\r\n\r\n   getDetalhes(codRepresentante: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codRepresentante}`)\r\n      .pipe(\r\n        take(1),\r\n        retry(2)\r\n        );\r\n  }\r\n\r\n  getPermissoesAcesso(): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/permissoes-acesso`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n /*  getAssociacoes(\r\n    codRepresentante: number,\r\n    params?: any\r\n  ): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n    return this.http\r\n    .get(`${this.API}/detalhes/${codRepresentante}`, { params: httpParams })\r\n    .pipe(take(1), retry(2));\r\n  } */\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialComissoesVendedoresInternosGestaoComissionamentosService } from './../gestao-comissionamentos.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialComissoesVendedoresInternosGestaoComissionamentosFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor( private gestaoComissionamentosService: ComercialComissoesVendedoresInternosGestaoComissionamentosService\r\n\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.gestaoComissionamentosService.getDetalhes(route.params.id);\r\n\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      mensagem: null,\r\n      data: {\r\n        codRepresentante: null,\r\n        codSituacao: 0,\r\n        nome: null,\r\n        endereco: null,\r\n        bairro: null,\r\n        cep: null,\r\n        cidade: null,\r\n        uf: null,\r\n        cpf: null,\r\n        rg: null,\r\n        comissao: null,\r\n        sap: null,\r\n        codRH: null,\r\n        telefone: null,\r\n        celular: null,\r\n        email: null,\r\n        banco: null,\r\n        tipo: null,\r\n        agencia: null,\r\n        titular: null,\r\n        contaCorrente: null,\r\n        dtInicio: null,\r\n        dtRenovacao: null,\r\n        dtVigencia: null,\r\n        tipoComissao: null,\r\n        nomeEmpresa: null,\r\n        cnpj: null,\r\n        ie: null,\r\n        im: null,\r\n        grupos: []\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { AtividadesService } from './../../../../../../shared/services/requests/atividades.service';\r\nimport { ConfirmModalService } from './../../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { ComercialCadastrosRepresentantesService } from './../../../../cadastros/representantes/representantes.service';\r\nimport { PNotifyService } from './../../../../../../shared/services/core/pnotify.service';\r\nimport { DetailPanelService } from './../../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { DateService } from './../../../../../../shared/services/core/date.service';\r\nimport { ComercialComissoesVendedoresInternosGestaoComissionamentosService } from '../gestao-comissionamentos.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from './../../../../../../models/json-response';\r\nimport { Breadcrumb } from './../../../../../../shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from './../../../../../../shared/templates/custom-table/models/config';\r\nimport { descricaoTabela } from 'src/app/modules/comercial/comissoes/vendedores-internos/gestao-comissionamentos/models/tabela-precos';\r\n\r\n@Component({\r\n  selector:\r\n    'comercial-comissoes-vendedores-internos-gestao-comissionamentos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialComissoesVendedoresInternosGestaoComissionamentosListaComponent\r\n  implements OnInit\r\n{\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  showPermissionDenied: boolean;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  dadosPagination: Array<descricaoTabela> = [\r\n    {\r\n      codTabela: 1,\r\n      nomeTabela: 'Tabela 1',\r\n      dataInicial: null,\r\n      dataFinal: null,\r\n      situacao: 1,\r\n      nomeUsuario: 'Ususario 1',\r\n      dataCadastro: '01/11/2020',\r\n    },\r\n    {\r\n      codTabela: 2,\r\n      nomeTabela: 'Tabela 2',\r\n      dataInicial: null,\r\n      dataFinal: null,\r\n      situacao: 1,\r\n      nomeUsuario: 'Ususario 2',\r\n      dataCadastro: '01/11/2020',\r\n    },\r\n    {\r\n      codTabela: 1,\r\n      nomeTabela: 'Tabela 3',\r\n      dataInicial: null,\r\n      dataFinal: null,\r\n      situacao: 1,\r\n      nomeUsuario: 'Ususario 3',\r\n      dataCadastro: '01/11/2020',\r\n    },\r\n  ];\r\n  dados: Array<descricaoTabela> = [];\r\n  modeloComissao: any[] = [];\r\n\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  profile: any;\r\n\r\n  tabelaSelecionada: descricaoTabela;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'codPreco';\r\n  orderType = 'ASC';\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private dateService: DateService,\r\n    private router: Router,\r\n    private detailPanelService: DetailPanelService,\r\n    private pnotifyService: PNotifyService,\r\n    private cadastroRepresentantesService: ComercialCadastrosRepresentantesService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private atividadesService: AtividadesService,\r\n    private gestaoComissionamentosService: ComercialComissoesVendedoresInternosGestaoComissionamentosService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.getRegistros();\r\n    this.onDetailPanelEmitter();\r\n    this.setTabelaSelecionada();\r\n    //this.getPerfil();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Comissões',\r\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Vendedores Internos',\r\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}/vendedores-internos`,\r\n        },\r\n        {\r\n          descricao: 'Gestão de Comissionamentos',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  // Formulário\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n    console.log(formValue);\r\n\r\n    this.form = this.formBuilder.group({\r\n      codVendedor: [formValue.codVendedor],\r\n      situacao: [formValue.situacao],\r\n      periodo: [formValue.periodo],\r\n      descTabela: [formValue.descTabela],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      codVendedor: null,\r\n      situacao: 2,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  // Ordem lista\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  // Pesquisa\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.getParams());\r\n    }\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.loaderNavbar = false; //retirar\r\n    /* this.cadastroRepresentantesService\r\n      .getRepresentantes(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: JsonResponse) => {\r\n          console.log(response)\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.da = this.dados[0]['total'];\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n\r\n        },\r\n        (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      ); */\r\n  }\r\n\r\n  // Verifica Parâmetros\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n    _params['orderBy'] = this.orderBy;\r\n    _params['orderType'] = this.orderType;\r\n    return _params;\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.codPreco) {\r\n      params.codPreco = this.form.value.codPreco;\r\n    }\r\n\r\n    if (this.form.value.dtInicioVigencia) {\r\n      params.dtInicioVigencia = this.form.value.dtInicioVigencia;\r\n    }\r\n\r\n    if (this.form.value.dtFimVigencia) {\r\n      params.dtFimVigencia = this.form.value.dtFimVigencia;\r\n    }\r\n\r\n    if (this.form.value.situacao) {\r\n      params.situacao = this.form.value.situacao;\r\n    }\r\n\r\n    params.pagina = this.form.value.pagina;\r\n    params.registros = this.form.value.registros;\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  // Detail Panel\r\n  onDetails(item: any): void {\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Modelo de Comissionamento`;\r\n    this.modeloComissao = [];\r\n    this.loaderNavbar = true;\r\n\r\n    /* this.cadastroRepresentantesService\r\n      .getAssociacoes(item.codRepresentante)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n            this.detailPanelService.loadedFinished(false);\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.modeloComissao = response.data;\r\n            this.totalItems = this.dados[0]['total'];\r\n          }  else {\r\n            this.pnotifyService.error();\r\n          }\r\n\r\n        },\r\n        (error: any) => {\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      ); */\r\n  }\r\n\r\n  setTabelaSelecionada(): void {\r\n    this.tabelaSelecionada = {\r\n      codTabela: null,\r\n      nomeTabela: null,\r\n      dataInicial: null,\r\n      dataFinal: null,\r\n      situacao: null,\r\n      nomeUsuario: null,\r\n      dataCadastro: null,\r\n    };\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  // Activate e Inactivate e borda Situação\r\n  // onActivate(index: number, grupo: descricaoTabela): void {\r\n  //   this.confirmActivate()\r\n  //     .asObservable()\r\n  //     .pipe(\r\n  //       take(1),\r\n  //       switchMap((result) =>\r\n  //         result ? this.activateGrupo(index, grupo) : EMPTY\r\n  //       ),\r\n  //       finalize(() => {\r\n  //         this.loaderNavbar = false;\r\n  //       })\r\n  //     )\r\n  //     .subscribe(\r\n  //       (success: any) => {\r\n  //         this.pnotifyService.success();\r\n  //         this.refreshMainData(grupo);\r\n  //       },\r\n  //       (error: any) => {\r\n  //         this.pnotifyService.error();\r\n  //         this.dados[index].situacao = 0;\r\n  //       }\r\n  //     );\r\n  // }\r\n\r\n  // confirmActivate(): any {\r\n  //   return this.confirmModalService.showConfirm(\r\n  //     null,\r\n  //     null,\r\n  //     'Deseja realmente prosseguir com a ativação do registro?',\r\n  //     'Cancelar',\r\n  //     'Confirmar'\r\n  //   );\r\n  // }\r\n\r\n  // activateGrupo(index: number, grupo: descricaoTabela): Observable<any> {\r\n  //   this.loaderNavbar = true;\r\n  //   this.dados[index].situacao = 1;\r\n\r\n  //   return this.tabelaPrecosService.activateGrupo(grupo.codTabela);\r\n  // }\r\n\r\n  // onInactivate(index: number, grupo: descricaoTabela): void {\r\n  //   this.confirmInactive()\r\n  //     .asObservable()\r\n  //     .pipe(\r\n  //       take(1),\r\n  //       switchMap((result) =>\r\n  //         result ? this.inactivateGrupo(index, grupo) : EMPTY\r\n  //       ),\r\n  //       finalize(() => {\r\n  //         this.loaderNavbar = false;\r\n  //       })\r\n  //     )\r\n  //     .subscribe(\r\n  //       (success: any) => {\r\n  //         this.pnotifyService.success();\r\n  //         this.refreshMainData(grupo);\r\n  //       },\r\n  //       (error: any) => {\r\n  //         this.pnotifyService.error();\r\n  //         this.dados[index].situacao = 1;\r\n  //       }\r\n  //     );\r\n  // }\r\n\r\n  // confirmInactive(): any {\r\n  //   return this.confirmModalService.showConfirm(\r\n  //     'inactivate',\r\n  //     'Confirmar inativação',\r\n  //     'Deseja realmente prosseguir com a inativação do registro?',\r\n  //     'Cancelar',\r\n  //     'Confirmar'\r\n  //   );\r\n  // }\r\n\r\n  // inactivateGrupo(index: number, grupo: descricaoTabela): Observable<any> {\r\n  //   this.loaderNavbar = true;\r\n  //   this.dados[index].situacao = 0;\r\n\r\n  //   return this.tabelaPrecosService.inactivateGrupo(grupo.codTabela);\r\n  // }\r\n\r\n  classStatusBorder(grupo: any): string {\r\n    let borderClass: string;\r\n\r\n    if (grupo.situacao === 2) {\r\n      borderClass = 'border-danger';\r\n    } else if (grupo.situacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  // Get perfil\r\n  /* getPerfil() {\r\n    this.gestaoComissionamentosService\r\n      .getPermissoesAcesso()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.success === true) {\r\n            this.profile = response.data;\r\n            console.log(response)\r\n            if (\r\n              this.profile.gerenteMarketing === true\r\n            ) {\r\n              console.log('gerenteMarketing')\r\n            } else if (\r\n              this.profile.gerenteEscritorio === true\r\n            ) {\r\n              console.log('gerenteEscritorio')\r\n            } else if (\r\n              this.profile.gerenteFiscal === true\r\n            ) {\r\n              console.log('gerenteFiscal')\r\n            } else if (\r\n              this.profile.diretorComercial === true\r\n            ) {\r\n              console.log('diretorComercial')\r\n            }\r\n          }\r\n\r\n        },\r\n        (error: any) => {\r\n          this.showPermissionDenied = true;\r\n      }\r\n    )\r\n  } */\r\n\r\n  // Get e EditarLista\r\n  getRegistros() {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.loaderNavbar = false; //retirar\r\n    /* this.cadastroRepresentantesService\r\n      .getRepresentantes()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(dados => {this.dados = dados; } */\r\n    // (response: JsonResponse) => {\r\n    //   if (response.hasOwnProperty('success') && response.success === true) {\r\n    //     this.dados = response.data;\r\n\r\n    //     this.totalItems = this.dados[0]['total'];\r\n    //   } else if (\r\n    //     response.hasOwnProperty('success') &&\r\n    //     response.success === false\r\n    //   ) {\r\n    //     this.dadosEmpty = true;\r\n    //   } else {\r\n    //     this.pnotifyService.error();\r\n    //     this.dadosEmpty = true;\r\n    //   }\r\n    // },\r\n    // (error: any) => {\r\n    //   this.dadosEmpty = true;\r\n\r\n    //   if (error.error.hasOwnProperty('mensagem')) {\r\n    //     this.pnotifyService.error(error.error.mensagem);\r\n    //   } else {\r\n    //     this.pnotifyService.error();\r\n    //   }\r\n    // }\r\n    //);\r\n  }\r\n\r\n  onEdit(item: any): void {\r\n    this.router.navigate(['../editar', item.codRepresentante], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  // Outros\r\n  onPageChanged(event: PageChangedEvent) {\r\n    if (this.form.value.pagina != event.page) {\r\n      this.detailPanelService.hide();\r\n      this.setTabelaSelecionada();\r\n      this.form.value.pagina = event.page;\r\n      this.onFilter();\r\n\r\n      this.scrollToFilter.nativeElement.scrollIntoView({\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }\r\n\r\n  refreshMainData(grupo: any): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (grupo.codTabela === this.dados[i].codTabela) {\r\n        this.dados[i].situacao = grupo.situacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NvbWlzc29lcy92ZW5kZWRvcmVzLWludGVybm9zL2dlc3Rhby1jb21pc3Npb25hbWVudG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { descricaoTabela } from './../../../vendedores-internos/gestao-comissionamentos/models/tabela-precos';\r\nimport { ComercialComissoesVendedoresInternosProgramacaoPagamentosService } from './../../programacao-pagamentos/programacao-pagamentos.service';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  ViewChild,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { AtividadesService } from './../../../../../../shared/services/requests/atividades.service';\r\nimport { ConfirmModalService } from './../../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { PNotifyService } from './../../../../../../shared/services/core/pnotify.service';\r\nimport { DateService } from './../../../../../../shared/services/core/date.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ComercialComissoesVendedoresInternosGestaoComissionamentosService } from '../gestao-comissionamentos.service';\r\nimport { ComercialVendedoresService } from 'src/app/modules/comercial/services/vendedores.service';\r\nimport { ComercialGestaoAssociacoesCoordenadoresEscritoriosService } from 'src/app/modules/comercial/gestao/associacoes/coordenadores-escritorios/coordenadores-escritorios.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from './../../../../../../shared/templates/custom-table/models/config';\r\nimport { Breadcrumb } from './../../../../../../shared/modules/breadcrumb/breadcrumb';\r\nimport { JsonResponse } from './../../../../../../models/json-response';\r\n\r\n@Component({\r\n  selector:\r\n    'comercial-comissoes-vendedores-internos-gestao-comissionamentos-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialComissoesVendedoresInternosGestaoComissionamentosFormularioComponent\r\n  implements OnInit\r\n{\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  showPermissionDenied = false;\r\n\r\n  aprovarAnalista: boolean = true;\r\n  reprovarAnalista: boolean = true;\r\n  aprovarGerente: boolean = true;\r\n  reprovarGerente: boolean = true;\r\n  aprovarDiretor: boolean = true;\r\n  reprovarDiretor: boolean = true;\r\n\r\n  dados: any[] = [\r\n    {\r\n      codTabela: 1,\r\n      nomeTabela: 'tabela 1',\r\n      dataInicial: '01/11/2020',\r\n      dataFinal: '30/11/2020',\r\n      situacao: 1,\r\n      nomeUsuario: 'user 1',\r\n      dataCadastro: '01/11/2020',\r\n      vendedor: [\r\n        {\r\n          codVendedor: 1,\r\n          nomeVendedor: 'Vendedor 1',\r\n          escritorio: 1,\r\n          kpi: [\r\n            {\r\n              codKpi: 1,\r\n              descKpi: 'kpi 1',\r\n              porcGanho: 0.075,\r\n              meta: 10,\r\n              totalRealizado: 9,\r\n              porcAlcancado: 90,\r\n              potencialGanho: 0.33, // fixo\r\n              ganhoEfetivo: 0.15,\r\n            },\r\n            {\r\n              codKpi: 2,\r\n              descKpi: 'kpi 2',\r\n              porcGanho: 0.075,\r\n              meta: 20,\r\n              totalRealizado: 20,\r\n              porcAlcancado: 100,\r\n              potencialGanho: 0.33,\r\n              ganhoEfetivo: 0.33,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          codVendedor: 2,\r\n          nomeVendedor: 'Vendedor 2',\r\n          escritorio: 2,\r\n          kpi: [\r\n            {\r\n              codKpi: 1,\r\n              descKpi: 'kpi 1',\r\n              porcGanho: 0.075,\r\n              meta: 10,\r\n              totalRealizado: 10,\r\n              porcAlcancado: 0,\r\n              potencialGanho: 0.33,\r\n              ganhoEfetivo: 0.15,\r\n            },\r\n            {\r\n              codKpi: 2,\r\n              descKpi: 'kpi 2',\r\n              porcGanho: 0.075,\r\n              meta: 20,\r\n              totalRealizado: 20,\r\n              porcAlcancado: 0,\r\n              potencialGanho: 0.33,\r\n              ganhoEfetivo: 0.15,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  vendedores: any[] = [];\r\n  escritorios: any[] = [];\r\n  vendedorSelecionado: Array<descricaoTabela>;\r\n  profile: any = {};\r\n\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n  programado = false;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  grupoSelecionado: any;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: false,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'codPreco';\r\n  orderType = 'ASC';\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private dateService: DateService,\r\n    private router: Router,\r\n    private pnotifyService: PNotifyService,\r\n    private gestaoComissionamentosService: ComercialComissoesVendedoresInternosGestaoComissionamentosService,\r\n    private atividadesService: AtividadesService,\r\n    private bsModalService: BsModalService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private modalService: BsModalService,\r\n    private titleService: TitleService,\r\n    private escritoriosService: ComercialGestaoAssociacoesCoordenadoresEscritoriosService,\r\n    private vendedoresService: ComercialVendedoresService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormFilter();\r\n    this.getRegistros();\r\n    this.setBreadCrumb();\r\n    this.registrarAcesso();\r\n    this.getPerfil();\r\n    this.getEscritorio();\r\n    this.getVendedores();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar tabela';\r\n      } else {\r\n        this.appTitle = 'Nova tabela';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Comissões',\r\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Vendedores Internos',\r\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}/vendedores-internos`,\r\n        },\r\n        {\r\n          descricao: 'Gestão de Comissionamentos',\r\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}/vendedores-internos/gestao-comissionamentos/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  // Formulário\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n    console.log(formValue);\r\n    console.log(this.dados);\r\n\r\n    this.form = this.formBuilder.group({\r\n      periodo: [formValue.periodo, Validators.required],\r\n      descTabela: [formValue.descTabela, Validators.required],\r\n      escritorio: [formValue.escritorios],\r\n      vendedor: [formValue.vendedores],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      codTabela: null,\r\n      periodo: null,\r\n      codStatus: 2,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  // Ordem lista\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  // Pesquisa\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.getParams());\r\n    }\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    /* this.programacaoPagamentosService\r\n      .getProgramacao(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.totalItems = this.dados[0]['total'];\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n\r\n        },\r\n        (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      ); */\r\n  }\r\n\r\n  // Verifica Parâmetros\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n    _params['orderBy'] = this.orderBy;\r\n    _params['orderType'] = this.orderType;\r\n    return _params;\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.codVendedor) {\r\n      params.codVendedor = this.form.value.codVendedor;\r\n    }\r\n\r\n    if (this.form.value.dtInicioVigencia) {\r\n      params.dtInicioVigencia = this.form.value.dtInicioVigencia;\r\n    }\r\n\r\n    if (this.form.value.dtFimVigencia) {\r\n      params.dtFimVigencia = this.form.value.dtFimVigencia;\r\n    }\r\n\r\n    if (this.form.value.codStatus) {\r\n      params.codStatus = this.form.value.codStatus;\r\n    }\r\n\r\n    params.pagina = this.form.value.pagina;\r\n    params.registros = this.form.value.registros;\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  // Get perfil\r\n  getPerfil() {\r\n    this.gestaoComissionamentosService\r\n      .getPermissoesAcesso()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success === true) {\r\n            this.profile = response.data;\r\n            console.log(response);\r\n            if (this.profile.analistaMarketing === true) {\r\n              console.log('analistaMarketing');\r\n            } else if (this.profile.gerenteMarketing === true) {\r\n              console.log('gerenteMarketing');\r\n              this.gerenteDisabled();\r\n            } else if (this.profile.gerenteEscritorio === true) {\r\n              console.log('gerenteEscritorio');\r\n              this.escritorioDisabled();\r\n            } else if (this.profile.gerenteFiscal === true) {\r\n              this.fiscalDisabled();\r\n              console.log('gerenteFiscal');\r\n            } else if (this.profile.diretorComercial === true) {\r\n              console.log('diretorComercial');\r\n              this.diretorDisabled();\r\n            }\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.showPermissionDenied = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  escritorioDisabled() {\r\n    this.form.get('periodo').disable();\r\n\r\n    this.form.get('escritorio').disable();\r\n    this.form.get('codStatus').setValue('1');\r\n    this.form.get('codStatus').disable();\r\n  }\r\n\r\n  gerenteDisabled() {\r\n    this.form.get('periodo').disable();\r\n  }\r\n\r\n  fiscalDisabled() {\r\n    this.form.get('periodo').disable();\r\n    this.form.get('codStatus').setValue('4');\r\n    this.form.get('codStatus').disable();\r\n  }\r\n\r\n  diretorDisabled() {\r\n    this.form.get('periodo').disable();\r\n  }\r\n\r\n  // Lógicas de aprovação\r\n  onAprovarAnalista() {\r\n    this.aprovarAnalista = !this.aprovarAnalista;\r\n    console.log('AGUARDANDO GERENTE DE MARKETING');\r\n  }\r\n\r\n  onReprovarAnalista() {\r\n    this.reprovarAnalista = !this.reprovarAnalista;\r\n    console.log('AGUARDANDO GERENTE DE ESCRITÓRIO');\r\n  }\r\n\r\n  onAprovarGerente() {\r\n    this.aprovarGerente = !this.aprovarGerente;\r\n    console.log('AGUARDANDO GERENTE FISCAL');\r\n  }\r\n\r\n  onReprovarGerente() {\r\n    this.reprovarGerente = !this.reprovarGerente;\r\n    console.log('AGUARDANDO GERENTE DE ESCRITÓRIO');\r\n  }\r\n\r\n  onAprovarDiretor() {\r\n    this.aprovarDiretor = !this.aprovarDiretor;\r\n    console.log('CONCLUIDO');\r\n  }\r\n\r\n  onReprovarDiretor() {\r\n    this.reprovarDiretor = !this.reprovarDiretor;\r\n    console.log('AGUARDANDO GERENTE DE MARKETING');\r\n  }\r\n\r\n  /* setVendedorSelecionado(): void {\r\n    this.vendedorSelecionado = {\r\n      codTabela: null,\r\n    };\r\n  }\r\n */\r\n\r\n  // Get e EditarLista\r\n  getRegistros() {\r\n    this.loaderNavbar = true;\r\n\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    /* this.programacaoPagamentosService\r\n      .getProgramacao()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        dados => {this.dados = dados; },\r\n        (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n\r\n            this.totalItems = this.dados[0]['total'];\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        // (error: any) => {\r\n        //   this.dadosEmpty = true;\r\n\r\n        //   if (error.error.hasOwnProperty('mensagem')) {\r\n        //     this.pnotifyService.error(error.error.mensagem);\r\n        //   } else {\r\n        //     this.pnotifyService.error();\r\n        //   }\r\n        // }\r\n      ); */\r\n  }\r\n\r\n  onEdit(item: any): void {\r\n    this.router.navigate(['../editar', item.codPreco], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  // Outros\r\n  onPageChanged(event: PageChangedEvent) {\r\n    if (this.form.value.pagina != event.page) {\r\n      this.form.value.pagina = event.page;\r\n      this.onFilter();\r\n\r\n      this.scrollToFilter.nativeElement.scrollIntoView({\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }\r\n\r\n  refreshMainData(lista: any): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (lista.codTabela === this.dados[i].codTabela) {\r\n        this.dados[i].situacao = lista.situacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  //modal\r\n  openModal(template: TemplateRef<any>, index) {\r\n    this.modalRef = this.bsModalService.show(template, index);\r\n  }\r\n\r\n  // Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getVendedores(): void {\r\n    this.vendedoresService.getVendedores().subscribe((response: any) => {\r\n      if (response.responseCode === 200) {\r\n        this.vendedores = response.result;\r\n\r\n        this.vendedores.unshift({\r\n          id: 0,\r\n          nome: 'EXIBIR TODOS',\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getEscritorio(): void {\r\n    this.escritoriosService\r\n      .getListaCoordenadoresEscritorios()\r\n      .subscribe((response: any) => {\r\n        if (response.responseCode === 200) {\r\n          this.escritorios = response.result.coordenadores;\r\n\r\n          this.escritorios.unshift({\r\n            id: 0,\r\n            nome: 'EXIBIR TODOS',\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\n// import { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialComissoesVendedoresInternosGestaoComissionamentosFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialComissoesVendedoresInternosGestaoComissionamentosListaComponent } from './lista/lista.component';\r\nimport { ComercialComissoesVendedoresInternosGestaoComissionamentosFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      { path: 'lista', component: ComercialComissoesVendedoresInternosGestaoComissionamentosListaComponent },\r\n      {\r\n        path: '',\r\n        redirectTo: 'lista',\r\n        pathMatch: 'full',\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: ComercialComissoesVendedoresInternosGestaoComissionamentosFormularioComponent,\r\n        resolve: {\r\n          detalhes: ComercialComissoesVendedoresInternosGestaoComissionamentosFormularioResolverGuard,\r\n        },\r\n      },\r\n      {\r\n        path: 'editar/:id',\r\n        component: ComercialComissoesVendedoresInternosGestaoComissionamentosFormularioComponent,\r\n        resolve: {\r\n          detalhes: ComercialComissoesVendedoresInternosGestaoComissionamentosFormularioResolverGuard,\r\n        },\r\n      },\r\n    ]\r\n  },\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialComissoesVendedoresInternosGestaoComissionamentosRoutingModule {}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<!-- <loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen> -->\\r\\n<app-header appTitle=\\\"GESTÃO DE COMISSIONAMENTOS\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" >\\r\\n  <div class=\\\"row\\\" >\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"periodo\\\">Período</label>\\r\\n              <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"periodo\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"periodo\\\"\\r\\n            >\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"descTabela\\\">Descrição da tabela</label>\\r\\n              <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"descTabela\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"descTabela\\\"\\r\\n            >\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row text-center justify-content-center\\\" >\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr >\\r\\n            <!-- <th scope=\\\"col\\\" class=\\\"text-center hover\\\" >\\r\\n              <thead-sorter\\r\\n                value=\\\"Código\\\"\\r\\n                [active]=\\\"orderBy == 'codDesc'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codDesc')\\\">\\r\\n              </thead-sorter>\\r\\n            </th> -->\\r\\n            <th scope=\\\"col-6\\\">Descrição Tabela</th>\\r\\n            <th scope=\\\"col-2\\\">Data Lançamento</th>\\r\\n            <th scope=\\\"col-3\\\">Usuário Lançamento</th>\\r\\n            <th scope=\\\"col-1\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let lista of dadosPagination; let i = index;\\\" [class.table-active]=\\\"lista.codTabela == tabelaSelecionada.codTabela\\\">\\r\\n            <!-- <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(lista)\\\"\\r\\n              (click)=\\\"onDetails(lista)\\\">\\r\\n              {{ lista.codRepresentante }}\\r\\n            </td> -->\\r\\n            <td class=\\\"hover\\\">\\r\\n              {{ lista.nomeTabela }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" >\\r\\n              {{ lista.dataCadastro }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\">\\r\\n              {{ lista.nomeUsuario }}\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Mais detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(lista)\\\">\\r\\n                  <i class=\\\"fas fa-plus\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";"]}