{"version":3,"sources":["webpack:///src/app/modules/comercial/tid-software/tid-software.module.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.component.scss","webpack:///src/app/modules/comercial/tid-software/tid-software.component.ts","webpack:///src/app/modules/comercial/tid-software/tid-software-routing.module.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.component.html","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialTidSoftwareModule","declarations","imports","forRoot","providers","ComercialTidSoftwareComponent","activatedRoute","router","tidSoftwareService","formBuilder","pnotifyService","location","atividadesService","windowService","titleService","breadCrumbTree","descricao","routerLink","loaderFullScreen","loaderNavbar","empresas","linhas","modulos","modulosVendas","modulosProducaoTela","getPNotify","registrarAcesso","getFormFields","setFormBuilder","setTitle","subscribe","loadDependencies","pipe","checkRouterParams","response","handleLoadDependenciesError","error","back","form","group","cliente","sistema","required","empresa","modulo","linha","value","paramSubscription","queryParams","Object","keys","length","get","setValue","onClick","controls","clearValidators","disable","parseInt","onChangeModuloVendas","unsubscribe","navigate","relativeTo","queryParamsHandling","setValidators","enable","updateValueAndValidity","field","onFieldInvalid","errors","hasOwnProperty","touched","formControl","validator","validationResult","addParam","checkFormValidators","setRouterParams","markAsPristine","markAsUntouched","onAcessar","getRawValue","valid","postGerarAcesso","next","notice","getHostname","selector","template","routes","path","component","ComercialTidSoftwareRoutingModule","forChild","exports","ComercialTidSoftwareService","http","API","getEmpresas","getLinhas","getModulosVendas","getModulosProducaoTela","acao","data","post","providedIn"],"mappings":"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","file":"tid-software-tid-software-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialTidSoftwareRoutingModule } from './tid-software-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialTidSoftwareComponent } from './tid-software.component';\n\n@NgModule({\n  declarations: [ComercialTidSoftwareComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModalModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    NgSelectModule,\n    ComercialTidSoftwareRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialTidSoftwareModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL3RpZC1zb2Z0d2FyZS90aWQtc29mdHdhcmUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\n// file-saver\nimport { saveAs } from 'file-saver/src/FileSaver';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialTidSoftwareService } from './tid-software.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { WindowService } from 'src/app/shared/services/core/window.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-tid',\n  templateUrl: './tid-software.component.html',\n  styleUrls: ['./tid-software.component.scss'],\n  providers: [WindowService]\n})\nexport class ComercialTidSoftwareComponent implements OnInit {\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home'\n    },\n    {\n      descricao: 'TID Software'\n    }\n  ];\n\n  loaderFullScreen = true;\n  loaderNavbar = false;\n\n  paramSubscription: Subscription;\n\n  form: FormGroup;\n\n  empresas: any = [];\n  linhas: any = [];\n  modulos: any = [];\n  modulosVendas: any = [];\n  modulosProducaoTela: any = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private tidSoftwareService: ComercialTidSoftwareService,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private windowService: WindowService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.registrarAcesso();\n    this.getFormFields();\n    this.setFormBuilder();\n    this.titleService.setTitle('TID Software');\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getFormFields() {\n    this.loaderFullScreen = true;\n\n    this.tidSoftwareService\n      .loadDependencies()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n          this.checkRouterParams();\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response[0]['responseCode'] === 200) {\n            this.empresas = response[0]['result'];\n          } else {\n            this.handleLoadDependenciesError();\n          }\n\n          if (response[1]['responseCode'] === 200) {\n            this.linhas = response[1]['result'];\n          } else {\n            this.handleLoadDependenciesError();\n          }\n\n          if (response[2]['responseCode'] === 200) {\n            this.modulosVendas = response[2]['result'];\n          } else {\n            this.handleLoadDependenciesError();\n          }\n\n          if (response[3]['responseCode'] === 200) {\n            this.modulosProducaoTela = response[3]['result'];\n          } else {\n            this.handleLoadDependenciesError();\n          }\n        },\n        (error: any) => {\n          this.handleLoadDependenciesError();\n        }\n      );\n  }\n\n  handleLoadDependenciesError() {\n    this.pnotifyService.error();\n    this.location.back();\n  }\n\n  setFormBuilder() {\n    this.form = this.formBuilder.group({\n      cliente: [null],\n      sistema: [null, [Validators.required]],\n      empresa: [null],\n      modulo: [null],\n      linha: [null]\n    });\n  }\n\n  onTitleApplication() {\n    return this.form.value['sistema'] == null\n      ? 'Selecione um módulo'\n      : 'Módulo selecionado';\n  }\n\n  checkRouterParams() {\n    this.paramSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          if (queryParams['codCliente']) {\n            this.form.get('cliente').setValue(queryParams['codCliente']);\n          }\n\n          if (queryParams['sistema']) {\n            this.onClick(queryParams['sistema'], false);\n          }\n\n          if (queryParams['modulo']) {\n            this.form.controls['modulo'].clearValidators();\n            this.form.controls['modulo'].disable();\n            this.form.controls['modulo'].setValue(\n              parseInt(queryParams['modulo'])\n            );\n\n            if (queryParams['sistema'] === 'vendas') {\n              this.onChangeModuloVendas();\n            }\n          }\n        }\n      }\n    );\n    this.paramSubscription.unsubscribe();\n  }\n\n  setRouterParams(queryParams: any) {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: queryParams,\n      queryParamsHandling: 'merge'\n    });\n  }\n\n  onShow(sistema: string) {\n    if (\n      this.form.value['sistema'] == sistema ||\n      this.form.value['sistema'] == null\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  borderClass(sistema: string) {\n    if (this.form.value['sistema'] == sistema) {\n      return 'border-success';\n    }\n\n    return '';\n  }\n\n  columnClass() {\n    if (this.form.value['sistema'] == 'vendas') {\n      return 'col-8';\n    } else if (this.form.value['sistema'] == 'producaoTela') {\n      return 'col-5';\n    } else if (\n      this.form.value['sistema'] == 'liberacaoFaturamento' ||\n      this.form.value['sistema'] == 'registroOcorrencias' ||\n      this.form.value['sistema'] == 'painelBobinas'\n    ) {\n      return 'col-3';\n    }\n\n    return '';\n  }\n\n  checkFormValidators(sistema: string) {\n    if (sistema == 'vendas' || sistema == 'producaoTela') {\n      this.form.controls['empresa'].setValidators([Validators.required]);\n      this.form.controls['modulo'].setValidators([Validators.required]);\n      this.form.controls['empresa'].enable();\n    } else if (sistema == 'painelBobinas') {\n      this.form.controls['empresa'].clearValidators();\n      this.form.controls['empresa'].disable();\n      this.form.controls['empresa'].setValue(18);\n    } else if (sistema == 'FichaCCD') {\n      this.form.controls['empresa'].clearValidators();\n      this.form.controls['empresa'].disable();\n      this.form.controls['empresa'].setValue(3);\n    } else {\n      if (\n        sistema == 'liberacaoFaturamento' ||\n        sistema == 'registroOcorrencias'\n      ) {\n        this.form.controls['empresa'].setValidators([Validators.required]);\n        this.form.controls['empresa'].enable();\n      } else {\n        this.form.controls['empresa'].clearValidators();\n      }\n\n      this.form.controls['modulo'].clearValidators();\n    }\n\n    this.form.controls['empresa'].updateValueAndValidity();\n    this.form.controls['modulo'].updateValueAndValidity();\n\n    this.form.controls['linha'].disable();\n    this.form.controls['linha'].clearValidators();\n    this.form.controls['linha'].updateValueAndValidity();\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field) != '') {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onClick(sistema: string, addParam: boolean) {\n    this.form.get('sistema').setValue(sistema);\n    this.checkFormValidators(sistema);\n\n    if (addParam) {\n      this.setRouterParams({ sistema: sistema });\n    }\n\n    this.form.controls['empresa'].markAsPristine();\n    this.form.controls['modulo'].markAsPristine();\n    this.form.controls['linha'].markAsPristine();\n    this.form.controls['empresa'].markAsUntouched();\n    this.form.controls['modulo'].markAsUntouched();\n    this.form.controls['linha'].markAsUntouched();\n\n    if (sistema == 'analiseLimiteCredito') {\n      this.onAcessar();\n    } else {\n      if (sistema == 'vendas') {\n        this.modulos = this.modulosVendas;\n      } else if (sistema == 'producaoTela') {\n        this.modulos = this.modulosProducaoTela;\n      }\n    }\n  }\n\n  onFormShow() {\n    if (\n      this.form.value['sistema'] == null ||\n      this.form.value['sistema'] == 'analiseLimiteCredito'\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  onFormModuloShow() {\n    if (\n      this.form.value['sistema'] == 'vendas' ||\n      this.form.value['sistema'] == 'producaoTela'\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  onFormLinhaShow() {\n    if (this.form.value['sistema'] == 'vendas') {\n      return true;\n    }\n\n    return false;\n  }\n\n  onChangeModuloVendas() {\n    if (this.form.value['sistema'] == 'vendas') {\n      if (this.form.getRawValue()['modulo'] == 3) {\n        this.form.controls['linha'].enable();\n        this.form.controls['linha'].setValidators([Validators.required]);\n        this.form.controls['linha'].updateValueAndValidity();\n      } else {\n        this.form.get('linha').setValue(null);\n        this.form.controls['linha'].disable();\n        this.form.controls['linha'].clearValidators();\n        this.form.controls['linha'].updateValueAndValidity();\n      }\n    }\n  }\n\n  onCancel() {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: null\n    });\n\n    this.form.get('sistema').setValue(null);\n    this.form.get('empresa').setValue(null);\n    this.form.get('modulo').setValue(null);\n    this.form.get('linha').setValue(null);\n  }\n\n  onAcessar() {\n    if (this.form.valid) {\n      this.loaderNavbar = true;\n\n      this.tidSoftwareService\n        .postGerarAcesso(this.form.getRawValue())\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n          })\n        )\n        .subscribe({\n          next: (response: any) => {\n            if (response['responseCode'] === 200) {\n              saveAs(response['result']['link'], response['result']['name']);\n            } else if (response['responseCode'] === 403) {\n              this.pnotifyService.notice('Seu usuário não tem acesso ao TID.');\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          error: (error: any) => {\n            this.pnotifyService.error();\n          }\n        });\n    } else {\n      this.pnotifyService.notice('Selecione empresa e módulo para continuar.');\n    }\n  }\n\n  checkWindow() {\n    return this.windowService.getHostname();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { ComercialTidSoftwareComponent } from './tid-software.component';\n\nconst routes: Routes = [{ path: '', component: ComercialTidSoftwareComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialTidSoftwareRoutingModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"TID Software\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"form.value['sistema'] == null\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onAcessar()\\\"\\n    [disabled]=\\\"!form.valid\\\">\\n    Acessar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row justify-content-center\\\" *ngIf=\\\"!loaderFullScreen\\\">\\n    <div class=\\\"col-10\\\">\\n      <h5 class=\\\"pt-2 mb-4 text-center\\\">{{ onTitleApplication() }}</h5>\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\" *ngIf=\\\"onShow('vendas')\\\">\\n          <card-button\\n            icon=\\\"fas fa-shopping-cart\\\"\\n            text=\\\"Vendas\\\"\\n            [class]=\\\"borderClass('vendas')\\\"\\n            (click)=\\\"onClick('vendas', true)\\\">\\n          </card-button>\\n        </div>\\n        <div class=\\\"col-md-3\\\" *ngIf=\\\"onShow('analiseLimiteCredito')\\\">\\n          <card-button\\n            icon=\\\"fas fa-search-dollar\\\"\\n            text=\\\"Análise de limite de crédito\\\"\\n            [class]=\\\"borderClass('analiseLimiteCredito')\\\"\\n            (click)=\\\"onClick('analiseLimiteCredito', true)\\\">\\n          </card-button>\\n        </div>\\n        <div class=\\\"col-md-3\\\" *ngIf=\\\"onShow('painelBobinas')\\\">\\n          <card-button\\n            icon=\\\"fas fa-database\\\"\\n            text=\\\"Painel de bobinas\\\"\\n            [class]=\\\"borderClass('painelBobinas')\\\"\\n            (click)=\\\"onClick('painelBobinas', true)\\\">\\n          </card-button>\\n        </div>\\n      </div>\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\" *ngIf=\\\"onShow('liberacaoFaturamento')\\\">\\n          <card-button\\n            icon=\\\"fas fa-unlock\\\"\\n            text=\\\"Liberação de faturamento\\\"\\n            [class]=\\\"borderClass('liberacaoFaturamento')\\\"\\n            (click)=\\\"onClick('liberacaoFaturamento', true)\\\">\\n          </card-button>\\n        </div>\\n        <div class=\\\"col-md-3\\\" *ngIf=\\\"onShow('registroOcorrencias')\\\">\\n          <card-button\\n            icon=\\\"fas fa-exclamation-triangle\\\"\\n            text=\\\"Registro de ocorrências\\\"\\n            [class]=\\\"borderClass('registroOcorrencias')\\\"\\n            (click)=\\\"onClick('registroOcorrencias', true)\\\">\\n          </card-button>\\n        </div>\\n        <div class=\\\"col-md-3\\\" *ngIf=\\\"onShow('producaoTela')\\\">\\n          <card-button\\n            icon=\\\"fas fa-border-none\\\"\\n            text=\\\"Produção de tela\\\"\\n            [class]=\\\"borderClass('producaoTela')\\\"\\n            (click)=\\\"onClick('producaoTela', true)\\\">\\n          </card-button>\\n        </div>\\n        <div class=\\\"col-md-3\\\" *ngIf=\\\"onShow('FichaCCD')\\\">\\n          <card-button\\n            icon=\\\"fas fa-clipboard-list\\\"\\n            text=\\\"Ficha Cadastral Corte e Dobra\\\"\\n            [class]=\\\"borderClass('FichaCCD')\\\"\\n            (click)=\\\"onClick('FichaCCD', true)\\\">\\n          </card-button>\\n        </div>\\n      </div>\\n      <div class=\\\"row justify-content-center\\\" *ngIf=\\\"onFormShow()\\\">\\n        <div [ngClass]=\\\"columnClass()\\\">\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-row justify-content-center\\\">\\n              <div class=\\\"form-group col\\\">\\n                <label for=\\\"empresa\\\">Empresa</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"false\\\"\\n                  [items]=\\\"empresas\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  labelForId=\\\"empresa\\\"\\n                  bindLabel=\\\"nomeEmpresa\\\"\\n                  bindValue=\\\"idEmpresa\\\"\\n                  formControlName=\\\"empresa\\\"\\n                  [ngClass]=\\\"onFieldError('empresa') + ' ' + onFieldRequired('empresa')\\\">\\n                </ng-select>\\n                <invalid-form-control [show]=\\\"onFieldInvalid('empresa') == 'required'\\\" message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\n              </div>\\n              <div class=\\\"form-group col\\\" *ngIf=\\\"onFormModuloShow()\\\">\\n                <label for=\\\"modulo\\\">Módulo</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"false\\\"\\n                  [items]=\\\"modulos\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  labelForId=\\\"modulo\\\"\\n                  bindLabel=\\\"descricao\\\"\\n                  bindValue=\\\"id\\\"\\n                  formControlName=\\\"modulo\\\"\\n                  (change)=\\\"onChangeModuloVendas()\\\"\\n                  [ngClass]=\\\"onFieldError('modulo') + ' ' + onFieldRequired('modulo')\\\">\\n                </ng-select>\\n                <invalid-form-control [show]=\\\"onFieldInvalid('modulo') == 'required'\\\" message=\\\"Módulo é obrigatório.\\\"></invalid-form-control>\\n              </div>\\n              <div class=\\\"form-group col\\\" *ngIf=\\\"onFormLinhaShow()\\\">\\n                <label for=\\\"linha\\\">Linha</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"false\\\"\\n                  [items]=\\\"linhas\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  labelForId=\\\"linha\\\"\\n                  bindLabel=\\\"descricao\\\"\\n                  bindValue=\\\"id\\\"\\n                  formControlName=\\\"linha\\\"\\n                  [ngClass]=\\\"onFieldError('linha') + ' ' + onFieldRequired('linha')\\\">\\n                </ng-select>\\n                <invalid-form-control [show]=\\\"onFieldInvalid('linha') == 'required'\\\" message=\\\"Linha é obrigatório.\\\"></invalid-form-control>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}