{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/formas-pagamento/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/formas-pagamento/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/formas-pagamento/formulario/formulario.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/formas-pagamento/formas-pagamento.module.ts","webpack:///src/app/modules/comercial/cadastros/formas-pagamento/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/formas-pagamento/formas-pagamento-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/formas-pagamento/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/formas-pagamento/lista/lista.component.scss","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/formas-pagamento/formas-pagamento.service.ts","webpack:///src/app/modules/comercial/cadastros/formas-pagamento/formulario/formulario-resolver.guard.ts"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialCadastrosFormasPagamentoModule","declarations","imports","forRoot","providers","ComercialCadastrosFormasPagamentoFormularioComponent","activatedRoute","router","location","formBuilder","formasPagamentoService","pnotifyService","atividadesService","titleService","MASKS","loaderFullScreen","descFormasERP","breadCrumbTree","formChanged","getPNotify","registrarAcesso","setBreadCrumb","setFormBuilder","disableValorPerc","getFormFields","subscribe","params","id","appTitle","setTitle","descricao","routerLink","idSubModulo","snapshot","data","detalhes","success","editavel","undefined","form","group","codFormaPagamento","required","codFormaPagamentoERP","percentualAcrescimo","percentuaDesconto","percentualDesconto","codTipoPerc","codValorPerc","qtdeParcela","codTipoDia","codSituacao","qtdeDias","array","length","onAddParcelas","controls","setValue","error","back","getListaFormasERP","pipe","response","unshift","value","disable","change","currentValue","onChangePerc","enable","setValidators","updateValueAndValidity","clearValidators","clear","qtde","getRawValue","i","dias","push","field","onFieldInvalid","get","status","touched","formGroup","index","onNestedFieldInvalid","nestedForm","formControl","validator","validationResult","abstractControl","abstractControlField","controlName","onFieldRequired","pristine","valid","loaderNavbar","submittingForm","save","next","hasOwnProperty","reset","mensagem","navigate","relativeTo","notice","confirm","selector","template","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosFormasPagamentoModuleRoutingModule","forChild","exports","ComercialCadastrosFormasPagamentoListaComponent","confirmModalService","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","setFormFilter","onDetailPanelEmitter","setFormaPagamentoSelecionado","showDetailPanelSubscription","unsubscribe","config","event","showing","formValue","checkRouterParams","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","Object","keys","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","formaPagamentoSelecionado","situacao","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaFormasPagamento","slice","formaPagamento","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","getAlteracoes","setTimeout","loadedFinished","confirmActivate","asObservable","result","activateFormasPagamento","refreshMainData","showConfirm","confirmInactive","inactivateFormasPagamento","FormDeactivateGuard","route","state","formCanDeactivate","ComercialCadastrosFormasPagamentoService","http","API","httpParams","param","append","post","put","updateFormasPagamento","saveFormasPagamento","codigo","ComercialCadastrosFormasPagamentoFormularioResolverGuard","getDetalhes","qtdeParcelas","parcelas"],"mappings":"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","file":"formas-pagamento-formas-pagamento-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Formas de pagamento\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n     <div class=\\\"row\\\" #scrollToFilter>\\r\\n      <div class=\\\"col\\\">\\r\\n        <advanced-filter>\\r\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label for=\\\"codFormaPagamentoERP\\\">Código TID</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"codFormaPagamentoERP\\\"\\r\\n                  (keydown.enter)=\\\"onFilter()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-5\\\">\\r\\n                <label for=\\\"descricao\\\">Descrição</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"descricao\\\"\\r\\n                  (keydown.enter)=\\\"onFilter()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label for=\\\"codTipoDia\\\">Tipo</label>\\r\\n                <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"codTipoDia\\\"\\r\\n                  formControlName=\\\"codTipoDia\\\">\\r\\n                  <option value=\\\"0\\\">Todos</option>\\r\\n                  <option value=\\\"1\\\">Dias corridos</option>\\r\\n                  <option value=\\\"2\\\">Dias fora mês</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label for=\\\"codSituacao\\\">Situação</label>\\r\\n                <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"codSituacao\\\"\\r\\n                  formControlName=\\\"codSituacao\\\">\\r\\n                  <option value=\\\"\\\">Todos</option>\\r\\n                  <option value=\\\"0\\\">Inativos</option>\\r\\n                  <option value=\\\"1\\\">Ativos</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-1\\\">\\r\\n                <label for=\\\"registros\\\">Registros</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"registros\\\"\\r\\n                  formControlName=\\\"registros\\\">\\r\\n                  <option>25</option>\\r\\n                  <option>50</option>\\r\\n                  <option>100</option>\\r\\n                  <option>200</option>\\r\\n                  <option>300</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </advanced-filter>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <subtitles\\r\\n          [data]=\\\"subtitles\\\"\\r\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        </subtitles>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\">Código</th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\">Código TID</th>\\r\\n              <th scope=\\\"col\\\">Descrição</th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\">Qtde. parcelas</th>\\r\\n              <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr\\r\\n              *ngFor=\\\"let formaPagamento of dadosPagination; let i = index\\\"\\r\\n              [class.table-active]=\\\"formaPagamento.codFormaPagamento == formaPagamentoSelecionado.codFormaPagamento\\\">\\r\\n              <td\\r\\n                class=\\\"text-center\\\"\\r\\n                [ngClass]=\\\"classStatusBorder(formaPagamento)\\\">\\r\\n                {{ formaPagamento.codFormaPagamento }}\\r\\n              </td>\\r\\n              <td class=\\\"text-center\\\">{{ formaPagamento.codFormaPagamentoERP }}</td>\\r\\n              <td>{{ formaPagamento.descricao | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ formaPagamento.qtdeParcela }}</td>\\r\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span *ngIf=\\\"formaPagamento.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, formaPagamento)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"formaPagamento.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, formaPagamento)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(formaPagamento)\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n        <empty-result\\r\\n          message=\\\"Nenhuma informação encontrada\\\"\\r\\n          class=\\\"my-3\\\"\\r\\n          *ngIf=\\\"dadosEmpty\\\">\\r\\n        </empty-result>\\r\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n          <pagination\\r\\n            [maxSize]=\\\"maxSize\\\"\\r\\n            [(totalItems)]=\\\"totalItems\\\"\\r\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n            [boundaryLinks]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"currentPage\\\"\\r\\n            previousText=\\\"&lsaquo;\\\"\\r\\n            nextText=\\\"&rsaquo;\\\"\\r\\n            firstText=\\\"&laquo;\\\"\\r\\n            lastText=\\\"&raquo;\\\">\\r\\n          </pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n        <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\r\\n          <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                <th scope=\\\"col\\\">Usuário</th>\\r\\n                <th scope=\\\"col\\\">Alteração</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\r\\n                <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\r\\n                <td>{{ alteracao.mensagem | uppercase }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9mb3JtYXMtcGFnYW1lbnRvL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"descricao\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"descricao\\\"\\r\\n              formControlName=\\\"descricao\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('descricao') + ' ' + onFieldRequired(form.controls.descricao)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('descricao')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codFormaPagamentoERP\\\">Código ERP</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"descFormasERP\\\"\\r\\n              formControlName=\\\"codFormaPagamentoERP\\\"\\r\\n              labelForId=\\\"codFormaPagamentoERP\\\"\\r\\n              bindLabel=\\\"descricao\\\"\\r\\n              bindValue=\\\"codFormaPagamento\\\"\\r\\n              [ngClass]=\\\"onFieldError('codFormaPagamentoERP') + ' ' + onFieldRequired(form.controls.codFormaPagamentoERP)\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"codSituacao\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n              <option value=\\\"0\\\">Inativo</option>\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codTipoPerc\\\">Percentual\\r\\n            <ng-template #tooltipLabelPercentualTemplate>\\r\\n              <p class=\\\"text-nowrap mb-0\\\">Desconto ou</p>\\r\\n              <p class=\\\"text-nowrap mb-0\\\">Acréscimo</p>\\r\\n            </ng-template>\\r\\n            <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelPercentualTemplate\\\" container=\\\"body\\\"></i>\\r\\n          </label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"codTipoPerc\\\"\\r\\n              formControlName=\\\"codTipoPerc\\\"\\r\\n\\r\\n              (change)=\\\"onChangePerc()\\\">\\r\\n              <option value=\\\"0\\\"></option>\\r\\n              <option value=\\\"1\\\">Desconto</option>\\r\\n              <option value=\\\"2\\\">Acréscimo</option>\\r\\n            </select>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codValorPerc\\\">Vl. Percentual\\r\\n            <ng-template #tooltipLabelVlPercentualTemplate>\\r\\n              <p class=\\\"text-nowrap mb-0\\\">Percentual de Desconto</p>\\r\\n              <p class=\\\"text-nowrap mb-0\\\">ou Acréscimo</p>\\r\\n            </ng-template>\\r\\n            <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelVlPercentualTemplate\\\" container=\\\"body\\\"></i>\\r\\n            </label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codValorPerc\\\"\\r\\n              currencyMask\\r\\n              [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\r\\n              formControlName=\\\"codValorPerc\\\"\\r\\n              >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codTipoDia\\\">Tipo</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"codTipoDia\\\"\\r\\n              formControlName=\\\"codTipoDia\\\"\\r\\n              [ngClass]=\\\"onFieldError('codTipoDia') + ' ' + onFieldRequired(form.controls.codTipoDia)\\\">\\r\\n              <option value=\\\"1\\\">Dias corridos</option>\\r\\n              <option value=\\\"2\\\">Dias fora mês</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codTipoDia')\\\" message=\\\"Tipo do dia é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"qtdeParcela\\\">Qtde. parcelas</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"qtdeParcela\\\"\\r\\n              formControlName=\\\"qtdeParcela\\\"\\r\\n              (change)=\\\"onAddParcelas()\\\"\\r\\n              [ngClass]=\\\"onFieldError('qtdeParcela') + ' ' + onFieldRequired(form.controls.qtdeParcela)\\\">\\r\\n              <option value=\\\"1\\\">1 Parcela</option>\\r\\n              <option value=\\\"2\\\">2 Parcelas</option>\\r\\n              <option value=\\\"3\\\">3 Parcelas</option>\\r\\n              <option value=\\\"4\\\">4 Parcelas</option>\\r\\n              <option value=\\\"5\\\">5 Parcelas</option>\\r\\n              <option value=\\\"6\\\">6 Parcelas</option>\\r\\n              <option value=\\\"7\\\">7 Parcelas</option>\\r\\n              <option value=\\\"8\\\">8 Parcelas</option>\\r\\n              <option value=\\\"9\\\">9 Parcelas</option>\\r\\n              <option value=\\\"10\\\">10 Parcelas</option>\\r\\n              <option value=\\\"11\\\">11 Parcelas</option>\\r\\n              <option value=\\\"12\\\">12 Parcelas</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('qtdeParcela')\\\" message=\\\"Qtde. parcelas é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row border-bottom\\\">\\r\\n          <div class=\\\"form-group col d-flex justify-content-end mb-2\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox\\\">\\r\\n              <input\\r\\n               type=\\\"checkbox\\\"\\r\\n               class=\\\"custom-control-input\\\"\\r\\n               id=\\\"editavel\\\"\\r\\n               formControlName=\\\"editavel\\\">\\r\\n               <label\\r\\n                class=\\\"custom-control-label\\\"\\r\\n                for=\\\"editavel\\\">\\r\\n                Permite alterar data de vencimento\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"qtdeDias\\\">\\r\\n          <div class=\\\"form-row\\\" *ngFor=\\\"let item of qtdeDias.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-6\\\">\\r\\n                  <label for=\\\"dias\\\">Parcela {{ i + 1 }}</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"dias\\\"\\r\\n                    formControlName=\\\"dias\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('qtdeDias', i, 'dias') + ' ' + onNestedFieldRequired('qtdeDias', i, 'dias')\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosFormasPagamentoModuleRoutingModule } from './formas-pagamento-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosFormasPagamentoListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosFormasPagamentoFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosFormasPagamentoListaComponent,\r\n    ComercialCadastrosFormasPagamentoFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    CurrencyMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosFormasPagamentoModuleRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n  ],\r\n  providers: [PNotifyService],\r\n})\r\nexport class ComercialCadastrosFormasPagamentoModule {}\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n  FormControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosFormasPagamentoService } from '../formas-pagamento.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { FormasPagamento } from '../models/formas-pagamento';\r\nimport { MASKS } from 'ng-brazil';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-formas-pagamento-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosFormasPagamentoFormularioComponent\r\n  implements OnInit, IFormCanDeactivate, OnChanges {\r\n    public MASKS = MASKS;\r\n\r\n  @Input('codTipoPerc') codTipoPerc: number;\r\n\r\n\r\n  loaderNavbar: boolean;\r\n  loaderFullScreen = true;\r\n\r\n  descFormasERP: Array<any> = [];\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<any> = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  showSimpleChange:SimpleChanges;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private formasPagamentoService: ComercialCadastrosFormasPagamentoService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.disableValorPerc();\r\n    this.getFormFields();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  teste(){\r\n\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar Forma de Pagamento';\r\n      } else {\r\n        this.appTitle = 'Nova Forma de Pagamento';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Formas de pagamento',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/formas-pagamento/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: FormasPagamento = this.activatedRoute.snapshot.data\r\n        .detalhes.data;\r\n\r\n        if(detalhes.editavel == undefined || detalhes.editavel == null ) {\r\n          detalhes.editavel = 0;\r\n        }\r\n\r\n      this.form = this.formBuilder.group({\r\n        codFormaPagamento: [detalhes.codFormaPagamento],\r\n        descricao: [detalhes.descricao, [Validators.required]],\r\n        codFormaPagamentoERP: [detalhes.codFormaPagamentoERP,[Validators.required]],\r\n        percentualAcrescimo: [detalhes.percentualAcrescimo],\r\n        percentuaDesconto: [detalhes.percentualDesconto],\r\n        codTipoPerc: 0,\r\n        codValorPerc: null,\r\n        qtdeParcela: [detalhes.qtdeParcela, [Validators.required]],\r\n        editavel: [detalhes.editavel],\r\n        codTipoDia: [detalhes.codTipoDia, [Validators.required]],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\r\n        qtdeDias: this.formBuilder.array([])\r\n\r\n      });\r\n\r\n      if (detalhes.qtdeDias && detalhes.qtdeDias.length > 0) {\r\n        this.onAddParcelas(detalhes.qtdeDias);\r\n      }\r\n\r\n      if (detalhes.percentualAcrescimo > 0){\r\n        this.form.controls.codTipoPerc.setValue(2);\r\n        this.form.controls.codValorPerc.setValue(detalhes.percentualAcrescimo);\r\n      } else if (detalhes.percentualDesconto > 0){\r\n        this.form.controls.codTipoPerc.setValue(1);\r\n        this.form.controls.codValorPerc.setValue(detalhes.percentualDesconto);\r\n      }\r\n\r\n\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  getFormFields(): void {\r\n    this.loaderFullScreen = true;\r\n\r\n    this.formasPagamentoService\r\n      .getListaFormasERP()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: JsonResponse) => {\r\n        if (response.success === true) {\r\n          this.descFormasERP = response.data;\r\n\r\n          this.descFormasERP.unshift({\r\n            codFormaPagamento: 0,\r\n            descricao: 'NENHUM',\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  disableValorPerc() {\r\n    if (this.form.controls.codTipoPerc.value == 0){\r\n      this.form.controls.codValorPerc.disable();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(change:SimpleChanges) {\r\n    if (change.codTipoPerc.currentValue > 0) {\r\n      this.onChangePerc();\r\n    }\r\n  }\r\n\r\n  onChangePerc(): void {\r\n    if(this.form.controls.codTipoPerc.value > 0){\r\n        this.form.controls.codValorPerc.enable();\r\n        this.form.controls.codValorPerc.setValidators([Validators.required]);\r\n        this.form.controls.codValorPerc.updateValueAndValidity();\r\n    } else if (this.form.controls.codTipoPerc.value == 0){\r\n        this.form.controls.codValorPerc.disable();\r\n        this.form.controls.codValorPerc.setValue(null);\r\n        this.form.controls.codValorPerc.clearValidators();\r\n        this.form.controls.codValorPerc.updateValueAndValidity();\r\n\r\n    }\r\n  }\r\n\r\n  get qtdeDias() {\r\n    return this.form.get('qtdeDias') as FormArray;\r\n  }\r\n\r\n\r\n  onAddParcelas(data?: any): void {\r\n    if (!data) {\r\n      this.qtdeDias.clear();\r\n    }\r\n\r\n    const qtde: number = this.form.getRawValue().qtdeParcela;\r\n\r\n    for (let i = 0; i < qtde; i++) {\r\n      const dias = data ? data[i].dias : null;\r\n\r\n      this.qtdeDias.push(\r\n        this.formBuilder.group({\r\n          dias: [dias, [Validators.required]],\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldError(formGroup: string, index: number, field: string) {\r\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n    field = nestedForm.controls[index].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n\r\n    if (nestedForm.controls[index].get(field).validator) {\r\n      let validationResult = nestedForm.controls[index]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n\r\n        this.formasPagamentoService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosFormasPagamentoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosFormasPagamentoListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosFormasPagamentoFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialCadastrosFormasPagamentoListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosFormasPagamentoFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosFormasPagamentoFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosFormasPagamentoFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosFormasPagamentoFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosFormasPagamentoModuleRoutingModule {}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosFormasPagamentoService } from '../formas-pagamento.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { FormasPagamento } from '../models/formas-pagamento';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-formas-pagamento-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosFormasPagamentoListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'descricao';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<FormasPagamento> = [];\r\n  dadosPagination: Array<FormasPagamento> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  formaPagamentoSelecionado: FormasPagamento;\r\n  alteracoes: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private formasPagamentoService: ComercialCadastrosFormasPagamentoService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Formas de Pagamento');\r\n    this.onDetailPanelEmitter();\r\n    this.setFormaPagamentoSelecionado();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Formas de Pagamento',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      codFormaPagamentoERP: [formValue.codFormaPagamentoERP],\r\n      descricao: [formValue.descricao],\r\n      codTipoDia: [formValue.codTipoDia],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros],\r\n    });\r\n\r\n    this.checkOrder();\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      codFormaPagamentoERP: null,\r\n      descricao: null,\r\n      codTipoDia: 0,\r\n      codSituacao: '',\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setFormaPagamentoSelecionado(): void {\r\n    this.formaPagamentoSelecionado = {\r\n      codFormaPagamento: 0,\r\n      descricao: null,\r\n      codFormaPagamentoERP: 0,\r\n      qtdeParcela: 0,\r\n      qtdeDias: null,\r\n      codTipoDia: 2,\r\n      codSituacao: 2,\r\n      situacao: null,\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.codFormaPagamentoERP) {\r\n      params.codFormaPagamentoERP = this.form.value.codFormaPagamentoERP;\r\n    }\r\n\r\n    if (this.form.value.descricao) {\r\n      params.descricao = this.form.value.descricao;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.codTipoDia = this.form.value.codTipoDia;\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    this.formasPagamentoService\r\n      .getListaFormasPagamento(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(formaPagamento: FormasPagamento): string {\r\n    let borderClass: string;\r\n\r\n    if (formaPagamento.codSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    } else if (formaPagamento.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(formaPagamento: FormasPagamento): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.setFormaPagamentoSelecionado();\r\n    this.formaPagamentoSelecionado = formaPagamento;\r\n    this.alteracoes = [];\r\n\r\n    this.formasPagamentoService\r\n      .getAlteracoes(formaPagamento.codFormaPagamento)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.alteracoes = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onEdit(formaPagamento: FormasPagamento): void {\r\n    this.router.navigate(['../editar', formaPagamento.codFormaPagamento], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, formaPagamento: FormasPagamento): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateFormasPagamento(index, formaPagamento) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(formaPagamento);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 0;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateFormasPagamento(\r\n    index: number,\r\n    formaPagamento: FormasPagamento\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.formasPagamentoService.activateFormasPagamento(\r\n      formaPagamento.codFormaPagamento\r\n    );\r\n  }\r\n\r\n  onInactivate(index: number, formaPagamento: FormasPagamento): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateFormasPagamento(index, formaPagamento) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(formaPagamento);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateFormasPagamento(\r\n    index: number,\r\n    formaPagamento: FormasPagamento\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n\r\n    this.dadosPagination[index].codSituacao = 0;\r\n\r\n    return this.formasPagamentoService.inactivateFormasPagamento(\r\n      formaPagamento.codFormaPagamento\r\n    );\r\n  }\r\n\r\n  refreshMainData(formaPagamento: FormasPagamento): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (\r\n        formaPagamento.codFormaPagamento === this.dados[i].codFormaPagamento\r\n      ) {\r\n        this.dados[i].codSituacao = formaPagamento.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9mb3JtYXMtcGFnYW1lbnRvL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { FormasPagamento } from './models/formas-pagamento';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosFormasPagamentoService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/formas-pagamento`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaFormasPagamento(params?: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codFormaPagamento: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codFormaPagamento}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codFormaPagamento: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codFormaPagamento}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveFormasPagamento(formaPagamento: FormasPagamento) {\r\n    return this.http.post(`${this.API}/salvar`, formaPagamento).pipe(take(1));\r\n  }\r\n\r\n  private updateFormasPagamento(formaPagamento: FormasPagamento) {\r\n    return this.http.put(`${this.API}/atualizar`, formaPagamento).pipe(take(1));\r\n  }\r\n\r\n  save(formaPagamento: FormasPagamento): Observable<any> {\r\n    if (formaPagamento.codFormaPagamento !== null) {\r\n      return this.updateFormasPagamento(formaPagamento);\r\n    }\r\n\r\n    return this.saveFormasPagamento(formaPagamento);\r\n  }\r\n\r\n  activateFormasPagamento(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  inactivateFormasPagamento(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  getListaFormasERP(): Observable<any> {\r\n    return this.http.get(`${this.API}/erp/lista`).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosFormasPagamentoService } from '../formas-pagamento.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosFormasPagamentoFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private formasPagamentoService: ComercialCadastrosFormasPagamentoService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.formasPagamentoService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codFormaPagamento: null,\r\n        formaPagamento: null,\r\n        codFormaPagamentoERP: null,\r\n        codTipoPerc: null,\r\n        codValorPerc: null,\r\n        qtdeParcelas: null,\r\n        codTipoDia: null,\r\n        codSituacao: null,\r\n        situacao: null,\r\n        parcelas: null,\r\n      },\r\n    });\r\n  }\r\n}\r\n"]}