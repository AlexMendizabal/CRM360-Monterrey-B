{"version":3,"sources":["webpack:///src/app/modules/logistica/yms/tipos-circuito/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/yms/tipos-circuito/tipos-circuito.module.ts","webpack:///src/app/modules/logistica/yms/tipos-circuito/cadastro/cadastro.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/logistica/yms/tipos-circuito/lista/lista.component.scss","webpack:///src/app/modules/logistica/yms/tipos-circuito/lista/lista.component.ts","webpack:///src/app/modules/logistica/yms/tipos-circuito/lista/lista.component.html","webpack:///src/app/modules/logistica/yms/tipos-circuito/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/yms/tipos-circuito/tipos-circuito-routing.module.ts"],"names":["LogisticaYmsTiposCircuitoCadastroComponent","formBuilder","pnotify","activatedRoute","router","localeService","tiposCircuitoService","titleService","atividadesService","breadCrumbTree","formData","disabledForm","loading","loadingNavBar","tipos","cod","nome","MASKS","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setBreadCrumb","setFormBuilder","onActivatedRoute","subscribe","_params","snapshot","params","hasOwnProperty","getTiposCircuito","UUID_LOGI_YMS_CIRC_TIPO","pipe","response","status","form","patchValue","body","noResult","error","id","idSubModulo","appTitle","setTitle","descricao","routerLink","group","NM_CIRC_TIPO","required","SG_CIRC_TIPO","IN_STAT","DS_OBSE","field","onFieldInvalid","get","touched","formControl","controls","validator","validationResult","postTiposCircuito","value","success","navigate","relativeTo","message","selector","template","LogisticaYmsTiposCircuitoModule","declarations","imports","forRoot","ConfirmModalService","modalService","type","title","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","LogisticaYmsTiposCircuitoListaComponent","route","xlsxService","dateService","routerService","detailPanelService","confirmModalService","showDetailPanel","totalItens","tableConfig","subtitleBorder","subtitles","text","color","itemsPerPage","totalItems","currentPage","buildForm","onDetailPanelEmitter","getFilterTiposCircuito","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","TT_REGI_PAGI","getParams","showDetailPanelSubscription","config","event","showing","reset","PAGI","TIME","Date","getTime","NR_MATR","NM_USUA","DT_INCL","DT_ATUA","onFilter","hide","setValue","setBase64UrlParams","tipoSelecionado","loadedFinished","tiposCircuito","loadingTiposCircuito","IN_PAGI","filterTiposCircuito","notice","page","_obj","prop","convertToUrlDate","borderClass","stat","confirmChange","asObservable","result","showConfirm","data","toLocaleDateString","split","dataExport","listagemExport","concat","exportFile","routes","path","component","LogisticaYmsTiposCircuitoRoutingModule","forChild","exports"],"mappings":"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","file":"tipos-circuito-tipos-circuito-module-es5.js","sourcesContent":["//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LogisticaYmsTiposCircuitoService } from '../services/tipos-circuito.service';\r\n//interfaces\r\nimport { ILogisticaYmsTiposCircuito } from '../models/tipos-circuito';\r\nimport { isNull } from 'util';\r\n\r\n@Component({\r\n  selector: 'logistica-yms-tipos-circuito-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaYmsTiposCircuitoCadastroComponent\r\n  implements OnInit {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  //loading\r\n  disabledForm = false;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n\r\n  tipos = [\r\n    {\r\n      cod: 'expedicao',\r\n      nome: 'Expedição',\r\n    },\r\n    {\r\n      cod: 'recebimento',\r\n      nome: 'Recebimento',\r\n    },\r\n  ];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private localeService: BsLocaleService,\r\n    private tiposCircuitoService: LogisticaYmsTiposCircuitoService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id'))\r\n    return this.getTiposCircuito({ UUID_LOGI_YMS_CIRC_TIPO: _params['id'] }); \r\n  }\r\n\r\n\r\n  getTiposCircuito(params?: Partial<ILogisticaYmsTiposCircuito>) {\r\n    this.loading = true;\r\n    const _params = params ?? {};\r\n    this.tiposCircuitoService\r\n      .getTiposCircuito(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.form.patchValue(response.body['data']) \r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'YMS',\r\n        routerLink: `/logistica/yms/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipos de Circuito',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_YMS_CIRC_TIPO: [null],\r\n      NM_CIRC_TIPO: [null, [Validators.required]],\r\n      SG_CIRC_TIPO:[null, [Validators.required]],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postTiposCircuito() {\r\n    this.loadingNavBar = true;\r\n    this.tiposCircuitoService\r\n      .postTiposCircuito(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  PaginationModule,\r\n  TooltipModule,\r\n  TabsModule,\r\n  TimepickerModule,\r\n  BsDatepickerModule,\r\n  ModalModule,\r\n} from 'ngx-bootstrap';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n\r\nimport { LogisticaYmsTiposCircuitoListaComponent } from './lista/lista.component';\r\nimport { LogisticaYmsTiposCircuitoCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nimport { LogisticaYmsTiposCircuitoRoutingModule } from './tipos-circuito-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogisticaYmsTiposCircuitoListaComponent,\r\n    LogisticaYmsTiposCircuitoCadastroComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    LogisticaYmsTiposCircuitoRoutingModule\r\n  ]\r\n})\r\nexport class LogisticaYmsTiposCircuitoModule { }\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Tipos de Circuito\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postTiposCircuito()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Tipo de Circuito</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-8 pl-0\\\">\\r\\n            <label for=\\\"NM_CIRC_TIPO\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_CIRC_TIPO\\\"\\r\\n              formControlName=\\\"NM_CIRC_TIPO\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_CIRC_TIPO') + ' ' + onFieldRequired('NM_CIRC_TIPO')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_CIRC_TIPO')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n            <label for=\\\"IN_STAT\\\">Tipo de Circuito</label>\\r\\n            <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"tipos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipo\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"cod\\\"\\r\\n            id=\\\"tipo\\\"\\r\\n            formControlName=\\\"SG_CIRC_TIPO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            [ngClass]=\\\"onFieldError('SG_CIRC_TIPO') + ' ' + onFieldRequired('SG_CIRC_TIPO')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('SG_CIRC_TIPO')\\\" message=\\\"Tipo de circuito é obrigatório.\\\"></invalid-form-control>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Observação</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy90aXBvcy1jaXJjdWl0by9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { LogisticaYmsTiposCircuitoService } from '../services/tipos-circuito.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaYmsTiposCircuito } from './../models/tipos-circuito';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-yms-tipos-circuito-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaYmsTiposCircuitoListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  loadingTiposCircuito: boolean;\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false; \r\n\r\n  //VARIAVEIS\r\n  totalItens: any = [];\r\n  filterTiposCircuito: Array<ILogisticaYmsTiposCircuito>;\r\n  tiposCircuito: Array<ILogisticaYmsTiposCircuito>;\r\n  tipoSelecionado: ILogisticaYmsTiposCircuito;\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  // Tipos de Situação dos Tipos de Circuitos (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private dateService: DateService,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private detailPanelService: DetailPanelService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private tiposCircuitoService: LogisticaYmsTiposCircuitoService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.onDetailPanelEmitter();\r\n    this.getFilterTiposCircuito();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n          this.getTiposCircuito(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_YMS_CIRC_TIPO: [null],\r\n      NM_CIRC_TIPO: [null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      NR_MATR: [null],\r\n      NM_USUA: [null],\r\n      DT_INCL: [null],\r\n      DT_ATUA: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'YMS',\r\n        routerLink: `/logistica/yms/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipos de Movimentação',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onDetails(tipos: ILogisticaYmsTiposCircuito): void {\r\n    this.detailPanelService.show();\r\n    this.tipoSelecionado = tipos;\r\n    this.detailPanelService.loadedFinished(false);\r\n  }\r\n\r\n  getTiposCircuito(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.tiposCircuitoService\r\n      .getTiposCircuito(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.tiposCircuito = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.tiposCircuito = [];\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.noResult = true;\r\n          const message = error.error.message\r\n          message ? this.pnotify.error(message): this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getFilterTiposCircuito() {\r\n    this.loadingTiposCircuito = true;\r\n    this.tiposCircuitoService\r\n      .getTiposCircuito({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTiposCircuito = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.filterTiposCircuito = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      }),\r\n      (error: any) => {\r\n        const message = error.error.message\r\n        message ? this.pnotify.error(message): this.pnotify.error();\r\n      }\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(tipos: ILogisticaYmsTiposCircuito): string {\r\n    let borderClass: string;\r\n\r\n    if (tipos.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (tipos.IN_STAT == 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(params: ILogisticaYmsTiposCircuito) {\r\n    const stat = params.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          params.IN_STAT = stat;\r\n          return this.tiposCircuitoService.postTiposCircuito(params);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.tiposCircuito.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Tipos_Circuito${dataExport}`);\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Tipos de Circuitos\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onExport()\\\"\\r\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n              <label for=\\\"filterTiposCircuito\\\">Tipo de Circuito</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"filterTiposCircuito\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingTiposCircuito\\\"\\r\\n                labelForId=\\\"UUID_LOGI_YMS_CIRC_TIPO\\\"\\r\\n                bindLabel=\\\"NM_CIRC_TIPO\\\"\\r\\n                bindValue=\\\"UUID_LOGI_YMS_CIRC_TIPO\\\"\\r\\n                id=\\\"UUID_LOGI_YMS_CIRC_TIPO\\\"\\r\\n                formControlName=\\\"UUID_LOGI_YMS_CIRC_TIPO\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              (keydown.enter)=\\\"onFilter()\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" >ID</th>\\r\\n              <th scope=\\\"col\\\" >Descrição</th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let tipos of tiposCircuito\\\"  [class.table-active]=\\\"tipos?.UUID_LOGI_YMS_CIRC_TIPO == tipoSelecionado?.UUID_LOGI_YMS_CIRC_TIPO && showDetailPanel\\\">\\r\\n              <td  [ngClass]=\\\"tipos.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n              {{tipos.UUID_LOGI_YMS_CIRC_TIPO }}\\r\\n              </td>\\r\\n              <td >{{ tipos.NM_CIRC_TIPO | uppercase}}</td>\\r\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"tipos.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(tipos)\\\">\\r\\n                    <i [ngClass]=\\\"tipos.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', tipos.UUID_LOGI_YMS_CIRC_TIPO]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(tipos)\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Histórico de alteração\\\">\\r\\n        <custom-table>\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr>\\r\\n              <td class=\\\"text-center\\\" *ngIf=\\\"tipoSelecionado?.DT_INCL != null && tipoSelecionado?.DT_ATUA == null \\\">{{ tiposSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <td class=\\\"text-center\\\" *ngIf=\\\"tipoSelecionado?.DT_INCL != null && tipoSelecionado?.DT_ATUA != null \\\">{{ tiposSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <td>{{ tipoSelecionado?.NM_USUA | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy90aXBvcy1jaXJjdWl0by9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\nimport { LogisticaYmsTiposCircuitoCadastroComponent } from './cadastro/cadastro.component';\r\nimport { LogisticaYmsTiposCircuitoListaComponent } from './lista/lista.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaYmsTiposCircuitoListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: LogisticaYmsTiposCircuitoCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: LogisticaYmsTiposCircuitoCadastroComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LogisticaYmsTiposCircuitoRoutingModule {}\r\n"]}