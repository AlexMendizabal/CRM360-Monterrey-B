{"version":3,"sources":["webpack:///src/app/modules/logistica/entrada-materiais/entrada-materiais.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/notas-fiscais/lista/duplicadas/duplicadas.component.html","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/documentos/documentos.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/notas-fiscais/lista/lista.component.scss","webpack:///src/app/modules/sul-fluminense/entrada-materiais/entrada-materiais-routing.module.ts","webpack:///src/app/modules/logistica/entrada-materiais/notas-fiscais/lista/lista.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/painel-aprovacao/lista/lista.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/parecer/cadastro/cadastro.component.scss","webpack:///src/app/modules/sul-fluminense/entrada-materiais/consulta-recebimento-bobinas/consulta-recebimento-bobinas.component.html","webpack:///src/app/modules/logistica/entrada-materiais/motivos/lista/lista.component.html","webpack:///src/app/modules/logistica/entrada-materiais/motivos/services/motivos.service.ts","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/entrada-materiais/parecer/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/status-recebimento/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/entrada-materiais-routing.module.ts","webpack:///src/app/modules/logistica/entrada-materiais/tipos-conformidade/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/status-recebimento/lista/lista.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/status-recebimento/services/status-recebimento.service.ts","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/tipos-conformidade/services/tipos-conformidade.service.ts","webpack:///src/app/modules/sul-fluminense/entrada-materiais/consulta-recebimento-bobinas/consulta-recebimento-bobinas.component.ts","webpack:///src/app/modules/sul-fluminense/entrada-materiais/consulta-recebimento-bobinas/consulta-recebimento-bobinas.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/motivos/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/entrada-materiais/tipos-conformidade/lista/lista.component.html","webpack:///src/app/modules/sul-fluminense/entrada-materiais/painel-bobinas-qualidade/painel-bobinas-qualidade.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/motivos/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/ocorrencias/ocorrencias.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/entrada-materiais.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/status-recebimento/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/entrada-materiais/status-recebimento/lista/lista.component.html","webpack:///src/app/modules/logistica/entrada-materiais/parecer/services/parecer.service.ts","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/lista/lista.component.html","webpack:///src/app/modules/logistica/entrada-materiais/motivos/lista/lista.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/ocorrencias/ocorrencias.component.html","webpack:///src/app/modules/logistica/entrada-materiais/motivos/cadastro/cadastro.component.scss","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/logistica/entrada-materiais/notas-fiscais/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/ocorrencias/ocorrencias.component.scss","webpack:///src/app/modules/sul-fluminense/entrada-materiais/entrada-materiais.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/parecer/lista/lista.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/parecer/lista/lista.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/lista/lista.component.ts","webpack:///src/app/modules/sul-fluminense/entrada-materiais/entrada-materiais.component.html","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/services/ficha-conformidade.service.ts","webpack:///src/app/modules/sul-fluminense/entrada-materiais/entrada-materiais.module.ts","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/documentos/documentos.component.html","webpack:///src/app/modules/logistica/entrada-materiais/painel-aprovacao/lista/lista.component.html","webpack:///src/app/modules/logistica/entrada-materiais/tipos-conformidade/lista/lista.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/entrada-materiais.component.html","webpack:///src/app/modules/sul-fluminense/entrada-materiais/entrada-materiais.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/notas-fiscais/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/entrada-materiais/notas-fiscais/lista/lista.component.html","webpack:///src/app/modules/logistica/entrada-materiais/status-recebimento/lista/lista.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/status-recebimento/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/painel-aprovacao/lista/lista.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/services/entrada-materiais.service.ts","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/lista/lista.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/parecer/lista/lista.component.html","webpack:///src/app/modules/logistica/entrada-materiais/notas-fiscais/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/motivos/lista/lista.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/painel-aprovacao/services/aprovacao.service.ts","webpack:///src/app/modules/logistica/entrada-materiais/notas-fiscais/lista/duplicadas/duplicadas.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/notas-fiscais/lista/duplicadas/duplicadas.component.ts","webpack:///src/app/modules/sul-fluminense/entrada-materiais/painel-bobinas-qualidade/painel-bobinas-qualidade.component.ts","webpack:///src/app/modules/sul-fluminense/entrada-materiais/painel-bobinas-qualidade/painel-bobinas-qualidade.component.html","webpack:///src/app/modules/logistica/entrada-materiais/parecer/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/entrada-materiais/tipos-conformidade/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/entrada-materiais/ficha-conformidade/documentos/documentos.component.scss","webpack:///src/app/modules/logistica/entrada-materiais/tipos-conformidade/lista/lista.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/tipos-conformidade/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/entrada-materiais/entrada-materiais.module.ts"],"names":["LogisticaEntradaMateriaisFichasConformidadeDocumentosComponent","fichaConformidadeService","pnotify","activatedRoute","confirmModalService","formData","documentos","loadingNavBar","loading","params","snapshot","hasOwnProperty","getDocumentos","ID_LOGI_ENMA_FHNC","id","IN_STAT","fichaId","requests","length","promise","forEach","element","push","postDocumento","Promise","resolve","subscribe","responses","response","status","success","error","documento","type","title","message","cancelTxt","okTxt","showConfirm","pipe","result","putDocumento","form","get","value","getDocumento","body","index","filter","NM_DOCU","splice","files","fd","FormData","append","postDocumentos","selector","template","routes","path","children","component","SulFluminenseEntradaMateriaisRoutingModule","imports","forChild","exports","LogisticaEntradaMateriaisNotasFiscaisListaComponent","route","localeService","notasFiscaisService","entradaMateriaisService","statusRecebimentoService","formBuilder","xlsxService","modalService","routerService","dateService","noHistoricoMateriais","ORDE_BY","ORDE_TYPE","loadingFornecedores","loadingMateriais","loadingHistoricoMateriais","loadingEmpresas","loadingDepositos","loadingAlteracoes","loadingStatusRecebimento","fornecedores","empresas","depositos","materiais","historicoMateriais","alteracoes","statusRecebimento","totalItens","notas","notasEmpty","fichasNaoConforme","fichasNaoConformeEmpty","duplicados","duplicadosEmpty","cardsLoading","tableConfig","subtitleBorder","tipos","cod","nome","tiposData","subtitles","text","color","itemsPerPage","totalItems","currentPage","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","buildForm","setBreadCrumb","onActivatedRoute","getEmpresas","getDepositos","getStatusRecebimento","getLotesDuplicados","$activatedRouteSubscription","unsubscribe","modalRef1","undefined","hide","modalRef2","queryParams","_response","getBase64UrlParams","patchValue","TT_REGI_PAGI","getNotasFiscais","getParams","reset","PAGI","TP_DATA_FINA","TP_DATA_INIC","DT_INIC","Date","DT_FINA","TIME","getTime","group","ID_LOGI_ENMA_NOFI","NR_NOTA_FISC","NM_FORN","CD_MATE","ID_FORN","NM_DEPO","DT_EMIS_NOTA_FISC","NR_NOTA_FISC_REFE","ID_LOGI_ENMA_NOFI_STAT","NM_STAT","NM_MATE","DS_LOTE","IN_FHNC","DS_LOGI_ENTR_MATE_UNID_MEDI","DS_LOGI_ENTR_MATE_LOTE","UUID_EMPR","UUID_DEPO","NM_EMPR","QT_LOGI_ENTR_MATE","DS_OBSE","MATR_USUA_CADA","DS_USUA_CADA","DT_INCL","onFilter","idSubModulo","breadCrumbTree","descricao","routerLink","setValue","navigate","relativeTo","setBase64UrlParams","idSubmodulo","nota","getNotasMateriais","getAlteracoes","getHistoricoMateriais","notaFiscalSelecionada","show","animated","column","noMateriais","notasFiscais","noResult","_params","IN_DS_OBSE","ID_EMPR","IN_PAGI","getExport","allNotasFiscais","onExport","notice","noAlteracoes","_newDT","data","convertToBrazilianDate","NM_USUA","SEQU_MATE","getFornecedores","event","page","_obj","prop","convertToUrlDate","borderClass","stat","confirmChange","asObservable","postNotasFiscais","toLocaleDateString","split","dataExport","listagemExport","exportFile","LogisticaEntradaMateriaisMotivosService","http","API","observe","post","providedIn","LogisticaEntradaMateriaisParecerCadastroComponent","router","parecerService","titleService","atividadesService","disabledForm","parecerRecebimento","MASKS","registrarAcesso","setFormBuilder","getParecer","ID_LOGI_ENMA_FHNC_OCPR","appTitle","setTitle","NM_PARE","required","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","postParecer","LogisticaEntradaMateriaisRoutingModule","LogisticaEntradaMateriaisStatusRecebimentoService","LogisticaEntradaMateriaisFichasConformidadeCadastroComponent","fichasConformidadeService","tiposConformidadeService","allMateriais","noNotasFiscais","noAllMateriais","validateNF","numberDescricao","fichasConformidade","tiposConformidade","totalItemsMaterial","begin","end","getTiposConformidade","modalRef","getFichasConformidade","getFormMaterial","onAddMaterial","getNotasFiscaisMateriais","ficha_","loadingTiposConformidade","minLength","ID_LOGI_ENMA_FHNC_TIPO","array","formNotasFiscais","buscarPor","pesquisa","ID_MATE","TT_MATE_ORIG","DS_UNID_MEDI","formAllMateriais","ID_REFE_ERP","NM_CLAS","NM_LINH","JSON","parse","stringify","postFichasConformidade","postMateriais","loadingAllMateriais","getAllMateriais","loadingNotasFiscais","material","_material","fg","TT_MATE","ID","request","formMateriais","getRawValue","ID_LOGI_ENMA_FHNC_MATE","ID_LOGI_ENMA_NOFI_MATE","UUID_MATE","IN_MATE","disabled","min","disable","at","removeAt","formGroup","onNestedFieldInvalid","nestedForm","_qtTotal","_qtNC","parseFloat","LogisticaEntradaMateriaisTiposConformidadeService","SulFluminenseConsultaRecebimentoBobinasComponent","URL_MTCORP","currentUser","localStorage","getItem","matricula","btoa","idUsuario","url","onBreadCumbTree","LogisticaEntradaMateriaisMotivosCadastroComponent","motivosService","motivos","getMotivos","ID_LOGI_ENTR_MATE_MOTI","DS_LOGI_ENTR_MATE_MOTI","DS_LOGI_ENTR_MATE_CATE_MOTI","postMotivos","LogisticaEntradaMateriaisFichasConformidadeOcorrenciasComponent","fecharModal","usuarios","noUsuarios","parecer","noResponsavel","ocorrencias","getResponsaveis","responsaveis","onAddResponsavel","loadingParecer","ID_LOGI_ENMA_FHNC_OCOR","IN_CONC","NR_MATR","formUsuarios","situacao","qtItensPagina","loadingUsuarios","getUsuarios","usuario","formResponsaveis","responsavel","postResponsaveis","postOcorrencias","idOcorrencia","postDocumentosOcorrencia","emit","ID_RESP","NR_MATR_RESP","NM_RESP","postDocumentoOcorrencia","getDocumentosOcorrencia","getDocumentoOcorrencia","putDocumentoOcorrencia","LogisticaEntradaMateriaisComponent","subModulosService","pnotifyService","titleCasePipe","loaderFullScreen","atividades","getPNotify","getSubmodulo","getAtividadesInternas","getSubModulo","appName","transform","handleAtividadesInternasError","nomeSubModulo","LogisticaEntradaMateriaisParecerService","LogisticaEntradaMateriaisMotivosListaComponent","detailPanelService","showDetailPanel","categorias","onDetailPanelEmitter","showDetailPanelSubscription","config","showing","motivoSelecionado","loadedFinished","setTimeout","concat","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","currentDate","startOfWeek","setDate","setHours","endOfWeek","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","LogisticaEntradaMateriaisNotasFiscaisCadastroComponent","noFornecedor","noMaterial","formPesquisaFornecedor","nota_","fornecedor","NM_RAZA_SOCI","markAsDirty","onlySelf","ID_LOGI_ENTR_MATE_NOFI","UUID_FORN","NM_FANT","NR_CNPJ_CPF","errors","abstractControl","abstractControlField","controlName","onFieldRequired","dirty","keys","key","sequencia","modalRefPopup","window","open","location","origin","LogisticaEntradaMateriaisParecerListaComponent","getParecers","DT_ATUA","parecerSelecionado","pareceres","LogisticaEntradaMateriaisFichaConformidadeListaComponent","pdfService","loadingImagens","loadingDocumentos","hiddenModal","allFichas","documentosOcorrencia","responsaveisOcorrencia","hideModalOcorrencias","getOcorrencias","fichaSelecionada","NM_TIPO","getRelatorio","imagens","totalImagens","loadingDocumentosOcorrencias","loadingResponsaveisOcorrencias","getResponsaveisOcorrencia","noResponsaveisOcorrencia","loadingOcorrencias","disabledButton","noOcorrencias","ocorrencia","totalDocumentos","hideModal","ficha","_paramsImagem","TP_DOCU","_paramsDocumento","getImagens","getMateriais","backdrop","_id","download","print","LogisticaEntradaMateriaisFichaConformidadeService","put","SulFluminenseEntradaMateriaisModule","declarations","forRoot","SulFluminenseEntradaMateriaisComponent","res","LogisticaEntradaMateriaisStatusRecebimentoListaComponent","historicos","statusSelecionado","getHistorico","postStatusRecebimento","corrente","TP_ACAO","LogisticaEntradaMateriaisStatusRecebimentoCadastroComponent","LogisticaEntradaMateriaisPainelAprovacaoListaComponent","aprovacoesService","contatosService","loadingDetails","loadingModal","contato","viewDetailsSolicitante","getSolicitacoes","MT_LOGI_ENTR_MATE_NOME_SOLI","getContatos","solicitacaoSelecionada","ID_LOGI_ENTR_MATE_APRO","NM_LOGI_ENTR_MATE_NOME_SOLI","DS_SOLI","DT_SOLI","DT_APROV","viewHistorico","solicitacoes","postSolicitacoes","LogisticaEntradaMateriaisService","LogisticaEntradaMateriaisPainelAprovacoesService","aprovacao","LogisticaEntradaMateriaisNotasFiscaisDuplicadasComponent","loadingDuplicadas","noDuplicadas","duplicadas","totalItemsDuplicadas","formLotesDuplicados","duplicada","duplicadaSelecionada","postNotasDuplicadas","SulFluminensePainelBobinasQualidadeComponent","LogisticaEntradaMateriaisTiposConformidadeListaComponent","loadingResponsaveis","tipo","tipoSelecionado","noResponsaveis","postTiposConformidade","LogisticaEntradaMateriaisTiposConformidadeCadastroComponent","_tipoConformidade","_usuario","LogisticaEntradaMateriaisModule"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBFA,8DAA8D;AAYzE,gFACYC,wBADZ,EAEYC,OAFZ,EAGYC,cAHZ,EAIYC,mBAJZ,EAIoD;AAAA;;AAHxC,eAAAH,wBAAA,GAAAA,wBAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AARZ,eAAAC,QAAA,GAA4B,EAA5B;AACA,eAAAC,UAAA,GAA8D,EAA9D;AACA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,OAAA,GAAU,KAAV;AAOC;;AAlBwE;AAAA;AAAA,qCAoBjE;AACN,gBAAMC,MAAM,GAAG,KAAKN,cAAL,CAAoBO,QAApB,CAA6BD,MAA5C;;AACA,gBAAGA,MAAM,CAACE,cAAP,CAAsB,IAAtB,CAAH,EAA+B;AAC7B,mBAAKC,aAAL,CAAmB;AACjBC,iCAAiB,EAAEJ,MAAM,CAACK,EADT;AAEjBC,uBAAO,EAAE;AAFQ,eAAnB;AAID;AACF;AA5BwE;AAAA;AAAA,yCAgCpDC,OAhCoD,EAgCnC;;;;;;;;;AAChCC,8B,GAAW,E;;4BAEX,KAAKZ,QAAL,CAAca,MAAd,KAAyB,C;;;;;uDACpBD,Q;;;AAGHE,6B,GAAU,SAAVA,OAAU,GAAM;AACpB,6BAAI,CAACd,QAAL,CAAce,OAAd,CAAsB,UAACC,OAAD,EAAa;AACjCJ,kCAAQ,CAACK,IAAT,CAAc,KAAI,CAACrB,wBAAL,CAA8BsB,aAA9B,CAA4CF,OAA5C,EAAqDL,OAArD,CAAd;AACD,yBAFD;AAGD,uB;;AAEDQ,6BAAO,CAACC,OAAR,CAAgBN,OAAO,EAAvB;AAEA,4EAASF,QAAT,EACGS,SADH,CAEI,UAACC,SAAD,EAAuC;AACrCA,iCAAS,CAACP,OAAV,CAAkB,UAAAQ,QAAQ,EAAI;AAC5B,8BAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACzB,iCAAI,CAAC3B,OAAL,CAAa4B,OAAb;AACD,2BAFD,MAEO;AACL,iCAAI,CAAC5B,OAAL,CAAa6B,KAAb;AACD;AACF,yBAND;AAOD,uBAVL,EAYE,UAACA,KAAD,EAAW;AACT,6BAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD,uBAdH;uDAiBOd,Q;;;;;;;;;AACR;AAjEwE;AAAA;AAAA,uCAmE5De,SAnE4D,EAmEX;AAAA;;AAAA,gBACrDC,IADqD,GAE1D,YAF0D;AAAA,gBAC/CC,KAD+C,GAG1D,sBAH0D;AAAA,gBACxCC,OADwC,GAI1D,2DAJ0D;AAAA,gBAC/BC,SAD+B,GAK1D,UAL0D;AAAA,gBACpBC,KADoB,GAM1D,WAN0D;AAS5D,iBAAKjC,mBAAL,CACGkC,WADH,CACeL,IADf,EACqBC,KADrB,EAC4BC,OAD5B,EACqCC,SADrC,EACgDC,KADhD,EAEGE,IAFH,CAGI,4DAAK,CAAL,CAHJ,EAII,iEAAU,UAACC,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,0CAAP;AAEb,oBAAI,CAACjC,aAAL,GAAqB,IAArB;AAEA,qBAAO,MAAI,CAACN,wBAAL,CAA8BwC,YAA9B,CAA2CT,SAA3C,CAAP;AACD,aAND,CAJJ,EAWI,gEAAS,YAAM;AACb,oBAAI,CAACzB,aAAL,GAAqB,KAArB;AACD,aAFD,CAXJ,EAeGmB,SAfH,CAea,UAACE,QAAD,EAAc;AACvB,oBAAI,CAAC1B,OAAL,CAAa4B,OAAb,CAAqB,kCAArB;;AACA,oBAAI,CAAClB,aAAL,CAAmB;AACjBC,iCAAiB,EAAE,MAAI,CAAC6B,IAAL,CAAUC,GAAV,CAAc,mBAAd,EAAmCC,KADrC;AAEjB7B,uBAAO,EAAE;AAFQ,eAAnB;AAID,aArBH;AAsBD;AAlGwE;AAAA;AAAA,wCAoG3DN,MApG2D,EAoGlD;AAAA;;AACrB,iBAAKR,wBAAL,CAA8B4C,YAA9B,CAA2CpC,MAA3C,EAAmDiB,SAAnD,CACE,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACvB,UAAL,GAAkBsB,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAlB;AACD,eAFD,MAEO;AACL,sBAAI,CAACxC,UAAL,GAAkB,EAAlB;AACD;AACF,aAPH,EAQE,UAACyB,KAAD,EAAW;AACT,oBAAI,CAACzB,UAAL,GAAkB,EAAlB;AACD,aAVH;AAYD;AAjHwE;AAAA;AAAA,mCAmHhE0B,SAnHgE,EAmHfe,KAnHe,EAmHA;AACvE,gBAAG,CAACf,SAAS,CAACrB,cAAV,CAAyB,wBAAzB,CAAJ,EAAuD;AACrD,mBAAKN,QAAL,GAAgB,KAAKA,QAAL,CAAc2C,MAAd,CAAqB,UAAC3B,OAAD,EAAsB;AACzD,uBAAQA,OAAO,CAACsB,GAAR,CAAY,MAAZ,CAAD,CAAsB,MAAtB,KAAiCX,SAAS,CAACiB,OAAlD;AACD,eAFe,CAAhB;AAGD;;AACDjB,qBAAS,CAACjB,OAAV,GAAoB,GAApB;AACA,iBAAKT,UAAL,CAAgB4C,MAAhB,CAAuBH,KAAvB,EAA8B,CAA9B;;AACA,gBAAGf,SAAS,CAACrB,cAAV,CAAyB,wBAAzB,CAAH,EAAsD;AACpD,mBAAK8B,YAAL,CAAkBT,SAAlB;AACD;AACF;AA9HwE;AAAA;AAAA,qCAgI9DmB,KAhI8D,EAgI7C;AAC1B,gBAAIA,KAAK,CAACjC,MAAN,KAAiB,CAArB,EAAwB;AACxB,gBAAMkC,EAAE,GAAG,IAAIC,QAAJ,EAAX;AACAD,cAAE,CAACE,MAAH,CAAU,MAAV,EAAkBH,KAAK,CAAC,CAAD,CAAvB;AACA,iBAAK9C,QAAL,CAAciB,IAAd,CAAmB8B,EAAnB;AACA,iBAAK9C,UAAL,CAAgBgB,IAAhB,CAAqB;AAAE2B,qBAAO,EAAEE,KAAK,CAAC,CAAD,CAAL,CAAS,MAAT;AAAX,aAArB;AACD;AAtIwE;AAAA;AAAA,4BACpDrC,EADoD,EAC1C;AAC7B,gBAAG,CAACA,EAAJ,EACE;AACF,iBAAKyC,cAAL,CAAoBzC,EAApB;AACD;AALwE;;AAAA;AAAA,S;;;;gBATlE;;gBAHA;;gBADA;;gBADA;;;;;;gBAeN;;;AADUd,oEAA8D,6DAL1E,gEAAU;AACTwD,gBAAQ,EAAE,sDADD;AAETC,gBAAQ,EAAR,6EAFS;;AAAA,OAAV,CAK0E,E,+EAalC,sH,EAClB,2F,EACO,8D,EACK,8G,EAhBwC,GAA9DzD,8DAA8D,CAA9D;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,UAAM0D,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,gBAAQ,EAAE,CACR;AACED,cAAI,EAAE,EADR;AAEEE,mBAAS,EAAE;AAFb,SADQ,EAKR;AACEF,cAAI,EAAE,0BADR;AAEEE,mBAAS,EAAE;AAFb,SALQ,EASR;AACEF,cAAI,EAAE,8BADR;AAEEE,mBAAS,EAAE;AAFb,SATQ,EAaR;AACEF,cAAI,EAAE,IADR;AAEEE,mBAAS,EAAE;AAFb,SAbQ;AAFZ,OADqB,CAAvB;;UA4BaC,0CAA0C;AAAA;AAAA,O;;AAA1CA,gDAA0C,6DAJtD,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBN,MAAtB,CAAD,CADD;AAERO,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIsD,GAA1CH,0CAA0C,CAA1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eChCb;AAKA;AAQA;;;UAmBaI,mDAAmD;AA6G9D;AAEA,qEACUC,KADV,EAEUjE,OAFV,EAGUC,cAHV,EAIUiE,aAJV,EAKUC,mBALV,EAMUC,uBANV,EAOUC,wBAPV,EAQUC,WARV,EASUC,WATV,EAUUrE,mBAVV,EAWUsE,YAXV,EAYUC,aAZV,EAaUC,WAbV,EAakC;AAAA;;AAZxB,eAAAT,KAAA,GAAAA,KAAA;AACA,eAAAjE,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAiE,aAAA,GAAAA,aAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AACA,eAAAC,uBAAA,GAAAA,uBAAA;AACA,eAAAC,wBAAA,GAAAA,wBAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAArE,mBAAA,GAAAA,mBAAA;AACA,eAAAsE,YAAA,GAAAA,YAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AArHV,eAAAC,oBAAA,GAAsB,EAAtB;AAOA,eAAAC,OAAA,GAAU,mBAAV;AACA,eAAAC,SAAA,GAAY,MAAZ,CA6GkC,CA5GlC;;AACA,eAAAvE,OAAA,GAAU,IAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB;AACA,eAAAyE,mBAAA,GAAsB,KAAtB;AACA,eAAAC,gBAAA,GAAmB,KAAnB;AACA,eAAAC,yBAAA,GAA4B,KAA5B;AACA,eAAAC,eAAA,GAAkB,KAAlB;AACA,eAAAC,gBAAA,GAAmB,KAAnB;AACA,eAAAC,iBAAA,GAAoB,KAApB;AACA,eAAAC,wBAAA,GAA2B,KAA3B,CAmGkC,CAlGlC;;AACA,eAAAC,YAAA,GAAc,EAAd;AACA,eAAAC,QAAA,GAAU,EAAV;AACA,eAAAC,SAAA,GAAW,EAAX;AACA,eAAAC,SAAA,GAAW,EAAX;AACA,eAAAC,kBAAA,GAAqB,EAArB;AACA,eAAAC,UAAA,GAAW,EAAX;AACA,eAAAC,iBAAA,GAAkB,EAAlB;AACA,eAAAC,UAAA,GAAkB,EAAlB,CA0FkC,CArFlC;;AACA,eAAAC,KAAA,GAAgB,CAAhB;AACA,eAAAC,UAAA,GAAsB,KAAtB;AAEA,eAAAC,iBAAA,GAA4B,CAA5B;AACA,eAAAC,sBAAA,GAAkC,KAAlC;AAEA,eAAAC,UAAA,GAAqB,CAArB;AACA,eAAAC,eAAA,GAA2B,KAA3B;AAMA,eAAAC,YAAA,GAAwB,IAAxB,CAuEkC,CArElC;;AACA,eAAAC,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C,CAoEkC,CAhElC;;AACA,eAAAC,KAAA,GAAQ,CACN;AACEC,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADM,EAKN;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALM,CAAR;AAWA,eAAAC,SAAA,GAAY,CACV;AACEF,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADU,EAKV;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALU,EASV;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WATU,EAaV;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WAbU,CAAZ,CAoDkC,CAjClC;;AACA,eAAAE,SAAA,GAA8B,CAC5B;AACE9F,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACEhG,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA;;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AAkBE,eAAK7C,aAAL,CAAmB8C,GAAnB,CAAuB,OAAvB;AACA,eAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAP,CACd,EADc,EAEd;AAAEC,0BAAc,EAAE;AAAlB,WAFc,EAGd;AAAEC,4BAAgB,EAAE;AAApB,WAHc,EAId;AAAEC,2BAAe,EAAE;AAAnB,WAJc,CAAhB;AAMD;;AArI6D;AAAA;AAAA,qCAuInD;AACT,iBAAKC,SAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,gBAAL;AACA,iBAAKC,WAAL;AACA,iBAAKC,YAAL;AACA,iBAAKC,oBAAL;AACA,iBAAKC,kBAAL;AACD;AA/I6D;AAAA;AAAA,wCAiJhD;AACZ,iBAAKC,2BAAL,CAAiCC,WAAjC;;AACA,gBAAG,KAAKC,SAAL,IAAkBC,SAArB,EAA+B;AAC7B,mBAAKD,SAAL,CAAeE,IAAf;AACD;;AACD,gBAAG,KAAKC,SAAL,IAAkBF,SAArB,EAA+B;AAC7B,mBAAKE,SAAL,CAAeD,IAAf;AACD;AACF;AAzJ6D;AAAA;AAAA,6CA2J3C;AAAA;;AACjB,iBAAKJ,2BAAL,GAAmC,KAAK7H,cAAL,CAAoBmI,WAApB,CAAgC5G,SAAhC,CACjC,UAACE,QAAD,EAAc;AACZ,kBAAM2G,SAAS,GAAG,MAAI,CAAC5D,aAAL,CAAmB6D,kBAAnB,CAAsC5G,QAAtC,CAAlB;;AACA,oBAAI,CAACc,IAAL,CAAU+F,UAAV,CAAqBF,SAArB;;AACA,kBAAIA,SAAS,CAAC5H,cAAV,CAAyB,cAAzB,CAAJ,EACE,MAAI,CAACoG,YAAL,GAAoBwB,SAAS,CAACG,YAA9B;;AACF,oBAAI,CAACC,eAAL,CAAqB,MAAI,CAACC,SAAL,EAArB;AACD,aAPgC,CAAnC;AASD;AArK6D;AAAA;AAAA,oCAwKpD;AACR,iBAAKlG,IAAL,CAAUmG,KAAV;AACA,iBAAKnG,IAAL,CAAU+F,UAAV,CAAqB;AACnBK,kBAAI,EAAE,CADa;AAEnBJ,0BAAY,EAAE,GAFK;AAGnBK,0BAAY,EAAE,GAHK;AAInBC,0BAAY,EAAE,GAJK;AAKnBC,qBAAO,EAAE,IAAIC,IAAJ,EALU;AAMnBC,qBAAO,EAAE,IAAID,IAAJ,EANU;AAOnBE,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD;AAPa,aAArB;AASD;AAnL6D;AAAA;AAAA,sCAqLlD;AACV,iBAAK3G,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjCC,+BAAiB,EAAE,CAAC,IAAD,CADc;AAEjCC,0BAAY,EAAE,CAAC,IAAD,CAFmB;AAGjCC,qBAAO,EAAE,CAAC,IAAD,CAHwB;AAIjCC,qBAAO,EAAE,CAAC,IAAD,CAJwB;AAKjCC,qBAAO,EAAE,CAAC,IAAD,CALwB;AAMjCC,qBAAO,EAAE,CAAC,IAAD,CANwB;AAOjCC,+BAAiB,EAAE,CAAC,IAAD,CAPc;AAQjCC,+BAAiB,EAAE,CAAC,IAAD,CARc;AASjCC,oCAAsB,EAAE,CAAC,IAAD,CATS;AAUjCC,qBAAO,EAAE,CAAC,IAAD,CAVwB;AAWjCC,qBAAO,EAAE,CAAC,IAAD,CAXwB;AAYjCC,qBAAO,EAAE,CAAC,IAAD,CAZwB;AAajCC,qBAAO,EAAE,CAAC,IAAD,CAbwB;AAcjCC,yCAA2B,EAAE,CAAC,IAAD,CAdI;AAejCC,oCAAsB,EAAE,CAAC,IAAD,CAfS;AAgBjCtB,0BAAY,EAAE,CAAC,GAAD,CAhBmB;AAiBjCC,0BAAY,EAAE,CAAC,GAAD,CAjBmB;AAkBjCsB,uBAAS,EAAE,CAAC,IAAD,CAlBsB;AAmBjCC,uBAAS,EAAE,CAAC,IAAD,CAnBsB;AAoBjCC,qBAAO,EAAE,CAAC,IAAD,CApBwB;AAqBjCC,+BAAiB,EAAE,CAAC,IAAD,CArBc;AAsBjC1J,qBAAO,EAAE,CAAC,IAAD,CAtBwB;AAuBjC2J,qBAAO,EAAE,CAAC,IAAD,CAvBwB;AAwBjCC,4BAAc,EAAE,CAAC,IAAD,CAxBiB;AAyBjCC,0BAAY,EAAE,CAAC,IAAD,CAzBmB;AA0BjCC,qBAAO,EAAE,CAAC,IAAD,CA1BwB;AA2BjC5B,qBAAO,EAAE,CAAC,IAAIC,IAAJ,EAAD,CA3BwB;AA4BjCC,qBAAO,EAAE,CAAC,IAAID,IAAJ,EAAD,CA5BwB;AA6BjCJ,kBAAI,EAAE,CAAC,CAAD,CA7B2B;AA8BjCJ,0BAAY,EAAE,CAAC,KAAK3B,YAAN,CA9BmB;AA+BjCjC,qBAAO,EAAE,CAAC,KAAKA,OAAN,CA/BwB;AAgCjCC,uBAAS,EAAE,CAAC,KAAKA,SAAN,CAhCsB;AAiCjCqE,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD;AAjC2B,aAAvB,CAAZ;AAmCD;AAzN6D;AAAA;AAAA,2CA2N7CtC,YA3N6C,EA2N/B;AAC7B,iBAAKA,YAAL,GAAoBA,YAApB;AACA,iBAAK+D,QAAL;AACD;AA9N6D;AAAA;AAAA,0CAgO9C;AACd,gBAAMhK,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKC,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU;AAFZ,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE;AADb,aAToB,CAAtB;AAaD;AA/O6D;AAAA;AAAA,qCAiPnD;AACT,iBAAKvI,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,CAA/B;AACA,iBAAKzI,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAK3G,IAAL,CAAUC,GAAV,CAAc,WAAd,EAA2BwI,QAA3B,CAAoC,KAAKpG,SAAzC;AACA,iBAAKrC,IAAL,CAAUC,GAAV,CAAc,SAAd,EAAyBwI,QAAzB,CAAkC,KAAKrG,OAAvC;AACA,iBAAKX,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAIA,iBAAKlG,IAAL,CAAUmG,KAAV;AACD;AA3P6D;AAAA;AAAA,qCA6PnD/H,EA7PmD,EA6PxC;AACpB,gBAAML,MAAM,GAAG,KAAKN,cAAL,CAAoBO,QAApB,CAA6BD,MAA5C;AACA,gBAAM8K,WAAW,GAAG9K,MAAM,CAACE,cAAP,CAAsB,aAAtB,IAAuCF,MAAM,CAACsK,WAA9C,GAA4D5C,SAAhF;AACF,iBAAKhE,KAAL,CAAWiH,QAAX,CAAoB,wCAAiCG,WAAjC,mCAApB,EAAkG;AAC9FF,wBAAU,EAAE,KAAKlL,cAD6E;AAE9FmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC;AAAC/B,iCAAiB,EAAEzI;AAApB,eAAtC;AAFiF,aAAlG;AAIC;AApQ6D;AAAA;AAAA,4CAsQ5C2C,QAtQ4C,EAsQhB+H,IAtQgB,EAsQV;AAClD,iBAAKC,iBAAL,CAAuB;AACrBlC,+BAAiB,EAAEiC,IAAI,CAACjC,iBADH;AACsBxI,qBAAO,EAAE;AAD/B,aAAvB;AAGA,iBAAK2K,aAAL,CAAmB;AAACnC,+BAAiB,EAAEiC,IAAI,CAACjC;AAAzB,aAAnB;AACA,iBAAKoC,qBAAL,CAA2B;AAACpC,+BAAiB,EAAEiC,IAAI,CAACjC;AAAzB,aAA3B;AACA,iBAAKqC,qBAAL,GAA6BJ,IAA7B;AACA,iBAAKtD,SAAL,GAAiB,KAAKxD,YAAL,CAAkBmH,IAAlB,CAAuBpI,QAAvB,EAAiC;AAChDqI,sBAAQ,EAAE,KADsC;AAEhD,uBAAO;AAFyC,aAAjC,CAAjB;AAID;AAjR6D;AAAA;AAAA,8CAmR1C;AAClB,iBAAK5D,SAAL,CAAeE,IAAf;AACD;AArR6D;AAAA;AAAA,8CAuR1C3E,QAvR0C,EAuRd;AAC9C,iBAAK4E,SAAL,GAAiB,KAAK3D,YAAL,CAAkBmH,IAAlB,CAAuBpI,QAAvB,EAAiC;AAChDqI,sBAAQ,EAAE,KADsC;AAEhD,uBAAO;AAFyC,aAAjC,CAAjB;AAID;AA5R6D;AAAA;AAAA,gDA8RxC;AACpB,iBAAKzD,SAAL,CAAeD,IAAf;AACA,iBAAKL,kBAAL;AACD;AAjS6D;AAAA;AAAA,qCAmSnDgE,MAnSmD,EAmSrC;AACvB,gBAAI,KAAKjH,OAAL,KAAiBiH,MAArB,EAA6B;AAC3B,kBAAI,KAAKhH,SAAL,IAAkB,MAAtB,EAA8B;AAC5B,qBAAKA,SAAL,GAAiB,KAAjB;AACD,eAFD,MAEO,IAAI,KAAKA,SAAL,IAAkB,KAAtB,EAA6B;AAClC,qBAAKA,SAAL,GAAiB,MAAjB;AACD;AACF,aAND,MAMO;AACL,mBAAKD,OAAL,GAAeiH,MAAf;AACA,mBAAKhH,SAAL,GAAiB,KAAjB;AACD;;AACD,iBAAK+F,QAAL;AACD;AA/S6D;AAAA;AAAA,4CAmT5CrK,MAnT4C,EAmTnC;AAAA;;AACzB,iBAAKwE,gBAAL,GAAwB,IAAxB;AACA,iBAAKZ,mBAAL,CACGoH,iBADH,CACqBhL,MADrB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC0C,gBAAL,GAAwB,KAAxB;AACD,aAFD,CAHJ,EAOGvD,SAPH,CAOa,UAACE,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAAC6D,SAAL,GAAiB9D,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAjB;AACA,sBAAI,CAACkJ,WAAL,GAAkB,KAAlB;AACD,eAHD,MAGM;AACJ,sBAAI,CAACtG,SAAL,GAAiB,EAAjB;AACA,sBAAI,CAACsG,WAAL,GAAkB,IAAlB;AACD;AACF,aAfH,EAgBE,UAACjK,KAAD,EAAgB;AACd,oBAAI,CAACiK,WAAL,GAAkB,IAAlB;;AACA,kBAAI;AACF,sBAAI,CAAC9L,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;;AACA,sBAAI,CAAC6J,WAAL,GAAmB,IAAnB;AACD,eAHD,CAGE,OAAOjK,KAAP,EAAc;AACd,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAxBH;AAyBH;AA9U+D;AAAA;AAAA,oDAgVvC;AACrB,iBAAKW,IAAL,CAAUC,GAAV,CAAc,SAAd,EAAyBwI,QAAzB,CAAkC,GAAlC;AACA,iBAAKL,QAAL;AACD;AAnV6D;AAAA;AAAA,gDAqVxCrK,MArVwC,EAqVhC;AAAA;;AAC5B,iBAAKyE,yBAAL,GAAgC,IAAhC;AACA,iBAAKb,mBAAL,CACGsH,qBADH,CACyB,MAAD,OAAC,CAAD,kBAAKlL,MAAL,CAAC,EAAU;AAAEsE,uBAAS,EAAC;AAAZ,aAAV,CADzB,EAEGxC,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC2C,yBAAL,GAAiC,KAAjC;AACD,aAFD,CAHJ,EAOGxD,SAPH,CAQI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B;AACD;;AACD,oBAAI,CAAC8D,kBAAL,GAA0B/D,QAAQ,CAAC,MAAD,CAAR,CAAiB,MAAjB,CAA1B;AACD,aAbL,EAcI,UAACG,KAAD,EAAgB;AACd,kBAAI;AACF,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aApBL;AAqBD;AA5W6D;AAAA;AAAA,gDA8WxCjB,EA9WwC,EA8WtC;AACtB,gBAAG,KAAKoE,yBAAL,CAA+BpE,EAA/B,CAAH,EACE,OAAO,KAAP;AACF,gBAAG,CAAC,KAAK6E,kBAAL,CAAwB7E,EAAxB,CAAJ,EACE,OAAO,KAAP;AACF,gBAAG,KAAK6E,kBAAL,CAAwB7E,EAAxB,EAA4BI,MAA5B,IAAsC,CAAzC,EACE,OAAO,KAAP;AACF,mBAAO,IAAP;AACD;AAtX6D;AAAA;AAAA,0CAwX9CT,MAxX8C,EAwXrC;AAAA;;AACvB,gBAAI,CAAC,KAAKD,OAAV,EAAmB,KAAKD,aAAL,GAAqB,IAArB;AACnB,iBAAK8F,YAAL,GAAoB,KAApB;AACA,iBAAKhC,mBAAL,CACGsE,eADH,CACmBlI,MADnB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,oBAAI,CAAC6F,YAAL,GAAoB,IAApB;AACA,oBAAI,CAAC9F,aAAL,GAAqB,KAArB;AACD,aAJD,CAHJ,EASGmB,SATH,CAUI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACoK,YAAL,GAAoBrK,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAApB;AACA,sBAAI,CAACkE,UAAL,GAAkBpF,QAAQ,CAACkB,IAAT,CAAc,OAAd,CAAlB;AACA,sBAAI,CAACiD,KAAL,GAAanE,QAAQ,CAACkB,IAAT,CAAc,OAAd,CAAb;AACA,sBAAI,CAACmD,iBAAL,GAAyBrE,QAAQ,CAACkB,IAAT,CAAc,YAAd,CAAzB;AACA,sBAAI,CAACoJ,QAAL,GAAgB,KAAhB;AACD,eAND,MAMO;AACL,sBAAI,CAACA,QAAL,GAAgB,IAAhB;AACA,sBAAI,CAACnG,KAAL,GAAa,CAAb;AACA,sBAAI,CAACkG,YAAL,GAAoB,EAApB;AACD;AACF,aAtBL,EAuBI,UAAClK,KAAD,EAAgB;AACd,oBAAI,CAACmK,QAAL,GAAgB,IAAhB;;AACA,kBAAI;AACF,sBAAI,CAAChM,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aA9BL;AA+BD;AA1Z6D;AAAA;AAAA,6CA6Z3CtB,MA7Z2C,EA6ZlC;AAAA;;AAC1B,gBAAM0L,OAAO,GAAG,MAAH,OAAG,CAAH,kBAAO1L,MAAP,CAAG,EAAU;AAAC2L,wBAAU,EAAC;AAAZ,aAAV,CAAhB;;AACA,iBAAK/H,mBAAL,CACG0D,kBADH,CACsBoE,OADtB,EAEGzK,SAFH,CAEa,UAACE,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACsE,UAAL,GAAkBvE,QAAQ,CAACkB,IAAT,CAAc,OAAd,CAAlB;AACD,eAFD,MAEM;AACJ,sBAAI,CAACqD,UAAL,GAAkB,CAAlB;AACD;AACF,aARH,EASE,UAACpE,KAAD,EAAgB;AACd,kBAAI;AACF,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;;AACA,sBAAI,CAACgE,UAAL,GAAkB,CAAlB;AACD,eAHD,CAGE,OAAOpE,KAAP,EAAc;AACd,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAhBH;AAiBH;AAhb+D;AAAA;AAAA,qCAkbnDtB,MAlbmD,EAkb7C;AACf,gBAAGA,MAAM,CAACsJ,sBAAV,EACE,OAAO,KAAP;AAEF,gBAAGtJ,MAAM,CAAC4L,OAAV,EACE,OAAO,KAAP;AAEF,gBAAG5L,MAAM,CAACkJ,OAAV,EACE,OAAO,KAAP;AAEF,gBAAGlJ,MAAM,CAAC+I,YAAV,EACE,OAAO,KAAP;AAEF,gBAAG/I,MAAM,CAACoJ,iBAAV,EACE,OAAO,KAAP;AAEF,gBAAGpJ,MAAM,CAACiK,OAAV,EACE,OAAO,KAAP;AAEF,gBAAGjK,MAAM,CAACM,OAAV,EACE,OAAO,KAAP;AAEF,mBAAO,IAAP;AACD;AAzc6D;AAAA;AAAA,oCA2cpDN,MA3coD,EA2c3C;AAAA;;AACjB,iBAAKF,aAAL,GAAoB,IAApB;AACAE,kBAAM,GAAG,KAAKmI,SAAL,EAAT;;AACA,gBAAMuD,OAAO,GAAG,MAAH,OAAG,CAAH,kBAAO1L,MAAP,CAAG,EAAU;AAAC6L,qBAAO,EAAC;AAAT,aAAV,CAAhB;;AACA,iBAAK/L,aAAL,GAAqB,IAArB;AACA,iBAAK8D,mBAAL,CACGkI,SADH,CACaJ,OADb,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAChC,aAAL,GAAqB,KAArB;AACD,aAFD,CAHJ,EAOGmB,SAPH,CAQI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAAC2K,eAAL,GAAuB5K,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAvB;;AACA,sBAAI,CAAC2J,QAAL;AACD,eAHD,MAGO;AACL,sBAAI,CAACD,eAAL,GAAuB,EAAvB;AACD;AACF,aAfL,EAgBI,UAACzK,KAAD,EAAgB;AACd,kBAAI;AACF,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAtBL;AAuBD;AAve6D;AAAA;AAAA,sCAyelDtB,MAzekD,EAyezC;AAAA;;AACnB,iBAAK0E,eAAL,GAAqB,IAArB;AACA,iBAAKb,uBAAL,CACGsD,WADH,CACenH,MADf,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC4C,eAAL,GAAuB,KAAvB;AACD,aAFD,CAHJ,EAOGzD,SAPH,CAQI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC2D,QAAL,GAAgB5D,QAAQ,CAACkB,IAAT,CAAc,QAAd,CAAhB;AACD,eAFD,MAEO;AACL,uBAAI,CAAC5C,OAAL,CAAawM,MAAb,CAAoB,6BAApB;;AACA,uBAAI,CAAClH,QAAL,GAAgB,EAAhB;AACD;AACF,aAfL,EAgBI,UAACzD,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;;AACA,uBAAI,CAACqD,QAAL,GAAgB,EAAhB;AACD,eAHD,CAGE,OAAOzD,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAvBL;AAwBD;AAngB6D;AAAA;AAAA,uCAqgBjDtB,MArgBiD,EAqgBxC;AAAA;;AACpB,iBAAK2E,gBAAL,GAAsB,IAAtB;AACA,iBAAKd,uBAAL,CACGuD,YADH,CACgBpH,MADhB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC6C,gBAAL,GAAwB,KAAxB;AACD,aAFD,CAHJ,EAOG1D,SAPH,CAQI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC4D,SAAL,GAAiB7D,QAAQ,CAACkB,IAAT,CAAc,QAAd,CAAjB;AACD,eAFD,MAEO;AACL,uBAAI,CAAC5C,OAAL,CAAawM,MAAb,CAAoB,6BAApB;;AACA,uBAAI,CAACjH,SAAL,GAAiB,EAAjB;AACD;AACF,aAfL,EAgBI,UAAC1D,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;;AACA,uBAAI,CAACsD,SAAL,GAAiB,EAAjB;AACD,eAHD,CAGE,OAAO1D,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAvBL;AAwBD;AA/hB6D;AAAA;AAAA,wCAmiBhDtB,MAniBgD,EAmiBvC;AAAA;;AACrB,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAACpH,SAAR,GAAoB,MAApB;AAEA,iBAAKM,iBAAL,GAAyB,IAAzB;AACA,iBAAKhB,mBAAL,CACGqH,aADH,CACiBS,OADjB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC8C,iBAAL,GAAyB,KAAzB;AACD,aAFD,CAHJ,EAOG3D,SAPH,CAOa,UAACE,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC+D,UAAL,GAAkBhE,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAlB;AACA,uBAAI,CAAC6J,YAAL,GAAmB,KAAnB;AACD,eAHD,MAGM;AACJ,uBAAI,CAAC/G,UAAL,GAAkB,EAAlB;AACA,uBAAI,CAAC+G,YAAL,GAAmB,IAAnB;AACD;AACF,aAfH,EAgBE,UAAC5K,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;;AACA,uBAAI,CAACwK,YAAL,GAAoB,IAApB;AACD,eAHD,CAGE,OAAO5K,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAvBH;AAwBH;AAhkB+D;AAAA;AAAA,yCAkkB/CtB,MAlkB+C,EAkkBzC;AACnB,gBAAMmM,MAAM,GAAG,IAAI1D,IAAJ,CAASzI,MAAM,CAACoK,OAAhB,CAAf;;AACA,gBAAMgC,IAAI,GAAG,KAAKjI,WAAL,CAAiBkI,sBAAjB,CAAwCF,MAAxC,CAAb;;AACA,gBAAGnM,MAAM,CAACM,OAAP,IAAkB,CAArB,EAAuB;AACrB,qBAAQ,6BAA6BN,MAAM,CAACsM,OAApC,GAA8C,UAA9C,GAA2DF,IAAnE;AACD;;AACD,gBAAGpM,MAAM,CAACuM,SAAP,IAAoB,IAApB,IAA4BvM,MAAM,CAACM,OAAP,IAAkB,CAAjD,EAAmD;AACjD,qBAAQ,2BAA2BN,MAAM,CAACsM,OAAlC,GAA4C,UAA5C,GAAyDF,IAAjE;AACD;;AACD,mBAAQ,4BAA4BpM,MAAM,CAACsM,OAAnC,GAA6C,UAA7C,GAA0DF,IAAlE;AACD;AA5kB6D;AAAA;AAAA,0CA8kB9CpM,MA9kB8C,EA8kBrC;AAAA;;AACvB,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAACpL,OAAR,GAAkB,GAAlB;AACAoL,mBAAO,CAACG,OAAR,GAAkB,GAAlB;AAEA,iBAAKtH,mBAAL,GAA2B,IAA3B;AACA,iBAAKV,uBAAL,CACG2I,eADH,CACmBd,OADnB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACyC,mBAAL,GAA2B,KAA3B;AACD,aAFD,CAHJ,EAOGtD,SAPH,CAOa,UAACE,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC0D,YAAL,GAAoB3D,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAApB;AACD,eAFD,MAEM;AACJ,uBAAI,CAACyC,YAAL,GAAoB,EAApB;AACD;AACF,aAbH,EAcE,UAACxD,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;;AACA,uBAAI,CAACoD,YAAL,GAAoB,EAApB;AACD,eAHD,CAGE,OAAOxD,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aArBH;AAsBH;AA1mB+D;AAAA;AAAA,+CA2mBzCtB,MA3mByC,EA2mBhC;AAAA;;AAC5B,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAACpL,OAAR,GAAkB,GAAlB;AACAoL,mBAAO,CAACG,OAAR,GAAkB,GAAlB;AAEF,iBAAKhH,wBAAL,GAAgC,IAAhC;AACA,iBAAKf,wBAAL,CACGuD,oBADH,CACwBqE,OADxB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC+C,wBAAL,GAAgC,KAAhC;AACD,aAFD,CAHJ,EAOG5D,SAPH,CAOa,UAACE,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACgE,iBAAL,GAAyBjE,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAzB;AACD,eAFD,MAEM;AACJ,uBAAI,CAAC+C,iBAAL,GAAyB,EAAzB;AACD;AACF,aAbH,EAcE,UAAC9D,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;;AACA,uBAAI,CAAC0D,iBAAL,GAAyB,EAAzB;AACD,eAHD,CAGE,OAAO9D,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aArBH;AAsBD;AAvoB+D;AAAA;AAAA,wCAyoBhDmL,KAzoBgD,EAyoBzC;AACnB,iBAAKxK,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B+B,KAAK,CAACC,IAArC;AACA,iBAAKzK,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAKlF,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AAhpB6D;AAAA;AAAA,sCAkpBlD;AACV,gBAAIuD,OAAO,GAAG,EAAd;AACA,gBAAIiB,IAAI,GAAG,KAAK1K,IAAL,CAAUE,KAArB;;AAEA,iBAAK,IAAIyK,IAAT,IAAiBD,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACC,IAAD,CAAR,EAAgB;AACd,oBAAID,IAAI,CAACC,IAAD,CAAJ,YAAsBnE,IAA1B,EACEiD,OAAO,CAACkB,IAAD,CAAP,GAAgB,KAAKzI,WAAL,CAAiB0I,gBAAjB,CAAkCF,IAAI,CAACC,IAAD,CAAtC,CAAhB,CADF,KAEKlB,OAAO,CAACkB,IAAD,CAAP,GAAgBD,IAAI,CAACC,IAAD,CAApB;AACN;AACF;;AAED,mBAAOlB,OAAP;AACD;AA/pB6D;AAAA;AAAA,4CAiqB5CpG,KAjqB4C,EAiqBC;AAC7D,gBAAIwH,WAAJ;;AAEA,gBAAIxH,KAAK,CAAChF,OAAN,IAAiB,CAArB,EAAwB;AACtBwM,yBAAW,GAAG,gBAAd;AACD,aAFD,MAEO,IAAIxH,KAAK,CAAChF,OAAN,IAAiB,CAArB,EAAwB;AAC7BwM,yBAAW,GAAG,eAAd;AACD;;AAED,mBAAOA,WAAP;AACD;AA3qB6D;AAAA;AAAA,qCA6qBnD/B,IA7qBmD,EA6qBL;AAAA;;AACvD,gBAAMgC,IAAI,GAAGhC,IAAI,CAACzK,OAAL,IAAgB,CAAhB,GAAoB,CAApB,GAAwB,CAArC;AAEA,iBAAK0M,aAAL,CAAmBD,IAAnB,EACGE,YADH,GAEGnL,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACC,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AAEb,qBAAI,CAACjC,aAAL,GAAqB,IAArB;AACAiL,kBAAI,CAACzK,OAAL,GAAeyM,IAAf;AACA,qBAAO,OAAI,CAACnJ,mBAAL,CAAyBsJ,gBAAzB,CAA0C;AAACpE,iCAAiB,EAACiC,IAAI,CAACjC,iBAAxB;AAA2CxI,uBAAO,EAACyM;AAAnD,eAA1C,CAAP;AACD,aAND,CAJJ,EAWI,iEAAS,YAAM;AACb,qBAAI,CAACjN,aAAL,GAAqB,KAArB;AACD,aAFD,CAXJ,EAeGmB,SAfH,CAgBI,UAACI,OAAD,EAAkB;AAChB,qBAAI,CAAC5B,OAAL,CAAa4B,OAAb;AACD,aAlBL,EAmBI,UAACC,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;;AACAqJ,oBAAI,CAACzK,OAAL,GAAeyK,IAAI,CAACzK,OAAL,IAAgB,CAAhB,GAAoB,CAApB,GAAwB,CAAvC;AACD,eAHD,CAGE,OAAOgB,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aA1BL;AA2BC;AA3sB2D;AAAA;AAAA,wCA6sBhDyL,IA7sBgD,EA6sB5C;AAChB,gBAAIA,IAAI,IAAI,CAAZ,EACE,OAAO,KAAKpN,mBAAL,CAAyBkC,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAQF,mBAAO,KAAKlC,mBAAL,CAAyBkC,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AA9tB6D;AAAA;AAAA,qCAguBtD;AACN,gBAAIuK,IAAI,GAAG,IAAI3D,IAAJ,GAAW0E,kBAAX,GAAgCC,KAAhC,CAAsC,GAAtC,CAAX;AAAA,gBACEC,UAAU,aAAMjB,IAAI,CAAC,CAAD,CAAV,SAAgBA,IAAI,CAAC,CAAD,CAApB,SAA0BA,IAAI,CAAC,CAAD,CAA9B,CADZ;AAGA,gBAAIkB,cAAc,GAAQ,EAA1B;AACAA,0BAAc,GAAG,KAAKvB,eAAtB;AAEA,iBAAK/H,WAAL,CAAiBuJ,UAAjB,CAA4BD,cAA5B,yBAA4DD,UAA5D;AACD;AAxuB6D;;AAAA;AAAA,S;;;;gBA9BvD;;gBAIA;;gBAJQ;;gBAiBoB;;gBAX5B;;gBAGA;;gBAdA;;gBAMW;;gBAOX;;gBAHA;;gBAYY;;gBAVZ;;gBAbA;;;;AAoCI5J,yDAAmD,6DAL/D,gEAAU;AACTV,gBAAQ,EAAE,iDADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAK+D,E,+EAgH7C,sD,EACE,2F,EACO,8D,EACD,8D,EACM,6G,EACI,qG,EACC,yI,EACb,0D,EACA,qF,EACQ,uG,EACP,6D,EACC,0F,EACF,8E,EA5HuC,GAAnDS,mDAAmD,CAAnD;;;;;;;;;;;;;;;;ACpCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCAf;AAGA;;;UAQa+J,uCAAuC;AAGlD,yDAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFH,eAAAC,GAAA,GAAM,yEAAYA,GAAlB;AAEuB;;AAHU;AAAA;AAAA,qCAMvC1N,MANuC,EAM9B;AAClB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,2CAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AAdiD;AAAA;AAAA,sCAgBtC3N,MAhBsC,EAgBK;AACrD,mBAAO,KAAKyN,IAAL,CAAUG,IAAV,WACF,KAAKF,GADH,2CAEL1N,MAFK,EAGL;AACE2N,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD;AAxBiD;;AAAA;AAAA,S;;;;gBAN3C;;;;AAMIH,6CAAuC,6DAHnD,iEAAW;AACVK,kBAAU,EAAE;AADF,OAAX,CAGmD,E,+EAGxB,+D,EAHwB,GAAvCL,uCAAuC,CAAvC;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+HCAf;AAIA;AAGA;;;UAuBaM,iDAAiD;AAmB5D,mEACU/J,WADV,EAEUtE,OAFV,EAGUC,cAHV,EAIUqO,MAJV,EAKUpK,aALV,EAMUqK,cANV,EAOUC,YAPV,EAQUC,iBARV,EAQ8C;AAAA;;AAPpC,eAAAnK,WAAA,GAAAA,WAAA;AACA,eAAAtE,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAqO,MAAA,GAAAA,MAAA;AACA,eAAApK,aAAA,GAAAA,aAAA;AACA,eAAAqK,cAAA,GAAAA,cAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AAvBV,eAAA3D,cAAA,GAA6B,EAA7B;AAIA,eAAA3K,QAAA,GAA4B,EAA5B,CAmB8C,CAhB9C;;AACA,eAAAuO,YAAA,GAAe,KAAf;AACA,eAAApO,OAAA,GAAU,KAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB,CAa8C,CAX9C;;AACA,eAAAsO,kBAAA,GAA+D,EAA/D;AAoBO,eAAAC,KAAA,GAAQ,kDAAQA,KAAhB;AARL,eAAK1K,aAAL,CAAmB8C,GAAnB,CAAuB,OAAvB;AACA,eAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAP,CACd,EADc,EAEd;AAAEC,0BAAc,EAAE;AAAlB,WAFc,EAGd;AAAEC,4BAAgB,EAAE;AAApB,WAHc,EAId;AAAEC,2BAAe,EAAE;AAAnB,WAJc,CAAhB;AAMD;;AApC2D;AAAA;AAAA,qCAuCpD;AACN,iBAAKuH,eAAL;AACA,iBAAKrH,aAAL;AACA,iBAAKsH,cAAL;AACA,iBAAKrH,gBAAL;AACD;AA5C2D;AAAA;AAAA,4CA8C7C;AACb,iBAAKgH,iBAAL,CAAuBI,eAAvB,GAAyCrN,SAAzC;AACD;AAhD2D;AAAA;AAAA,6CAkDzC;AACjB,gBAAMyK,OAAO,GAAG,KAAKhM,cAAL,CAAoBO,QAApB,CAA6BD,MAA7C;AACA,gBAAI0L,OAAO,CAACxL,cAAR,CAAuB,IAAvB,CAAJ,EACA,OAAO,KAAKsO,UAAL,CAAgB;AAAEC,oCAAsB,EAAE/C,OAAO,CAAC,IAAD;AAAjC,aAAhB,CAAP;AACD;AAtD2D;AAAA;AAAA,qCAyDjD1L,MAzDiD,EAyDI;AAAA;;AAC9D,iBAAKD,OAAL,GAAe,IAAf;;AACA,gBAAM2L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA,iBAAKgO,cAAL,CACGQ,UADH,CACc9C,OADd,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACa,IAAL,CAAU+F,UAAV,CAAqB7G,QAAQ,CAACkB,IAAT,CAAc,MAAd,EAAsB,CAAtB,CAArB;;AACA,uBAAI,CAACoJ,QAAL,GAAgB,KAAhB;AACD,eAHD,MAGO;AACL,uBAAI,CAACA,QAAL,GAAgB,IAAhB;AACD;AACF,aAhBL,EAiBI,UAACnK,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,qBAAI,CAACmK,QAAL,GAAgB,IAAhB;AACD,aApBL;AAsBD;AAlF2D;AAAA;AAAA,0CAoF/C;AACX,gBAAMpL,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKoE,QAAL,GAAgB,UAAhB;AACA,iBAAKT,YAAL,CAAkBU,QAAlB,CAA2B,KAAKD,QAAhC;AACA,iBAAKnE,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU,EAAE;AAFd,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE,SADb;AAEEC,wBAAU;AAFZ,aAToB,EAapB;AACED,uBAAS,EAAE,KAAKkE;AADlB,aAboB,CAAtB;AAiBD,WAzG2D,CA2G5D;;AA3G4D;AAAA;AAAA,2CA4G9C;AAEZ,iBAAKzM,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjC4F,oCAAsB,EAAE,CAAC,IAAD,CADS;AAEjCG,qBAAO,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWC,QAAZ,CAAP,CAFwB;AAGjCvO,qBAAO,EAAE,CAAC,4CAAD,CAHwB;AAIjC2J,qBAAO,EAAE,CAAC,IAAD;AAJwB,aAAvB,CAAZ;AAMD,WApH2D,CAsH5D;;AAtH4D;AAAA;AAAA,uCAuH/C6E,KAvH+C,EAuHhC;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AA5H2D;AAAA;AAAA,yCA8H7CA,KA9H6C,EA8HjC;AACzBA,iBAAK,GAAG,KAAK7M,IAAL,CAAUC,GAAV,CAAc4M,KAAd,CAAR;AACA,mBAAOA,KAAK,CAAC1N,MAAN,IAAgB,SAAhB,IAA6B0N,KAAK,CAACE,OAA1C;AACD;AAjI2D;AAAA;AAAA,0CAmI5CF,KAnI4C,EAmI7B;AAC7B,gBAAID,QAAQ,GAAG,KAAf;AACA,gBAAII,WAAW,GAAG,IAAI,2DAAJ,EAAlB;;AAEA,gBAAI,KAAKhN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA9B,EAAyC;AACvC,kBAAIC,gBAAgB,GAAG,KAAKnN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA1B,CAAoCF,WAApC,CAAvB;AACAJ,sBAAQ,GACNO,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACP,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AAhJ2D;AAAA;AAAA,wCAkJ9C;AAAA;;AACZ,iBAAK/O,aAAL,GAAqB,IAArB;AACA,iBAAKkO,cAAL,CACGqB,WADH,CACe,KAAKpN,IAAL,CAAUE,KADzB,EAEGL,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC3B,OAAL,CAAa4B,OAAb;;AACA,uBAAI,CAAC0M,MAAL,CAAYpD,QAAZ,CAAqB,CAAC,KAAD,CAArB,EAA8B;AAC5BC,4BAAU,EAAE,OAAI,CAAClL;AADW,iBAA9B;AAGD,eALD,MAKO;AACL,uBAAI,CAACD,OAAL,CAAa6B,KAAb;AACD;AACF,aAlBL,EAmBI,UAACA,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAzBL;AA2BD;AA/K2D;;AAAA;AAAA,S;;;;gBAlB5D;;gBATO;;gBAKA;;gBAAgB;;gBAFgB;;gBAchC;;gBAnBA;;gBACA;;;;AA4BIwM,uDAAiD,6DAL7D,gEAAU;AACT/K,gBAAQ,EAAE,8CADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAK6D,E,+EAoBrC,2D,EACJ,2F,EACO,8D,EACR,sD,EACO,6D,EACC,kG,EACF,uF,EACK,qG,EA3B+B,GAAjD8K,iDAAiD,CAAjD;;;;;;;;;;;;;;;;AC9Bb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsBf,UAAM7K,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEE,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACEF,YAAI,EAAE,eADR;AAEEC,gBAAQ,EAAE,CACR;AACED,cAAI,EAAE,EADR;AAEEE,mBAAS,EAAE;AAFb,SADQ,EAKR;AACEF,cAAI,EAAE,MADR;AAEEE,mBAAS,EAAE;AAFb,SALQ,EASR;AACEF,cAAI,EAAE,KADR;AAEEE,mBAAS,EAAE;AAFb,SATQ;AAFZ,OALqB,EAsBrB;AACEF,YAAI,EAAE,oBADR;AAEEC,gBAAQ,EAAE,CACR;AACED,cAAI,EAAE,EADR;AAEEE,mBAAS,EAAE;AAFb,SADQ,EAKR;AACEF,cAAI,EAAE,MADR;AAEEE,mBAAS,EAAE;AAFb,SALQ,EASR;AACEF,cAAI,EAAE,KADR;AAEEE,mBAAS,EAAE;AAFb,SATQ;AAFZ,OAtBqB,EAuCrB;AACEF,YAAI,EAAE,SADR;AAEEC,gBAAQ,EAAE,CACR;AACED,cAAI,EAAE,EADR;AAEEE,mBAAS,EAAE;AAFb,SADQ,EAKR;AACEF,cAAI,EAAE,MADR;AAEEE,mBAAS,EAAE;AAFb,SALQ,EASR;AACEF,cAAI,EAAE,KADR;AAEEE,mBAAS,EAAE;AAFb,SATQ;AAFZ,OAvCqB,EAwDrB;AACEF,YAAI,EAAE,SADR;AAEEC,gBAAQ,EAAE,CACR;AACED,cAAI,EAAE,EADR;AAEEE,mBAAS,EAAE;AAFb,SADQ,EAKR;AACEF,cAAI,EAAE,MADR;AAEEE,mBAAS,EAAE;AAFb,SALQ,EASR;AACEF,cAAI,EAAE,KADR;AAEEE,mBAAS,EAAE;AAFb,SATQ;AAFZ,OAxDqB,EAyErB;AACEF,YAAI,EAAE,wBADR;AAEEC,gBAAQ,EAAE,CACR;AACED,cAAI,EAAE,EADR;AAEEE,mBAAS,EAAE;AAFb,SADQ,EAKR;AACEF,cAAI,EAAE,MADR;AAEEE,mBAAS,EAAE;AAFb,SALQ,EASR;AACEF,cAAI,EAAE,KADR;AAEEE,mBAAS,EAAE;AAFb,SATQ;AAFZ,OAzEqB,EA0FrB;AACEF,YAAI,EAAE,yBADR;AAEEC,gBAAQ,EAAE,CACR;AACED,cAAI,EAAE,EADR;AAEEE,mBAAS,EAAE;AAFb,SADQ,EAKR;AACEF,cAAI,EAAE,MADR;AAEEE,mBAAS,EAAE;AAFb,SALQ,EASR;AACEF,cAAI,EAAE,KADR;AAEEE,mBAAS,EAAE;AAFb,SATQ,EAaR;AACEF,cAAI,EAAE,kBADR;AAEEE,mBAAS,EAAE;AAFb,SAbQ,EAiBR;AACEF,cAAI,EAAE,iBADR;AAEEE,mBAAS,EAAE;AAFb,SAjBQ;AAFZ,OA1FqB,EAmHrB;AACEF,YAAI,EAAE,kBADR;AAEEC,gBAAQ,EAAE,CACR;AACED,cAAI,EAAE,EADR;AAEEE,mBAAS,EAAE;AAFb,SADQ,EAKR;AACEF,cAAI,EAAE,OADR;AAEEE,mBAAS,EAAE;AAFb,SALQ;AAFZ,OAnHqB,EAgIrB;AACEF,YAAI,EAAE,IADR;AAEEE,iBAAS,EAAE;AAFb,OAhIqB,CAAvB;;UA0IakM,sCAAsC;AAAA;AAAA,O;;AAAtCA,4CAAsC,6DAJlD,+DAAS;AACRhM,eAAO,EAAE,CAAC,8DAAaC,QAAb,CAAsBN,MAAtB,CAAD,CADD;AAERO,eAAO,EAAE,CAAC,6DAAD;AAFD,OAAT,CAIkD,GAAtC8L,sCAAsC,CAAtC;;;;;;;;;;;;;;;;AChKb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCAf;AAGA;;;UAQaC,iDAAiD;AAG5D,mEAAoB9B,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFH,eAAAC,GAAA,GAAM,yEAAYA,GAAlB;AAEuB;;AAHoB;AAAA;AAAA,+CAMvC1N,MANuC,EAM9B;AAC5B,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,wDAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AAd2D;AAAA;AAAA,uCAgB/C3N,MAhB+C,EAgBtC;AACpB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,kEAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AAxB2D;AAAA;AAAA,gDA0BtCrI,KA1BsC,EA0Bc;AACxE,mBAAO,KAAKmI,IAAL,CAAUG,IAAV,WACF,KAAKF,GADH,wDAELpI,KAFK,EAGL;AACEqI,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD;AAlC2D;;AAAA;AAAA,S;;;;gBANrD;;;;AAMI4B,uDAAiD,6DAH7D,iEAAW;AACV1B,kBAAU,EAAE;AADF,OAAX,CAG6D,E,+EAGlC,+D,EAHkC,GAAjD0B,iDAAiD,CAAjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCHb;AAIA;AAGA;AASA;;;UAYaC,4DAA4D;AAuCtE;AAED,8EACUzL,WADV,EAEUtE,OAFV,EAGUC,cAHV,EAIUwE,aAJV,EAKU6J,MALV,EAMUpK,aANV,EAOUE,uBAPV,EAQU4L,yBARV,EASU7L,mBATV,EAUU8L,wBAVV,EAWUzB,YAXV,EAYUhK,YAZV,EAaUiK,iBAbV,EAa8C;AAAA;;AAZpC,eAAAnK,WAAA,GAAAA,WAAA;AACA,eAAAtE,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAwE,aAAA,GAAAA,aAAA;AACA,eAAA6J,MAAA,GAAAA,MAAA;AACA,eAAApK,aAAA,GAAAA,aAAA;AACA,eAAAE,uBAAA,GAAAA,uBAAA;AACA,eAAA4L,yBAAA,GAAAA,yBAAA;AACA,eAAA7L,mBAAA,GAAAA,mBAAA;AACA,eAAA8L,wBAAA,GAAAA,wBAAA;AACA,eAAAzB,YAAA,GAAAA,YAAA;AACA,eAAAhK,YAAA,GAAAA,YAAA;AACA,eAAAiK,iBAAA,GAAAA,iBAAA;AAlDV,eAAA3D,cAAA,GAA6B,EAA7B;AAIA,eAAA3K,QAAA,GAA4B,EAA5B;AAGA,eAAA+P,YAAA,GAAgC,EAAhC;AACA,eAAAC,cAAA,GAAiB,IAAjB;AACA,eAAAC,cAAA,GAAiB,IAAjB;AACA,eAAAC,UAAA,GAAa,EAAb;AAEA,eAAAC,eAAA,GAAiB,EAAjB,CAsC8C,CArC9C;;AACA,eAAA5B,YAAA,GAAe,KAAf;AACA,eAAApO,OAAA,GAAU,KAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB;AAMA,eAAAS,OAAA,GAAiB,CAAjB,CA4B8C,CA3B9C;;AACA,eAAAyP,kBAAA,GAAyE,EAAzE;AACA,eAAAC,iBAAA,GAAwE,EAAxE;AACA,eAAAzE,YAAA,GAA8D,EAA9D;AACA,eAAAnG,UAAA,GAAkB,EAAlB;AACC;;AACA,eAAAiB,YAAA,GAAe,EAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAA2J,kBAAA,GAAqB,EAArB;AACA,eAAA1J,WAAA,GAAc,CAAd;AACA,eAAA2J,KAAA,GAAQ,CAAR;AACA,eAAAC,GAAA,GAAM,EAAN;AA0BM,eAAA/B,KAAA,GAAQ,mDAAQA,KAAhB;AARL,eAAK1K,aAAL,CAAmB8C,GAAnB,CAAuB,OAAvB;AACA,eAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAP,CACd,EADc,EAEd;AAAEC,0BAAc,EAAE;AAAlB,WAFc,EAGd;AAAEC,4BAAgB,EAAE;AAApB,WAHc,EAId;AAAEC,2BAAe,EAAE;AAAnB,WAJc,CAAhB;AAMD;;AA/DsE;AAAA;AAAA,qCAkE/D;AACN,iBAAKwH,cAAL;AACA,iBAAKD,eAAL;AACA,iBAAKrH,aAAL;AACA,iBAAKC,gBAAL;AACA,iBAAKmJ,oBAAL;AACD;AAxEsE;AAAA;AAAA,wCA0E5D;AACT,gBAAG,KAAKC,QAAL,IAAiB5I,SAApB,EAA8B;AAC5B,mBAAK4I,QAAL,CAAc3I,IAAd;AACD;AACF;AA9EsE;AAAA;AAAA,4CAgFxD;AACb,iBAAKuG,iBAAL,CAAuBI,eAAvB,GAAyCrN,SAAzC;AACD;AAlFsE;AAAA;AAAA,6CAqFpD;AACjB,gBAAMyK,OAAO,GAAG,KAAKhM,cAAL,CAAoBO,QAApB,CAA6BD,MAA7C;;AACA,gBAAI0L,OAAO,CAACxL,cAAR,CAAuB,IAAvB,CAAJ,EAAiC;AAC/B,mBAAKqQ,qBAAL,CAA2B;AAAEnQ,iCAAiB,EAAEsL,OAAO,CAAC,IAAD;AAA5B,eAA3B;AACA,mBAAK8E,eAAL,CAAqB;AAAEpQ,iCAAiB,EAAEsL,OAAO,CAAC,IAAD,CAA5B;AAAqCpL,uBAAO,EAAC;AAA7C,eAArB;AACA,mBAAK2B,IAAL,CAAUC,GAAV,CAAc,mBAAd,EAAmCwI,QAAnC,CAA4CgB,OAAO,CAAC,IAAD,CAAnD;AACA;AACD;;AAED,gBAAM7D,WAAW,GAAG,KAAKnI,cAAL,CAAoBO,QAApB,CAA6B4H,WAAjD;;AACA,gBAAMC,SAAS,GAAGD,WAAW,GAAG,KAAK3D,aAAL,CAAmB6D,kBAAnB,CAAsCF,WAAtC,CAAH,GAAwD,EAArF;;AACA,gBAAG,CAACC,SAAS,CAAC5H,cAAV,CAAyB,mBAAzB,CAAJ,EAAkD;AAChD,mBAAKuQ,aAAL;AACA;AACD;;AACD,iBAAKC,wBAAL,CAA8B5I,SAA9B;AACD;AArGsE;AAAA;AAAA,gDAwGjD9H,MAxGiD,EAwGc;AAAA;;AACnF,iBAAKD,OAAL,GAAe,IAAf;;AACA,gBAAM2L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA,iBAAKyP,yBAAL,CACGc,qBADH,CACyB7E,OADzB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,oBAAMuP,MAAM,GAAGxP,QAAQ,CAACkB,IAAT,CAAc,MAAd,EAAsB,CAAtB,CAAf;AACA,uBAAI,CAAC2N,kBAAL,GAA0B7O,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAA1B;AACA,uBAAI,CAACoJ,QAAL,GAAgB,KAAhB;;AACA,uBAAI,CAACxJ,IAAL,CAAU+F,UAAV,CAAqB2I,MAArB;AACD,eALD,MAKO;AACL,uBAAI,CAAClF,QAAL,GAAgB,IAAhB;AACA,uBAAI,CAACuE,kBAAL,GAA0B,EAA1B;AACD;AACF,aAnBL,EAoBI,UAAC1O,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aA1BL;AA2BD;AAtIsE;AAAA;AAAA,+CAwIlDtB,MAxIkD,EAwIzC;AAAA;;AAC5B,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAACpL,OAAR,GAAkB,GAAlB;AAEF,iBAAKsQ,wBAAL,GAAgC,IAAhC;AACA,iBAAKlB,wBAAL,CACGW,oBADH,CACwB3E,OADxB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC8O,wBAAL,GAAgC,KAAhC;AACD,aAFD,CAHJ,EAOG3P,SAPH,CAOa,UAACE,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC6O,iBAAL,GAAyB9O,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAzB;AACD,eAFD,MAEM;AACJ,uBAAI,CAAC4N,iBAAL,GAAyB,EAAzB;AACD;AACF,aAbH,EAcE,UAAC3O,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,iDAAnB;AACD,aAhBH;AAkBC;AA/JsE;AAAA;AAAA,0CAiK1D;AACX,gBAAMjB,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKoE,QAAL,GAAgB,UAAhB;AACA,iBAAKT,YAAL,CAAkBU,QAAlB,CAA2B,KAAKD,QAAhC;AACA,iBAAKnE,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU,EAAE;AAFd,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE,4BADb;AAEEC,wBAAU;AAFZ,aAToB,EAapB;AACED,uBAAS,EAAE,KAAKkE;AADlB,aAboB,CAAtB;AAiBD,WAtLsE,CAwLvE;;AAxLuE;AAAA;AAAA,2CAyLzD;AAEZ,iBAAKzM,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjCzI,+BAAiB,EAAE,CAAC,IAAD,CADc;AAEjC8J,4BAAc,EAAE,CAAC,IAAD,CAFiB;AAGjCC,0BAAY,EAAE,CAAC,IAAD,CAHmB;AAIjCC,qBAAO,EAAE,CAAC,IAAD,CAJwB;AAKjCH,qBAAO,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAW4E,QAAZ,EAAqB,2DAAWgC,SAAX,CAAqB,KAAKd,eAA1B,CAArB,CAAP,CALwB;AAMjCe,oCAAsB,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWjC,QAAZ,CAAP,CANS;AAOjC5J,uBAAS,EAAE,KAAKlB,WAAL,CAAiBgN,KAAjB,CAAuB,EAAvB;AAPsB,aAAvB,CAAZ;AASA,iBAAKC,gBAAL,GAAwB,KAAKjN,WAAL,CAAiB8E,KAAjB,CAAuB;AAC7CoI,uBAAS,EAAE,CAAC,cAAD,CADkC;AAE7CC,sBAAQ,EAAE,CAAC,IAAD,EAAO,2DAAWrC,QAAlB,CAFmC;AAG7CsC,qBAAO,EAAE,CAAC,IAAD,CAHoC;AAI7CpI,0BAAY,EAAE,CAAC,IAAD,CAJ+B;AAK7CS,qBAAO,EAAE,CAAC,IAAD,CALoC;AAM7CC,qBAAO,EAAE,CAAC,IAAD,CANoC;AAO7CpB,kBAAI,EAAE,CAAC,CAAD,CAPuC;AAQ7C+I,0BAAY,EAAE,CAAC,IAAD,CAR+B;AAS7CpI,qBAAO,EAAE,CAAC,IAAD,CAToC;AAU7Ce,qBAAO,EAAE,CAAC,IAAD,CAVoC;AAW7CsH,0BAAY,EAAE,CAAC,IAAD,CAX+B;AAY7C/Q,qBAAO,EAAE,CAAC,GAAD,CAZoC;AAa7C2H,0BAAY,EAAE,CAAC,KAAK3B,YAAN;AAb+B,aAAvB,CAAxB;AAeA,iBAAKgL,gBAAL,GAAwB,KAAKvN,WAAL,CAAiB8E,KAAjB,CAAuB;AAC7CoI,uBAAS,EAAE,CAAC,SAAD,CADkC;AAE7CC,sBAAQ,EAAE,CAAC,IAAD,EAAO,2DAAWrC,QAAlB,CAFmC;AAG7C0C,yBAAW,EAAC,CAAC,IAAD,CAHiC;AAI7C/H,qBAAO,EAAC,CAAC,IAAD,CAJqC;AAK7CgI,qBAAO,EAAC,CAAC,IAAD,CALqC;AAM7CC,qBAAO,EAAC,CAAC,IAAD,CANqC;AAO7CnR,qBAAO,EAAE,CAAC,GAAD;AAPoC,aAAvB,CAAxB;AASD,WA5NsE,CA8NvE;;AA9NuE;AAAA;AAAA,uCA+N1DwO,KA/N0D,EA+N3C;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AApOsE;AAAA;AAAA,yCAsOxDA,KAtOwD,EAsO5C;AACzBA,iBAAK,GAAG,KAAK7M,IAAL,CAAUC,GAAV,CAAc4M,KAAd,CAAR;AACA,mBAAOA,KAAK,CAAC1N,MAAN,IAAgB,SAAhB,IAA6B0N,KAAK,CAACE,OAA1C;AACD;AAzOsE;AAAA;AAAA,0CA2OvDF,KA3OuD,EA2OxC;AAC7B,gBAAID,QAAQ,GAAG,KAAf;AACA,gBAAII,WAAW,GAAG,IAAI,2DAAJ,EAAlB;;AAEA,gBAAI,KAAKhN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA9B,EAAyC;AACvC,kBAAIC,gBAAgB,GAAG,KAAKnN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA1B,CAAoCF,WAApC,CAAvB;AACAJ,sBAAQ,GACNO,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACP,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AAxPsE;AAAA;AAAA,mDA0P9C;AAAA;;AACvB,iBAAK/O,aAAL,GAAqB,IAArB;AACA,gBAAIE,MAAM,GAAG0R,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAK3P,IAAL,CAAUE,KAAzB,CAAX,CAAb;AACA,mBAAOnC,MAAM,CAAC,WAAD,CAAb;AACA,iBAAKyP,yBAAL,CACGoC,sBADH,CAC0B7R,MAD1B,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC3B,OAAL,CAAa4B,OAAb,CAAqB,mDAArB;;AACA,oBAAMhB,EAAE,GAAGc,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAX;;AACA,uBAAI,CAACJ,IAAL,CAAUC,GAAV,CAAc,mBAAd,EAAmCwI,QAAnC,CAA4CrK,EAA5C;;AACA,uBAAI,CAACyR,aAAL,CAAmBzR,EAAnB;;AACA,uBAAI,CAACE,OAAL,GAAeF,EAAf;AACD,eAND,MAMO;AACL,uBAAI,CAACZ,OAAL,CAAa6B,KAAb;AACD;AACF,aAnBL,EAoBI,UAACA,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aA1BL;AA4BD;AA1RsE;AAAA;AAAA,0CA4RvDtB,MA5RuD,EA4R/C;AAAA;;AACtB,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAAEpL,OAAT,GAAkB,KAAKgR,gBAAL,CAAsBnP,KAAtB,CAA4B,SAA5B,CAAlB;AACAuJ,mBAAO,CAAEzD,YAAT,GAAwB,EAAxB;AACA,gBAAM0E,IAAI,GAAG,KAAK2E,gBAAL,CAAsBnP,KAAnC;AACA,iBAAK4P,mBAAL,GAA2B,IAA3B;AACA,gBAAIpF,IAAI,CAAC,UAAD,CAAR,EAAsBjB,OAAO,CAACiB,IAAI,CAAC,WAAD,CAAL,CAAP,GAA6BA,IAAI,CAAC,UAAD,CAAjC;AACtB,iBAAK9I,uBAAL,CACGmO,eADH,CACmBtG,OADnB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACiQ,mBAAL,GAA2B,KAA3B;AACD,aAFD,CAHJ,EAOG9Q,SAPH,CAQI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACuO,YAAL,GAAoBxO,QAAQ,CAACkB,IAAT,CAAc,QAAd,CAApB;AACA,uBAAI,CAAC6N,kBAAL,GAA0B/O,QAAQ,CAACkB,IAAT,CAAc,QAAd,EAAwB5B,MAAlD;AACA,uBAAI,CAACoP,cAAL,GAAsB,KAAtB;AACD,eAJD,MAIO;AACL,uBAAI,CAACpQ,OAAL,CAAawM,MAAb,CAAoB,6BAApB;;AACA,uBAAI,CAAC0D,YAAL,GAAoB,EAApB;AACA,uBAAI,CAACE,cAAL,GAAsB,IAAtB;AACD;AACF,aAlBL,EAmBI,UAACvO,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,qBAAI,CAACkK,YAAL,GAAoB,EAApB;AACD,aAtBL;AAwBD;AA3TsE;AAAA;AAAA,4CAgUrDxL,MAhUqD,EAgU5C;AAAA;;AACzB,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAACpL,OAAR,GAAiB,KAAK0Q,gBAAL,CAAsB7O,KAAtB,CAA4B,SAA5B,CAAjB;AACAuJ,mBAAO,CAACzD,YAAR,GAAuB,EAAvB;AACAyD,mBAAO,CAACrD,IAAR,GAAc,KAAK2I,gBAAL,CAAsB7O,KAAtB,CAA4B,MAA5B,CAAd;AACA,gBAAMwK,IAAI,GAAG,KAAKqE,gBAAL,CAAsB7O,KAAnC;AACA,iBAAK8P,mBAAL,GAA2B,IAA3B;AACA,iBAAKrC,cAAL,GAAqB,KAAKpE,YAAL,CAAkB/K,MAAlB,KAA6B,CAA7B,GAAiC,IAAjC,GAAwC,KAA7D;AACA,gBAAIkM,IAAI,CAAC,UAAD,CAAR,EAAsBjB,OAAO,CAACiB,IAAI,CAAC,WAAD,CAAL,CAAP,GAA6BA,IAAI,CAAC,UAAD,CAAjC;AACtB,iBAAK/I,mBAAL,CACGoH,iBADH,CACqBU,OADrB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACmQ,mBAAL,GAA2B,KAA3B;AACD,aAFD,CAHJ,EAOGhR,SAPH,CAQI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACoK,YAAL,GAAoBrK,QAAQ,CAAC,MAAD,CAAR,CAAiB,MAAjB,CAApB;AACA,uBAAI,CAACoF,UAAL,GAAkBpF,QAAQ,CAACkB,IAAT,CAAc,OAAd,CAAlB;AACA,uBAAI,CAACuN,cAAL,GAAsB,KAAtB;AACD,eAJD,MAIO;AACL,uBAAI,CAACnQ,OAAL,CAAawM,MAAb,CAAoB,6BAApB;;AACA,uBAAI,CAACT,YAAL,GAAoB,EAApB;AACA,uBAAI,CAACoE,cAAL,GAAsB,IAAtB;AACD;AACF,aAlBL,EAmBI,UAACtO,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,qBAAI,CAACkK,YAAL,GAAoB,EAApB;AACD,aAtBL;AAwBD;AAjWsE;AAAA;AAAA,oCAmW7DxI,QAnW6D,EAmWjCV,KAnWiC,EAmW1B;AAC3C,iBAAKA,KAAL,GAAaA,KAAb;AACA,iBAAKsN,cAAL,GAAsB,IAAtB;AACA,iBAAKU,QAAL,GAAgB,KAAKrM,YAAL,CAAkBmH,IAAlB,CAAuBpI,QAAvB,EAAiC;AAC/CqI,sBAAQ,EAAE,KADqC;AAE/C,uBAAO;AAFwC,aAAjC,CAAhB;AAID;AA1WsE;AAAA;AAAA,sCA2W3D;AACV,iBAAKiF,QAAL,CAAc3I,IAAd;AACD;AA7WsE;AAAA;AAAA,sCAmX3DuK,QAnX2D,EAmXjD;AACpB,gBAAMC,SAAS,GAAG,MAAH,OAAG,CAAH,kBAAOD,QAAP,CAAG,EAAY;AAAC,yBAAW;AAAZ,aAAZ,CAAlB;;AACA,gBAAME,EAAE,GAAG,KAAKnQ,IAAL,CAAUC,GAAV,CAAc,WAAd,CAAX;AACAkQ,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwB0F,UAAxB,CAAmCmK,SAAnC;AACAC,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwBJ,GAAxB,CAA4B,SAA5B,EAAuC8F,UAAvC,CAAkDN,SAAlD;AACA0K,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwBJ,GAAxB,CAA4B,cAA5B,EAA4C8F,UAA5C,CAAuDmK,SAAS,CAACE,OAAjE;AACAD,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwBJ,GAAxB,CAA4B,WAA5B,EAAyC8F,UAAzC,CAAoDmK,SAAS,CAACG,EAA9D;AACAF,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwBJ,GAAxB,CAA4B,SAA5B,EAAuC8F,UAAvC,CAAkDmK,SAAS,CAAChB,OAA5D;AACD;AA3XsE;AAAA;AAAA,wCA6XnD9Q,EA7XmD,EA6X1C;;;;;;;;;AACvBkS,6B,GAAU,E;AACRtN,+B,GAAY,KAAKuN,aAAL,CAAmBC,WAAnB,E;;0BACbxN,S;;;;;;;;AAGCvE,6B,GAAU,SAAVA,OAAU,GAAM;AACpBuE,iCAAS,CAACtE,OAAV,CAAkB,UAAAuR,QAAQ,EAAI;AAC5B,8BAAMlS,MAAM,GAAG,MAAH,OAAG,CAAH,kBAAOkS,QAAP,CAAG,EAAY;AAAC,iDAAoB7R;AAArB,2BAAZ,CAAf;AACAkS,iCAAO,CAAC1R,IAAR,CAAa,OAAI,CAAC4O,yBAAL,CACVqC,aADU,CACI9R,MADJ,CAAb;AAEA,yBAJF;AAKD,uB;;;AACD,6BAAMe,OAAO,CAACC,OAAR,CAAgBN,OAAO,EAAvB,CAAN;;;AACA,6EAAS6R,OAAT,EACCzQ,IADD,CAEE,iEAAS,YAAM;AACb,+BAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,+BAAI,CAACD,aAAL,GAAqB,KAArB;AACD,uBAHD,CAFF,EAOCmB,SAPD,CAQE,UAACC,SAAD,EAA2B;AACzBA,iCAAS,CAACP,OAAV,CAAkB,UAAAQ,QAAQ,EAAI;AAC5B,8BAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA4B;AAC1B,mCAAI,CAAC3B,OAAL,CAAa4B,OAAb,CAAqB,8BAArB;;AACA,mCAAI,CAAC0M,MAAL,CAAYpD,QAAZ,CAAqB,CAAC,KAAD,CAArB,EAA8B;AAC5BC,wCAAU,EAAE,OAAI,CAAClL;AADW,6BAA9B;AAGD,2BALD,MAKM;AACJ,mCAAI,CAACD,OAAL,CAAa6B,KAAb;AACD;AACF,yBATD;AAUD,uBAnBH,EAoBE,UAACA,KAAD,EAAgB;AACd,4BAAI;AACF,iCAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,yBAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,iCAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,uBA1BH;;;;;;;;;AA4BD;AAvasE;AAAA;AAAA,0CAyavDtB,MAzauD,EAya9C;AAAA;;AACvB,iBAAKD,OAAL,GAAe,IAAf;AACA,iBAAK0P,yBAAL,CACGe,eADH,CACmBxQ,MADnB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACD,aAFD,CAHJ,EAOGkB,SAPH,CAOa,UAAOE,QAAP;AAAA,qBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACzBA,QAAQ,CAACC,MAAT,KAAoB,GADK;AAAA;AAAA;AAAA;;AAE3B,6BAAKmK,WAAL,GAAkB,IAAlB;AAF2B;;AAAA;AAKvBtG,iCALuB,GAKX9D,QAAQ,CAAC,MAAD,CAAR,CAAiB,MAAjB,CALW;;AAMvBT,+BANuB,GAMb,SAAVA,OAAU;AAAA,iCAAMuE,SAAS,CAACtE,OAAV,CAAkB;AAAA,mCAAM,OAAI,CAAC8P,aAAL,EAAN;AAAA,2BAAlB,CAAN;AAAA,yBANa;;AAAA;AAO7B,+BAAM1P,OAAO,CAACC,OAAR,CAAgBN,OAAO,EAAvB,CAAN;;AAP6B;AAQ7B,6BAAKuB,IAAL,CAAUC,GAAV,CAAc,WAAd,EAA2B8F,UAA3B,CAAsC/C,SAAtC;AACA,6BAAKsG,WAAL,GAAkB,KAAlB;;AAT6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB;AAAA,aAPb,EAmBE,UAACjK,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,oCAAnB;;AACA,qBAAI,CAACiK,WAAL,GAAmB,IAAnB;AACD,aAtBH;AAwBD;AAncsE;AAAA;AAAA,mDAqc9CvL,MArc8C,EAqcrC;AAAA;;AAChC,iBAAKD,OAAL,GAAe,IAAf;AACA,iBAAK0P,yBAAL,CACGiB,wBADH,CAC4B1Q,MAD5B,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACD,aAFD,CAHJ,EAOGkB,SAPH,CAOa,UAAOE,QAAP;AAAA,qBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACzBA,QAAQ,CAACC,MAAT,KAAoB,GADK;AAAA;AAAA;AAAA;;AAE3B,6BAAKmK,WAAL,GAAkB,IAAlB;AAF2B;;AAAA;AAKzBtG,iCALyB,GAKb9D,QAAQ,CAAC,MAAD,CAAR,CAAiB,MAAjB,CALa;;AAMvBT,+BANuB,GAMb,SAAVA,OAAU;AAAA,iCAAMuE,SAAS,CAACtE,OAAV,CAAkB,UAACuR,QAAD,EAAW5P,KAAX,EAAqB;AAC3D,mCAAI,CAACmO,aAAL;;AACAxL,qCAAS,CAAC3C,KAAD,CAAT,CAAiB,cAAjB,IAAmC2C,SAAS,CAAC3C,KAAD,CAAT,CAAiB,SAAjB,CAAnC;AACA2C,qCAAS,CAAC3C,KAAD,CAAT,CAAiB,SAAjB,IAA8B,IAA9B;AACD,2BAJqB,CAAN;AAAA,yBANa;;AAAA;AAW7B,+BAAMvB,OAAO,CAACC,OAAR,CAAgBN,OAAO,EAAvB,CAAN;;AAX6B;AAY7B,6BAAKuB,IAAL,CAAUC,GAAV,CAAc,WAAd,EAA2B8F,UAA3B,CAAsC/C,SAAtC;AACA,6BAAKsG,WAAL,GAAkB,KAAlB;;AAb6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB;AAAA,aAPb,EAuBE,UAACjK,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,oCAAnB;;AACA,qBAAI,CAACiK,WAAL,GAAmB,IAAnB;AACD,aA1BH;AA4BD;AAnesE;AAAA;AAAA,0CAsevD;AACd,iBAAKiH,aAAL,CAAmB3R,IAAnB,CACE,KAAKkD,WAAL,CAAiB8E,KAAjB,CAAuB;AACrB6J,oCAAsB,EAAE,CAAC,IAAD,CADH;AAErBC,oCAAsB,EAAE,CAAC,IAAD,CAFH;AAGrBC,uBAAS,EAAC,CAAC,IAAD,CAHW;AAIrBzB,qBAAO,EAAC,CAAC,IAAD,CAJa;AAKrB0B,qBAAO,EAAC,CAAC,IAAD,CALa;AAMrB9J,0BAAY,EAAE,CAAC;AAAC5G,qBAAK,EAAE,IAAR;AAAc2Q,wBAAQ,EAAE;AAAxB,eAAD,CANO;AAOrBtB,qBAAO,EAAG,CAAC;AAACrP,qBAAK,EAAE,IAAR;AAAc2Q,wBAAQ,EAAE;AAAxB,eAAD,CAPW;AAQrBzB,0BAAY,EAAE,CAAC,KAAD,EAAQ,CAAC,2DAAWxC,QAAZ,CAAR,CARO;AASrBuC,0BAAY,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWvC,QAAZ,EAAsB,2DAAWkE,GAAX,CAAe,IAAf,CAAtB,CAAP,CATO;AAUrBV,qBAAO,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWxD,QAAZ,EAAsB,2DAAWkE,GAAX,CAAe,IAAf,CAAtB,CAAP,CAVY;AAWrBtJ,qBAAO,EAAE,CAAC,IAAD,CAXY;AAYrBD,qBAAO,EAAE,CAAC;AAACrH,qBAAK,EAAE,IAAR;AAAc2Q,wBAAQ,EAAE;AAAxB,eAAD,EAAgC,2DAAWjE,QAA3C;AAZY,aAAvB,CADF;AAgBD;AAvfsE;AAAA;AAAA,2CA0ftDvM,KA1fsD,EA0f1C;AAC3B,gBAAM8P,EAAE,GAAG,KAAKnQ,IAAL,CAAUC,GAAV,CAAc,WAAd,CAAX;;AACA,gBAAIkQ,EAAE,CAAClD,QAAH,CAAY5M,KAAZ,EAAmBJ,GAAnB,CAAuB,cAAvB,EAAuCC,KAA3C,EAAkD;AAC9C,mBAAKqQ,aAAL,CAAmBtD,QAAnB,CAA4B5M,KAA5B,EAAmCJ,GAAnC,CAAuC,CAAC,SAAD,CAAvC,EAAoD8Q,OAApD;AACA,mBAAKR,aAAL,CAAmBtD,QAAnB,CAA4B5M,KAA5B,EAAmCJ,GAAnC,CAAuC,CAAC,cAAD,CAAvC,EAAyD8Q,OAAzD;AACA,mBAAKR,aAAL,CAAmBtD,QAAnB,CAA4B5M,KAA5B,EAAmCJ,GAAnC,CAAuC,CAAC,cAAD,CAAvC,EAAyD8Q,OAAzD;AACF,qBAAO,KAAP;AACD;;AACD,mBAAOZ,EAAE,CAAClD,QAAH,CAAY5M,KAAZ,EAAmBJ,GAAnB,CAAuB,SAAvB,EAAkCC,KAAzC;AACD;AAngBsE;AAAA;AAAA,2CAqgBtDG,KArgBsD,EAqgBvC;AAAA;;AAC9B,gBAAI,KAAKkQ,aAAL,CAAmB/R,MAAnB,KAA8B,CAAlC,EAAqC;AACnC,mBAAKhB,OAAL,CAAawM,MAAb,CAAoB,+BAApB;AACA;AACD;;AACD,gBAAIhH,SAAS,GAAG,KAAKuN,aAAL,CAAmBS,EAAnB,CAAsB3Q,KAAtB,EAA6BH,KAA7C;AACA8C,qBAAS,GAAG,MAAH,OAAG,CAAH,kBAAOA,SAAP,CAAG,EAAa;AAAC,yBAAU;AAAX,aAAb,CAAZ;;AACA,gBAAG,CAACA,SAAS,CAAC,wBAAD,CAAb,EAAwC;AACtC,mBAAKuN,aAAL,CAAmBU,QAAnB,CAA4B5Q,KAA5B;AACA;AACD;;AACD,iBAAKxC,aAAL,GAAoB,IAApB;AACA,iBAAK2P,yBAAL,CACGqC,aADH,CACiB7M,SADjB,EAEKnD,IAFL,CAGM,iEAAS,YAAM;AACb,qBAAI,CAAChC,aAAL,GAAoB,KAApB;AACD,aAFD,CAHN,EAOKmB,SAPL,CAQM,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACoR,aAAL,CAAmBU,QAAnB,CAA4B5Q,KAA5B;;AACA,uBAAI,CAAC7C,OAAL,CAAa4B,OAAb;AACD,eAHD,MAGO;AACL,uBAAI,CAAC5B,OAAL,CAAa6B,KAAb;AACD;AACF,aAfP,EAgBM,UAACA,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD,aAlBP;AAoBH;AAriBwE;AAAA;AAAA,6CAuiBpD6R,SAviBoD,EAuiBjC7Q,KAviBiC,EAuiBlBwM,KAviBkB,EAuiBH;AAClE,gBAAI,KAAKsE,oBAAL,CAA0BD,SAA1B,EAAqC7Q,KAArC,EAA4CwM,KAA5C,CAAJ,EAAwD;AACtD,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AA7iBsE;AAAA;AAAA,+CA+iBlDqE,SA/iBkD,EA+iB/B7Q,KA/iB+B,EA+iBhBwM,KA/iBgB,EA+iBJ;AACjE,gBAAIuE,UAAU,GAAQ,KAAKpR,IAAL,CAAUiN,QAAV,CAAmBiE,SAAnB,CAAtB;AACArE,iBAAK,GAAGuE,UAAU,CAACnE,QAAX,CAAoB5M,KAApB,EAA2BJ,GAA3B,CAA+B4M,KAA/B,CAAR;AAEA,mBAAOA,KAAK,CAAC1N,MAAN,IAAgB,SAAhB,IAA6B0N,KAAK,CAACE,OAA1C;AACD;AApjBsE;AAAA;AAAA,gDAsjBjDmE,SAtjBiD,EAsjB9B7Q,KAtjB8B,EAsjBfwM,KAtjBe,EAsjBA;AACrE,gBAAID,QAAQ,GAAG,KAAf;AACA,gBAAII,WAAW,GAAG,IAAI,2DAAJ,EAAlB;AACA,gBAAIoE,UAAU,GAAQ,KAAKpR,IAAL,CAAUiN,QAAV,CAAmBiE,SAAnB,CAAtB;;AAEA,gBAAIE,UAAU,CAACnE,QAAX,CAAoB5M,KAApB,EAA2BJ,GAA3B,CAA+B4M,KAA/B,EAAsCK,SAA1C,EAAqD;AACnD,kBAAIC,gBAAgB,GAAGiE,UAAU,CAACnE,QAAX,CAAoB5M,KAApB,EACpBJ,GADoB,CAChB4M,KADgB,EAEpBK,SAFoB,CAEVF,WAFU,CAAvB;AAGAJ,sBAAQ,GACNO,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACP,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AAtkBsE;AAAA;AAAA,wCAwkBzDpC,KAxkByD,EAwkBlD;AACnB,iBAAKuE,gBAAL,CAAsB9O,GAAtB,CAA0B,MAA1B,EAAkCwI,QAAlC,CAA2C+B,KAAK,CAACC,IAAjD;AACA,iBAAK1B,iBAAL;AACD;AA3kBsE;AAAA;AAAA,gDA4kBjDyB,KA5kBiD,EA4kB1B;AAC3C,iBAAK0D,KAAL,GAAa,CAAC1D,KAAK,CAACC,IAAN,GAAa,CAAd,IAAmBD,KAAK,CAACnG,YAAtC;AACA,iBAAK8J,GAAL,GAAW3D,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACnG,YAA9B;AACD;AA/kBsE;AAAA;AAAA,4CAilBrDhE,KAjlBqD,EAilBhD;AACrB,gBAAMgR,QAAQ,GAAG,KAAKd,aAAL,CAAmBtD,QAAnB,CAA4B5M,KAA5B,EAAmCJ,GAAnC,CAAuC,CAAC,cAAD,CAAvC,EAAyDC,KAA1E;AACA,gBAAMoR,KAAK,GAAG,KAAKf,aAAL,CAAmBtD,QAAnB,CAA4B5M,KAA5B,EAAmCJ,GAAnC,CAAuC,CAAC,SAAD,CAAvC,EAAoDC,KAAlE;;AACA,gBAAG,CAACmR,QAAD,IAAa,CAACC,KAAjB,EAAuB;AACrB,qBAAO,KAAP;AACD;;AACD,gBAAGC,UAAU,CAACF,QAAD,CAAV,GAAuBE,UAAU,CAACD,KAAD,CAApC,EAA4C;AAC1C,qBAAO,IAAP;AACD;;AACD,mBAAO,KAAP;AACD;AA3lBsE;AAAA;AAAA,8BA+WnD;AAClB,mBAAO,KAAKtR,IAAL,CAAUC,GAAV,CAAc,WAAd,CAAP;AACD;AAjXsE;;AAAA;AAAA,S;;;;gBAhBvE;;gBATO;;gBAKA;;gBAhBA;;gBAgBgB;;gBAFgB;;gBAXhC;;gBAwBA;;gBAzBA;;gBAEA;;gBAKA;;gBAHA;;gBAIA;;;;AA0BIsN,kEAA4D,6DALxE,iEAAU;AACTzM,gBAAQ,EAAE,oDADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAKwE,E,+EA0ChD,2D,EACJ,4F,EACO,+D,EACD,kF,EACP,uD,EACO,8D,EACU,oG,EACE,uH,EACN,0H,EACI,yI,EACX,uF,EACA,kE,EACK,qG,EAtD0C,GAA5DwM,4DAA4D,CAA5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCpCb;AAGA;;;UAQaiE,iDAAiD;AAG5D,mEAAoBhG,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFH,eAAAC,GAAA,GAAM,yEAAYA,GAAlB;AAEuB;;AAHoB;AAAA;AAAA,+CAMvC1N,MANuC,EAM9B;AAC5B,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,+DAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AAd2D;AAAA;AAAA,gDAgBtC3N,MAhBsC,EAgBe;AACzE,mBAAO,KAAKyN,IAAL,CAAUG,IAAV,WACF,KAAKF,GADH,+DAEL1N,MAFK,EAGL;AACE2N,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD;AAxB2D;AAAA;AAAA,2CA0B3C3N,MA1B2C,EA0BU;AACpE,mBAAO,KAAKyN,IAAL,CAAUG,IAAV,WACF,KAAKF,GADH,4EAEL1N,MAFK,EAGL;AACE2N,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD;AAlC2D;AAAA;AAAA,sCAoChD3N,MApCgD,EAoCvC;AACnB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,4BAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AA5C2D;AAAA;AAAA,0CA6C5C3N,MA7C4C,EA6CnC;AACvB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,4EAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AArD2D;;AAAA;AAAA,S;;;;gBANrD;;;;AAMI8F,uDAAiD,6DAH7D,iEAAW;AACV5F,kBAAU,EAAE;AADF,OAAX,CAG6D,E,+EAGlC,+D,EAHkC,GAAjD4F,iDAAiD,CAAjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCFAC,gDAAgD;AAgB3D,kEACUhU,cADV,EACwC;AAAA;;AAA9B,eAAAA,cAAA,GAAAA,cAAA;AAXF,eAAAiU,UAAA,GAAa,yEAAYA,UAAzB;AAER,eAAA5T,OAAA,GAAmB,KAAnB;AAEA,eAAA6T,WAAA,GAAmBlC,IAAI,CAACC,KAAL,CAAWkC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAnB;AACA,eAAAC,SAAA,GAAiBC,IAAI,CAAC,KAAKJ,WAAL,CAAiB,MAAjB,EAAyB,WAAzB,CAAD,CAArB;AACA,eAAAK,SAAA,GAAiBD,IAAI,CAAC,KAAKJ,WAAL,CAAiB,MAAjB,EAAyB,IAAzB,CAAD,CAArB;AAOE,eAAKM,GAAL,aAAc,KAAKP,UAAnB,kFAAqG,KAAKI,SAA1G,gBAAyH,KAAKE,SAA9H;AACD;;AApB0D;AAAA;AAAA,qCAsBhD;AACT,iBAAKE,eAAL;AACD;AAxB0D;AAAA;AAAA,4CA0B5C;AAAA;;AACb,iBAAKzU,cAAL,CAAoBM,MAApB,CAA2BiB,SAA3B,CAAqC,UAACjB,MAAD,EAAgB;AACnD,qBAAI,CAACsK,WAAL,GAAmBtK,MAAM,CAAC,aAAD,CAAzB;AACA,qBAAI,CAACuK,cAAL,GAAsB,CACpB;AACEC,yBAAS,EAAE,MADb;AAEEC,0BAAU,EAAE;AAFd,eADoB,EAKpB;AACED,yBAAS,EAAE,sBADb;AAEEC,0BAAU,8CAAuC,OAAI,CAACH,WAA5C;AAFZ,eALoB,EASpB;AACEE,yBAAS,EAAE;AADb,eAToB,CAAtB;AAaD,aAfD;AAgBD;AA3C0D;;AAAA;AAAA,S;;;;gBATpD;;;;AASIkJ,sDAAgD,6DAL5D,gEAAU;AACT3Q,gBAAQ,EAAE,8BADD;AAETC,gBAAQ,EAAR,+FAFS;;AAAA,OAAV,CAK4D,E,+EAiBjC,8D,EAjBiC,GAAhD0Q,gDAAgD,CAAhD;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCAf;AAIA;AAGA;;;UAsBaU,iDAAiD;AAmB5D,mEACUrQ,WADV,EAEUtE,OAFV,EAGUC,cAHV,EAIUiE,aAJV,EAKU0Q,cALV,EAMUpG,YANV,EAOUC,iBAPV,EAO8C;AAAA;;AANpC,eAAAnK,WAAA,GAAAA,WAAA;AACA,eAAAtE,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAiE,aAAA,GAAAA,aAAA;AACA,eAAA0Q,cAAA,GAAAA,cAAA;AACA,eAAApG,YAAA,GAAAA,YAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AAtBV,eAAA3D,cAAA,GAA6B,EAA7B;AAIA,eAAA3K,QAAA,GAA4B,EAA5B,CAkB8C,CAf9C;;AACA,eAAAuO,YAAA,GAAe,KAAf;AACA,eAAApO,OAAA,GAAU,KAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB,CAY8C,CAV9C;;AACA,eAAAwU,OAAA,GAAoD,EAApD;AAmBO,eAAAjG,KAAA,GAAQ,kDAAQA,KAAhB;AARL,eAAK1K,aAAL,CAAmB8C,GAAnB,CAAuB,OAAvB;AACA,eAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAP,CACd,EADc,EAEd;AAAEC,0BAAc,EAAE;AAAlB,WAFc,EAGd;AAAEC,4BAAgB,EAAE;AAApB,WAHc,EAId;AAAEC,2BAAe,EAAE;AAAnB,WAJc,CAAhB;AAMD;;AAnC2D;AAAA;AAAA,qCAsCpD;AACN,iBAAKuH,eAAL;AACA,iBAAKrH,aAAL;AACA,iBAAKsH,cAAL;AACA,iBAAKrH,gBAAL;AACD;AA3C2D;AAAA;AAAA,4CA6C7C;AACb,iBAAKgH,iBAAL,CAAuBI,eAAvB,GAAyCrN,SAAzC;AACD;AA/C2D;AAAA;AAAA,6CAiDzC;AACjB,gBAAMyK,OAAO,GAAG,KAAKhM,cAAL,CAAoBO,QAApB,CAA6BD,MAA7C;AACA,gBAAI0L,OAAO,CAACxL,cAAR,CAAuB,IAAvB,CAAJ,EACA,OAAO,KAAKqU,UAAL,CAAgB;AAAEC,oCAAsB,EAAE9I,OAAO,CAAC,IAAD;AAAjC,aAAhB,CAAP;AACD;AArD2D;AAAA;AAAA,qCAwDjD1L,MAxDiD,EAwDI;AAAA;;AAC9D,iBAAKD,OAAL,GAAe,IAAf;;AACA,gBAAM2L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA,iBAAKqU,cAAL,CACGE,UADH,CACc7I,OADd,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACkT,OAAL,GAAenT,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAf;AACA,uBAAI,CAACoJ,QAAL,GAAgB,KAAhB;AACD,eAHD,MAGO;AACL,uBAAI,CAACA,QAAL,GAAgB,IAAhB;AACA,uBAAI,CAAC6I,OAAL,GAAe,EAAf;AACD;AACF,aAjBL,EAkBI,UAAChT,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,qBAAI,CAACmK,QAAL,GAAgB,IAAhB;AACD,aArBL;AAuBD;AAlF2D;AAAA;AAAA,0CAoF/C;AACX,gBAAMpL,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKoE,QAAL,GAAgB,UAAhB;AACA,iBAAKT,YAAL,CAAkBU,QAAlB,CAA2B,KAAKD,QAAhC;AACA,iBAAKnE,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU,EAAE;AAFd,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE,SADb;AAEEC,wBAAU;AAFZ,aAToB,EAapB;AACED,uBAAS,EAAE,KAAKkE;AADlB,aAboB,CAAtB;AAiBD,WAzG2D,CA2G5D;;AA3G4D;AAAA;AAAA,2CA4G9C;AAEZ,iBAAKzM,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjC2L,oCAAsB,EAAE,CAAC,IAAD,CADS;AAEjCC,oCAAsB,EAAG,CAAC,IAAD,EAAO,CAAC,2DAAW5F,QAAZ,CAAP,CAFQ;AAGjC6F,yCAA2B,EAAC,CAAC,IAAD,EAAO,CAAC,2DAAW7F,QAAZ,CAAP,CAHK;AAIjCvO,qBAAO,EAAE,CAAC,GAAD,EAAM,CAAC,2DAAWuO,QAAZ,CAAN,CAJwB;AAKjC5E,qBAAO,EAAE,CAAC,IAAD,CALwB;AAMjCC,4BAAc,EAAE,CAAC,IAAD,CANiB;AAOjCC,0BAAY,EAAE,CAAC,IAAD,CAPmB;AAQjCC,qBAAO,EAAE,CAAC,IAAD;AARwB,aAAvB,CAAZ;AAUD,WAxH2D,CA0H5D;;AA1H4D;AAAA;AAAA,uCA2H/C0E,KA3H+C,EA2HhC;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AAhI2D;AAAA;AAAA,yCAkI7CA,KAlI6C,EAkIjC;AACzBA,iBAAK,GAAG,KAAK7M,IAAL,CAAUC,GAAV,CAAc4M,KAAd,CAAR;AACA,mBAAOA,KAAK,CAAC1N,MAAN,IAAgB,SAAhB,IAA6B0N,KAAK,CAACE,OAA1C;AACD;AArI2D;AAAA;AAAA,0CAuI5CF,KAvI4C,EAuI7B;AAC7B,gBAAID,QAAQ,GAAG,KAAf;AACA,gBAAII,WAAW,GAAG,IAAI,2DAAJ,EAAlB;;AAEA,gBAAI,KAAKhN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA9B,EAAyC;AACvC,kBAAIC,gBAAgB,GAAG,KAAKnN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA1B,CAAoCF,WAApC,CAAvB;AACAJ,sBAAQ,GACNO,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACP,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AApJ2D;AAAA;AAAA,wCAsJ9C;AAAA;;AACZ,iBAAK/O,aAAL,GAAqB,IAArB;AACA,iBAAKuU,cAAL,CACGM,WADH,CACe,KAAK1S,IAAL,CAAUE,KADzB,EAEGL,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC3B,OAAL,CAAa4B,OAAb;AACD,eAFD,MAEO;AACL,uBAAI,CAAC5B,OAAL,CAAa6B,KAAb;AACD;AACF,aAfL,EAgBI,UAACA,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAtBL;AAwBD;AAhL2D;;AAAA;AAAA,S;;;;gBAjB5D;;gBATO;;gBAKA;;gBAFgC;;gBAchC;;gBAnBA;;gBACA;;;;AA2BI8S,uDAAiD,6DAL7D,gEAAU;AACTrR,gBAAQ,EAAE,oDADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAK6D,E,+EAoBrC,2D,EACJ,2F,EACO,8D,EACD,6D,EACC,kG,EACF,uF,EACK,qG,EA1B+B,GAAjDoR,iDAAiD,CAAjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eChBb;AAYA;AAIA;;;UAOaQ,+DAA+D;AA0C1E,iFACU7Q,WADV,EAEUtE,OAFV,EAGUwE,YAHV,EAIUN,aAJV,EAKUqK,cALV,EAMUrO,mBANV,EAOU8P,yBAPV,EAQUvB,iBARV,EAQ8C;AAAA;;AAPpC,eAAAnK,WAAA,GAAAA,WAAA;AACA,eAAAtE,OAAA,GAAAA,OAAA;AACA,eAAAwE,YAAA,GAAAA,YAAA;AACA,eAAAN,aAAA,GAAAA,aAAA;AACA,eAAAqK,cAAA,GAAAA,cAAA;AACA,eAAArO,mBAAA,GAAAA,mBAAA;AACA,eAAA8P,yBAAA,GAAAA,yBAAA;AACA,eAAAvB,iBAAA,GAAAA,iBAAA;AA1CE,eAAA2G,WAAA,GAAc,IAAI,2DAAJ,EAAd;AAGZ,eAAAtK,cAAA,GAA6B,EAA7B;AAIA,eAAA3K,QAAA,GAA4B,EAA5B;AAGA,eAAAkV,QAAA,GAA4B,EAA5B;AACA,eAAAC,UAAA,GAAa,IAAb;AAEA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAC,aAAA,GAAiC,EAAjC;AACA,eAAA9G,YAAA,GAAe,KAAf;AAIA,eAAApO,OAAA,GAAU,KAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB;AAEA;;AACA,eAAAwG,YAAA,GAAe,EAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AACA,eAAA2J,KAAA,GAAQ,CAAR;AACA,eAAAC,GAAA,GAAM,EAAN;AACA;AAEA;;AACA,eAAAvQ,UAAA,GAA8D,EAA9D;AACA,eAAAqV,WAAA,GAA4D,EAA5D;AAoBO,eAAA7G,KAAA,GAAQ,kDAAQA,KAAhB;AARL,eAAK1K,aAAL,CAAmB8C,GAAnB,CAAuB,OAAvB;AACA,eAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAP,CACd,EADc,EAEd;AAAEC,0BAAc,EAAE;AAAlB,WAFc,EAGd;AAAEC,4BAAgB,EAAE;AAApB,WAHc,EAId;AAAEC,2BAAe,EAAE;AAAnB,WAJc,CAAhB;AAMD;;AA3DyE;AAAA;AAAA,qCA8DlE;AACN,iBAAKuH,eAAL;AACA,iBAAKC,cAAL;AACA,iBAAKC,UAAL;AACD;AAlEyE;AAAA;AAAA,4CAoE3D;AACb,iBAAKN,iBAAL,CAAuBI,eAAvB,GAAyCrN,SAAzC;AACD;AAtEyE;AAAA;AAAA,wCAyE/D;AACT,gBAAG,KAAKqP,QAAL,IAAiB5I,SAApB,EAA8B;AAC5B,mBAAK4I,QAAL,CAAc3I,IAAd;AACD;AACF,WA7EyE,CA+E1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1G0E;AAAA;AAAA,0CA4G1D3H,MA5G0D,EA4GjD;AAAA;;AACvB,iBAAKF,aAAL,GAAqB,IAArB;AACA,iBAAK2P,yBAAL,CACG0F,eADH,CACmBnV,MADnB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAChC,aAAL,GAAqB,KAArB;AACD,aAFD,CAHJ,EAOGmB,SAPH,CAOa,UAAOE,QAAP;AAAA,qBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACzBA,QAAQ,CAACC,MAAT,KAAoB,GADK;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIvBgU,oCAJuB,GAIRjU,QAAQ,CAAC,MAAD,CAAR,CAAiB,MAAjB,CAJQ;;AAKvBT,+BALuB,GAKb,SAAVA,OAAU;AAAA,iCAAM0U,YAAY,CAACzU,OAAb,CAAqB;AAAA,mCAAM,OAAI,CAAC0U,gBAAL,EAAN;AAAA,2BAArB,CAAN;AAAA,yBALa;;AAAA;AAM7B,+BAAMtU,OAAO,CAACC,OAAR,CAAgBN,OAAO,EAAvB,CAAN;;AAN6B;AAO7B,6BAAKuB,IAAL,CAAUC,GAAV,CAAc,cAAd,EAA8B8F,UAA9B,CAAyCoN,YAAzC;;AAP6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB;AAAA,aAPb,EAiBE,UAAC9T,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,oCAAnB;AACD,aAnBH;AAqBD;AAnIyE;AAAA;AAAA,uCAqI7D;AAAA;;AACX,iBAAKgU,cAAL,GAAsB,IAAtB;AACA,iBAAKtH,cAAL,CACGQ,UADH,CACc;AAAElO,qBAAO,EAAE,GAAX;AAAgBuL,qBAAO,EAAE;AAAzB,aADd,EAEG/J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACwT,cAAL,GAAsB,KAAtB;AACD,aAFD,CAHJ,EAOGrU,SAPH,CAOa,UAACE,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC4T,OAAL,GAAe7T,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAf;AACD,eAFD,MAEK;AACH,uBAAI,CAAC5C,OAAL,CAAawM,MAAb,CAAoB,6BAApB;AACD;AACF,aAbH;AAcD,WArJyE,CAuJ1E;;AAvJ0E;AAAA;AAAA,2CAwJ5D;AACZ,gBAAG,KAAKhK,IAAL,IAAayF,SAAhB,EAA0B;AACxB,mBAAKzF,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjCzI,iCAAiB,EAAE,CAAC,IAAD,CADc;AAEjCqO,sCAAsB,EAAG,CAAC,IAAD,EAAO,CAAC,2DAAWI,QAAZ,CAAP,CAFQ;AAGjC0G,sCAAsB,EAAE,CAAC,IAAD,CAHS;AAIjCjV,uBAAO,EAAE,CAAC,GAAD,EAAM,CAAC,2DAAWuO,QAAZ,CAAN,CAJwB;AAKjC2G,uBAAO,EAAE,CAAC,KAAD,CALwB;AAMjCvL,uBAAO,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAW4E,QAAZ,CAAP,CANwB;AAOjC4G,uBAAO,EAAE,CAAC,IAAD,CAPwB;AAQjCnJ,uBAAO,EAAE,CAAC,IAAD,CARwB;AASjClC,uBAAO,EAAE,CAAC,IAAD,CATwB;AAUjCgL,4BAAY,EAAE,KAAKrR,WAAL,CAAiBgN,KAAjB,CAAuB,EAAvB;AAVmB,eAAvB,CAAZ;AAYD;;AACD,gBAAG,KAAK2E,YAAL,IAAqBhO,SAAxB,EAAkC;AAChC,mBAAKgO,YAAL,GAAoB,KAAK3R,WAAL,CAAiB8E,KAAjB,CAAuB;AACzCoI,yBAAS,EAAE,CAAC,MAAD,CAD8B;AAEzCC,wBAAQ,EAAE,CAAC,IAAD,EAAO,2DAAWrC,QAAlB,CAF+B;AAGzCkF,yBAAS,EAAC,CAAC,IAAD,CAH+B;AAIzC9N,oBAAI,EAAC,CAAC,IAAD;AAJoC,eAAvB,CAApB;AAMD;AACF,WA/KyE,CAiL1E;;AAjL0E;AAAA;AAAA,uCAkL7D6I,KAlL6D,EAkL9C;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AAvLyE;AAAA;AAAA,yCAyL3DA,KAzL2D,EAyL/C;AACzBA,iBAAK,GAAG,KAAK7M,IAAL,CAAUC,GAAV,CAAc4M,KAAd,CAAR;AACA,mBAAOA,KAAK,CAAC1N,MAAN,IAAgB,SAAhB,IAA6B0N,KAAK,CAACE,OAA1C;AACD;AA5LyE;AAAA;AAAA,0CA8L1DF,KA9L0D,EA8L3C;AAC7B,gBAAID,QAAQ,GAAG,KAAf;AACA,gBAAII,WAAW,GAAG,IAAI,2DAAJ,EAAlB;;AAEA,gBAAI,KAAKhN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA9B,EAAyC;AACvC,kBAAIC,gBAAgB,GAAG,KAAKnN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA1B,CAAoCF,WAApC,CAAvB;AACAJ,sBAAQ,GACNO,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACP,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF,WA3MyE,CA6M1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1N0E;AAAA;AAAA,sCA4N9D7O,MA5N8D,EA4NtD;AAAA;;AAClB,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAAEiK,QAAT,GAAoB,GAApB;AACAjK,mBAAO,CAAEkK,aAAT,GAAyB,GAAzB;AACA,gBAAMjJ,IAAI,GAAG,KAAK+I,YAAL,CAAkBvT,KAA/B;AACA,iBAAK0T,eAAL,GAAuB,IAAvB;AACA,gBAAIlJ,IAAI,CAAC,UAAD,CAAR,EAAsBjB,OAAO,CAACiB,IAAI,CAAC,WAAD,CAAL,CAAP,GAA6BA,IAAI,CAAC,UAAD,CAAjC;AACtB,iBAAK8C,yBAAL,CACGqG,WADH,CACepK,OADf,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC+T,eAAL,GAAuB,KAAvB;AACD,aAFD,CAHJ,EAOG5U,SAPH,CAQI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC0T,QAAL,GAAgB3T,QAAQ,CAACkB,IAAT,CAAc,UAAd,CAAhB;AACA,uBAAI,CAACkE,UAAL,GAAkBpF,QAAQ,CAACkB,IAAT,CAAc,UAAd,EAA0B5B,MAA5C;AACA,uBAAI,CAACsU,UAAL,GAAkB,KAAlB;AACD,eAJD,MAIO;AACL,uBAAI,CAACtV,OAAL,CAAawM,MAAb,CAAoB,6BAApB;;AACA,uBAAI,CAAC6I,QAAL,GAAgB,EAAhB;AACA,uBAAI,CAACC,UAAL,GAAkB,IAAlB;AACD;AACF,aAlBL,EAmBI,UAACzT,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,qBAAI,CAACwT,QAAL,GAAgB,EAAhB;AACD,aAtBL;AAwBD;AA3PyE;AAAA;AAAA,sCA6P9DiB,OA7P8D,EA6PrD;AACnB,gBAAM3D,EAAE,GAAG,KAAKnQ,IAAL,CAAUC,GAAV,CAAc,cAAd,CAAX;AACAkQ,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwBJ,GAAxB,CAA4B,wBAA5B,EAAsD8F,UAAtD,CAAiE+N,OAAO,CAAChC,SAAzE;AACA3B,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwBJ,GAAxB,CAA4B,cAA5B,EAA4C8F,UAA5C,CAAuD+N,OAAO,CAAChC,SAA/D;AACA3B,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwBJ,GAAxB,CAA4B,SAA5B,EAAuC8F,UAAvC,CAAkD+N,OAAO,CAAC1V,EAA1D;AACA+R,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwBJ,GAAxB,CAA4B,SAA5B,EAAuC8F,UAAvC,CAAkD+N,OAAO,CAAC9P,IAA1D;AACD;AAnQyE;AAAA;AAAA,2CAqQnD5F,EArQmD,EAqQ1C;;;;;;;;;AAC1BkS,6B,GAAU,E;AACR6C,kC,GAAe,KAAKY,gBAAL,CAAsBvD,WAAtB,E;;0BAChB2C,Y;;;;;;;;AAGC1U,6B,GAAU,SAAVA,OAAU,GAAM;AACpB0U,oCAAY,CAACzU,OAAb,CAAqB,UAAAsV,WAAW,EAAI;AAClC,8BAAMjW,MAAM,GAAG,MAAH,OAAG,CAAH,kBAAOiW,WAAP,CAAG,EAAe;AAAC,sDAAyB5V;AAA1B,2BAAf,CAAf;AACAkS,iCAAO,CAAC1R,IAAR,CAAa,OAAI,CAAC4O,yBAAL,CACVyG,gBADU,CACOlW,MADP,CAAb;AAEA,yBAJF;AAKD,uB;;;AACD,6BAAMe,OAAO,CAACC,OAAR,CAAgBN,OAAO,EAAvB,CAAN;;;AACA,6EAAS6R,OAAT,EACCzQ,IADD,CAEE,iEAAS,YAAM;AACb,+BAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,+BAAI,CAACD,aAAL,GAAqB,KAArB;AACD,uBAHD,CAFF,EAOCmB,SAPD,CAQE,UAACC,SAAD,EAA2B;AACzB,+BAAI,CAACzB,OAAL,CAAa4B,OAAb,CAAqB,sCAArB;AACD,uBAVH,EAWE,UAACC,KAAD,EAAgB;AACd,4BAAI;AACF,iCAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,yBAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,iCAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,uBAjBH;;;;;;;;;AAmBD;AAtSyE;AAAA;AAAA,8CAuStDgB,KAvSsD,EAuSvC;AAAA;;AACjC,gBAAI,KAAK0T,gBAAL,CAAsBvV,MAAtB,KAAiC,CAArC,EAAwC;AACtC,mBAAKhB,OAAL,CAAawM,MAAb,CAAoB,kCAApB;AACA;AACD;;AACD,gBAAM5L,EAAE,GAAG,KAAK4B,IAAL,CAAUC,GAAV,CAAc,mBAAd,CAAX;AACA,gBAAIkT,YAAY,GAAG,KAAKY,gBAAL,CAAsB/C,EAAtB,CAAyB3Q,KAAzB,EAAgCH,KAAnD;AACAiT,wBAAY,GAAG,MAAH,OAAG,CAAH,kBAAOA,YAAP,CAAG,EAAgB;AAAC,yBAAU;AAAX,aAAhB,CAAf;;AACA,gBAAG,CAACA,YAAY,CAAC,SAAD,CAAhB,EAA4B;AAC1B,mBAAKY,gBAAL,CAAsB9C,QAAtB,CAA+B5Q,KAA/B;AACA;AACD;;AACD,iBAAKxC,aAAL,GAAoB,IAApB;AACA,iBAAK2P,yBAAL,CACGyG,gBADH,CACoBd,YADpB,EAEKtT,IAFL,CAGM,iEAAS,YAAM;AACb,qBAAI,CAAChC,aAAL,GAAoB,KAApB;AACD,aAFD,CAHN,EAOKmB,SAPL,CAQM,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC4U,gBAAL,CAAsB9C,QAAtB,CAA+B5Q,KAA/B;;AACA,uBAAI,CAAC7C,OAAL,CAAa4B,OAAb;AACD,eAHD,MAGO;AACL,uBAAI,CAAC5B,OAAL,CAAa6B,KAAb;AACD;AACF,aAfP,EAgBM,UAACA,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD,aAlBP;AAoBD,WAxUyE,CA0U1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAtV0E;AAAA;AAAA,4CAwVxD;AAAA;;AAChB,iBAAKxB,aAAL,GAAqB,IAArB;AACA,gBAAIE,MAAM,GAAG0R,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAK3P,IAAL,CAAUE,KAAzB,CAAX,CAAb;AACA,mBAAOnC,MAAM,CAAC,cAAD,CAAb;AACA,iBAAKyP,yBAAL,CACG0G,eADH,CACmBnW,MADnB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,oBAAMgV,YAAY,GAAGjV,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAArB;;AACA,uBAAI,CAACJ,IAAL,CAAUC,GAAV,CAAc,wBAAd,EAAwCwI,QAAxC,CAAiD0L,YAAjD;;AACA,uBAAI,CAACF,gBAAL,CAAsBE,YAAtB;;AACA,uBAAI,CAACC,wBAAL,CAA8BD,YAA9B;;AACA,uBAAI,CAACvB,WAAL,CAAiByB,IAAjB,CAAsB,IAAtB;;AACA,uBAAI,CAAC7W,OAAL,CAAa4B,OAAb;AACD,eAPD,MAOO;AACL,uBAAI,CAAC5B,OAAL,CAAa6B,KAAb;AACD;AACF,aApBL,EAqBI,UAACA,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aA3BL;AA6BD;AAzXyE;AAAA;AAAA,6CA+XvD;AACjB,iBAAK0U,gBAAL,CAAsBnV,IAAtB,CACE,KAAKkD,WAAL,CAAiB8E,KAAjB,CAAuB;AACrB0M,oCAAsB,EAAE,CAAC,IAAD,CADH;AAErBnV,+BAAiB,EAAE,CAAC,IAAD,CAFE;AAGrBmW,qBAAO,EAAE,CAAC,IAAD,CAHY;AAIrBC,0BAAY,EAAE,CAAC;AAACrU,qBAAK,EAAE,IAAR;AAAe2Q,wBAAQ,EAAE;AAAzB,eAAD,EAAiC,CAAC,2DAAWjE,QAAZ,CAAjC,CAJO;AAKrB4H,qBAAO,EAAE,CAAC;AAACtU,qBAAK,EAAE,IAAR;AAAe2Q,wBAAQ,EAAE;AAAzB,eAAD,EAAiC,CAAC,2DAAWjE,QAAZ,CAAjC;AALY,aAAvB,CADF;AASD;AAzYyE;AAAA;AAAA,oCA2YhE7L,QA3YgE,EA2YpCV,KA3YoC,EA2YrB;AACnD,iBAAKA,KAAL,GAAaA,KAAb;AACA,iBAAKgO,QAAL,GAAgB,KAAKrM,YAAL,CAAkBmH,IAAlB,CAAuBpI,QAAvB,EAAiC;AAC/CqI,sBAAQ,EAAE,KADqC;AAE/C,uBAAO;AAFwC,aAAjC,CAAhB;AAID;AAjZyE;AAAA;AAAA,sCAkZ9D;AACV,iBAAKiF,QAAL,CAAc3I,IAAd;AACD;AApZyE;AAAA;AAAA,6CAsZvDwL,SAtZuD,EAsZpC7Q,KAtZoC,EAsZrBwM,KAtZqB,EAsZN;AAClE,gBAAI,KAAKsE,oBAAL,CAA0BD,SAA1B,EAAqC7Q,KAArC,EAA4CwM,KAA5C,CAAJ,EAAwD;AACtD,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AA5ZyE;AAAA;AAAA,+CA8ZrDqE,SA9ZqD,EA8ZlC7Q,KA9ZkC,EA8ZnBwM,KA9ZmB,EA8ZP;AACjE,gBAAIuE,UAAU,GAAQ,KAAKpR,IAAL,CAAUiN,QAAV,CAAmBiE,SAAnB,CAAtB;AACArE,iBAAK,GAAGuE,UAAU,CAACnE,QAAX,CAAoB5M,KAApB,EAA2BJ,GAA3B,CAA+B4M,KAA/B,CAAR;AAEA,mBAAOA,KAAK,CAAC1N,MAAN,IAAgB,SAAhB,IAA6B0N,KAAK,CAACE,OAA1C;AACD;AAnayE;AAAA;AAAA,gDAqapDmE,SAraoD,EAqajC7Q,KAraiC,EAqalBwM,KArakB,EAqaH;AACrE,gBAAID,QAAQ,GAAG,KAAf;AACA,gBAAII,WAAW,GAAG,IAAI,2DAAJ,EAAlB;AACA,gBAAIoE,UAAU,GAAQ,KAAKpR,IAAL,CAAUiN,QAAV,CAAmBiE,SAAnB,CAAtB;;AAEA,gBAAIE,UAAU,CAACnE,QAAX,CAAoB5M,KAApB,EAA2BJ,GAA3B,CAA+B4M,KAA/B,EAAsCK,SAA1C,EAAqD;AACnD,kBAAIC,gBAAgB,GAAGiE,UAAU,CAACnE,QAAX,CAAoB5M,KAApB,EACpBJ,GADoB,CAChB4M,KADgB,EAEpBK,SAFoB,CAEVF,WAFU,CAAvB;AAGAJ,sBAAQ,GACNO,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACP,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AArbyE;AAAA;AAAA,wCAsb5DpC,KAtb4D,EAsbrC;AACnC,iBAAK0D,KAAL,GAAa,CAAC1D,KAAK,CAACC,IAAN,GAAa,CAAd,IAAmBD,KAAK,CAACnG,YAAtC;AACA,iBAAK8J,GAAL,GAAW3D,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACnG,YAA9B;AACD;AAzbyE;AAAA;AAAA,mDA6b3C/F,OA7b2C,EA6b1B;;;;;;;;;AAC1CC,8B,GAAW,E;;4BAEX,KAAKZ,QAAL,CAAca,MAAd,KAAyB,C;;;;;wDACpBD,Q;;;AAGHE,6B,GAAU,SAAVA,OAAU,GAAM;AACpB,+BAAI,CAACd,QAAL,CAAce,OAAd,CAAsB,UAACC,OAAD,EAAa;AACjCJ,kCAAQ,CAACK,IAAT,CAAc,OAAI,CAAC4O,yBAAL,CAA+BiH,uBAA/B,CAAuD9V,OAAvD,EAAgEL,OAAhE,CAAd;AACD,yBAFD;AAGD,uB;;AAEDQ,6BAAO,CAACC,OAAR,CAAgBN,OAAO,EAAvB;AAEA,6EAASF,QAAT,EACGS,SADH,CAEI,UAACC,SAAD,EAAuC;AACrCA,iCAAS,CAACP,OAAV,CAAkB,UAAAQ,QAAQ,EAAI;AAC5B,8BAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACzB,mCAAI,CAAC3B,OAAL,CAAa4B,OAAb;AACD,2BAFD,MAEO;AACL,mCAAI,CAAC5B,OAAL,CAAa6B,KAAb;AACD;AACF,yBAND;AAOD,uBAVL,EAYE,UAACA,KAAD,EAAW;AACT,+BAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD,uBAdH;wDAiBOd,Q;;;;;;;;;AACR;AA9dyE;AAAA;AAAA,iDAgenDe,SAhemD,EAgeF;AAAA;;AAAA,gBAC/DC,IAD+D,GAEpE,YAFoE;AAAA,gBACzDC,KADyD,GAGpE,sBAHoE;AAAA,gBAClDC,OADkD,GAIpE,2DAJoE;AAAA,gBACzCC,SADyC,GAKpE,UALoE;AAAA,gBAC9BC,KAD8B,GAMpE,WANoE;AAStE,iBAAKjC,mBAAL,CACGkC,WADH,CACeL,IADf,EACqBC,KADrB,EAC4BC,OAD5B,EACqCC,SADrC,EACgDC,KADhD,EAEGE,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACC,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AAEb,qBAAI,CAACjC,aAAL,GAAqB,IAArB;AAEA,qBAAO,OAAI,CAAC2P,yBAAL,CAA+BzN,YAA/B,CAA4CT,SAA5C,CAAP;AACD,aAND,CAJJ,EAWI,iEAAS,YAAM;AACb,qBAAI,CAACzB,aAAL,GAAqB,KAArB;AACD,aAFD,CAXJ,EAeGmB,SAfH,CAea,UAACE,QAAD,EAAc;AACvB,qBAAI,CAAC1B,OAAL,CAAa4B,OAAb,CAAqB,kCAArB;;AACA,qBAAI,CAACsV,uBAAL,CAA6B;AAC3BpB,sCAAsB,EAAE,OAAI,CAACtT,IAAL,CAAUC,GAAV,CAAc,wBAAd,EAAwCC,KADrC;AAE3B7B,uBAAO,EAAE;AAFkB,eAA7B;AAID,aArBH;AAsBD;AA/fyE;AAAA;AAAA,kDAigBlDN,MAjgBkD,EAigBzC;AAAA;;AAC/B,iBAAKyP,yBAAL,CAA+BmH,sBAA/B,CAAsD5W,MAAtD,EAA8DiB,SAA9D,CACE,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACvB,UAAL,GAAkBsB,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAlB;AACD,eAFD,MAEO;AACL,uBAAI,CAACxC,UAAL,GAAkB,EAAlB;AACD;AACF,aAPH,EAQE,UAACyB,KAAD,EAAW;AACT,qBAAI,CAACzB,UAAL,GAAkB,EAAlB;AACD,aAVH;AAYD;AA9gByE;AAAA;AAAA,mCAghBjE0B,SAhhBiE,EAghBhBe,KAhhBgB,EAghBD;AACvE,gBAAG,CAACf,SAAS,CAACrB,cAAV,CAAyB,wBAAzB,CAAJ,EAAuD;AACrD,mBAAKN,QAAL,GAAgB,KAAKA,QAAL,CAAc2C,MAAd,CAAqB,UAAC3B,OAAD,EAAsB;AACzD,uBAAQA,OAAO,CAACsB,GAAR,CAAY,MAAZ,CAAD,CAAsB,MAAtB,KAAiCX,SAAS,CAACiB,OAAlD;AACD,eAFe,CAAhB;AAGD;;AACDjB,qBAAS,CAACjB,OAAV,GAAoB,GAApB;AACA,iBAAKT,UAAL,CAAgB4C,MAAhB,CAAuBH,KAAvB,EAA8B,CAA9B;;AACA,gBAAGf,SAAS,CAACrB,cAAV,CAAyB,wBAAzB,CAAH,EAAsD;AACpD,mBAAK2W,sBAAL,CAA4BtV,SAA5B;AACD;AACF;AA3hByE;AAAA;AAAA,qCA6hB/DmB,KA7hB+D,EA6hB9C;AAC1B,gBAAIA,KAAK,CAACjC,MAAN,KAAiB,CAArB,EAAwB;AACxB,gBAAMkC,EAAE,GAAG,IAAIC,QAAJ,EAAX;AACAD,cAAE,CAACE,MAAH,CAAU,MAAV,EAAkBH,KAAK,CAAC,CAAD,CAAvB;AACA,iBAAK9C,QAAL,CAAciB,IAAd,CAAmB8B,EAAnB;AACA,iBAAK9C,UAAL,CAAgBgB,IAAhB,CAAqB;AAAE2B,qBAAO,EAAEE,KAAK,CAAC,CAAD,CAAL,CAAS,MAAT;AAAX,aAArB;AACD;AAniByE;AAAA;AAAA,4BAEnDrC,EAFmD,EAEzC;AAC7B,gBAAG,CAACA,EAAJ,EACE;AACF,iBAAKkO,cAAL;AACA,iBAAKtM,IAAL,CAAUC,GAAV,CAAc,mBAAd,EAAmCwI,QAAnC,CAA4CrK,EAA5C;AACD;AAPuE;AAAA;AAAA,8BA2XnD;AACrB,mBAAO,KAAK4B,IAAL,CAAUC,GAAV,CAAc,cAAd,CAAP;AACD;AA7XyE;;AAAA;AAAA,S;;;;gBAf1E;;gBATO;;gBALA;;gBAQgC;;gBAXhC;;gBAHA;;gBADA;;gBAWA;;;;;;gBA2BJ;;;gBAMA;;;AARQ0S,qEAA+D,6DAL3E,iEAAU;AACT7R,gBAAQ,EAAE,4DADD;AAETC,gBAAQ,EAAR,8EAFS;;AAAA,OAAV,CAK2E,E,+EA2CnD,2D,EACJ,2F,EACK,kE,EACC,8D,EACC,yG,EACK,8G,EACM,sH,EACR,qG,EAlD6C,GAA/D4R,+DAA+D,CAA/D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCxBAkC,kCAAkC;AAS7C,oDACUpX,cADV,EAEUqO,MAFV,EAGUgJ,iBAHV,EAIU7I,iBAJV,EAKU8I,cALV,EAMUC,aANV,EAMsC;AAAA;;AAL5B,eAAAvX,cAAA,GAAAA,cAAA;AACA,eAAAqO,MAAA,GAAAA,MAAA;AACA,eAAAgJ,iBAAA,GAAAA,iBAAA;AACA,eAAA7I,iBAAA,GAAAA,iBAAA;AACA,eAAA8I,cAAA,GAAAA,cAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AAbV,eAAAC,gBAAA,GAAmB,IAAnB;AAEA,eAAA3M,cAAA,GAAsB,EAAtB;AAGA,eAAA4M,UAAA,GAAkB,EAAlB;AAUE,eAAKH,cAAL,CAAoBI,UAApB;AACD;;AAlB4C;AAAA;AAAA,qCAoBlC;AAAA;;AACT,iBAAK1X,cAAL,CAAoBM,MAApB,CAA2BiB,SAA3B,CAAqC,UAACjB,MAAD,EAAiB;AACpD,qBAAI,CAACsO,eAAL;;AACA,qBAAI,CAAC+I,YAAL,CAAkBrX,MAAM,CAAC,aAAD,CAAxB;;AACA,qBAAI,CAACsX,qBAAL,CAA2BtX,MAAM,CAAC,aAAD,CAAjC;AACD,aAJD;AAKD;AA1B4C;AAAA;AAAA,4CA4B3B;AAChB,iBAAKkO,iBAAL,CACGI,eADH,GAEGrN,SAFH;AAGD;AAhC4C;AAAA;AAAA,uCAkChCqJ,WAlCgC,EAkCX;AAAA;;AAChC,iBAAKyM,iBAAL,CACGQ,YADH,CACgBjN,WADhB,EAEGrJ,SAFH,CAEa,UAACE,QAAD,EAAmB;AAC5B,kBAAIA,QAAQ,CAAC,QAAD,CAAR,KAAuB,GAA3B,EAAgC;AAC9B,uBAAI,CAACqW,OAAL,GAAe,OAAI,CAACP,aAAL,CAAmBQ,SAAnB,CAA6BtW,QAAQ,CAAC,MAAD,CAAR,CAAiB,MAAjB,CAA7B,CAAf;;AACA,uBAAI,CAAC8F,aAAL,CAAmB,OAAI,CAACuQ,OAAxB;AACD;AACF,aAPH;AAQD;AA3C4C;AAAA;AAAA,gDA6CvBlN,WA7CuB,EA6CF;AAAA;;AACzC,iBAAK4D,iBAAL,CAAuBoJ,qBAAvB,CAA6ChN,WAA7C,EAA0DrJ,SAA1D,CACE,UAACE,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAAC,cAAD,CAAR,KAA6B,GAAjC,EAAsC;AACpC,uBAAI,CAACgW,UAAL,GAAkBhW,QAAQ,CAAC,QAAD,CAA1B;AACA,uBAAI,CAAC+V,gBAAL,GAAwB,KAAxB;AACD,eAHD,MAGO;AACL,uBAAI,CAACQ,6BAAL;AACD;AACF,aARH,EASE,UAACpW,KAAD,EAAgB;AACd,qBAAI,CAACoW,6BAAL;AACD,aAXH;AAaD;AA3D4C;AAAA;AAAA,wCA6D/BC,aA7D+B,EA6DR;AACnC,iBAAKpN,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,WADb;AAEEC,wBAAU,EAAE;AAFd,aADoB,EAKpB;AACED,uBAAS,EAAEmN;AADb,aALoB,CAAtB;AASD;AAvE4C;AAAA;AAAA,0DAyEb;AAC9B,iBAAKX,cAAL,CAAoB1V,KAApB;AACA,iBAAK4V,gBAAL,GAAwB,KAAxB;AACD;AA5E4C;;AAAA;AAAA,S;;;;gBAXtC;;gBAAgB;;gBAChB;;gBACA;;gBACA;;gBACA;;;;AAOIJ,wCAAkC,6DAL9C,gEAAU;AACT/T,gBAAQ,EAAE,6BADD;AAETC,gBAAQ,EAAR,oFAFS;;AAAA,OAAV,CAK8C,E,+EAUnB,8D,EACR,sD,EACW,qG,EACA,qG,EACH,2F,EACD,kF,EAfoB,GAAlC8T,kCAAkC,CAAlC;;;;;;;;;;;;;;;;ACZb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCAf;AAGA;;;UAQac,uCAAuC;AAGlD,yDAAoBnK,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFH,eAAAC,GAAA,GAAM,yEAAYA,GAAlB;AAEuB;;AAHU;AAAA;AAAA,qCAMvC1N,MANuC,EAM9B;AAClB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,8EAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AAdiD;AAAA;AAAA,sCAgBtCqH,OAhBsC,EAgBM;AACtD,mBAAO,KAAKvH,IAAL,CAAUG,IAAV,WACF,KAAKF,GADH,8EAELsH,OAFK,EAGL;AACErH,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD;AAxBiD;;AAAA;AAAA,S;;;;gBAN3C;;;;AAMIiK,6CAAuC,6DAHnD,iEAAW;AACV/J,kBAAU,EAAE;AADF,OAAX,CAGmD,E,+EAGxB,+D,EAHwB,GAAvC+J,uCAAuC,CAAvC;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCAf;AAKA;AASA;;;UAmBaC,8CAA8C;AAoEzD;AAEA,gEACUnU,KADV,EAEUjE,OAFV,EAGUC,cAHV,EAIU2U,cAJV,EAKUtQ,WALV,EAMUC,WANV,EAOUrE,mBAPV,EAQUuE,aARV,EASUC,WATV,EAUU2T,kBAVV,EAUgD;AAAA;;AATtC,eAAApU,KAAA,GAAAA,KAAA;AACA,eAAAjE,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAA2U,cAAA,GAAAA,cAAA;AACA,eAAAtQ,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAArE,mBAAA,GAAAA,mBAAA;AACA,eAAAuE,aAAA,GAAAA,aAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAA2T,kBAAA,GAAAA,kBAAA;AAvEV,eAAAC,eAAA,GAAkB,KAAlB,CAuEgD,CApEhD;;AACA,eAAAhY,OAAA,GAAU,IAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB,CAkEgD,CAhEhD;;AACA,eAAAuF,UAAA,GAAkB,EAAlB,CA+DgD,CA3DhD;;AACA,eAAAQ,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C,CA0DgD,CAtDhD;;AACA,eAAAC,KAAA,GAAQ,CACN;AACEC,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADM,EAKN;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALM,CAAR,CAqDgD,CA1CjD;;AACC,eAAA+R,UAAA,GAAa,CACX;AACEhS,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADW,EAKX;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALW,CAAb,CAyCgD,CA9BhD;;AACA,eAAAE,SAAA,GAA8B,CAC5B;AACE9F,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACEhG,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA;;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AAcI;;AAjFqD;AAAA;AAAA,qCAmF9C;AACT,iBAAKQ,SAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,gBAAL;AACA,iBAAK+Q,oBAAL;AACD;AAxFwD;AAAA;AAAA,wCA0F3C;AACZ,iBAAK1Q,2BAAL,CAAiCC,WAAjC;AACD;AA5FwD;AAAA;AAAA,6CA8FtC;AAAA;;AACjB,iBAAKD,2BAAL,GAAmC,KAAK7H,cAAL,CAAoBmI,WAApB,CAAgC5G,SAAhC,CACjC,UAACE,QAAD,EAAc;AACZ,kBAAM2G,SAAS,GAAG,OAAI,CAAC5D,aAAL,CAAmB6D,kBAAnB,CAAsC5G,QAAtC,CAAlB;;AACA,qBAAI,CAACc,IAAL,CAAU+F,UAAV,CAAqBF,SAArB;;AACA,kBAAIA,SAAS,CAAC5H,cAAV,CAAyB,cAAzB,CAAJ,EACE,OAAI,CAACoG,YAAL,GAAoBwB,SAAS,CAACG,YAA9B;;AACF,qBAAI,CAACsM,UAAL,CAAgB,OAAI,CAACpM,SAAL,EAAhB;AACD,aAPgC,CAAnC;AASD;AAxGwD;AAAA;AAAA,iDA0GrC;AAAA;;AAClB,iBAAK+P,2BAAL,GAAmC,KAAKJ,kBAAL,CAAwBK,MAAxB,CAA+BlX,SAA/B,CACjC,UAACwL,KAAD,EAAgB;AACd,qBAAI,CAACsL,eAAL,GAAuBtL,KAAK,CAAC2L,OAA7B;AACD,aAHgC,CAAnC;AAKD;AAhHwD;AAAA;AAAA,oCAkH/C;AACR,iBAAKnW,IAAL,CAAUmG,KAAV;AACA,iBAAKnG,IAAL,CAAU+F,UAAV,CAAqB;AACnBK,kBAAI,EAAE,CADa;AAEnBJ,0BAAY,EAAE,GAFK;AAGnBU,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD;AAHa,aAArB;AAKD;AAzHwD;AAAA;AAAA,sCA2H7C;AACV,iBAAK3G,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjC2L,oCAAsB,EAAE,CAAC,IAAD,CADS;AAEjCC,oCAAsB,EAAE,CAAC,IAAD,CAFS;AAGjCC,yCAA2B,EAAE,CAAC,IAAD,CAHI;AAIjCpU,qBAAO,EAAE,CAAC,IAAD,CAJwB;AAKjC2J,qBAAO,EAAE,CAAC,IAAD,CALwB;AAMjCC,4BAAc,EAAE,CAAC,IAAD,CANiB;AAOjCC,0BAAY,EAAE,CAAC,IAAD,CAPmB;AAQjCC,qBAAO,EAAE,CAAC,IAAD,CARwB;AASjC/B,kBAAI,EAAE,CAAC,CAAD,CAT2B;AAUjCJ,0BAAY,EAAE,CAAC,KAAK3B,YAAN,CAVmB;AAWjCqC,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD;AAX2B,aAAvB,CAAZ;AAaD;AAzIwD;AAAA;AAAA,2CA2IxCtC,YA3IwC,EA2I1B;AAC7B,iBAAKA,YAAL,GAAoBA,YAApB;AACA,iBAAK+D,QAAL;AACD;AA9IwD;AAAA;AAAA,0CAgJzC;AACd,gBAAMhK,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKC,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU;AAFZ,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE;AADb,aAToB,CAAtB;AAaD;AA/JwD;AAAA;AAAA,qCAiK9C;AACT,iBAAKsN,kBAAL,CAAwBnQ,IAAxB;AACA,iBAAK1F,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAKlF,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AAxKwD;AAAA;AAAA,oCA0K/C/G,MA1K+C,EA0KN;AAAA;;AACjD;AACA;AACA;AACA,iBAAKtB,aAAL,GAAqB,IAArB;AACA,iBAAKgY,kBAAL,CAAwB1M,IAAxB;AACA,iBAAKiN,iBAAL,GAAyBjX,MAAzB;AACA,iBAAK0W,kBAAL,CAAwBQ,cAAxB,CAAuC,KAAvC;AAEAC,sBAAU,CAAC,YAAM;AACf,qBAAI,CAACzY,aAAL,GAAqB,KAArB;AACD,aAFS,EAEP,GAFO,CAAV;AAGD;AAtLwD;AAAA;AAAA,qCAwL9CE,MAxL8C,EAwLrC;AAAA;;AAClB,gBAAI,CAAC,KAAKD,OAAV,EAAmB,KAAKD,aAAL,GAAqB,IAArB;AACnB,iBAAKuU,cAAL,CACGE,UADH,CACcvU,MADd,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACkT,OAAL,GAAenT,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAf;AACA,uBAAI,CAACkE,UAAL,GAAkBpF,QAAQ,CAACkB,IAAT,CAAc,OAAd,CAAlB;AACA,uBAAI,CAACoJ,QAAL,GAAgB,KAAhB;AACD,eAJD,MAIO;AACL,uBAAI,CAACA,QAAL,GAAgB,IAAhB;AACA,uBAAI,CAAC6I,OAAL,GAAe,EAAf;AACD;AACF,aAlBL,EAmBI,UAAChT,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,qBAAI,CAACmK,QAAL,GAAgB,IAAhB;AACD,aAtBL;AAwBD;AAlNwD;AAAA;AAAA,wCAqN3CgB,KArN2C,EAqNpC;AACnB,iBAAKxK,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B+B,KAAK,CAACC,IAArC;AACA,iBAAKrC,QAAL;AACD;AAxNwD;AAAA;AAAA,sCA0N7C;AACV,gBAAIqB,OAAO,GAAG,EAAd;AACA,gBAAIiB,IAAI,GAAG,KAAK1K,IAAL,CAAUE,KAArB;;AAEA,iBAAK,IAAIyK,IAAT,IAAiBD,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACC,IAAD,CAAR,EAAgB;AACd,oBAAID,IAAI,CAACC,IAAD,CAAJ,YAAsBnE,IAA1B,EACEiD,OAAO,CAACkB,IAAD,CAAP,GAAgB,KAAKzI,WAAL,CAAiB0I,gBAAjB,CAAkCF,IAAI,CAACC,IAAD,CAAtC,CAAhB,CADF,KAEKlB,OAAO,CAACkB,IAAD,CAAP,GAAgBD,IAAI,CAACC,IAAD,CAApB;AACN;AACF;;AAED,mBAAOlB,OAAP;AACD;AAvOwD;AAAA;AAAA,4CAyOvCtK,MAzOuC,EAyOE;AACzD,gBAAI0L,WAAJ;;AAEA,gBAAI1L,MAAM,CAACd,OAAP,IAAkB,CAAtB,EAAyB;AACvBwM,yBAAW,GAAG,gBAAd;AACD,aAFD,MAEO,IAAI1L,MAAM,CAACd,OAAP,IAAkB,CAAtB,EAAyB;AAC9BwM,yBAAW,GAAG,eAAd;AACD;;AAED,mBAAOA,WAAP;AACD;AAnPwD;AAAA;AAAA,qCAqP9C1L,MArP8C,EAqPH;AAAA;;AACpD,gBAAM2L,IAAI,GAAG3L,MAAM,CAACd,OAAP,IAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAAvC;AAEA,iBAAK0M,aAAL,CAAmBD,IAAnB,EACGE,YADH,GAEGnL,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACC,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AAEb,qBAAI,CAACjC,aAAL,GAAqB,IAArB;AACAsB,oBAAM,CAACd,OAAP,GAAiByM,IAAjB;AACA,qBAAO,OAAI,CAACsH,cAAL,CAAoBM,WAApB,CAAgCvT,MAAhC,CAAP;AACD,aAND,CAJJ,EAWI,iEAAS,YAAM;AACb,qBAAI,CAACtB,aAAL,GAAqB,KAArB;AACD,aAFD,CAXJ,EAeGmB,SAfH,CAgBI,UAACI,OAAD,EAAkB;AAChB,qBAAI,CAAC5B,OAAL,CAAa4B,OAAb;AACD,aAlBL,EAmBI,UAACC,KAAD,EAAgB;AACdF,oBAAM,CAACd,OAAP,GAAiBc,MAAM,CAACd,OAAP,IAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAA3C;;AACA,qBAAI,CAACb,OAAL,CAAa6B,KAAb;AACD,aAtBL;AAwBD;AAhRwD;AAAA;AAAA,wCAkR3CyL,IAlR2C,EAkRvC;AAChB,gBAAIA,IAAI,IAAI,CAAZ,EACE,OAAO,KAAKpN,mBAAL,CAAyBkC,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAQF,mBAAO,KAAKlC,mBAAL,CAAyBkC,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AAnSwD;AAAA;AAAA,qCAqSjD;AACN,gBAAIuK,IAAI,GAAG,IAAI3D,IAAJ,GAAW0E,kBAAX,GAAgCC,KAAhC,CAAsC,GAAtC,CAAX;AAAA,gBACEC,UAAU,aAAMjB,IAAI,CAAC,CAAD,CAAV,SAAgBA,IAAI,CAAC,CAAD,CAApB,SAA0BA,IAAI,CAAC,CAAD,CAA9B,CADZ;AAGA,gBAAIkB,cAAc,GAAQ,EAA1B;AACAA,0BAAc,GAAG,KAAKgH,OAAL,CAAakE,MAAb,CAAoB,KAAKnT,UAAzB,CAAjB;AAEA,iBAAKrB,WAAL,CAAiBuJ,UAAjB,CAA4BD,cAA5B,mBAAsDD,UAAtD;AACD;AA7SwD;;AAAA;AAAA,S;;;;gBA/BlD;;gBAIA;;gBAJQ;;gBAOR;;gBANW;;gBAQX;;gBAJA;;gBAGA;;gBAEA;;gBAJA;;;;AAyBIwK,oDAA8C,6DAL1D,gEAAU;AACT9U,gBAAQ,EAAE,2CADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAK0D,E,+EAuExC,sD,EACE,2F,EACO,8D,EACA,iG,EACH,0D,EACA,qF,EACQ,uG,EACN,0F,EACF,sF,EACO,qG,EAhF2B,GAA9C6U,8CAA8C,CAA9C;;;;;;;;;;;;;;;;ACjCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKFY,WAAW;;;;AACtB,eAAAC,MAAA,GAAwB,CACtB,OADsB,EAEtB,SAFsB,EAGtB,OAHsB,EAItB,OAJsB,EAKtB,MALsB,EAMtB,OANsB,EAOtB,OAPsB,EAQtB,QARsB,EAStB,YATsB,EAUtB,SAVsB,EAWtB,WAXsB,EAYtB,WAZsB,CAAxB;AAeA,eAAAC,KAAA,GAAuB,CACrB,SADqB,EAErB,OAFqB,EAGrB,QAHqB,EAIrB,WAJqB,EAKrB,QALqB,EAMrB,SANqB,EAOrB,QAPqB,CAAvB;AA4ND;;AA5OuB;AAAA;AAAA,kCA0BdC,KA1Bc,EA0BDC,KA1BC,EA0BU;AAC9B,mBACED,KAAK,CAACE,WAAN,OAAwBD,KAAK,CAACC,WAAN,EAAxB,IACAF,KAAK,CAACG,QAAN,OAAqBF,KAAK,CAACE,QAAN,EADrB,IAEAH,KAAK,CAACI,OAAN,OAAoBH,KAAK,CAACG,OAAN,EAHtB;AAKD;AAhCqB;AAAA;AAAA,wCAkCRC,IAlCQ,EAkCE;AACtB,gBAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAL,EAAjB;AACA,gBAAMC,UAAU,GAAGF,IAAI,CAACE,UAAL,EAAnB;AACA,gBAAIC,KAAJ,EAAgBC,OAAhB;;AAEA,gBAAIH,QAAQ,GAAG,EAAf,EAAmB;AACjBE,mBAAK,cAAOF,QAAP,CAAL;AACD,aAFD,MAEO;AACLE,mBAAK,GAAGF,QAAR;AACD;;AAED,gBAAIC,UAAU,GAAG,EAAjB,EAAqB;AACnBE,qBAAO,cAAOF,UAAP,CAAP;AACD,aAFD,MAEO;AACLE,qBAAO,GAAGF,UAAV;AACD;;AAED,6BAAUC,KAAV,cAAmBC,OAAnB;AACD;AApDqB;AAAA;AAAA,sCAsDVT,KAtDU,EAsDGC,KAtDH,EAsDyC;AAAA,gBAAxBS,QAAwB,uEAAJ,IAAI;AAC7D,gBAAMC,GAAG,GAAGX,KAAK,CAACI,OAAN,EAAZ;AACA,gBAAMQ,OAAO,GAAGZ,KAAK,CAACa,MAAN,EAAhB;AACA,gBAAMC,KAAK,GAAGd,KAAK,CAACG,QAAN,EAAd;AACA,gBAAMY,IAAI,GAAGf,KAAK,CAACE,WAAN,EAAb;AACA,gBAAMc,IAAI,GAAG,KAAKC,aAAL,CAAmBjB,KAAnB,CAAb;;AAEA,gBAAIU,QAAJ,EAAc;AACZ,kBAAIT,KAAJ,EAAW;AACT,oBAAMiB,KAAK,GAAG,KAAKD,aAAL,CAAmBhB,KAAnB,CAAd;AAEA,iCAAU,KAAKF,KAAL,CAAWa,OAAX,CAAV,eAAkCD,GAAlC,iBAA4C,KAAKb,MAAL,CAAYgB,KAAZ,CAA5C,kBAAsEC,IAAtE,qBAAqFC,IAArF,oBAAmGE,KAAnG;AACD;;AAED,+BAAU,KAAKnB,KAAL,CAAWa,OAAX,CAAV,eAAkCD,GAAlC,iBAA4C,KAAKb,MAAL,CAAYgB,KAAZ,CAA5C,kBAAsEC,IAAtE,oBAAoFC,IAApF;AACD,aARD,MAQO;AACL,+BAAU,KAAKjB,KAAL,CAAWa,OAAX,CAAV,eAAkCD,GAAlC,iBAA4C,KAAKb,MAAL,CAAYgB,KAAZ,CAA5C,kBAAsEC,IAAtE;AACD;AACF;AAxEqB;AAAA;AAAA,uCA0ETV,IA1ES,EA0EC;AACrB,mBAAO,KAAKP,MAAL,CAAYO,IAAI,CAACF,QAAL,EAAZ,CAAP;AACD;AA5EqB;AAAA;AAAA,4CA8EP;AACb,gBAAIE,IAAI,GAAG,IAAIxQ,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAASwQ,IAAI,CAACH,WAAL,EAAT,EAA6B,CAA7B,EAAgC,CAAhC,CAAP;AACD;AAjFqB;AAAA;AAAA,2CAmFR;AACZ,gBAAIG,IAAI,GAAG,IAAIxQ,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAASwQ,IAAI,CAACH,WAAL,EAAT,EAA6B,EAA7B,EAAiC,EAAjC,CAAP;AACD;AAtFqB;AAAA;AAAA,6CAwFN;AACd,gBAAIG,IAAI,GAAG,IAAIxQ,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAASwQ,IAAI,CAACH,WAAL,EAAT,EAA6BG,IAAI,CAACF,QAAL,EAA7B,EAA8C,CAA9C,CAAP;AACD;AA3FqB;AAAA;AAAA,4CA6FP;AACb,gBAAIE,IAAI,GAAG,IAAIxQ,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAASwQ,IAAI,CAACH,WAAL,EAAT,EAA6BG,IAAI,CAACF,QAAL,KAAkB,CAA/C,EAAkD,CAAlD,CAAP;AACD;AAhGqB;AAAA;AAAA,qCAkGd;AACN,gBAAIE,IAAI,GAAG,IAAIxQ,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAASwQ,IAAI,CAACH,WAAL,EAAT,EAA6BG,IAAI,CAACF,QAAL,EAA7B,EAA8CE,IAAI,CAACD,OAAL,EAA9C,CAAP;AACD,WArGqB,CAuGtB;;AAvGsB;AAAA;AAAA,2CAwGR;AACZ,gBAAMe,WAAW,GAAG,IAAItR,IAAJ,EAApB;AACA,gBAAMuR,WAAW,GAAG,IAAIvR,IAAJ,CAASsR,WAAT,CAApB;AAEAC,uBAAW,CAACC,OAAZ,CAAoBF,WAAW,CAACf,OAAZ,KAAwBe,WAAW,CAACN,MAAZ,EAAxB,IAAgDM,WAAW,CAACN,MAAZ,OAAyB,CAAzB,GAA6B,CAAC,CAA9B,GAAkC,CAAlF,CAApB;AACAO,uBAAW,CAACE,QAAZ,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AAEA,mBAAOF,WAAP;AACD,WAhHqB,CAkHtB;;AAlHsB;AAAA;AAAA,yCAmHV;AACV,gBAAMD,WAAW,GAAG,IAAItR,IAAJ,EAApB;AACA,gBAAM0R,SAAS,GAAG,IAAI1R,IAAJ,CAASsR,WAAT,CAAlB;AAEAI,qBAAS,CAACF,OAAV,CAAkBF,WAAW,CAACf,OAAZ,KAAwBe,WAAW,CAACN,MAAZ,EAAxB,GAA+C,CAAjE;AACAU,qBAAS,CAACD,QAAV,CAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,GAA/B;AAEA,mBAAOC,SAAP;AACD;AA3HqB;AAAA;AAAA,0CA6HNlB,IA7HM,EA6HI;AACxB,gBAAMmB,CAAC,GAAGnB,IAAI,CAACH,WAAL,EAAV;AACA,gBAAIuB,CAAC,GAAQpB,IAAI,CAACF,QAAL,KAAkB,CAA/B;AACA,gBAAIuB,CAAC,GAAQrB,IAAI,CAACD,OAAL,EAAb;AACA,gBAAIuB,CAAC,GAAQtB,IAAI,CAACC,QAAL,EAAb;AACA,gBAAIsB,CAAC,GAAQvB,IAAI,CAACE,UAAL,EAAb;AAEA,gBAAIkB,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIC,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIC,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIC,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AAEZ,6BAAUJ,CAAV,cAAeC,CAAf,cAAoBC,CAApB,cAAyBC,CAAzB,cAA8BC,CAA9B;AACD;AA1IqB;AAAA;AAAA,iDA4ICvB,IA5ID,EA4IW;AAC/B,gBAAImB,CAAC,GAAGnB,IAAI,CAACH,WAAL,GAAmB2B,QAAnB,EAAR;AACA,gBAAIJ,CAAC,GAAG,CAACpB,IAAI,CAACF,QAAL,KAAkB,CAAnB,EAAsB0B,QAAtB,GAAiCC,QAAjC,CAA0C,CAA1C,EAA6C,GAA7C,CAAR;AACA,gBAAIJ,CAAC,GAAGrB,IAAI,CAACD,OAAL,GAAeyB,QAAf,GAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAR;AACA,gBAAIH,CAAC,GAAGtB,IAAI,CAACC,QAAL,GAAgBuB,QAAhB,GAA2BC,QAA3B,CAAoC,CAApC,EAAuC,GAAvC,CAAR;AACA,gBAAIF,CAAC,GAAGvB,IAAI,CAACE,UAAL,GAAkBsB,QAAlB,GAA6BC,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAR;AACA,gBAAIC,CAAC,GAAG1B,IAAI,CAAC2B,UAAL,GAAkBH,QAAlB,GAA6BC,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAR;AAEA,6BAAUJ,CAAV,cAAeD,CAAf,cAAoBD,CAApB,cAAyBG,CAAzB,cAA8BC,CAA9B,cAAmCG,CAAnC;AACD;AArJqB;AAAA;AAAA,2CAuJLE,IAvJK,EAuJO;AAC3B,gBAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,kBAAIC,SAAS,GAAGD,IAAI,CAACzN,KAAL,CAAW,GAAX,CAAhB;AAEA,+BAAU0N,SAAS,CAAC,CAAD,CAAnB,cAA0BA,SAAS,CAAC,CAAD,CAAnC;AACD;;AAED,mBAAOD,IAAP;AACD;AA/JqB;AAAA;AAAA,2CAiKL5B,IAjKK,EAiKK;AACzB,gBAAIqB,CAAC,GAAQrB,IAAI,CAACD,OAAL,EAAb;AACA,gBAAIqB,CAAC,GAAQpB,IAAI,CAACF,QAAL,KAAkB,CAA/B;AACA,gBAAIqB,CAAC,GAAQnB,IAAI,CAACH,WAAL,EAAb;AAEA,gBAAIwB,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAID,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AAEZ,6BAAUC,CAAV,cAAeD,CAAf,cAAoBD,CAApB;AACD;AA1KqB;AAAA;AAAA,8CA4KFW,UA5KE,EA4KeC,QA5Kf,EA4K+B;AACnD,gBAAI/B,IAAJ;;AAEA,gBAAI8B,UAAU,CAACE,OAAX,CAAmB,GAAnB,IAA0B,CAAC,CAA/B,EAAkC;AAChC,kBAAMC,eAAe,GAAGH,UAAU,CAAC3N,KAAX,CAAiB,GAAjB,CAAxB;AACA,kBAAM+N,SAAS,GAAGD,eAAe,CAAC,CAAD,CAAf,CAAmB9N,KAAnB,CAAyB,GAAzB,CAAlB;AACA,kBAAM0N,SAAS,GAAGI,eAAe,CAAC,CAAD,CAAf,CAAmB9N,KAAnB,CAAyB,GAAzB,CAAlB;;AAEA,kBAAI4N,QAAQ,IAAI,OAAhB,EAAyB;AACvB/B,oBAAI,GAAG,IAAIxQ,IAAJ,CACL0S,SAAS,CAAC,CAAD,CADJ,EAELC,QAAQ,CAACD,SAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,SAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,EAILP,SAAS,CAAC,CAAD,CAJJ,EAKLA,SAAS,CAAC,CAAD,CALJ,EAMLA,SAAS,CAAC,CAAD,CANJ,CAAP;AAQD,eATD,MASO,IAAIE,QAAQ,IAAI,KAAhB,EAAuB;AAC5B/B,oBAAI,GAAG,IAAIxQ,IAAJ,CACL0S,SAAS,CAAC,CAAD,CADJ,EAELC,QAAQ,CAACD,SAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,SAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,EAILP,SAAS,CAAC,CAAD,CAJJ,EAKLA,SAAS,CAAC,CAAD,CALJ,EAMLA,SAAS,CAAC,CAAD,CANJ,CAAP;AAQD;AACF,aAxBD,MAwBO;AACL,kBAAMK,UAAS,GAAGJ,UAAU,CAAC3N,KAAX,CAAiB,GAAjB,CAAlB;;AAEA,kBAAI4N,QAAQ,IAAI,OAAhB,EAAyB;AACvB/B,oBAAI,GAAG,IAAIxQ,IAAJ,CACL0S,UAAS,CAAC,CAAD,CADJ,EAELC,QAAQ,CAACD,UAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,UAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,CAAP;AAKD,eAND,MAMO,IAAIL,QAAQ,IAAI,KAAhB,EAAuB;AAC5B/B,oBAAI,GAAG,IAAIxQ,IAAJ,CACL0S,UAAS,CAAC,CAAD,CADJ,EAELC,QAAQ,CAACD,UAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,UAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,CAAP;AAKD;AACF;;AAED,mBAAOpC,IAAP;AACD;AA1NqB;AAAA;AAAA,4CA4NJ8B,UA5NI,EA4NaC,QA5Nb,EA4N6B;AACjD,gBAAMG,SAAS,GAAGJ,UAAU,CAAC3N,KAAX,CAAiB,GAAjB,CAAlB;AACA,gBAAI6L,IAAJ;;AAEA,gBAAI+B,QAAQ,IAAI,OAAhB,EAAyB;AACvB/B,kBAAI,aAAMkC,SAAS,CAAC,CAAD,CAAf,cAAsBA,SAAS,CAAC,CAAD,CAA/B,cAAsCA,SAAS,CAAC,CAAD,CAA/C,CAAJ;AACD,aAFD,MAEO,IAAIH,QAAQ,IAAI,KAAhB,EAAuB;AAC5B/B,kBAAI,aAAMkC,SAAS,CAAC,CAAD,CAAf,cAAsBA,SAAS,CAAC,CAAD,CAA/B,cAAsCA,SAAS,CAAC,CAAD,CAA/C,CAAJ;AACD;;AAED,mBAAOlC,IAAP;AACD;AAvOqB;AAAA;AAAA,wCAyORA,IAzOQ,EAyOIqC,IAzOJ,EAyOgB;AACpC,mBAAO,IAAI7S,IAAJ,CAASwQ,IAAI,CAACgB,OAAL,CAAahB,IAAI,CAACD,OAAL,KAAiBsC,IAA9B,CAAT,CAAP;AACD;AA3OqB;;AAAA;AAAA,S;;AAAX7C,iBAAW,6DAHvB,iEAAW;AACV5K,kBAAU,EAAE;AADF,OAAX,CAGuB,GAAX4K,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCDb;AAIA;AAGA;AAUA;AAOA;;;UAOa8C,sDAAsD;AA4CjE,wEACUxX,WADV,EAEUtE,OAFV,EAGUsO,MAHV,EAIUrO,cAJV,EAKUuE,YALV,EAMUN,aANV,EAOUG,wBAPV,EAQUK,WARV,EASUP,mBATV,EAUUC,uBAVV,EAWUoK,YAXV,EAYU/J,aAZV,EAaUgK,iBAbV,EAa8C;AAAA;;AAZpC,eAAAnK,WAAA,GAAAA,WAAA;AACA,eAAAtE,OAAA,GAAAA,OAAA;AACA,eAAAsO,MAAA,GAAAA,MAAA;AACA,eAAArO,cAAA,GAAAA,cAAA;AACA,eAAAuE,YAAA,GAAAA,YAAA;AACA,eAAAN,aAAA,GAAAA,aAAA;AACA,eAAAG,wBAAA,GAAAA,wBAAA;AACA,eAAAK,WAAA,GAAAA,WAAA;AACA,eAAAP,mBAAA,GAAAA,mBAAA;AACA,eAAAC,uBAAA,GAAAA,uBAAA;AACA,eAAAoK,YAAA,GAAAA,YAAA;AACA,eAAA/J,aAAA,GAAAA,aAAA;AACA,eAAAgK,iBAAA,GAAAA,iBAAA;AAtDV,eAAAsN,YAAA,GAAc,IAAd;AAEA,eAAAjR,cAAA,GAA6B,EAA7B;AAGA,eAAAsF,cAAA,GAAiB,IAAjB;AAOA,eAAA4L,UAAA,GAAY,IAAZ;AACA,eAAAtN,YAAA,GAAe,KAAf,CAyC8C,CAvC9C;;AACA,eAAApO,OAAA,GAAU,KAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB;AAKA,eAAA+E,wBAAA,GAA2B,KAA3B,CAgC8C,CA9B9C;;AACA,eAAA8K,YAAA,GAAgC,EAAhC;AACA,eAAA1K,SAAA,GAAY,EAAZ;AACA,eAAAG,iBAAA,GAAoB,EAApB;AACA,eAAAN,YAAA,GAAe,EAAf;AACA,eAAAC,QAAA,GAAW,EAAX;AAEA;;AACA,eAAAuB,YAAA,GAAe,EAAf;AACA,eAAA4J,kBAAA,GAAoB,EAApB;AACA,eAAA3J,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AACA,eAAA2J,KAAA,GAAQ,CAAR;AACA,eAAAC,GAAA,GAAM,EAAN;AACA;;AAEA,eAAA5E,YAAA,GAA8D,EAA9D;AAwBO,eAAA6C,KAAA,GAAQ,kDAAQA,KAAhB;AARL,eAAK1K,aAAL,CAAmB8C,GAAnB,CAAuB,OAAvB;AACA,eAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAP,CACd,EADc,EAEd;AAAEC,0BAAc,EAAE;AAAlB,WAFc,EAGd;AAAEC,4BAAgB,EAAE;AAApB,WAHc,EAId;AAAEC,2BAAe,EAAE;AAAnB,WAJc,CAAhB;AAMD;;AAlEgE;AAAA;AAAA,qCAqEzD;AACN,iBAAKuH,eAAL;AACA,iBAAKrH,aAAL;AACA,iBAAKsH,cAAL;AACA,iBAAKrH,gBAAL;AACA,iBAAKG,oBAAL;AACA,iBAAKF,WAAL;AAED;AA7EgE;AAAA;AAAA,4CA+ElD;AACb,iBAAK+G,iBAAL,CAAuBI,eAAvB,GAAyCrN,SAAzC;AACD;AAjFgE;AAAA;AAAA,6CAmF9C;AACjB,gBAAMyK,OAAO,GAAG,KAAKhM,cAAL,CAAoBO,QAApB,CAA6BD,MAA7C;;AACA,gBAAI0L,OAAO,CAACxL,cAAR,CAAuB,IAAvB,CAAJ,EAAkC;AAChC,mBAAKgI,eAAL,CAAqB;AAAEY,iCAAiB,EAAE4C,OAAO,CAAC,IAAD;AAA5B,eAArB;AACA,mBAAKV,iBAAL,CAAuB;AAAElC,iCAAiB,EAAE4C,OAAO,CAAC,IAAD,CAA5B;AAAoCpL,uBAAO,EAAC;AAA5C,eAAvB;AACD,aAHD,MAGO;AACL,mBAAKmQ,aAAL;AACD;AACF;AA3FgE;AAAA;AAAA,0CA+FjDzQ,MA/FiD,EA+FxC;AAAA;;AACvB,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAAEpL,OAAT,GAAiB,KAAKob,sBAAL,CAA4BvZ,KAA5B,CAAkC,SAAlC,CAAjB;AACAuJ,mBAAO,CAACG,OAAR,GAAkB,GAAlB;AACA,gBAAMc,IAAI,GAAG,KAAK+O,sBAAL,CAA4BvZ,KAAzC;AACA,iBAAKoC,mBAAL,GAA2B,IAA3B;AACA,gBAAIoI,IAAI,CAAC,UAAD,CAAR,EAAsBjB,OAAO,CAACiB,IAAI,CAAC,WAAD,CAAL,CAAP,GAA6BA,IAAI,CAAC,UAAD,CAAjC;AACtB,iBAAK9I,uBAAL,CACG2I,eADH,CACmBd,OADnB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACyC,mBAAL,GAA2B,KAA3B;AACD,aAFD,CAHJ,EAOGtD,SAPH,CAQI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,oBAAGD,QAAQ,CAACkB,IAAT,CAAc,cAAd,MAAiC,GAApC,EAAwC;AACtC,yBAAI,CAAC5C,OAAL,CAAawM,MAAb,CAAoB,6BAApB;;AACA,yBAAI,CAACnH,YAAL,GAAoB,EAApB;AACA,yBAAI,CAAC0W,YAAL,GAAoB,IAApB;AACA;AACD;;AACD,uBAAI,CAAC1W,YAAL,GAAoB3D,QAAQ,CAACkB,IAAT,CAAc,QAAd,CAApB;AACA,uBAAI,CAACkE,UAAL,GAAkBpF,QAAQ,CAACkB,IAAT,CAAc,QAAd,EAAwB5B,MAA1C;AACA,uBAAI,CAAC+a,YAAL,GAAoB,KAApB;AAED,eAXD,MAWO;AACL,uBAAI,CAAC/b,OAAL,CAAawM,MAAb,CAAoB,6BAApB;;AACA,uBAAI,CAACnH,YAAL,GAAoB,EAApB;AACA,uBAAI,CAAC0W,YAAL,GAAoB,IAApB;AACD;AACF,aAzBL,EA0BI,UAACla,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,qBAAI,CAACwD,YAAL,GAAoB,EAApB;AACD,aA7BL;AA+BD;AArIgE;AAAA;AAAA,sCAuIrD9E,MAvIqD,EAuI5C;AAAA;;AACnB,iBAAK0E,eAAL,GAAqB,IAArB;AACA,iBAAKb,uBAAL,CACGsD,WADH,CACenH,MADf,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC4C,eAAL,GAAuB,KAAvB;AACD,aAFD,CAHJ,EAOGzD,SAPH,CAQI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC2D,QAAL,GAAgB5D,QAAQ,CAACkB,IAAT,CAAc,QAAd,CAAhB;AACD,eAFD,MAEO;AACL,uBAAI,CAAC5C,OAAL,CAAawM,MAAb,CAAoB,6BAApB;;AACA,uBAAI,CAAClH,QAAL,GAAgB,EAAhB;AACD;AACF,aAfL,EAgBI,UAACzD,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,qBAAI,CAACyD,QAAL,GAAgB,EAAhB;AACD,aAnBL;AAqBD;AA9JgE;AAAA;AAAA,+CAgK5C/E,MAhK4C,EAgKnC;AAAA;;AAC5B,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAACpL,OAAR,GAAkB,GAAlB;AACAoL,mBAAO,CAACG,OAAR,GAAkB,GAAlB;;AAEA,gBAAG,CAAC,KAAKnM,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCE,cAApC,CAAmD,IAAnD,CAAJ,EAA6D;AAC3DwL,qBAAO,CAAChC,OAAR,GAAkB,GAAlB;AACD;;AAEH,iBAAK7E,wBAAL,GAAgC,IAAhC;AACA,iBAAKf,wBAAL,CACGuD,oBADH,CACwBqE,OADxB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC+C,wBAAL,GAAgC,KAAhC;AACD,aAFD,CAHJ,EAOG5D,SAPH,CAOa,UAACE,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACgE,iBAAL,GAAyBjE,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAzB;AACD,eAFD,MAEM;AACJ,uBAAI,CAAC+C,iBAAL,GAAyB,EAAzB;AACD;AACF,aAbH,EAcE,UAAC9D,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,iDAAnB;AACD,aAhBH;AAkBC;AA5LgE;AAAA;AAAA,4CA8L/CtB,MA9L+C,EA8LtC;AAAA;;AACzB,iBAAKF,aAAL,GAAqB,IAArB;AACA,iBAAK0E,gBAAL,GAAwB,IAAxB;AACA,iBAAKZ,mBAAL,CACGoH,iBADH,CACqBhL,MADrB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAChC,aAAL,GAAqB,KAArB;AACA,qBAAI,CAAC0E,gBAAL,GAAwB,KAAxB;AACD,aAHD,CAHJ,EAQGvD,SARH,CAQa,UAAOE,QAAP;AAAA,qBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACzBA,QAAQ,CAACC,MAAT,KAAoB,GADK;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIvB6D,iCAJuB,GAIX9D,QAAQ,CAAC,MAAD,CAAR,CAAiB,MAAjB,CAJW;;AAKvBT,+BALuB,GAKb,SAAVA,OAAU;AAAA,iCAAMuE,SAAS,CAACtE,OAAV,CAAkB;AAAA,mCAAM,OAAI,CAAC8P,aAAL,EAAN;AAAA,2BAAlB,CAAN;AAAA,yBALa;;AAAA;AAM7B,+BAAM1P,OAAO,CAACC,OAAR,CAAgBN,OAAO,EAAvB,CAAN;;AAN6B;AAO7B,6BAAKuB,IAAL,CAAUC,GAAV,CAAc,WAAd,EAA2B8F,UAA3B,CAAsC/C,SAAtC;;AAP6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB;AAAA,aARb,EAkBE,UAAC3D,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,oCAAnB;AACD,aApBH;AAsBD;AAvNgE;AAAA;AAAA,0CAyNjDtB,MAzNiD,EAyNS;AAAA;;AACxE,iBAAKD,OAAL,GAAe,IAAf;;AACA,gBAAM2L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA,iBAAK4D,mBAAL,CACGsE,eADH,CACmBwD,OADnB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACqK,QAAL,GAAgB,IAAhB;AACA,uBAAI,CAACD,YAAL,GAAoB,EAApB;AACA;AACD;;AACD,kBAAMmQ,KAAK,GAAGxa,QAAQ,CAACkB,IAAT,CAAc,MAAd,EAAsB,CAAtB,CAAd;AACAsZ,mBAAK,CAACvS,iBAAN,GAA0B,IAAIX,IAAJ,CAASkT,KAAK,CAACvS,iBAAf,CAA1B;;AACA,qBAAI,CAACnH,IAAL,CAAU+F,UAAV,CAAqB2T,KAArB;;AACA,qBAAI,CAAClQ,QAAL,GAAgB,KAAhB;AACD,aAnBL,EAoBI,UAACnK,KAAD,EAAgB;AAChB,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aA1BH;AA4BD;AAxPgE;AAAA;AAAA,0CA0PpD;AACX,gBAAMjB,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKoE,QAAL,GAAgB,UAAhB;AACA,iBAAKT,YAAL,CAAkBU,QAAlB,CAA2B,KAAKD,QAAhC;AACA,iBAAKnE,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU,EAAE;AAFd,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE,eADb;AAEEC,wBAAU;AAFZ,aAToB,EAapB;AACED,uBAAS,EAAE,KAAKkE;AADlB,aAboB,CAAtB;AAiBD;AA/QgE;AAAA;AAAA,wCAiRnDkN,UAjRmD,EAiRvC;AACxB,iBAAK3Z,IAAL,CAAUC,GAAV,CAAc,SAAd,EAAyB8F,UAAzB,CAAoC4T,UAAU,CAACC,YAA/C;AACA,iBAAK5Z,IAAL,CAAUiN,QAAV,CAAmB,SAAnB,EAA8B4M,WAA9B,CAA0C;AAAEC,sBAAQ,EAAE;AAAZ,aAA1C;AACA,iBAAK9Z,IAAL,CAAUC,GAAV,CAAc,WAAd,EAA2B8F,UAA3B,CAAsC4T,UAAU,CAACtJ,EAAjD;AACA,iBAAKrQ,IAAL,CAAUiN,QAAV,CAAmB,WAAnB,EAAgC4M,WAAhC,CAA4C;AAAEC,sBAAQ,EAAE;AAAZ,aAA5C;AACD;AAtRgE;AAAA;AAAA,sCAwRrD7J,QAxRqD,EAwR3C;AACpB,gBAAMC,SAAS,GAAG,MAAH,OAAG,CAAH,kBAAOD,QAAP,CAAG,EAAY;AAAC,yBAAW;AAAZ,aAAZ,CAAlB;;AACA,gBAAME,EAAE,GAAG,KAAKnQ,IAAL,CAAUC,GAAV,CAAc,WAAd,CAAX;AACAkQ,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwB0F,UAAxB,CAAmCmK,SAAnC;AACAC,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwBJ,GAAxB,CAA4B,WAA5B,EAAyC8F,UAAzC,CAAoDmK,SAAS,CAACG,EAA9D;AACD,WA7RgE,CA+RjE;;AA/RiE;AAAA;AAAA,2CAgSnD;AACZ,iBAAKrQ,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjCC,+BAAiB,EAAC,CAAC,IAAD,CADe;AAEjCkT,oCAAsB,EAAE,CAAC,IAAD,CAFS;AAGjCjT,0BAAY,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAW8F,QAAZ,CAAP,CAHmB;AAIjC7F,qBAAO,EAAE,CAAC;AAAC7G,qBAAK,EAAE,IAAR;AAAc2Q,wBAAQ,EAAE;AAAxB,eAAD,EAA+B,2DAAWjE,QAA1C,CAJwB;AAKjCoN,uBAAS,EAAE,CAAC,IAAD,CALsB;AAMjC7S,+BAAiB,EAAG,CAAC,IAAD,EAAO,CAAC,2DAAWyF,QAAZ,CAAP,CANa;AAOjCvF,oCAAsB,EAAE,CAAC,IAAD,CAPS;AAQjCC,qBAAO,EAAE,CAAC,IAAD,CARwB;AASjCG,qBAAO,EAAE,CAAC,IAAD,CATwB;AAUjCC,yCAA2B,EAAE,CAAC,IAAD,CAVI;AAWjCE,uBAAS,EAAE,CAAC,IAAD,CAXsB;AAYjCE,qBAAO,EAAE,CAAC;AAAC5H,qBAAK,EAAE,IAAR;AAAc2Q,wBAAQ,EAAE;AAAxB,eAAD,EAA+B,2DAAWjE,QAA1C,CAZwB;AAajCvO,qBAAO,EAAE,CAAC,GAAD,EAAM,CAAC,2DAAWuO,QAAZ,CAAN,CAbwB;AAcjC5E,qBAAO,EAAE,CAAC,IAAD,CAdwB;AAejChF,uBAAS,EAAE,KAAKlB,WAAL,CAAiBgN,KAAjB,CAAuB,EAAvB;AAfsB,aAAvB,CAAZ;AAiBA,iBAAKO,gBAAL,GAAwB,KAAKvN,WAAL,CAAiB8E,KAAjB,CAAuB;AAC7CoI,uBAAS,EAAE,CAAC,SAAD,CADkC;AAE7CC,sBAAQ,EAAE,CAAC,IAAD,EAAO,2DAAWrC,QAAlB,CAFmC;AAG7C0C,yBAAW,EAAC,CAAC,IAAD,CAHiC;AAI7C/H,qBAAO,EAAC,CAAC,IAAD,CAJqC;AAK7CgI,qBAAO,EAAC,CAAC,IAAD,CALqC;AAM7CC,qBAAO,EAAC,CAAC,IAAD,CANqC;AAO7CnR,qBAAO,EAAE,CAAC,GAAD;AAPoC,aAAvB,CAAxB;AASA,iBAAKob,sBAAL,GAA8B,KAAK3X,WAAL,CAAiB8E,KAAjB,CAAuB;AACnDoI,uBAAS,EAAE,CAAC,cAAD,CADwC;AAEnDC,sBAAQ,EAAE,CAAC,IAAD,EAAO,2DAAWrC,QAAlB,CAFyC;AAGnD0C,yBAAW,EAAE,CAAC,IAAD,CAHsC;AAInDsK,0BAAY,EAAE,CAAC,IAAD,CAJqC;AAKnDK,qBAAO,EAAE,CAAC,IAAD,CAL0C;AAMnDC,yBAAW,EAAE,CAAC,IAAD,CANsC;AAOnD7b,qBAAO,EAAE,CAAC,GAAD;AAP0C,aAAvB,CAA9B;AASD,WApUgE,CAsUjE;;AAtUiE;AAAA;AAAA,uCAuUpDwO,KAvUoD,EAuUrC;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AA5UgE;AAAA;AAAA,yCA8UlDA,KA9UkD,EA8UtC;AACzBA,iBAAK,GAAG,KAAK7M,IAAL,CAAUC,GAAV,CAAc4M,KAAd,CAAR;;AAEA,gBAAIA,KAAK,CAACsN,MAAN,IAAgB,IAApB,EAA0B;AACxB,kBAAItN,KAAK,CAACsN,MAAN,CAAalc,cAAb,CAA4B,UAA5B,KAA2C4O,KAAK,CAACE,OAArD,EAA8D;AAC5D,uBAAO,UAAP;AACD;;AAED,kBAAIF,KAAK,CAACsN,MAAN,CAAalc,cAAb,CAA4B,WAA5B,KAA4C4O,KAAK,CAACE,OAAtD,EAA+D;AAC7D,uBAAO,WAAP;AACD;;AAED,kBAAIF,KAAK,CAACsN,MAAN,CAAalc,cAAb,CAA4B,WAA5B,KAA4C4O,KAAK,CAACE,OAAtD,EAA+D;AAC7D,uBAAO,WAAP;AACD;AACF;;AAED,mBAAO,EAAP;AACD;AAhWgE;AAAA;AAAA,0CAmW/DqN,eAnW+D,EAoW/DC,oBApW+D,EAoWlC;AAE7B,gBAAID,eAAe,CAAClN,SAApB,EAA+B;AAC7B,kBAAMA,SAAS,GAAGkN,eAAe,CAAClN,SAAhB,CAA0B,EAA1B,CAAlB;;AACA,kBAAIA,SAAS,IAAIA,SAAS,CAACN,QAA3B,EAAqC;AACnC,uBAAO,aAAP;AACD;AACF;;AAED,gBAAIyN,oBAAJ,EAA0B;AACxB,mBAAK,IAAMC,WAAX,IAA0BF,eAAe,CAAC,UAAD,CAAzC,EAAuD;AACrD,oBAAIA,eAAe,CAAC,UAAD,CAAf,CAA4BE,WAA5B,CAAJ,EAA8C;AAC5C,sBACE,KAAKC,eAAL,CAAqBH,eAAe,CAAC,UAAD,CAAf,CAA4BE,WAA5B,CAArB,KACAA,WAAW,IAAID,oBAFjB,EAGE;AACA,2BAAO,aAAP;AACD;AACF;AACF;AACF;;AAED,mBAAO,EAAP;AACD;AA3XgE;AAAA;AAAA,0CA6XjDtc,MA7XiD,EA6XzC;AAAA;;AACtB,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAAEpL,OAAT,GAAkB,KAAKgR,gBAAL,CAAsBnP,KAAtB,CAA4B,SAA5B,CAAlB;AACAuJ,mBAAO,CAAEzD,YAAT,GAAwB,EAAxB;AACA,gBAAM0E,IAAI,GAAG,KAAK2E,gBAAL,CAAsBnP,KAAnC;AACA,iBAAK4P,mBAAL,GAA2B,IAA3B;AACA,gBAAIpF,IAAI,CAAC,UAAD,CAAR,EAAsBjB,OAAO,CAACiB,IAAI,CAAC,WAAD,CAAL,CAAP,GAA6BA,IAAI,CAAC,UAAD,CAAjC;AACtB,iBAAK9I,uBAAL,CACGmO,eADH,CACmBtG,OADnB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACiQ,mBAAL,GAA2B,KAA3B;AACD,aAFD,CAHJ,EAOG9Q,SAPH,CAQI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACuO,YAAL,GAAoBxO,QAAQ,CAACkB,IAAT,CAAc,QAAd,CAApB;AACA,uBAAI,CAAC6N,kBAAL,GAA0B/O,QAAQ,CAACkB,IAAT,CAAc,QAAd,EAAwB5B,MAAlD;AACA,uBAAI,CAACoP,cAAL,GAAsB,KAAtB;AACD,eAJD,MAIO;AACL,uBAAI,CAACpQ,OAAL,CAAawM,MAAb,CAAoB,6BAApB;;AACA,uBAAI,CAAC0D,YAAL,GAAoB,EAApB;AACA,uBAAI,CAACE,cAAL,GAAsB,IAAtB;AACD;AACF,aAlBL,EAmBI,UAACvO,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,qBAAI,CAACqO,YAAL,GAAoB,EAApB;AACD,aAtBL;AAwBD;AA5ZgE;AAAA;AAAA,wCA8Z7CtP,EA9Z6C,EA8ZpC;;;;;;;;;AAEvBkS,6B,GAAS,E;AACPtN,+B,GAAY,KAAKuN,aAAL,CAAmBC,WAAnB,E;;4BAEd,CAACxN,SAAD,IAAc,CAAC,KAAKuN,aAAL,CAAmBiK,K;;;;;AACpC,2BAAKhd,OAAL,CAAawM,MAAb,CAAoB,2BAApB;AACA,2BAAK8B,MAAL,CAAYpD,QAAZ,CAAqB,CAAC,OAAD,CAArB,EAAgC;AAC9BC,kCAAU,EAAE,KAAKlL;AADa,uBAAhC;;;;0BAMG,KAAKuC,IAAL,CAAUC,GAAV,CAAc,mBAAd,EAAmCC,K;;;;;;;;AAIlCzB,6B,GAAU,SAAVA,OAAU,GAAM;AACpB,4BAAMwO,QAAQ,GAAGvI,MAAM,CAAC+V,IAAP,CAAY,OAAI,CAAClK,aAAL,CAAmBtD,QAA/B,CAAjB;AACAA,gCAAQ,CAACvO,OAAT,CAAiB,UAAAgc,GAAG,EAAI;AACtB,8BAAG,CAAC,OAAI,CAACnK,aAAL,CAAmBtD,QAAnB,CAA4ByN,GAA5B,EAAiCF,KAArC,EAA2C;AACzC;AACD;;AACD,8BAAIvK,QAAQ,GAAG,OAAI,CAACM,aAAL,CAAmBtQ,GAAnB,CAAuBya,GAAvB,EAA4Bxa,KAA3C;;AACA+P,kCAAQ,CAAC,WAAD,CAAR,GAAwBjN,SAAS,CAAC0X,GAAD,CAAT,CAAe,WAAf,CAAxB;AACAzK,kCAAQ,CAAC,mBAAD,CAAR,GAAgC7R,EAAhC;AACAkS,iCAAO,CAAC1R,IAAR,CAAa,OAAI,CAAC+C,mBAAL,CAAyBkO,aAAzB,CAAuCI,QAAvC,CAAb;AACD,yBARD;AASD,uB;;;AACD,6BAAMnR,OAAO,CAACC,OAAR,CAAgBN,OAAO,EAAvB,CAAN;;;AACA,6EAAS6R,OAAT,EACCzQ,IADD,CAEE,iEAAS,YAAM;AACb,+BAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,+BAAI,CAACD,aAAL,GAAqB,KAArB;AACD,uBAHD,CAFF,EAOCmB,SAPD,CAQE,UAACC,SAAD,EAA2B;AACzBA,iCAAS,CAACP,OAAV,CAAkB,UAAAQ,QAAQ,EAAI;AAC5B,8BAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA4B;AAE1B,mCAAI,CAAC3B,OAAL,CAAa4B,OAAb,CAAqB,8BAArB;;AACA,mCAAI,CAAC0M,MAAL,CAAYpD,QAAZ,CAAqB,CAAC,KAAD,CAArB,EAA8B;AAC5BC,wCAAU,EAAE,OAAI,CAAClL;AADW,6BAA9B;AAGD,2BAND,MAMM;AACJ,mCAAI,CAACD,OAAL,CAAa6B,KAAb;AACD;AACF,yBAVD;AAWD,uBApBH,EAqBE,UAACA,KAAD,EAAgB;AACd,4BAAI;AACF,iCAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,yBAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,iCAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,uBA3BH;;;;;;;;;AA6BD;AAzdgE;AAAA;AAAA,6CA4d9C;AAAA;;AACjB,iBAAKxB,aAAL,GAAqB,IAArB;AACA,gBAAIE,MAAM,GAAG,EAAb;;AAEA,gBAAI,KAAKiC,IAAL,CAAUC,GAAV,CAAc,mBAAd,EAAmCC,KAAvC,EAA6C;AAE3CwE,oBAAM,CAAC+V,IAAP,CAAY,KAAKza,IAAL,CAAUiN,QAAtB,EAAgCvO,OAAhC,CAAwC,UAAAgc,GAAG,EAAI;AAC7C,oBAAG,OAAI,CAAC1a,IAAL,CAAUiN,QAAV,CAAmByN,GAAnB,EAAwBF,KAA3B,EAAiC;AAC/Bzc,wBAAM,CAAC2c,GAAD,CAAN,GAAc,OAAI,CAAC1a,IAAL,CAAUC,GAAV,CAAcya,GAAd,EAAmBxa,KAAjC,EACAnC,MAAM,CAAC,mBAAD,CAAN,GAA8BwT,UAAU,CAAC,OAAI,CAACvR,IAAL,CAAUC,GAAV,CAAc,mBAAd,EAAmCC,KAApC,CADxC;AAED;;AACD;AACD,eAND;;AAUA,kBAAI,CAAC,KAAKF,IAAL,CAAUwa,KAAX,IAAqB,CAAC,KAAKxa,IAAL,CAAUiN,QAAV,CAAmB,WAAnB,EAAgCuN,KAA1D,EAAgE;AAC9D,qBAAK3c,aAAL,GAAqB,KAArB;AACA,qBAAKL,OAAL,CAAawM,MAAb,CAAoB,8BAApB;AACA;AACD;AAEF,aAlBD,MAkBM;AACJjM,oBAAM,GAAG0R,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAK3P,IAAL,CAAUE,KAAzB,CAAX,CAAT;AACAnC,oBAAM,CAAC,SAAD,CAAN,GAAmB,QAAnB;AACD;;AAED,mBAAOA,MAAM,CAAC,WAAD,CAAb;AAGA,iBAAK4D,mBAAL,CACGsJ,gBADH,CACoBlN,MADpB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC3B,OAAL,CAAa4B,OAAb;;AACA,oBAAMhB,EAAE,GAAGc,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAX;;AACA,uBAAI,CAACJ,IAAL,CAAUC,GAAV,CAAc,mBAAd,EAAmCwI,QAAnC,CAA4CrK,EAA5C;;AACA,uBAAI,CAACyR,aAAL,CAAmBzR,EAAnB;AACD,eALD,MAKO;AACL,uBAAI,CAACZ,OAAL,CAAa6B,KAAb;AACD;AACF,aAlBL,EAmBI,UAACA,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAzBL;AA2BD;AArhBgE;AAAA;AAAA,oCAuhBvD0B,QAvhBuD,EAuhB3BV,KAvhB2B,EAuhBZ;AACnD,iBAAKA,KAAL,GAAaA,KAAb;AACA,iBAAKgO,QAAL,GAAgB,KAAKrM,YAAL,CAAkBmH,IAAlB,CAAuBpI,QAAvB,EAAiC;AAC/CqI,sBAAQ,EAAE,KADqC;AAE/C,uBAAO;AAFwC,aAAjC,CAAhB;AAID;AA7hBgE;AAAA;AAAA,sCA8hBrD;AACV,iBAAKiF,QAAL,CAAc3I,IAAd;AACD;AAhiBgE;AAAA;AAAA,wCAsiBnDrF,KAtiBmD,EAsiBpC;AAC3B,gBAAMsa,SAAS,GAAG,KAAKpK,aAAL,CAAmB/R,MAAnB,GAA4B,CAA9C;AACA,iBAAK+R,aAAL,CAAmB3R,IAAnB,CACE,KAAKkD,WAAL,CAAiB8E,KAAjB,CAAuB;AACrB+J,uBAAS,EAAC,CAAC,IAAD,CADW;AAErBD,oCAAsB,EAAC,CAAC,IAAD,CAFF;AAGrBpG,uBAAS,EAAE,CAAC;AAACpK,qBAAK,EAAEya,SAAR;AAAoB9J,wBAAQ,EAAE;AAA9B,eAAD,EAAsC,CAAC,2DAAWjE,QAAZ,EAAsB,2DAAWkE,GAAX,CAAe,CAAf,CAAtB,CAAtC,CAHU;AAIrB1B,0BAAY,EAAE,CAAC,KAAD,EAAQ,CAAC,2DAAWxC,QAAZ,CAAR,CAJO;AAKrBwD,qBAAO,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWxD,QAAZ,EAAsB,2DAAWkE,GAAX,CAAe,IAAf,CAAtB,CAAP,CALY;AAMrBtJ,qBAAO,EAAE,CAAC,IAAD,CANY;AAOrBD,qBAAO,EAAE,CAAC;AAACrH,qBAAK,EAAE,IAAR;AAAe2Q,wBAAQ,EAAE;AAAzB,eAAD,EAAiC,CAAC,2DAAWjE,QAAZ,CAAjC;AAPY,aAAvB,CADF;AAWD;AAnjBgE;AAAA;AAAA,2CAqjBhDvM,KArjBgD,EAqjBjC;AAAA;;AAC9B,gBAAI,KAAKkQ,aAAL,CAAmB/R,MAAnB,KAA8B,CAAlC,EAAqC;AACnC,mBAAKhB,OAAL,CAAawM,MAAb,CAAoB,+BAApB;AACA;AACD;;AACD,gBAAIhH,SAAS,GAAG,KAAKuN,aAAL,CAAmBS,EAAnB,CAAsB3Q,KAAtB,EAA6BH,KAA7C;AACA8C,qBAAS,GAAG,MAAH,OAAG,CAAH,kBAAOA,SAAP,CAAG,EAAa;AAAC,yBAAU,GAAX;AAAe6D,+BAAiB,EAAC,KAAK7G,IAAL,CAAUC,GAAV,CAAc,mBAAd,EAAmCC;AAApE,aAAb,CAAZ;;AACA,gBAAG,CAAC8C,SAAS,CAAC,wBAAD,CAAb,EAAwC;AACtC,mBAAKuN,aAAL,CAAmBU,QAAnB,CAA4B5Q,KAA5B;AACA;AACD;;AACD,iBAAKxC,aAAL,GAAoB,IAApB;AACA,iBAAK8D,mBAAL,CACGkO,aADH,CACiB7M,SADjB,EAEKnD,IAFL,CAGM,iEAAS,YAAM;AACb,qBAAI,CAAChC,aAAL,GAAoB,KAApB;AACD,aAFD,CAHN,EAOKmB,SAPL,CAQM,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACoR,aAAL,CAAmBU,QAAnB,CAA4B5Q,KAA5B;;AACA,uBAAI,CAAC7C,OAAL,CAAa4B,OAAb;AACD,eAHD,MAGO;AACL,uBAAI,CAAC5B,OAAL,CAAa6B,KAAb;AACD;AACF,aAfP,EAgBM,UAACA,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD,aAlBP;AAoBH;AArlBkE;AAAA;AAAA,6CAulB9C6R,SAvlB8C,EAulB3B7Q,KAvlB2B,EAulBZwM,KAvlBY,EAulBG;AAClE,gBAAI,KAAKsE,oBAAL,CAA0BD,SAA1B,EAAqC7Q,KAArC,EAA4CwM,KAA5C,CAAJ,EAAwD;AACtD,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AA7lBgE;AAAA;AAAA,+CA+lB5CqE,SA/lB4C,EA+lBzB7Q,KA/lByB,EA+lBVwM,KA/lBU,EA+lBE;AACjE,gBAAIuE,UAAU,GAAQ,KAAKpR,IAAL,CAAUiN,QAAV,CAAmBiE,SAAnB,CAAtB;AACArE,iBAAK,GAAGuE,UAAU,CAACnE,QAAX,CAAoB5M,KAApB,EAA2BJ,GAA3B,CAA+B4M,KAA/B,CAAR;AAEA,mBAAOA,KAAK,CAAC1N,MAAN,IAAgB,SAAhB,IAA6B0N,KAAK,CAACE,OAA1C;AACD;AApmBgE;AAAA;AAAA,gDAsmB3CmE,SAtmB2C,EAsmBxB7Q,KAtmBwB,EAsmBTwM,KAtmBS,EAsmBM;AACrE,gBAAID,QAAQ,GAAG,KAAf;AACA,gBAAII,WAAW,GAAG,IAAI,2DAAJ,EAAlB;AACA,gBAAIoE,UAAU,GAAQ,KAAKpR,IAAL,CAAUiN,QAAV,CAAmBiE,SAAnB,CAAtB;;AAEA,gBAAIE,UAAU,CAACnE,QAAX,CAAoB5M,KAApB,EAA2BJ,GAA3B,CAA+B4M,KAA/B,EAAsCK,SAA1C,EAAqD;AACnD,kBAAIC,gBAAgB,GAAGiE,UAAU,CAACnE,QAAX,CAAoB5M,KAApB,EACpBJ,GADoB,CAChB4M,KADgB,EAEpBK,SAFoB,CAEVF,WAFU,CAAvB;AAGAJ,sBAAQ,GACNO,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACP,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AAtnBgE;AAAA;AAAA,sCAynBrD;AACV,gBAAInD,OAAO,GAAG,EAAd;AACA,gBAAIiB,IAAI,GAAG,KAAK1K,IAAL,CAAUE,KAArB;;AAEA,iBAAK,IAAIyK,IAAT,IAAiBD,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACC,IAAD,CAAR,EAAgB;AACd,oBAAID,IAAI,CAACC,IAAD,CAAJ,YAAsBnE,IAA1B,EACEiD,OAAO,CAACkB,IAAD,CAAP,GAAgB,KAAKzI,WAAL,CAAiB0I,gBAAjB,CAAkCF,IAAI,CAACC,IAAD,CAAtC,CAAhB,CADF,KAEKlB,OAAO,CAACkB,IAAD,CAAP,GAAgBD,IAAI,CAACC,IAAD,CAApB;AACN;AACF;;AAED,mBAAOlB,OAAP;AACD;AAtoBgE;AAAA;AAAA,wCAwoBnDe,KAxoBmD,EAwoB5B;AACnC,iBAAK0D,KAAL,GAAa,CAAC1D,KAAK,CAACC,IAAN,GAAa,CAAd,IAAmBD,KAAK,CAACnG,YAAtC;AACA,iBAAK8J,GAAL,GAAW3D,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACnG,YAA9B;AACD;AA3oBgE;AAAA;AAAA,sCA8oBrDmG,KA9oBqD,EA8oB/CzJ,QA9oB+C,EA8oBrB;AAC1C,gBAAG,CAACyJ,KAAJ,EAAU;AACR;AACD;;AAED,gBAAIA,KAAK,CAAC/C,OAAN,IAAiB,CAAjB,IAAsB,KAAKzH,IAAL,CAAUC,GAAV,CAAc,SAAd,EAAyBC,KAAzB,IAAkC,CAA5D,EAA8D;AAC5D,mBAAK0a,aAAL,GAAqB,KAAK5Y,YAAL,CAAkBmH,IAAlB,CAAuBpI,QAAvB,EAAiC;AACpDqI,wBAAQ,EAAE;AAD0C,eAAjC,CAArB;AAGD;AACF;AAxpBgE;AAAA;AAAA,sCA0pBrD;AACV,iBAAKpJ,IAAL,CAAUC,GAAV,CAAc,wBAAd,EAAwCkG,KAAxC;AACA,iBAAKyU,aAAL,CAAmBlV,IAAnB;AACD;AA7pBgE;AAAA;AAAA,uCA+pBpD;AACX,iBAAKkV,aAAL,CAAmBlV,IAAnB;AACA,gBAAMtH,EAAE,GAAG,KAAK4B,IAAL,CAAUC,GAAV,CAAc,mBAAd,EAAmCC,KAA9C;AACA,gBAAMnC,MAAM,GAAG,KAAKN,cAAL,CAAoBO,QAApB,CAA6BD,MAA5C;AACA,gBAAM8K,WAAW,GAAG9K,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEsK,WAA5B;AACA,gBAAMzC,WAAW,GAAGmM,IAAI,CAACtC,IAAI,CAACE,SAAL,CAAe;AAAC9I,+BAAiB,EAACzI;AAAnB,aAAf,CAAD,CAAxB;AACAyc,kBAAM,CAACC,IAAP,WAAeD,MAAM,CAACE,QAAP,CAAgBC,MAA/B,4CAAuEnS,WAAvE,6CAAqHjD,WAArH,GAAmI,OAAnI;AAED;AAvqBgE;AAAA;AAAA,8BAkiB7C;AAClB,mBAAO,KAAK5F,IAAL,CAAUC,GAAV,CAAc,WAAd,CAAP;AACD;AApiBgE;;AAAA;AAAA,S;;;;gBAnBjE;;gBATO;;gBAKgB;;gBAAhB;;gBAFgC;;gBAAgB;;gBAThD;;gBACA;;gBAwBA;;gBACA;;gBAtBA;;gBALA;;gBAMA;;;;AA6BIqZ,4DAAsD,6DALlE,iEAAU;AACTxY,gBAAQ,EAAE,oDADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAKkE,E,+EA6C1C,2D,EACJ,2F,EACD,uD,EACQ,+D,EACF,6D,EACC,8D,EACW,yI,EACb,8E,EACQ,6G,EACI,qG,EACX,uF,EACC,kF,EACI,qG,EAzDoC,GAAtDuY,sDAAsD,CAAtD;;;;;;;;;;;;;;;;ACnCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCAf;AAKA;AASA;;;UAmBa2B,8CAA8C;AA2DzD;AAEA,gEACUxZ,KADV,EAEUjE,OAFV,EAGUsE,WAHV,EAIUC,WAJV,EAKUG,WALV,EAMUD,aANV,EAOUxE,cAPV,EAQUoY,kBARV,EASUnY,mBATV,EAUUqO,cAVV,EAUiE;AAAA;;AATvD,eAAAtK,KAAA,GAAAA,KAAA;AACA,eAAAjE,OAAA,GAAAA,OAAA;AACA,eAAAsE,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAG,WAAA,GAAAA,WAAA;AACA,eAAAD,aAAA,GAAAA,aAAA;AACA,eAAAxE,cAAA,GAAAA,cAAA;AACA,eAAAoY,kBAAA,GAAAA,kBAAA;AACA,eAAAnY,mBAAA,GAAAA,mBAAA;AACA,eAAAqO,cAAA,GAAAA,cAAA;AA7DV,eAAA+J,eAAA,GAAkB,KAAlB;AAEA,eAAA1T,OAAA,GAAU,wBAAV;AACA,eAAAC,SAAA,GAAY,MAAZ,CA0DiE,CAzDjE;;AACA,eAAAvE,OAAA,GAAU,IAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB,CAuDiE,CArDjE;;AACA,eAAAuF,UAAA,GAAkB,EAAlB,CAoDiE,CA/CjE;;AACA,eAAAQ,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C,CA8CiE,CA1CjE;;AACA,eAAAC,KAAA,GAAQ,CACN;AACEC,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADM,EAKN;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALM,CAAR,CAyCiE,CA9BjE;;AACA,eAAAE,SAAA,GAA8B,CAC5B;AACE9F,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACEhG,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA;;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AAcI;;AAxEqD;AAAA;AAAA,qCA0E9C;AACT,iBAAKQ,SAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,gBAAL;AACA,iBAAK+Q,oBAAL;AACA,iBAAKzJ,UAAL;AACD;AAhFwD;AAAA;AAAA,wCAkF3C;AACZ,iBAAKjH,2BAAL,CAAiCC,WAAjC;AACD;AApFwD;AAAA;AAAA,6CAsFtC;AAAA;;AACjB,iBAAKD,2BAAL,GAAmC,KAAK7H,cAAL,CAAoBmI,WAApB,CAAgC5G,SAAhC,CACjC,UAACE,QAAD,EAAc;AACZ,kBAAM2G,SAAS,GAAG,OAAI,CAAC5D,aAAL,CAAmB6D,kBAAnB,CAAsC5G,QAAtC,CAAlB;;AACA,qBAAI,CAACc,IAAL,CAAU+F,UAAV,CAAqBF,SAArB;;AACA,kBAAIA,SAAS,CAAC5H,cAAV,CAAyB,cAAzB,CAAJ,EACE,OAAI,CAACoG,YAAL,GAAoBwB,SAAS,CAACG,YAA9B;;AACA,qBAAI,CAACkV,WAAL,CAAiB,OAAI,CAAChV,SAAL,EAAjB;AACH,aAPgC,CAAnC;AASD;AAhGwD;AAAA;AAAA,iDAkGrC;AAAA;;AAClB,iBAAK+P,2BAAL,GAAmC,KAAKJ,kBAAL,CAAwBK,MAAxB,CAA+BlX,SAA/B,CACjC,UAACwL,KAAD,EAAgB;AACd,qBAAI,CAACsL,eAAL,GAAuBtL,KAAK,CAAC2L,OAA7B;AACD,aAHgC,CAAnC;AAKD;AAxGwD;AAAA;AAAA,oCA0G/C;AACR,iBAAKnW,IAAL,CAAUmG,KAAV;AACA,iBAAKnG,IAAL,CAAU+F,UAAV,CAAqB;AACnBK,kBAAI,EAAE,CADa;AAEnBJ,0BAAY,EAAE,GAFK;AAGnBU,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD;AAHa,aAArB;AAKD;AAjHwD;AAAA;AAAA,sCAmH7C;AACV,iBAAK3G,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjC4F,oCAAsB,EAAE,CAAC,IAAD,CADS;AAEjCG,qBAAO,EAAE,CAAC,IAAD,CAFwB;AAGjCtO,qBAAO,EAAE,CAAC,IAAD,CAHwB;AAIjC2J,qBAAO,EAAE,CAAC,IAAD,CAJwB;AAKjCwL,qBAAO,EAAE,CAAC,IAAD,CALwB;AAMjCnJ,qBAAO,EAAE,CAAC,IAAD,CANwB;AAOjClC,qBAAO,EAAE,CAAC,IAAD,CAPwB;AAQjCgT,qBAAO,EAAE,CAAC,IAAD,CARwB;AASjC/U,kBAAI,EAAE,CAAC,CAAD,CAT2B;AAUjCJ,0BAAY,EAAE,CAAC,KAAK3B,YAAN,CAVmB;AAWjCqC,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD,CAX2B;AAYjCvE,qBAAO,EAAE,CAAC,KAAKA,OAAN,CAZwB;AAajCC,uBAAS,EAAE,CAAC,KAAKA,SAAN;AAbsB,aAAvB,CAAZ;AAeD;AAnIwD;AAAA;AAAA,2CAqIxCgC,YArIwC,EAqI1B;AAC7B,iBAAKA,YAAL,GAAoBA,YAApB;AACA,iBAAK+D,QAAL;AACD;AAxIwD;AAAA;AAAA,0CA0IzC;AACd,gBAAMhK,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKC,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU;AAFZ,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE;AADb,aAToB,CAAtB;AAaD;AAzJwD;AAAA;AAAA,qCA2J9C;AACT,iBAAKsN,kBAAL,CAAwBnQ,IAAxB;AACA,iBAAK1F,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,CAA/B;AACA,iBAAKzI,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAK3G,IAAL,CAAUC,GAAV,CAAc,WAAd,EAA2BwI,QAA3B,CAAoC,KAAKpG,SAAzC;AACA,iBAAKrC,IAAL,CAAUC,GAAV,CAAc,SAAd,EAAyBwI,QAAzB,CAAkC,KAAKrG,OAAvC;AACA,iBAAKX,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AArKwD;AAAA;AAAA,oCAuK/C6M,OAvK+C,EAuKL;AAClD,iBAAK8C,kBAAL,CAAwB1M,IAAxB;AACA,iBAAKiS,kBAAL,GAA0BrI,OAA1B;AACA,iBAAK8C,kBAAL,CAAwBQ,cAAxB,CAAuC,KAAvC;AACD;AA3KwD;AAAA;AAAA,sCA6K7CtY,MA7K6C,EA6KpC;AAAA;;AACnB,gBAAI,CAAC,KAAKD,OAAV,EAAmB,KAAKD,aAAL,GAAqB,IAArB;AACnB,iBAAKkO,cAAL,CACGQ,UADH,CACcxO,MADd,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACkc,SAAL,GAAiBnc,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAjB;AACA,uBAAI,CAACkE,UAAL,GAAkBpF,QAAQ,CAACkB,IAAT,CAAc,OAAd,CAAlB;AACA,uBAAI,CAACoJ,QAAL,GAAgB,KAAhB;AACD,eAJD,MAIO;AACL,uBAAI,CAACA,QAAL,GAAgB,IAAhB;AACA,uBAAI,CAAC6R,SAAL,GAAiB,EAAjB;AACD;AACF,aAlBL,EAmBI,UAAChc,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,qBAAI,CAACmK,QAAL,GAAgB,IAAhB;AACD,aAtBL;AAwBD;AAvMwD;AAAA;AAAA,wCA0M3CgB,KA1M2C,EA0MpC;AACnB,iBAAKxK,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B+B,KAAK,CAACC,IAArC;AACA,iBAAKzK,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAKlF,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AAjNwD;AAAA;AAAA,sCAmN7C;AACV,gBAAIuD,OAAO,GAAG,EAAd;AACA,gBAAIiB,IAAI,GAAG,KAAK1K,IAAL,CAAUE,KAArB;;AAEA,iBAAK,IAAIyK,IAAT,IAAiBD,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACC,IAAD,CAAR,EAAgB;AACd,oBAAID,IAAI,CAACC,IAAD,CAAJ,YAAsBnE,IAA1B,EACEiD,OAAO,CAACkB,IAAD,CAAP,GAAgB,KAAKzI,WAAL,CAAiB0I,gBAAjB,CAAkCF,IAAI,CAACC,IAAD,CAAtC,CAAhB,CADF,KAEKlB,OAAO,CAACkB,IAAD,CAAP,GAAgBD,IAAI,CAACC,IAAD,CAApB;AACN;AACF;;AAED,mBAAOlB,OAAP;AACD;AAhOwD;AAAA;AAAA,4CAkOvCsJ,OAlOuC,EAkOG;AAC1D,gBAAIlI,WAAJ;;AAEA,gBAAIkI,OAAO,CAAC1U,OAAR,IAAmB,CAAvB,EAA0B;AACxBwM,yBAAW,GAAG,gBAAd;AACD,aAFD,MAEO,IAAIkI,OAAO,CAAC1U,OAAR,IAAmB,CAAvB,EAA0B;AAC/BwM,yBAAW,GAAG,eAAd;AACD;;AAED,mBAAOA,WAAP;AACD;AA5OwD;AAAA;AAAA,qCA8O9C9M,MA9O8C,EA8OH;AAAA;;AACpD,gBAAM+M,IAAI,GAAG/M,MAAM,CAACM,OAAP,IAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAAvC;AAEA,iBAAK0M,aAAL,CAAmBD,IAAnB,EACGE,YADH,GAEGnL,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACC,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AAEb,qBAAI,CAACjC,aAAL,GAAqB,IAArB;AACAE,oBAAM,CAACM,OAAP,GAAiByM,IAAjB;AACA,qBAAO,OAAI,CAACiB,cAAL,CAAoBqB,WAApB,CAAgCrP,MAAhC,CAAP;AACD,aAND,CAJJ,EAWI,iEAAS,YAAM;AACb,qBAAI,CAACF,aAAL,GAAqB,KAArB;AACD,aAFD,CAXJ,EAeGmB,SAfH,CAgBI,UAACI,OAAD,EAAkB;AAChB,qBAAI,CAAC5B,OAAL,CAAa4B,OAAb;AACD,aAlBL,EAmBI,UAACC,KAAD,EAAgB;AACdtB,oBAAM,CAACM,OAAP,GAAiBN,MAAM,CAACM,OAAP,IAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAA3C;;AACA,qBAAI,CAACb,OAAL,CAAa6B,KAAb;AACD,aAtBL;AAwBD;AAzQwD;AAAA;AAAA,wCA2Q3CyL,IA3Q2C,EA2QvC;AAChB,gBAAIA,IAAI,IAAI,CAAZ,EACE,OAAO,KAAKpN,mBAAL,CAAyBkC,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAQF,mBAAO,KAAKlC,mBAAL,CAAyBkC,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AA5RwD;AAAA;AAAA,uCA8R5C;AAAA;;AACX,iBAAKyT,cAAL,GAAsB,IAAtB;AACA,iBAAKtH,cAAL,CACGQ,UADH,CACc;AAAElO,qBAAO,EAAE,GAAX;AAAgBuL,qBAAO,EAAE;AAAzB,aADd,EAEG/J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACwT,cAAL,GAAsB,KAAtB;AACD,aAFD,CAHJ,EAOGrU,SAPH,CAOa,UAACE,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC4T,OAAL,GAAe7T,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAf;AACD,eAFD,MAEK;AACH,uBAAI,CAAC5C,OAAL,CAAawM,MAAb,CAAoB,6BAApB;AACD;AACF,aAbH;AAcD;AA9SwD;AAAA;AAAA,qCAgTjD;AACN,gBAAIG,IAAI,GAAG,IAAI3D,IAAJ,GAAW0E,kBAAX,GAAgCC,KAAhC,CAAsC,GAAtC,CAAX;AAAA,gBACEC,UAAU,aAAMjB,IAAI,CAAC,CAAD,CAAV,SAAgBA,IAAI,CAAC,CAAD,CAApB,SAA0BA,IAAI,CAAC,CAAD,CAA9B,CADZ;AAGA,gBAAIkB,cAAc,GAAQ,EAA1B;AACAA,0BAAc,GAAG,KAAKgQ,SAAL,CAAe9E,MAAf,CAAsB,KAAKnT,UAA3B,CAAjB;AAEA,iBAAKrB,WAAL,CAAiBuJ,UAAjB,CAA4BD,cAA5B,mBAAsDD,UAAtD;AACD;AAxTwD;AAAA;AAAA,qCA0T9C/B,MA1T8C,EA0ThC;AACvB,gBAAI,KAAKjH,OAAL,KAAiBiH,MAArB,EAA6B;AAC3B,kBAAI,KAAKhH,SAAL,IAAkB,MAAtB,EAA8B;AAC5B,qBAAKA,SAAL,GAAiB,KAAjB;AACD,eAFD,MAEO,IAAI,KAAKA,SAAL,IAAkB,KAAtB,EAA6B;AAClC,qBAAKA,SAAL,GAAiB,MAAjB;AACD;AACF,aAND,MAMO;AACL,mBAAKD,OAAL,GAAeiH,MAAf;AACA,mBAAKhH,SAAL,GAAiB,KAAjB;AACD;;AACD,iBAAK+F,QAAL;AACD;AAtUwD;;AAAA;AAAA,S;;;;gBA/BlD;;gBAIA;;gBAHW;;gBAQX;;gBACA;;gBAFA;;gBARQ;;gBAMR;;gBADA;;gBAEA;;;;AAwBI6S,oDAA8C,6DAL1D,gEAAU;AACTna,gBAAQ,EAAE,2CADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAK0D,E,+EA8DxC,sD,EACE,2F,EACI,0D,EACA,qF,EACA,sF,EACE,0F,EACC,8D,EACI,qG,EACC,uG,EACL,iG,EAvE+B,GAA9Cka,8CAA8C,CAA9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCzBb;AAKA;AAOA;;;UAmBaK,wDAAwD;AA4FnE;AAEA,0EACU7Z,KADV,EAEUjE,OAFV,EAGUC,cAHV,EAIU+P,yBAJV,EAKUC,wBALV,EAMU3L,WANV,EAOUJ,aAPV,EAQUK,WARV,EASUwZ,UATV,EAUU7d,mBAVV,EAWUsE,YAXV,EAYUC,aAZV,EAaUC,WAbV,EAakC;AAAA;;AAZxB,eAAAT,KAAA,GAAAA,KAAA;AACA,eAAAjE,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAA+P,yBAAA,GAAAA,yBAAA;AACA,eAAAC,wBAAA,GAAAA,wBAAA;AACA,eAAA3L,WAAA,GAAAA,WAAA;AACA,eAAAJ,aAAA,GAAAA,aAAA;AACA,eAAAK,WAAA,GAAAA,WAAA;AACA,eAAAwZ,UAAA,GAAAA,UAAA;AACA,eAAA7d,mBAAA,GAAAA,mBAAA;AACA,eAAAsE,YAAA,GAAAA,YAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,WAAA,GAAAA,WAAA,CAAwB,CAhGlC;;AACA,eAAApE,OAAA,GAAU,IAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB;AACA,eAAA2d,cAAA,GAAiB,KAAjB;AACA,eAAAjZ,gBAAA,GAAmB,KAAnB;AACA,eAAAkZ,iBAAA,GAAoB,KAApB;AAEA,eAAA9M,wBAAA,GAA2B,KAA3B;AAOA,eAAA+M,WAAA,GAAuB,KAAvB;AAIA,eAAAC,SAAA,GAAiB,EAAjB;AACA,eAAA3Y,SAAA,GAAW,EAAX;AAGA,eAAA4Y,oBAAA,GAAuB,EAAvB;AACA,eAAAC,sBAAA,GAAyB,EAAzB;AAMA,eAAAzZ,OAAA,GAAU,mBAAV;AACA,eAAAC,SAAA,GAAY,MAAZ,CAkEkC,CAjElC;;AACA,eAAAuB,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C,CAgEkC,CA1DlC;;AACA,eAAAC,KAAA,GAAQ,CACN;AACEC,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADM,EAKN;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALM,CAAR,CAyDkC,CA9ChC;;AACA,eAAA7E,MAAA,GAAS,CACP;AACE4E,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADO,EAKP;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALO,CAAT,CA6CgC,CAjClC;;AACA,eAAAE,SAAA,GAA8B,CAC5B;AACE9F,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACEhG,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA;;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AAkBE,eAAK7C,aAAL,CAAmB8C,GAAnB,CAAuB,OAAvB;AACA,eAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAP,CACd,EADc,EAEd;AAAEC,0BAAc,EAAE;AAAlB,WAFc,EAGd;AAAEC,4BAAgB,EAAE;AAApB,WAHc,EAId;AAAEC,2BAAe,EAAE;AAAnB,WAJc,CAAhB;AAMD;;AApHkE;AAAA;AAAA,qCAsHxD;AACT,iBAAKC,SAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,gBAAL;AACA,iBAAKmJ,oBAAL;AACD;AA3HkE;AAAA;AAAA,wCA6HrD;AACZ,iBAAK9I,2BAAL,CAAiCC,WAAjC;;AACA,gBAAG,KAAKC,SAAL,IAAkBC,SAArB,EAA+B;AAC7B,mBAAKD,SAAL,CAAeE,IAAf;AACD;;AACD,gBAAG,KAAKC,SAAL,IAAkBF,SAArB,EAA+B;AAC7B,mBAAKE,SAAL,CAAeD,IAAf;AACD;AACF;AArIkE;AAAA;AAAA,wCAsIrD8E,KAtIqD,EAsIhD;AAAA;;AACjB,gBAAGA,KAAK,IAAI,IAAZ,EAAiB;AACf,mBAAKsR,oBAAL;AACA,mBAAKC,cAAL,CAAoB;AAAC5d,iCAAiB,EAAG,KAAK6d,gBAAL,CAAsB,mBAAtB,CAArB;AAAgE3d,uBAAO,EAAE;AAAzE,eAApB;AACA,mBAAKmP,yBAAL,CACCc,qBADD,CACuB;AAACnQ,iCAAiB,EAAG,KAAK6d,gBAAL,CAAsB,mBAAtB;AAArB,eADvB,EAEChd,SAFD,CAGE,UAACE,QAAD,EAAc;AACZ,oBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,yBAAI,CAAC6c,gBAAL,GAAwB9c,QAAQ,CAACkB,IAAT,CAAc,MAAd,EAAsB,CAAtB,CAAxB;AACD;;AACD;AACD,eARH;AAUD;;AACD;AACD;AAtJkE;AAAA;AAAA,6CAuJhD;AAAA;;AACjB,iBAAKkF,2BAAL,GAAmC,KAAK7H,cAAL,CAAoBmI,WAApB,CAAgC5G,SAAhC,CACjC,UAACE,QAAD,EAAc;AACZ,kBAAM2G,SAAS,GAAG,OAAI,CAAC5D,aAAL,CAAmB6D,kBAAnB,CAAsC5G,QAAtC,CAAlB;;AACA,qBAAI,CAACc,IAAL,CAAU+F,UAAV,CAAqBF,SAArB;;AACA,kBAAIA,SAAS,CAAC5H,cAAV,CAAyB,cAAzB,CAAJ,EACE,OAAI,CAACoG,YAAL,GAAoBwB,SAAS,CAACG,YAA9B;;AACF,qBAAI,CAACsI,qBAAL,CAA2B,OAAI,CAACpI,SAAL,EAA3B;AACD,aAPgC,CAAnC;AASD;AAjKkE;AAAA;AAAA,oCAmKzD;AACR,iBAAKlG,IAAL,CAAUmG,KAAV;AACA,iBAAKnG,IAAL,CAAU+F,UAAV,CAAqB;AACnBK,kBAAI,EAAE,CADa;AAEnBJ,0BAAY,EAAE,GAFK;AAGnBO,qBAAO,EAAE,IAAIC,IAAJ,EAHU;AAInBC,qBAAO,EAAE,IAAID,IAAJ,EAJU;AAKnBE,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD;AALa,aAArB;AAOD;AA5KkE;AAAA;AAAA,sCA8KvD;AACV,iBAAK3G,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjCzI,+BAAiB,EAAE,CAAC,IAAD,CADc;AAEjC0Q,oCAAsB,EAAE,CAAC,IAAD,CAFS;AAGjCoN,qBAAO,EAAE,CAAC,IAAD,CAHwB;AAIjC5d,qBAAO,EAAE,CAAC,IAAD,CAJwB;AAKjC+Q,0BAAY,EAAE,CAAC,IAAD,CALmB;AAMjCpH,qBAAO,EAAE,CAAC,IAAD,CANwB;AAOjCT,qBAAO,EAAE,CAAC,IAAD,CAPwB;AAQjCR,qBAAO,EAAE,CAAC,IAAD,CARwB;AASjCwM,qBAAO,EAAE,CAAC,IAAD,CATwB;AAUjC/L,qBAAO,EAAE,CAAC,IAAD,CAVwB;AAWjCV,0BAAY,EAAE,CAAC,IAAD,CAXmB;AAYjCmB,4BAAc,EAAE,CAAC,IAAD,CAZiB;AAajCC,0BAAY,EAAE,CAAC,IAAD,CAbmB;AAcjCC,qBAAO,EAAE,CAAC,IAAD,CAdwB;AAejC/B,kBAAI,EAAE,CAAC,CAAD,CAf2B;AAgBjCG,qBAAO,EAAE,CAAC,IAAIC,IAAJ,EAAD,CAhBwB;AAiBjCC,qBAAO,EAAE,CAAC,IAAID,IAAJ,EAAD,CAjBwB;AAkBjCR,0BAAY,EAAE,CAAC,KAAK3B,YAAN,CAlBmB;AAmBjCqC,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD,CAnB2B;AAoBjCvE,qBAAO,EAAE,CAAC,KAAKA,OAAN,CApBwB;AAqBjCC,uBAAS,EAAE,CAAC,KAAKA,SAAN;AArBsB,aAAvB,CAAZ;AAuBD;AAtMkE;AAAA;AAAA,2CAwMlDgC,YAxMkD,EAwMpC;AAC7B,iBAAKA,YAAL,GAAoBA,YAApB;AACA,iBAAK+D,QAAL;AACD;AA3MkE;AAAA;AAAA,0CA6MnD;AACd,gBAAMhK,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKC,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU;AAFZ,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE;AADb,aAToB,CAAtB;AAaD;AA5NkE;AAAA;AAAA,qCA8NxD;AACT,iBAAKvI,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,CAA/B;AACA,iBAAKzI,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAK3G,IAAL,CAAUC,GAAV,CAAc,WAAd,EAA2BwI,QAA3B,CAAoC,KAAKpG,SAAzC;AACA,iBAAKrC,IAAL,CAAUC,GAAV,CAAc,SAAd,EAAyBwI,QAAzB,CAAkC,KAAKrG,OAAvC;AACA,iBAAKX,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AAvOkE;AAAA;AAAA,gDAyO7CnI,MAzO6C,EAyOpC;AAAA;;AAC7B,gBAAI,CAAC,KAAKD,OAAV,EAAmB,KAAKD,aAAL,GAAqB,IAArB;AACnB,iBAAK2P,yBAAL,CACGc,qBADH,CACyBvQ,MADzB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC4O,kBAAL,GAA0B7O,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAA1B;AACA,uBAAI,CAACkE,UAAL,GAAkBpF,QAAQ,CAACkB,IAAT,CAAc,OAAd,CAAlB;AACA,uBAAI,CAACoJ,QAAL,GAAgB,KAAhB;AACD,eAJD,MAIO;AACL,uBAAI,CAACA,QAAL,GAAgB,IAAhB;AACA,uBAAI,CAACuE,kBAAL,GAA0B,EAA1B;AACD;AACF,aAlBL,EAmBI,UAAC1O,KAAD,EAAgB;AACd,qBAAI,CAACmK,QAAL,GAAgB,IAAhB;;AACA,kBAAI;AACF,uBAAI,CAAChM,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aA1BL;AA2BD;AAtQkE;AAAA;AAAA,uCAwQtDtB,MAxQsD,EAwQ7C;AAAA;;AACpBA,kBAAM,GAAG,KAAKmI,SAAL,EAAT;AACA,iBAAKrI,aAAL,GAAqB,IAArB;AACA,iBAAK2P,yBAAL,CACG0O,YADH,CACgBne,MADhB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAChC,aAAL,GAAqB,KAArB;AACD,aAFD,CAHJ,EAOGmB,SAPH,CAQI,UAAAE,QAAQ,EAAI;AAEV,kBAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACzB,uBAAI,CAAC3B,OAAL,CAAawM,MAAb,CAAoB,6BAApB;;AACA;AACD;;AAED,qBAAI,CAACjI,WAAL,WAAwB;AAACoI,oBAAI,EAAEjL,QAAQ,CAACkB,IAAT,CAAc,MAAd;AAAP,eAAxB;AAED,aAjBL,EAkBI,UAAAf,KAAK,EAAI;;;AACP,kBAAMI,OAAO,GAAG,CAAH,KAAGJ,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEA,KAAP,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAEI,OAA9B;AACAA,qBAAO,GAAG,OAAI,CAACjC,OAAL,CAAa6B,KAAb,CAAmBI,OAAnB,CAAH,GAAiC,OAAI,CAACjC,OAAL,CAAa6B,KAAb,EAAxC;AACD,aArBL;AAsBD;AAjSkE;AAAA;AAAA,uCAmStDtB,MAnSsD,EAmS7C;AAAA;;AACpB,iBAAKwE,gBAAL,GAAwB,IAAxB;AACA,iBAAKiL,yBAAL,CACGe,eADH,CACmBxQ,MADnB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC0C,gBAAL,GAAwB,KAAxB;AACD,aAFD,CAHJ,EAOGvD,SAPH,CAOa,UAACE,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC6D,SAAL,GAAiB9D,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAjB;AACA,uBAAI,CAACkJ,WAAL,GAAkB,KAAlB;AACD,eAHD,MAGM;AACJ,uBAAI,CAACtG,SAAL,GAAiB,EAAjB;AACA,uBAAI,CAACsG,WAAL,GAAkB,IAAlB;AACD;AACF,aAfH,EAgBE,UAACjK,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,oCAAnB;;AACA,qBAAI,CAACiK,WAAL,GAAmB,IAAnB;AACD,aAnBH;AAqBD;AA1TkE;AAAA;AAAA,qCA4TxDvL,MA5TwD,EA4T/C;AAAA;;AAClB,iBAAKyd,cAAL,GAAsB,IAAtB;AACA,iBAAKhO,yBAAL,CAA+BrN,YAA/B,CAA4CpC,MAA5C,EAAoDiB,SAApD,CACE,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACgd,OAAL,GAAejd,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAf;AACA,uBAAI,CAACgc,YAAL,GAAoBld,QAAQ,CAACkB,IAAT,CAAc,MAAd,EAAsB5B,MAA1C;AACA,uBAAI,CAACgd,cAAL,GAAsB,KAAtB;AACD,eAJD,MAIO;AACL,uBAAI,CAACW,OAAL,GAAe,EAAf;AACA,uBAAI,CAACC,YAAL,GAAoB,CAApB;AACA,uBAAI,CAACZ,cAAL,GAAsB,KAAtB;AACD;AACF,aAXH,EAYE,UAACnc,KAAD,EAAW;AACT,qBAAI,CAAC8c,OAAL,GAAe,EAAf;AACA,qBAAI,CAACX,cAAL,GAAsB,KAAtB;AACD,aAfH;AAiBD;AA/UkE;AAAA;AAAA,iDAiV5Czd,MAjV4C,EAiVG;AAAA;;AACpE,iBAAKse,4BAAL,GAAoC,IAApC;AACA,iBAAK7O,yBAAL,CACGmH,sBADH,CAC0B5W,MAD1B,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACwc,4BAAL,GAAoC,KAApC;AACD,aAFD,CAHJ,EAOGrd,SAPH,CAOa,UAAOE,QAAP;AAAA,qBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACzBA,QAAQ,CAACC,MAAT,KAAoB,GADK;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIvBvB,kCAJuB,GAIVsB,QAAQ,CAAC,MAAD,CAAR,CAAiB,MAAjB,CAJU;AAK7B,6BAAK0c,oBAAL,CAA0B7d,MAAM,CAACuV,sBAAjC,IAA2D1V,UAA3D;;AAL6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB;AAAA,aAPb,EAcE,UAACyB,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,qCAAnB;AACD,aAhBH;AAkBD;AArWkE;AAAA;AAAA,oDAuWzCtB,MAvWyC,EAuWM;AAAA;;AACvE,iBAAKue,8BAAL,GAAsC,IAAtC;AACA,iBAAK9O,yBAAL,CACG+O,yBADH,CAC6Bxe,MAD7B,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACyc,8BAAL,GAAsC,KAAtC;AACD,aAFD,CAHJ,EAOGtd,SAPH,CAOa,UAAOE,QAAP;AAAA,qBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACzBA,QAAQ,CAACC,MAAT,KAAoB,GADK;AAAA;AAAA;AAAA;;AAE7B,6BAAKqd,wBAAL,GAAgC,IAAhC;AAF6B;;AAAA;AAKvBrJ,oCALuB,GAKRjU,QAAQ,CAAC,MAAD,CAAR,CAAiB,MAAjB,CALQ;AAM7B,6BAAKsd,wBAAL,GAAgC,KAAhC;AACA,6BAAKX,sBAAL,CAA4B9d,MAAM,CAACuV,sBAAnC,IAA6DH,YAA7D;;AAP6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB;AAAA,aAPb,EAgBE,UAAC9T,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,uCAAnB;;AACA,qBAAI,CAACmd,wBAAL,GAAgC,IAAhC;AACD,aAnBH;AAqBD;AA9XkE;AAAA;AAAA,yCAgYpDze,MAhYoD,EAgY3C;AAAA;;AACtB,iBAAK0e,kBAAL,GAA0B,IAA1B;AACA,iBAAKC,cAAL,GAAsB,IAAtB;AACA3e,kBAAM,GAAG,MAAH,OAAG,CAAH,kBAAOA,MAAP,CAAG,EAAU;AAAEsE,uBAAS,EAAC;AAAZ,aAAV,CAAT;AACA,iBAAKmL,yBAAL,CAA+BuO,cAA/B,CAA8Che,MAA9C,EACCiB,SADD,CAEE,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC8T,WAAL,GAAmB/T,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAnB;;AACA,oBAAGlB,QAAQ,CAACkB,IAAT,CAAc,OAAd,CAAH,EAA0B;AACxB,yBAAI,CAACsc,cAAL,GAAsB,KAAtB;AACD;;AACD,uBAAI,CAACC,aAAL,GAAqB,KAArB;;AACA,uBAAI,CAAC1J,WAAL,CAAiBvU,OAAjB,CAAyB,UAAAke,UAAU,EAAI;AACrC,yBAAI,CAACjI,sBAAL,CAA4BiI,UAA5B;;AACA,yBAAI,CAACL,yBAAL,CAA+BK,UAA/B;;AACA,yBAAI,CAACH,kBAAL,GAA0B,KAA1B;AACD,iBAJD;AAKD,eAXD,MAWO;AACL,uBAAI,CAACxJ,WAAL,GAAmB,EAAnB;AACA,uBAAI,CAAC0J,aAAL,GAAqB,IAArB;AACA,uBAAI,CAACF,kBAAL,GAA0B,KAA1B;AACD;AACF,aAnBH,EAoBE,UAACpd,KAAD,EAAW;AACT,qBAAI,CAAC4T,WAAL,GAAmB,EAAnB;AACA,qBAAI,CAAC0J,aAAL,GAAqB,IAArB;AACA,qBAAI,CAACF,kBAAL,GAA0B,KAA1B;AACD,aAxBH;AA0BD;AA9ZkE;AAAA;AAAA,wCAgarD1e,MAhaqD,EAga5C;AAAA;;AACrB,iBAAK0d,iBAAL,GAAyB,IAAzB;AACA,iBAAKjO,yBAAL,CAA+BrN,YAA/B,CAA4CpC,MAA5C,EAAoDiB,SAApD,CACE,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACvB,UAAL,GAAkBsB,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAlB;AACA,uBAAI,CAACyc,eAAL,GAAuB3d,QAAQ,CAACkB,IAAT,CAAc,MAAd,EAAsB5B,MAA7C;AACA,uBAAI,CAACid,iBAAL,GAAyB,KAAzB;AACD,eAJD,MAIO;AACL,uBAAI,CAAC7d,UAAL,GAAkB,EAAlB;AACA,uBAAI,CAACif,eAAL,GAAuB,CAAvB;AACA,uBAAI,CAACpB,iBAAL,GAAyB,KAAzB;AACD;AACF,aAXH,EAYE,UAACpc,KAAD,EAAW;AACT,qBAAI,CAACzB,UAAL,GAAkB,EAAlB;AACA,qBAAI,CAAC6d,iBAAL,GAAyB,KAAzB;AACD,aAfH;AAiBD;AAnbkE;AAAA;AAAA,yCAqbpDmB,UArboD,EAqb1C;AAAA;;AACvB,gBAAM7e,MAAM,GAAG6e,UAAU,SAAV,IAAAA,UAAU,WAAV,GAAAA,UAAA,GAAc,EAA7B;;AACA,gBAAMnT,OAAO,GAAG,MAAH,OAAG,CAAH,kBAAO1L,MAAP,CAAG,EAAU;AAACwV,qBAAO,EAAE;AAAV,aAAV,CAAhB;;AACA,iBAAK/F,yBAAL,CACCoC,sBADD,CACwBnG,OADxB,EAECzK,SAFD,CAGE,UAACE,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC3B,OAAL,CAAa4B,OAAb;;AACA,uBAAI,CAAC0d,SAAL;;AACA,uBAAI,CAACxO,qBAAL;AACD,eAJD,MAIO;AACL,uBAAI,CAAC9Q,OAAL,CAAa6B,KAAb;AACD;AACF,aAXH,EAYE,UAACA,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAlBH;AAoBH;AA5coE;AAAA;AAAA,oCA+czD0B,QA/cyD,EA+c7Bgc,KA/c6B,EA+crB;AAC5C,iBAAKJ,aAAL,GAAoB,IAApB;AACA,iBAAKjB,WAAL,GAAmB,KAAnB;AACA,gBAAMjS,OAAO,GAAG;AAACtL,+BAAiB,EAAE4e,KAAK,CAAC,mBAAD,CAAzB;AAA+C1e,qBAAO,EAAE;AAAxD,aAAhB;;AACA,gBAAM2e,aAAa,GAAG,MAAH,OAAG,CAAH,kBAAOvT,OAAP,CAAG,EAAW;AAAEwT,qBAAO,EAAE;AAAX,aAAX,CAAtB;;AACA,gBAAMC,gBAAgB,GAAG,MAAH,OAAG,CAAH,kBAAOzT,OAAP,CAAG,EAAW;AAAEwT,qBAAO,EAAE;AAAX,aAAX,CAAzB;;AACA,iBAAKjB,gBAAL,GAAwBe,KAAxB;AACA,iBAAKI,UAAL,CAAgBH,aAAhB;AACA,iBAAK9e,aAAL,CAAmBgf,gBAAnB;AACA,iBAAKE,YAAL,CAAkB3T,OAAlB;AACA,iBAAKsS,cAAL,CAAoBtS,OAApB;AACA,iBAAKjE,SAAL,GAAiB,KAAKxD,YAAL,CAAkBmH,IAAlB,CAAuBpI,QAAvB,EAAiC;AAChDqI,sBAAQ,EAAE,KADsC;AAEhD,uBAAO;AAFyC,aAAjC,CAAjB;AAID;AA9dkE;AAAA;AAAA,sCAgevD;AACV,iBAAK5D,SAAL,CAAeE,IAAf;AACD;AAlekE;AAAA;AAAA,+CAoe9C3E,QApe8C,EAoelB;AAC/C,gBAAM3C,EAAE,GAAG,KAAK4d,gBAAL,CAAsB,mBAAtB,CAAX;AACA,iBAAK1d,OAAL,GAAeF,EAAf;AACA,iBAAKsd,WAAL,GAAmB,IAAnB;AACA,iBAAK/V,SAAL,GAAiB,KAAK3D,YAAL,CAAkBmH,IAAlB,CAAuBpI,QAAvB,EAAiC;AAChDqI,sBAAQ,EAAE,IADsC;AAEhD,uBAAO,UAFyC;AAGhDiU,sBAAQ,EAAE;AAHsC,aAAjC,CAAjB;AAKD;AA7ekE;AAAA;AAAA,iDA8e5C;AACrB,iBAAK3B,WAAL,GAAmB,KAAnB;AACA,iBAAK/V,SAAL,CAAeD,IAAf;AACD;AAjfkE;AAAA;AAAA,qCAmfxD3H,MAnfwD,EAmf/C;AAClB,iBAAKP,OAAL,CAAawM,MAAb,CAAoB,qCAApB;AACA,gBAAMsT,GAAG,GAAGvf,MAAM,CAAC,mBAAD,CAAlB;AACA,iBAAKwd,UAAL,CAAgBgC,QAAhB,CAAyB,WAAzB,qCAAkED,GAAlE;AACD;AAvfkE;AAAA;AAAA,oCAyf5D;AAELzC,kBAAM,CAAC2C,KAAP;AACD;AA5fkE;AAAA;AAAA,wCAigBrDhT,KAjgBqD,EAigB9C;AACnB,iBAAKxK,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B+B,KAAK,CAACC,IAArC;AACA,iBAAKzK,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAKlF,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AAxgBkE;AAAA;AAAA,sCA0gBvD;AACV,gBAAIuD,OAAO,GAAG,EAAd;AACA,gBAAIiB,IAAI,GAAG,KAAK1K,IAAL,CAAUE,KAArB;;AAEA,iBAAK,IAAIyK,IAAT,IAAiBD,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACC,IAAD,CAAR,EAAgB;AACd,oBAAID,IAAI,CAACC,IAAD,CAAJ,YAAsBnE,IAA1B,EACEiD,OAAO,CAACkB,IAAD,CAAP,GAAgB,KAAKzI,WAAL,CAAiB0I,gBAAjB,CAAkCF,IAAI,CAACC,IAAD,CAAtC,CAAhB,CADF,KAEKlB,OAAO,CAACkB,IAAD,CAAP,GAAgBD,IAAI,CAACC,IAAD,CAApB;AACN;AACF;;AAED,mBAAOlB,OAAP;AACD;AAvhBkE;AAAA;AAAA,4CAyhBjDtK,MAzhBiD,EAyhBE;AACnE,gBAAI0L,WAAJ;;AAEA,gBAAI1L,MAAM,CAACd,OAAP,IAAkB,CAAtB,EAAyB;AACvBwM,yBAAW,GAAG,gBAAd;AACD,aAFD,MAEO,IAAI1L,MAAM,CAACd,OAAP,IAAkB,CAAtB,EAAyB;AAC9BwM,yBAAW,GAAG,eAAd;AACD;;AAED,mBAAOA,WAAP;AACD;AAniBkE;AAAA;AAAA,qCAqiBxD1L,MAriBwD,EAqiBH;AAAA;;AAC9D,gBAAM2L,IAAI,GAAG3L,MAAM,CAACd,OAAP,IAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAAvC;AAEA,iBAAK0M,aAAL,CAAmBD,IAAnB,EACGE,YADH,GAEGnL,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACC,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AACb,qBAAI,CAACjC,aAAL,GAAqB,IAArB;AACAsB,oBAAM,CAACd,OAAP,GAAiByM,IAAjB;AACA,qBAAO,OAAI,CAAC0C,yBAAL,CAA+BoC,sBAA/B,CAAsDzQ,MAAtD,CAAP;AACD,aALD,CAJJ,EAUI,iEAAS,YAAM;AACb,qBAAI,CAACtB,aAAL,GAAqB,KAArB;AACD,aAFD,CAVJ,EAcGmB,SAdH,CAeI,UAACI,OAAD,EAAkB;AAChB,qBAAI,CAAC5B,OAAL,CAAa4B,OAAb;AACD,aAjBL,EAkBI,UAACC,KAAD,EAAgB;AACdF,oBAAM,CAACd,OAAP,GAAiBc,MAAM,CAACd,OAAP,IAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAA3C;;AACA,qBAAI,CAACb,OAAL,CAAa6B,KAAb;AACD,aArBL;AAuBD;AA/jBkE;AAAA;AAAA,+CAikB9CtB,MAjkB8C,EAikBrC;AAAA;;AAC5B,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAACpL,OAAR,GAAkB,GAAlB;AAEF,iBAAKsQ,wBAAL,GAAgC,IAAhC;AACA,iBAAKlB,wBAAL,CACGW,oBADH,CACwB3E,OADxB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC8O,wBAAL,GAAgC,KAAhC;AACD,aAFD,CAHJ,EAOG3P,SAPH,CAOa,UAACE,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC6O,iBAAL,GAAyB9O,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAzB;AACD,eAFD,MAEM;AACJ,uBAAI,CAAC4N,iBAAL,GAAyB,EAAzB;AACD;AACF,aAbH,EAcE,UAAC3O,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,iDAAnB;AACD,aAhBH;AAkBC;AAxlBkE;AAAA;AAAA,wCA2lBrDyL,IA3lBqD,EA2lBjD;AAChB,gBAAIA,IAAI,IAAI,CAAZ,EACE,OAAO,KAAKpN,mBAAL,CAAyBkC,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAQF,mBAAO,KAAKlC,mBAAL,CAAyBkC,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AA5mBkE;AAAA;AAAA,qCA+mBxDyJ,MA/mBwD,EA+mB1C;AACvB,gBAAI,KAAKjH,OAAL,KAAiBiH,MAArB,EAA6B;AAC3B,kBAAI,KAAKhH,SAAL,IAAkB,MAAtB,EAA8B;AAC5B,qBAAKA,SAAL,GAAiB,KAAjB;AACD,eAFD,MAEO,IAAI,KAAKA,SAAL,IAAkB,KAAtB,EAA6B;AAClC,qBAAKA,SAAL,GAAiB,MAAjB;AACD;AACF,aAND,MAMO;AACL,mBAAKD,OAAL,GAAeiH,MAAf;AACA,mBAAKhH,SAAL,GAAiB,KAAjB;AACD;;AACD,iBAAK+F,QAAL;AACD;AA3nBkE;;AAAA;AAAA,S;;;;gBA7B5D;;gBAIA;;gBAJQ;;gBANR;;gBAFA;;gBASW;;gBAeC;;gBATZ;;gBAjBA;;gBAeA;;gBATA;;gBAUA;;gBAEA;;;;AAqBIkT,8DAAwD,6DALpE,gEAAU;AACTxa,gBAAQ,EAAE,sDADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAKoE,E,+EA+FlD,sD,EACE,4F,EACO,8D,EACW,sH,EACD,yI,EACb,0D,EACE,8D,EACF,sF,EACD,4E,EACS,wG,EACP,kE,EACC,0F,EACF,sF,EA3G4C,GAAxDua,wDAAwD,CAAxD;;;;;;;;;;;;;;;;ACvCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCAf;AAGA;;;UAQamC,iDAAiD;AAG5D,mEAAoBjS,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFH,eAAAC,GAAA,GAAM,yEAAYA,GAAlB;AAEuB,SAHoB,CAK9D;;;AAL8D;AAAA;AAAA,gDAMtC1N,MANsC,EAM7B;AAC7B,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,0DAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AAd2D;AAAA;AAAA,uCAgB/C3N,MAhB+C,EAgBtC;AACpB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,oEAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AAxB2D;AAAA;AAAA,iDA0BrC3N,MA1BqC,EA0BgB;AAC1E,mBAAO,KAAKyN,IAAL,CAAUG,IAAV,WACF,KAAKF,GADH,0DAEL1N,MAFK,EAGL;AACE2N,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD;AAlC2D;AAAA;AAAA,mDAoCnC3N,MApCmC,EAoC1B;AAChC,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,2DAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AA5C2D;AAAA;AAAA,oCA8ClD3N,MA9CkD,EA8CzC;AACjB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,oEAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD,WAtD2D,CA0D5D;;AA1D4D;AAAA;AAAA,uCA2D/C3N,MA3D+C,EA2DvC;AACnB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WAAiB,KAAKwL,GAAtB,qEAA2F;AAChG1N,oBAAM,EAAEA,MADwF;AAEhG2N,qBAAO,EAAE;AAFuF,aAA3F,CAAP;AAID;AAhE2D;AAAA;AAAA,wCAmE9C3N,MAnE8C,EAmEtCI,iBAnEsC,EAmEX;AAC/C,mBAAO,KAAKqN,IAAL,CAAUG,IAAV,WACF,KAAKF,GADH,8FAC0FtN,iBAD1F,GAELJ,MAFK,EAGL;AACE2N,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD;AA3E2D;AAAA;AAAA,uCA6E/C3N,MA7E+C,EA6EvC;AACnB,mBAAO,KAAKyN,IAAL,CAAUkS,GAAV,WACF,KAAKjS,GADH,qEAEL1N,MAFK,EAGL;AACE2N,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD,WArF2D,CAuF9D;;AAvF8D;AAAA;AAAA,iDAwFrC3N,MAxFqC,EAwF7B;AAC7B,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WAAiB,KAAKwL,GAAtB,iFAAuG;AAC5G1N,oBAAM,EAAEA,MADoG;AAE5G2N,qBAAO,EAAE;AAFmG,aAAvG,CAAP;AAID;AA7F2D;AAAA;AAAA,kDAgGpC3N,MAhGoC,EAgG5BuV,sBAhG4B,EAgGI;AAC9D,mBAAO,KAAK9H,IAAL,CAAUG,IAAV,WACF,KAAKF,GADH,+GAC2G6H,sBAD3G,GAELvV,MAFK,EAGL;AACE2N,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD;AAxG2D;AAAA;AAAA,iDA0GrC3N,MA1GqC,EA0G7B;AAC7B,mBAAO,KAAKyN,IAAL,CAAUkS,GAAV,WACF,KAAKjS,GADH,iFAEL1N,MAFK,EAGL;AACE2N,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD,WAlH2D,CAoH5D;;AApH4D;AAAA;AAAA,0CAqH5C3N,MArH4C,EAqHnC;AACvB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,oEAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AA7H2D;AAAA;AAAA,wCA+H9CrI,KA/H8C,EA+HvC;AACnB,mBAAO,KAAKmI,IAAL,CAAUG,IAAV,WACF,KAAKF,GADH,oEAELpI,KAFK,EAGL;AACEqI,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD,WAvI2D,CA0I5D;;AA1I4D;AAAA;AAAA,yCA2I7C3N,MA3I6C,EA2IpC;AACtB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,sEAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AAnJ2D;AAAA;AAAA,0CAqJ5C3N,MArJ4C,EAqJS;AACnE,mBAAO,KAAKyN,IAAL,CAAUG,IAAV,WACF,KAAKF,GADH,sEAEL1N,MAFK,EAGL;AACE2N,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD,WA7J2D,CAgK5D;;AAhK4D;AAAA;AAAA,2CAiK3C3N,MAjK2C,EAiKU;AACpE,mBAAO,KAAKyN,IAAL,CAAUG,IAAV,WACF,KAAKF,GADH,mFAEL1N,MAFK,EAGL;AACE2N,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD;AAzK2D;AAAA;AAAA,oDA2KlC3N,MA3KkC,EA2K1B;AAChC,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WAAiB,KAAKwL,GAAtB,mFAAyG;AAC9G1N,oBAAM,EAAEA,MADsG;AAE9G2N,qBAAO,EAAE;AAFqG,aAAzG,CAAP;AAID;AAhL2D;AAAA;AAAA,sCAmLhD3N,MAnLgD,EAmLvC;AACnB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,4BAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AA3L2D;AAAA;AAAA,0CA4L5C3N,MA5L4C,EA4LnC;AACvB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,uEAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AApM2D;;AAAA;AAAA,S;;;;gBANrD;;;;AAMI+R,uDAAiD,6DAH7D,iEAAW;AACV7R,kBAAU,EAAE;AADF,OAAX,CAG6D,E,+EAGlC,+D,EAHkC,GAAjD6R,iDAAiD,CAAjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC6BAE,mCAAmC;AAAA;AAAA,O;;AAAnCA,yCAAmC,6DApB/C,+DAAS;AACRC,oBAAY,EAAE,CACZ,oGADY,EAEZ,0IAFY,EAGZ,sJAHY,CADN;AAMRvc,eAAO,EAAE,CACP,4DADO,EAEP,4GAFO,EAGP,sFAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,iFANO,EAOP,4DAAcwc,OAAd,EAPO,EAQP,+DAAiBA,OAAjB,EARO,EASP,iEAAmBA,OAAnB,EATO,EAUP,mEAVO,EAWP,yFAXO;AAND,OAAT,CAoB+C,GAAnCF,mCAAmC,CAAnC;;;;;;;;;;;;;;;;ACxCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFG,sCAAsC;AAejD,wDACU7R,iBADV,EAEUH,MAFV,EAGUE,YAHV,EAIUxO,OAJV,EAKUC,cALV,EAKwC;AAAA;;AAJ9B,eAAAwO,iBAAA,GAAAA,iBAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACA,eAAAE,YAAA,GAAAA,YAAA;AACA,eAAAxO,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AAnBV,eAAAK,OAAA,GAAmB,IAAnB;AAEA,eAAAwK,cAAA,GAAsB,CACpB;AACEC,qBAAS,EAAE,MADb;AAEEC,sBAAU,EAAE;AAFd,WADoB,EAKpB;AACED,qBAAS,EAAE;AADb,WALoB,CAAtB;AAUA,eAAA2M,UAAA,GAAkB,EAAlB;AAQI;;AArB6C;AAAA;AAAA,qCAuBzC;AAAA;;AACN,iBAAKlJ,YAAL,CAAkBU,QAAlB,CAA2B,sBAA3B;AACA,iBAAKjP,cAAL,CAAoBM,MAApB,CAA2BiB,SAA3B,CAAqC,UAACjB,MAAD,EAAiB;AACpD,qBAAI,CAACsO,eAAL;;AACA,qBAAI,CAACgJ,qBAAL,CAA2BtX,MAAM,CAAC,aAAD,CAAjC;AACD,aAHD;AAID;AA7BgD;AAAA;AAAA,4CA+BlC;AACb,iBAAKkO,iBAAL,CAAuBI,eAAvB,GAAyCrN,SAAzC;AACD;AAjCgD;AAAA;AAAA,gDAmC3BqJ,WAnC2B,EAmCR;AAAA;;AACvC,iBAAK4D,iBAAL,CAAuBoJ,qBAAvB,CAA6ChN,WAA7C,EAA0DrJ,SAA1D,CACE,UAAA+e,GAAG,EAAI;AACL,kBAAIA,GAAG,CAAC,cAAD,CAAH,KAAwB,GAA5B,EAAiC;AAC/B,uBAAI,CAAC7I,UAAL,GAAkB6I,GAAG,CAAC,QAAD,CAArB;AACA,uBAAI,CAACjgB,OAAL,GAAe,KAAf;AACD,eAHD,MAGO;AACL,uBAAI,CAAC2X,6BAAL;AACD;AACF,aARH,EASE,UAAApW,KAAK,EAAI;AACP,qBAAI,CAACoW,6BAAL;AACD,aAXH;AAaD;AAjDgD;AAAA;AAAA,0DAmDpB;AAC3B,iBAAKjY,OAAL,CAAa6B,KAAb;AACA,iBAAKyM,MAAL,CAAYpD,QAAZ,CAAqB,CAAC,sBAAD,CAArB;AACD;AAtDgD;;AAAA;AAAA,S;;;;gBAT1C;;gBAHA;;gBAKA;;gBADA;;gBAJQ;;;;AAYJoV,4CAAsC,6DALlD,gEAAU;AACThd,gBAAQ,EAAE,kCADD;AAETC,gBAAQ,EAAR,oFAFS;;AAAA,OAAV,CAKkD,E,+EAgBpB,qG,EACX,sD,EACM,uF,EACL,2F,EACO,8D,EApBuB,GAAtC+c,sCAAsC,CAAtC;;;;;;;;;;;;;;;;ACZb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCAf;AAKA;AASA;;;UAmBaE,wDAAwD;AA0DnE;AAEA,0EACUvc,KADV,EAEUjE,OAFV,EAGUC,cAHV,EAIUoE,wBAJV,EAKUC,WALV,EAMUC,WANV,EAOUrE,mBAPV,EAQUuE,aARV,EASUC,WATV,EAUU2T,kBAVV,EAUgD;AAAA;;AATtC,eAAApU,KAAA,GAAAA,KAAA;AACA,eAAAjE,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAoE,wBAAA,GAAAA,wBAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAArE,mBAAA,GAAAA,mBAAA;AACA,eAAAuE,aAAA,GAAAA,aAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAA2T,kBAAA,GAAAA,kBAAA;AAjEV,eAAAC,eAAA,GAAkB,KAAlB;AAMA,eAAA1T,OAAA,GAAU,wBAAV;AACA,eAAAC,SAAA,GAAY,MAAZ,CA0DgD,CAzDhD;;AACA,eAAAvE,OAAA,GAAU,IAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB,CAuDgD,CArDhD;;AACA,eAAAuF,UAAA,GAAkB,EAAlB;AAGA,eAAA6a,UAAA,GAAa,EAAb,CAiDgD,CA/ChD;;AACA,eAAAra,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C,CA8CgD,CA1ChD;;AACA,eAAAC,KAAA,GAAQ,CACN;AACEC,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADM,EAKN;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALM,CAAR,CAyCgD,CA9BhD;;AACA,eAAAE,SAAA,GAA8B,CAC5B;AACE9F,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACEhG,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA;;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AAcI;;AAvE+D;AAAA;AAAA,qCAyExD;AACT,iBAAKQ,SAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,gBAAL;AACA,iBAAK+Q,oBAAL;AACD;AA9EkE;AAAA;AAAA,wCAgFrD;AACZ,iBAAK1Q,2BAAL,CAAiCC,WAAjC;AACD;AAlFkE;AAAA;AAAA,6CAoFhD;AAAA;;AACjB,iBAAKD,2BAAL,GAAmC,KAAK7H,cAAL,CAAoBmI,WAApB,CAAgC5G,SAAhC,CACjC,UAACE,QAAD,EAAc;AACZ,kBAAM2G,SAAS,GAAG,OAAI,CAAC5D,aAAL,CAAmB6D,kBAAnB,CAAsC5G,QAAtC,CAAlB;;AACA,qBAAI,CAACc,IAAL,CAAU+F,UAAV,CAAqBF,SAArB;;AACA,kBAAIA,SAAS,CAAC5H,cAAV,CAAyB,cAAzB,CAAJ,EACE,OAAI,CAACoG,YAAL,GAAoBwB,SAAS,CAACG,YAA9B;;AACF,qBAAI,CAACZ,oBAAL,CAA0B,OAAI,CAACc,SAAL,EAA1B;AACD,aAPgC,CAAnC;AASD;AA9FkE;AAAA;AAAA,iDAgG/C;AAAA;;AAClB,iBAAK+P,2BAAL,GAAmC,KAAKJ,kBAAL,CAAwBK,MAAxB,CAA+BlX,SAA/B,CACjC,UAACwL,KAAD,EAAgB;AACd,qBAAI,CAACsL,eAAL,GAAuBtL,KAAK,CAAC2L,OAA7B;AACD,aAHgC,CAAnC;AAKD;AAtGkE;AAAA;AAAA,oCAwGzD;AACR,iBAAKnW,IAAL,CAAUmG,KAAV;AACA,iBAAKnG,IAAL,CAAU+F,UAAV,CAAqB;AACnBK,kBAAI,EAAE,CADa;AAEnBJ,0BAAY,EAAE,GAFK;AAGnBU,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD;AAHa,aAArB;AAKD;AA/GkE;AAAA;AAAA,sCAiHvD;AACV,iBAAK3G,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjCS,oCAAsB,EAAE,CAAC,IAAD,CADS;AAEjCC,qBAAO,EAAE,CAAC,IAAD,CAFwB;AAGjCjJ,qBAAO,EAAE,CAAC,IAAD,CAHwB;AAIjC2J,qBAAO,EAAE,CAAC,IAAD,CAJwB;AAKjCwL,qBAAO,EAAE,CAAC,IAAD,CALwB;AAMjCnJ,qBAAO,EAAE,CAAC,IAAD,CANwB;AAOjClC,qBAAO,EAAE,CAAC,IAAD,CAPwB;AAQjCgT,qBAAO,EAAE,CAAC,IAAD,CARwB;AASjC/U,kBAAI,EAAE,CAAC,CAAD,CAT2B;AAUjCJ,0BAAY,EAAE,CAAC,KAAK3B,YAAN,CAVmB;AAWjCqC,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD,CAX2B;AAYjCvE,qBAAO,EAAE,CAAC,KAAKA,OAAN,CAZwB;AAajCC,uBAAS,EAAE,CAAC,KAAKA,SAAN;AAbsB,aAAvB,CAAZ;AAeD;AAjIkE;AAAA;AAAA,2CAmIlDgC,YAnIkD,EAmIpC;AAC7B,iBAAKA,YAAL,GAAoBA,YAApB;AACA,iBAAK+D,QAAL;AACD;AAtIkE;AAAA;AAAA,0CAwInD;AACd,gBAAMhK,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKC,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU;AAFZ,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE;AADb,aAToB,CAAtB;AAaD;AAvJkE;AAAA;AAAA,qCAyJxD;AACT,iBAAKsN,kBAAL,CAAwBnQ,IAAxB;AACA,iBAAK1F,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,CAA/B;AACA,iBAAKzI,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAK3G,IAAL,CAAUC,GAAV,CAAc,WAAd,EAA2BwI,QAA3B,CAAoC,KAAKpG,SAAzC;AACA,iBAAKrC,IAAL,CAAUC,GAAV,CAAc,SAAd,EAAyBwI,QAAzB,CAAkC,KAAKrG,OAAvC;AACA,iBAAKX,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AAnKkE;AAAA;AAAA,oCAqKzD/G,MArKyD,EAqKN;AAC3D,iBAAK0W,kBAAL,CAAwB1M,IAAxB;AACA,iBAAK+U,iBAAL,GAAyB/e,MAAzB;AACA,iBAAKgf,YAAL,CAAkBhf,MAAlB,EAH2D,CAI3D;AACD;AA1KkE;AAAA;AAAA,+CA4K9CpB,MA5K8C,EA4KrC;AAAA;;AAC5B,gBAAI,CAAC,KAAKD,OAAV,EAAmB,KAAKD,aAAL,GAAqB,IAArB;AACnB,iBAAKgE,wBAAL,CACGuD,oBADH,CACwBrH,MADxB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACgE,iBAAL,GAAyBjE,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAzB;AACA,uBAAI,CAACkE,UAAL,GAAkBpF,QAAQ,CAACkB,IAAT,CAAc,OAAd,CAAlB;AACA,uBAAI,CAACoJ,QAAL,GAAgB,KAAhB;AACD,eAJD,MAIO;AACL,uBAAI,CAACA,QAAL,GAAgB,IAAhB;AACA,uBAAI,CAACrG,iBAAL,GAAyB,EAAzB;AACD;AACF,aAlBL,EAmBI,UAAC9D,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAzBL;AA0BD;AAxMkE;AAAA;AAAA,wCA2MrDmL,KA3MqD,EA2M9C;AACnB,iBAAKxK,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B+B,KAAK,CAACC,IAArC;AACA,iBAAKzK,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAKlF,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AAlNkE;AAAA;AAAA,sCAoNvD;AACV,gBAAIuD,OAAO,GAAG,EAAd;AACA,gBAAIiB,IAAI,GAAG,KAAK1K,IAAL,CAAUE,KAArB;;AAEA,iBAAK,IAAIyK,IAAT,IAAiBD,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACC,IAAD,CAAR,EAAgB;AACd,oBAAID,IAAI,CAACC,IAAD,CAAJ,YAAsBnE,IAA1B,EACEiD,OAAO,CAACkB,IAAD,CAAP,GAAgB,KAAKzI,WAAL,CAAiB0I,gBAAjB,CAAkCF,IAAI,CAACC,IAAD,CAAtC,CAAhB,CADF,KAEKlB,OAAO,CAACkB,IAAD,CAAP,GAAgBD,IAAI,CAACC,IAAD,CAApB;AACN;AACF;;AAED,mBAAOlB,OAAP;AACD;AAjOkE;AAAA;AAAA,4CAmOjDtK,MAnOiD,EAmOE;AACnE,gBAAI0L,WAAJ;;AAEA,gBAAI1L,MAAM,CAACd,OAAP,IAAkB,CAAtB,EAAyB;AACvBwM,yBAAW,GAAG,gBAAd;AACD,aAFD,MAEO,IAAI1L,MAAM,CAACd,OAAP,IAAkB,CAAtB,EAAyB;AAC9BwM,yBAAW,GAAG,eAAd;AACD;;AAED,mBAAOA,WAAP;AACD;AA7OkE;AAAA;AAAA,qCA+OxD1L,MA/OwD,EA+OH;AAAA;;AAC9D,gBAAM2L,IAAI,GAAG3L,MAAM,CAACd,OAAP,IAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAAvC;AAEA,iBAAK0M,aAAL,CAAmBD,IAAnB,EACGE,YADH,GAEGnL,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACC,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AAEb,qBAAI,CAACjC,aAAL,GAAqB,IAArB;AACAsB,oBAAM,CAACd,OAAP,GAAiByM,IAAjB;AACA,qBAAO,OAAI,CAACjJ,wBAAL,CAA8Buc,qBAA9B,CAAoDjf,MAApD,CAAP;AACD,aAND,CAJJ,EAWI,iEAAS,YAAM;AACb,qBAAI,CAACtB,aAAL,GAAqB,KAArB;AACD,aAFD,CAXJ,EAeGmB,SAfH,CAgBI,UAACI,OAAD,EAAkB;AAChB,qBAAI,CAAC5B,OAAL,CAAa4B,OAAb;AACD,aAlBL,EAmBI,UAACC,KAAD,EAAgB;AACdF,oBAAM,CAACd,OAAP,GAAiBc,MAAM,CAACd,OAAP,IAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAA3C;;AACA,qBAAI,CAACb,OAAL,CAAa6B,KAAb;AACD,aAtBL;AAwBD;AA1QkE;AAAA;AAAA,wCA4QrDyL,IA5QqD,EA4QjD;AAChB,gBAAIA,IAAI,IAAI,CAAZ,EACE,OAAO,KAAKpN,mBAAL,CAAyBkC,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAQF,mBAAO,KAAKlC,mBAAL,CAAyBkC,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AA7RkE;AAAA;AAAA,qCA+R3D;AACN,gBAAIuK,IAAI,GAAG,IAAI3D,IAAJ,GAAW0E,kBAAX,GAAgCC,KAAhC,CAAsC,GAAtC,CAAX;AAAA,gBACEC,UAAU,aAAMjB,IAAI,CAAC,CAAD,CAAV,SAAgBA,IAAI,CAAC,CAAD,CAApB,SAA0BA,IAAI,CAAC,CAAD,CAA9B,CADZ;AAGA,gBAAIkB,cAAc,GAAQ,EAA1B;AACAA,0BAAc,GAAG,KAAKlI,iBAAL,CAAuBoT,MAAvB,CAA8B,KAAKnT,UAAnC,CAAjB;AAEA,iBAAKrB,WAAL,CAAiBuJ,UAAjB,CAA4BD,cAA5B,8BAAiED,UAAjE;AACD;AAvSkE;AAAA;AAAA,uCAyStDjM,MAzSsD,EAyShD;AAAA;;AAEjB,gBAAGA,MAAM,CAAC8e,UAAV,EAAqB;AACnB,mBAAKA,UAAL,GAAkB9e,MAAM,CAAC8e,UAAzB;AACA;AACD;;AAED,gBAAMlgB,MAAM,GAAGoB,MAAf;AAEA,iBAAK0C,wBAAL,CACGsc,YADH,CACgBpgB,MADhB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACgW,kBAAL,CAAwBQ,cAAxB,CAAuC,KAAvC;AACD,aAFD,CAHJ,EAOGrX,SAPH,CAQI,UAACE,QAAD,EAAc;AACZC,oBAAM,CAAC8e,UAAP,GAAoB/e,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAApB;AACA,qBAAI,CAAC6d,UAAL,GAAkB/e,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAlB;AACD,aAXL,EAYI,UAACf,KAAD,EAAgB,CACf,CAbL;AAcD;AAhUkE;AAAA;AAAA,iDAkU5Cgf,QAlU4C,EAkUlChe,KAlUkC,EAkU7B;;;AAEpC,gBAAG,CAAAge,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEC,OAAV,MAAsB,QAAzB,EAAkC;AAChC,qBAAO,sBAAP;AACD;;AAED,gBAAGje,KAAK,IAAI,CAAZ,EAAc;AACZ,qBAAO,sBAAP;AACD;;AAED,gBAAG,CAAAge,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEhgB,OAAV,MAAiB,MAAI,KAAK4f,UAAL,CAAgB5d,KAAK,GAAC,CAAtB,CAAJ,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAEhC,OAA/C,CAAH,EAA0D;AAExD,kBAAG,CAAAggB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEhgB,OAAV,KAAqB,CAAxB,EAA0B;AACxB;AACD;;AAED;AAED;;AAED,gBAAG,CAAAggB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAErW,OAAV,MAAiB,MAAI,KAAKiW,UAAL,CAAgB5d,KAAK,GAAC,CAAtB,CAAJ,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAE2H,OAA/C,CAAH,EAA0D;AACxD,qBAAO,sBAAP;AACD;;AAGD,6DAA0C,WAAKiW,UAAL,CAAgB5d,KAAK,GAAC,CAAtB,OAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEiH,OAApE,mBAAoF+W,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAE/W,OAA9F;AAED;AA7VkE;AAAA;AAAA,qCA+VxD+B,MA/VwD,EA+V1C;AACvB,gBAAI,KAAKjH,OAAL,KAAiBiH,MAArB,EAA6B;AAC3B,kBAAI,KAAKhH,SAAL,IAAkB,MAAtB,EAA8B;AAC5B,qBAAKA,SAAL,GAAiB,KAAjB;AACD,eAFD,MAEO,IAAI,KAAKA,SAAL,IAAkB,KAAtB,EAA6B;AAClC,qBAAKA,SAAL,GAAiB,MAAjB;AACD;AACF,aAND,MAMO;AACL,mBAAKD,OAAL,GAAeiH,MAAf;AACA,mBAAKhH,SAAL,GAAiB,KAAjB;AACD;;AACD,iBAAK+F,QAAL;AACD;AA3WkE;;AAAA;AAAA,S;;;;gBA/B5D;;gBAIA;;gBAJQ;;gBAOR;;gBANW;;gBAQX;;gBAJA;;gBAGA;;gBAEA;;gBAJA;;;;AAyBI4V,8DAAwD,6DALpE,gEAAU;AACTld,gBAAQ,EAAE,sDADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAKoE,E,+EA6DlD,sD,EACE,2F,EACO,8D,EACU,sH,EACb,0D,EACA,qF,EACQ,uG,EACN,0F,EACF,sF,EACO,qG,EAtEqC,GAAxDid,wDAAwD,CAAxD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCjCb;AAMA;AAIA;;;UAsBaO,2DAA2D;AAmBtE,6EACUzS,MADV,EAEUhK,WAFV,EAGUtE,OAHV,EAIUwO,YAJV,EAKUtK,aALV,EAMUjE,cANV,EAOUwO,iBAPV,EAQUpK,wBARV,EAQqF;AAAA;;AAP3E,eAAAiK,MAAA,GAAAA,MAAA;AACA,eAAAhK,WAAA,GAAAA,WAAA;AACA,eAAAtE,OAAA,GAAAA,OAAA;AACA,eAAAwO,YAAA,GAAAA,YAAA;AACA,eAAAtK,aAAA,GAAAA,aAAA;AACA,eAAAjE,cAAA,GAAAA,cAAA;AACA,eAAAwO,iBAAA,GAAAA,iBAAA;AACA,eAAApK,wBAAA,GAAAA,wBAAA;AAvBV,eAAAyG,cAAA,GAA6B,EAA7B;AAIA,eAAA3K,QAAA,GAA4B,EAA5B;AAEA,eAAAuO,YAAA,GAAe,KAAf,CAiBqF,CAfrF;;AACA,eAAApO,OAAA,GAAU,KAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB,CAaqF,CAXrF;;AACA,eAAAsF,iBAAA,GAAwE,EAAxE;AAoBO,eAAAiJ,KAAA,GAAQ,kDAAQA,KAAhB;AARL,eAAK1K,aAAL,CAAmB8C,GAAnB,CAAuB,OAAvB;AACA,eAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAP,CACd,EADc,EAEd;AAAEC,0BAAc,EAAE;AAAlB,WAFc,EAGd;AAAEC,4BAAgB,EAAE;AAApB,WAHc,EAId;AAAEC,2BAAe,EAAE;AAAnB,WAJc,CAAhB;AAMD;;AApCqE;AAAA;AAAA,qCAuC9D;AACN,iBAAKuH,eAAL;AACA,iBAAKrH,aAAL;AACA,iBAAKsH,cAAL;AACA,iBAAKrH,gBAAL;AACD;AA5CqE;AAAA;AAAA,4CA8CvD;AACb,iBAAKgH,iBAAL,CAAuBI,eAAvB,GAAyCrN,SAAzC;AACD;AAhDqE;AAAA;AAAA,6CAkDnD;AACjB,gBAAMyK,OAAO,GAAG,KAAKhM,cAAL,CAAoBO,QAApB,CAA6BD,MAA7C;AACA,gBAAI0L,OAAO,CAACxL,cAAR,CAAuB,IAAvB,CAAJ,EACA,OAAO,KAAKmH,oBAAL,CAA0B;AAAEiC,oCAAsB,EAAEoC,OAAO,CAAC,IAAD;AAAjC,aAA1B,CAAP;AACD;AAtDqE;AAAA;AAAA,+CAyDjD1L,MAzDiD,EAyDc;AAAA;;AAClF,iBAAKD,OAAL,GAAe,IAAf;;AACA,gBAAM2L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA,iBAAK8D,wBAAL,CACGuD,oBADH,CACwBqE,OADxB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACa,IAAL,CAAU+F,UAAV,CAAqB7G,QAAQ,CAACkB,IAAT,CAAc,MAAd,EAAsB,CAAtB,CAArB;;AACA,uBAAI,CAACoJ,QAAL,GAAgB,KAAhB;AACD,eAHD,MAGO;AACL,uBAAI,CAACA,QAAL,GAAgB,IAAhB;AACD;AACF,aAhBL,EAiBI,UAACnK,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,qBAAI,CAACmK,QAAL,GAAgB,IAAhB;AACD,aApBL;AAsBD;AAlFqE;AAAA;AAAA,0CAoFzD;AACX,gBAAMpL,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKoE,QAAL,GAAgB,UAAhB;AACA,iBAAKT,YAAL,CAAkBU,QAAlB,CAA2B,KAAKD,QAAhC;AACA,iBAAKnE,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU,EAAE;AAFd,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE,uBADb;AAEEC,wBAAU;AAFZ,aAToB,EAapB;AACED,uBAAS,EAAE,KAAKkE;AADlB,aAboB,CAAtB;AAiBD,WAzGqE,CA2GtE;;AA3GsE;AAAA;AAAA,2CA4GxD;AACZ,iBAAKzM,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjCS,oCAAsB,EAAE,CAAC,IAAD,CADS;AAEjCC,qBAAO,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWsF,QAAZ,CAAP,CAFwB;AAGjCvO,qBAAO,EAAE,CAAC,IAAD,CAHwB;AAIjC2J,qBAAO,EAAE,CAAC,IAAD;AAJwB,aAAvB,CAAZ;AAMD,WAnHqE,CAqHtE;;AArHsE;AAAA;AAAA,uCAsHzD6E,KAtHyD,EAsH1C;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AA3HqE;AAAA;AAAA,yCA6HvDA,KA7HuD,EA6H3C;AACzBA,iBAAK,GAAG,KAAK7M,IAAL,CAAUC,GAAV,CAAc4M,KAAd,CAAR;AACA,mBAAOA,KAAK,CAAC1N,MAAN,IAAgB,SAAhB,IAA6B0N,KAAK,CAACE,OAA1C;AACD;AAhIqE;AAAA;AAAA,0CAkItDF,KAlIsD,EAkIvC;AAC7B,gBAAID,QAAQ,GAAG,KAAf;AACA,gBAAII,WAAW,GAAG,IAAI,2DAAJ,EAAlB;;AAEA,gBAAI,KAAKhN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA9B,EAAyC;AACvC,kBAAIC,gBAAgB,GAAG,KAAKnN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA1B,CAAoCF,WAApC,CAAvB;AACAJ,sBAAQ,GACNO,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACP,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AA/IqE;AAAA;AAAA,kDAiJ9C;AAAA;;AACtB,iBAAK/O,aAAL,GAAqB,IAArB;AACA,iBAAKgE,wBAAL,CACGuc,qBADH,CACyB,KAAKpe,IAAL,CAAUE,KADnC,EAEGL,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC3B,OAAL,CAAa4B,OAAb;;AACA,uBAAI,CAAC0M,MAAL,CAAYpD,QAAZ,CAAqB,CAAC,KAAD,CAArB,EAA8B;AAC5BC,4BAAU,EAAE,OAAI,CAAClL;AADW,iBAA9B;AAGD,eALD,MAKO;AACL,uBAAI,CAACD,OAAL,CAAa6B,KAAb;AACD;AACF,aAlBL,EAmBI,UAACA,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,uBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAzBL;AA2BD;AA9KqE;;AAAA;AAAA,S;;;;gBArB/C;;gBAIvB;;gBAZO;;gBAFA;;gBAOgC;;gBAGhC;;gBATA;;gBAEA;;;;AA4BIkf,iEAA2D,6DALvE,iEAAU;AACTzd,gBAAQ,EAAE,oDADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAKuE,E,+EAoBpD,sD,EACK,2D,EACJ,2F,EACK,uF,EACC,6D,EACC,8D,EACG,qG,EACO,sH,EA3BkC,GAA3Dwd,2DAA2D,CAA3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eC9Bb;AAKA;AAWA;;;UAmBaC,sDAAsD;AAsEjE;AAEA,wEACU/c,KADV,EAEUjE,OAFV,EAGUkE,aAHV,EAIUjE,cAJV,EAKUghB,iBALV,EAMU3c,WANV,EAOU4c,eAPV,EAQUtM,cARV,EASUrQ,WATV,EAUUC,YAVV,EAWUtE,mBAXV,EAYUuE,aAZV,EAaUC,WAbV,EAcU2T,kBAdV,EAcgD;AAAA;;AAbtC,eAAApU,KAAA,GAAAA,KAAA;AACA,eAAAjE,OAAA,GAAAA,OAAA;AACA,eAAAkE,aAAA,GAAAA,aAAA;AACA,eAAAjE,cAAA,GAAAA,cAAA;AACA,eAAAghB,iBAAA,GAAAA,iBAAA;AACA,eAAA3c,WAAA,GAAAA,WAAA;AACA,eAAA4c,eAAA,GAAAA,eAAA;AACA,eAAAtM,cAAA,GAAAA,cAAA;AACA,eAAArQ,WAAA,GAAAA,WAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAtE,mBAAA,GAAAA,mBAAA;AACA,eAAAuE,aAAA,GAAAA,aAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAA2T,kBAAA,GAAAA,kBAAA;AA7EV,eAAAC,eAAA,GAAkB,KAAlB,CA6EgD,CA1EhD;;AACA,eAAAhY,OAAA,GAAU,IAAV;AACA,eAAA6gB,cAAA,GAAiB,KAAjB;AACA,eAAA9gB,aAAA,GAAgB,KAAhB;AACA,eAAA+gB,YAAA,GAAe,KAAf,CAsEgD,CApEhD;;AACA,eAAAxb,UAAA,GAAkB,EAAlB;AACA,eAAAiP,OAAA,GAAS,EAAT;AAGA,eAAAwM,OAAA,GAAsB,EAAtB;AACA,eAAAC,sBAAA,GAAyB,CAAzB,CA8DgD,CA5DhD;;AACA,eAAAlb,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C,CA2DgD,CAvDhD;;AACA,eAAAC,KAAA,GAAQ,CACN;AACEC,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADM,EAKN;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALM,EASN;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WATM,CAAR,CAsDgD,CAvChD;;AACA,eAAAE,SAAA,GAA8B,CAC5B;AACE9F,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,UAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACEhG,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,WAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,EAW5B;AACEhG,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,UAFR;AAGEC,iBAAK,EAAE;AAHT,WAX4B,CAA9B;AAkBA;;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AAmBE,eAAK7C,aAAL,CAAmB8C,GAAnB,CAAuB,OAAvB;AACA,eAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAP,CACd,EADc,EAEd;AAAEC,0BAAc,EAAE;AAAlB,WAFc,EAGd;AAAEC,4BAAgB,EAAE;AAApB,WAHc,EAId;AAAEC,2BAAe,EAAE;AAAnB,WAJc,CAAhB;AAMD;;AA/FgE;AAAA;AAAA,qCAiGtD;AACT,iBAAKC,SAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,gBAAL;AACA,iBAAK+Q,oBAAL;AACD;AAtGgE;AAAA;AAAA,wCAwGnD;AACZ,iBAAK1Q,2BAAL,CAAiCC,WAAjC;AACD;AA1GgE;AAAA;AAAA,6CA4G9C;AAAA;;AACjB,iBAAKD,2BAAL,GAAmC,KAAK7H,cAAL,CAAoBmI,WAApB,CAAgC5G,SAAhC,CACjC,UAACE,QAAD,EAAc;AACZ,kBAAM2G,SAAS,GAAG,OAAI,CAAC5D,aAAL,CAAmB6D,kBAAnB,CAAsC5G,QAAtC,CAAlB;;AACA,qBAAI,CAACc,IAAL,CAAU+F,UAAV,CAAqBF,SAArB;;AACA,kBAAIA,SAAS,CAAC5H,cAAV,CAAyB,cAAzB,CAAJ,EACE,OAAI,CAACoG,YAAL,GAAoBwB,SAAS,CAACG,YAA9B;;AACF,qBAAI,CAAC+Y,eAAL,CAAqB,OAAI,CAAC7Y,SAAL,EAArB;AACD,aAPgC,CAAnC;AASD;AAtHgE;AAAA;AAAA,iDAwH7C;AAAA;;AAClB,iBAAK+P,2BAAL,GAAmC,KAAKJ,kBAAL,CAAwBK,MAAxB,CAA+BlX,SAA/B,CACjC,UAACwL,KAAD,EAAgB;AACd,qBAAI,CAACsL,eAAL,GAAuBtL,KAAK,CAAC2L,OAA7B;AACD,aAHgC,CAAnC;AAKD;AA9HgE;AAAA;AAAA,oCAgIvDpV,QAhIuD,EAgI3B5B,MAhI2B,EAgInB;AAC5C,iBAAK2f,sBAAL,GAA8B,CAA9B;AACA,iBAAKF,YAAL,GAAoB,IAApB;AACA,gBAAMnV,OAAO,GAAGtK,MAAM,CAAC6f,2BAAvB;AACA,iBAAK1M,UAAL;AACA,iBAAK2M,WAAL,CAAiB;AAAC,yBAAUxV;AAAX,aAAjB;AACA,iBAAKyV,sBAAL,GAA8B/f,MAA9B;AACA,iBAAKkP,QAAL,GAAgB,KAAKrM,YAAL,CAAkBmH,IAAlB,CAAuBpI,QAAvB,EAAiC;AAC/CqI,sBAAQ,EAAE,KADqC;AAE/C,uBAAO;AAFwC,aAAjC,CAAhB;AAID;AA3IgE;AAAA;AAAA,sCA6IrD;AACV,iBAAKiF,QAAL,CAAc3I,IAAd;AACD;AA/IgE;AAAA;AAAA,oCAiJvD;AACR,iBAAK1F,IAAL,CAAUmG,KAAV;AACA,iBAAKnG,IAAL,CAAU+F,UAAV,CAAqB;AACnBK,kBAAI,EAAE,CADa;AAEnBJ,0BAAY,EAAE,GAFK;AAGnBU,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD;AAHa,aAArB;AAKD;AAxJgE;AAAA;AAAA,sCA0JrD5I,MA1JqD,EA0J5C;AAAA;;AACnB,gBAAI,CAAC,KAAKD,OAAV,EACE,KAAK8gB,YAAL,GAAoB,IAApB;AAEF,iBAAKF,eAAL,CACGze,GADH,CACOlC,MADP,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC+e,YAAL,GAAoB,KAApB;AACA,qBAAI,CAAC9gB,OAAL,GAAe,KAAf;AACD,aAHD,CAHJ,EAQGkB,SARH,CASI,UAAAE,QAAQ,EAAI;AACV,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC0f,OAAL,GAAe3f,QAAQ,CAACkB,IAAT,CAAc,MAAd,EAAsB,CAAtB,CAAf;AACD,eAFD,MAEO;AACL,uBAAI,CAAC5C,OAAL,CAAa6B,KAAb;AACD;AACF,aAfL,EAgBI,UAAAA,KAAK,EAAI;AACP,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD,aAlBL;AAoBD;AAlLgE;AAAA;AAAA,6CAoL9CtB,MApL8C,EAoLvC;AACxB,gBAAG,KAAK+gB,sBAAL,IAA+B,CAAlC,EAAoC;AAClC,mBAAKA,sBAAL,GAA8B,CAA9B;AACD,aAFD,MAEK;AACH,mBAAKA,sBAAL,GAA8B,CAA9B;AACD;AACF;AA1LgE;AAAA;AAAA,sCA8LrD;AACV,iBAAK9e,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjCuY,oCAAsB,EAAE,CAAC,IAAD,CADS;AAEjCC,yCAA2B,EAAE,CAAC,IAAD,CAFI;AAGjCJ,yCAA2B,EAAE,CAAC,IAAD,CAHI;AAIjCzM,oCAAsB,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAW3F,QAAZ,CAAP,CAJS;AAKjC4F,oCAAsB,EAAE,CAAC,IAAD,CALS;AAMjCnU,qBAAO,EAAE,CAAC,IAAD,CANwB;AAOjCkI,qBAAO,EAAE,CAAC,IAAD,CAPwB;AAQjC8Y,qBAAO,EAAE,CAAC,IAAD,CARwB;AASjCC,qBAAO,EAAE,CAAC,IAAD,CATwB;AAUjC7Y,qBAAO,EAAE,CAAC,IAAD,CAVwB;AAWjC8Y,sBAAQ,EAAE,CAAC,IAAD,CAXuB;AAYjCvX,qBAAO,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAW4E,QAAZ,EAAsB,0DAAWgC,SAAX,CAAqB,CAArB,CAAtB,CAAP,CAZwB;AAajC3G,4BAAc,EAAE,CAAC,IAAD,CAbiB;AAcjCC,0BAAY,EAAE,CAAC,IAAD,CAdmB;AAejCC,qBAAO,EAAE,CAAC,IAAD,CAfwB;AAgBjC/B,kBAAI,EAAE,CAAC,CAAD,CAhB2B;AAiBjCJ,0BAAY,EAAE,CAAC,KAAK3B,YAAN,CAjBmB;AAkBjCqC,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD;AAlB2B,aAAvB,CAAZ;AAqBD;AApNgE;AAAA;AAAA,2CAsNhDtC,YAtNgD,EAsNlC;AAC7B,iBAAKA,YAAL,GAAoBA,YAApB;AACA,iBAAK+D,QAAL;AACD;AAzNgE;AAAA;AAAA,0CA2NjD;AACd,gBAAMhK,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKC,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU;AAFZ,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE;AADb,aAToB,CAAtB;AAaD;AA1OgE;AAAA;AAAA,qCA6OtD;AACT,iBAAKsN,kBAAL,CAAwBnQ,IAAxB;AACA,iBAAK1F,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,CAA/B;AACA,iBAAKzI,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAKlF,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AArPgE;AAAA;AAAA,oCAuPvD/G,MAvPuD,EAuPL;AAAA;;AAC1D,iBAAKwf,cAAL,GAAsB,IAAtB;AACA,iBAAK9I,kBAAL,CAAwB1M,IAAxB;AACA,iBAAK+V,sBAAL,GAA8B/f,MAA9B;;AACA,gBAAG,KAAK+f,sBAAL,CAA4B7gB,OAA5B,IAAuC,CAA1C,EAA4C;AAC1C,mBAAKmhB,aAAL,GAAqB,KAArB;AACD,aAFD,MAEO;AACL,mBAAKA,aAAL,GAAqB,IAArB;AACD;;AAED,iBAAK3J,kBAAL,CAAwBQ,cAAxB,CAAuC,KAAvC;AAEAC,sBAAU,CAAC,YAAM;AACf,qBAAI,CAACqI,cAAL,GAAsB,KAAtB;AACD,aAFS,EAEP,GAFO,CAAV;AAGD;AAtQgE;AAAA;AAAA,qCAwQtD5gB,MAxQsD,EAwQ7C;AAAA;;AAClB,iBAAK6gB,YAAL,GAAoB,IAApB;;AACA,gBAAMnV,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAACpL,OAAR,GAAkB,GAAlB;AACAoL,mBAAO,CAACG,OAAR,GAAkB,GAAlB;AACAH,mBAAO,CAACgJ,2BAAR,GAAsC,WAAtC;AACA,iBAAKL,cAAL,CACGE,UADH,CACc7I,OADd,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAAC8gB,YAAL,GAAoB,KAApB;AACD,aAHD,CAHJ,EAQG5f,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACkT,OAAL,GAAenT,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAf;AACD,eAFD,MAEO;AACL,uBAAI,CAACiS,OAAL,GAAe,EAAf;AACD;AACF,aAfL,EAgBI,UAAChT,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD,aAlBL;AAoBD;AAlSgE;AAAA;AAAA,0CAoSjDtB,MApSiD,EAoSxC;AAAA;;AACvB,gBAAI,CAAC,KAAKD,OAAV,EAAmB,KAAKD,aAAL,GAAqB,IAArB;AACnB,iBAAK4gB,iBAAL,CACGM,eADH,CACmBhhB,MADnB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACsgB,YAAL,GAAoBvgB,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAApB;AACA,uBAAI,CAACkE,UAAL,GAAkBpF,QAAQ,CAACkB,IAAT,CAAc,OAAd,CAAlB;AACA,uBAAI,CAACoJ,QAAL,GAAgB,KAAhB;AACD,eAJD,MAIO;AACL,uBAAI,CAACA,QAAL,GAAgB,IAAhB;AACA,uBAAI,CAACiW,YAAL,GAAoB,EAApB;AACD;AACF,aAlBL,EAmBI,UAACpgB,KAAD,EAAW;AACT,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,qBAAI,CAACmK,QAAL,GAAgB,IAAhB;AACD,aAtBL;AAwBD;AA9TgE;AAAA;AAAA,wCAiUnDgB,KAjUmD,EAiU5C;AACnB,iBAAKqL,kBAAL,CAAwBnQ,IAAxB;AACA,iBAAK1F,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B+B,KAAK,CAACC,IAArC;AACA,iBAAKzK,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAKlF,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AAzUgE;AAAA;AAAA,sCA2UrD;AACV,gBAAIuD,OAAO,GAAG,EAAd;AACA,gBAAIiB,IAAI,GAAG,KAAK1K,IAAL,CAAUE,KAArB;;AAEA,iBAAK,IAAIyK,IAAT,IAAiBD,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACC,IAAD,CAAR,EAAgB;AACd,oBAAID,IAAI,CAACC,IAAD,CAAJ,YAAsBnE,IAA1B,EACEiD,OAAO,CAACkB,IAAD,CAAP,GAAgB,KAAKzI,WAAL,CAAiB0I,gBAAjB,CAAkCF,IAAI,CAACC,IAAD,CAAtC,CAAhB,CADF,KAEKlB,OAAO,CAACkB,IAAD,CAAP,GAAgBD,IAAI,CAACC,IAAD,CAApB;AACN;AACF;;AAED,mBAAOlB,OAAP;AACD;AAxVgE;AAAA;AAAA,4CA0V/CtK,MA1V+C,EA0VG;AAClE,gBAAI0L,WAAJ;;AAEA,gBAAI1L,MAAM,CAACd,OAAP,IAAkB,CAAtB,EAAyB;AACvBwM,yBAAW,GAAG,gBAAd;AACD,aAFD,MAEO,IAAI1L,MAAM,CAACd,OAAP,IAAkB,CAAtB,EAAyB;AAC9BwM,yBAAW,GAAG,eAAd;AACD,aAFM,MAEA,IAAI1L,MAAM,CAACd,OAAP,IAAkB,CAAtB,EAAyB;AAC9BwM,yBAAW,GAAG,gBAAd;AACD;;AAED,mBAAOA,WAAP;AACD;AAtWgE;AAAA;AAAA,yCAwWlD1L,MAxWkD,EAwWE;AAAA;;AACjE,gBAAM2L,IAAI,GAAG,CAAb;AAEA,iBAAKC,aAAL,CAAmBD,IAAnB,EACGE,YADH,GAEGnL,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACC,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AAEb,qBAAI,CAACjC,aAAL,GAAqB,IAArB;AACAsB,oBAAM,CAACd,OAAP,GAAiByM,IAAjB;AACA,qBAAO,OAAI,CAAC2T,iBAAL,CAAuBiB,gBAAvB,CAAwCvgB,MAAxC,CAAP;AACD,aAND,CAJJ,EAWI,iEAAS,YAAM;AACb,qBAAI,CAACtB,aAAL,GAAqB,KAArB;AACD,aAFD,CAXJ,EAeGmB,SAfH,CAgBI,UAACI,OAAD,EAAkB;AAChB,qBAAI,CAAC5B,OAAL,CAAa4B,OAAb;AACD,aAlBL,EAmBI,UAACC,KAAD,EAAgB;AACd,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,+BAAnB;AACD,aArBL;AAuBD;AAlYgE;AAAA;AAAA,sCAoYrDF,MApYqD,EAoYD;AAAA;;AAC9D,gBAAM2L,IAAI,GAAG,CAAb;AAEA,iBAAKC,aAAL,CAAmBD,IAAnB,EACGE,YADH,GAEGnL,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACC,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AAEb,qBAAI,CAACjC,aAAL,GAAqB,IAArB;AACAsB,oBAAM,CAACd,OAAP,GAAiByM,IAAjB;AACA,qBAAO,OAAI,CAAC2T,iBAAL,CAAuBiB,gBAAvB,CAAwCvgB,MAAxC,CAAP;AACD,aAND,CAJJ,EAWI,iEAAS,YAAM;AACb,qBAAI,CAACtB,aAAL,GAAqB,KAArB;AACD,aAFD,CAXJ,EAeGmB,SAfH,CAgBI,UAACI,OAAD,EAAkB;AAChB,qBAAI,CAAC5B,OAAL,CAAa4B,OAAb;AACD,aAlBL,EAmBI,UAACC,KAAD,EAAgB;AACd,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,gCAAnB;AACD,aArBL;AAuBD;AA9ZgE;AAAA;AAAA,wCAganDyL,IAhamD,EAga/C;AAChB,gBAAIA,IAAI,IAAI,CAAZ,EACE,OAAO,KAAKpN,mBAAL,CAAyBkC,WAAzB,CACL,IADK,EAEL,qBAFK,EAGL,0CAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAQF,mBAAO,KAAKlC,mBAAL,CAAyBkC,WAAzB,CACL,IADK,EAEL,sBAFK,EAGL,0CAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AAjbgE;AAAA;AAAA,qCAmbzD;AACN,gBAAIuK,IAAI,GAAG,IAAI3D,IAAJ,GAAW0E,kBAAX,GAAgCC,KAAhC,CAAsC,GAAtC,CAAX;AAAA,gBACEC,UAAU,aAAMjB,IAAI,CAAC,CAAD,CAAV,SAAgBA,IAAI,CAAC,CAAD,CAApB,SAA0BA,IAAI,CAAC,CAAD,CAA9B,CADZ;AAGA,gBAAIkB,cAAc,GAAQ,EAA1B;AACAA,0BAAc,GAAG,KAAKoU,YAAL,CAAkBlJ,MAAlB,CAAyB,KAAKnT,UAA9B,CAAjB;AAEA,iBAAKrB,WAAL,CAAiBuJ,UAAjB,CAA4BD,cAA5B,sBAAyDD,UAAzD;AACD,WA3bgE,CA6bhE;;AA7bgE;AAAA;AAAA,uCA8bpDyB,KA9boD,EA8brC;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AAncgE;AAAA;AAAA,yCAqclDA,KArckD,EAqctC;AACzBA,iBAAK,GAAG,KAAK7M,IAAL,CAAUC,GAAV,CAAc4M,KAAd,CAAR;AACA,mBAAOA,KAAK,CAAC1N,MAAN,IAAgB,SAAhB,IAA6B0N,KAAK,CAACE,OAA1C;AACD;AAxcgE;AAAA;AAAA,0CA0cjDF,KA1ciD,EA0clC;AAC7B,gBAAID,QAAQ,GAAG,KAAf;AACA,gBAAII,WAAW,GAAG,IAAI,0DAAJ,EAAlB;;AAEA,gBAAI,KAAKhN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA9B,EAAyC;AACvC,kBAAIC,gBAAgB,GAAG,KAAKnN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA1B,CAAoCF,WAApC,CAAvB;AACAJ,sBAAQ,GACNO,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACP,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AAvdgE;;AAAA;AAAA,S;;;;gBAjC1D;;gBAIA;;gBAgBY;;gBApBJ;;gBAOR;;gBANW;;gBAJX;;gBAYA;;gBAEA;;gBASiD;;gBAfjD;;gBAGA;;gBAIA;;gBANA;;;;AA2BI4R,4DAAsD,6DALlE,gEAAU;AACT1d,gBAAQ,EAAE,kDADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAKkE,E,+EAyEhD,sD,EACE,2F,EACM,8D,EACC,8D,EACG,6G,EACN,0D,EACI,0F,EACD,0G,EACH,qF,EACC,6D,EACO,uG,EACN,0F,EACF,sF,EACO,qG,EAtFmC,GAAtDyd,sDAAsD,CAAtD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC5BAmB,gCAAgC;AAG3C,kDAAsBnU,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAC,GAAA;AAEyB;;AAHC;AAAA;AAAA,uCAK9B;AACX,mBAAO,KAAKD,IAAL,CAAUvL,GAAV,WAAiB,KAAKwL,GAAtB,eAAqC5L,IAArC,CAA0C,4DAAK,CAAL,CAA1C,EAAmD,6DAAM,CAAN,CAAnD,CAAP;AACD;AAP0C;AAAA;AAAA,0CAS3B9B,MAT2B,EASlB;AACvB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,8BAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AAjB0C;AAAA;AAAA,uCAkB9B3N,MAlB8B,EAkBrB;AACpB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,2BAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AA1B0C;AAAA;AAAA,0CA4B3B3N,MA5B2B,EA4BlB;AACvB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,2BAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AApC0C;AAAA;AAAA,sCAsC/B3N,MAtC+B,EAsCtB;AACnB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,0BAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AA9C0C;;AAAA;AAAA,S;;;;gBARpC;;;;AAQIiU,sCAAgC,6DAH5C,iEAAW;AACV/T,kBAAU,EAAE;AADF,OAAX,CAG4C,E,+EAGf,+D,EAHe,GAAhC+T,gCAAgC,CAAhC;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCAf;AAGA;;;UAQaC,gDAAgD;AAG3D,kEAAoBpU,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFH,eAAAC,GAAA,GAAM,yEAAYA,GAAlB;AAEuB;;AAHmB;AAAA;AAAA,0CAM3C1N,MAN2C,EAMlC;AACvB,mBAAO,KAAKyN,IAAL,CAAUvL,GAAV,WACF,KAAKwL,GADH,8CAEL;AACE1N,oBAAM,EAAEA,MADV;AAEE2N,qBAAO,EAAE;AAFX,aAFK,CAAP;AAOD;AAd0D;AAAA;AAAA,2CAgB1CmU,SAhB0C,EAgBa;AACtE,mBAAO,KAAKrU,IAAL,CAAUG,IAAV,WACF,KAAKF,GADH,8CAELoU,SAFK,EAGL;AACEnU,qBAAO,EAAE;AADX,aAHK,CAAP;AAOD;AAxB0D;;AAAA;AAAA,S;;;;gBANpD;;;;AAMIkU,sDAAgD,6DAH5D,iEAAW;AACVhU,kBAAU,EAAE;AADF,OAAX,CAG4D,E,+EAGjC,+D,EAHiC,GAAhDgU,gDAAgD,CAAhD;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCoBFE,wDAAwD;AAkCnE;AAEA,0EACUpiB,mBADV,EAEUmY,kBAFV,EAGU7T,YAHV,EAIUF,WAJV,EAKUG,aALV,EAMUxE,cANV,EAOUkE,mBAPV,EAQUnE,OARV,EASU0E,WATV,EAUUT,KAVV,EAUuB;AAAA;;AATb,eAAA/D,mBAAA,GAAAA,mBAAA;AACA,eAAAmY,kBAAA,GAAAA,kBAAA;AACA,eAAA7T,YAAA,GAAAA,YAAA;AACA,eAAAF,WAAA,GAAAA,WAAA;AACA,eAAAG,aAAA,GAAAA,aAAA;AACA,eAAAxE,cAAA,GAAAA,cAAA;AACA,eAAAkE,mBAAA,GAAAA,mBAAA;AACA,eAAAnE,OAAA,GAAAA,OAAA;AACA,eAAA0E,WAAA,GAAAA,WAAA;AACA,eAAAT,KAAA,GAAAA,KAAA;AA5CV,eAAAse,iBAAA,GAA4B,KAA5B;AACA,eAAAC,YAAA,GAAc,IAAd;AACA,eAAAC,UAAA,GAAW,EAAX;AAEA,eAAArc,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C;AAKA,eAAAiS,eAAA,GAAkB,KAAlB;AACA,eAAA1T,OAAA,GAAU,SAAV;AACA,eAAAC,SAAA,GAAY,MAAZ,CAiCuB,CA9BrB;;AACA,eAAA6B,SAAA,GAA8B,CAC5B;AACE9F,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,kBAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACEhG,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,cAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaF;;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAA6b,oBAAA,GAAuB,EAAvB;AACA,eAAA3b,WAAA,GAAc,CAAd;AAcG;;AA/CgE;AAAA;AAAA,qCAiD3D;AACN,iBAAKQ,SAAL;AACA,iBAAKiR,oBAAL;AACA,iBAAK3Q,kBAAL;AACD;AArDkE;AAAA;AAAA,sCAuDvD;AACV,iBAAK8a,mBAAL,GAA2B,KAAKre,WAAL,CAAiB8E,KAAjB,CAAuB;AAChDoI,uBAAS,EAAE,CAAC,SAAD,CADqC;AAEhDC,sBAAQ,EAAE,CAAC,IAAD,CAFsC;AAGhDC,qBAAO,EAAC,CAAC,IAAD,CAHwC;AAIhDpI,0BAAY,EAAC,CAAC,IAAD,CAJmC;AAKhDU,qBAAO,EAAC,CAAC,IAAD,CALwC;AAMhDD,qBAAO,EAAC,CAAC,IAAD,CANwC;AAOhDR,qBAAO,EAAC,CAAC,IAAD,CAPwC;AAQhDyM,qBAAO,EAAC,CAAC,IAAD,CARwC;AAShDnJ,qBAAO,EAAC,CAAC,IAAD,CATwC;AAUhDX,wBAAU,EAAC,CAAC,EAAD,CAVqC;AAWhD1B,qBAAO,EAAE,CAAC,IAAD,EAAO,0DAAW4E,QAAlB,CAXuC;AAYhDxG,kBAAI,EAAE,CAAC,CAAD,CAZ0C;AAahDJ,0BAAY,EAAE,CAAC,KAAK3B,YAAN,CAbkC;AAchDqC,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD,CAd0C;AAehDvE,qBAAO,EAAE,CAAC,KAAKA,OAAN,CAfuC;AAgBhDC,uBAAS,EAAC,CAAC,KAAKA,SAAN;AAhBsC,aAAvB,CAA3B;AAmBD;AA3EkE;AAAA;AAAA,kDA6E3CmI,KA7E2C,EA6EpC;AAC7B,iBAAK2V,mBAAL,CAAyBlgB,GAAzB,CAA6B,MAA7B,EAAqCwI,QAArC,CAA8C+B,KAAK,CAACC,IAApD;AACA,iBAAK0V,mBAAL,CAAyBlgB,GAAzB,CAA6B,MAA7B,EAAqCwI,QAArC,CAA8C,IAAIjC,IAAJ,GAAWG,OAAX,EAA9C;AACA,iBAAKlF,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AApFkE;AAAA;AAAA,oCAuFzDka,SAvFyD,EAuFR;AAAA;;AACzD,iBAAKvK,kBAAL,CAAwB1M,IAAxB;AACA,iBAAKkX,oBAAL,GAA4BD,SAA5B;AACA,iBAAKvK,kBAAL,CAAwBQ,cAAxB,CAAuC,KAAvC;AAEAC,sBAAU,CAAC,YAAM;AACf,qBAAI,CAACyJ,iBAAL,GAAyB,KAAzB;AACD,aAFS,EAEP,GAFO,CAAV;AAGD;AA/FkE;AAAA;AAAA,iDAkG/C;AAAA;;AAClB,iBAAK9J,2BAAL,GAAmC,KAAKJ,kBAAL,CAAwBK,MAAxB,CAA+BlX,SAA/B,CACjC,UAACwL,KAAD,EAAgB;AACd,qBAAI,CAACsL,eAAL,GAAuBtL,KAAK,CAAC2L,OAA7B;AACD,aAHgC,CAAnC;AAKD;AAxGkE;AAAA;AAAA,6CA0GhDpY,MA1GgD,EA0GvC;AAAA;;AAC1B,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAACC,UAAR,GAAoB,KAAKyW,mBAAL,CAAyBjgB,KAAzB,CAA+B,YAA/B,CAApB;AACAuJ,mBAAO,CAACrD,IAAR,GAAc,KAAK+Z,mBAAL,CAAyBjgB,KAAzB,CAA+B,MAA/B,CAAd;AACAuJ,mBAAO,CAACrH,OAAR,GAAiB,KAAK+d,mBAAL,CAAyBjgB,KAAzB,CAA+B,SAA/B,CAAjB;AACAuJ,mBAAO,CAACpH,SAAR,GAAmB,KAAK8d,mBAAL,CAAyBjgB,KAAzB,CAA+B,WAA/B,CAAnB;AACA,gBAAMwK,IAAI,GAAG,KAAKyV,mBAAL,CAAyBjgB,KAAtC;AACA,iBAAK6f,iBAAL,GAAyB,IAAzB;AACA,iBAAKC,YAAL,GAAmB,KAAKC,UAAL,CAAgBzhB,MAAhB,KAA2B,CAA3B,GAA+B,IAA/B,GAAsC,KAAzD;AACA,gBAAIkM,IAAI,CAAC,UAAD,CAAR,EAAsBjB,OAAO,CAACiB,IAAI,CAAC,WAAD,CAAL,CAAP,GAA6BA,IAAI,CAAC,UAAD,CAAjC;AACtB,iBAAK/I,mBAAL,CACG0D,kBADH,CACsBoE,OADtB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACkgB,iBAAL,GAAyB,KAAzB;AACD,aAFD,CAHJ,EAOG/gB,SAPH,CAOa,UAACE,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC8gB,UAAL,GAAkB/gB,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAlB;AACA,uBAAI,CAAC8f,oBAAL,GAA4BhhB,QAAQ,CAACkB,IAAT,CAAc,OAAd,CAA5B;AACA,uBAAI,CAAC4f,YAAL,GAAmB,KAAnB;AACD,eAJD,MAIM;AACJ,uBAAI,CAACxiB,OAAL,CAAawM,MAAb,CAAoB,qCAApB;;AACA,uBAAI,CAACiW,UAAL,GAAkB,EAAlB;AACA,uBAAI,CAACD,YAAL,GAAmB,IAAnB;AACD;AACF,aAjBH,EAkBE,UAAC3gB,KAAD,EAAW;AACT,qBAAI,CAAC2gB,YAAL,GAAmB,IAAnB;;AACA,qBAAI,CAACxiB,OAAL,CAAa6B,KAAb,CAAmB,0CAAnB;AACD,aArBH;AAuBD;AA3IkE;AAAA;AAAA,uCA8ItD;AAAA;;AACX,gBAAMyL,IAAI,GAAG,CAAb;AACA,gBAAMvC,SAAS,GAAG,KAAK4X,mBAAL,CAAyBlgB,GAAzB,CAA6B,SAA7B,EAAwCC,KAA1D;AACA,iBAAK6K,aAAL,CAAmBD,IAAnB,EACGE,YADH,GAEGnL,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACC,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AACb,qBAAI,CAACigB,iBAAL,GAAyB,IAAzB;AACA,qBAAI,CAACM,oBAAL,CAA0BhiB,OAA1B,GAAoC,CAApC;AACA,qBAAI,CAACgiB,oBAAL,CAA0BrY,OAA1B,GAAoCO,SAApC;AACA,qBAAO,OAAI,CAAC5G,mBAAL,CAAyB2e,mBAAzB,CAA6C,OAAI,CAACD,oBAAlD,CAAP;AACD,aAND,CAJJ,EAWI,iEAAS,YAAM;AACb,qBAAI,CAACN,iBAAL,GAAyB,KAAzB;AACD,aAFD,CAXJ,EAeG/gB,SAfH,CAgBI,UAACI,OAAD,EAAkB;AAChB,qBAAI,CAAC5B,OAAL,CAAa4B,OAAb;;AACA,qBAAI,CAAC0d,SAAL;;AACA,qBAAI,CAACzX,kBAAL;AACD,aApBL,EAqBI,UAAChG,KAAD,EAAgB;AACd,qBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD,aAvBL;AAyBD;AA1KkE;AAAA;AAAA,wCA4KrDyL,IA5KqD,EA4KjD;AAChB,gBAAIA,IAAI,IAAI,CAAZ,EACE,OAAO,KAAKpN,mBAAL,CAAyBkC,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,oDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOF;AACD;AAtLkE;AAAA;AAAA,oCAwLzDmB,QAxLyD,EAwL7Bqf,SAxL6B,EAwLlB;AAC/C,iBAAKC,oBAAL,GAA4BD,SAA5B;AACA,iBAAK/R,QAAL,GAAgB,KAAKrM,YAAL,CAAkBmH,IAAlB,CAAuBpI,QAAvB,EAAiC;AAC/CqI,sBAAQ,EAAE,KADqC;AAE/C,uBAAO;AAFwC,aAAjC,CAAhB;AAID;AA9LkE;AAAA;AAAA,sCAgMvD;AACV,iBAAKiF,QAAL,CAAc3I,IAAd;AACD,WAlMkE,CAqMlE;;AArMkE;AAAA;AAAA,uCAsMrDmH,KAtMqD,EAsMtC;AAC3B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AA3MkE;AAAA;AAAA,yCA6MpDA,KA7MoD,EA6MxC;AACzBA,iBAAK,GAAG,KAAKsT,mBAAL,CAAyBlgB,GAAzB,CAA6B4M,KAA7B,CAAR;AACA,mBAAOA,KAAK,CAAC1N,MAAN,IAAgB,SAAhB,IAA6B0N,KAAK,CAACE,OAA1C;AACD;AAhNkE;AAAA;AAAA,0CAkNnDF,KAlNmD,EAkNpC;AAC7B,gBAAID,QAAQ,GAAG,KAAf;AACA,gBAAII,WAAW,GAAG,IAAI,0DAAJ,EAAlB;;AAEA,gBAAI,KAAKmT,mBAAL,CAAyBlT,QAAzB,CAAkCJ,KAAlC,EAAyCK,SAA7C,EAAwD;AACtD,kBAAIC,gBAAgB,GAAG,KAAKgT,mBAAL,CAAyBlT,QAAzB,CAAkCJ,KAAlC,EAAyCK,SAAzC,CAAmDF,WAAnD,CAAvB;AACAJ,sBAAQ,GACNO,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACP,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AA/NkE;AAAA;AAAA,sCAiOvD;AACV,gBAAInD,OAAO,GAAG,EAAd;AACA,gBAAIiB,IAAI,GAAG,KAAKyV,mBAAL,CAAyBjgB,KAApC;;AAEA,iBAAK,IAAIyK,IAAT,IAAiBD,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACC,IAAD,CAAR,EAAgB;AACd,oBAAID,IAAI,CAACC,IAAD,CAAJ,YAAsBnE,IAA1B,EACEiD,OAAO,CAACkB,IAAD,CAAP,GAAgB,KAAKzI,WAAL,CAAiB0I,gBAAjB,CAAkCF,IAAI,CAACC,IAAD,CAAtC,CAAhB,CADF,KAEKlB,OAAO,CAACkB,IAAD,CAAP,GAAgBD,IAAI,CAACC,IAAD,CAApB;AACN;AACF;;AAED,mBAAOlB,OAAP;AACD;AA9OkE;AAAA;AAAA,qCAgPxDJ,MAhPwD,EAgP1C;AACvB,gBAAI,KAAKjH,OAAL,KAAiBiH,MAArB,EAA6B;AAC3B,kBAAI,KAAKhH,SAAL,IAAkB,MAAtB,EAA8B;AAC5B,qBAAKA,SAAL,GAAiB,KAAjB;AACD,eAFD,MAEO,IAAI,KAAKA,SAAL,IAAkB,KAAtB,EAA6B;AAClC,qBAAKA,SAAL,GAAiB,MAAjB;AACD;AACF,aAND,MAMO;AACL,mBAAKD,OAAL,GAAeiH,MAAf;AACA,mBAAKhH,SAAL,GAAiB,KAAjB;AACD;;AACD,iBAAK8d,mBAAL,CAAyBlgB,GAAzB,CAA6B,WAA7B,EAA0CwI,QAA1C,CAAmD,KAAKpG,SAAxD;AACA,iBAAK8d,mBAAL,CAAyBlgB,GAAzB,CAA6B,SAA7B,EAAwCwI,QAAxC,CAAiD,KAAKrG,OAAtD;AACA,iBAAKiD,kBAAL;AACD;AA9PkE;;AAAA;AAAA,S;;;;gBAT5D;;gBALA;;gBADY;;gBADD;;gBAHX;;gBACA;;gBAMA;;gBADA;;gBAPA;;gBAEgB;;;;AAkBZya,8DAAwD,6DALpE,iEAAU;AACThf,gBAAQ,EAAE,sDADD;AAETC,gBAAQ,EAAR,6EAFS;;AAAA,OAAV,CAKoE,E,+EAqCpC,wG,EACD,qG,EACN,kE,EACD,0D,EACE,yF,EACC,8D,EACK,6G,EACZ,oF,EACI,qF,EACN,sD,EA9CkD,GAAxD+e,wDAAwD,CAAxD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCXAS,4CAA4C;AAgBvD,8DACU9iB,cADV,EACwC;AAAA;;AAA9B,eAAAA,cAAA,GAAAA,cAAA;AAXF,eAAAiU,UAAA,GAAa,yEAAYA,UAAzB;AAER,eAAA5T,OAAA,GAAmB,KAAnB;AAEA,eAAA6T,WAAA,GAAmBlC,IAAI,CAACC,KAAL,CAAWkC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAnB;AACA,eAAAC,SAAA,GAAiBC,IAAI,CAAC,KAAKJ,WAAL,CAAiB,MAAjB,EAAyB,WAAzB,CAAD,CAArB;AACA,eAAAK,SAAA,GAAiBD,IAAI,CAAC,KAAKJ,WAAL,CAAiB,MAAjB,EAAyB,IAAzB,CAAD,CAArB;AAOE,eAAKM,GAAL,aAAc,KAAKP,UAAnB,kGAAqH,KAAKI,SAA1H,gBAAyI,KAAKE,SAA9I;AACD;;AApBsD;AAAA;AAAA,qCAsB5C;AACT,iBAAKE,eAAL;AACD;AAxBsD;AAAA;AAAA,4CA0BxC;AAAA;;AACb,iBAAKzU,cAAL,CAAoBM,MAApB,CAA2BiB,SAA3B,CAAqC,UAACjB,MAAD,EAAgB;AACnD,qBAAI,CAACsK,WAAL,GAAmBtK,MAAM,CAAC,aAAD,CAAzB;AACA,qBAAI,CAACuK,cAAL,GAAsB,CACpB;AACEC,yBAAS,EAAE,MADb;AAEEC,0BAAU,EAAE;AAFd,eADoB,EAKpB;AACED,yBAAS,EAAE,sBADb;AAEEC,0BAAU,8CAAuC,OAAI,CAACH,WAA5C;AAFZ,eALoB,EASpB;AACEE,yBAAS,EAAE;AADb,eAToB,CAAtB;AAaD,aAfD;AAgBD;AA3CsD;;AAAA;AAAA,S;;;;gBAThD;;;;AASIgY,kDAA4C,6DALxD,gEAAU;AACTzf,gBAAQ,EAAE,0BADD;AAETC,gBAAQ,EAAR,2FAFS;;AAAA,OAAV,CAKwD,E,+EAiB7B,8D,EAjB6B,GAA5Cwf,4CAA4C,CAA5C;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCAf;AAKA;AASA;;;UAmBaC,wDAAwD;AAwEnE;AAEA,0EACU/e,KADV,EAEUjE,OAFV,EAGUC,cAHV,EAIUgQ,wBAJV,EAKU3L,WALV,EAMUC,WANV,EAOUrE,mBAPV,EAQUuE,aARV,EASUC,WATV,EAUU2T,kBAVV,EAUgD;AAAA;;AATtC,eAAApU,KAAA,GAAAA,KAAA;AACA,eAAAjE,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAgQ,wBAAA,GAAAA,wBAAA;AACA,eAAA3L,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAArE,mBAAA,GAAAA,mBAAA;AACA,eAAAuE,aAAA,GAAAA,aAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAA2T,kBAAA,GAAAA,kBAAA;AA1EV,eAAAC,eAAA,GAAkB,KAAlB;AAEA,eAAA1T,OAAA,GAAU,wBAAV;AACA,eAAAC,SAAA,GAAY,MAAZ,CAuEgD,CAtEhD;;AACA,eAAAvE,OAAA,GAAU,IAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB;AACA,eAAA4iB,mBAAA,GAAsB,KAAtB,CAmEgD,CAjEhD;;AACA,eAAAtN,YAAA,GAAe,EAAf;AACA,eAAA/P,UAAA,GAAkB,EAAlB,CA+DgD,CA3DhD;;AACA,eAAAQ,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C,CA0DgD,CAtDhD;;AACA,eAAAC,KAAA,GAAQ,CACN;AACEC,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADM,EAKN;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALM,CAAR,CAqDgD,CA1CjD;;AACC,eAAA+R,UAAA,GAAa,CACX;AACEhS,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADW,EAKX;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALW,CAAb,CAyCgD,CA9BhD;;AACA,eAAAE,SAAA,GAA8B,CAC5B;AACE9F,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACEhG,cAAE,EAAE,CADN;AAEE+F,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA;;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AAcI;;AArF+D;AAAA;AAAA,qCAuFxD;AACT,iBAAKQ,SAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,gBAAL;AACA,iBAAK+Q,oBAAL;AACD;AA5FkE;AAAA;AAAA,wCA8FrD;AACZ,iBAAK1Q,2BAAL,CAAiCC,WAAjC;AACD;AAhGkE;AAAA;AAAA,6CAkGhD;AAAA;;AACjB,iBAAKD,2BAAL,GAAmC,KAAK7H,cAAL,CAAoBmI,WAApB,CAAgC5G,SAAhC,CACjC,UAACE,QAAD,EAAc;AACZ,kBAAM2G,SAAS,GAAG,QAAI,CAAC5D,aAAL,CAAmB6D,kBAAnB,CAAsC5G,QAAtC,CAAlB;;AACA,sBAAI,CAACc,IAAL,CAAU+F,UAAV,CAAqBF,SAArB;;AACA,kBAAIA,SAAS,CAAC5H,cAAV,CAAyB,cAAzB,CAAJ,EACE,QAAI,CAACoG,YAAL,GAAoBwB,SAAS,CAACG,YAA9B;;AACF,sBAAI,CAACoI,oBAAL,CAA0B,QAAI,CAAClI,SAAL,EAA1B;AACD,aAPgC,CAAnC;AASD;AA5GkE;AAAA;AAAA,iDA8G/C;AAAA;;AAClB,iBAAK+P,2BAAL,GAAmC,KAAKJ,kBAAL,CAAwBK,MAAxB,CAA+BlX,SAA/B,CACjC,UAACwL,KAAD,EAAgB;AACd,sBAAI,CAACsL,eAAL,GAAuBtL,KAAK,CAAC2L,OAA7B;AACD,aAHgC,CAAnC;AAKD;AApHkE;AAAA;AAAA,oCAsHzD;AACR,iBAAKnW,IAAL,CAAUmG,KAAV;AACA,iBAAKnG,IAAL,CAAU+F,UAAV,CAAqB;AACnBK,kBAAI,EAAE,CADa;AAEnBJ,0BAAY,EAAE,GAFK;AAGnBU,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD;AAHa,aAArB;AAKD;AA7HkE;AAAA;AAAA,sCA+HvD;AACV,iBAAK3G,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjCiI,oCAAsB,EAAE,CAAC,IAAD,CADS;AAEjCoN,qBAAO,EAAE,CAAC,IAAD,CAFwB;AAGjC5d,qBAAO,EAAE,CAAC,IAAD,CAHwB;AAIjC2J,qBAAO,EAAE,CAAC,IAAD,CAJwB;AAKjCwL,qBAAO,EAAE,CAAC,IAAD,CALwB;AAMjCnJ,qBAAO,EAAE,CAAC,IAAD,CANwB;AAOjClC,qBAAO,EAAE,CAAC,IAAD,CAPwB;AAQjCgT,qBAAO,EAAE,CAAC,IAAD,CARwB;AASjC/U,kBAAI,EAAE,CAAC,CAAD,CAT2B;AAUjCJ,0BAAY,EAAE,CAAC,KAAK3B,YAAN,CAVmB;AAWjCqC,kBAAI,EAAE,CAAC,IAAIF,IAAJ,GAAWG,OAAX,EAAD,CAX2B;AAYjCvE,qBAAO,EAAC,CAAC,KAAKA,OAAN,CAZyB;AAajCC,uBAAS,EAAC,CAAC,KAAKA,SAAN;AAbuB,aAAvB,CAAZ;AAeD;AA/IkE;AAAA;AAAA,2CAiJlDgC,YAjJkD,EAiJpC;AAC7B,iBAAKA,YAAL,GAAoBA,YAApB;AACA,iBAAK+D,QAAL;AACD;AApJkE;AAAA;AAAA,0CAsJnD;AACd,gBAAMhK,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKC,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU;AAFZ,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE;AADb,aAToB,CAAtB;AAaD;AArKkE;AAAA;AAAA,qCAuKxD;AACT,iBAAKsN,kBAAL,CAAwBnQ,IAAxB;AACA,iBAAK1F,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,CAA/B;AACA,iBAAKzI,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAK3G,IAAL,CAAUC,GAAV,CAAc,WAAd,EAA2BwI,QAA3B,CAAoC,KAAKpG,SAAzC;AACA,iBAAKrC,IAAL,CAAUC,GAAV,CAAc,SAAd,EAAyBwI,QAAzB,CAAkC,KAAKrG,OAAvC;AACA,iBAAKX,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AAjLkE;AAAA;AAAA,oCAmLzDwa,IAnLyD,EAmLR;AAAA;;AACzD,iBAAK7iB,aAAL,GAAqB,IAArB;AACA,iBAAK8iB,eAAL,GAAuBD,IAAvB;AACA,iBAAKxN,eAAL,CAAqB;AAAErE,oCAAsB,EAAE6R,IAAI,CAAC7R,sBAA/B;AAAwDxQ,qBAAO,EAAC;AAAhE,aAArB;AACA,iBAAKwX,kBAAL,CAAwB1M,IAAxB;AACA,iBAAK0M,kBAAL,CAAwBQ,cAAxB,CAAuC,KAAvC;AAEAC,sBAAU,CAAC,YAAM;AACf,sBAAI,CAACzY,aAAL,GAAqB,KAArB;AACD,aAFS,EAEP,GAFO,CAAV;AAGD;AA7LkE;AAAA;AAAA,+CA+L9CE,MA/L8C,EA+LrC;AAAA;;AAC5B,gBAAI,CAAC,KAAKD,OAAV,EAAmB,KAAKD,aAAL,GAAqB,IAArB;AACnB,iBAAK4P,wBAAL,CACGW,oBADH,CACwBrQ,MADxB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,sBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,sBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,wBAAI,CAAC6O,iBAAL,GAAyB9O,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAzB;AACA,wBAAI,CAACkE,UAAL,GAAkBpF,QAAQ,CAACkB,IAAT,CAAc,OAAd,CAAlB;AACA,wBAAI,CAACoJ,QAAL,GAAgB,KAAhB;AACD,eAJD,MAIO;AACL,wBAAI,CAACA,QAAL,GAAgB,IAAhB;AACA,wBAAI,CAACwE,iBAAL,GAAyB,EAAzB;AACD;AACF,aAlBL,EAmBI,UAAC3O,KAAD,EAAgB;AACd,kBAAI;AACF,wBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,wBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aAzBL;AA0BD;AA3NkE;AAAA;AAAA,0CA8NnDtB,MA9NmD,EA8N1C;AAAA;;AACvB,iBAAK0iB,mBAAL,GAA2B,IAA3B;AACA,iBAAKhT,wBAAL,CACGyF,eADH,CACmBnV,MADnB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,sBAAI,CAAC4gB,mBAAL,GAA2B,KAA3B;AACD,aAFD,CAHJ,EAOGzhB,SAPH,CAOa,UAAOE,QAAP;AAAA,qBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,8BACzBA,QAAQ,CAACC,MAAT,KAAoB,GADK;AAAA;AAAA;AAAA;;AAE3B,6BAAKyhB,cAAL,GAAqB,IAArB;AAF2B;;AAAA;AAK7B,6BAAKzN,YAAL,GAAoBjU,QAAQ,CAAC,MAAD,CAAR,CAAiB,MAAjB,CAApB;AACA,6BAAK0hB,cAAL,GAAsB,KAAtB;;AAN6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB;AAAA,aAPb,EAeE,UAACvhB,KAAD,EAAW;AACT,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,uCAAnB;;AACA,sBAAI,CAACuhB,cAAL,GAAqB,IAArB;AACD,aAlBH;AAoBD;AApPkE;AAAA;AAAA,wCAuPrDpW,KAvPqD,EAuP9C;AACnB,iBAAKqL,kBAAL,CAAwBnQ,IAAxB;AACA,iBAAK1F,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B+B,KAAK,CAACC,IAArC;AACA,iBAAKzK,IAAL,CAAUC,GAAV,CAAc,MAAd,EAAsBwI,QAAtB,CAA+B,IAAIjC,IAAJ,GAAWG,OAAX,EAA/B;AACA,iBAAKlF,KAAL,CAAWiH,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAKlL,cADK;AAEtBmI,yBAAW,EAAE,KAAK3D,aAAL,CAAmB2G,kBAAnB,CAAsC,KAAK1C,SAAL,EAAtC;AAFS,aAAxB;AAID;AA/PkE;AAAA;AAAA,sCAiQvD;AACV,gBAAIuD,OAAO,GAAG,EAAd;AACA,gBAAIiB,IAAI,GAAG,KAAK1K,IAAL,CAAUE,KAArB;;AAEA,iBAAK,IAAIyK,IAAT,IAAiBD,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACC,IAAD,CAAR,EAAgB;AACd,oBAAID,IAAI,CAACC,IAAD,CAAJ,YAAsBnE,IAA1B,EACEiD,OAAO,CAACkB,IAAD,CAAP,GAAgB,KAAKzI,WAAL,CAAiB0I,gBAAjB,CAAkCF,IAAI,CAACC,IAAD,CAAtC,CAAhB,CADF,KAEKlB,OAAO,CAACkB,IAAD,CAAP,GAAgBD,IAAI,CAACC,IAAD,CAApB;AACN;AACF;;AAED,mBAAOlB,OAAP;AACD;AA9QkE;AAAA;AAAA,4CAgRjDtK,MAhRiD,EAgRE;AACnE,gBAAI0L,WAAJ;;AAEA,gBAAI1L,MAAM,CAACd,OAAP,IAAkB,CAAtB,EAAyB;AACvBwM,yBAAW,GAAG,gBAAd;AACD,aAFD,MAEO,IAAI1L,MAAM,CAACd,OAAP,IAAkB,CAAtB,EAAyB;AAC9BwM,yBAAW,GAAG,eAAd;AACD;;AAED,mBAAOA,WAAP;AACD;AA1RkE;AAAA;AAAA,qCA4RxD1L,MA5RwD,EA4RH;AAAA;;AAC9D,gBAAM2L,IAAI,GAAG3L,MAAM,CAACd,OAAP,IAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAAvC;AAEA,iBAAK0M,aAAL,CAAmBD,IAAnB,EACGE,YADH,GAEGnL,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACC,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AAEb,sBAAI,CAACjC,aAAL,GAAqB,IAArB;AACAsB,oBAAM,CAACd,OAAP,GAAiByM,IAAjB;AACA,qBAAO,QAAI,CAAC2C,wBAAL,CAA8BoT,qBAA9B,CAAoD1hB,MAApD,CAAP;AACD,aAND,CAJJ,EAWI,iEAAS,YAAM;AACb,sBAAI,CAACtB,aAAL,GAAqB,KAArB;AACD,aAFD,CAXJ,EAeGmB,SAfH,CAgBI,UAACI,OAAD,EAAkB;AAChB,sBAAI,CAAC5B,OAAL,CAAa4B,OAAb;AACD,aAlBL,EAmBI,UAACC,KAAD,EAAgB;AACdF,oBAAM,CAACd,OAAP,GAAiBc,MAAM,CAACd,OAAP,IAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAA3C;;AACA,sBAAI,CAACb,OAAL,CAAa6B,KAAb;AACD,aAtBL;AAwBD;AAvTkE;AAAA;AAAA,wCAyTrDyL,IAzTqD,EAyTjD;AAChB,gBAAIA,IAAI,IAAI,CAAZ,EACE,OAAO,KAAKpN,mBAAL,CAAyBkC,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAQF,mBAAO,KAAKlC,mBAAL,CAAyBkC,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AA1UkE;AAAA;AAAA,qCA4U3D;AACN,gBAAIuK,IAAI,GAAG,IAAI3D,IAAJ,GAAW0E,kBAAX,GAAgCC,KAAhC,CAAsC,GAAtC,CAAX;AAAA,gBACEC,UAAU,aAAMjB,IAAI,CAAC,CAAD,CAAV,SAAgBA,IAAI,CAAC,CAAD,CAApB,SAA0BA,IAAI,CAAC,CAAD,CAA9B,CADZ;AAGA,gBAAIkB,cAAc,GAAQ,EAA1B;AACAA,0BAAc,GAAG,KAAK2C,iBAAL,CAAuBuI,MAAvB,CAA8B,KAAKnT,UAAnC,CAAjB;AAEA,iBAAKrB,WAAL,CAAiBuJ,UAAjB,CAA4BD,cAA5B,6BAAgED,UAAhE;AACD;AApVkE;AAAA;AAAA,qCAsVxD/B,MAtVwD,EAsV1C;AACvB,gBAAI,KAAKjH,OAAL,KAAiBiH,MAArB,EAA6B;AAC3B,kBAAI,KAAKhH,SAAL,IAAkB,MAAtB,EAA8B;AAC5B,qBAAKA,SAAL,GAAiB,KAAjB;AACD,eAFD,MAEO,IAAI,KAAKA,SAAL,IAAkB,KAAtB,EAA6B;AAClC,qBAAKA,SAAL,GAAiB,MAAjB;AACD;AACF,aAND,MAMO;AACL,mBAAKD,OAAL,GAAeiH,MAAf;AACA,mBAAKhH,SAAL,GAAiB,KAAjB;AACD;;AACD,iBAAK+F,QAAL;AACD;AAlWkE;;AAAA;AAAA,S;;;;gBA/B5D;;gBAIA;;gBAJQ;;gBAOR;;gBANW;;gBAQX;;gBAJA;;gBAGA;;gBAEA;;gBAJA;;;;AAyBIoY,8DAAwD,6DALpE,gEAAU;AACT1f,gBAAQ,EAAE,sDADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAKoE,E,+EA2ElD,sD,EACE,2F,EACO,8D,EACU,sH,EACb,0D,EACA,qF,EACQ,uG,EACN,0F,EACF,sF,EACO,qG,EApFqC,GAAxDyf,wDAAwD,CAAxD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eC9Bb;AAIA;AAGA;AASA;;;UAYaM,2DAA2D;AA8BtE,6EACUhf,WADV,EAEUtE,OAFV,EAGUsO,MAHV,EAIU9J,YAJV,EAKUvE,cALV,EAMUiE,aANV,EAOU+L,wBAPV,EAQUzB,YARV,EASUC,iBATV,EAS8C;AAAA;;AARpC,eAAAnK,WAAA,GAAAA,WAAA;AACA,eAAAtE,OAAA,GAAAA,OAAA;AACA,eAAAsO,MAAA,GAAAA,MAAA;AACA,eAAA9J,YAAA,GAAAA,YAAA;AACA,eAAAvE,cAAA,GAAAA,cAAA;AACA,eAAAiE,aAAA,GAAAA,aAAA;AACA,eAAA+L,wBAAA,GAAAA,wBAAA;AACA,eAAAzB,YAAA,GAAAA,YAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AAnCV,eAAA3D,cAAA,GAA6B,EAA7B;AAIA,eAAA3K,QAAA,GAA4B,EAA5B;AAGA,eAAAkV,QAAA,GAA4B,EAA5B;AACA,eAAAC,UAAA,GAAa,IAAb,CA2B8C,CAxB9C;;AACA,eAAA5G,YAAA,GAAe,KAAf;AACA,eAAApO,OAAA,GAAU,KAAV;AACA,eAAAD,aAAA,GAAgB,KAAhB;AACE;;AACA,eAAAwG,YAAA,GAAe,EAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AACA,eAAA2J,KAAA,GAAQ,CAAR;AACA,eAAAC,GAAA,GAAM,EAAN;AACA;AAEF;;AACA,eAAAH,iBAAA,GAAwE,EAAxE;AAqBO,eAAA5B,KAAA,GAAQ,kDAAQA,KAAhB;AARL,eAAK1K,aAAL,CAAmB8C,GAAnB,CAAuB,OAAvB;AACA,eAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAP,CACd,EADc,EAEd;AAAEC,0BAAc,EAAE;AAAlB,WAFc,EAGd;AAAEC,4BAAgB,EAAE;AAApB,WAHc,EAId;AAAEC,2BAAe,EAAE;AAAnB,WAJc,CAAhB;AAMD;;AAhDqE;AAAA;AAAA,qCAmD9D;AACN,iBAAKuH,eAAL;AACA,iBAAKrH,aAAL;AACA,iBAAKsH,cAAL;AACA,iBAAKrH,gBAAL;AACD;AAxDqE;AAAA;AAAA,4CA0DvD;AACb,iBAAKgH,iBAAL,CAAuBI,eAAvB,GAAyCrN,SAAzC;AACD;AA5DqE;AAAA;AAAA,6CA8DnD;AACjB,gBAAMyK,OAAO,GAAG,KAAKhM,cAAL,CAAoBO,QAApB,CAA6BD,MAA7C;;AACA,gBAAI0L,OAAO,CAACxL,cAAR,CAAuB,IAAvB,CAAJ,EAAkC;AAChC,mBAAKmQ,oBAAL,CAA0B;AAAES,sCAAsB,EAAEpF,OAAO,CAAC,IAAD;AAAjC,eAA1B;AACA,mBAAKyJ,eAAL,CAAqB;AAAErE,sCAAsB,EAAEpF,OAAO,CAAC,IAAD,CAAjC;AAA0CpL,uBAAO,EAAC;AAAlD,eAArB;AACD,aAHD,MAGO;AACL,mBAAK+U,gBAAL;AACD;AACF;AAtEqE;AAAA;AAAA,+CAyEjDrV,MAzEiD,EAyEc;AAAA;;AAClF,iBAAKD,OAAL,GAAe,IAAf;;AACA,gBAAM2L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA,iBAAK0P,wBAAL,CACGW,oBADH,CACwB3E,OADxB,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,sBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,sBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,wBAAI,CAACqK,QAAL,GAAgB,IAAhB;AACA,wBAAI,CAACwE,iBAAL,GAAyB,EAAzB;AACA;AACD;;AACD,kBAAM+S,iBAAiB,GAAG7hB,QAAQ,CAACkB,IAAT,CAAc,MAAd,EAAsB,CAAtB,CAA1B;;AACA,sBAAI,CAACJ,IAAL,CAAU+F,UAAV,CAAqBgb,iBAArB;;AACA,sBAAI,CAACvX,QAAL,GAAgB,KAAhB;AACD,aAlBL,EAmBI,UAACnK,KAAD,EAAW;AACT,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,sBAAI,CAACmK,QAAL,GAAgB,IAAhB;AACD,aAtBL;AAwBD;AApGqE;AAAA;AAAA,0CAsGtDzL,MAtGsD,EAsG7C;AAAA;;AACvB,iBAAKF,aAAL,GAAqB,IAArB;AACA,iBAAK4P,wBAAL,CACGyF,eADH,CACmBnV,MADnB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,sBAAI,CAAChC,aAAL,GAAqB,KAArB;AACD,aAFD,CAHJ,EAOGmB,SAPH,CAOa,UAAOE,QAAP;AAAA,qBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACzBA,QAAQ,CAACC,MAAT,KAAoB,GADK;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIvBgU,oCAJuB,GAIRjU,QAAQ,CAAC,MAAD,CAAR,CAAiB,MAAjB,CAJQ;;AAKvBT,+BALuB,GAKb,SAAVA,OAAU;AAAA,iCAAM0U,YAAY,CAACzU,OAAb,CAAqB;AAAA,mCAAM,QAAI,CAAC0U,gBAAL,EAAN;AAAA,2BAArB,CAAN;AAAA,yBALa;;AAAA;AAM7B,+BAAMtU,OAAO,CAACC,OAAR,CAAgBN,OAAO,EAAvB,CAAN;;AAN6B;AAO7B,6BAAKuB,IAAL,CAAUC,GAAV,CAAc,cAAd,EAA8B8F,UAA9B,CAAyCoN,YAAzC;;AAP6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB;AAAA,aAPb,EAiBE,UAAC9T,KAAD,EAAW;AACT,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmB,uCAAnB;AACD,aAnBH;AAqBD;AA7HqE;AAAA;AAAA,0CAgIzD;AACX,gBAAMjB,EAAE,GAAG,KAAKX,cAAL,CAAoBO,QAApB,CAA6BD,MAA7B,CAAoCsK,WAA/C;AACA,iBAAKoE,QAAL,GAAgB,UAAhB;AACA,iBAAKT,YAAL,CAAkBU,QAAlB,CAA2B,KAAKD,QAAhC;AACA,iBAAKnE,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU,EAAE;AAFd,aADoB,EAKpB;AACED,uBAAS,EAAE,sBADb;AAEEC,wBAAU,yCAAkCpK,EAAlC;AAFZ,aALoB,EASpB;AACEmK,uBAAS,EAAE,2BADb;AAEEC,wBAAU;AAFZ,aAToB,EAapB;AACED,uBAAS,EAAE,KAAKkE;AADlB,aAboB,CAAtB;AAiBD,WArJqE,CAuJtE;;AAvJsE;AAAA;AAAA,2CAwJxD;AAEZ,iBAAKzM,IAAL,GAAY,KAAK8B,WAAL,CAAiB8E,KAAjB,CAAuB;AACjCiI,oCAAsB,EAAE,CAAC,IAAD,CADS;AAEjCoN,qBAAO,EAAG,CAAC,IAAD,EAAO,CAAC,2DAAWrP,QAAZ,CAAP,CAFuB;AAGjCvO,qBAAO,EAAE,CAAC,IAAD,CAHwB;AAIjC2J,qBAAO,EAAE,CAAC,IAAD,CAJwB;AAKjCwL,qBAAO,EAAE,CAAC,IAAD,CALwB;AAMjCnJ,qBAAO,EAAE,CAAC,IAAD,CANwB;AAOjClC,qBAAO,EAAE,CAAC,IAAD,CAPwB;AAQjCgL,0BAAY,EAAE,KAAKrR,WAAL,CAAiBgN,KAAjB,CAAuB,EAAvB;AARmB,aAAvB,CAAZ;AAUA,iBAAK2E,YAAL,GAAoB,KAAK3R,WAAL,CAAiB8E,KAAjB,CAAuB;AACzCoI,uBAAS,EAAE,CAAC,MAAD,CAD8B;AAEzCC,sBAAQ,EAAE,CAAC,IAAD,EAAO,2DAAWrC,QAAlB,CAF+B;AAGzCkF,uBAAS,EAAC,CAAC,IAAD,CAH+B;AAIzC9N,kBAAI,EAAC,CAAC,IAAD;AAJoC,aAAvB,CAApB;AAMD,WA1KqE,CA4KtE;;AA5KsE;AAAA;AAAA,uCA6KzD6I,KA7KyD,EA6K1C;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AAlLqE;AAAA;AAAA,yCAoLvDA,KApLuD,EAoL3C;AACzBA,iBAAK,GAAG,KAAK7M,IAAL,CAAUC,GAAV,CAAc4M,KAAd,CAAR;AACA,mBAAOA,KAAK,CAAC1N,MAAN,IAAgB,SAAhB,IAA6B0N,KAAK,CAACE,OAA1C;AACD;AAvLqE;AAAA;AAAA,0CAyLtDF,KAzLsD,EAyLvC;AAC7B,gBAAID,QAAQ,GAAG,KAAf;AACA,gBAAII,WAAW,GAAG,IAAI,2DAAJ,EAAlB;;AAEA,gBAAI,KAAKhN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA9B,EAAyC;AACvC,kBAAIC,gBAAgB,GAAG,KAAKnN,IAAL,CAAUiN,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA1B,CAAoCF,WAApC,CAAvB;AACAJ,sBAAQ,GACNO,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACP,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AAtMqE;AAAA;AAAA,sCAwM1D7O,MAxM0D,EAwMlD;AAAA;;AAClB,gBAAM0L,OAAO,GAAG1L,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACA0L,mBAAO,CAAEiK,QAAT,GAAoB,GAApB;AACAjK,mBAAO,CAAEkK,aAAT,GAAyB,GAAzB;AACA,gBAAMjJ,IAAI,GAAG,KAAK+I,YAAL,CAAkBvT,KAA/B;AACA,iBAAK0T,eAAL,GAAuB,IAAvB;AACA,gBAAIlJ,IAAI,CAAC,UAAD,CAAR,EAAsBjB,OAAO,CAACiB,IAAI,CAAC,WAAD,CAAL,CAAP,GAA6BA,IAAI,CAAC,UAAD,CAAjC;AACtB,iBAAK+C,wBAAL,CACGoG,WADH,CACepK,OADf,EAEG5J,IAFH,CAGI,iEAAS,YAAM;AACb,sBAAI,CAAC+T,eAAL,GAAuB,KAAvB;AACD,aAFD,CAHJ,EAOG5U,SAPH,CAQI,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,wBAAI,CAAC0T,QAAL,GAAgB3T,QAAQ,CAACkB,IAAT,CAAc,UAAd,CAAhB;AACA,wBAAI,CAACkE,UAAL,GAAkBpF,QAAQ,CAACkB,IAAT,CAAc,UAAd,EAA0B5B,MAA5C;AACA,wBAAI,CAACsU,UAAL,GAAkB,KAAlB;AACD,eAJD,MAIO;AACL,wBAAI,CAACtV,OAAL,CAAawM,MAAb,CAAoB,6BAApB;;AACA,wBAAI,CAAC6I,QAAL,GAAgB,EAAhB;AACA,wBAAI,CAACC,UAAL,GAAkB,IAAlB;AACD;AACF,aAlBL,EAmBI,UAACzT,KAAD,EAAW;AACT,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb;;AACA,sBAAI,CAACwT,QAAL,GAAgB,EAAhB;AACD,aAtBL;AAwBD;AAvOqE;AAAA;AAAA,sCAyO1DiB,OAzO0D,EAyOjD;AACnB,gBAAMkN,QAAQ,GAAG,MAAH,OAAG,CAAH,kBAAOlN,OAAP,CAAG,EAAW;AAAC,yBAAW;AAAZ,aAAX,CAAjB;;AACA,gBAAM3D,EAAE,GAAG,KAAKnQ,IAAL,CAAUC,GAAV,CAAc,cAAd,CAAX;AACAkQ,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwBJ,GAAxB,CAA4B,cAA5B,EAA4C8F,UAA5C,CAAuDib,QAAQ,CAAClP,SAAhE;AACA3B,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwBJ,GAAxB,CAA4B,SAA5B,EAAuC8F,UAAvC,CAAkDib,QAAQ,CAAC5iB,EAA3D;AACA+R,cAAE,CAAClD,QAAH,CAAY,KAAK5M,KAAjB,EAAwBJ,GAAxB,CAA4B,SAA5B,EAAuC8F,UAAvC,CAAkDib,QAAQ,CAAChd,IAA3D;AACD;AA/OqE;AAAA;AAAA,2CAiP/C5F,EAjP+C,EAiPtC;;;;;;;;;AAC1BkS,6B,GAAU,E;AACR6C,kC,GAAe,KAAKY,gBAAL,CAAsBvD,WAAtB,E;;0BAChB2C,Y;;;;;;;;AAGC1U,6B,GAAU,SAAVA,OAAU,GAAM;AACpB0U,oCAAY,CAACzU,OAAb,CAAqB,UAAAsV,WAAW,EAAI;AAClC,8BAAMjW,MAAM,GAAG,MAAH,OAAG,CAAH,kBAAOiW,WAAP,CAAG,EAAe;AAAC,sDAAyB5V,EAA1B;AAA8BC,mCAAO,EAAE;AAAvC,2BAAf,CAAf;AACAiS,iCAAO,CAAC1R,IAAR,CAAa,QAAI,CAAC6O,wBAAL,CACVwG,gBADU,CACOlW,MADP,CAAb;AAEA,yBAJF;AAKD,uB;;;AACD,6BAAMe,OAAO,CAACC,OAAR,CAAgBN,OAAO,EAAvB,CAAN;;;AACA,6EAAS6R,OAAT,EACCzQ,IADD,CAEE,iEAAS,YAAM;AACb,gCAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,gCAAI,CAACD,aAAL,GAAqB,KAArB;AACD,uBAHD,CAFF,EAOCmB,SAPD,CAQE,UAACC,SAAD,EAA2B;AACzB,gCAAI,CAACzB,OAAL,CAAa4B,OAAb,CAAqB,sCAArB;AACD,uBAVH,EAWE,UAACC,KAAD,EAAgB;AACd,4BAAI;AACF,kCAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,yBAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,kCAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,uBAjBH;;;;;;;;;AAmBD;AAlRqE;AAAA;AAAA,8CAmRlDgB,KAnRkD,EAmRnC;AAAA;;AACjC,gBAAI,KAAK0T,gBAAL,CAAsBvV,MAAtB,KAAiC,CAArC,EAAwC;AACtC,mBAAKhB,OAAL,CAAawM,MAAb,CAAoB,kCAApB;AACA;AACD;;AACD,gBAAM5L,EAAE,GAAG,KAAK4B,IAAL,CAAUC,GAAV,CAAc,wBAAd,CAAX;AACA,gBAAIkT,YAAY,GAAG,KAAKY,gBAAL,CAAsB/C,EAAtB,CAAyB3Q,KAAzB,EAAgCH,KAAnD;AACAiT,wBAAY,GAAG,MAAH,OAAG,CAAH,kBAAOA,YAAP,CAAG,EAAgB;AAAC,yBAAU;AAAX,aAAhB,CAAf;;AACA,gBAAG,CAACA,YAAY,CAAC,SAAD,CAAhB,EAA4B;AAC1B,mBAAKY,gBAAL,CAAsB9C,QAAtB,CAA+B5Q,KAA/B;AACA;AACD;;AACD,iBAAKxC,aAAL,GAAoB,IAApB;AACA,iBAAK4P,wBAAL,CACGwG,gBADH,CACoBd,YADpB,EAEKtT,IAFL,CAGM,iEAAS,YAAM;AACb,sBAAI,CAAChC,aAAL,GAAoB,KAApB;AACD,aAFD,CAHN,EAOKmB,SAPL,CAQM,UAACE,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,wBAAI,CAAC4U,gBAAL,CAAsB9C,QAAtB,CAA+B5Q,KAA/B;;AACA,wBAAI,CAAC7C,OAAL,CAAa4B,OAAb;AACD,eAHD,MAGO;AACL,wBAAI,CAAC5B,OAAL,CAAa6B,KAAb;AACD;AACF,aAfP,EAgBM,UAACA,KAAD,EAAW;AACT,sBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD,aAlBP;AAoBH;AApTuE;AAAA;AAAA,kDAsT9C;AAAA;;AACtB,gBAAM8Q,EAAE,GAAG,KAAKnQ,IAAL,CAAUC,GAAV,CAAc,cAAd,CAAX;;AACA,gBAAIkQ,EAAE,CAAClD,QAAH,CAAY,CAAZ,EAAehN,GAAf,CAAmB,SAAnB,EAA8BC,KAA9B,IAAuC,IAA3C,EAAiD;AAC/C,mBAAK1C,OAAL,CAAawM,MAAb,CAAoB,kCAApB;AACA;AACD;;AACD,iBAAKnM,aAAL,GAAqB,IAArB;AACA,gBAAIE,MAAM,GAAG0R,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAK3P,IAAL,CAAUE,KAAzB,CAAX,CAAb;AACA,mBAAOnC,MAAM,CAAC,cAAD,CAAb;AACA,iBAAK0P,wBAAL,CACGoT,qBADH,CACyB9iB,MADzB,EAEG8B,IAFH,CAGI,iEAAS,YAAM;AACb,sBAAI,CAAC/B,OAAL,GAAe,KAAf;AACA,sBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGmB,SARH,CASI,UAACE,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,oBAAMf,EAAE,GAAGc,QAAQ,CAACkB,IAAT,CAAc,MAAd,CAAX;;AACA,wBAAI,CAACJ,IAAL,CAAUC,GAAV,CAAc,wBAAd,EAAwCwI,QAAxC,CAAiDrK,EAAjD;;AACA,oBAAG,QAAI,CAAC4B,IAAL,CAAUC,GAAV,CAAc,cAAd,EAA8BC,KAA9B,CAAoC,CAApC,EAAuC,SAAvC,CAAH,EAAqD;AACnD,0BAAI,CAAC+T,gBAAL,CAAsB7V,EAAtB;AACD;;AACD,wBAAI,CAAC0N,MAAL,CAAYpD,QAAZ,CAAqB,CAAC,KAAD,CAArB,EAA8B;AAC5BC,4BAAU,EAAE,QAAI,CAAClL;AADW,iBAA9B;;AAGA,wBAAI,CAACD,OAAL,CAAa4B,OAAb;AACD,eAVD,MAUO;AACL,wBAAI,CAAC5B,OAAL,CAAa6B,KAAb;AACD;AACF,aAvBL,EAwBI,UAACA,KAAD,EAAgB;AACd,kBAAI;AACF,wBAAI,CAAC7B,OAAL,CAAa6B,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAYI,OAA/B;AACD,eAFD,CAEE,OAAOJ,KAAP,EAAc;AACd,wBAAI,CAAC7B,OAAL,CAAa6B,KAAb;AACD;AACF,aA9BL;AAgCD;AA/VqE;AAAA;AAAA,6CAqWnD;AACjB,iBAAK0U,gBAAL,CAAsBnV,IAAtB,CACE,KAAKkD,WAAL,CAAiB8E,KAAjB,CAAuB;AACrBiI,oCAAsB,EAAE,CAAC,IAAD,CADH;AAErByF,qBAAO,EAAE,CAAC,IAAD,CAFY;AAGrBC,0BAAY,EAAE,CAAC;AAACrU,qBAAK,EAAE,IAAR;AAAe2Q,wBAAQ,EAAE;AAAzB,eAAD,EAAiC,CAAC,2DAAWjE,QAAZ,CAAjC,CAHO;AAIrB4H,qBAAO,EAAE,CAAC;AAACtU,qBAAK,EAAE,IAAR;AAAe2Q,wBAAQ,EAAE;AAAzB,eAAD,EAAiC,CAAC,2DAAWjE,QAAZ,CAAjC;AAJY,aAAvB,CADF;AAQD;AA9WqE;AAAA;AAAA,oCAgX5D7L,QAhX4D,EAgXhCV,KAhXgC,EAgXjB;AACnD,iBAAKA,KAAL,GAAaA,KAAb;AACA,iBAAKgO,QAAL,GAAgB,KAAKrM,YAAL,CAAkBmH,IAAlB,CAAuBpI,QAAvB,EAAiC;AAC/CqI,sBAAQ,EAAE,KADqC;AAE/C,uBAAO;AAFwC,aAAjC,CAAhB;AAID;AAtXqE;AAAA;AAAA,sCAuX1D;AACV,iBAAKiF,QAAL,CAAc3I,IAAd;AACD;AAzXqE;AAAA;AAAA,6CA2XnDwL,SA3XmD,EA2XhC7Q,KA3XgC,EA2XjBwM,KA3XiB,EA2XF;AAClE,gBAAI,KAAKsE,oBAAL,CAA0BD,SAA1B,EAAqC7Q,KAArC,EAA4CwM,KAA5C,CAAJ,EAAwD;AACtD,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AAjYqE;AAAA;AAAA,+CAmYjDqE,SAnYiD,EAmY9B7Q,KAnY8B,EAmYfwM,KAnYe,EAmYH;AACjE,gBAAIuE,UAAU,GAAQ,KAAKpR,IAAL,CAAUiN,QAAV,CAAmBiE,SAAnB,CAAtB;AACArE,iBAAK,GAAGuE,UAAU,CAACnE,QAAX,CAAoB5M,KAApB,EAA2BJ,GAA3B,CAA+B4M,KAA/B,CAAR;AAEA,mBAAOA,KAAK,CAAC1N,MAAN,IAAgB,SAAhB,IAA6B0N,KAAK,CAACE,OAA1C;AACD;AAxYqE;AAAA;AAAA,gDA0YhDmE,SA1YgD,EA0Y7B7Q,KA1Y6B,EA0YdwM,KA1Yc,EA0YC;AACrE,gBAAID,QAAQ,GAAG,KAAf;AACA,gBAAII,WAAW,GAAG,IAAI,2DAAJ,EAAlB;AACA,gBAAIoE,UAAU,GAAQ,KAAKpR,IAAL,CAAUiN,QAAV,CAAmBiE,SAAnB,CAAtB;;AAEA,gBAAIE,UAAU,CAACnE,QAAX,CAAoB5M,KAApB,EAA2BJ,GAA3B,CAA+B4M,KAA/B,EAAsCK,SAA1C,EAAqD;AACnD,kBAAIC,gBAAgB,GAAGiE,UAAU,CAACnE,QAAX,CAAoB5M,KAApB,EACpBJ,GADoB,CAChB4M,KADgB,EAEpBK,SAFoB,CAEVF,WAFU,CAAvB;AAGAJ,sBAAQ,GACNO,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACP,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AA1ZqE;AAAA;AAAA,wCA2ZxDpC,KA3ZwD,EA2ZjC;AACnC,iBAAK0D,KAAL,GAAa,CAAC1D,KAAK,CAACC,IAAN,GAAa,CAAd,IAAmBD,KAAK,CAACnG,YAAtC;AACA,iBAAK8J,GAAL,GAAW3D,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACnG,YAA9B;AACD;AA9ZqE;AAAA;AAAA,8BAiW/C;AACrB,mBAAO,KAAKrE,IAAL,CAAUC,GAAV,CAAc,cAAd,CAAP;AACD;AAnWqE;;AAAA;AAAA,S;;;;gBAhBtE;;gBATO;;gBAKgB;;gBAVhB;;gBAUA;;gBAFgC;;gBAahC;;gBAlBA;;gBACA;;;;AA0BI6gB,iEAA2D,6DALvE,iEAAU;AACThgB,gBAAQ,EAAE,oDADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAKuE,E,+EA+B/C,2D,EACJ,2F,EACD,sD,EACM,kE,EACE,8D,EACD,6D,EACW,uH,EACZ,uF,EACK,qG,EAvCyC,GAA3D+f,2DAA2D,CAA3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eC7Bb;AAIA;AAoBA;;;UAgEaG,+BAA+B;AAAA;AAAA,O;;AAA/BA,qCAA+B,6DA7C3C,gEAAS;AACRrD,oBAAY,EAAE,CACZ,gGADY,EAEZ,kIAFY,EAGZ,yHAHY,EAIZ,mIAJY,EAKZ,4IALY,EAMZ,+HANY,EAOZ,8GAPY,EAQZ,uHARY,EASZ,mIATY,EAUZ,4IAVY,EAWZ,mIAXY,EAYZ,6IAZY,EAaZ,mJAbY,EAcZ,sJAdY,EAeZ,8GAfY,EAgBZ,uHAhBY,EAiBZ,8IAjBY,CADN;AAoBRvc,eAAO,EAAE,CACP,4DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,4DAJO,EAKP,kEALO,EAMP,mEANO,EAOP,+DAAiBwc,OAAjB,EAPO,EAQP,4DAAcA,OAAd,EARO,EASP,yDAAWA,OAAX,EATO,EAUP,8DAAgBA,OAAhB,EAVO,EAWP,+DAAiBA,OAAjB,EAXO,EAYP,iEAAmBA,OAAnB,EAZO,EAaP,0DAAYA,OAAZ,EAbO,EAcP,6EAdO,EAeP,uFAfO,EAgBP,oEAhBO,EAiBP,sGAjBO,EAkBP,kFAlBO,EAmBP,0FAnBO,EAoBP,kDApBO,EAqBP,kEArBO,EAsBP,yGAtBO;AApBD,OAAT,CA6C2C,GAA/BoD,+BAA+B,CAA/B","file":"entrada-materiais-entrada-materiais-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL2VudHJhZGEtbWF0ZXJpYWlzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div class=\\\"modal-body\\\">\\r\\n  <advanced-filter>\\r\\n    <form [formGroup]=\\\"formLotesDuplicados\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"IN_DS_OBSE\\\">Situação dos Lotes</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            formControlName=\\\"IN_DS_OBSE\\\"\\r\\n          >\\r\\n            <option value=\\\"1\\\">Lotes Justificados</option>\\r\\n            <option value=\\\"0\\\">Lotes não Justificados</option>\\r\\n            <option value=\\\"\\\">Exhibir Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"buscarPor\\\">BUSCAR POR</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            formControlName=\\\"buscarPor\\\"\\r\\n          >\\r\\n            <option value=\\\"DS_LOTE\\\" selected>Lote</option>\\r\\n            <option value=\\\"NR_NOTA_FISC\\\" >Nota Fiscal</option>\\r\\n            <option value=\\\"NM_MATE\\\">Material</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-6\\\">\\r\\n          <label>TERMO DE PESQUISA</label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"pesquisa\\\"\\r\\n              >\\r\\n              <div class=\\\"input-group-append\\\">\\r\\n                <span\\r\\n                  container=\\\"body\\\"\\r\\n                  placement =\\\"left\\\"\\r\\n                >\\r\\n                  <button\\r\\n                    style=\\\"height: 25px;\\\"\\r\\n                    class=\\\"input-group-text hover\\\"\\r\\n                    (click)=\\\"getLotesDuplicados()\\\"\\r\\n                    >\\r\\n                    <i class=\\\"fas fa-search\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div [hidden]=\\\"!loadingDuplicadas\\\" class=\\\"col-lg-12 text-muted \\\">\\r\\n    <p><strong>Buscando os lotes duplicados...</strong></p>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" [hidden] = \\\"loadingDuplicadas || noDuplicadas\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noDuplicadas\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loadingDuplicadas || noDuplicadas\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-5': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noDuplicadas\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('DS_LOTE')\\\">\\r\\n                <thead-sorter value=\\\"Lote\\\" [active]=\\\"ORDE_BY == 'DS_LOTE'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('NR_NOTA_FISC')\\\">\\r\\n                <thead-sorter value=\\\"NF\\\" [active]=\\\"ORDE_BY == 'NR_NOTA_FISC'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                [hidden]=\\\"showDetailPanel\\\"\\r\\n                (click)=\\\"setOrderBy('SEQU_MATE')\\\">\\r\\n                <thead-sorter value=\\\"Sequência\\\" [active]=\\\"ORDE_BY == 'SEQU_MATE'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                [hidden]=\\\"showDetailPanel\\\"\\r\\n                (click)=\\\"setOrderBy('CD_MATE')\\\">\\r\\n                <thead-sorter value=\\\"Cód. Material\\\" [active]=\\\"ORDE_BY == 'CD_MATE'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                [hidden]=\\\"showDetailPanel\\\"\\r\\n                (click)=\\\"setOrderBy('NM_MATE')\\\">\\r\\n                <thead-sorter value=\\\"Material\\\" [active]=\\\"ORDE_BY == 'NM_MATE'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                [hidden]=\\\"showDetailPanel\\\"\\r\\n                (click)=\\\"setOrderBy('DS_UNID_MEDI')\\\">\\r\\n                <thead-sorter value=\\\"Un. Medida\\\" [active]=\\\"ORDE_BY == 'DS_UNID_MEDI'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                [hidden]=\\\"showDetailPanel\\\"\\r\\n                (click)=\\\"setOrderBy('NM_STAT')\\\">\\r\\n                <thead-sorter value=\\\"Status de Recebimento\\\" [active]=\\\"ORDE_BY == 'NM_STAT'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                [hidden]=\\\"showDetailPanel\\\"\\r\\n                (click)=\\\"setOrderBy('DT_INCL')\\\">\\r\\n                <thead-sorter value=\\\"Data justificativa\\\" [active]=\\\"ORDE_BY == 'DT_INCL'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:40px\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr  *ngFor=\\\"let duplicada of duplicadas \\\" [class.table-active]=\\\"duplicada?.ID_LOGI_ENMA_NOFI == duplicadaSelecionada?.ID_LOGI_ENMA_NOFI && showDetailPanel\\\">\\r\\n              <td  [ngClass]=\\\"duplicada.IN_STAT == '1' ? 'border-success' : 'border-primary'\\\">\\r\\n                {{duplicada.DS_LOTE }}\\r\\n              </td>\\r\\n              <td >{{ duplicada.NR_NOTA_FISC }}</td>\\r\\n              <td [hidden]=\\\"showDetailPanel\\\" (click)=\\\"onDetails(duplicada)\\\">{{ duplicada.SEQU_MATE | uppercase }}</td>\\r\\n              <td [hidden]=\\\"showDetailPanel\\\" (click)=\\\"onDetails(duplicada)\\\">{{ duplicada.CD_MATE }}</td>\\r\\n              <td [hidden]=\\\"showDetailPanel\\\" (click)=\\\"onDetails(duplicada)\\\">{{ duplicada.NM_MATE | uppercase }}</td>\\r\\n              <td [hidden]=\\\"showDetailPanel\\\" (click)=\\\"onDetails(duplicada)\\\">{{ duplicada.DS_UNID_MEDI | uppercase }}</td>\\r\\n              <td [hidden]=\\\"showDetailPanel\\\" (click)=\\\"onDetails(duplicada)\\\">{{ duplicada.NM_STAT | uppercase }}</td>\\r\\n              <td [hidden]=\\\"showDetailPanel\\\" (click)=\\\"onDetails(duplicada)\\\">{{ duplicada.DT_INCL | date: 'dd/MM/yyyy' }}</td>\\r\\n              <td class=\\\"align-middle\\\">\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Justificar\\\" *ngIf=\\\"duplicada.IN_STAT != 1\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModal(formResolucao, duplicada)\\\">\\r\\n                    <i class=\\\"fas fa-check\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div>\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItemsDuplicadas ? totalItemsDuplicadas : currentPage*(itemsPerPage) }} de {{ totalItemsDuplicadas }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItemsDuplicadas\\\"\\r\\n          (pageChanged)=\\\"onPageChangedDuplicadas($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel>\\r\\n        <div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>ID</label>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.ID_LOGI_ENMA_NFMA_LTDP == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.ID_LOGI_ENMA_NFMA_LTDP != null\\\">{{duplicadaSelecionada?.ID_LOGI_ENMA_NFMA_LTDP}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Lote</label>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.DS_LOTE == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.DS_LOTE != null\\\">{{ duplicadaSelecionada?.DS_LOTE}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Nota Fiscal</label>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.NR_NOTA_FISC == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.NR_NOTA_FISC != null\\\">{{ duplicadaSelecionada?.NR_NOTA_FISC}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Status de Recebimento</label>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.NM_STAT == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.NM_STAT != null\\\">{{ duplicadaSelecionada?.NM_STAT}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Sequência</label>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.SEQU_MATE == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.SEQU_MATE != null\\\">{{ duplicadaSelecionada?.SEQU_MATE  }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Cód. Material</label>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.CD_MATE == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.CD_MATE != null\\\">{{ duplicadaSelecionada?.CD_MATE  }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Material</label>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.NM_MATE == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.NM_MATE != null\\\"> {{duplicadaSelecionada?.NM_MATE}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <hr>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <label>Justificativa:</label>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.DS_OBSE == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.DS_OBSE != null\\\">{{ duplicadaSelecionada?.DS_OBSE  }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <hr>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <label>Usuário Responsável Pela Justificativa</label>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.NR_MATR == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.NR_MATR != null\\\">{{duplicadaSelecionada?.NR_MATR}} - {{ duplicadaSelecionada?.NM_USUA }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <label>Data da Justificativa</label>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.DT_INCL == null\\\">NÃO INFORMADO</div>\\r\\n              <div *ngIf=\\\"duplicadaSelecionada?.DT_INCL != null\\\">{{ duplicadaSelecionada?.DT_INCL | date: 'dd/MM/yyyy'}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-template #formResolucao>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Descrição de Parecer #{{duplicadaSelecionada?.ID_APRO}}</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <form [formGroup]=\\\"formLotesDuplicados\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row justify-content-center\\\">\\r\\n            <div class=\\\"form-group col pl-0\\\">\\r\\n              <label for=\\\"DS_OBSE\\\" >Descrição:</label>\\r\\n              <textarea\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"DS_OBSE\\\"\\r\\n                formControlName=\\\"DS_OBSE\\\"\\r\\n                rows=\\\"3\\\"\\r\\n                [ngClass]=\\\"onFieldError('DS_OBSE')\\\"\\r\\n                >\\r\\n              </textarea>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('DS_OBSE')\\\" message=\\\"Descrição é obrigatório com no mínimo {{numberDescricao}} caracteres.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n        <div  class=\\\"form-row justify-content-center text-center\\\" >\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-default btn-lg m-2\\\"\\r\\n            (click)=\\\"changeType()\\\"\\r\\n            [disabled]=\\\"formLotesDuplicados.valid === false\\\"\\r\\n          >\\r\\n          <span aria-hidden=\\\"true\\\">\\r\\n            <i class=\\\" text-primary fas fa-check\\\"></i>\\r\\n           </span>Marcar como Justificado\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\";","import { ILogisticaEntradaMateriaisDocumentos } from './../models/documentos';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { finalize, switchMap, take } from 'rxjs/operators';\r\nimport { forkJoin, EMPTY } from 'rxjs';\r\nimport { LogisticaEntradaMateriaisFichaConformidadeService } from './../services/ficha-conformidade.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-notas-fiscais-documentos',\r\n  templateUrl: './documentos.component.html',\r\n  styleUrls: ['./documentos.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisFichasConformidadeDocumentosComponent implements OnInit {\r\n  @Input() set fichaId(id: number){\r\n    if(!id)\r\n      return\r\n    this.postDocumentos(id);\r\n  };\r\n  \r\n  form: FormGroup;\r\n  formData: Array<FormData> = [];\r\n  documentos: Partial<ILogisticaEntradaMateriaisDocumentos>[] = [];\r\n  loadingNavBar = false;\r\n  loading = false;\r\n  constructor(\r\n      private fichaConformidadeService : LogisticaEntradaMateriaisFichaConformidadeService,\r\n      private pnotify: PNotifyService,\r\n      private activatedRoute: ActivatedRoute,\r\n      private confirmModalService: ConfirmModalService,\r\n    ) { \r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    if(params.hasOwnProperty('id')){\r\n      this.getDocumentos({\r\n        ID_LOGI_ENMA_FHNC: params.id,\r\n        IN_STAT: '1'\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  \r\n  async postDocumentos(fichaId: number) {\r\n    let requests = [];\r\n\r\n    if (this.formData.length === 0) {\r\n      return requests;\r\n    }\r\n\r\n    const promise = () => {\r\n      this.formData.forEach((element) => {\r\n        requests.push(this.fichaConformidadeService.postDocumento(element, fichaId));\r\n      });\r\n    }\r\n\r\n    Promise.resolve(promise());\r\n\r\n    forkJoin(requests)\r\n      .subscribe(\r\n        (responses: Array<HttpResponse<any>>)=>{\r\n          responses.forEach(response => {\r\n            if(response.status === 200){\r\n              this.pnotify.success();\r\n            } else {\r\n              this.pnotify.error();\r\n            }\r\n          })\r\n        }\r\n        ,\r\n      (error) => {\r\n        this.pnotify.error();\r\n      }\r\n      )\r\n\r\n    return requests;\r\n  }\r\n\r\n  putDocumento(documento: ILogisticaEntradaMateriaisDocumentos) {\r\n    const [type, title, message, cancelTxt, okTxt] = [\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar',\r\n    ];\r\n\r\n    this.confirmModalService\r\n      .showConfirm(type, title, message, cancelTxt, okTxt)\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n\r\n          return this.fichaConformidadeService.putDocumento(documento);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        this.pnotify.success('Documento atualizado com sucesso');\r\n        this.getDocumentos({\r\n          ID_LOGI_ENMA_FHNC: this.form.get('ID_LOGI_ENMA_FHNC').value,\r\n          IN_STAT: '1',\r\n        });\r\n      });\r\n  }\r\n\r\n  getDocumentos(params?) {\r\n    this.fichaConformidadeService.getDocumento(params).subscribe(\r\n      (response) => {\r\n        if (response.status === 200) {\r\n          this.documentos = response.body['data'];\r\n        } else {\r\n          this.documentos = [];\r\n        }\r\n      },\r\n      (error) => {\r\n        this.documentos = [];\r\n      }\r\n    );\r\n  }\r\n\r\n  onRemove(documento: ILogisticaEntradaMateriaisDocumentos, index: number) {\r\n    if(!documento.hasOwnProperty('ID_LOGI_ENMA_FHNC_DOCU')){\r\n      this.formData = this.formData.filter((element:FormData) => {\r\n        return (element.get('file'))['name'] != documento.NM_DOCU ;\r\n      })\r\n    }\r\n    documento.IN_STAT = '0';\r\n    this.documentos.splice(index, 1)\r\n    if(documento.hasOwnProperty('ID_LOGI_ENMA_FHNC_DOCU')){\r\n      this.putDocumento(documento);\r\n    }\r\n  }\r\n\r\n  appendFile(files: FileList) {\r\n    if (files.length === 0) return;\r\n    const fd = new FormData();\r\n    fd.append('file', files[0]);\r\n    this.formData.push(fd);\r\n    this.documentos.push({ NM_DOCU: files[0]['name']});\r\n  }\r\n}\r\n","export default \"::ng-deep .accordion-toggle button {\\n  width: 100%;\\n  border: none;\\n  text-align: left;\\n  color: black;\\n  font-weight: 500;\\n}\\n\\n.ScrollHistorico {\\n  height: 430px;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n}\\n\\n.buttonGerarFicha {\\n  color: #ff7300;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmFkYS1tYXRlcmlhaXMvbm90YXMtZmlzY2Fpcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxjQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2lzdGljYS9lbnRyYWRhLW1hdGVyaWFpcy9ub3Rhcy1maXNjYWlzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIC5hY2NvcmRpb24tdG9nZ2xlIGJ1dHRvbntcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBjb2xvcjogYmxhY2s7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxufVxyXG5cclxuLlNjcm9sbEhpc3RvcmljbyB7XHJcbiAgaGVpZ2h0OiA0MzBweDtcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcclxufVxyXG5cclxuLmJ1dHRvbkdlcmFyRmljaGF7XHJcbiAgY29sb3I6cmdiKDI1NSwgMTE1LCAwKVxyXG4gIH0iXX0= */\";","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { SulFluminenseEntradaMateriaisComponent } from './entrada-materiais.component';\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\nimport { SulFluminensePainelBobinasQualidadeComponent } from './painel-bobinas-qualidade/painel-bobinas-qualidade.component';\r\nimport { SulFluminenseConsultaRecebimentoBobinasComponent } from './consulta-recebimento-bobinas/consulta-recebimento-bobinas.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: SulFluminenseEntradaMateriaisComponent\r\n      },\r\n      {\r\n        path: 'painel-bobinas-qualidade',\r\n        component: SulFluminensePainelBobinasQualidadeComponent\r\n      },\r\n      {\r\n        path: 'consulta-recebimento-bobinas',\r\n        component: SulFluminenseConsultaRecebimentoBobinasComponent\r\n      },\r\n      {\r\n        path: '**',\r\n        component: NotFoundComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SulFluminenseEntradaMateriaisRoutingModule { }\r\n","import { DateService } from './../../../../../shared/services/core/date.service';\r\nimport { LogisticaEntradaMateriaisStatusRecebimentoService } from './../../status-recebimento/services/status-recebimento.service';\r\n\r\n\r\n//angular\r\nimport { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { LogisticaEntradaMateriaisNotasFiscaisService } from '../services/notas-fiscais.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { LogisticaEntradaMateriaisService } from '../../services/entrada-materiais.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef, BsModalService, BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaEntradaMateriaisNotasFiscais } from './../models/notasFiscais';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-notas-fiscais-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisNotasFiscaisListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  noMateriais: boolean;\r\n  noHistoricoMateriais= {};\r\n  noAlteracoes: boolean;\r\n  modalRef1: BsModalRef;\r\n  modalRef2: BsModalRef;\r\n  form: FormGroup;\r\n  $activatedRouteSubscription: Subscription;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  ORDE_BY = 'ID_LOGI_ENMA_NOFI';\r\n  ORDE_TYPE = 'desc';\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false; \r\n  loadingFornecedores = false;\r\n  loadingMateriais = false;\r\n  loadingHistoricoMateriais = false;\r\n  loadingEmpresas = false;\r\n  loadingDepositos = false;\r\n  loadingAlteracoes = false;\r\n  loadingStatusRecebimento = false;\r\n  //VARIAVEIS\r\n  fornecedores =[];\r\n  empresas =[];\r\n  depositos =[];\r\n  materiais =[];\r\n  historicoMateriais = [];\r\n  alteracoes=[];\r\n  statusRecebimento=[];\r\n  totalItens: any = [];\r\n  notasFiscais: Array<ILogisticaEntradaMateriaisNotasFiscais>;\r\n  allNotasFiscais: Array<ILogisticaEntradaMateriaisNotasFiscais>;\r\n  notaFiscalSelecionada: ILogisticaEntradaMateriaisNotasFiscais;\r\n\r\n  //CARDS\r\n  notas: number = 0;\r\n  notasEmpty: boolean = false;\r\n\r\n  fichasNaoConforme: number = 0;\r\n  fichasNaoConformeEmpty: boolean = false;\r\n\r\n  duplicados: number = 0;\r\n  duplicadosEmpty: boolean = false;\r\n\r\n  countoNotas: number;\r\n  countoFichasNaoConforme: number;\r\n  countoDuplicados: number;\r\n\r\n  cardsLoading: boolean = true;\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  // Tipos de Situação das Notas Fiscais (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '0',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  tiposData = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Emissão',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Recebimento',\r\n    },\r\n    {\r\n      cod: '3',\r\n      nome: 'Entrada no Estoque',\r\n    },\r\n    {\r\n      cod: '4',\r\n      nome: 'Cadastro',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private notasFiscaisService: LogisticaEntradaMateriaisNotasFiscaisService,\r\n    private entradaMateriaisService: LogisticaEntradaMateriaisService,\r\n    private statusRecebimentoService: LogisticaEntradaMateriaisStatusRecebimentoService,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private modalService: BsModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.getEmpresas();\r\n    this.getDepositos();\r\n    this.getStatusRecebimento();\r\n    this.getLotesDuplicados();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n    if(this.modalRef1 != undefined){\r\n      this.modalRef1.hide();\r\n    }\r\n    if(this.modalRef2 != undefined){\r\n      this.modalRef2.hide();\r\n    }\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n        this.getNotasFiscais(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TP_DATA_FINA: '1',\r\n      TP_DATA_INIC: '1',\r\n      DT_INIC: new Date(),\r\n      DT_FINA: new Date(),\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENMA_NOFI: [null],\r\n      NR_NOTA_FISC: [null],\r\n      NM_FORN: [null],\r\n      CD_MATE: [null],\r\n      ID_FORN: [null],\r\n      NM_DEPO: [null],\r\n      DT_EMIS_NOTA_FISC: [null],\r\n      NR_NOTA_FISC_REFE: [null],\r\n      ID_LOGI_ENMA_NOFI_STAT: [null],\r\n      NM_STAT: [null],\r\n      NM_MATE: [null],\r\n      DS_LOTE: [null],\r\n      IN_FHNC: [null],\r\n      DS_LOGI_ENTR_MATE_UNID_MEDI: [null],\r\n      DS_LOGI_ENTR_MATE_LOTE: [null],\r\n      TP_DATA_FINA: ['1'],\r\n      TP_DATA_INIC: ['1'],\r\n      UUID_EMPR: [null],\r\n      UUID_DEPO: [null],\r\n      NM_EMPR: [null],\r\n      QT_LOGI_ENTR_MATE: [null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      MATR_USUA_CADA: [null],\r\n      DS_USUA_CADA: [null],\r\n      DT_INCL: [null],\r\n      DT_INIC: [new Date()],\r\n      DT_FINA: [new Date()],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      ORDE_BY: [this.ORDE_BY],\r\n      ORDE_TYPE: [this.ORDE_TYPE],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Notas Fiscais',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('ORDE_TYPE').setValue(this.ORDE_TYPE);\r\n    this.form.get('ORDE_BY').setValue(this.ORDE_BY);\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n    this.form.reset();\r\n  }\r\n\r\n  gerarFicha(id:number) {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    const idSubmodulo = params.hasOwnProperty('idSubModulo') ? params.idSubModulo : undefined;\r\n  this.route.navigate([`/logistica/entrada-materiais/${idSubmodulo}/fichas-nao-conformidade/novo`], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams({ID_LOGI_ENMA_NOFI: id}),\r\n    });\r\n  }\r\n\r\n  openModalDetalhes(template: TemplateRef<any>, nota) {\r\n    this.getNotasMateriais({\r\n      ID_LOGI_ENMA_NOFI: nota.ID_LOGI_ENMA_NOFI, IN_STAT: '1'\r\n    });\r\n    this.getAlteracoes({ID_LOGI_ENMA_NOFI: nota.ID_LOGI_ENMA_NOFI});\r\n    this.getHistoricoMateriais({ID_LOGI_ENMA_NOFI: nota.ID_LOGI_ENMA_NOFI});\r\n    this.notaFiscalSelecionada = nota;\r\n    this.modalRef1 = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-xl',\r\n    });\r\n  }\r\n\r\n  hideModalDetalhes() {\r\n    this.modalRef1.hide();\r\n  }\r\n\r\n  openModalDuplicadas(template: TemplateRef<any>) {\r\n    this.modalRef2 = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-xl',\r\n    });\r\n  }\r\n\r\n  hideModalDuplicadas() {\r\n    this.modalRef2.hide();\r\n    this.getLotesDuplicados();\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.ORDE_BY === column) {\r\n      if (this.ORDE_TYPE == 'desc') {\r\n        this.ORDE_TYPE = 'asc';\r\n      } else if (this.ORDE_TYPE == 'asc') {\r\n        this.ORDE_TYPE = 'desc';\r\n      }\r\n    } else {\r\n      this.ORDE_BY = column;\r\n      this.ORDE_TYPE = 'asc';\r\n    }\r\n    this.onFilter();\r\n  }\r\n\r\n\r\n\r\n  getNotasMateriais(params?) {\r\n    this.loadingMateriais = true;\r\n    this.notasFiscaisService\r\n      .getNotasMateriais(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingMateriais = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.materiais = response.body['data'];\r\n          this.noMateriais =false;\r\n        }else {\r\n          this.materiais = [];\r\n          this.noMateriais= true;\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.noMateriais= true;\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n          this.noMateriais = true;\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      });\r\n}\r\n\r\n  fichasNaoConformeChange(){\r\n    this.form.get('IN_FHNC').setValue('1');\r\n    this.onFilter();\r\n  }\r\n\r\n  getHistoricoMateriais(params) {\r\n    this.loadingHistoricoMateriais= true;\r\n    this.notasFiscaisService\r\n      .getHistoricoMateriais({...params, ORDE_TYPE:'desc'})\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingHistoricoMateriais = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status !== 200) {\r\n            return;\r\n          }\r\n          this.historicoMateriais = response['body']['data'];\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        });\r\n  }\r\n      \r\n  hasHistoricoMateriais(id):boolean{\r\n    if(this.loadingHistoricoMateriais[id])\r\n      return false\r\n    if(!this.historicoMateriais[id])\r\n      return false;\r\n    if(this.historicoMateriais[id].length == 0)\r\n      return false;\r\n    return true;\r\n  }\r\n\r\n  getNotasFiscais(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.cardsLoading = false;\r\n    this.notasFiscaisService\r\n      .getNotasFiscais(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.cardsLoading = true;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.notasFiscais = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.notas = response.body['total'];\r\n            this.fichasNaoConforme = response.body['notConform'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.notas = 0\r\n            this.notasFiscais = [];\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.noResult = true;\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        });\r\n  }\r\n  \r\n\r\n  getLotesDuplicados(params?) {\r\n    const _params = {...params,IN_DS_OBSE:0}\r\n    this.notasFiscaisService\r\n      .getLotesDuplicados(_params)\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.duplicados = response.body['total'];\r\n        }else {\r\n          this.duplicados = 0;\r\n        }\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n          this.duplicados = 0;\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      });\r\n}\r\n\r\n  typeChange(params){\r\n    if(params.ID_LOGI_ENMA_NOFI_STAT)\r\n      return false;\r\n\r\n    if(params.ID_EMPR)\r\n      return false;\r\n\r\n    if(params.ID_FORN)\r\n      return false;\r\n\r\n    if(params.NR_NOTA_FISC)\r\n      return false;\r\n\r\n    if(params.DT_EMIS_NOTA_FISC)\r\n      return false;\r\n\r\n    if(params.DS_OBSE)\r\n      return false;\r\n    \r\n    if(params.IN_STAT)\r\n      return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  getExport(params?) {\r\n    this.loadingNavBar= true;\r\n    params = this.getParams();\r\n    const _params = {...params,IN_PAGI:'0'}\r\n    this.loadingNavBar = true;\r\n    this.notasFiscaisService\r\n      .getExport(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.allNotasFiscais = response.body['data'];\r\n            this.onExport();\r\n          } else {\r\n            this.allNotasFiscais = [];\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        });\r\n  }\r\n\r\n  getEmpresas(params?) {\r\n    this.loadingEmpresas=true;\r\n    this.entradaMateriaisService\r\n      .getEmpresas(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingEmpresas = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.empresas = response.body['result'];\r\n          } else {\r\n            this.pnotify.notice('Nenhum registro encontrado!');\r\n            this.empresas = [];\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n            this.empresas = [];\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        });\r\n  }\r\n\r\n  getDepositos(params?) {\r\n    this.loadingDepositos=true;\r\n    this.entradaMateriaisService\r\n      .getDepositos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingDepositos = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.depositos = response.body['result'];\r\n          } else {\r\n            this.pnotify.notice('Nenhum registro encontrado!');\r\n            this.depositos = [];\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n            this.depositos = [];\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        });\r\n  }\r\n\r\n\r\n\r\n  getAlteracoes(params?) {\r\n    const _params = params ?? {};\r\n    _params.ORDE_TYPE = 'desc';\r\n\r\n    this.loadingAlteracoes = true;\r\n    this.notasFiscaisService\r\n      .getAlteracoes(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingAlteracoes = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.alteracoes = response.body['data'];\r\n          this.noAlteracoes =false;\r\n        }else {\r\n          this.alteracoes = [];\r\n          this.noAlteracoes =true;\r\n        }\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n          this.noAlteracoes = true;\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      });\r\n}\r\n\r\n  titleHistorico(params){\r\n    const _newDT = new Date(params.DT_INCL)\r\n    const data = this.dateService.convertToBrazilianDate(_newDT);\r\n    if(params.IN_STAT != 0){\r\n      return (\"ALTERAÇÃO REALIZADA POR \" + params.NM_USUA + \" NO DIA \" + data )\r\n    }\r\n    if(params.SEQU_MATE == null && params.IN_STAT != 0){\r\n      return (\"MATERIAL REMOVIDO POR \" + params.NM_USUA + \" NO DIA \" + data )\r\n    }\r\n    return (\"REGISTRO INATIVADO POR \" + params.NM_USUA + \" NO DIA \" + data )\r\n  }\r\n\r\n  getFornecedores(params?) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = '1';\r\n    _params.IN_PAGI = '0';\r\n\r\n    this.loadingFornecedores = true;\r\n    this.entradaMateriaisService\r\n      .getFornecedores(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingFornecedores = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.fornecedores = response.body['data'];\r\n        }else {\r\n          this.fornecedores = [];\r\n        }\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n          this.fornecedores = [];\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      });\r\n}\r\n  getStatusRecebimento(params?) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = '1';\r\n    _params.IN_PAGI = '0';\r\n\r\n  this.loadingStatusRecebimento = true;\r\n  this.statusRecebimentoService\r\n    .getStatusRecebimento(_params)\r\n    .pipe(\r\n      finalize(() => {\r\n        this.loadingStatusRecebimento = false;\r\n      })\r\n    )\r\n    .subscribe((response) => {\r\n      if (response.status === 200) {\r\n        this.statusRecebimento = response.body['data'];\r\n      }else {\r\n        this.statusRecebimento = [];\r\n      }\r\n    },\r\n    (error: any) => {\r\n      try {\r\n        this.pnotify.error(error.error.message);\r\n        this.statusRecebimento = [];\r\n      } catch (error) {\r\n        this.pnotify.error();\r\n      }\r\n    });\r\n}\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(notas: ILogisticaEntradaMateriaisNotasFiscais): string {\r\n    let borderClass: string;\r\n\r\n    if (notas.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (notas.IN_STAT == 0) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(nota: ILogisticaEntradaMateriaisNotasFiscais) {\r\n    const stat = nota.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          nota.IN_STAT = stat;\r\n          return this.notasFiscaisService.postNotasFiscais({ID_LOGI_ENMA_NOFI:nota.ID_LOGI_ENMA_NOFI, IN_STAT:stat});\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n            nota.IN_STAT = nota.IN_STAT == 1 ? 0 : 1;\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        });\r\n    }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.allNotasFiscais;\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Notas_Fiscais${dataExport}`);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL3BhaW5lbC1hcHJvdmFjYW8vbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL3BhcmVjZXIvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loading\\\"></loader-spinner-navbar>\\r\\n\\r\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div id=\\\"title\\\">\\r\\n      <back-button></back-button>\\r\\n      <h1>Consulta de Recebimento de Bobinas</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"col-6 d-flex justify-content-end\\\">\\r\\n    <div id=\\\"actions\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row pb-0\\\" id=\\\"application-body\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\r\\n    <custom-iframe [url]=\\\"url\\\"></custom-iframe>    \\r\\n  </div>\\r\\n</div>\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"MOTIVOS\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onExport()\\\"\\r\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"ID_LOGI_ENTR_MATE_MOTI\\\">ID</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"ID_LOGI_ENTR_MATE_MOTI\\\"\\r\\n                formControlName=\\\"ID_LOGI_ENTR_MATE_MOTI\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n              <label for=\\\"DS_LOGI_ENTR_MATE_MOTI\\\">Descrição</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"DS_LOGI_ENTR_MATE_MOTI\\\"\\r\\n                formControlName=\\\"DS_LOGI_ENTR_MATE_MOTI\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"DS_LOGI_ENTR_MATE_CATE_MOTI\\\">Categoria</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"categorias\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"categotia\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"categotia\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"DS_LOGI_ENTR_MATE_CATE_MOTI\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" >ID</th>\\r\\n              <th scope=\\\"col\\\" >Descrição</th>\\r\\n              <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Categoria</th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:80px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let motivo of motivos\\\"  [class.table-active]=\\\"motivo?.ID_LOGI_ENTR_MATE_MOTI == motivoSelecionado?.ID_LOGI_ENTR_MATE_MOTI && showDetailPanel\\\">\\r\\n              <td (click)=\\\"onDetails(motivo)\\\" [ngClass]=\\\"motivo.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n              {{motivo.ID_LOGI_ENTR_MATE_MOTI }}\\r\\n              </td>\\r\\n              <td (click)=\\\"onDetails(motivo)\\\">{{ motivo.DS_LOGI_ENTR_MATE_MOTI | uppercase}}</td>\\r\\n              <td (click)=\\\"onDetails(motivo)\\\" [hidden]=\\\"showDetailPanel\\\">{{ motivo.DS_LOGI_ENTR_MATE_CATE_MOTI }}</td>\\r\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"motivo.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(motivo)\\\">\\r\\n                    <i [ngClass]=\\\"motivo.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', motivo.ID_LOGI_ENTR_MATE_MOTI]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Histórico de alteração\\\">\\r\\n        <custom-table>\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n              <!-- <th scope=\\\"col\\\">Alteração</th> -->\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\r\\n              <td class=\\\"text-center\\\">{{ alteracao.DT_INCL | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <td>{{ alteracao.DS_USUA_CADA | uppercase }}</td>\\r\\n              <!-- <td>{{ alteracao.nomeUsuario | uppercase }}</td> -->\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaEntradaMateriaisMotivos } from '../models/motivos';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaEntradaMateriaisMotivosService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getMotivos(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/motivos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postMotivos(params: ILogisticaEntradaMateriaisMotivos) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/motivos`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Fichas de Não Conformidade\\\">\\r\\n  <button\\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postFichasConformidade()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-10 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Ficha de Não Conformidade</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-7 pl-0\\\">\\r\\n            <label for=\\\"tiposConformidade\\\">Tipo de Não Conformidade</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"tiposConformidade\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              dropdownPosition=\\\"bottom\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              [loading]=\\\"loadingTiposConformidade\\\"\\r\\n              labelForId=\\\"ID_LOGI_ENMA_FHNC_TIPO\\\"\\r\\n              bindLabel=\\\"NM_TIPO\\\"\\r\\n              bindValue=\\\"ID_LOGI_ENMA_FHNC_TIPO\\\"\\r\\n              id=\\\"ID_LOGI_ENMA_FHNC_TIPO\\\"\\r\\n              formControlName=\\\"ID_LOGI_ENMA_FHNC_TIPO\\\"\\r\\n              [ngClass]=\\\"onFieldError('ID_LOGI_ENMA_FHNC_TIPO') + ' ' + onFieldRequired('ID_LOGI_ENMA_FHNC_TIPO')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ID_LOGI_ENMA_FHNC_TIPO')\\\" message=\\\"Tipo de não conformidade é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-5 pl-0\\\"></div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-10 pt-2 mx-auto\\\">\\r\\n        <legend>Materiais</legend>\\r\\n        <div formArrayName=\\\"materiais\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\"></div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddMaterial()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\"  *ngFor=\\\"let item of formMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-3 pl-0\\\">\\r\\n                  <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\r\\n                    <label class=\\\"my-auto\\\" for=\\\"NR_NOTA_FISC\\\">Nota Fiscal</label>\\r\\n                    <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\" >\\r\\n                      <a\\r\\n                        class=\\\"text-primary\\\"\\r\\n                        href=\\\"javascript:void(0)\\\"\\r\\n                        (click)=\\\"openModal(selecionarNotaFiscal, i)\\\">\\r\\n                        <strong>Selecionar</strong>\\r\\n                      </a>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"NR_NOTA_FISC\\\"\\r\\n                    formControlName=\\\"NR_NOTA_FISC\\\"\\r\\n                    (change)=\\\"onCanAddMaterial(i)\\\"\\r\\n                    placeholder=\\\"Digite...\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('materiais', i, 'NR_NOTA_FISC') + ' ' + onNestedFieldRequired('materiais', i, 'NR_NOTA_FISC')\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n                  <label for=\\\"NM_CLAS\\\">Classe</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"NM_CLAS\\\"\\r\\n                    formControlName=\\\"NM_CLAS\\\"\\r\\n                    >\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n                  <label for=\\\"DS_LOTE\\\">Lote</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"DS_LOTE\\\"\\r\\n                    formControlName=\\\"DS_LOTE\\\"\\r\\n                    >\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n                  <label for=\\\"DS_UNID_MEDI\\\">Un. Medida</label>\\r\\n                  <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"DS_UNID_MEDI\\\"\\r\\n                  formControlName=\\\"DS_UNID_MEDI\\\"\\r\\n                  [ngClass]=\\\"onNestedFieldError('materiais', i, 'DS_UNID_MEDI') + ' ' + onNestedFieldRequired('materiais', i, 'DS_UNID_MEDI')\\\"\\r\\n                >\\r\\n                  <option >KG</option>\\r\\n                  <option >TON</option>\\r\\n                  <option >PC</option>\\r\\n                  <option >UN</option>\\r\\n                </select>\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteMaterial(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-7 pl-0\\\">\\r\\n                  <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\r\\n                    <label class=\\\"my-auto\\\" for=\\\"NM_MATE\\\">Material</label>\\r\\n                    <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\"  >\\r\\n                      <a\\r\\n                      *ngIf=\\\"onCanAddMaterial(i)\\\"\\r\\n                        class=\\\"text-primary\\\"\\r\\n                        href=\\\"javascript:void(0)\\\"\\r\\n                        (click)=\\\"openModal(selecionarMateriais, i)\\\">\\r\\n                        <strong>Selecionar</strong>\\r\\n                      </a>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"NM_MATE\\\"\\r\\n                    formControlName=\\\"NM_MATE\\\"\\r\\n                    placeholder=\\\"Digite...\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('materiais', i, 'NM_MATE') + ' ' + onNestedFieldRequired('materiais', i, 'NM_MATE')\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n                  <label for=\\\"TT_MATE_ORIG\\\">Quantidade Total</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"TT_MATE_ORIG\\\"\\r\\n                    formControlName=\\\"TT_MATE_ORIG\\\"\\r\\n                    currencyMask [options]=\\\"{ align: 'right', prefix: '' , thousands: '.', decimal: ',' , precision: 3 }\\\"\\r\\n\\r\\n                    [ngClass]=\\\"onNestedFieldError('materiais', i, 'TT_MATE_ORIG') + ' ' + onNestedFieldRequired('materiais', i, 'TT_MATE_ORIG')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n                  <label for=\\\"TT_MATE\\\">Quantidade NC</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"TT_MATE\\\"\\r\\n                    formControlName=\\\"TT_MATE\\\"\\r\\n                    currencyMask [options]=\\\"{ align: 'right', prefix: '' , thousands: '.', decimal: ',' , precision: 3 }\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('materiais', i, 'TT_MATE') + ' ' + onNestedFieldRequired('materiais', i, 'TT_MATE')\\\">\\r\\n                </div>\\r\\n                <invalid-form-control\\r\\n                [show]=\\\"comparaQuantidade(i)\\\"\\r\\n                message=\\\"Quantidade total está menor que a quantidade não conforme\\\">\\r\\n              </invalid-form-control>\\r\\n              </div>\\r\\n              <hr>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-10 pt-2 mx-auto\\\">\\r\\n        <legend>Descrição</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Descrição da NC:</label>\\r\\n            <textarea\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"DS_OBSE\\\"\\r\\n              formControlName=\\\"DS_OBSE\\\"\\r\\n              [ngClass]=\\\"onFieldError('DS_OBSE') + ' ' + onFieldRequired('DS_OBSE')\\\">\\r\\n            </textarea>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('DS_OBSE')\\\" message=\\\"Descrição é obrigatório com no mínimo {{numberDescricao}} caracteres.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <logistica-entrada-materiais-notas-fiscais-documentos\\r\\n      [fichaId] = \\\"fichaId\\\"\\r\\n      >\\r\\n      </logistica-entrada-materiais-notas-fiscais-documentos>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n  <ng-template #selecionarNotaFiscal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Pesquisa de Notas/Materiais</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\" *ngIf=\\\"loadingNotasFiscais\\\">\\r\\n          <span class=\\\"sr-only\\\">Loading...</span>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formNotasFiscais\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-3\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"IN_STAT\\\"\\r\\n              >\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n                <option value=\\\"\\\">Exhibir Todos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-3\\\">\\r\\n              <label for=\\\"cdItem\\\">BUSCAR POR</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"buscarPor\\\"\\r\\n              >\\r\\n                <option value=\\\"ID_MATE\\\">ID</option>\\r\\n                <option value=\\\"NR_NOTA_FISC\\\" selected>Nota Fiscal</option>\\r\\n                <option value=\\\"DS_LOTE\\\">Lote</option>\\r\\n                <option value=\\\"NM_MATE\\\">Material</option>\\r\\n                <option value=\\\"NM_FORN\\\">Fornecedor</option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-6\\\">\\r\\n              <label>TERMO DE PESQUISA</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"pesquisa\\\"\\r\\n                  >\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <span\\r\\n                      [tooltip]=\\\"formNotasFiscais.valid == false ? 'Digite um termo de pesquisa':''\\\"\\r\\n                      container=\\\"body\\\"\\r\\n                      placement =\\\"left\\\"\\r\\n                    >\\r\\n                      <button\\r\\n                      style=\\\"height: 25px;\\\"\\r\\n                        [disabled]=\\\"formNotasFiscais.valid == false\\\"\\r\\n                        class=\\\"input-group-text hover\\\"\\r\\n                        (click)=\\\"getNotasMateriais()\\\"\\r\\n                        >\\r\\n                        <i class=\\\"fas fa-search\\\"></i>\\r\\n                      </button>\\r\\n                    </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <custom-table *ngIf=\\\"!noNotasFiscais\\\" class=\\\"text-center\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th>ID NF</th>\\r\\n            <th>Nota Fiscal</th>\\r\\n            <th>Lote</th>\\r\\n            <th>Nome Material</th>\\r\\n            <th>Total de Material</th>\\r\\n            <th>Fornecedor</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let material of notasFiscais\\\">\\r\\n            <td>{{ material.ID_LOGI_ENMA_NOFI }}</td>\\r\\n            <td>{{ material.NR_NOTA_FISC }}</td>\\r\\n            <td *ngIf=\\\"material.DS_LOTE != null \\\">{{ material.DS_LOTE }}</td>\\r\\n            <td *ngIf=\\\"material.DS_LOTE == null\\\">NÃO INFORMADO</td>\\r\\n            <td>{{ material.NM_MATE }}</td>\\r\\n            <td>{{ material.TT_MATE_ORIG }} {{ material.DS_UNID_MEDI }}</td>\\r\\n            <td>{{ material.NM_FORN }} </td>\\r\\n            <td>\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Salvar Informações\\\"\\r\\n                container=\\\"body\\\"\\r\\n                (click)=\\\"setMaterial(material);modalRef.hide()\\\"\\r\\n              >\\r\\n                <i class=\\\"far fa-save\\\"></i>\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\" >\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template #selecionarMateriais>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Pesquisa de Materiais</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\" *ngIf=\\\"loadingAllMateriais\\\">\\r\\n          <span class=\\\"sr-only\\\">Loading...</span>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formAllMateriais\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-3\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"IN_STAT\\\"\\r\\n              >\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n                <option value=\\\"\\\">Exhibir Todos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-3\\\">\\r\\n              <label for=\\\"cdItem\\\">BUSCAR POR</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"buscarPor\\\"\\r\\n              >\\r\\n                <option value=\\\"ID_REFE_ERP\\\">ID ERP</option>\\r\\n                <option value=\\\"NM_MATE\\\" selected> Nome Material</option>\\r\\n                <option value=\\\"NM_CLAS\\\">Classe</option>\\r\\n                <option value=\\\"NM_LINH\\\">Linha</option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-6\\\">\\r\\n              <label>TERMO DE PESQUISA</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"pesquisa\\\"\\r\\n                  >\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <span\\r\\n                      [tooltip]=\\\"formAllMateriais.valid == false ? 'Digite um termo de pesquisa':''\\\"\\r\\n                      container=\\\"body\\\"\\r\\n                      placement =\\\"left\\\"\\r\\n                    >\\r\\n                      <button\\r\\n                      style=\\\"height: 25px;\\\"\\r\\n                        [disabled]=\\\"formAllMateriais.valid == false\\\"\\r\\n                        class=\\\"input-group-text hover\\\"\\r\\n                        (click)=\\\"getAllMateriais()\\\"\\r\\n                        >\\r\\n                        <i class=\\\"fas fa-search\\\"></i>\\r\\n                      </button>\\r\\n                    </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <custom-table *ngIf=\\\"!loadingAllMateriais && !noAllMateriais\\\" class=\\\"text-center\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th>ID ERP</th>\\r\\n            <th>Nome Material</th>\\r\\n            <th>Classe</th>\\r\\n            <th>Linha</th>\\r\\n            <th>Unidade de Medida</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let material of allMateriais | slice : begin : end; let i = index\\\">\\r\\n            <td>{{ material.ID_REFE_ERP }}</td>\\r\\n            <td>{{ material.NM_MATE }}</td>\\r\\n            <td>{{ material.NM_CLAS }}</td>\\r\\n            <td>{{ material.NM_LINH }}</td>\\r\\n            <td>{{ material.NM_APOI_UNID_MEDI }} </td>\\r\\n            <td>\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Salvar Material\\\"\\r\\n                container=\\\"body\\\"\\r\\n                (click)=\\\"setMaterial(material);modalRef.hide()\\\"\\r\\n              >\\r\\n                <i class=\\\"far fa-save\\\"></i>\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div *ngIf=\\\"totalItemsMaterial > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItemsMaterial ? totalItemsMaterial : currentPage*(itemsPerPage) }} de {{ totalItemsMaterial }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItemsMaterial\\\"\\r\\n          (pageChanged)=\\\"onPageChangedMaterial($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</app-body>\\r\\n\";","//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LogisticaEntradaMateriaisParecerService } from '../services/parecer.service';\r\n//interfaces\r\nimport { ILogisticaEntradaMateriaisParecer } from '../models/parecer';\r\nimport { isNull } from 'util';\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-parecer-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisParecerCadastroComponent\r\n  implements OnInit {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  //loading\r\n  disabledForm = false;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n\r\n  //Interfaces\r\n  parecerRecebimento: Array<ILogisticaEntradaMateriaisParecer> = [];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private localeService: BsLocaleService,\r\n    private parecerService: LogisticaEntradaMateriaisParecerService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id'))\r\n    return this.getParecer({ ID_LOGI_ENMA_FHNC_OCPR: _params['id'] }); \r\n  }\r\n\r\n\r\n  getParecer(params?: Partial<ILogisticaEntradaMateriaisParecer>) {\r\n    this.loading = true;\r\n    const _params = params ?? {};\r\n    this.parecerService\r\n      .getParecer(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.form.patchValue(response.body['data'][0]) \r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Parecer',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENMA_FHNC_OCPR: [null],\r\n      NM_PARE: [null, [Validators.required]],\r\n      IN_STAT: [isNull],\r\n      DS_OBSE: [null],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postParecer() {\r\n    this.loadingNavBar = true;\r\n    this.parecerService\r\n      .postParecer(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n  \r\n}\r\n","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmFkYS1tYXRlcmlhaXMvZmljaGEtY29uZm9ybWlkYWRlL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmFkYS1tYXRlcmlhaXMvZmljaGEtY29uZm9ybWlkYWRlL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uW2Rpc2FibGVkXXtcclxuICBjdXJzb3I6IG5vLWRyb3A7XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL3N0YXR1cy1yZWNlYmltZW50by9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyJ9 */\";","import { LogisticaEntradaMateriaisParecerCadastroComponent } from './parecer/cadastro/cadastro.component';\r\nimport { LogisticaEntradaMateriaisParecerListaComponent } from './parecer/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisFichasConformidadeOcorrenciasComponent } from './ficha-conformidade/ocorrencias/ocorrencias.component';\r\nimport { LogisticaEntradaMateriaisFichasConformidadeCadastroComponent } from './ficha-conformidade/cadastro/cadastro.component';\r\nimport { LogisticaEntradaMateriaisFichaConformidadeListaComponent } from './ficha-conformidade/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisTiposConformidadeCadastroComponent } from './tipos-conformidade/cadastro/cadastro.component';\r\nimport { LogisticaEntradaMateriaisTiposConformidadeListaComponent } from './tipos-conformidade/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisPainelAprovacaoListaComponent } from './painel-aprovacao/lista/lista.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\n\r\nimport { LogisticaEntradaMateriaisComponent } from './entrada-materiais.component';\r\nimport { LogisticaEntradaMateriaisNotasFiscaisCadastroComponent } from './notas-fiscais/cadastro/cadastro.component';\r\nimport { LogisticaEntradaMateriaisNotasFiscaisListaComponent } from './notas-fiscais/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisStatusRecebimentoListaComponent } from './status-recebimento/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisStatusRecebimentoCadastroComponent } from './status-recebimento/cadastro/cadastro.component';\r\nimport { LogisticaEntradaMateriaisMotivosListaComponent } from './motivos/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisMotivosCadastroComponent } from './motivos/cadastro/cadastro.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaEntradaMateriaisComponent,\r\n  },\r\n  {\r\n    path: 'notas-fiscais',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: LogisticaEntradaMateriaisNotasFiscaisListaComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: LogisticaEntradaMateriaisNotasFiscaisCadastroComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: LogisticaEntradaMateriaisNotasFiscaisCadastroComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'status-recebimento',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: LogisticaEntradaMateriaisStatusRecebimentoListaComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: LogisticaEntradaMateriaisStatusRecebimentoCadastroComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: LogisticaEntradaMateriaisStatusRecebimentoCadastroComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'parecer',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: LogisticaEntradaMateriaisParecerListaComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: LogisticaEntradaMateriaisParecerCadastroComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: LogisticaEntradaMateriaisParecerCadastroComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'motivos',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: LogisticaEntradaMateriaisMotivosListaComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: LogisticaEntradaMateriaisMotivosCadastroComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: LogisticaEntradaMateriaisMotivosCadastroComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'tipos-nao-conformidade',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: LogisticaEntradaMateriaisTiposConformidadeListaComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: LogisticaEntradaMateriaisTiposConformidadeCadastroComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: LogisticaEntradaMateriaisTiposConformidadeCadastroComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'fichas-nao-conformidade',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: LogisticaEntradaMateriaisFichaConformidadeListaComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: LogisticaEntradaMateriaisFichasConformidadeCadastroComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: LogisticaEntradaMateriaisFichasConformidadeCadastroComponent,\r\n      },\r\n      {\r\n        path: 'ocorrencias/novo',\r\n        component: LogisticaEntradaMateriaisFichasConformidadeOcorrenciasComponent,\r\n      },\r\n      {\r\n        path: 'ocorrencias/:id',\r\n        component: LogisticaEntradaMateriaisFichasConformidadeOcorrenciasComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'painel-aprovacao',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: LogisticaEntradaMateriaisPainelAprovacaoListaComponent,\r\n      },\r\n      {\r\n        path: 'lista',\r\n        component: LogisticaEntradaMateriaisPainelAprovacaoListaComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LogisticaEntradaMateriaisRoutingModule {}\r\n","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmFkYS1tYXRlcmlhaXMvdGlwb3MtY29uZm9ybWlkYWRlL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmFkYS1tYXRlcmlhaXMvdGlwb3MtY29uZm9ybWlkYWRlL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uW2Rpc2FibGVkXXtcclxuICBjdXJzb3I6IG5vLWRyb3A7XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL3N0YXR1cy1yZWNlYmltZW50by9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaEntradaMateriaisStatusRecebimento } from '../models/statusRecebimento';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaEntradaMateriaisStatusRecebimentoService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getStatusRecebimento(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/status`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getHistorico(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/status/historico`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postStatusRecebimento(notas: ILogisticaEntradaMateriaisStatusRecebimento) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/status`,\r\n      notas,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { RouterService } from './../../../../../shared/services/core/router.service';\r\nimport { ILogisticaEntradaMateriaisNotasFiscais } from './../../notas-fiscais/models/notasFiscais';\r\nimport { LogisticaEntradaMateriaisNotasFiscaisService } from './../../notas-fiscais/services/notas-fiscais.service';\r\nimport { LogisticaEntradaMateriaisService } from './../../services/entrada-materiais.service';\r\nimport { LogisticaEntradaMateriaisTiposConformidadeService } from './../../tipos-conformidade/services/tipos-conformidade.service';\r\nimport { ILogisticaEntradaMateriaisTiposConformidade } from './../../tipos-conformidade/models/tiposConformidade';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { FormArray, MinLengthValidator } from '@angular/forms';\r\n//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService, PageChangedEvent } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription, forkJoin } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LogisticaEntradaMateriaisFichaConformidadeService } from '../services/ficha-conformidade.service';\r\n//interfaces\r\nimport { ILogisticaEntradaMateriaisFichaConformidade } from '../models/fichaConformidade';\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-notas-fiscais-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisFichasConformidadeCadastroComponent\r\n  implements OnInit, OnDestroy {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  noMateriais: boolean;\r\n  allMateriais: Array<FormData> = [];\r\n  noNotasFiscais = true;\r\n  noAllMateriais = true;\r\n  validateNF = '';\r\n  index: number;\r\n  numberDescricao= 10;\r\n  //loading\r\n  disabledForm = false;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n  loadingNotasFiscais: boolean;\r\n  loadingAllMateriais: boolean;\r\n  loadingTiposConformidade: boolean;\r\n  formNotasFiscais: FormGroup;\r\n  formAllMateriais: FormGroup;\r\n  fichaId: number =1;\r\n  //Interfaces\r\n  fichasConformidade: Array<ILogisticaEntradaMateriaisFichaConformidade> = [];\r\n  tiposConformidade: Array<ILogisticaEntradaMateriaisTiposConformidade> = [];\r\n  notasFiscais: Array<ILogisticaEntradaMateriaisNotasFiscais> = [];\r\n  totalItens: any = [];\r\n   /* Pagination */\r\n   itemsPerPage = 10;\r\n   totalItems = 10;\r\n   totalItemsMaterial = 10;\r\n   currentPage = 1;\r\n   begin = 0;\r\n   end = 10;\r\n   /* Pagination */\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private routerService: RouterService,\r\n    private router: Router,\r\n    private localeService: BsLocaleService,\r\n    private entradaMateriaisService :LogisticaEntradaMateriaisService,\r\n    private fichasConformidadeService: LogisticaEntradaMateriaisFichaConformidadeService,\r\n    private notasFiscaisService: LogisticaEntradaMateriaisNotasFiscaisService,\r\n    private tiposConformidadeService:LogisticaEntradaMateriaisTiposConformidadeService,\r\n    private titleService: TitleService,\r\n    private modalService: BsModalService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.setFormBuilder();\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.getTiposConformidade();\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.modalRef != undefined){\r\n      this.modalRef.hide();\r\n    }\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n  \r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id')){\r\n      this.getFichasConformidade({ ID_LOGI_ENMA_FHNC: _params['id'] });\r\n      this.getFormMaterial({ ID_LOGI_ENMA_FHNC: _params['id'] , IN_STAT:'1' })\r\n      this.form.get('ID_LOGI_ENMA_FHNC').setValue(_params['id'])\r\n      return;\r\n    } \r\n    \r\n    const queryParams = this.activatedRoute.snapshot.queryParams;\r\n    const _response = queryParams ? this.routerService.getBase64UrlParams(queryParams) : {};\r\n    if(!_response.hasOwnProperty('ID_LOGI_ENMA_NOFI')){\r\n      this.onAddMaterial();\r\n      return;\r\n    }\r\n    this.getNotasFiscaisMateriais(_response)\r\n  }\r\n\r\n\r\n  getFichasConformidade(params?: Partial<ILogisticaEntradaMateriaisFichaConformidade>) {\r\n    this.loading = true;\r\n    const _params = params ?? {};\r\n    this.fichasConformidadeService\r\n      .getFichasConformidade(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            const ficha_ = response.body['data'][0];\r\n            this.fichasConformidade = response.body['data'];\r\n            this.noResult = false;\r\n            this.form.patchValue(ficha_) \r\n          } else {\r\n            this.noResult = true;\r\n            this.fichasConformidade = [];\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        });\r\n  }\r\n\r\n  getTiposConformidade(params?) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = '1';\r\n\r\n  this.loadingTiposConformidade = true;\r\n  this.tiposConformidadeService\r\n    .getTiposConformidade(_params)\r\n    .pipe(\r\n      finalize(() => {\r\n        this.loadingTiposConformidade = false;\r\n      })\r\n    )\r\n    .subscribe((response) => {\r\n      if (response.status === 200) {\r\n        this.tiposConformidade = response.body['data'];\r\n      }else {\r\n        this.tiposConformidade = [];\r\n      }\r\n    },\r\n    (error) => {\r\n      this.pnotify.error('Não foi encontrado nenhum status de recebimento');\r\n    }\r\n  );\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Fichas de Não Conformidade',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENMA_FHNC: [null],\r\n      MATR_USUA_CADA: [null],\r\n      DS_USUA_CADA: [null],\r\n      DT_INCL: [null],\r\n      DS_OBSE: [null, [Validators.required,Validators.minLength(this.numberDescricao),]],\r\n      ID_LOGI_ENMA_FHNC_TIPO: [null, [Validators.required]],\r\n      materiais: this.formBuilder.array([]),\r\n    });\r\n    this.formNotasFiscais = this.formBuilder.group({\r\n      buscarPor: ['NR_NOTA_FISC'],\r\n      pesquisa: [null, Validators.required],\r\n      ID_MATE: [null],\r\n      NR_NOTA_FISC: [null],\r\n      NM_MATE: [null],\r\n      DS_LOTE: [null],\r\n      PAGI: [1],\r\n      TT_MATE_ORIG: [null],\r\n      NM_FORN: [null],\r\n      NM_EMPR: [null],\r\n      DS_UNID_MEDI: [null],\r\n      IN_STAT: ['1'],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n    });\r\n    this.formAllMateriais = this.formBuilder.group({\r\n      buscarPor: ['NM_MATE'],\r\n      pesquisa: [null, Validators.required],\r\n      ID_REFE_ERP:[null],\r\n      NM_MATE:[null],\r\n      NM_CLAS:[null],\r\n      NM_LINH:[null],\r\n      IN_STAT: ['1'],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postFichasConformidade() {\r\n    this.loadingNavBar = true;\r\n    let params = JSON.parse(JSON.stringify(this.form.value)) ;\r\n    delete params['materiais'];\r\n    this.fichasConformidadeService\r\n      .postFichasConformidade(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success('Ficha de não conformidade cadastrada com sucesso!');\r\n            const id = response.body['data'];\r\n            this.form.get('ID_LOGI_ENMA_FHNC').setValue(id);\r\n            this.postMateriais(id);\r\n            this.fichaId = id;\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllMateriais(params) {\r\n    const _params = params ?? {};\r\n    _params. IN_STAT =this.formAllMateriais.value['IN_STAT'];\r\n    _params. TT_REGI_PAGI = 15;\r\n    const _obj = this.formAllMateriais.value;\r\n    this.loadingAllMateriais = true;\r\n    if (_obj['pesquisa']) _params[_obj['buscarPor']] = _obj['pesquisa'];\r\n    this.entradaMateriaisService\r\n      .getAllMateriais(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingAllMateriais = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.allMateriais = response.body['result'];\r\n            this.totalItemsMaterial = response.body['result'].length;\r\n            this.noAllMateriais = false;\r\n          } else {\r\n            this.pnotify.notice('Nenhum registro encontrado!');\r\n            this.allMateriais = [];\r\n            this.noAllMateriais = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.notasFiscais = [];\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n\r\n \r\n  getNotasMateriais(params?) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT =this.formNotasFiscais.value['IN_STAT'];\r\n    _params.TT_REGI_PAGI = 10;\r\n    _params.PAGI =this.formNotasFiscais.value['PAGI'];\r\n    const _obj = this.formNotasFiscais.value;\r\n    this.loadingNotasFiscais = true;\r\n    this.noNotasFiscais =this.notasFiscais.length === 0 ? true : false;\r\n    if (_obj['pesquisa']) _params[_obj['buscarPor']] = _obj['pesquisa'];\r\n    this.notasFiscaisService\r\n      .getNotasMateriais(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNotasFiscais = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.notasFiscais = response['body']['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noNotasFiscais = false;\r\n          } else {\r\n            this.pnotify.notice('Nenhum registro encontrado!');\r\n            this.notasFiscais = [];\r\n            this.noNotasFiscais = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.notasFiscais = [];\r\n        }\r\n      );\r\n  }\r\n  \r\n  openModal(template: TemplateRef<any>, index) {\r\n    this.index = index;\r\n    this.noNotasFiscais = true;\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-xl',\r\n    });\r\n  }\r\n  hideModal() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  get formMateriais() {\r\n    return this.form.get('materiais') as FormArray;\r\n  }\r\n  \r\n  setMaterial(material) {\r\n    const _material = {...material,'IN_MATE': false}\r\n    const fg = this.form.get('materiais') as FormArray;\r\n    fg.controls[this.index].patchValue(_material);\r\n    fg.controls[this.index].get('TT_MATE').patchValue(undefined);\r\n    fg.controls[this.index].get('TT_MATE_ORIG').patchValue(_material.TT_MATE);\r\n    fg.controls[this.index].get('UUID_MATE').patchValue(_material.ID);\r\n    fg.controls[this.index].get('ID_MATE').patchValue(_material.ID_MATE);\r\n  }\r\n\r\n  async postMateriais(id:number){\r\n    let request = [];\r\n    const materiais = this.formMateriais.getRawValue();\r\n    if (!materiais){\r\n      return\r\n    }\r\n    const promise = () => {\r\n      materiais.forEach(material => {\r\n        const params = {...material,'ID_LOGI_ENMA_FHNC':id}\r\n        request.push(this.fichasConformidadeService\r\n          .postMateriais(params)\r\n      )});\r\n    }\r\n    await Promise.resolve(promise());\r\n    forkJoin(request)\r\n    .pipe(\r\n      finalize(() => {\r\n        this.loading = false;\r\n        this.loadingNavBar = false;\r\n      })\r\n    )\r\n    .subscribe(\r\n      (responses: Array<any>) => {\r\n        responses.forEach(response => {\r\n          if(response.status === 200 ){\r\n            this.pnotify.success('Material, salvo com sucesso!');\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else{\r\n            this.pnotify.error();\r\n          }\r\n        });\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  getFormMaterial(params?) {\r\n    this.loading = true;\r\n    this.fichasConformidadeService\r\n      .getFormMaterial(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe(async (response) => {\r\n        if (response.status !== 200) {\r\n          this.noMateriais= true;\r\n          return;\r\n        }\r\n        const materiais = response['body']['data'];\r\n        const promise = () => materiais.forEach(() => this.onAddMaterial());\r\n        await Promise.resolve(promise());\r\n        this.form.get('materiais').patchValue(materiais)\r\n        this.noMateriais =false;\r\n         \r\n      },\r\n      (error) => {\r\n        this.pnotify.error('Não foi encontrado nenhum material');\r\n        this.noMateriais = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  getNotasFiscaisMateriais(params?) {\r\n    this.loading = true;\r\n    this.fichasConformidadeService\r\n      .getNotasFiscaisMateriais(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe(async (response) => {\r\n        if (response.status !== 200) {\r\n          this.noMateriais= true;\r\n          return;\r\n        }\r\n        let materiais = response['body']['data'];\r\n        const promise = () => materiais.forEach((material, index) => {\r\n          this.onAddMaterial()\r\n          materiais[index]['TT_MATE_ORIG'] = materiais[index]['TT_MATE'];\r\n          materiais[index]['TT_MATE'] = null;\r\n        });\r\n        await Promise.resolve(promise());\r\n        this.form.get('materiais').patchValue(materiais)\r\n        this.noMateriais =false;\r\n         \r\n      },\r\n      (error) => {\r\n        this.pnotify.error('Não foi encontrado nenhum material');\r\n        this.noMateriais = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n  onAddMaterial() {\r\n    this.formMateriais.push(\r\n      this.formBuilder.group({\r\n        ID_LOGI_ENMA_FHNC_MATE: [null],\r\n        ID_LOGI_ENMA_NOFI_MATE: [null],\r\n        UUID_MATE:[null],\r\n        ID_MATE:[null],\r\n        IN_MATE:[true],\r\n        NR_NOTA_FISC: [{value: null, disabled: true}],\r\n        NM_CLAS : [{value: null, disabled: true}],\r\n        DS_UNID_MEDI: ['TON', [Validators.required]],\r\n        TT_MATE_ORIG: [null, [Validators.required, Validators.min(0.01)]],\r\n        TT_MATE: [null, [Validators.required, Validators.min(0.01)]],\r\n        DS_LOTE: [null],\r\n        NM_MATE: [{value: null, disabled: true}, Validators.required]\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  onCanAddMaterial(index:number):boolean{\r\n    const fg = this.form.get('materiais') as FormArray;\r\n    if (fg.controls[index].get('NR_NOTA_FISC').value) {\r\n        this.formMateriais.controls[index].get(['DS_LOTE']).disable()\r\n        this.formMateriais.controls[index].get(['DS_UNID_MEDI']).disable()\r\n        this.formMateriais.controls[index].get(['TT_MATE_ORIG']).disable()\r\n      return false;\r\n    }\r\n    return fg.controls[index].get('IN_MATE').value;\r\n  }\r\n\r\n  onDeleteMaterial(index: number) {\r\n    if (this.formMateriais.length === 1) {\r\n      this.pnotify.notice('Informe ao menos um material.');\r\n      return\r\n    }\r\n    let materiais = this.formMateriais.at(index).value;\r\n    materiais = {...materiais,'IN_STAT':'0'}\r\n    if(!materiais['ID_LOGI_ENMA_FHNC_MATE']){\r\n      this.formMateriais.removeAt(index);\r\n      return;\r\n    }\r\n    this.loadingNavBar= true;\r\n    this.fichasConformidadeService\r\n      .postMateriais(materiais)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loadingNavBar= false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response) => {\r\n            if (response.status === 200) {\r\n              this.formMateriais.removeAt(index);\r\n              this.pnotify.success();\r\n            } else {\r\n              this.pnotify.error();\r\n            }\r\n          },\r\n          (error) => {\r\n            this.pnotify.error();\r\n          }\r\n        );\r\n}\r\n\r\n  onNestedFieldError(formGroup: string, index: number, field: string) {\r\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n    field = nestedForm.controls[index].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n\r\n    if (nestedForm.controls[index].get(field).validator) {\r\n      let validationResult = nestedForm.controls[index]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n  \r\n  onPageChanged(event) {\r\n    this.formNotasFiscais.get('PAGI').setValue(event.page);\r\n    this.getNotasMateriais();\r\n  }\r\n  onPageChangedMaterial(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n\r\n  comparaQuantidade(index):boolean {\r\n    const _qtTotal = this.formMateriais.controls[index].get(['TT_MATE_ORIG']).value\r\n    const _qtNC = this.formMateriais.controls[index].get(['TT_MATE']).value\r\n    if(!_qtTotal || !_qtNC){\r\n      return false;\r\n    }\r\n    if(parseFloat(_qtTotal) < parseFloat(_qtNC)){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaEntradaMateriaisTiposConformidade } from '../models/tiposConformidade';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaEntradaMateriaisTiposConformidadeService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getTiposConformidade(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/tipo`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postTiposConformidade(params: ILogisticaEntradaMateriaisTiposConformidade) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/tipo`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postResponsaveis(params: ILogisticaEntradaMateriaisTiposConformidade) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/tipo/responsaveis`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getUsuarios(params?) {\r\n    return this.http.get(\r\n      `${this.API}/core/mtcorp/usuarios`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n  getResponsaveis(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/tipo/responsaveis`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'consulta-recebimento-bobinas',\r\n  templateUrl: './consulta-recebimento-bobinas.component.html',\r\n  styleUrls: ['./consulta-recebimento-bobinas.component.scss']\r\n})\r\nexport class SulFluminenseConsultaRecebimentoBobinasComponent implements OnInit {\r\n\r\n  idSubModulo: any;\r\n\r\n  breadCrumbTree: any;\r\n\r\n  private URL_MTCORP = environment.URL_MTCORP;\r\n\r\n  loading: boolean = false;\r\n\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  matricula: any = btoa(this.currentUser['info']['matricula']);\r\n  idUsuario: any = btoa(this.currentUser['info']['id']);\r\n\r\n  url: string;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.url = `${this.URL_MTCORP}/MTCorp/app/modulos/abastecimento/consultaMateriaisRecebimento.php?m=${this.matricula}&u=${this.idUsuario}`;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onBreadCumbTree();\r\n  }\r\n\r\n  onBreadCumbTree(){\r\n    this.activatedRoute.params.subscribe((params: any) =>{\r\n      this.idSubModulo = params['idSubModulo'];\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/sul-fluminense/home'\r\n        },\r\n        {\r\n          descricao: 'Entrada de materiais',\r\n          routerLink: `/sul-fluminense/entrada-materiais/${this.idSubModulo}`\r\n        },\r\n        {\r\n          descricao: 'Consulta de recebimento de bobinas'\r\n        }\r\n      ];\r\n    })\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3VsLWZsdW1pbmVuc2UvZW50cmFkYS1tYXRlcmlhaXMvY29uc3VsdGEtcmVjZWJpbWVudG8tYm9iaW5hcy9jb25zdWx0YS1yZWNlYmltZW50by1ib2JpbmFzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"MOTIVOS\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postMotivos()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Motivo</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\r\\n            <label for=\\\"DS_LOGI_ENTR_MATE_MOTI\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"DS_LOGI_ENTR_MATE_MOTI\\\"\\r\\n              formControlName=\\\"DS_LOGI_ENTR_MATE_MOTI\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('DS_LOGI_ENTR_MATE_MOTI') + ' ' + onFieldRequired('DS_LOGI_ENTR_MATE_MOTI')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('DS_LOGI_ENTR_MATE_MOTI')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3 pl-0\\\">\\r\\n            <label for=\\\"DS_LOGI_ENTR_MATE_CATE_MOTI\\\">Categoria</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"DS_LOGI_ENTR_MATE_CATE_MOTI\\\"\\r\\n              formControlName=\\\"DS_LOGI_ENTR_MATE_CATE_MOTI\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('DS_LOGI_ENTR_MATE_CATE_MOTI')\\\">\\r\\n              <option value=\\\"aprovacao\\\">Aprovação</option>\\r\\n              <option value=\\\"solicitacao\\\">Solicitação</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('DS_LOGI_ENTR_MATE_CATE_MOTI')\\\" message=\\\"Categoria é obrigatório.\\\"></invalid-form-control>\\r\\n          </div> \\r\\n          <div class=\\\"form-group col-md-3 pl-0\\\">\\r\\n            <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"IN_STAT\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('IN_STAT')\\\">\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n              <option value=\\\"2\\\">Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('IN_STAT')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div> \\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Observação</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Tipos de Não Conformidade\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onExport()\\\"\\r\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"ID_LOGI_ENMA_FHNC_TIPO\\\">ID</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"ID_LOGI_ENMA_FHNC_TIPO\\\"\\r\\n                formControlName=\\\"ID_LOGI_ENMA_FHNC_TIPO\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n              <label for=\\\"NM_TIPO\\\">Tipo de Não Conformidade</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"NM_TIPO\\\"\\r\\n                formControlName=\\\"NM_TIPO\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1 pl-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('ID_LOGI_ENMA_FHNC_TIPO')\\\">\\r\\n                <thead-sorter value=\\\"ID\\\" [active]=\\\"ORDE_BY == 'ID_LOGI_ENMA_FHNC_TIPO'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('NM_TIPO')\\\">\\r\\n                <thead-sorter value=\\\"Tipo de não conformidade\\\" [active]=\\\"ORDE_BY == 'NM_TIPO'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let tipo of tiposConformidade\\\"  [class.table-active]=\\\"tipo?.ID_LOGI_ENMA_FHNC_TIPO == motivoSelecionado?.ID_LOGI_ENMA_FHNC_TIPO && showDetailPanel\\\">\\r\\n              <td [ngClass]=\\\"tipo.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n              {{tipo.ID_LOGI_ENMA_FHNC_TIPO }}\\r\\n              </td>\\r\\n              <td>{{ tipo.NM_TIPO | uppercase}}</td>\\r\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"tipo.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(tipo)\\\">\\r\\n                    <i [ngClass]=\\\"tipo.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', tipo.ID_LOGI_ENMA_FHNC_TIPO]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(tipo)\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Detalhes\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label>Tipo de não conformidade</label>\\r\\n            <div *ngIf=\\\"tipoSelecionado?.NM_TIPO == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"tipoSelecionado?.NM_TIPO != null\\\">{{ tipoSelecionado.NM_TIPO | uppercase}}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label>Observação:</label>\\r\\n            <div *ngIf=\\\"tipoSelecionado?.DS_OBSE == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"tipoSelecionado?.DS_OBSE != null\\\">{{ tipoSelecionado?.DS_OBSE }}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <div [hidden]=\\\"!loadingResponsaveis\\\" class=\\\"text-muted\\\">\\r\\n          <p><strong>Buscando os Responsáveis...</strong></p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!loadingResponsaveis && noResponsaveis\\\" class=\\\"text-muted\\\">\\r\\n          <p><strong>Nenhum Responsável vinculado!</strong></p>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"!loadingResponsaveis && !noResponsaveis\\\">\\r\\n          <label>Responsáveis</label>\\r\\n          <custom-table class=\\\"text-center\\\" >\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th>Matricula</th>\\r\\n                <th>Nome</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let item of responsaveis\\\">\\r\\n                <td>{{item.NR_MATR_RESP}}</td>\\r\\n                <td>{{item.NM_RESP}}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label>Usuário Responsável Pelo Cadastro</label>\\r\\n            <div *ngIf=\\\"tipoSelecionado?.NR_MATR == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"tipoSelecionado?.NR_MATR != null\\\">{{tipoSelecionado?.NR_MATR}} - {{ tipoSelecionado?.NM_USUA }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label>Data do Cadastro</label>\\r\\n            <div *ngIf=\\\"tipoSelecionado?.DT_INCL == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"tipoSelecionado?.DT_INCL != null\\\">{{ tipoSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm'}}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3VsLWZsdW1pbmVuc2UvZW50cmFkYS1tYXRlcmlhaXMvcGFpbmVsLWJvYmluYXMtcXVhbGlkYWRlL3BhaW5lbC1ib2JpbmFzLXF1YWxpZGFkZS5jb21wb25lbnQuc2NzcyJ9 */\";","//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LogisticaEntradaMateriaisMotivosService } from '../services/motivos.service';\r\n//interfaces\r\nimport { ILogisticaEntradaMateriaisMotivos } from '../models/motivos';\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-notas-fiscais-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisMotivosCadastroComponent\r\n  implements OnInit {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  //loading\r\n  disabledForm = false;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n\r\n  //Interfaces\r\n  motivos: Array<ILogisticaEntradaMateriaisMotivos> = [];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private motivosService: LogisticaEntradaMateriaisMotivosService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id'))\r\n    return this.getMotivos({ ID_LOGI_ENTR_MATE_MOTI: _params['id'] }); \r\n  }\r\n\r\n\r\n  getMotivos(params?: Partial<ILogisticaEntradaMateriaisMotivos>) {\r\n    this.loading = true;\r\n    const _params = params ?? {};\r\n    this.motivosService\r\n      .getMotivos(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.motivos = response.body['data'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.motivos = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Motivos',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENTR_MATE_MOTI: [null],\r\n      DS_LOGI_ENTR_MATE_MOTI : [null, [Validators.required]],\r\n      DS_LOGI_ENTR_MATE_CATE_MOTI:[null, [Validators.required]],\r\n      IN_STAT: ['1', [Validators.required]], \r\n      DS_OBSE: [null],\r\n      MATR_USUA_CADA: [null],\r\n      DS_USUA_CADA: [null],\r\n      DT_INCL: [null],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postMotivos() {\r\n    this.loadingNavBar = true;\r\n    this.motivosService\r\n      .postMotivos(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success();\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n  \r\n}\r\n","import { LogisticaEntradaMateriaisFichaConformidadeService } from './../services/ficha-conformidade.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ILogisticaEntradaMateriaisDocumentos } from './../models/documentos';\r\nimport { LogisticaEntradaMateriaisParecerService } from './../../parecer/services/parecer.service';\r\nimport { ILogisticaEntradaMateriaisOcorrencias } from './../models/ocorrencias';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination/ngx-bootstrap-pagination';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { FormArray } from '@angular/forms';\r\n//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, TemplateRef, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription, forkJoin, EMPTY } from 'rxjs';\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { truncateWithEllipsis } from '@amcharts/amcharts4/.internal/core/utils/Utils';\r\n//interfaces\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-ficha-conformidade-ocorrencias',\r\n  templateUrl: './ocorrencias.component.html',\r\n  styleUrls: ['./ocorrencias.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisFichasConformidadeOcorrenciasComponent\r\n  implements OnInit, OnDestroy {\r\n    @Input() set fichaId(id: number){\r\n      if(!id)\r\n        return\r\n      this.setFormBuilder()\r\n      this.form.get('ID_LOGI_ENMA_FHNC').setValue(id);\r\n    };\r\n    @Output() fecharModal = new EventEmitter();\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  index:number;\r\n  usuarios: Array<FormData> = [];\r\n  noUsuarios = true;\r\n  formUsuarios: FormGroup;\r\n  parecer = [];\r\n  noResponsavel: Array<FormData> = [];\r\n  disabledForm = false;\r\n  //loading\r\n  loadingParecer: boolean;\r\n  loadingUsuarios: boolean;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 10;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  begin = 0;\r\n  end = 10;\r\n  /* Pagination */\r\n\r\n  //Interfaces\r\n  documentos: Partial<ILogisticaEntradaMateriaisDocumentos>[] = [];\r\n  ocorrencias: Array<ILogisticaEntradaMateriaisOcorrencias> = [];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private modalService: BsModalService,\r\n    private localeService: BsLocaleService,\r\n    private parecerService: LogisticaEntradaMateriaisParecerService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private fichasConformidadeService: LogisticaEntradaMateriaisFichaConformidadeService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setFormBuilder();\r\n    this.getParecer();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n\r\n  ngOnDestroy(){\r\n    if(this.modalRef != undefined){\r\n      this.modalRef.hide();\r\n    }\r\n  }\r\n\r\n  // getOcorrencias(params?: Partial<ILogisticaEntradaMateriaisOcorrencias>) {\r\n  //   this.loading = true;\r\n  //   const _params = params ?? {};\r\n  //   this.fichasConformidadeService\r\n  //     .getOcorrencias(_params)\r\n  //     .pipe(\r\n  //       finalize(() => {\r\n  //         this.loading = false;\r\n  //         this.loadingNavBar = false;\r\n  //       })\r\n  //     )\r\n  //     .subscribe(\r\n  //       (response) => {\r\n  //         if (response.status !== 200) {\r\n  //           this.noResult = true;\r\n  //           this.ocorrencias = [];\r\n  //           return;\r\n  //         }\r\n  //         const _ocorrencia = response.body['data'][0];\r\n  //         this.form.patchValue(_ocorrencia) \r\n  //         this.noResult = false;\r\n  //       },\r\n  //       (error) => {\r\n  //         this.pnotify.error();\r\n  //         this.noResult = true;\r\n  //       }\r\n  //     );\r\n  // }\r\n\r\n  getResponsaveis(params?) {\r\n    this.loadingNavBar = true;\r\n    this.fichasConformidadeService\r\n      .getResponsaveis(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(async (response) => {\r\n        if (response.status !== 200) {\r\n          return;\r\n        }\r\n        const responsaveis = response['body']['data'];\r\n        const promise = () => responsaveis.forEach(() => this.onAddResponsavel());\r\n        await Promise.resolve(promise());\r\n        this.form.get('responsaveis').patchValue(responsaveis)\r\n         \r\n      },\r\n      (error) => {\r\n        this.pnotify.error('Não foi encontrado nenhum material');\r\n      }\r\n    );\r\n  }\r\n\r\n  getParecer() {\r\n    this.loadingParecer = true;\r\n    this.parecerService\r\n      .getParecer({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingParecer = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.parecer = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      });\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n    if(this.form == undefined){\r\n      this.form = this.formBuilder.group({\r\n        ID_LOGI_ENMA_FHNC: [null],\r\n        ID_LOGI_ENMA_FHNC_OCPR : [null, [Validators.required]],\r\n        ID_LOGI_ENMA_FHNC_OCOR: [null],\r\n        IN_STAT: ['1', [Validators.required]], \r\n        IN_CONC: [false],\r\n        DS_OBSE: [null, [Validators.required]],\r\n        NR_MATR: [null],\r\n        NM_USUA: [null],\r\n        DT_INCL: [null],\r\n        responsaveis: this.formBuilder.array([]),\r\n      });\r\n    }\r\n    if(this.formUsuarios == undefined){\r\n      this.formUsuarios = this.formBuilder.group({\r\n        buscarPor: ['nome'],\r\n        pesquisa: [null, Validators.required],\r\n        matricula:[null],\r\n        nome:[null],\r\n      });\r\n    }\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  // onCanResponsavel():boolean{\r\n  //   const id = this.form.get('ID_LOGI_ENMA_FHNC_OCPR').value;\r\n  //   const parecer = this.parecer.filter((el) => el.ID_LOGI_ENMA_FHNC_OCPR == id); \r\n  //   if(id == null){\r\n  //     return false;\r\n  //   }\r\n  //   if(parecer.length > 1){\r\n  //     return false;\r\n  //   }\r\n  //   if(parecer[0]['IN_CONC'] == 1){\r\n  //     return true;\r\n  //   }\r\n  //   return false\r\n  // }\r\n\r\n  getUsuarios(params) {\r\n    const _params = params ?? {};\r\n    _params. situacao = '1';\r\n    _params. qtItensPagina = 100;\r\n    const _obj = this.formUsuarios.value;\r\n    this.loadingUsuarios = true;\r\n    if (_obj['pesquisa']) _params[_obj['buscarPor']] = _obj['pesquisa'];\r\n    this.fichasConformidadeService\r\n      .getUsuarios(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingUsuarios = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.usuarios = response.body['usuarios'];\r\n            this.totalItems = response.body['usuarios'].length;\r\n            this.noUsuarios = false;\r\n          } else {\r\n            this.pnotify.notice('Nenhum registro encontrado!');\r\n            this.usuarios = [];\r\n            this.noUsuarios = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.usuarios = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  setUsuarios(usuario) {\r\n    const fg = this.form.get('responsaveis') as FormArray;\r\n    fg.controls[this.index].get('ID_LOGI_ENMA_FHNC_OCOR').patchValue(usuario.matricula);\r\n    fg.controls[this.index].get('NR_MATR_RESP').patchValue(usuario.matricula);\r\n    fg.controls[this.index].get('ID_RESP').patchValue(usuario.id);\r\n    fg.controls[this.index].get('NM_RESP').patchValue(usuario.nome);\r\n  }\r\n\r\n  async postResponsaveis(id:number){\r\n    let request = [];\r\n    const responsaveis = this.formResponsaveis.getRawValue();\r\n    if (!responsaveis){\r\n      return\r\n    }\r\n    const promise = () => {\r\n      responsaveis.forEach(responsavel => {\r\n        const params = {...responsavel,'ID_LOGI_ENMA_FHNC_OCOR':id}\r\n        request.push(this.fichasConformidadeService\r\n          .postResponsaveis(params)\r\n      )});\r\n    }\r\n    await Promise.resolve(promise());\r\n    forkJoin(request)\r\n    .pipe(\r\n      finalize(() => {\r\n        this.loading = false;\r\n        this.loadingNavBar = false;\r\n      })\r\n    )\r\n    .subscribe(\r\n      (responses: Array<any>) => {\r\n        this.pnotify.success('Responsáveis cadastrados com sucesso');\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      }\r\n    )\r\n  }\r\n  onDeleteResponsavel(index: number) {\r\n    if (this.formResponsaveis.length === 1) {\r\n      this.pnotify.notice('Informe ao menos um responsável.');\r\n      return\r\n    }\r\n    const id = this.form.get('ID_LOGI_ENMA_FHNC')\r\n    let responsaveis = this.formResponsaveis.at(index).value;\r\n    responsaveis = {...responsaveis,'IN_STAT':'0'}\r\n    if(!responsaveis['ID_RESP']){\r\n      this.formResponsaveis.removeAt(index);\r\n      return;\r\n    }\r\n    this.loadingNavBar= true;\r\n    this.fichasConformidadeService\r\n      .postResponsaveis(responsaveis)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loadingNavBar= false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response) => {\r\n            if (response.status === 200) {\r\n              this.formResponsaveis.removeAt(index);\r\n              this.pnotify.success();\r\n            } else {\r\n              this.pnotify.error();\r\n            }\r\n          },\r\n          (error) => {\r\n            this.pnotify.error();\r\n          }\r\n        );\r\n  }\r\n\r\n  // disabedSave():boolean {\r\n  //   if(this.onCanResponsavel()){\r\n  //     return false\r\n  //   }\r\n  //   const responsaveis = this.form.get('responsaveis').value;\r\n  //   if(responsaveis.length == 0){\r\n  //     return true\r\n  //   }\r\n  //   if(!responsaveis[0]['ID_RESP']){\r\n  //     return true\r\n  //   }\r\n  //   return false\r\n  // }\r\n\r\n  postOcorrencias() {\r\n    this.loadingNavBar = true;\r\n    let params = JSON.parse(JSON.stringify(this.form.value));\r\n    delete params['responsaveis'];\r\n    this.fichasConformidadeService\r\n      .postOcorrencias(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            const idOcorrencia = response.body['data'];\r\n            this.form.get('ID_LOGI_ENMA_FHNC_OCOR').setValue(idOcorrencia);\r\n            this.postResponsaveis(idOcorrencia);\r\n            this.postDocumentosOcorrencia(idOcorrencia);\r\n            this.fecharModal.emit(true)\r\n            this.pnotify.success();\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  get formResponsaveis() {\r\n    return this.form.get('responsaveis') as FormArray;\r\n  }\r\n\r\n  onAddResponsavel() {\r\n    this.formResponsaveis.push(\r\n      this.formBuilder.group({\r\n        ID_LOGI_ENMA_FHNC_OCOR: [null],\r\n        ID_LOGI_ENMA_FHNC: [null],\r\n        ID_RESP: [null],\r\n        NR_MATR_RESP: [{value: null , disabled: true}, [Validators.required]],\r\n        NM_RESP: [{value: null , disabled: true}, [Validators.required]],\r\n      })\r\n    );\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, index?:number) {\r\n    this.index = index;\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-xl',\r\n    });\r\n  }\r\n  hideModal() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  onNestedFieldError(formGroup: string, index: number, field: string) {\r\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n    field = nestedForm.controls[index].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n\r\n    if (nestedForm.controls[index].get(field).validator) {\r\n      let validationResult = nestedForm.controls[index]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n\r\n\r\n\r\n  async postDocumentosOcorrencia(fichaId: number) {\r\n    let requests = [];\r\n\r\n    if (this.formData.length === 0) {\r\n      return requests;\r\n    }\r\n\r\n    const promise = () => {\r\n      this.formData.forEach((element) => {\r\n        requests.push(this.fichasConformidadeService.postDocumentoOcorrencia(element, fichaId));\r\n      });\r\n    }\r\n\r\n    Promise.resolve(promise());\r\n\r\n    forkJoin(requests)\r\n      .subscribe(\r\n        (responses: Array<HttpResponse<any>>)=>{\r\n          responses.forEach(response => {\r\n            if(response.status === 200){\r\n              this.pnotify.success();\r\n            } else {\r\n              this.pnotify.error();\r\n            }\r\n          })\r\n        }\r\n        ,\r\n      (error) => {\r\n        this.pnotify.error();\r\n      }\r\n      )\r\n\r\n    return requests;\r\n  }\r\n\r\n  putDocumentoOcorrencia(documento: ILogisticaEntradaMateriaisDocumentos) {\r\n    const [type, title, message, cancelTxt, okTxt] = [\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar',\r\n    ];\r\n\r\n    this.confirmModalService\r\n      .showConfirm(type, title, message, cancelTxt, okTxt)\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n\r\n          return this.fichasConformidadeService.putDocumento(documento);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        this.pnotify.success('Documento atualizado com sucesso');\r\n        this.getDocumentosOcorrencia({\r\n          ID_LOGI_ENMA_FHNC_OCOR: this.form.get('ID_LOGI_ENMA_FHNC_OCOR').value,\r\n          IN_STAT: '1',\r\n        });\r\n      });\r\n  }\r\n\r\n  getDocumentosOcorrencia(params?) {\r\n    this.fichasConformidadeService.getDocumentoOcorrencia(params).subscribe(\r\n      (response) => {\r\n        if (response.status === 200) {\r\n          this.documentos = response.body['data'];\r\n        } else {\r\n          this.documentos = [];\r\n        }\r\n      },\r\n      (error) => {\r\n        this.documentos = [];\r\n      }\r\n    );\r\n  }\r\n\r\n  onRemove(documento: ILogisticaEntradaMateriaisDocumentos, index: number) {\r\n    if(!documento.hasOwnProperty('ID_LOGI_ENMA_FHNC_DOCU')){\r\n      this.formData = this.formData.filter((element:FormData) => {\r\n        return (element.get('file'))['name'] != documento.NM_DOCU ;\r\n      })\r\n    }\r\n    documento.IN_STAT = '0';\r\n    this.documentos.splice(index, 1)\r\n    if(documento.hasOwnProperty('ID_LOGI_ENMA_FHNC_DOCU')){\r\n      this.putDocumentoOcorrencia(documento);\r\n    }\r\n  }\r\n\r\n  appendFile(files: FileList) {\r\n    if (files.length === 0) return;\r\n    const fd = new FormData();\r\n    fd.append('file', files[0]);\r\n    this.formData.push(fd);\r\n    this.documentos.push({ NM_DOCU: files[0]['name']});\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SubModulosService } from 'src/app/shared/services/requests/submodulos.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { TitleCasePipe } from 'src/app/shared/pipes/title-case.pipe';\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais',\r\n  templateUrl: './entrada-materiais.component.html',\r\n  styleUrls: ['./entrada-materiais.component.scss']\r\n})\r\nexport class LogisticaEntradaMateriaisComponent implements OnInit {\r\n\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: any = [];\r\n\r\n  appName: string;\r\n  atividades: any = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private subModulosService: SubModulosService,\r\n    private atividadesService: AtividadesService,\r\n    private pnotifyService: PNotifyService,\r\n    private titleCasePipe: TitleCasePipe\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.registrarAcesso();\r\n      this.getSubmodulo(params['idSubModulo']);\r\n      this.getAtividadesInternas(params['idSubModulo']);\r\n    });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n  }\r\n\r\n  getSubmodulo(idSubModulo: number) {\r\n    this.subModulosService\r\n      .getSubModulo(idSubModulo)\r\n      .subscribe((response: any) => {\r\n        if (response['status'] === 200) {\r\n          this.appName = this.titleCasePipe.transform(response['body']['nome']);\r\n          this.setBreadCrumb(this.appName);\r\n        }\r\n      });\r\n  }\r\n\r\n  getAtividadesInternas(idSubModulo: number) {\r\n    this.atividadesService.getAtividadesInternas(idSubModulo).subscribe(\r\n      (response: any) => {\r\n        if (response['responseCode'] === 200) {\r\n          this.atividades = response['result'];\r\n          this.loaderFullScreen = false;\r\n        } else {\r\n          this.handleAtividadesInternasError();\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.handleAtividadesInternasError();\r\n      }\r\n    );\r\n  }\r\n\r\n  setBreadCrumb(nomeSubModulo: string) {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Logistica',\r\n        routerLink: '/logistica/home'\r\n      },\r\n      {\r\n        descricao: nomeSubModulo\r\n      }\r\n    ];\r\n  }\r\n\r\n  handleAtividadesInternasError() {\r\n    this.pnotifyService.error();\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"STATUS DE RECEBIMENTO\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postStatusRecebimento()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Status de Recebimento</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\r\\n            <label for=\\\"NM_STAT\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_STAT\\\"\\r\\n              formControlName=\\\"NM_STAT\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_STAT') + ' ' + onFieldRequired('NM_STAT')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_STAT')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Observação</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"STATUS DE RECEBIMENTO\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onExport()\\\"\\r\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"ID_LOGI_ENMA_NOFI_STAT\\\">ID</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"ID_LOGI_ENMA_NOFI_STAT\\\"\\r\\n                formControlName=\\\"ID_LOGI_ENMA_NOFI_STAT\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n              <label for=\\\"NM_STAT\\\">Descrição</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"NM_STAT\\\"\\r\\n                formControlName=\\\"NM_STAT\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"tipos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"tipo\\\"\\r\\n                bindLabel=\\\"nome\\\"\\r\\n                bindValue=\\\"cod\\\"\\r\\n                id=\\\"tipo\\\"\\r\\n                (change)=\\\"onFilter()\\\"\\r\\n                formControlName=\\\"IN_STAT\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n              >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1 pl-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-5': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('ID_LOGI_ENMA_NOFI_STAT')\\\">\\r\\n                <thead-sorter value=\\\"ID\\\" [active]=\\\"ORDE_BY == 'ID_LOGI_ENMA_NOFI_STAT'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('NM_STAT')\\\">\\r\\n                <thead-sorter value=\\\"Descrição\\\" [active]=\\\"ORDE_BY == 'NM_STAT'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let status of statusRecebimento\\\"  [class.table-active]=\\\"status?.ID_LOGI_ENMA_NOFI_STAT == statusSelecionado?.ID_LOGI_ENMA_NOFI_STAT && showDetailPanel\\\">\\r\\n              <td  [ngClass]=\\\"status.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n                {{status.ID_LOGI_ENMA_NOFI_STAT }}\\r\\n              </td>\\r\\n              <td >{{ status.NM_STAT | uppercase}}</td>\\r\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"status.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(status)\\\">\\r\\n                    <i [ngClass]=\\\"status.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', status.ID_LOGI_ENMA_NOFI_STAT]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(status)\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Histórico de alteração\\\">\\r\\n        <custom-table>\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n              <th scope=\\\"col\\\">Ação</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let historico of historicos; let i = index\\\">\\r\\n              <td>{{ historico?.DT_INCL | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <td>({{historico?.NR_MATR}})&nbsp;{{ historico?.NM_USUA | uppercase }}</td>\\r\\n              <td>{{ getDescricaoAtualizaco(historico, i) }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaEntradaMateriaisParecer } from '../models/parecer';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaEntradaMateriaisParecerService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getParecer(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/ocorrencias/parecer`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postParecer(parecer: ILogisticaEntradaMateriaisParecer) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/ocorrencias/parecer`,\r\n      parecer,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Fichas de Não Conformidade\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"getRelatorio()\\\"\\r\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"ID_LOGI_ENMA_FHNC\\\">ID FNC</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"ID_LOGI_ENMA_FHNC\\\"\\r\\n                formControlName=\\\"ID_LOGI_ENMA_FHNC\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"DT_INIC\\\">Data Inicial</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"DT_INIC\\\"\\r\\n                type=\\\"text\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                bsDatepicker\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"DT_INIC\\\"\\r\\n                >\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"DT_FINA\\\">Data Final</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"DT_FINA\\\"\\r\\n                type=\\\"text\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                bsDatepicker\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"DT_FINA\\\"\\r\\n                >\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n              <label for=\\\"ID_LOGI_ENMA_FHNC_TIPO\\\">Tipo de Não Conformidade</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"tiposConformidade\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                dropdownPosition=\\\"bottom\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingTiposConformidade\\\"\\r\\n                labelForId=\\\"ID_LOGI_ENMA_FHNC_TIPO\\\"\\r\\n                bindLabel=\\\"NM_TIPO\\\"\\r\\n                bindValue=\\\"ID_LOGI_ENMA_FHNC_TIPO\\\"\\r\\n                id=\\\"ID_LOGI_ENMA_FHNC_TIPO\\\"\\r\\n                formControlName=\\\"ID_LOGI_ENMA_FHNC_TIPO\\\"\\r\\n              >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"ficha\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"ficha\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"NR_NOTA_FISC\\\">NOTA FISCAL</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"NR_NOTA_FISC\\\"\\r\\n                formControlName=\\\"NR_NOTA_FISC\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"DS_LOTE\\\">LOTE</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"DS_LOTE\\\"\\r\\n                formControlName=\\\"DS_LOTE\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6 pl-0\\\">\\r\\n              <label for=\\\"NM_MATE\\\">Material</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"NM_MATE\\\"\\r\\n                formControlName=\\\"NM_MATE\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-4 pl-0\\\">\\r\\n              <label for=\\\"IN_CONC\\\">STATUS DA OCORRÊNCIA</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"false\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"status\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"ficha\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"status\\\"\\r\\n              formControlName=\\\"IN_CONC\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6 pl-0\\\">\\r\\n              <label for=\\\"NM_FORN\\\">Fornecedor</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"NM_FORN\\\"\\r\\n                formControlName=\\\"NM_FORN\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\">\\r\\n    <div class=\\\"p-0 col-md-12\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult || loading\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('ID_LOGI_ENMA_FHNC')\\\">\\r\\n                <thead-sorter value=\\\"ID FNC\\\" [active]=\\\"ORDE_BY == 'ID_LOGI_ENMA_FHNC'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('DT_INCL')\\\">\\r\\n                <thead-sorter value=\\\"DATA DE ABERTURA DA FNC\\\" [active]=\\\"ORDE_BY == 'DT_INCL'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('NM_TIPO')\\\">\\r\\n                <thead-sorter value=\\\"TIPO DE NÃO CONFORMIDADE\\\" [active]=\\\"ORDE_BY == 'NM_TIPO'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('IN_CONC')\\\">\\r\\n                <thead-sorter value=\\\"STATUS DA OCORRÊNCIA\\\" [active]=\\\"ORDE_BY == 'IN_CONC'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let ficha of fichasConformidade\\\"  [class.table-active]=\\\"ficha?.ID_LOGI_ENMA_FHNC == motivoSelecionado?.ID_LOGI_ENMA_FHNC && showDetailPanel\\\">\\r\\n              <td [ngClass]=\\\"ficha.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n              {{ficha.ID_LOGI_ENMA_FHNC }}\\r\\n              </td>\\r\\n              <td>{{ ficha.DT_INCL | date: 'dd/MM/yyyy HH:mm'}}</td>\\r\\n              <td>{{ ficha.NM_TIPO | uppercase}}</td>\\r\\n              <td *ngIf=\\\"ficha.IN_CONC == 1\\\">FINALIZADA</td>\\r\\n              <td *ngIf=\\\"ficha.IN_CONC != 1\\\">EM ANDAMENTO</td>\\r\\n              <td class=\\\"align-middle\\\">\\r\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"ficha.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(ficha)\\\">\\r\\n                    <i [ngClass]=\\\"ficha.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\"  placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\"  [disabled]=\\\"ficha.IN_RESP == 0 || ficha.IN_CONC == 1\\\" [routerLink]=\\\"['./../', ficha.ID_LOGI_ENMA_FHNC]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span   tooltip=\\\"Detalhe da Ficha\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\r\\n                    <i class=\\\"fas fa-search\\\" (click)=\\\"openModal(detalhesFicha, ficha)\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n  <ng-template #detalhesFicha >\\r\\n    <div class=\\\"modal-header\\\" [hidden]=\\\"hiddenModal\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Detalhes da FNC  -  ID {{fichaSelecionada?.ID_LOGI_ENMA_FHNC}}</h4>\\r\\n      <div>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn-icon-sm mx-3\\\"\\r\\n          tooltip=\\\"Download\\\"\\r\\n          container=\\\"body\\\"\\r\\n          (click)=\\\"onDownload(fichaSelecionada)\\\"\\r\\n          [disabled] = \\\"loadingMateriais\\\"\\r\\n        >\\r\\n          <i class=\\\"far fa-save\\\"></i>\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn-icon-sm mr-3\\\"\\r\\n          tooltip=\\\"Imprimir\\\"\\r\\n          container=\\\"body\\\"\\r\\n          [disabled] = \\\"loadingMateriais\\\" \\r\\n          (click)=\\\"onPrint()\\\"\\r\\n        >\\r\\n          <i class=\\\"fas fa-print\\\"></i>\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn-icon-sm\\\"\\r\\n          tooltip=\\\"Fechar\\\"\\r\\n          container=\\\"body\\\"\\r\\n          (click)=\\\"hideModal()\\\"\\r\\n        >\\r\\n          <i class=\\\"fas fa-times\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" [hidden]=\\\"hiddenModal\\\" id=\\\"ficha-pdf\\\" >\\r\\n      <tabset>\\r\\n        <tab heading=\\\"Dados cadastrais\\\">\\r\\n          <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\" >\\r\\n            <div >\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-lg-6\\\">\\r\\n                  <label>ID FNC</label>\\r\\n                  <div *ngIf=\\\"fichaSelecionada?.ID_LOGI_ENMA_FHNC == null\\\">NÃO INFORMADO</div>\\r\\n                  <div *ngIf=\\\"fichaSelecionada?.ID_LOGI_ENMA_FHNC != null\\\">{{fichaSelecionada?.ID_LOGI_ENMA_FHNC}}</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-lg-6\\\">\\r\\n                  <label>Tipo de Não Conformidade</label>\\r\\n                  <div *ngIf=\\\"fichaSelecionada?.NM_TIPO == null\\\">NÃO INFORMADO</div>\\r\\n                  <div *ngIf=\\\"fichaSelecionada?.NM_TIPO != null\\\">{{ fichaSelecionada?.NM_TIPO}}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-lg-12\\\">\\r\\n                  <label>Observação</label>\\r\\n                  <div *ngIf=\\\"fichaSelecionada?.DS_OBSE == null\\\">NÃO INFORMADO</div>\\r\\n                  <div *ngIf=\\\"fichaSelecionada?.DS_OBSE != null\\\">{{ fichaSelecionada?.DS_OBSE }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <hr>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-lg-12\\\">\\r\\n                  <label>Materiais</label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div [hidden]=\\\"!loadingMateriais\\\" class=\\\"col-lg-12 text-muted \\\">\\r\\n                <p><strong>Buscando os materiais da ficha de não conformidade...</strong></p>\\r\\n              </div>\\r\\n              <custom-table class=\\\"text-center\\\" *ngIf=\\\"!loadingMateriais && !noMateriais\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th>ID </th>\\r\\n                    <th>Nota Fiscal</th>\\r\\n                    <th>Classe</th>\\r\\n                    <th>Lote</th>\\r\\n                    <th>Material</th>\\r\\n                    <th>Un. Medida</th>\\r\\n                    <th>Quantidade Total</th>\\r\\n                    <th>Quantidade NC</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let item of materiais\\\">\\r\\n                    <td>{{item.ID_MATE}}</td>\\r\\n                    <td *ngIf=\\\"item.NR_NOTA_FISC != null\\\">{{item.NR_NOTA_FISC}}</td>\\r\\n                    <td *ngIf=\\\"item.NR_NOTA_FISC == null\\\">NÃO INFORMADO</td>\\r\\n                    <td>{{item.NM_CLAS}}</td>\\r\\n                    <td *ngIf=\\\"item.DS_LOTE != null\\\" >{{item.DS_LOTE}}</td>\\r\\n                    <td *ngIf=\\\"item.DS_LOTE == null\\\" >NÃO INFORMADO</td>\\r\\n                    <td>{{item.NM_MATE}}</td>\\r\\n                    <td>{{item.DS_UNID_MEDI}}</td>\\r\\n                    <td>{{item.TT_MATE_ORIG | number:'1.3-3' }}</td>\\r\\n                    <td>{{item.TT_MATE | number:'1.3-3' }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <div [hidden]=\\\"loadingMateriais || !noMateriais\\\" class=\\\"text-center d-flex justify-content-center align-items-center pb-3\\\">\\r\\n                <empty-result message=\\\"Nenhum material encontrado\\\"></empty-result>\\r\\n              </div>\\r\\n              <hr>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col\\\">\\r\\n                  <label>Usuário Responsável Pelo Cadastro</label>\\r\\n                  <div *ngIf=\\\"fichaSelecionada?.NR_MATR == null\\\">NÃO INFORMADO</div>\\r\\n                  <div *ngIf=\\\"fichaSelecionada?.NR_MATR != null\\\">{{fichaSelecionada?.NR_MATR}} - {{ fichaSelecionada?.NM_USUA }}</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col\\\">\\r\\n                  <label>Data do Cadastro</label>\\r\\n                  <div *ngIf=\\\"fichaSelecionada?.DT_INCL == null\\\">NÃO INFORMADO</div>\\r\\n                  <div *ngIf=\\\"fichaSelecionada?.DT_INCL != null\\\">{{ fichaSelecionada?.DT_INCL | date: 'dd/MM/yyyy HH:mm'}}</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col\\\" *ngIf=\\\"fichaSelecionada?.DT_ATUA != null\\\">\\r\\n                  <label>Data da Atualização</label>\\r\\n                  <div *ngIf=\\\"fichaSelecionada?.DT_ATUA == null\\\">NÃO INFORMADO</div>\\r\\n                  <div *ngIf=\\\"fichaSelecionada?.DT_ATUA != null\\\">{{ fichaSelecionada?.DT_ATUA | date: 'dd/MM/yyyy HH:mm'}}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </tab>\\r\\n        <tab heading=\\\"Ocorrências\\\">\\r\\n          <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\"  >\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col justify-content-between text-center m-0\\\" *ngIf=\\\"fichaSelecionada?.IN_CONC == 1\\\">\\r\\n                <blockquote class=\\\"blockquote text-center m-0\\\">\\r\\n                  <p class=\\\"mb-0 text-success\\\"> FICHA CONCLUÍDA </p>\\r\\n                  <footer class=\\\"blockquote-footer\\\">Essa ficha foi concluída, sendo assim não é permitido inserir novo parecer!</footer>\\r\\n                </blockquote>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-10 mb-0 d-flex justify-content-between\\\" *ngIf=\\\"fichaSelecionada?.IN_CONC == 0\\\">\\r\\n                <button \\r\\n                  type=\\\"button\\\" \\r\\n                  class=\\\"btn btn-default btn-lg m-2 pull-right\\\"\\r\\n                  (click)=\\\"finalizarFicha(fichaSelecionada)\\\"\\r\\n                  [disabled]=\\\"fichaSelecionada?.IN_RESP == 0 || disabledButton == true\\\"\\r\\n                >\\r\\n                <span aria-hidden=\\\"true\\\">\\r\\n                  <i class=\\\" text-primary fas fa-check\\\"></i>\\r\\n                </span>Finalizar Ficha\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\" *ngIf=\\\"fichaSelecionada?.IN_CONC == 0 \\\">\\r\\n                <button \\r\\n                  type=\\\"button\\\" \\r\\n                  class=\\\"btn btn-default btn-lg m-2 pull-right\\\"\\r\\n                  (click)=\\\"openModalOcorrencias(formOcorrencias)\\\"\\r\\n                  [disabled]=\\\"fichaSelecionada?.IN_RESP == 0\\\"\\r\\n                >\\r\\n                <span aria-hidden=\\\"true\\\">\\r\\n                  <i class=\\\" text-success fas fa-plus\\\"></i>\\r\\n                </span>Adicionar Parecer\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <div *ngIf=\\\"loadingDocumentosOcorrencias || loadingResponsaveisOcorrencias\\\" class=\\\"col-lg-12 text-muted \\\">\\r\\n              <p><strong>Buscando as ocorrências da ficha de não conformidade...</strong></p>\\r\\n            </div>\\r\\n            <div class=\\\"scroll-ocorrencias\\\" *ngIf=\\\"!noOcorrencias\\\">\\r\\n              <div class=\\\"col-md-12 mx-2 pb-3 \\\" data-spy=\\\"scroll\\\" *ngFor=\\\"let ocorrencia of ocorrencias\\\" >\\r\\n                <div class=\\\"card mr-3\\\" *ngIf=\\\"!loadingDocumentosOcorrencias && !loadingResponsaveisOcorrencias\\\">\\r\\n                  <div class=\\\"card-body p-2\\\">\\r\\n                    <h5 class=\\\"card-title mb-1\\\" >{{ocorrencia.NR_SQNC}} - {{ocorrencia.NM_PARE}}</h5>\\r\\n                    <p class=\\\"card-text m-2\\\"><strong> Código: </strong> {{ocorrencia.ID_LOGI_ENMA_FHNC_OCOR}}</p>\\r\\n                    <p class=\\\"card-text m-2\\\"><strong> Descrição: </strong> {{ocorrencia.DS_OBSE}}</p>\\r\\n                    <ul class=\\\"pl-0\\\">\\r\\n                      <li class=\\\"d-flex\\\" *ngFor=\\\"let item of documentosOcorrencia[ocorrencia.ID_LOGI_ENMA_FHNC_OCOR];\\\">\\r\\n                        <div class=\\\"d-flex\\\">\\r\\n                          <div>\\r\\n                            <strong class=\\\"ml-2\\\">{{ item.NM_DOCU }}</strong>\\r\\n                          </div>\\r\\n                          <div class=\\\"ml-4\\\" *ngIf=\\\"item.TP_DOCU == 'DOCUMENTO'\\\">\\r\\n                            <a href=\\\"{{ item.LINK }}\\\" target=\\\"_blank\\\" class=\\\"btn-icon-sm\\\">\\r\\n                              <i class=\\\"fas fa-download\\\"></i>\\r\\n                            </a>\\r\\n                          </div>\\r\\n                          <div class=\\\"ml-4\\\" *ngIf=\\\"item.TP_DOCU == 'IMAGEM'\\\">\\r\\n                            <a href=\\\"{{ item.LINK }}\\\" target=\\\"_blank\\\" class=\\\"btn-icon-sm\\\">\\r\\n                              <i class=\\\"fas fa-eye\\\"></i>\\r\\n                            </a>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                    <div>\\r\\n                      <ul class=\\\"pl-0 m-0\\\">\\r\\n                        <li class=\\\"d-flex\\\" *ngFor=\\\"let item of responsaveisOcorrencia[ocorrencia.ID_LOGI_ENMA_FHNC_OCOR];\\\">\\r\\n                          <div class=\\\"d-flex\\\">\\r\\n                            <div>\\r\\n                              <p class=\\\"card-text ml-2\\\">{{ocorrencia.NM_USUA | name }} atribuiu a ficha de não conformidade para: <strong>{{ item.NR_MATR_RESP }} - {{ item.NM_RESP }}</strong></p>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </li>\\r\\n                      </ul>\\r\\n                    </div>\\r\\n                    <p class=\\\"text-right m-0\\\"><small class=\\\"text-muted\\\"><cite>{{ocorrencia.NR_MATR}} - {{ocorrencia.NM_USUA | uppercase}}</cite></small></p>\\r\\n                    <p class=\\\"text-right m-0\\\"><small class=\\\"text-muted\\\">{{ocorrencia.DT_INCL | date: 'dd/MM/yyyy HH:mm'}}</small></p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div  *ngIf=\\\"noOcorrencias && !loadingOcorrencias\\\" class=\\\"d-flex justify-content-center mb-3\\\">\\r\\n              <empty-result message=\\\"Nenhuma ocorrência encontrada\\\"></empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </tab>\\r\\n        <tab heading=\\\"Documentos\\\">\\r\\n          <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\" >\\r\\n            <div *ngIf=\\\"totalImagens != 0\\\">\\r\\n              <blockquote class=\\\"blockquote\\\">\\r\\n                <p class=\\\"mb-0\\\">Imagens</p>\\r\\n              </blockquote>\\r\\n              <div class=\\\"row ScrollImagem\\\" >\\r\\n                <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let imagem of imagens\\\">\\r\\n                  <div class=\\\"card\\\" >\\r\\n                    <img class=\\\"card-img-responsive\\\" src=\\\"{{imagem.LINK}}\\\" style=\\\"height: 150px;\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                      <p class=\\\"card-text\\\"><strong>{{imagem.NM_DOCU}}</strong></p>\\r\\n                      <p class=\\\"card-text mb-2\\\">{{imagem.DT_INCL | date: 'dd/MM/yyyy HH:mm'}}</p>\\r\\n                      <p class=\\\"card-text mb-2\\\">{{imagem.NM_USUA}}</p>\\r\\n                      <p class=\\\"card-text-right\\\">\\r\\n                        <a\\r\\n                          [href]=\\\"imagem.LINK\\\"\\r\\n                          target=\\\"_blank\\\"\\r\\n                          class=\\\"btn-icon-sm text-black\\\"\\r\\n                          tooltip=\\\"visualizar\\\"\\r\\n                        >\\r\\n                          <i class=\\\"far fa-eye\\\"></i>\\r\\n                        </a>\\r\\n                      </p>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <hr *ngIf=\\\"totalImagens != 0 && totalDocumentos != 0 \\\">\\r\\n            <div  *ngIf=\\\"totalDocumentos != 0\\\">\\r\\n              <blockquote class=\\\"blockquote\\\">\\r\\n                <p class=\\\"mb-0\\\">Documentos</p>\\r\\n              </blockquote>\\r\\n              <ul class=\\\" pl-0\\\">\\r\\n                <li class=\\\"d-flex justify-content-between\\\" *ngFor=\\\"let documento of documentos;\\\">\\r\\n                  <div>{{ documento.NM_DOCU | uppercase }}</div>\\r\\n                  <div>\\r\\n                    <a\\r\\n                      [href]=\\\"documento.LINK\\\"\\r\\n                      target=\\\"_blank\\\"\\r\\n                      class=\\\"btn-icon-sm mx-2 text-black\\\"\\r\\n                      tooltip=\\\"Baixar\\\"\\r\\n                    >\\r\\n                    <i class=\\\"fas fa-download\\\"></i>\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </div>\\r\\n            <div [hidden]=\\\"totalImagens != 0 || totalDocumentos != 0\\\" class=\\\"text-center d-flex justify-content-center align-items-center pb-4\\\" style=\\\"height: 80%\\\">\\r\\n              <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </tab>\\r\\n      </tabset>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template #formOcorrencias>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Nova Ocorrência</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModalOcorrencias()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" >\\r\\n      <logistica-entrada-materiais-ficha-conformidade-ocorrencias\\r\\n      [fichaId] = \\\"fichaId\\\"\\r\\n      (fecharModal)=\\\"onFecharModal($event)\\\"\\r\\n      >\\r\\n      </logistica-entrada-materiais-ficha-conformidade-ocorrencias>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</app-body>\";","//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { LogisticaEntradaMateriaisMotivosService } from '../services/motivos.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaEntradaMateriaisMotivos } from './../models/motivos';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-motivos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisMotivosListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false; \r\n\r\n  //VARIAVEIS\r\n  totalItens: any = [];\r\n  motivos: Array<ILogisticaEntradaMateriaisMotivos>;\r\n  motivoSelecionado: ILogisticaEntradaMateriaisMotivos;\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  // Tipos de Situação dos Motivos (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n // Tipos de Categorias\r\n  categorias = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Aprovação',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Solicitação',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private motivosService: LogisticaEntradaMateriaisMotivosService,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.onDetailPanelEmitter();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n        this.getMotivos(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENTR_MATE_MOTI: [null],\r\n      DS_LOGI_ENTR_MATE_MOTI: [null],\r\n      DS_LOGI_ENTR_MATE_CATE_MOTI: [null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      MATR_USUA_CADA: [null],\r\n      DS_USUA_CADA: [null],\r\n      DT_INCL: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Motivos',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.detailPanelService.hide();\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onDetails(status: ILogisticaEntradaMateriaisMotivos): void {\r\n    // this.getEmpresasProdutos({\r\n    //   ID_TECN_INFO_ESTO_PROD: produto.ID_TECN_INFO_ESTO_PROD,\r\n    // });\r\n    this.loadingNavBar = true;\r\n    this.detailPanelService.show();\r\n    this.motivoSelecionado = status;\r\n    this.detailPanelService.loadedFinished(false);\r\n\r\n    setTimeout(() => {\r\n      this.loadingNavBar = false;\r\n    }, 500);\r\n  }\r\n\r\n  getMotivos(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.motivosService\r\n      .getMotivos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.motivos = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.motivos = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.onFilter();\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(status: ILogisticaEntradaMateriaisMotivos): string {\r\n    let borderClass: string;\r\n\r\n    if (status.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (status.IN_STAT == 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(status: ILogisticaEntradaMateriaisMotivos) {\r\n    const stat = status.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          status.IN_STAT = stat;\r\n          return this.motivosService.postMotivos(status);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          status.IN_STAT = status.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.motivos.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Motivos${dataExport}`);\r\n  }\r\n}\r\n","export default \"\\r\\n<form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n  <fieldset  class=\\\"col-12\\\">\\r\\n    <fieldset class=\\\"border rounded shadow-sm col-12 pt-2 mx-auto\\\">\\r\\n      <legend>Dados da Ocorrência</legend>\\r\\n      <div class=\\\"form-row justify-content-center\\\">\\r\\n        <div class=\\\"form-group col-md-12 pl-0\\\">\\r\\n          <label for=\\\"parecer\\\">Parecer</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"parecer\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            [loading]=\\\"loadingParecer\\\"\\r\\n            labelForId=\\\"ID_LOGI_ENMA_FHNC_OCPR\\\"\\r\\n            bindLabel=\\\"NM_PARE\\\"\\r\\n            bindValue=\\\"ID_LOGI_ENMA_FHNC_OCPR\\\"\\r\\n            id=\\\"ID_LOGI_ENMA_FHNC_OCPR\\\"\\r\\n            formControlName=\\\"ID_LOGI_ENMA_FHNC_OCPR\\\"\\r\\n            [ngClass]=\\\"onFieldError('ID_LOGI_ENMA_FHNC_OCPR') + ' ' + onFieldRequired('ID_LOGI_ENMA_FHNC_OCPR')\\\">\\r\\n          </ng-select>\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('ID_LOGI_ENMA_FHNC_OCPR')\\\" message=\\\"Parecer é obrigatório.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row justify-content-center\\\">\\r\\n        <div class=\\\"form-group col-md-12 pl-0\\\">\\r\\n          <label for=\\\"DS_OBSE\\\">Descrição</label>\\r\\n          <textarea \\r\\n            class=\\\"form-control\\\" \\r\\n            id=\\\"DS_OBSE\\\"\\r\\n            formControlName=\\\"DS_OBSE\\\" \\r\\n            rows=\\\"3\\\"\\r\\n            [ngClass]=\\\"onFieldError('DS_OBSE') + ' ' + onFieldRequired('DS_OBSE')\\\"\\r\\n            >\\r\\n          </textarea>\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('DS_OBSE')\\\" message=\\\"Descrição do parecer é obrigatório.\\\"></invalid-form-control>\\r\\n        </div> \\r\\n      </div>\\r\\n    </fieldset>\\r\\n    <br>\\r\\n    <fieldset class=\\\"border rounded shadow-sm col-12 pt-2 mx-auto\\\">\\r\\n      <legend>Responsáveis</legend>\\r\\n      <div formArrayName=\\\"responsaveis\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n            <div class=\\\"mtc-title\\\"></div>\\r\\n            <div>\\r\\n              <a\\r\\n                class=\\\"text-secondary\\\"\\r\\n                (click)=\\\"onAddResponsavel()\\\"\\r\\n                href=\\\"javascript:void(0)\\\">\\r\\n                <b>Adicionar</b>\\r\\n              </a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\"  *ngFor=\\\"let item of formResponsaveis.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-3 pl-0\\\">\\r\\n                <label for=\\\"NR_MATR_RESP\\\">Matricula</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"NR_MATR_RESP\\\"\\r\\n                  formControlName=\\\"NR_MATR_RESP\\\"\\r\\n                  placeholder=\\\"Digite...\\\"\\r\\n                  [ngClass]=\\\"onNestedFieldError('responsaveis', i, 'NR_MATR_RESP') + ' ' + onNestedFieldRequired('responsaveis', i, 'NR_MATR_RESP')\\\"\\r\\n                >\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-md-8 pl-0\\\">\\r\\n                <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\r\\n                  <label class=\\\"my-auto\\\" for=\\\"NM_RESP\\\">Responsável</label>\\r\\n                  <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\">\\r\\n                    <a\\r\\n                      class=\\\"text-primary\\\"\\r\\n                      href=\\\"javascript:void(0)\\\"\\r\\n                      (click)=\\\"openModal(selecionarUsuarios, i)\\\">\\r\\n                      <strong>Selecionar</strong>\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"NM_RESP\\\"\\r\\n                  formControlName=\\\"NM_RESP\\\"\\r\\n                  [ngClass]=\\\"onNestedFieldError('responsaveis', i, 'NM_RESP') + ' ' + onNestedFieldRequired('responsaveis', i, 'NM_RESP')\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn-icon\\\"\\r\\n                  (click)=\\\"onDeleteResponsavel(i)\\\">\\r\\n                  <i class=\\\"fas fa-trash\\\"></i>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n    </fieldset>\\r\\n    <br>\\r\\n    <fieldset class=\\\"border rounded shadow-sm col-12 pt-2 pb-2 mx-auto\\\">\\r\\n      <legend>Documentos</legend>\\r\\n      <div class=\\\"form-group border rounded p-1\\\">\\r\\n        <div>\\r\\n          <label for=\\\"documento\\\" class=\\\"w-100 d-flex justify-content-between align-items-center m-0 py-1\\\" style=\\\"cursor: pointer;\\\">\\r\\n            <span>Novo Documento</span>\\r\\n          </label>\\r\\n          <input\\r\\n            id=\\\"documento\\\"\\r\\n            type=\\\"file\\\"\\r\\n            (change)=\\\"appendFile($event.target.files)\\\"\\r\\n            class=\\\"d-none\\\"\\r\\n            >\\r\\n        </div>\\r\\n      </div>\\r\\n      <ul>\\r\\n        <li class=\\\"d-flex justify-content-between\\\" *ngFor=\\\"let item of documentos ; let index = index\\\">\\r\\n          <div>{{ item.NM_DOCU | uppercase }}</div>\\r\\n          <div>\\r\\n            <a\\r\\n              [hidden]=\\\"!item.ID_LOGI_ENMA_FHNC_DOCU\\\"\\r\\n              [href]=\\\"item.LINK\\\"\\r\\n              target=\\\"_blank\\\"\\r\\n              class=\\\"btn-icon-sm mx-2 text-black\\\"\\r\\n              tooltip=\\\"visualizar\\\"\\r\\n            >\\r\\n              <i class=\\\"far fa-eye\\\"></i>\\r\\n            </a>\\r\\n            <button\\r\\n              class=\\\"btn-icon-sm mx-2 hover\\\"\\r\\n              tooltip=\\\"excluir\\\"\\r\\n              (click)=\\\"onRemove(item, index)\\\"\\r\\n              >\\r\\n              <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </button>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </fieldset>    \\r\\n  </fieldset>\\r\\n</form>\\r\\n<div  class=\\\"form-row justify-content-center text-center\\\">\\r\\n  <button \\r\\n    type=\\\"button\\\" \\r\\n    class=\\\"btn btn-default btn-lg m-2\\\"\\r\\n    (click)=\\\"postOcorrencias()\\\"\\r\\n    [disabled]=\\\"form.valid == false \\\"\\r\\n  >\\r\\n    <span aria-hidden=\\\"true\\\">\\r\\n     <i class=\\\" text-success fas fa-thumbs-up\\\"></i>\\r\\n    </span>Salvar\\r\\n  </button>\\r\\n</div>\\r\\n<ng-template #selecionarUsuarios>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Pesquisa de Responsáveis</h4>\\r\\n    <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n      <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\" *ngIf=\\\"loadingUsuarios\\\">\\r\\n        <span class=\\\"sr-only\\\">Loading...</span>\\r\\n      </div>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <advanced-filter>\\r\\n      <form [formGroup]=\\\"formUsuarios\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-3\\\">\\r\\n            <label for=\\\"cdItem\\\">BUSCAR POR</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              formControlName=\\\"buscarPor\\\"\\r\\n            >\\r\\n              <option value=\\\"matricula\\\">Matricula</option>\\r\\n              <option value=\\\"nome\\\" selected> Nome Responsável</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-9\\\">\\r\\n            <label>TERMO DE PESQUISA</label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"pesquisa\\\"\\r\\n                >\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                  <span \\r\\n                    [tooltip]=\\\"formUsuarios.valid == false ? 'Digite um termo de pesquisa':''\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    placement =\\\"left\\\"\\r\\n                  >\\r\\n                    <button\\r\\n                    style=\\\"height: 25px;\\\"\\r\\n                      [disabled]=\\\"formUsuarios.valid == false\\\"\\r\\n                      class=\\\"input-group-text hover\\\"\\r\\n                      (click)=\\\"getUsuarios()\\\"\\r\\n                      >\\r\\n                      <i class=\\\"fas fa-search\\\"></i>\\r\\n                    </button>\\r\\n                  </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </advanced-filter>\\r\\n    <custom-table *ngIf=\\\"!loadingUsuarios && !noUsuarios\\\" class=\\\"text-center\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th>Matricula</th>\\r\\n          <th>Nome Responsável</th>\\r\\n          <th></th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let usuario of usuarios | slice : begin : end; let i = index\\\">\\r\\n          <td>{{ usuario.matricula }}</td>\\r\\n          <td>{{ usuario.nome }}</td>\\r\\n          <td>\\r\\n            <button\\r\\n              class=\\\"btn-icon-sm\\\"\\r\\n              tooltip=\\\"Salvar Responsável\\\"\\r\\n              container=\\\"body\\\"\\r\\n              (click)=\\\"setUsuarios(usuario);modalRef.hide()\\\"\\r\\n            >\\r\\n              <i class=\\\"far fa-save\\\"></i>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n    <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL21vdGl2b3MvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { RouterService } from './../../../../../shared/services/core/router.service';\r\nimport { LogisticaEntradaMateriaisStatusRecebimentoService } from './../../status-recebimento/services/status-recebimento.service';\r\nimport { DateService } from './../../../../../shared/services/core/date.service';\r\nimport { AbstractControl } from '@angular/forms';\r\n//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsModalService, BsLocaleService, PageChangedEvent } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription, forkJoin } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ILogisticaEntradaMateriaisNotasFiscais } from '../models/notasFiscais';\r\n\r\nimport { LogisticaEntradaMateriaisNotasFiscaisService } from '../services/notas-fiscais.service';\r\nimport { LogisticaEntradaMateriaisService } from '../../services/entrada-materiais.service';\r\n//interfaces\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-notas-fiscais-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisNotasFiscaisCadastroComponent\r\n  implements OnInit {\r\n  noResult: boolean;\r\n  noFornecedor= true;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  formPesquisaFornecedor: FormGroup;\r\n  noAllMateriais = true;\r\n  formAllMateriais: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  modalRefPopup: BsModalRef;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  index: number;\r\n  noMaterial= true;\r\n  disabledForm = false;\r\n  \r\n  //loading\r\n  loading = false;\r\n  loadingNavBar = false;\r\n  loadingFornecedores:boolean;\r\n  loadingEmpresas:boolean;\r\n  loadingMateriais:boolean;\r\n  loadingAllMateriais: boolean;\r\n  loadingStatusRecebimento = false;\r\n  \r\n  //Interfaces\r\n  allMateriais: Array<FormData> = [];\r\n  materiais = [];\r\n  statusRecebimento = [];\r\n  fornecedores = [];\r\n  empresas = [];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 10;\r\n  totalItemsMaterial= 10;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  begin = 0;\r\n  end = 10;\r\n  /* Pagination */\r\n  \r\n  notasFiscais: Array<ILogisticaEntradaMateriaisNotasFiscais> = [];\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private modalService: BsModalService,\r\n    private localeService: BsLocaleService,\r\n    private statusRecebimentoService: LogisticaEntradaMateriaisStatusRecebimentoService,\r\n    private dateService: DateService,\r\n    private notasFiscaisService: LogisticaEntradaMateriaisNotasFiscaisService,\r\n    private entradaMateriaisService: LogisticaEntradaMateriaisService,\r\n    private titleService: TitleService,\r\n    private routerService: RouterService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n    this.getStatusRecebimento();\r\n    this.getEmpresas();\r\n    \r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id')) {\r\n      this.getNotasFiscais({ ID_LOGI_ENMA_NOFI: _params['id'] });\r\n      this.getNotasMateriais({ ID_LOGI_ENMA_NOFI: _params['id'], IN_STAT:'1' });\r\n    } else { \r\n      this.onAddMaterial();\r\n    } \r\n  }\r\n\r\n\r\n\r\n  getFornecedores(params?) {\r\n    const _params = params ?? {};\r\n    _params. IN_STAT=this.formPesquisaFornecedor.value['IN_STAT'];\r\n    _params.IN_PAGI = '0';\r\n    const _obj = this.formPesquisaFornecedor.value;\r\n    this.loadingFornecedores = true;\r\n    if (_obj['pesquisa']) _params[_obj['buscarPor']] = _obj['pesquisa'];\r\n    this.entradaMateriaisService\r\n      .getFornecedores(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingFornecedores = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            if(response.body['responseCode']=== 404){\r\n              this.pnotify.notice('Nenhum registro encontrado!');\r\n              this.fornecedores = [];\r\n              this.noFornecedor = true;\r\n              return;\r\n            }\r\n            this.fornecedores = response.body['result'];\r\n            this.totalItems = response.body['result'].length;\r\n            this.noFornecedor = false;\r\n\r\n          } else {\r\n            this.pnotify.notice('Nenhum registro encontrado!');\r\n            this.fornecedores = [];\r\n            this.noFornecedor = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.fornecedores = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getEmpresas(params?) {\r\n    this.loadingEmpresas=true;\r\n    this.entradaMateriaisService\r\n      .getEmpresas(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingEmpresas = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.empresas = response.body['result'];\r\n          } else {\r\n            this.pnotify.notice('Nenhum registro encontrado!');\r\n            this.empresas = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.empresas = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  getStatusRecebimento(params?) {\r\n    const _params = params ?? [];\r\n    _params.IN_STAT = '1';\r\n    _params.IN_PAGI = '0';\r\n\r\n    if(!this.activatedRoute.snapshot.params.hasOwnProperty('id')){\r\n      _params.IN_FHNC = '0';\r\n    }\r\n\r\n  this.loadingStatusRecebimento = true;\r\n  this.statusRecebimentoService\r\n    .getStatusRecebimento(_params)\r\n    .pipe(\r\n      finalize(() => {\r\n        this.loadingStatusRecebimento = false;\r\n      })\r\n    )\r\n    .subscribe((response) => {\r\n      if (response.status === 200) {\r\n        this.statusRecebimento = response.body['data'];\r\n      }else {\r\n        this.statusRecebimento = [];\r\n      }\r\n    },\r\n    (error) => {\r\n      this.pnotify.error('Não foi encontrado nenhum status de recebimento');\r\n    }\r\n  );\r\n  }\r\n\r\n  getNotasMateriais(params?) {\r\n    this.loadingNavBar = true;\r\n    this.loadingMateriais = true\r\n    this.notasFiscaisService\r\n      .getNotasMateriais(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n          this.loadingMateriais = false\r\n        })\r\n      )\r\n      .subscribe(async (response) => {\r\n        if (response.status !== 200) {\r\n          return;\r\n        }\r\n        const materiais = response['body']['data'];\r\n        const promise = () => materiais.forEach(() => this.onAddMaterial());\r\n        await Promise.resolve(promise());\r\n        this.form.get('materiais').patchValue(materiais)\r\n         \r\n      },\r\n      (error) => {\r\n        this.pnotify.error('Não foi encontrado nenhum material');\r\n      }\r\n    );\r\n  }\r\n\r\n  getNotasFiscais(params?: Partial<ILogisticaEntradaMateriaisNotasFiscais>) {\r\n    this.loading = true;\r\n    const _params = params ?? {};\r\n    this.notasFiscaisService\r\n      .getNotasFiscais(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status !== 200) {\r\n            this.noResult = true;\r\n            this.notasFiscais = [];\r\n            return;\r\n          }\r\n          const nota_ = response.body['data'][0];\r\n          nota_.DT_EMIS_NOTA_FISC = new Date(nota_.DT_EMIS_NOTA_FISC);\r\n          this.form.patchValue(nota_) \r\n          this.noResult = false;\r\n        },\r\n        (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Notas Fiscais',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  setFornecedor(fornecedor) {\r\n    this.form.get('NM_FORN').patchValue(fornecedor.NM_RAZA_SOCI);\r\n    this.form.controls['NM_FORN'].markAsDirty({ onlySelf: true })\r\n    this.form.get('UUID_FORN').patchValue(fornecedor.ID);\r\n    this.form.controls['UUID_FORN'].markAsDirty({ onlySelf: true })\r\n  }\r\n  \r\n  setMaterial(material) {\r\n    const _material = {...material,'IN_MATE': false}\r\n    const fg = this.form.get('materiais') as FormArray;\r\n    fg.controls[this.index].patchValue(_material);\r\n    fg.controls[this.index].get('UUID_MATE').patchValue(_material.ID);\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENMA_NOFI:[null],\r\n      ID_LOGI_ENTR_MATE_NOFI: [null],\r\n      NR_NOTA_FISC: [null, [Validators.required]],\r\n      NM_FORN: [{value: null, disabled: true},Validators.required],\r\n      UUID_FORN: [null],\r\n      DT_EMIS_NOTA_FISC:  [null, [Validators.required]],\r\n      ID_LOGI_ENMA_NOFI_STAT: [null],\r\n      NM_STAT: [null],\r\n      IN_FHNC: [null],\r\n      DS_LOGI_ENTR_MATE_UNID_MEDI: [null],\r\n      UUID_EMPR: [null],\r\n      NM_EMPR: [{value: null, disabled: true},Validators.required],\r\n      IN_STAT: ['1', [Validators.required]],\r\n      DS_OBSE: [null],\r\n      materiais: this.formBuilder.array([]),\r\n    });\r\n    this.formAllMateriais = this.formBuilder.group({\r\n      buscarPor: ['NM_MATE'],\r\n      pesquisa: [null, Validators.required],\r\n      ID_REFE_ERP:[null],\r\n      NM_MATE:[null],\r\n      NM_CLAS:[null],\r\n      NM_LINH:[null],\r\n      IN_STAT: ['1'],\r\n    });\r\n    this.formPesquisaFornecedor = this.formBuilder.group({\r\n      buscarPor: ['NM_RAZA_SOCI'],\r\n      pesquisa: [null, Validators.required],\r\n      ID_REFE_ERP: [null],\r\n      NM_RAZA_SOCI: [null],\r\n      NM_FANT: [null],\r\n      NR_CNPJ_CPF: [null],\r\n      IN_STAT: ['1'],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n\r\n      if (field.errors.hasOwnProperty('maxlength') && field.touched) {\r\n        return 'maxlength';\r\n      }\r\n\r\n      if (field.errors.hasOwnProperty('minlength') && field.touched) {\r\n        return 'minlength';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n  \r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  getAllMateriais(params) {\r\n    const _params = params ?? {};\r\n    _params. IN_STAT =this.formAllMateriais.value['IN_STAT'];\r\n    _params. TT_REGI_PAGI = 15;\r\n    const _obj = this.formAllMateriais.value;\r\n    this.loadingAllMateriais = true;\r\n    if (_obj['pesquisa']) _params[_obj['buscarPor']] = _obj['pesquisa'];\r\n    this.entradaMateriaisService\r\n      .getAllMateriais(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingAllMateriais = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.allMateriais = response.body['result'];\r\n            this.totalItemsMaterial = response.body['result'].length;\r\n            this.noAllMateriais = false;\r\n          } else {\r\n            this.pnotify.notice('Nenhum registro encontrado!');\r\n            this.allMateriais = [];\r\n            this.noAllMateriais = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.allMateriais = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  async postMateriais(id:number){\r\n\r\n    let request =[];\r\n    const materiais = this.formMateriais.getRawValue();\r\n\r\n    if (!materiais || !this.formMateriais.dirty ){\r\n      this.pnotify.notice('Nenhum material alterado!')\r\n      this.router.navigate(['./../'], {\r\n        relativeTo: this.activatedRoute,\r\n      });\r\n      return\r\n    }\r\n\r\n    if (!this.form.get('ID_LOGI_ENMA_NOFI').value){   \r\n      return;\r\n    }\r\n\r\n    const promise = () => {\r\n      const controls = Object.keys(this.formMateriais.controls)\r\n      controls.forEach(key => {\r\n        if(!this.formMateriais.controls[key].dirty){\r\n          return;\r\n        }\r\n        let material = this.formMateriais.get(key).value;\r\n        material['SEQU_MATE'] = materiais[key]['SEQU_MATE'];\r\n        material['ID_LOGI_ENMA_NOFI'] = id\r\n        request.push(this.notasFiscaisService.postMateriais(material))\r\n      })\r\n    }\r\n    await Promise.resolve(promise());\r\n    forkJoin(request)\r\n    .pipe(\r\n      finalize(() => {\r\n        this.loading = false;\r\n        this.loadingNavBar = false;\r\n      })\r\n    )\r\n    .subscribe(\r\n      (responses: Array<any>) => {\r\n        responses.forEach(response => {\r\n          if(response.status === 200 ){\r\n\r\n            this.pnotify.success('Material, salvo com sucesso!');\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else{\r\n            this.pnotify.error();\r\n          }\r\n        });\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      }\r\n    )\r\n  }\r\n  \r\n\r\n  postNotasFiscais() {\r\n    this.loadingNavBar = true;\r\n    let params = {}\r\n\r\n    if (this.form.get('ID_LOGI_ENMA_NOFI').value){\r\n      \r\n      Object.keys(this.form.controls).forEach(key => {\r\n        if(this.form.controls[key].dirty){\r\n          params[key] = this.form.get(key).value,\r\n          params['ID_LOGI_ENMA_NOFI'] = parseFloat(this.form.get('ID_LOGI_ENMA_NOFI').value);\r\n        } \r\n        return;\r\n      }) \r\n\r\n\r\n\r\n      if (!this.form.dirty &&  !this.form.controls['UUID_FORN'].dirty){\r\n        this.loadingNavBar = false;\r\n        this.pnotify.notice('Nenhuma alteração realizada!')\r\n        return;\r\n      }\r\n\r\n    } else{\r\n      params = JSON.parse(JSON.stringify(this.form.value)) ;\r\n      params['SG_ORIG'] ='MTCORP'\r\n    }\r\n\r\n    delete params['materiais'];\r\n\r\n\r\n    this.notasFiscaisService\r\n      .postNotasFiscais(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success();\r\n            const id = response.body['data'];\r\n            this.form.get('ID_LOGI_ENMA_NOFI').setValue(id);\r\n            this.postMateriais(id);\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, index?:number) {\r\n    this.index = index;\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-xl',\r\n    });\r\n  }\r\n  hideModal() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  get formMateriais() {\r\n    return this.form.get('materiais') as FormArray;\r\n  }\r\n  \r\n  onAddMaterial(index?:number) {\r\n    const sequencia = this.formMateriais.length + 1;\r\n    this.formMateriais.push(\r\n      this.formBuilder.group({\r\n        UUID_MATE:[null],\r\n        ID_LOGI_ENMA_NOFI_MATE:[null],\r\n        SEQU_MATE: [{value: sequencia , disabled: true}, [Validators.required, Validators.min(1)]],\r\n        DS_UNID_MEDI: ['TON', [Validators.required]],\r\n        TT_MATE: [null, [Validators.required, Validators.min(0.01)]],\r\n        DS_LOTE: [null],\r\n        NM_MATE: [{value: null , disabled: true}, [Validators.required]],\r\n      })\r\n    );\r\n  }\r\n\r\n  onDeleteMaterial(index: number) {\r\n    if (this.formMateriais.length === 0) {\r\n      this.pnotify.notice('Informe ao menos um material.');\r\n      return\r\n    }\r\n    let materiais = this.formMateriais.at(index).value;\r\n    materiais = {...materiais,'IN_STAT':'0',ID_LOGI_ENMA_NOFI:this.form.get('ID_LOGI_ENMA_NOFI').value}\r\n    if(!materiais['ID_LOGI_ENMA_NOFI_MATE']){\r\n      this.formMateriais.removeAt(index);\r\n      return;\r\n    }\r\n    this.loadingNavBar= true;\r\n    this.notasFiscaisService\r\n      .postMateriais(materiais)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loadingNavBar= false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response) => {\r\n            if (response.status === 200) {\r\n              this.formMateriais.removeAt(index);\r\n              this.pnotify.success();\r\n            } else {\r\n              this.pnotify.error();\r\n            }\r\n          },\r\n          (error) => {\r\n            this.pnotify.error();\r\n          }\r\n        );\r\n}\r\n\r\n  onNestedFieldError(formGroup: string, index: number, field: string) {\r\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n    field = nestedForm.controls[index].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n\r\n    if (nestedForm.controls[index].get(field).validator) {\r\n      let validationResult = nestedForm.controls[index]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n  \r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n\r\n\r\n  checkStatus(event,template: TemplateRef<any>){\r\n    if(!event){\r\n      return;\r\n    }\r\n\r\n    if( event.IN_FHNC == 1 && this.form.get('IN_FHNC').value != 1){\r\n      this.modalRefPopup = this.modalService.show(template, {\r\n        animated: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  hidePopup() {\r\n    this.form.get('ID_LOGI_ENMA_NOFI_STAT').reset()\r\n    this.modalRefPopup.hide();\r\n  }\r\n\r\n  gerarFicha() {\r\n    this.modalRefPopup.hide();\r\n    const id = this.form.get('ID_LOGI_ENMA_NOFI').value\r\n    const params = this.activatedRoute.snapshot.params;\r\n    const idSubmodulo = params?.idSubModulo;\r\n    const queryParams = btoa(JSON.stringify({ID_LOGI_ENMA_NOFI:id}))\r\n    window.open(`${window.location.origin}/#/logistica/entrada-materiais/${idSubmodulo}/fichas-nao-conformidade/novo?q=${queryParams}`,'blank')\r\n\r\n  }\r\n\r\n\r\n}\r\n","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmFkYS1tYXRlcmlhaXMvZmljaGEtY29uZm9ybWlkYWRlL29jb3JyZW5jaWFzL29jb3JyZW5jaWFzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmFkYS1tYXRlcmlhaXMvZmljaGEtY29uZm9ybWlkYWRlL29jb3JyZW5jaWFzL29jb3JyZW5jaWFzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uW2Rpc2FibGVkXXtcclxuICBjdXJzb3I6IG5vLWRyb3A7XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3VsLWZsdW1pbmVuc2UvZW50cmFkYS1tYXRlcmlhaXMvZW50cmFkYS1tYXRlcmlhaXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL3BhcmVjZXIvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { LogisticaEntradaMateriaisParecerService } from '../services/parecer.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaEntradaMateriaisParecer } from './../models/parecer';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-parecer-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisParecerListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  loadingParecer: boolean;\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  $activatedRouteSubscription: Subscription;\r\n  ORDE_BY = 'ID_LOGI_ENMA_FHNC_OCPR';\r\n  ORDE_TYPE = 'desc';\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false; \r\n\r\n  //VARIAVEIS\r\n  totalItens: any = [];\r\n  pareceres: Array<ILogisticaEntradaMateriaisParecer>;\r\n  parecer: Array<ILogisticaEntradaMateriaisParecer>;\r\n  parecerSelecionado: ILogisticaEntradaMateriaisParecer;\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  // Tipos de Situação dos Parecer (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private dateService: DateService,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private detailPanelService: DetailPanelService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private parecerService: LogisticaEntradaMateriaisParecerService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.onDetailPanelEmitter();\r\n    this.getParecer();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n          this.getParecers(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENMA_FHNC_OCPR: [null],\r\n      NM_PARE: [null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      NR_MATR: [null],\r\n      NM_USUA: [null],\r\n      DT_INCL: [null],\r\n      DT_ATUA: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n      ORDE_BY: [this.ORDE_BY],\r\n      ORDE_TYPE: [this.ORDE_TYPE],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Parecer',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('ORDE_TYPE').setValue(this.ORDE_TYPE);\r\n    this.form.get('ORDE_BY').setValue(this.ORDE_BY);\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onDetails(parecer: ILogisticaEntradaMateriaisParecer): void {\r\n    this.detailPanelService.show();\r\n    this.parecerSelecionado = parecer;\r\n    this.detailPanelService.loadedFinished(false);\r\n  }\r\n\r\n  getParecers(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.parecerService\r\n      .getParecer(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.pareceres = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.pareceres = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(parecer: ILogisticaEntradaMateriaisParecer): string {\r\n    let borderClass: string;\r\n\r\n    if (parecer.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (parecer.IN_STAT == 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(params: ILogisticaEntradaMateriaisParecer) {\r\n    const stat = params.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          params.IN_STAT = stat;\r\n          return this.parecerService.postParecer(params);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  getParecer() {\r\n    this.loadingParecer = true;\r\n    this.parecerService\r\n      .getParecer({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingParecer = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.parecer = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      });\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.pareceres.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Parecer${dataExport}`);\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.ORDE_BY === column) {\r\n      if (this.ORDE_TYPE == 'desc') {\r\n        this.ORDE_TYPE = 'asc';\r\n      } else if (this.ORDE_TYPE == 'asc') {\r\n        this.ORDE_TYPE = 'desc';\r\n      }\r\n    } else {\r\n      this.ORDE_BY = column;\r\n      this.ORDE_TYPE = 'asc';\r\n    }\r\n    this.onFilter();\r\n  }\r\n}\r\n","import { PdfService } from './../../../../../shared/services/core/pdf.service';\r\nimport { ILogisticaEntradaMateriaisTiposConformidade } from './../../tipos-conformidade/models/tiposConformidade';\r\nimport { LogisticaEntradaMateriaisTiposConformidadeService } from './../../tipos-conformidade/services/tipos-conformidade.service';\r\nimport { ILogisticaEntradaMateriaisOcorrencias } from './../models/ocorrencias';\r\nimport { LogisticaEntradaMateriaisFichaConformidadeService } from './../services/ficha-conformidade.service';\r\nimport { ILogisticaEntradaMateriaisDocumentos } from '../models/documentos';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Input, TemplateRef, Output } from '@angular/core';\r\n//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/services/core/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef, BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaEntradaMateriaisFichaConformidade } from './../models/fichaConformidade';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-ficha-conformidade-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisFichaConformidadeListaComponent\r\n  implements OnInit, OnDestroy {\r\n   \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  modalRef1: BsModalRef;\r\n  modalRef2: BsModalRef;\r\n  form: FormGroup;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false; \r\n  loadingImagens = false;\r\n  loadingMateriais = false;\r\n  loadingDocumentos = false;\r\n  loadingOcorrencias: boolean;\r\n  loadingTiposConformidade = false;\r\n  loadingDocumentosOcorrencias:boolean;\r\n  loadingResponsaveisOcorrencias:boolean;\r\n  //VARIAVEIS\r\n  noResponsaveisOcorrencia: boolean;\r\n  noMateriais: boolean;\r\n  noOcorrencias: boolean;\r\n  hiddenModal: boolean = false;\r\n  fichaId:number;\r\n  totalImagens:number;\r\n  totalDocumentos:number;\r\n  allFichas: any = [];\r\n  materiais =[];\r\n  imagens: Array<ILogisticaEntradaMateriaisDocumentos>;\r\n  documentos: Array<ILogisticaEntradaMateriaisDocumentos>;\r\n  documentosOcorrencia = {};\r\n  responsaveisOcorrencia = {};\r\n  tiposConformidade: Array<ILogisticaEntradaMateriaisTiposConformidade>;\r\n  ocorrencias: Array<ILogisticaEntradaMateriaisOcorrencias>;\r\n  fichasConformidade: Array<ILogisticaEntradaMateriaisFichaConformidade>;\r\n  fichaSelecionada: ILogisticaEntradaMateriaisFichaConformidade;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  ORDE_BY = 'ID_LOGI_ENMA_FHNC';\r\n  ORDE_TYPE = 'desc';\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  disabledButton:boolean\r\n\r\n  // Tipos de Situação das Fichas de  não Conformidade (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '0',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n    // Tipos de Status dos Pareceres\r\n    status = [\r\n      {\r\n        cod: '1',\r\n        nome: 'Finalizada',\r\n      },\r\n      {\r\n        cod: '0',\r\n        nome: 'Em Andamento',\r\n      },\r\n    ];\r\n\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private fichasConformidadeService: LogisticaEntradaMateriaisFichaConformidadeService,\r\n    private tiposConformidadeService: LogisticaEntradaMateriaisTiposConformidadeService,\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private xlsxService: XlsxService,\r\n    private pdfService: PdfService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private modalService: BsModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.getTiposConformidade();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n    if(this.modalRef1 != undefined){\r\n      this.modalRef1.hide();\r\n    }\r\n    if(this.modalRef2 != undefined){\r\n      this.modalRef2.hide();\r\n    }\r\n  }\r\n  onFecharModal(event){\r\n    if(event == true){\r\n      this.hideModalOcorrencias()\r\n      this.getOcorrencias({ID_LOGI_ENMA_FHNC:  this.fichaSelecionada['ID_LOGI_ENMA_FHNC'],IN_STAT: '1'});\r\n      this.fichasConformidadeService\r\n      .getFichasConformidade({ID_LOGI_ENMA_FHNC:  this.fichaSelecionada['ID_LOGI_ENMA_FHNC']})\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.fichaSelecionada = response.body['data'][0];\r\n          } \r\n          return\r\n        },\r\n      );\r\n    } \r\n    return\r\n  }\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n        this.getFichasConformidade(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      DT_INIC: new Date(),\r\n      DT_FINA: new Date(),\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENMA_FHNC: [null],\r\n      ID_LOGI_ENMA_FHNC_TIPO: [null],\r\n      NM_TIPO: [null],\r\n      IN_STAT: [null],\r\n      DS_UNID_MEDI: [null],\r\n      DS_OBSE: [null],\r\n      NM_MATE: [null],\r\n      NM_FORN: [null],\r\n      IN_CONC: [null],\r\n      DS_LOTE: [null],\r\n      NR_NOTA_FISC: [null],\r\n      MATR_USUA_CADA: [null],\r\n      DS_USUA_CADA: [null],\r\n      DT_INCL: [null],\r\n      PAGI: [1],\r\n      DT_INIC: [new Date()],\r\n      DT_FINA: [new Date()],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n      ORDE_BY: [this.ORDE_BY],\r\n      ORDE_TYPE: [this.ORDE_TYPE],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Fichas de Não Conformidade',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('ORDE_TYPE').setValue(this.ORDE_TYPE);\r\n    this.form.get('ORDE_BY').setValue(this.ORDE_BY);\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getFichasConformidade(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.fichasConformidadeService\r\n      .getFichasConformidade(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.fichasConformidade = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.fichasConformidade = [];\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.noResult = true;\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        });\r\n  }\r\n\r\n  getRelatorio(params?) {\r\n    params = this.getParams();\r\n    this.loadingNavBar = true;\r\n    this.fichasConformidadeService\r\n      .getRelatorio(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          \r\n          if(response.status !== 200){\r\n            this.pnotify.notice('Nenhum registro localizado.');\r\n            return\r\n          }\r\n\r\n          this.xlsxService.export({data: response.body['data']})\r\n\r\n        },\r\n        error => {\r\n          const message = error?.error?.message;\r\n          message ? this.pnotify.error(message) : this.pnotify.error();\r\n        });\r\n  }\r\n\r\n  getMateriais(params?) {\r\n    this.loadingMateriais = true;\r\n    this.fichasConformidadeService\r\n      .getFormMaterial(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingMateriais = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.materiais = response.body['data'];\r\n          this.noMateriais =false;\r\n        }else {\r\n          this.materiais = [];\r\n          this.noMateriais= true;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.pnotify.error('Não foi encontrado nenhum material');\r\n        this.noMateriais = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  getImagens(params?) {\r\n    this.loadingImagens = true;\r\n    this.fichasConformidadeService.getDocumento(params).subscribe(\r\n      (response) => {\r\n        if (response.status === 200) {\r\n          this.imagens = response.body['data'];\r\n          this.totalImagens = response.body['data'].length\r\n          this.loadingImagens = false;\r\n        } else {\r\n          this.imagens = [];\r\n          this.totalImagens = 0;\r\n          this.loadingImagens = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.imagens = [];\r\n        this.loadingImagens = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  getDocumentoOcorrencia(params: ILogisticaEntradaMateriaisOcorrencias) {\r\n    this.loadingDocumentosOcorrencias = true;\r\n    this.fichasConformidadeService\r\n      .getDocumentoOcorrencia(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingDocumentosOcorrencias = false;\r\n        })\r\n      )\r\n      .subscribe(async (response) => {\r\n        if (response.status !== 200) {\r\n          return;\r\n        }\r\n        const documentos = response['body']['data'];\r\n        this.documentosOcorrencia[params.ID_LOGI_ENMA_FHNC_OCOR] = documentos;\r\n      },\r\n      (error) => {\r\n        this.pnotify.error('Não foi encontrado nenhum documento');\r\n      }\r\n    );\r\n  }\r\n\r\n  getResponsaveisOcorrencia(params: ILogisticaEntradaMateriaisOcorrencias) {\r\n    this.loadingResponsaveisOcorrencias = true;\r\n    this.fichasConformidadeService\r\n      .getResponsaveisOcorrencia(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingResponsaveisOcorrencias = false;\r\n        })\r\n      )\r\n      .subscribe(async (response) => {\r\n        if (response.status !== 200) {\r\n        this.noResponsaveisOcorrencia = true;\r\n          return;\r\n        }\r\n        const responsaveis = response['body']['data'];\r\n        this.noResponsaveisOcorrencia = false;\r\n        this.responsaveisOcorrencia[params.ID_LOGI_ENMA_FHNC_OCOR] = responsaveis;\r\n      },\r\n      (error) => {\r\n        this.pnotify.error('Não foi encontrado nenhum responsável');\r\n        this.noResponsaveisOcorrencia = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  getOcorrencias(params?) {\r\n    this.loadingOcorrencias = true;\r\n    this.disabledButton = true;\r\n    params = {...params, ORDE_TYPE:'desc'}\r\n    this.fichasConformidadeService.getOcorrencias(params)\r\n    .subscribe(\r\n      (response) => {\r\n        if (response.status === 200) {\r\n          this.ocorrencias = response.body['data'];\r\n          if(response.body['total']){\r\n            this.disabledButton = false;\r\n          }\r\n          this.noOcorrencias = false;\r\n          this.ocorrencias.forEach(ocorrencia => {\r\n            this.getDocumentoOcorrencia(ocorrencia)\r\n            this.getResponsaveisOcorrencia(ocorrencia)\r\n            this.loadingOcorrencias = false;\r\n          });\r\n        } else {\r\n          this.ocorrencias = [];\r\n          this.noOcorrencias = true;\r\n          this.loadingOcorrencias = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.ocorrencias = [];\r\n        this.noOcorrencias = true;\r\n        this.loadingOcorrencias = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  getDocumentos(params?) {\r\n    this.loadingDocumentos = true;\r\n    this.fichasConformidadeService.getDocumento(params).subscribe(\r\n      (response) => {\r\n        if (response.status === 200) {\r\n          this.documentos = response.body['data'];\r\n          this.totalDocumentos = response.body['data'].length\r\n          this.loadingDocumentos = false;\r\n        } else {\r\n          this.documentos = [];\r\n          this.totalDocumentos = 0;\r\n          this.loadingDocumentos = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.documentos = [];\r\n        this.loadingDocumentos = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  finalizarFicha(ocorrencia){\r\n    const params = ocorrencia ?? {};\r\n    const _params = {...params,IN_CONC: 1}\r\n    this.fichasConformidadeService\r\n    .postFichasConformidade(_params)\r\n    .subscribe(\r\n      (response: any) => {\r\n        if (response.status === 200) {\r\n          this.pnotify.success();\r\n          this.hideModal()\r\n          this.getFichasConformidade();\r\n        } else {\r\n          this.pnotify.error();\r\n        }\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      }\r\n    );\r\n}\r\n\r\n\r\n  openModal(template: TemplateRef<any>, ficha?) {\r\n    this.noOcorrencias =true;\r\n    this.hiddenModal = false;\r\n    const _params = {ID_LOGI_ENMA_FHNC: ficha['ID_LOGI_ENMA_FHNC'],IN_STAT: '1'}\r\n    const _paramsImagem = {..._params, TP_DOCU: 'IMAGEM'}\r\n    const _paramsDocumento = {..._params, TP_DOCU: 'DOCUMENTO' }\r\n    this.fichaSelecionada = ficha;\r\n    this.getImagens(_paramsImagem)\r\n    this.getDocumentos(_paramsDocumento)\r\n    this.getMateriais(_params)\r\n    this.getOcorrencias(_params)\r\n    this.modalRef1 = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-xl',\r\n    });\r\n  }\r\n\r\n  hideModal() {\r\n    this.modalRef1.hide();\r\n  }\r\n\r\n  openModalOcorrencias(template: TemplateRef<any>) {\r\n    const id = this.fichaSelecionada['ID_LOGI_ENMA_FHNC']\r\n    this.fichaId = id\r\n    this.hiddenModal = true;\r\n    this.modalRef2 = this.modalService.show(template, {\r\n      animated: true,\r\n      class: 'modal-lg',\r\n      backdrop: 'static',\r\n    });\r\n  }\r\n  hideModalOcorrencias() {\r\n    this.hiddenModal = false\r\n    this.modalRef2.hide();\r\n  }\r\n\r\n  onDownload(params?) {\r\n    this.pnotify.notice('Documento PDF será gerado em breve!')\r\n    const _id = params['ID_LOGI_ENMA_FHNC'];\r\n    this.pdfService.download('ficha-pdf', `Ficha_Nao_Conformidade - ${_id}`);\r\n  }\r\n\r\n  onPrint(){\r\n    \r\n    window.print();\r\n  }\r\n\r\n\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(status: ILogisticaEntradaMateriaisFichaConformidade): string {\r\n    let borderClass: string;\r\n\r\n    if (status.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (status.IN_STAT == 0) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(status: ILogisticaEntradaMateriaisFichaConformidade) {\r\n    const stat = status.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n          this.loadingNavBar = true;\r\n          status.IN_STAT = stat;\r\n          return this.fichasConformidadeService.postFichasConformidade(status);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          status.IN_STAT = status.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getTiposConformidade(params?) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = '1';\r\n\r\n  this.loadingTiposConformidade = true;\r\n  this.tiposConformidadeService\r\n    .getTiposConformidade(_params)\r\n    .pipe(\r\n      finalize(() => {\r\n        this.loadingTiposConformidade = false;\r\n      })\r\n    )\r\n    .subscribe((response) => {\r\n      if (response.status === 200) {\r\n        this.tiposConformidade = response.body['data'];\r\n      }else {\r\n        this.tiposConformidade = [];\r\n      }\r\n    },\r\n    (error) => {\r\n      this.pnotify.error('Não foi encontrado nenhum status de recebimento');\r\n    }\r\n  );\r\n  }\r\n\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.ORDE_BY === column) {\r\n      if (this.ORDE_TYPE == 'desc') {\r\n        this.ORDE_TYPE = 'asc';\r\n      } else if (this.ORDE_TYPE == 'asc') {\r\n        this.ORDE_TYPE = 'desc';\r\n      }\r\n    } else {\r\n      this.ORDE_BY = column;\r\n      this.ORDE_TYPE = 'asc';\r\n    }\r\n    this.onFilter();\r\n  }\r\n\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n\\r\\n<app-header appTitle=\\\"Entrada de materiais\\\">\\r\\n</app-header>\\r\\n<div class=\\\"row\\\" id=\\\"application-body\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-md-3\\\" *ngFor=\\\"let atividade of atividades\\\">\\r\\n        <card-button\\r\\n          [icon]=\\\"atividade.iconeAtividade\\\"\\r\\n          [text]=\\\"atividade.nomeAtividade\\\"\\r\\n          [routerLink]=\\\"[atividade.rotaAtividade]\\\">\\r\\n        </card-button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaEntradaMateriaisFichaConformidade } from '../models/fichaConformidade';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaEntradaMateriaisFichaConformidadeService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n// -------------------FICHAS DE NÃO CONFORMIDADE------------------\r\n  getFichasConformidade(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getRelatorio(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/relatorio`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postFichasConformidade(params: ILogisticaEntradaMateriaisFichaConformidade) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getNotasFiscaisMateriais(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/materiais`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getExport(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/relatorio`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  // -------------------DOCUMENTOS  DA FICHA ------------------\r\n  getDocumento(params) {\r\n    return this.http.get(`${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/documentos`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n\r\n  postDocumento(params, ID_LOGI_ENMA_FHNC: number) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/documentos?ID_LOGI_ENMA_FHNC=${ID_LOGI_ENMA_FHNC}`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  putDocumento(params) {\r\n    return this.http.put(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/documentos`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n  \r\n// -------------------DOCUMENTOS  DA OCORRENCIA ------------------\r\n  getDocumentoOcorrencia(params) {\r\n    return this.http.get(`${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/ocorrencias/documentos`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n\r\n  postDocumentoOcorrencia(params, ID_LOGI_ENMA_FHNC_OCOR: number) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/ocorrencias/documentos?ID_LOGI_ENMA_FHNC_OCOR=${ID_LOGI_ENMA_FHNC_OCOR}`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  putDocumentoOcorrencia(params) {\r\n    return this.http.put(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/ocorrencias/documentos`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  // -------------------MATERIAIS------------------\r\n  getFormMaterial(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/materiais`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postMateriais(notas) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/materiais`,\r\n      notas,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  // -------------------OCORRENCIAS------------------\r\n  getOcorrencias(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/ocorrencias`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postOcorrencias(params: ILogisticaEntradaMateriaisFichaConformidade) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/ocorrencias`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  // -------------------RESPONSÁVEIS------------------\r\n  postResponsaveis(params: ILogisticaEntradaMateriaisFichaConformidade) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/ocorrencias/responsaveis`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getResponsaveisOcorrencia(params) {\r\n    return this.http.get(`${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/ocorrencias/responsaveis`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n\r\n  getUsuarios(params?) {\r\n    return this.http.get(\r\n      `${this.API}/core/mtcorp/usuarios`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n  getResponsaveis(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/ficha-nao-conformidade/responsaveis`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\nimport {\r\n  TooltipModule,\r\n  PaginationModule,\r\n  BsDatepickerModule\r\n} from 'ngx-bootstrap';\r\n\r\nimport { SulFluminenseEntradaMateriaisRoutingModule } from './entrada-materiais-routing.module';\r\nimport { SulFluminenseEntradaMateriaisComponent } from './entrada-materiais.component';\r\nimport { SulFluminensePainelBobinasQualidadeComponent } from './painel-bobinas-qualidade/painel-bobinas-qualidade.component';\r\nimport { SulFluminenseConsultaRecebimentoBobinasComponent } from './consulta-recebimento-bobinas/consulta-recebimento-bobinas.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SulFluminenseEntradaMateriaisComponent,\r\n    SulFluminensePainelBobinasQualidadeComponent,\r\n    SulFluminenseConsultaRecebimentoBobinasComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SulFluminenseEntradaMateriaisRoutingModule,\r\n    NotFoundModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    TooltipModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    TemplatesModule\r\n  ]\r\n})\r\nexport class SulFluminenseEntradaMateriaisModule {}\r\n","export default \"<fieldset class=\\\"border rounded shadow-sm col-10 pt-2 pb-2 mx-auto\\\">\\r\\n  <legend>Documentos</legend>\\r\\n  <div class=\\\"form-group border rounded p-1\\\">\\r\\n    <div>\\r\\n      <label for=\\\"documento\\\" class=\\\"w-100 d-flex justify-content-between align-items-center m-0 py-1\\\" style=\\\"cursor: pointer;\\\">\\r\\n        <span>Novo Documento</span>\\r\\n      </label>\\r\\n      <input\\r\\n        id=\\\"documento\\\"\\r\\n        type=\\\"file\\\"\\r\\n        (change)=\\\"appendFile($event.target.files)\\\"\\r\\n        class=\\\"d-none\\\"\\r\\n        >\\r\\n    </div>\\r\\n  </div>\\r\\n  <ul>\\r\\n    <li class=\\\"d-flex justify-content-between\\\" *ngFor=\\\"let item of documentos ; let index = index\\\">\\r\\n      <div>{{ item.NM_DOCU | uppercase }}</div>\\r\\n      <div>\\r\\n        <a\\r\\n          [hidden]=\\\"!item.ID_LOGI_ENMA_FHNC_DOCU\\\"\\r\\n          [href]=\\\"item.LINK\\\"\\r\\n          target=\\\"_blank\\\"\\r\\n          class=\\\"btn-icon-sm mx-2 text-black\\\"\\r\\n          tooltip=\\\"visualizar\\\"\\r\\n        >\\r\\n          <i class=\\\"far fa-eye\\\"></i>\\r\\n        </a>\\r\\n        <button\\r\\n          class=\\\"btn-icon-sm mx-2 hover\\\"\\r\\n          tooltip=\\\"excluir\\\"\\r\\n          (click)=\\\"onRemove(item, index)\\\"\\r\\n          >\\r\\n          <i class=\\\"fas fa-trash\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n</fieldset>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"PAINEL DE APROVAÇÕES\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\" \\r\\n    (click)=\\\"onExport()\\\"\\r\\n    [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n    Exportar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\" \\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-1 pl-0\\\">\\r\\n              <label for=\\\"ID_LOGI_ENTR_MATE_APRO\\\">ID</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"ID_LOGI_ENTR_MATE_APRO\\\"\\r\\n                formControlName=\\\"ID_LOGI_ENTR_MATE_APRO\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"DT_INIC\\\">Data Inicial</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"DT_INIC\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"DT_INIC\\\"\\r\\n                >\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"DT_FINA\\\">Data Final</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"DT_FINA\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"DT_FINA\\\"\\r\\n                >\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n              <label for=\\\"NM_LOGI_ENTR_MATE_NOME_SOLI\\\">Solicitante</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"NM_LOGI_ENTR_MATE_NOME_SOLI\\\"\\r\\n                formControlName=\\\"NM_LOGI_ENTR_MATE_NOME_SOLI\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1 pl-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" >ID</th>\\r\\n              <th scope=\\\"col\\\" >Solicitante</th>\\r\\n              <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Data da Solicitação</th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:40px\\\" ></th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:40px\\\" ></th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:40px\\\" ></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let status of solicitacoes\\\"  [class.table-active]=\\\"status?.ID_LOGI_ENTR_MATE_APRO == solicitacaoSelecionada?.ID_LOGI_ENTR_MATE_APRO && showDetailPanel\\\">\\r\\n              <td (click)=\\\"onDetails(status)\\\" [ngClass]=\\\"classStatusBorder(status)\\\">\\r\\n              {{status.ID_LOGI_ENTR_MATE_APRO }}\\r\\n              </td>\\r\\n              <td (click)=\\\"onDetails(status)\\\">{{ status.NM_LOGI_ENTR_MATE_NOME_SOLI | uppercase}}</td>\\r\\n              <td (click)=\\\"onDetails(status)\\\" [hidden]=\\\"showDetailPanel\\\">{{ status.DT_APROV }}</td>\\r\\n              <td >\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Aprovar\\\" placement=\\\"left\\\" container=\\\"body\\\" *ngIf=\\\"status.IN_STAT == 3\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"requestSuccess(status)\\\">\\r\\n                    <i class=\\\" text-success fas fa-thumbs-up\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n              <td >\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Reprovar\\\" placement=\\\"left\\\" container=\\\"body\\\" *ngIf=\\\"status.IN_STAT == 3\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"requestFail(status)\\\">\\r\\n                    <i class=\\\" text-danger fas fa-thumbs-down\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n              <td>\\r\\n                <span   tooltip=\\\"Detalhe da Solicitação\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\r\\n                    <i class=\\\"fas fa-search\\\" (click)=\\\"openModal(detalhesSolicitacao, status)\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\" [hidden]=\\\"!showDetailPanel || !viewHistorico\\\">\\r\\n      <detail-panel panelTitle=\\\"Histórico de alteração\\\">\\r\\n        <div class=\\\"d-flex justify-content-center mb-3\\\" [hidden]=\\\"!loadingDetails\\\">\\r\\n          <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n        </div>\\r\\n        <custom-table [hidden]=\\\"loadingDetails\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n              <!-- <th scope=\\\"col\\\">Alteração</th> -->\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\r\\n              <td class=\\\"text-center\\\">{{ alteracao.DT_INCL | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <td>{{ alteracao.DS_USUA_CADA | uppercase }}</td>\\r\\n              <!-- <td>{{ alteracao.nomeUsuario | uppercase }}</td> -->\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\" [hidden]=\\\"!showDetailPanel || viewHistorico\\\">\\r\\n      <detail-panel panelTitle=\\\"Aguardando Resposta\\\">\\r\\n        <div class=\\\"d-flex justify-content-center mb-3\\\" [hidden]=\\\"!loadingDetails\\\">\\r\\n          <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"text-center\\\" [hidden]=\\\"loadingDetails\\\">\\r\\n          <blockquote class=\\\"blockquote mx-5\\\">\\r\\n            <p class=\\\"text-danger mb-0\\\">{{solicitacaoSelecionada?.DS_LOGI_ENTR_MATE_MOTI | uppercase}}</p>\\r\\n            <footer class=\\\"blockquote-footer\\\">\\r\\n              <small class=\\\"text-muted\\\">\\r\\n                {{solicitacaoSelecionada?.DT_SOLI }}\\r\\n              </small>\\r\\n            </footer>\\r\\n            <footer class=\\\"blockquote-footer\\\">\\r\\n              <small class=\\\"text-muted\\\">\\r\\n                  <cite >{{solicitacaoSelecionada?.DS_SOLI }}</cite>\\r\\n              </small>\\r\\n            </footer>\\r\\n          </blockquote>\\r\\n        </div>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n  <ng-template #detalhesSolicitacao>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Detalhes da Solicitação #{{solicitacaoSelecionada?.ID_LOGI_ENTR_MATE_APRO}}</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <div class=\\\"spinner-border text-primary mr-1\\\" role=\\\"status\\\" *ngIf=\\\"loadingModal\\\">\\r\\n          <span class=\\\"sr-only\\\">Loading...</span>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <blockquote class=\\\"blockquote mx-5\\\">\\r\\n          <p class=\\\"text-danger mb-0\\\">{{solicitacaoSelecionada?.DS_LOGI_ENTR_MATE_MOTI | uppercase}}</p>\\r\\n          <footer class=\\\"blockquote-footer\\\">\\r\\n            <small class=\\\"text-muted\\\">\\r\\n              {{solicitacaoSelecionada?.DT_SOLI }}\\r\\n            </small>\\r\\n          </footer>\\r\\n          <footer class=\\\"blockquote-footer\\\">\\r\\n            <small class=\\\"text-muted\\\">\\r\\n                <cite >{{solicitacaoSelecionada?.DS_SOLI }}</cite>\\r\\n            </small>\\r\\n          </footer>\\r\\n        </blockquote>\\r\\n      </div>\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <span class=\\\"mr-3\\\"  [tooltip]=\\\"viewDetailsSolicitante == 1 ? 'Exibir Detalhes do Solicitante' : 'Ocultar Detalhes do Solicitante'\\\" placement=\\\"right\\\" container=\\\"body\\\">\\r\\n          <button type=\\\"button\\\"  [hidden]=\\\"loadingModal\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"detailsSolicitante($event)\\\">\\r\\n            <i  [ngClass]=\\\"viewDetailsSolicitante == '1' ? 'fas fa-eye' : 'fas fa-eye-slash'\\\"></i>\\r\\n          </button>\\r\\n        </span>\\r\\n        <hr>\\r\\n      </div>\\r\\n      <div class=\\\"col-12\\\" [hidden]=\\\"loadingModal || viewDetailsSolicitante == 1\\\">\\r\\n        <div class=\\\"d-flex justify-content-between col\\\" >\\r\\n          <div>\\r\\n            <div>\\r\\n              <h6 class=\\\"title pull-left\\\">Detalhes do Solicitante</h6>\\r\\n            </div>\\r\\n            <img src=\\\"data:image/png;base64,{{ contato?.FOTO }}\\\" class=\\\"rounded-circle\\\" alt=\\\"\\\" height=\\\"200px\\\" *ngIf=\\\"contato?.FOTO != null\\\">\\r\\n            <i class=\\\"fas fa-user-circle text-muted\\\" *ngIf=\\\"contato?.FOTO == null || contato?.FOTO == ''\\\" style=\\\"font-size: 8rem;\\\"></i>\\r\\n          </div>\\r\\n          <div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Nome</label>\\r\\n              <span class=\\\"d-block\\\" *ngIf=\\\"contato?.NM_USUA != null || contato?.NM_USUA == ''\\\">{{ contato?.NM_USUA }}</span>\\r\\n              <span class=\\\"d-block\\\" *ngIf=\\\"contato?.NM_USUA == null || contato?.NM_USUA == ''\\\">NÃO INFORMADO</span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>E-mail</label>\\r\\n              <span class=\\\"d-block\\\" *ngIf=\\\"contato?.MAIL != null || contato?.MAIL == ''\\\">{{ contato?.MAIL }}</span>\\r\\n              <span class=\\\"d-block\\\" *ngIf=\\\"contato?.MAIL == null || contato?.MAIL == ''\\\">NÃO INFORMADO</span>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Telefone</label>\\r\\n              <span class=\\\"d-block\\\" *ngIf=\\\"contato?.TELE != null || contato?.TELE != ''\\\">{{ contato?.TELE }}</span>\\r\\n              <span class=\\\"d-block\\\" *ngIf=\\\"contato?.TELE == null || contato?.TELE == ''\\\">NÃO INFORMADO</span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Cargo</label>\\r\\n              <span class=\\\"d-block\\\" *ngIf=\\\"contato?.CARG != null || contato?.CARG != ''\\\">{{ contato?.CARG }}</span>\\r\\n              <span class=\\\"d-block\\\" *ngIf=\\\"contato?.CARG == null || contato?.CARG == ''\\\">NÃO INFORMADO</span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Departamento</label>\\r\\n              <span class=\\\"d-block\\\" *ngIf=\\\"contato?.DEPA != null || contato?.DEPA != ''\\\">{{ contato?.DEPA }}</span>\\r\\n              <span class=\\\"d-block\\\" *ngIf=\\\"contato?.DEPA == null || contato?.DEPA == ''\\\">NÃO INFORMADO</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n      </div>\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"form-row justify-content-center  text-center\\\">\\r\\n          <div class=\\\"form-group col-lg-2\\\">\\r\\n            <label>ID</label>\\r\\n            <div *ngIf=\\\"solicitacaoSelecionada?.ID_LOGI_ENTR_MATE_NF == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"solicitacaoSelecionada?.ID_LOGI_ENTR_MATE_NF != null\\\">{{solicitacaoSelecionada?.ID_LOGI_ENTR_MATE_NF}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label>Fornecedor</label>\\r\\n            <div *ngIf=\\\"solicitacaoSelecionada?.DS_LOGI_ENTR_MATE_FORN == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"solicitacaoSelecionada?.DS_LOGI_ENTR_MATE_FORN != null\\\">{{ solicitacaoSelecionada?.DS_LOGI_ENTR_MATE_FORN}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label>Status de Recebimento</label>\\r\\n            <div *ngIf=\\\"solicitacaoSelecionada?.DS_LOGI_ENTR_MATE_STAT_RECE == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"solicitacaoSelecionada?.DS_LOGI_ENTR_MATE_STAT_RECE != null\\\"> {{solicitacaoSelecionada?.DS_LOGI_ENTR_MATE_STAT_RECE}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-4\\\">\\r\\n            <label>Depósito</label>\\r\\n            <div *ngIf=\\\"solicitacaoSelecionada?.DS_LOGI_ENTR_MATE_DEPO == null\\\">NÃO INFORMADO</div>\\r\\n            <div *ngIf=\\\"solicitacaoSelecionada?.DS_LOGI_ENTR_MATE_DEPO != null\\\">{{ solicitacaoSelecionada?.DS_LOGI_ENTR_MATE_DEPO }}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] =\\\"solicitacaoSelecionada.IN_STAT != 3\\\">\\r\\n          <div class=\\\"form-row justify-content-center\\\">\\r\\n            <div class=\\\"form-group col pl-0\\\">\\r\\n              <label for=\\\"motivos\\\">Motivo</label>\\r\\n                <ng-select\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"true\\\"\\r\\n                  [items]=\\\"motivos\\\"\\r\\n                  [virtualScroll]=\\\"true\\\"\\r\\n                  dropdownPosition=\\\"bottom\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  labelForId=\\\"ID_LOGI_ENTR_MATE_MOTI\\\"\\r\\n                  bindLabel=\\\"DS_LOGI_ENTR_MATE_MOTI\\\"\\r\\n                  bindValue=\\\"ID_LOGI_ENTR_MATE_MOTI\\\"\\r\\n                  id=\\\"ID_LOGI_ENTR_MATE_MOTI\\\"\\r\\n                  formControlName=\\\"ID_LOGI_ENTR_MATE_MOTI\\\" \\r\\n                  [ngClass]=\\\"onFieldError('ID_LOGI_ENTR_MATE_MOTI') + ' ' + onFieldRequired('ID_LOGI_ENTR_MATE_MOTI')\\\"\\r\\n                  >\\r\\n                </ng-select>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('ID_LOGI_ENTR_MATE_MOTI')\\\" message=\\\"Motivo é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row justify-content-center\\\">\\r\\n            <div class=\\\"form-group col pl-0\\\">\\r\\n              <label for=\\\"DS_OBSE\\\" >Descrição:</label>\\r\\n              <textarea \\r\\n                class=\\\"form-control\\\" \\r\\n                id=\\\"DS_OBSE\\\" \\r\\n                formControlName=\\\"DS_OBSE\\\" \\r\\n                rows=\\\"3\\\"\\r\\n                [ngClass]=\\\"onFieldError('DS_OBSE') + ' ' + onFieldRequired('DS_OBSE')\\\">\\r\\n              </textarea>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('DS_OBSE')\\\" message=\\\"Descrição é obrigatório e deve conter no mínimo 3 dígitos.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n        <div  class=\\\"form-row justify-content-center text-center\\\" [hidden] =\\\"solicitacaoSelecionada.IN_STAT != 3\\\">\\r\\n          <button \\r\\n            type=\\\"button\\\" \\r\\n            class=\\\"btn btn-default btn-lg m-2\\\"\\r\\n            (click)=\\\"changeType()\\\"\\r\\n            [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n          >\\r\\n            <span aria-hidden=\\\"true\\\">\\r\\n             <i class=\\\" text-success fas fa-thumbs-up\\\"></i>\\r\\n            </span>Aprovar\\r\\n          </button>\\r\\n          <button \\r\\n            type=\\\"button\\\" \\r\\n            class=\\\"btn btn-default btn-lg m-2\\\"\\r\\n            (click)=\\\"changeType()\\\"\\r\\n            [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n          >\\r\\n            <span aria-hidden=\\\"true\\\">\\r\\n             <i class=\\\" text-danger fas fa-thumbs-down\\\"></i>\\r\\n            </span>Reprovar\\r\\n          </button>\\r\\n          <a \\r\\n            ngif=\\\"contato?.MAIL != 0 || contato?.MAIL != 'null'\\\"\\r\\n            role=\\\"button\\\"\\r\\n            class=\\\"btn btn-default btn-lg m-2\\\"\\r\\n            href=\\\"mailto:{{contato?.MAIL}}\\\"\\r\\n          >\\r\\n            <span aria-hidden=\\\"true\\\">\\r\\n             <i class=\\\" text-primary fas fa-envelope\\\"></i>\\r\\n            </span>Questioná-lo\\r\\n          </a>\\r\\n        </div>\\r\\n        <div  class=\\\"card\\\" [hidden] =\\\"solicitacaoSelecionada.IN_STAT != 1\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title text-success\\\">Solicitação Aprovada</h5>\\r\\n            <p class=\\\"card-text\\\"><strong>Motivo:</strong> </p>\\r\\n            <p class=\\\"card-text\\\"><strong>Descrição:</strong> </p>\\r\\n            <p class=\\\"card-text\\\"><strong>Responsável:</strong> </p>\\r\\n            <p class=\\\"card-text\\\"><strong>Data:</strong> </p>         \\r\\n          </div>\\r\\n        </div>\\r\\n        <div  class=\\\"card\\\" [hidden] =\\\"solicitacaoSelecionada.IN_STAT != 2 \\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title text-danger\\\">Solicitação Reprovada</h5>\\r\\n            <p class=\\\"card-text\\\"><strong>Motivo:</strong> </p>\\r\\n            <p class=\\\"card-text\\\"><strong>Descrição:</strong> </p>\\r\\n            <p class=\\\"card-text\\\"><strong>Responsável:</strong> </p>\\r\\n            <p class=\\\"card-text\\\"><strong>Data:</strong> </p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL3RpcG9zLWNvbmZvcm1pZGFkZS9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"ENTRADA DE MATERIAIS\\\"></app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <card-group text=\\\"Selecione uma atividade\\\" [list]=\\\"atividades\\\"></card-group>\\r\\n</app-body>\";","import { Router, ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n@Component({\r\n  selector: 'sul-fluminense-entrada-materiais',\r\n  templateUrl: './entrada-materiais.component.html',\r\n  styleUrls: ['./entrada-materiais.component.scss']\r\n})\r\nexport class SulFluminenseEntradaMateriaisComponent implements OnInit {\r\n  loading: boolean = true;\r\n\r\n  breadCrumbTree: any = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/sul-fluminense/home'\r\n    },\r\n    {\r\n      descricao: 'Entrada de materiais'\r\n    }\r\n  ];\r\n\r\n  atividades: any = [];\r\n\r\n  constructor(\r\n    private atividadesService: AtividadesService,\r\n    private router: Router,\r\n    private titleService: TitleService,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.titleService.setTitle('Entrada de materiais');  \r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.registrarAcesso();\r\n      this.getAtividadesInternas(params['idSubModulo']);\r\n    });\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getAtividadesInternas(idSubModulo: number): void {\r\n    this.atividadesService.getAtividadesInternas(idSubModulo).subscribe(\r\n      res => {\r\n        if (res['responseCode'] === 200) {\r\n          this.atividades = res['result'];\r\n          this.loading = false;\r\n        } else {\r\n          this.handleAtividadesInternasError();\r\n        }\r\n      },\r\n      error => {\r\n        this.handleAtividadesInternasError();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleAtividadesInternasError(): void {\r\n    this.pnotify.error();\r\n    this.router.navigate(['/sul-fluminense/home']);\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"NOTAS FISCAIS\\\">\\r\\n  <button\\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true || noMaterial === false \\\"\\r\\n    (click)=\\\"postNotasFiscais()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-10 pt-2 mx-auto\\\">\\r\\n        <legend>Dados da Nota Fiscal</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n            <label for=\\\"NR_NOTA_FISC\\\">Nota Fiscal</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              pattern=\\\"[0-9]+$\\\"\\r\\n              id=\\\"NR_NOTA_FISC\\\"\\r\\n              formControlName=\\\"NR_NOTA_FISC\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NR_NOTA_FISC') + ' ' + onFieldRequired(form.controls.NR_NOTA_FISC)\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NR_NOTA_FISC') == 'required'\\\" message=\\\"Nota Fiscal é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-8 pl-0\\\">\\r\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\r\\n              <label class=\\\"my-auto\\\" for=\\\"NM_FORN\\\">Fornecedor</label>\\r\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\" >\\r\\n                <a\\r\\n                  class=\\\"text-primary\\\"\\r\\n                  href=\\\"javascript:void(0)\\\"\\r\\n                  (click)=\\\"openModal(alterarFornecedor)\\\">\\r\\n                  <strong>Selecionar</strong>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_FORN\\\"\\r\\n              formControlName=\\\"NM_FORN\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_FORN') + ' ' + onFieldRequired(form.controls.NM_FORN)\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_FORN')\\\" message=\\\"Fornecedor é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n            <label for=\\\"DT_INIC\\\">Data de Emissão</label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n              </div>\\r\\n              <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"DT_EMIS_NOTA_FISC\\\"\\r\\n              type=\\\"text\\\"\\r\\n              bsDatepicker\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"DT_EMIS_NOTA_FISC\\\"\\r\\n              [ngClass]=\\\"onFieldError('DT_EMIS_NOTA_FISC') + ' ' + onFieldRequired(form.controls.DT_EMIS_NOTA_FISC)\\\"\\r\\n              >\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('DT_EMIS_NOTA_FISC')\\\" message=\\\"Data de emissão do contrato é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-8 pl-0\\\">\\r\\n            <label for=\\\"statusRecebimento\\\">Status de Recebimento</label>\\r\\n            <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"statusRecebimento\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            dropdownPosition=\\\"bottom\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            [loading]=\\\"loadingStatusRecebimento\\\"\\r\\n            labelForId=\\\"ID_LOGI_ENMA_NOFI_STAT\\\"\\r\\n            bindLabel=\\\"NM_STAT\\\"\\r\\n            bindValue=\\\"ID_LOGI_ENMA_NOFI_STAT\\\"\\r\\n            id=\\\"ID_LOGI_ENMA_NOFI_STAT\\\"\\r\\n            formControlName=\\\"ID_LOGI_ENMA_NOFI_STAT\\\"\\r\\n            (change)=\\\"checkStatus($event, popupStatus)\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ID_LOGI_ENMA_NOFI_STAT')\\\" message=\\\"Status de Recebimento é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\r\\n            <label for=\\\"empresas\\\">Empresa</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"empresas\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              dropdownPosition=\\\"bottom\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              [loading]=\\\"loadingEmpresas\\\"\\r\\n              labelForId=\\\"UUID_EMPR\\\"\\r\\n              bindLabel=\\\"NM_FANT\\\"\\r\\n              bindValue=\\\"ID\\\"\\r\\n              id=\\\"UUID_EMPR\\\"\\r\\n              formControlName=\\\"UUID_EMPR\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-10 pt-2 mx-auto\\\">\\r\\n        <legend>Materiais</legend>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"loadingMateriais\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-cog fa-spin\\\"\\r\\n              text=\\\"Estamos pesquisando os materiais para você...\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"materiais\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\"></div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddMaterial()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\"  *ngFor=\\\"let item of formMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-1 pl-0\\\">\\r\\n                  <label for=\\\"SEQU_MATE\\\">Sequência</label>\\r\\n                  <input\\r\\n                    type=\\\"number\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"SEQU_MATE\\\"\\r\\n                    formControlName=\\\"SEQU_MATE\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('materiais', i, 'SEQU_MATE') + ' ' + onNestedFieldRequired('materiais', i, 'SEQU_MATE')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n                  <label for=\\\"DS_UNID_MEDI\\\">Unidade de Medida</label>\\r\\n                  <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"DS_UNID_MEDI\\\"\\r\\n                  formControlName=\\\"DS_UNID_MEDI\\\"\\r\\n                  [ngClass]=\\\"onNestedFieldError('materiais', i, 'DS_UNID_MEDI') + ' ' + onNestedFieldRequired('materiais', i, 'DS_UNID_MEDI')\\\"\\r\\n                >\\r\\n                  <option >KG</option>\\r\\n                  <option >TON</option>\\r\\n                  <option >PC</option>\\r\\n                  <option >UN</option>\\r\\n                </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n                  <label for=\\\"TT_MATE\\\">Quantidade</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"TT_MATE\\\"\\r\\n                    formControlName=\\\"TT_MATE\\\"\\r\\n                    currencyMask [options]=\\\"{ align: 'right', prefix: '' , thousands: '.', decimal: ',' , precision: 3 }\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('materiais', i, 'TT_MATE') + ' ' + onNestedFieldRequired('materiais', i, 'TT_MATE')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n                  <label for=\\\"DS_LOTE\\\">Lote</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"DS_LOTE\\\"\\r\\n                    formControlName=\\\"DS_LOTE\\\"\\r\\n                  >\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4 pl-0\\\">\\r\\n                  <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\r\\n                    <label class=\\\"my-auto\\\" for=\\\"NM_MATE\\\">Material</label>\\r\\n                    <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\">\\r\\n                      <a\\r\\n                        class=\\\"text-primary\\\"\\r\\n                        href=\\\"javascript:void(0)\\\"\\r\\n                        (click)=\\\"openModal(selecionarMateriais, i)\\\">\\r\\n                        <strong>Selecionar</strong>\\r\\n                      </a>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"NM_MATE\\\"\\r\\n                    formControlName=\\\"NM_MATE\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('materiais', i, 'NM_MATE') + ' ' + onNestedFieldRequired('materiais', i, 'NM_MATE')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteMaterial(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-10 pt-2 mx-auto\\\">\\r\\n        <legend>Observação</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n            <textarea\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"DS_OBSE\\\"\\r\\n            formControlName=\\\"DS_OBSE\\\"\\r\\n            rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n  <ng-template #alterarFornecedor>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Pesquisa de Fornecedor</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\" *ngIf=\\\"loadingFornecedores\\\">\\r\\n          <span class=\\\"sr-only\\\">Loading...</span>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formPesquisaFornecedor\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-3\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"IN_STAT\\\"\\r\\n              >\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n                <option value=\\\"\\\">Exhibir Todos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-3\\\">\\r\\n              <label for=\\\"cdItem\\\">BUSCAR POR</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"buscarPor\\\"\\r\\n              >\\r\\n                <option value=\\\"ID_REFE_ERP\\\">Cód. Fornecedor</option>\\r\\n                <option value=\\\"NM_RAZA_SOCI\\\" selected>Razão Social</option>\\r\\n                <option value=\\\"NM_FANT\\\">Nome Fantasia</option>\\r\\n                <option value=\\\"NR_CNPJ_CPF\\\">CNPJ</option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-6\\\">\\r\\n              <label>TERMO DE PESQUISA</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"pesquisa\\\"\\r\\n                  >\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <span\\r\\n                      [tooltip]=\\\"formPesquisaFornecedor.valid == false ? 'Digite um termo de pesquisa':''\\\"\\r\\n                      container=\\\"body\\\"\\r\\n                      placement =\\\"left\\\"\\r\\n                    >\\r\\n                      <button\\r\\n                      style=\\\"height: 25px;\\\"\\r\\n                        [disabled]=\\\"formPesquisaFornecedor.valid == false\\\"\\r\\n                        class=\\\"input-group-text hover\\\"\\r\\n                        (click)=\\\"getFornecedores()\\\"\\r\\n                        >\\r\\n                        <i class=\\\"fas fa-search\\\"></i>\\r\\n                      </button>\\r\\n                    </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <custom-table *ngIf=\\\"!loadingFornecedores && !noFornecedor\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th>Cód. Fornecedor</th>\\r\\n            <th>Razão Social</th>\\r\\n            <th>Nome Fantasia</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let fornecedor of fornecedores | slice : begin : end; let i = index\\\">\\r\\n            <td>{{ fornecedor.ID_REFE_ERP }}</td>\\r\\n            <td>{{ fornecedor.NM_RAZA_SOCI }}</td>\\r\\n            <td>{{ fornecedor.NM_FANT }}</td>\\r\\n            <td>\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Salvar Fornecedor\\\"\\r\\n                container=\\\"body\\\"\\r\\n                (click)=\\\"setFornecedor(fornecedor);modalRef.hide()\\\"\\r\\n              >\\r\\n                <i class=\\\"far fa-save\\\"></i>\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template #selecionarMateriais>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Pesquisa de Materiais</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\" *ngIf=\\\"loadingAllMateriais\\\">\\r\\n          <span class=\\\"sr-only\\\">Loading...</span>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formAllMateriais\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-3\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"IN_STAT\\\"\\r\\n              >\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n                <option value=\\\"\\\">Exhibir Todos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-3\\\">\\r\\n              <label for=\\\"cdItem\\\">BUSCAR POR</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"buscarPor\\\"\\r\\n              >\\r\\n                <option value=\\\"ID_REFE_ERP\\\">Cód. Material</option>\\r\\n                <option value=\\\"NM_MATE\\\" selected> Nome Material</option>\\r\\n                <option value=\\\"NM_CLAS\\\">Classe</option>\\r\\n                <option value=\\\"NM_LINH\\\">Linha</option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-6\\\">\\r\\n              <label>TERMO DE PESQUISA</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"pesquisa\\\"\\r\\n                  >\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <span\\r\\n                      [tooltip]=\\\"formAllMateriais.valid == false ? 'Digite um termo de pesquisa':''\\\"\\r\\n                      container=\\\"body\\\"\\r\\n                      placement =\\\"left\\\"\\r\\n                    >\\r\\n                      <button\\r\\n                      style=\\\"height: 25px;\\\"\\r\\n                        [disabled]=\\\"formAllMateriais.valid == false\\\"\\r\\n                        class=\\\"input-group-text hover\\\"\\r\\n                        (click)=\\\"getAllMateriais()\\\"\\r\\n                        >\\r\\n                        <i class=\\\"fas fa-search\\\"></i>\\r\\n                      </button>\\r\\n                    </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <custom-table *ngIf=\\\"!loadingAllMateriais && !noAllMateriais\\\" class=\\\"text-center\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th>Cód. Material</th>\\r\\n            <th>Nome Material</th>\\r\\n            <th>Classe</th>\\r\\n            <th>Linha</th>\\r\\n            <th>Unidade de Medida</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let material of allMateriais | slice : begin : end; let i = index\\\">\\r\\n            <td>{{ material.ID_REFE_ERP }}</td>\\r\\n            <td>{{ material.NM_MATE }}</td>\\r\\n            <td>{{ material.NM_CLAS }}</td>\\r\\n            <td>{{ material.NM_LINH }}</td>\\r\\n            <td>{{ material.NM_APOI_UNID_MEDI }} </td>\\r\\n            <td>\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Salvar Material\\\"\\r\\n                container=\\\"body\\\"\\r\\n                (click)=\\\"setMaterial(material);modalRef.hide()\\\"\\r\\n              >\\r\\n                <i class=\\\"far fa-save\\\"></i>\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div *ngIf=\\\"totalItemsMaterial > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItemsMaterial ? totalItemsMaterial : currentPage*(itemsPerPage) }} de {{ totalItemsMaterial }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItemsMaterial\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template #popupStatus>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Alteração de Status de Recebimento</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hidePopup()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-3\\\" >\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <i class=\\\"text-muted fas fa-file-excel fa-4x mt-3\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-9\\\">\\r\\n          <p>\\r\\n            <strong>Não encontramos nenhuma ficha de não conformidade para essa nota fiscal.</strong>\\r\\n          </p>\\r\\n\\r\\n          <p>\\r\\n            <strong>Deseja abrir uma ficha de não conformidade agora?</strong>\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-success \\\"\\r\\n      target=\\\"_blank\\\"\\r\\n      (click)=\\\"gerarFicha()\\\"\\r\\n    >\\r\\n      <span aria-hidden=\\\"true\\\">\\r\\n      </span>Sim\\r\\n    </button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-danger \\\"\\r\\n      (click)=\\\"hidePopup()\\\"\\r\\n    >\\r\\n      <span aria-hidden=\\\"true\\\">\\r\\n      </span>Não\\r\\n    </button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</app-body>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"NOTAS FISCAIS\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"getExport()\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"ID_LOGI_ENMA_NOFI\\\">ID</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"ID_LOGI_ENMA_NOFI\\\"\\r\\n                formControlName=\\\"ID_LOGI_ENMA_NOFI\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"NR_NOTA_FISC\\\">NOTA FISCAL</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"NR_NOTA_FISC\\\"\\r\\n                formControlName=\\\"NR_NOTA_FISC\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n              <label for=\\\"NM_FORN\\\">Fornecedor</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"NM_FORN\\\"\\r\\n                formControlName=\\\"NM_FORN\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (keydown.enter)=\\\"onFilter()\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-1 pl-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"DS_LOTE\\\">Lote</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"DS_LOTE\\\"\\r\\n                formControlName=\\\"DS_LOTE\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"CD_MATE\\\">CÓDIGO DO MATERIAL</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"CD_MATE\\\"\\r\\n                formControlName=\\\"CD_MATE\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-8 pl-0\\\">\\r\\n              <label for=\\\"NM_MATE\\\">MATERIAL</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"NM_MATE\\\"\\r\\n                formControlName=\\\"NM_MATE\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"TP_DATA_INIC\\\">Tipo Data Inicial</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tiposData\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipoData\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipoData\\\"\\r\\n              formControlName=\\\"TP_DATA_INIC\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"TP_DATA_FINA\\\">Tipo Data Final</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tiposData\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipoData\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipoData\\\"\\r\\n              formControlName=\\\"TP_DATA_FINA\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n              <label for=\\\"empresas\\\">Empresa</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"empresas\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                dropdownPosition=\\\"bottom\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingEmpresas\\\"\\r\\n                labelForId=\\\"UUID_EMPR\\\"\\r\\n                bindLabel=\\\"NM_FANT\\\"\\r\\n                bindValue=\\\"ID\\\"\\r\\n                id=\\\"UUID_EMPR\\\"\\r\\n                formControlName=\\\"UUID_EMPR\\\"\\r\\n                (change)=\\\"getDepositos({'ID_EMPR': $event?.ID || ''})\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\r\\n              <label for=\\\"statusRecebimento\\\">Status de Recebimento</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"statusRecebimento\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                dropdownPosition=\\\"bottom\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingStatusRecebimento\\\"\\r\\n                labelForId=\\\"ID_LOGI_ENMA_NOFI_STAT\\\"\\r\\n                bindLabel=\\\"NM_STAT\\\"\\r\\n                bindValue=\\\"ID_LOGI_ENMA_NOFI_STAT\\\"\\r\\n                id=\\\"ID_LOGI_ENMA_NOFI_STAT\\\"\\r\\n                formControlName=\\\"ID_LOGI_ENMA_NOFI_STAT\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"DT_INIC\\\">Data Inicial</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"DT_INIC\\\"\\r\\n                type=\\\"text\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                bsDatepicker\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"DT_INIC\\\"\\r\\n                >\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"DT_FINA\\\">Data Final</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"DT_FINA\\\"\\r\\n                type=\\\"text\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                bsDatepicker\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"DT_FINA\\\"\\r\\n                >\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n              <label for=\\\"depositos\\\">Deposito</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"depositos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                dropdownPosition=\\\"bottom\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingDepositos\\\"\\r\\n                labelForId=\\\"UUID_DEPO\\\"\\r\\n                bindLabel=\\\"NM_DEPO\\\"\\r\\n                bindValue=\\\"ID\\\"\\r\\n                id=\\\"UUID_DEPO\\\"\\r\\n                formControlName=\\\"UUID_DEPO\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" >\\r\\n    <div class=\\\"col-md-4 mb-4 mb-md-0\\\">\\r\\n      <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\">\\r\\n        <div class=\\\"bg-primary rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-file\\\"></i></div>\\r\\n        <div class=\\\"text-right\\\" [hidden]=\\\"!cardsLoading || notasEmpty\\\" >\\r\\n          <h5\\r\\n          class=\\\"font-weight-bolder mb-1\\\"\\r\\n          counto\\r\\n          [step]=\\\"30\\\"\\r\\n          [countTo]=\\\"notas\\\"\\r\\n          [countFrom]=\\\"0\\\"\\r\\n          [duration]=\\\"2\\\"\\r\\n          (countoChange)=\\\"countoNotas = $event\\\">\\r\\n          {{ countoNotas | number:'1.0-0' }}\\r\\n          </h5>\\r\\n          <div class=\\\"text-muted small font-weight-bold\\\">TOTAL DE NOTAS FISCAIS ENCONTRADAS</div>\\r\\n        </div>\\r\\n        <div class=\\\"text-right\\\" *ngIf=\\\"notasEmpty\\\">\\r\\n          <h5 class=\\\"font-weight-bolder mb-1\\\">0</h5>\\r\\n          <div class=\\\"text-muted small font-weight-bold\\\">TOTAL DE NOTAS FISCAIS ENCONTRADAS</div>\\r\\n        </div>\\r\\n        <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!cardsLoading && !notasEmpty\\\">\\r\\n          <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4 mb-4 mb-md-0\\\">\\r\\n      <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\" (click)=\\\"fichasNaoConformeChange()\\\">\\r\\n        <div class=\\\"bg-orange rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-file-excel\\\"></i></div>\\r\\n        <div class=\\\"text-right\\\" [hidden]=\\\"!cardsLoading || fichasNaoConformeEmpty\\\">\\r\\n          <h5\\r\\n            class=\\\"font-weight-bolder mb-1\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"fichasNaoConforme\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"2\\\"\\r\\n            (countoChange)=\\\"countoFichasNaoConforme = $event\\\">\\r\\n            {{ countoFichasNaoConforme | number:'1.0-0' }}\\r\\n          </h5>\\r\\n          <div class=\\\"text-muted small font-weight-bold\\\">TOTAL DE NOTAS FISCAIS COM FNC</div>\\r\\n        </div>\\r\\n        <div class=\\\"text-right\\\" *ngIf=\\\"fichasNaoConformeEmpty\\\">\\r\\n          <h5 class=\\\"font-weight-bolder mb-1\\\">0</h5>\\r\\n          <div class=\\\"text-muted small font-weight-bold\\\">TOTAL DE NOTAS FISCAIS COM FNC</div>\\r\\n        </div>\\r\\n        <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!cardsLoading && !fichasNaoConformeEmpty\\\">\\r\\n          <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4 mb-4 mb-md-0\\\">\\r\\n      <div class=\\\"border rounded bg-white shadow-sm d-flex justify-content-between w-100 p-3\\\" (click)=\\\"openModalDuplicadas(modalDuplicadas)\\\">\\r\\n        <div class=\\\"bg-warning rounded-circle text-white icon-40 my-auto\\\"><i class=\\\"fas fa-exclamation\\\"></i></div>\\r\\n        <div class=\\\"text-right\\\" [hidden]=\\\"!cardsLoading || duplicadosEmpty\\\">\\r\\n          <h5\\r\\n            class=\\\"font-weight-bolder mb-1\\\"\\r\\n            counto\\r\\n            [step]=\\\"30\\\"\\r\\n            [countTo]=\\\"duplicados\\\"\\r\\n            [countFrom]=\\\"0\\\"\\r\\n            [duration]=\\\"2\\\"\\r\\n            (countoChange)=\\\"countoDuplicados = $event\\\">\\r\\n            {{ countoDuplicados | number:'1.0-0' }}\\r\\n          </h5>\\r\\n          <div class=\\\"text-muted small font-weight-bold\\\">TOTAL DE LOTES DUPLICADAS</div>\\r\\n        </div>\\r\\n        <div class=\\\"text-right\\\" *ngIf=\\\"duplicadosEmpty\\\">\\r\\n          <h5 class=\\\"font-weight-bolder mb-1\\\">0</h5>\\r\\n          <div class=\\\"text-muted small font-weight-bold\\\">TOTAL DE LOTES DUPLICADAS</div>\\r\\n        </div>\\r\\n        <div class=\\\"text-right my-auto\\\" *ngIf=\\\"!cardsLoading && !duplicadosEmpty\\\">\\r\\n          <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0 col-md-12\\\" >\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('ID_LOGI_ENMA_NOFI')\\\">\\r\\n                <thead-sorter value=\\\"ID\\\" [active]=\\\"ORDE_BY == 'ID_LOGI_ENMA_NOFI'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('NR_NOTA_FISC_REFE')\\\">\\r\\n                <thead-sorter value=\\\"Nota Fiscal\\\" [active]=\\\"ORDE_BY == 'NR_NOTA_FISC_REFE'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('SG_ORIG')\\\">\\r\\n                <thead-sorter value=\\\"Origem\\\" [active]=\\\"ORDE_BY == 'SG_ORIG'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('NM_FORN')\\\">\\r\\n                <thead-sorter value=\\\"Fornecedor\\\" [active]=\\\"ORDE_BY == 'NM_FORN'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('NM_STAT')\\\">\\r\\n                <thead-sorter value=\\\"Status\\\" [active]=\\\"ORDE_BY == 'NM_STAT'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('NM_EMPR')\\\">\\r\\n                <thead-sorter value=\\\"Empresa\\\" [active]=\\\"ORDE_BY == 'NM_EMPR'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('NM_DEPO')\\\">\\r\\n                <thead-sorter value=\\\"Depósito\\\" [active]=\\\"ORDE_BY == 'NM_DEPO'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('DT_EMIS_NOTA_FISC')\\\">\\r\\n                <thead-sorter value=\\\"Data de Emissão\\\" [active]=\\\"ORDE_BY == 'DT_EMIS_NOTA_FISC'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:140px\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let nota of notasFiscais\\\" >\\r\\n              <td  [ngClass]=\\\"nota.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n              {{nota.ID_LOGI_ENMA_NOFI }}\\r\\n              </td>\\r\\n              <td >\\r\\n                <span *ngIf=\\\"nota?.NR_NOTA_FISC_REFE\\\">{{ nota.NR_NOTA_FISC_REFE }}</span>\\r\\n                <span *ngIf=\\\"!nota?.NR_NOTA_FISC_REFE\\\">{{ nota.NR_NOTA_FISC }}</span>\\r\\n              </td>\\r\\n              <td >{{ nota.SG_ORIG | uppercase }}</td>\\r\\n              <td >{{ nota.NM_FORN | uppercase }}</td>\\r\\n              <td >{{ nota.NM_STAT | uppercase }}</td>\\r\\n              <td >{{ nota.NM_EMPR | uppercase }}</td>\\r\\n              <td >{{ nota.NM_DEPO | uppercase }}</td>\\r\\n              <td >{{ nota.DT_EMIS_NOTA_FISC | date: 'dd/MM/yyyy' }}</td>\\r\\n              <td class=\\\"align-middle\\\">\\r\\n                <span class=\\\"mx-2\\\" [tooltip]=\\\"nota.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(nota)\\\">\\r\\n                    <i [ngClass]=\\\"nota.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mx-2\\\" tooltip=\\\"Gerar FNC\\\"  placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button \\r\\n                    type=\\\"button\\\" \\r\\n                    [ngClass]=\\\"nota.IN_FHNC == '1' ? 'btn-icon-sm buttonGerarFicha' : 'btn-icon-sm'\\\"\\r\\n                    (click)=\\\"gerarFicha(nota.ID_LOGI_ENMA_NOFI)\\\"\\r\\n                  >\\r\\n                    <i class=\\\"fas fa-file-excel \\\" ></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mx-2\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', nota.ID_LOGI_ENMA_NOFI]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mx-2\\\"  tooltip=\\\"Detalhe da Nota\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModalDetalhes(detalhesNotaFiscal, nota)\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n  <ng-template #detalhesNotaFiscal >\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Detalhes da Nota Fiscal  -  Nº {{notaFiscalSelecionada?.NR_NOTA_FISC}}</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\" *ngIf=\\\"loadingMateriais || loadingAlteracoes\\\">\\r\\n          <span class=\\\"sr-only\\\">Loading...</span>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModalDetalhes()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" >\\r\\n      <tabset>\\r\\n        <tab heading=\\\"Dados cadastrais\\\">\\r\\n          <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n            <div class=\\\"modal-body\\\" >\\r\\n              <div>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col-lg-2\\\">\\r\\n                    <label>ID</label>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.ID_LOGI_ENMA_NOFI == null\\\">NÃO INFORMADO</div>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.ID_LOGI_ENMA_NOFI != null\\\">{{notaFiscalSelecionada?.ID_LOGI_ENMA_NOFI}}</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col-lg-2\\\">\\r\\n                    <label>Nota Fiscal de Remessa</label>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.NR_NOTA_FISC_REFE == null\\\">NÃO INFORMADO</div>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.NR_NOTA_FISC_REFE != null\\\">{{notaFiscalSelecionada?.NR_NOTA_FISC_REFE}}</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col-lg-3\\\">\\r\\n                    <label>Status de Recebimento</label>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.NM_STAT == null\\\">NÃO INFORMADO</div>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.NM_STAT != null\\\"> {{notaFiscalSelecionada?.NM_STAT | uppercase }}</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col-lg-5\\\">\\r\\n                    <label>Fornecedor</label>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.NM_FORN == null\\\">NÃO INFORMADO</div>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.NM_FORN != null\\\">{{ notaFiscalSelecionada?.NM_FORN}}</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col-lg-2\\\">\\r\\n                    <label>Data de Emissão</label>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.DT_EMIS_NOTA_FISC == null\\\">NÃO INFORMADO</div>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.DT_EMIS_NOTA_FISC != null\\\">{{ notaFiscalSelecionada?.DT_EMIS_NOTA_FISC | date: 'dd/MM/yyyy' }}</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col-lg-2\\\">\\r\\n                    <label>Data de Recebimento</label>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.DT_RECE == null\\\">NÃO INFORMADO</div>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.DT_RECE != null\\\">{{ notaFiscalSelecionada?.DT_RECE | date: 'dd/MM/yyyy' }}</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col-lg-3\\\">\\r\\n                    <label>Data de Entrada</label>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.DT_ENTR == null\\\">NÃO INFORMADO</div>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.DT_ENTR != null\\\">{{ notaFiscalSelecionada?.DT_ENTR | date: 'dd/MM/yyyy' }}</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col-lg-2\\\">\\r\\n                    <label>Empresa</label>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.NM_EMPR == null\\\">NÃO INFORMADO</div>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.NM_EMPR != null\\\">{{ notaFiscalSelecionada?.NM_EMPR }}</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col-lg-3\\\">\\r\\n                    <label>Depósito</label>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.NM_DEPO == null\\\">NÃO INFORMADO</div>\\r\\n                    <div *ngIf=\\\"notaFiscalSelecionada?.NM_DEPO != null\\\">{{ notaFiscalSelecionada?.NM_DEPO }}</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <br>\\r\\n              <div [hidden]=\\\"!loadingMateriais\\\" class=\\\"col-lg-12 text-muted \\\">\\r\\n                <p><strong>Buscando os materiais da Nota Fiscal...</strong></p>\\r\\n              </div>\\r\\n              <custom-table class=\\\"text-center\\\" *ngIf=\\\"!loadingMateriais && !noMateriais\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th>ID </th>\\r\\n                    <th>Sequência</th>\\r\\n                    <th>Lote</th>\\r\\n                    <th>Cód. Material</th>\\r\\n                    <th>Material</th>\\r\\n                    <th>Classe</th>\\r\\n                    <th>Unidade de Medida</th>\\r\\n                    <th>Quantidade</th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let item of materiais\\\">\\r\\n                    <td>{{item.ID_MATE}}</td>\\r\\n                    <td>{{item.SEQU_MATE}}</td>\\r\\n                    <td *ngIf=\\\"item.DS_LOTE != null\\\" >{{item.DS_LOTE}}</td>\\r\\n                    <td *ngIf=\\\"item.DS_LOTE == null\\\" >NÃO INFORMADO</td>\\r\\n                    <td>{{item.CD_MATE}}</td> \\r\\n                    <td>{{item.NM_MATE}}</td>\\r\\n                    <td>{{item.NM_CLAS}}</td>\\r\\n                    <td>{{item.DS_UNID_MEDI}}</td>\\r\\n                    <td>{{item.TT_MATE | number:'1.3-3' }}</td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n              <br><hr>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col\\\">\\r\\n                  <label>Usuário Responsável Pelo Cadastro</label>\\r\\n                  <div *ngIf=\\\"notaFiscalSelecionada?.NR_MATR == null\\\">NÃO INFORMADO</div>\\r\\n                  <div *ngIf=\\\"notaFiscalSelecionada?.NR_MATR != null\\\">{{notaFiscalSelecionada?.NR_MATR}} - {{ notaFiscalSelecionada?.NM_USUA }}</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col\\\">\\r\\n                  <label>Data do Cadastro</label>\\r\\n                  <div *ngIf=\\\"notaFiscalSelecionada?.DT_INCL == null\\\">NÃO INFORMADO</div>\\r\\n                  <div *ngIf=\\\"notaFiscalSelecionada?.DT_INCL != null\\\">{{ notaFiscalSelecionada?.DT_INCL | date: 'dd/MM/yyyy HH:mm'}}</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col\\\">\\r\\n                  <label>Origem</label>\\r\\n                  <div *ngIf=\\\"notaFiscalSelecionada?.SG_ORIG == null\\\">NÃO INFORMADO</div>\\r\\n                  <div *ngIf=\\\"notaFiscalSelecionada?.SG_ORIG != null\\\">{{ notaFiscalSelecionada?.SG_ORIG }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div [hidden]=\\\"loadingMateriais || !noMateriais\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n                <empty-result message=\\\"Nenhum material encontrado\\\"></empty-result>\\r\\n              <br>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </tab>\\r\\n        <tab heading=\\\"Alterações da Nota Fiscal\\\">\\r\\n          <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\" >\\r\\n            <div [hidden]=\\\"!loadingAlteracoes\\\" class=\\\"col-lg-12 text-muted \\\">\\r\\n              <p><strong>Buscando as alterações da Nota Fiscal...</strong></p>\\r\\n            </div>\\r\\n            <div class=\\\"ScrollHistorico\\\">\\r\\n              <accordion  *ngFor=\\\"let alteracao of alteracoes\\\" [hidden]=\\\"loadingAlteracoes || noAlteracoes\\\">\\r\\n                <accordion-group class=\\\"mb-2\\\" [heading]=\\\"titleHistorico(alteracao)\\\" >\\r\\n                  <div class=\\\"form-row\\\">\\r\\n                    <div *ngIf=\\\"typeChange(alteracao)\\\" class=\\\"col-lg-12 text-muted \\\">\\r\\n                      <p><strong>Alteração realizada apenas nos materiais</strong></p>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3\\\" *ngIf=\\\"alteracao.NR_NOTA_FISC != null\\\">\\r\\n                      <label>NOTA FISCAL</label>\\r\\n                      <div >{{ alteracao.NR_NOTA_FISC }}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-3\\\" *ngIf=\\\"alteracao.NR_NOTA_FISC_REFE != null\\\">\\r\\n                      <label>NOTA FISCAL REMESSA</label>\\r\\n                      <div >{{ alteracao.NR_NOTA_FISC_REFE }}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"alteracao.NM_STAT != null\\\">\\r\\n                      <label>STATUS DE RECEBIMENTO</label>\\r\\n                      <div >{{ alteracao.NM_STAT }}</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"alteracao.NM_EMPR != null\\\">\\r\\n                      <label>EMPRESA</label>\\r\\n                      <div>{{ alteracao.NM_EMPR }}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"alteracao.NM_FORN != null\\\">\\r\\n                      <label>FORNECEDOR</label>\\r\\n                      <div>{{ alteracao.NM_FORN }}</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"alteracao.DT_EMIS_NOTA_FISC != null\\\">\\r\\n                      <label>DATA DE EMISSÃO</label>\\r\\n                      <div>{{ alteracao.DT_EMIS_NOTA_FISC | date: 'dd/MM/yyyy HH:mm'}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"alteracao.IN_STAT != null\\\">\\r\\n                      <label>SITUAÇÃO</label>\\r\\n                      <div *ngIf=\\\"alteracao.IN_STAT == 0\\\" class=\\\"text-danger\\\">INATIVO</div>\\r\\n                      <div *ngIf=\\\"alteracao.IN_STAT != 0\\\" class=\\\"text-success\\\">ATIVO</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-row\\\" *ngIf=\\\"alteracao.DS_OBSE != null\\\">\\r\\n                    <div class=\\\"form-group col-md-12\\\" >\\r\\n                      <label>OBSERVAÇÃO</label>\\r\\n                      <textarea class=\\\"form-control\\\" [value]=\\\"alteracao.DS_OBSE\\\" disabled>\\r\\n                      </textarea><br>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </accordion-group>\\r\\n              </accordion>\\r\\n              <div [hidden]=\\\"loadingAlteracoes || !noAlteracoes\\\" class=\\\"text-center d-flex justify-content-center align-items-center mb-2\\\" style=\\\"height: 80%\\\">\\r\\n                <empty-result message=\\\"Nenhuma alteração encontrada\\\"></empty-result>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </tab>\\r\\n        <tab heading=\\\"Alterações dos Materiais\\\">\\r\\n          <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\" >\\r\\n            <div [hidden]=\\\"!loadingHistoricoMateriais\\\" class=\\\"col-lg-12 text-muted \\\">\\r\\n              <p><strong>Buscando as alterações da Nota Fiscal...</strong></p>\\r\\n            </div>\\r\\n            <div class=\\\"ScrollHistorico\\\">\\r\\n              <accordion  *ngFor=\\\"let alteracaoMateriais of historicoMateriais\\\" [hidden]=\\\"loadingHistoricoMateriais || hasHistoricoMateriais()\\\">\\r\\n                <accordion-group class=\\\"mb-2\\\" [heading]=\\\"titleHistorico(alteracaoMateriais)\\\" >\\r\\n                  <custom-table class=\\\"text-center\\\" *ngIf=\\\"!hasHistoricoMateriais()\\\">\\r\\n                    <ng-template #thead let-thead>\\r\\n                      <tr *ngIf=\\\"alteracaoMateriais.SEQU_MATE\\\">\\r\\n                        <th>ID </th>\\r\\n                        <th>Sequência</th>\\r\\n                        <th>Lote</th>\\r\\n                        <th>Material</th>\\r\\n                        <th>Classe</th>\\r\\n                        <th>Unidade de Medida</th>\\r\\n                        <th>Quantidade</th>\\r\\n                      </tr>\\r\\n                      <tr *ngIf=\\\"!alteracaoMateriais.SEQU_MATE\\\">\\r\\n                        <th>MATERIAL REMOVIDO DA NOTA FISCAL</th>\\r\\n                        <th>Lote</th>\\r\\n                        <th>Classe</th>\\r\\n                        <th>Unidade de Medida</th>\\r\\n                        <th>Quantidade</th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                    <ng-template #tbody let-tbody>\\r\\n                      <tr *ngIf=\\\"alteracaoMateriais.SEQU_MATE\\\">\\r\\n                        <td>{{alteracaoMateriais.ID_MATE}}</td>\\r\\n                        <td>{{alteracaoMateriais.SEQU_MATE}}</td>\\r\\n                        <td>{{alteracaoMateriais.DS_LOTE}}</td>\\r\\n                        <td>{{alteracaoMateriais.CD_MATE}} - {{alteracaoMateriais.NM_MATE}}</td>\\r\\n                        <td>{{alteracaoMateriais.NM_CLAS}}</td>\\r\\n                        <td>{{alteracaoMateriais.DS_UNID_MEDI}}</td>\\r\\n                        <td>{{alteracaoMateriais.TT_MATE | number:'1.3-3' }}</td>\\r\\n                      </tr>\\r\\n                      <tr *ngIf=\\\"!alteracaoMateriais.SEQU_MATE\\\">\\r\\n                        <td>{{alteracaoMateriais.CD_MATE}} - {{alteracaoMateriais.NM_MATE}}</td>\\r\\n                        <td>{{alteracaoMateriais.DS_LOTE}}</td>\\r\\n                        <td>{{alteracaoMateriais.NM_CLAS}}</td>\\r\\n                        <td>{{alteracaoMateriais.DS_UNID_MEDI}}</td>\\r\\n                        <td>{{alteracaoMateriais.TT_MATE | number:'1.3-3' }}</td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </custom-table>\\r\\n                </accordion-group>\\r\\n              </accordion>\\r\\n              <div [hidden]=\\\"loadingHistoricoMateriais || !hasHistoricoMateriais() \\\" class=\\\"text-center d-flex justify-content-center align-items-center mb-2\\\" style=\\\"height: 80%\\\">\\r\\n                <empty-result message=\\\"Nenhuma alteração encontrada\\\"></empty-result>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </tab>\\r\\n      </tabset>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template #modalDuplicadas >\\r\\n    <div class=\\\"modal-header\\\" >\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Lotes Duplicados</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModalDuplicadas()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <logistica-entrada-materiais-notas-fiscais-duplicadas>\\r\\n\\r\\n    </logistica-entrada-materiais-notas-fiscais-duplicadas>\\r\\n  </ng-template>\\r\\n</app-body>\";","//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { LogisticaEntradaMateriaisStatusRecebimentoService } from '../services/status-recebimento.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaEntradaMateriaisStatusRecebimento } from './../models/statusRecebimento';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-status-recebimento-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisStatusRecebimentoListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  showDetailPanel = false;\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  $activatedRouteSubscription: Subscription;\r\n  ORDE_BY = 'ID_LOGI_ENMA_NOFI_STAT';\r\n  ORDE_TYPE = 'desc';\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false; \r\n\r\n  //VARIAVEIS\r\n  totalItens: any = [];\r\n  statusRecebimento: Array<ILogisticaEntradaMateriaisStatusRecebimento>;\r\n  statusSelecionado: ILogisticaEntradaMateriaisStatusRecebimento;\r\n  historicos = [];\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  // Tipos de Situação dos Status (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '0',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private statusRecebimentoService: LogisticaEntradaMateriaisStatusRecebimentoService,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.onDetailPanelEmitter();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n        this.getStatusRecebimento(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENMA_NOFI_STAT: [null],\r\n      NM_STAT: [null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      NR_MATR: [null],\r\n      NM_USUA: [null],\r\n      DT_INCL: [null],\r\n      DT_ATUA: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n      ORDE_BY: [this.ORDE_BY],\r\n      ORDE_TYPE: [this.ORDE_TYPE],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Status de Recebimento',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('ORDE_TYPE').setValue(this.ORDE_TYPE);\r\n    this.form.get('ORDE_BY').setValue(this.ORDE_BY);\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onDetails(status: ILogisticaEntradaMateriaisStatusRecebimento): void {\r\n    this.detailPanelService.show();\r\n    this.statusSelecionado = status;\r\n    this.getHistorico(status);\r\n    //this.detailPanelService.loadedFinished(false);\r\n  }\r\n\r\n  getStatusRecebimento(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.statusRecebimentoService\r\n      .getStatusRecebimento(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.statusRecebimento = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.statusRecebimento = [];\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        });\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(status: ILogisticaEntradaMateriaisStatusRecebimento): string {\r\n    let borderClass: string;\r\n\r\n    if (status.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (status.IN_STAT == 0) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(status: ILogisticaEntradaMateriaisStatusRecebimento) {\r\n    const stat = status.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          status.IN_STAT = stat;\r\n          return this.statusRecebimentoService.postStatusRecebimento(status);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          status.IN_STAT = status.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.statusRecebimento.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Status_Recebimento${dataExport}`);\r\n  }\r\n\r\n  getHistorico(status){\r\n    \r\n    if(status.historicos){\r\n      this.historicos = status.historicos;\r\n      return\r\n    }\r\n\r\n    const params = status;\r\n\r\n    this.statusRecebimentoService\r\n      .getHistorico(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.detailPanelService.loadedFinished(false);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          status.historicos = response.body['data'];\r\n          this.historicos = response.body['data'];\r\n        },\r\n        (error: any) => {\r\n        });\r\n  }\r\n\r\n  getDescricaoAtualizaco(corrente, index){\r\n    \r\n    if(corrente?.TP_ACAO === 'INSERT'){\r\n      return 'Cadastrou o registro';\r\n    }\r\n\r\n    if(index == 0){\r\n      return 'Atualizou o registro';\r\n    }\r\n\r\n    if(corrente?.IN_STAT != this.historicos[index-1]?.IN_STAT){\r\n\r\n      if(corrente?.IN_STAT == 0){\r\n        return `Inativou o registro`;\r\n      }\r\n\r\n      return `Ativou o registro`;\r\n\r\n    }\r\n\r\n    if(corrente?.DS_OBSE != this.historicos[index-1]?.DS_OBSE){\r\n      return 'Alterou a observação';\r\n    }\r\n\r\n\r\n    return `Atualizou o nome do registro de ${this.historicos[index-1]?.NM_STAT} para ${corrente?.NM_STAT}`;\r\n\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.ORDE_BY === column) {\r\n      if (this.ORDE_TYPE == 'desc') {\r\n        this.ORDE_TYPE = 'asc';\r\n      } else if (this.ORDE_TYPE == 'asc') {\r\n        this.ORDE_TYPE = 'desc';\r\n      }\r\n    } else {\r\n      this.ORDE_BY = column;\r\n      this.ORDE_TYPE = 'asc';\r\n    }\r\n    this.onFilter();\r\n  }\r\n}\r\n","//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { LogisticaEntradaMateriaisStatusRecebimentoService } from '../services/status-recebimento.service';\r\n\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\r\n\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n\r\n//rxjs\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n//interfaces\r\nimport { ILogisticaEntradaMateriaisStatusRecebimento } from '../models/statusRecebimento';\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-notas-fiscais-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisStatusRecebimentoCadastroComponent\r\n  implements OnInit {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  disabledForm = false;\r\n\r\n  //loading\r\n  loading = false;\r\n  loadingNavBar = false;\r\n\r\n  //Interfaces\r\n  statusRecebimento: Array<ILogisticaEntradaMateriaisStatusRecebimento> = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private titleService: TitleService,\r\n    private localeService: BsLocaleService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private atividadesService: AtividadesService,\r\n    private statusRecebimentoService: LogisticaEntradaMateriaisStatusRecebimentoService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id'))\r\n    return this.getStatusRecebimento({ ID_LOGI_ENMA_NOFI_STAT: _params['id'] }); \r\n  }\r\n\r\n\r\n  getStatusRecebimento(params?: Partial<ILogisticaEntradaMateriaisStatusRecebimento>) {\r\n    this.loading = true;\r\n    const _params = params ?? {};\r\n    this.statusRecebimentoService\r\n      .getStatusRecebimento(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.form.patchValue(response.body['data'][0]) \r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Status de Recebimento',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENMA_NOFI_STAT: [null],\r\n      NM_STAT: [null, [Validators.required]],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postStatusRecebimento() {\r\n    this.loadingNavBar = true;\r\n    this.statusRecebimentoService\r\n      .postStatusRecebimento(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n  \r\n}\r\n","import { IContato } from './../../../../servicos/contatos/models/contato';\r\nimport { ContatoService } from './../../../../servicos/contatos/services/contato.service';\r\n//angular\r\nimport { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { LogisticaEntradaMateriaisPainelAprovacoesService } from '../services/aprovacao.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { LogisticaEntradaMateriaisMotivosService } from './../../motivos/services/motivos.service';\r\n\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef, BsLocaleService, BsDatepickerConfig, BsModalService } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaEntradaMateriaisPainelAprovacoes } from './../models/aprovacoes';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-status-fiscais-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisPainelAprovacaoListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  $activatedRouteSubscription: Subscription;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  //LOADINGS\r\n  loading = true;\r\n  loadingDetails = false;\r\n  loadingNavBar = false;\r\n  loadingModal = false;\r\n\r\n  //VARIAVEIS\r\n  totalItens: any = [];\r\n  motivos= [];\r\n  solicitacoes: Array<ILogisticaEntradaMateriaisPainelAprovacoes>;\r\n  solicitacaoSelecionada: ILogisticaEntradaMateriaisPainelAprovacoes;\r\n  contato: IContato[] = [];\r\n  viewDetailsSolicitante = 1;\r\n  viewHistorico:boolean\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  // Tipos de Situação das Solicitações (Aprovada/Reprovada/Pendente)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Aprovada',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Reprovada',\r\n    },\r\n    {\r\n      cod: '3',\r\n      nome: 'Pendente',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo/Pendente)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Aprovada',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Reprovada',\r\n      color: 'red',\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'Pendente',\r\n      color: 'blue',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private localeService: BsLocaleService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private aprovacoesService: LogisticaEntradaMateriaisPainelAprovacoesService,\r\n    private formBuilder: FormBuilder,\r\n    private contatosService: ContatoService,\r\n    private motivosService: LogisticaEntradaMateriaisMotivosService,\r\n    private xlsxService: XlsxService,\r\n    private modalService: BsModalService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.onDetailPanelEmitter();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n        this.getSolicitacoes(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, status) {\r\n    this.viewDetailsSolicitante = 1;\r\n    this.loadingModal = true;\r\n    const _params = status.MT_LOGI_ENTR_MATE_NOME_SOLI\r\n    this.getMotivos();\r\n    this.getContatos({'NR_MATR':_params});\r\n    this.solicitacaoSelecionada = status;\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-lg',\r\n    });\r\n  }\r\n\r\n  hideModal() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  getContatos(params?) {\r\n    if (!this.loading)\r\n      this.loadingModal = true;\r\n\r\n    this.contatosService\r\n      .get(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingModal = false;\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if (response.status === 200) {\r\n            this.contato = response.body[\"data\"][0];\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        error => {\r\n          this.pnotify.error();\r\n        }\r\n      )\r\n  }\r\n\r\n  detailsSolicitante(params?){\r\n    if(this.viewDetailsSolicitante == 1){\r\n      this.viewDetailsSolicitante = 0\r\n    }else{\r\n      this.viewDetailsSolicitante = 1\r\n    }\r\n  }\r\n\r\n\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENTR_MATE_APRO: [null],\r\n      NM_LOGI_ENTR_MATE_NOME_SOLI: [null],\r\n      MT_LOGI_ENTR_MATE_NOME_SOLI: [null],\r\n      ID_LOGI_ENTR_MATE_MOTI: [null, [Validators.required]],\r\n      DS_LOGI_ENTR_MATE_MOTI: [null],\r\n      IN_STAT: [null],\r\n      DT_INIC: [null],\r\n      DS_SOLI: [null],\r\n      DT_SOLI: [null],\r\n      DT_FINA: [null],\r\n      DT_APROV: [null],\r\n      DS_OBSE: [null, [Validators.required, Validators.minLength(3)]],\r\n      MATR_USUA_CADA: [null],\r\n      DS_USUA_CADA: [null],\r\n      DT_INCL: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n    \r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Painel de Aprovações',\r\n      },\r\n    ];\r\n  }\r\n\r\n\r\n  onFilter() {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onDetails(status: ILogisticaEntradaMateriaisPainelAprovacoes): void {\r\n    this.loadingDetails = true;\r\n    this.detailPanelService.show();\r\n    this.solicitacaoSelecionada = status;\r\n    if(this.solicitacaoSelecionada.IN_STAT == 3){\r\n      this.viewHistorico = false\r\n    } else {\r\n      this.viewHistorico = true\r\n    }\r\n\r\n    this.detailPanelService.loadedFinished(false);\r\n\r\n    setTimeout(() => {\r\n      this.loadingDetails = false;\r\n    }, 500);\r\n  }\r\n\r\n  getMotivos(params?) {\r\n    this.loadingModal = true;\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = '1';\r\n    _params.IN_PAGI = '0';\r\n    _params.DS_LOGI_ENTR_MATE_CATE_MOTI = 'APROVACAO'\r\n    this.motivosService\r\n      .getMotivos(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingModal = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.motivos = response.body['data'];\r\n          } else {\r\n            this.motivos = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getSolicitacoes(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.aprovacoesService\r\n      .getSolicitacoes(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.solicitacoes = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.solicitacoes = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(status: ILogisticaEntradaMateriaisPainelAprovacoes): string {\r\n    let borderClass: string;\r\n\r\n    if (status.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (status.IN_STAT == 2) {\r\n      borderClass = 'border-danger';\r\n    } else if (status.IN_STAT == 3) {\r\n      borderClass = 'border-primary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  requestSuccess(status: ILogisticaEntradaMateriaisPainelAprovacoes) {\r\n    const stat = 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          status.IN_STAT = stat;\r\n          return this.aprovacoesService.postSolicitacoes(status);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          this.pnotify.error('Erro ao aprovar a solicitação');\r\n        }\r\n      );\r\n  }\r\n\r\n  requestFail(status: ILogisticaEntradaMateriaisPainelAprovacoes) {\r\n    const stat = 2;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          status.IN_STAT = stat;\r\n          return this.aprovacoesService.postSolicitacoes(status);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          this.pnotify.error('Erro ao reprovar a solicitação');\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        'Confirmar Aprovação',\r\n        'Deseja realmente aprovar a solicitação ?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      'Confirmar Reprovação',\r\n      'Deseja realmente reprovar a solicitação?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.solicitacoes.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Aprovacoes${dataExport}`);\r\n  }\r\n  \r\n   // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaEntradaMateriaisService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getAcessos() {\r\n    return this.http.get(`${this.API}/acessos`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getFornecedores(params?) {\r\n    return this.http.get(\r\n      `${this.API}/common/v2/fornecedores`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n  getDepositos(params?) {\r\n    return this.http.get(\r\n      `${this.API}/common/v2/depositos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n  \r\n  getAllMateriais(params?) {\r\n    return this.http.get(\r\n      `${this.API}/common/v2/materiais`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getEmpresas(params?) {\r\n    return this.http.get(\r\n      `${this.API}/common/v2/empresas`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}","export default \".scroll-ocorrencias {\\n  height: 410px;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n}\\n\\n@media print {\\n  #ficha-pdf {\\n    background-color: white;\\n    height: 100%;\\n    width: 100%;\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    margin: 0;\\n    padding: 15px;\\n    font-size: 14px;\\n    line-height: 18px;\\n  }\\n}\\n\\nbutton[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmFkYS1tYXRlcmlhaXMvZmljaGEtY29uZm9ybWlkYWRlL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFO0lBQ0ksdUJBQUE7SUFDQSxZQUFBO0lBQ0EsV0FBQTtJQUNBLGVBQUE7SUFDQSxNQUFBO0lBQ0EsT0FBQTtJQUNBLFNBQUE7SUFDQSxhQUFBO0lBQ0EsZUFBQTtJQUNBLGlCQUFBO0VBQ0o7QUFDRjs7QUFFQTtFQUNFLGVBQUE7QUFBRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL2ZpY2hhLWNvbmZvcm1pZGFkZS9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zY3JvbGwtb2NvcnJlbmNpYXMge1xyXG4gIGhlaWdodDogNDEwcHg7XHJcbiAgb3ZlcmZsb3cteTogYXV0bztcclxuICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbn1cclxuXHJcbkBtZWRpYSBwcmludCB7XHJcbiAgI2ZpY2hhLXBkZiB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgIHRvcDogMDtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xyXG4gIH1cclxufVxyXG5cclxuYnV0dG9uW2Rpc2FibGVkXXtcclxuICBjdXJzb3I6IG5vLWRyb3A7XHJcbn1cclxuIl19 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"PARECER\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onExport()\\\"\\r\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n              <label for=\\\"parecer\\\">Parecer</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"parecer\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingParecer\\\"\\r\\n                labelForId=\\\"ID_LOGI_ENMA_FHNC_OCPR\\\"\\r\\n                bindLabel=\\\"NM_PARE\\\"\\r\\n                bindValue=\\\"ID_LOGI_ENMA_FHNC_OCPR\\\"\\r\\n                id=\\\"ID_LOGI_ENMA_FHNC_OCPR\\\"\\r\\n                formControlName=\\\"ID_LOGI_ENMA_FHNC_OCPR\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              (keydown.enter)=\\\"onFilter()\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('ID_LOGI_ENMA_FHNC_OCPR')\\\">\\r\\n                <thead-sorter value=\\\"ID\\\" [active]=\\\"ORDE_BY == 'ID_LOGI_ENMA_FHNC_OCPR'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th\\r\\n                scope=\\\"col\\\"\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"setOrderBy('NM_PARE')\\\">\\r\\n                <thead-sorter value=\\\"Descrição\\\" [active]=\\\"ORDE_BY == 'NM_PARE'\\\" [sort]=\\\"ORDE_TYPE\\\"></thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let parecer of pareceres\\\"  [class.table-active]=\\\"parecer?.ID_LOGI_ENMA_FHNC_OCPR == parecerSelecionado?.ID_LOGI_ENMA_FHNC_OCPR && showDetailPanel\\\">\\r\\n              <td  [ngClass]=\\\"parecer.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n              {{parecer.ID_LOGI_ENMA_FHNC_OCPR }}\\r\\n              </td>\\r\\n              <td >{{ parecer.NM_PARE | uppercase}}</td>\\r\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"parecer.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(parecer)\\\">\\r\\n                    <i [ngClass]=\\\"parecer.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', parecer.ID_LOGI_ENMA_FHNC_OCPR]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(parecer)\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Histórico de alteração\\\">\\r\\n        <custom-table>\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr>\\r\\n              <td class=\\\"text-center\\\" *ngIf=\\\"parecerSelecionado?.DT_INCL != null && parecerSelecionado?.DT_ATUA == null \\\">{{ parecerSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <td class=\\\"text-center\\\" *ngIf=\\\"parecerSelecionado?.DT_INCL != null && parecerSelecionado?.DT_ATUA != null \\\">{{ parecerSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <td>{{ parecerSelecionado?.NM_USUA | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmFkYS1tYXRlcmlhaXMvbm90YXMtZmlzY2Fpcy9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL25vdGFzLWZpc2NhaXMvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b25bZGlzYWJsZWRde1xyXG4gIGN1cnNvcjogbm8tZHJvcDtcclxufVxyXG4iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL21vdGl2b3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaEntradaMateriaisPainelAprovacoes } from '../models/aprovacoes';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaEntradaMateriaisPainelAprovacoesService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getSolicitacoes(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/aprovacoes`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postSolicitacoes(aprovacao: ILogisticaEntradaMateriaisPainelAprovacoes) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/aprovacoes`,\r\n      aprovacao,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL25vdGFzLWZpc2NhaXMvbGlzdGEvZHVwbGljYWRhcy9kdXBsaWNhZGFzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { DetailPanelService } from './../../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { PNotifyService } from './../../../../../../shared/services/core/pnotify.service';\r\nimport { LogisticaEntradaMateriaisNotasFiscaisService } from './../../services/notas-fiscais.service';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\nimport { ILogisticaEntradaMateriaisNotasFiscais } from './../../models/notasFiscais';\r\nimport { ConfirmModalService } from './../../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { CustomTableConfig } from './../../../../../../shared/templates/custom-table/models/config';\r\nimport { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { EMPTY, Subscription } from 'rxjs';\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-notas-fiscais-duplicadas',\r\n  templateUrl: './duplicadas.component.html',\r\n  styleUrls: ['./duplicadas.component.scss']\r\n})\r\nexport class LogisticaEntradaMateriaisNotasFiscaisDuplicadasComponent implements OnInit {\r\n\r\n  loadingDuplicadas:boolean = false;\r\n  noDuplicadas= true;\r\n  duplicadas=[];\r\n  modalRef: BsModalRef;\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n  formLotesDuplicados: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  ORDE_BY = 'DS_LOTE';\r\n  ORDE_TYPE = 'desc';\r\n  duplicadaSelecionada: ILogisticaEntradaMateriaisNotasFiscais;\r\n\r\n    // Subtitles (Ativo/Inativo)\r\n    subtitles: Array<Subtitles> = [\r\n      {\r\n        id: 1,\r\n        text: 'Não Justificados',\r\n        color: 'blue',\r\n      },\r\n      {\r\n        id: 2,\r\n        text: 'Justificados',\r\n        color: 'green',\r\n      },\r\n    ];\r\n  \r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItemsDuplicadas = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService,\r\n    private modalService: BsModalService,\r\n    private formBuilder: FormBuilder,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private notasFiscaisService: LogisticaEntradaMateriaisNotasFiscaisService,\r\n    private pnotify: PNotifyService,\r\n    private dateService: DateService,\r\n    private route: Router\r\n  ){}\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n    this.onDetailPanelEmitter();\r\n    this.getLotesDuplicados();\r\n  }\r\n\r\n  buildForm() {\r\n    this.formLotesDuplicados = this.formBuilder.group({\r\n      buscarPor: ['DS_LOTE'],\r\n      pesquisa: [null],\r\n      ID_MATE:[null],\r\n      NR_NOTA_FISC:[null],\r\n      DS_LOTE:[null],\r\n      NM_MATE:[null],\r\n      NM_FORN:[null],\r\n      NR_MATR:[null],\r\n      NM_USUA:[null],\r\n      IN_DS_OBSE:[''],\r\n      DS_OBSE: [null, Validators.required],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n      ORDE_BY :[this.ORDE_BY],\r\n      ORDE_TYPE:[this.ORDE_TYPE]\r\n    });\r\n    \r\n  }\r\n\r\n  onPageChangedDuplicadas(event) {\r\n    this.formLotesDuplicados.get('PAGI').setValue(event.page);\r\n    this.formLotesDuplicados.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  \r\n  onDetails(duplicada: ILogisticaEntradaMateriaisNotasFiscais): void {\r\n    this.detailPanelService.show();\r\n    this.duplicadaSelecionada = duplicada;\r\n    this.detailPanelService.loadedFinished(false);\r\n\r\n    setTimeout(() => {\r\n      this.loadingDuplicadas = false;\r\n    }, 500);\r\n  }\r\n\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  getLotesDuplicados(params?) {\r\n    const _params = params ?? {};\r\n    _params.IN_DS_OBSE =this.formLotesDuplicados.value['IN_DS_OBSE'];\r\n    _params.PAGI =this.formLotesDuplicados.value['PAGI'];\r\n    _params.ORDE_BY =this.formLotesDuplicados.value['ORDE_BY']\r\n    _params.ORDE_TYPE =this.formLotesDuplicados.value['ORDE_TYPE']\r\n    const _obj = this.formLotesDuplicados.value;\r\n    this.loadingDuplicadas = true;\r\n    this.noDuplicadas =this.duplicadas.length === 0 ? true : false;\r\n    if (_obj['pesquisa']) _params[_obj['buscarPor']] = _obj['pesquisa'];\r\n    this.notasFiscaisService\r\n      .getLotesDuplicados(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingDuplicadas = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.duplicadas = response.body['data'];\r\n          this.totalItemsDuplicadas = response.body['total'];\r\n          this.noDuplicadas =false;\r\n        }else {\r\n          this.pnotify.notice('Não foi encontrado nenhum registro!')\r\n          this.duplicadas = [];\r\n          this.noDuplicadas =true;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.noDuplicadas =true;\r\n        this.pnotify.error('Não foi encontrado nenhum lote duplicado');\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  changeType() {\r\n    const stat = 1;\r\n    const descricao = this.formLotesDuplicados.get('DS_OBSE').value\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n          this.loadingDuplicadas = true;\r\n          this.duplicadaSelecionada.IN_STAT = 1;\r\n          this.duplicadaSelecionada.DS_OBSE = descricao;\r\n          return this.notasFiscaisService.postNotasDuplicadas(this.duplicadaSelecionada);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingDuplicadas = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n          this.hideModal()\r\n          this.getLotesDuplicados()\r\n        },\r\n        (error: any) => {\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente marcar o registro como resolvido?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n    return \r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, duplicada) {\r\n    this.duplicadaSelecionada = duplicada;\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-lg',\r\n    });\r\n  }\r\n\r\n  hideModal() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n\r\n   // Validação de formulário\r\n   onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.formLotesDuplicados.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.formLotesDuplicados.controls[field].validator) {\r\n      let validationResult = this.formLotesDuplicados.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.formLotesDuplicados.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.ORDE_BY === column) {\r\n      if (this.ORDE_TYPE == 'desc') {\r\n        this.ORDE_TYPE = 'asc';\r\n      } else if (this.ORDE_TYPE == 'asc') {\r\n        this.ORDE_TYPE = 'desc';\r\n      }\r\n    } else {\r\n      this.ORDE_BY = column;\r\n      this.ORDE_TYPE = 'asc';\r\n    }\r\n    this.formLotesDuplicados.get('ORDE_TYPE').setValue(this.ORDE_TYPE);\r\n    this.formLotesDuplicados.get('ORDE_BY').setValue(this.ORDE_BY);\r\n    this.getLotesDuplicados();\r\n  }\r\n\r\n}\r\n","import { ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'painel-bobinas-qualidade',\r\n  templateUrl: './painel-bobinas-qualidade.component.html',\r\n  styleUrls: ['./painel-bobinas-qualidade.component.scss']\r\n})\r\nexport class SulFluminensePainelBobinasQualidadeComponent implements OnInit {\r\n\r\n  idSubModulo: any;\r\n\r\n  breadCrumbTree: any;\r\n\r\n  private URL_MTCORP = environment.URL_MTCORP;\r\n\r\n  loading: boolean = false;\r\n\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  matricula: any = btoa(this.currentUser['info']['matricula']);\r\n  idUsuario: any = btoa(this.currentUser['info']['id']);\r\n\r\n  url: string;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.url = `${this.URL_MTCORP}/MTCorp/app_/app/mtcorp/modulos/abastecimento/monitores/painelBobinasQualidade.php?m=${this.matricula}&u=${this.idUsuario}`;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onBreadCumbTree();\r\n  }\r\n\r\n  onBreadCumbTree(){\r\n    this.activatedRoute.params.subscribe((params: any) =>{\r\n      this.idSubModulo = params['idSubModulo'];\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/sul-fluminense/home'\r\n        },\r\n        {\r\n          descricao: 'Entrada de materiais',\r\n          routerLink: `/sul-fluminense/entrada-materiais/${this.idSubModulo}`\r\n        },\r\n        {\r\n          descricao: 'Painel de Bobinas em Qualidade'\r\n        }\r\n      ];\r\n    })\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loading\\\"></loader-spinner-navbar>\\r\\n\\r\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div id=\\\"title\\\">\\r\\n      <back-button></back-button>\\r\\n      <h1>Painel de Bobinas em Qualidade</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"col-6 d-flex justify-content-end\\\">\\r\\n    <div id=\\\"actions\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row pb-0\\\" id=\\\"application-body\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\r\\n    <custom-iframe [url]=\\\"url\\\"></custom-iframe>    \\r\\n  </div>\\r\\n</div>\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Parecer\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postParecer()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Parecer</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\r\\n            <label for=\\\"NM_PARE\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_PARE\\\"\\r\\n              formControlName=\\\"NM_PARE\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_PARE') + ' ' + onFieldRequired('NM_PARE')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_PARE')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Observação</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Tipos de Não Conformidade\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postTiposConformidade()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Tipo de Não Conformidade</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\r\\n            <label for=\\\"NM_TIPO\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_TIPO\\\"\\r\\n              formControlName=\\\"NM_TIPO\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_TIPO') + ' ' + onFieldRequired('NM_TIPO')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_TIPO')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Responsáveis</legend>\\r\\n        <div formArrayName=\\\"responsaveis\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\"></div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddResponsavel()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\"  *ngFor=\\\"let item of formResponsaveis.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-3 pl-0\\\">\\r\\n                  <label for=\\\"NR_MATR_RESP\\\">Matricula</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"NR_MATR_RESP\\\"\\r\\n                    formControlName=\\\"NR_MATR_RESP\\\"\\r\\n                    placeholder=\\\"Digite...\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('responsaveis', i, 'NR_MATR_RESP') + ' ' + onNestedFieldRequired('responsaveis', i, 'NR_MATR_RESP')\\\"\\r\\n                  >\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-8 pl-0\\\">\\r\\n                  <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\r\\n                    <label class=\\\"my-auto\\\" for=\\\"NM_RESP\\\">Responsável</label>\\r\\n                    <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\">\\r\\n                      <a\\r\\n                        class=\\\"text-primary\\\"\\r\\n                        href=\\\"javascript:void(0)\\\"\\r\\n                        (click)=\\\"openModal(selecionarUsuarios, i)\\\">\\r\\n                        <strong>Selecionar</strong>\\r\\n                      </a>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"NM_RESP\\\"\\r\\n                    formControlName=\\\"NM_RESP\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('responsaveis', i, 'NM_RESP') + ' ' + onNestedFieldRequired('responsaveis', i, 'NM_RESP')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteResponsavel(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Observação</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n  <ng-template #selecionarUsuarios>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Pesquisa de Responsáveis</h4>\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n        <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\" *ngIf=\\\"loadingUsuarios\\\">\\r\\n          <span class=\\\"sr-only\\\">Loading...</span>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formUsuarios\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-3\\\">\\r\\n              <label for=\\\"cdItem\\\">BUSCAR POR</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"buscarPor\\\"\\r\\n              >\\r\\n                <option value=\\\"matricula\\\">Matricula</option>\\r\\n                <option value=\\\"nome\\\" selected> Nome Responsável</option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-9\\\">\\r\\n              <label>TERMO DE PESQUISA</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"pesquisa\\\"\\r\\n                  >\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <span \\r\\n                      [tooltip]=\\\"formUsuarios.valid == false ? 'Digite um termo de pesquisa':''\\\"\\r\\n                      container=\\\"body\\\"\\r\\n                      placement =\\\"left\\\"\\r\\n                    >\\r\\n                      <button\\r\\n                      style=\\\"height: 25px;\\\"\\r\\n                        [disabled]=\\\"formUsuarios.valid == false\\\"\\r\\n                        class=\\\"input-group-text hover\\\"\\r\\n                        (click)=\\\"getUsuarios()\\\"\\r\\n                        >\\r\\n                        <i class=\\\"fas fa-search\\\"></i>\\r\\n                      </button>\\r\\n                    </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <custom-table *ngIf=\\\"!loadingUsuarios && !noUsuarios\\\" class=\\\"text-center\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th>Matricula</th>\\r\\n            <th>Nome Responsável</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let usuario of usuarios | slice : begin : end; let i = index\\\">\\r\\n            <td>{{ usuario.matricula }}</td>\\r\\n            <td>{{ usuario.nome }}</td>\\r\\n            <td>\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Salvar Responsável\\\"\\r\\n                container=\\\"body\\\"\\r\\n                (click)=\\\"setUsuarios(usuario);modalRef.hide()\\\"\\r\\n              >\\r\\n                <i class=\\\"far fa-save\\\"></i>\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VudHJhZGEtbWF0ZXJpYWlzL2ZpY2hhLWNvbmZvcm1pZGFkZS9kb2N1bWVudG9zL2RvY3VtZW50b3MuY29tcG9uZW50LnNjc3MifQ== */\";","//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { LogisticaEntradaMateriaisTiposConformidadeService } from '../services/tipos-conformidade.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaEntradaMateriaisTiposConformidade } from './../models/tiposConformidade';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-tipos-conformidade-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisTiposConformidadeListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  noResponsaveis: boolean;\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  $activatedRouteSubscription: Subscription;\r\n  ORDE_BY = 'ID_LOGI_ENMA_FHNC_TIPO';\r\n  ORDE_TYPE = 'desc';\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false;\r\n  loadingResponsaveis = false;\r\n\r\n  //VARIAVEIS\r\n  responsaveis = [];\r\n  totalItens: any = [];\r\n  tiposConformidade: Array<ILogisticaEntradaMateriaisTiposConformidade>;\r\n  tipoSelecionado: ILogisticaEntradaMateriaisTiposConformidade;\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  // Tipos de Situação dos TiposConformidade (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '0',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n // Tipos de Categorias\r\n  categorias = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Qualidade',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Quantidade',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private tiposConformidadeService: LogisticaEntradaMateriaisTiposConformidadeService,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.onDetailPanelEmitter();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n        this.getTiposConformidade(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENMA_FHNC_TIPO: [null],\r\n      NM_TIPO: [null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      NR_MATR: [null],\r\n      NM_USUA: [null],\r\n      DT_INCL: [null],\r\n      DT_ATUA: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n      ORDE_BY:[this.ORDE_BY],\r\n      ORDE_TYPE:[this.ORDE_TYPE],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipos de Não Conformidade',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('ORDE_TYPE').setValue(this.ORDE_TYPE);\r\n    this.form.get('ORDE_BY').setValue(this.ORDE_BY);\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onDetails(tipo: ILogisticaEntradaMateriaisTiposConformidade): void {\r\n    this.loadingNavBar = true;\r\n    this.tipoSelecionado = tipo;\r\n    this.getResponsaveis({ ID_LOGI_ENMA_FHNC_TIPO: tipo.ID_LOGI_ENMA_FHNC_TIPO , IN_STAT:'1'});\r\n    this.detailPanelService.show();\r\n    this.detailPanelService.loadedFinished(false);\r\n\r\n    setTimeout(() => {\r\n      this.loadingNavBar = false;\r\n    }, 500);\r\n  }\r\n\r\n  getTiposConformidade(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.tiposConformidadeService\r\n      .getTiposConformidade(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.tiposConformidade = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.tiposConformidade = [];\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        });\r\n  }\r\n\r\n\r\n  getResponsaveis(params?) {\r\n    this.loadingResponsaveis = true;\r\n    this.tiposConformidadeService\r\n      .getResponsaveis(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingResponsaveis = false;\r\n        })\r\n      )\r\n      .subscribe(async (response) => {\r\n        if (response.status !== 200) {\r\n          this.noResponsaveis =true;\r\n          return;\r\n        }\r\n        this.responsaveis = response['body']['data'];\r\n        this.noResponsaveis = false\r\n      },\r\n      (error) => {\r\n        this.pnotify.error('Não foi encontrado nenhum responsável');\r\n        this.noResponsaveis =true;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(status: ILogisticaEntradaMateriaisTiposConformidade): string {\r\n    let borderClass: string;\r\n\r\n    if (status.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (status.IN_STAT == 0) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(status: ILogisticaEntradaMateriaisTiposConformidade) {\r\n    const stat = status.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          status.IN_STAT = stat;\r\n          return this.tiposConformidadeService.postTiposConformidade(status);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          status.IN_STAT = status.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.tiposConformidade.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `TiposConformidade${dataExport}`);\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.ORDE_BY === column) {\r\n      if (this.ORDE_TYPE == 'desc') {\r\n        this.ORDE_TYPE = 'asc';\r\n      } else if (this.ORDE_TYPE == 'asc') {\r\n        this.ORDE_TYPE = 'desc';\r\n      }\r\n    } else {\r\n      this.ORDE_BY = column;\r\n      this.ORDE_TYPE = 'asc';\r\n    }\r\n    this.onFilter();\r\n  }\r\n}\r\n","import { PageChangedEvent } from 'ngx-bootstrap/pagination/ngx-bootstrap-pagination';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { FormArray } from '@angular/forms';\r\n//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription, forkJoin } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LogisticaEntradaMateriaisTiposConformidadeService } from '../services/tipos-conformidade.service';\r\n//interfaces\r\nimport { ILogisticaEntradaMateriaisTiposConformidade } from '../models/tiposConformidade';\r\n\r\n@Component({\r\n  selector: 'logistica-entrada-materiais-notas-fiscais-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaEntradaMateriaisTiposConformidadeCadastroComponent\r\n  implements OnInit {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  index:number;\r\n  usuarios: Array<FormData> = [];\r\n  noUsuarios = true;\r\n  loadingUsuarios: boolean;\r\n  formUsuarios: FormGroup;\r\n  //loading\r\n  disabledForm = false;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n    /* Pagination */\r\n    itemsPerPage = 10;\r\n    totalItems = 10;\r\n    currentPage = 1;\r\n    begin = 0;\r\n    end = 10;\r\n    /* Pagination */\r\n\r\n  //Interfaces\r\n  tiposConformidade: Array<ILogisticaEntradaMateriaisTiposConformidade> = [];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private router: Router,\r\n    private modalService: BsModalService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private tiposConformidadeService: LogisticaEntradaMateriaisTiposConformidadeService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id')) {\r\n      this.getTiposConformidade({ ID_LOGI_ENMA_FHNC_TIPO: _params['id'] });\r\n      this.getResponsaveis({ ID_LOGI_ENMA_FHNC_TIPO: _params['id'] , IN_STAT:'1'});\r\n    } else { \r\n      this.onAddResponsavel();\r\n    } \r\n  }\r\n\r\n\r\n  getTiposConformidade(params?: Partial<ILogisticaEntradaMateriaisTiposConformidade>) {\r\n    this.loading = true;\r\n    const _params = params ?? {};\r\n    this.tiposConformidadeService\r\n      .getTiposConformidade(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status !== 200) {\r\n            this.noResult = true;\r\n            this.tiposConformidade = [];\r\n            return;\r\n          }\r\n          const _tipoConformidade = response.body['data'][0];\r\n          this.form.patchValue(_tipoConformidade) \r\n          this.noResult = false;\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  getResponsaveis(params?) {\r\n    this.loadingNavBar = true;\r\n    this.tiposConformidadeService\r\n      .getResponsaveis(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(async (response) => {\r\n        if (response.status !== 200) {\r\n          return;\r\n        }\r\n        const responsaveis = response['body']['data'];\r\n        const promise = () => responsaveis.forEach(() => this.onAddResponsavel());\r\n        await Promise.resolve(promise());\r\n        this.form.get('responsaveis').patchValue(responsaveis)\r\n         \r\n      },\r\n      (error) => {\r\n        this.pnotify.error('Não foi encontrado nenhum responsável');\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'Entrada de Materiais',\r\n        routerLink: `/logistica/entrada-materiais/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipos de Não Conformidade',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_ENMA_FHNC_TIPO: [null],\r\n      NM_TIPO : [null, [Validators.required]],\r\n      IN_STAT: [null], \r\n      DS_OBSE: [null],\r\n      NR_MATR: [null],\r\n      NM_USUA: [null],\r\n      DT_INCL: [null],\r\n      responsaveis: this.formBuilder.array([]),\r\n    });\r\n    this.formUsuarios = this.formBuilder.group({\r\n      buscarPor: ['nome'],\r\n      pesquisa: [null, Validators.required],\r\n      matricula:[null],\r\n      nome:[null],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getUsuarios(params) {\r\n    const _params = params ?? {};\r\n    _params. situacao = '1';\r\n    _params. qtItensPagina = 100;\r\n    const _obj = this.formUsuarios.value;\r\n    this.loadingUsuarios = true;\r\n    if (_obj['pesquisa']) _params[_obj['buscarPor']] = _obj['pesquisa'];\r\n    this.tiposConformidadeService\r\n      .getUsuarios(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingUsuarios = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.usuarios = response.body['usuarios'];\r\n            this.totalItems = response.body['usuarios'].length;\r\n            this.noUsuarios = false;\r\n          } else {\r\n            this.pnotify.notice('Nenhum registro encontrado!');\r\n            this.usuarios = [];\r\n            this.noUsuarios = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.usuarios = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  setUsuarios(usuario) {\r\n    const _usuario = {...usuario,'IN_MATE': false}\r\n    const fg = this.form.get('responsaveis') as FormArray;\r\n    fg.controls[this.index].get('NR_MATR_RESP').patchValue(_usuario.matricula);\r\n    fg.controls[this.index].get('ID_RESP').patchValue(_usuario.id);\r\n    fg.controls[this.index].get('NM_RESP').patchValue(_usuario.nome);\r\n  }\r\n\r\n  async postResponsaveis(id:number){\r\n    let request = [];\r\n    const responsaveis = this.formResponsaveis.getRawValue();\r\n    if (!responsaveis){\r\n      return\r\n    }\r\n    const promise = () => {\r\n      responsaveis.forEach(responsavel => {\r\n        const params = {...responsavel,'ID_LOGI_ENMA_FHNC_TIPO':id, IN_STAT: '1'}\r\n        request.push(this.tiposConformidadeService\r\n          .postResponsaveis(params)\r\n      )});\r\n    }\r\n    await Promise.resolve(promise());\r\n    forkJoin(request)\r\n    .pipe(\r\n      finalize(() => {\r\n        this.loading = false;\r\n        this.loadingNavBar = false;\r\n      })\r\n    )\r\n    .subscribe(\r\n      (responses: Array<any>) => {\r\n        this.pnotify.success('Responsáveis cadastrados com sucesso');\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      }\r\n    )\r\n  }\r\n  onDeleteResponsavel(index: number) {\r\n    if (this.formResponsaveis.length === 1) {\r\n      this.pnotify.notice('Informe ao menos um responsável.');\r\n      return\r\n    }\r\n    const id = this.form.get('ID_LOGI_ENMA_FHNC_TIPO')\r\n    let responsaveis = this.formResponsaveis.at(index).value;\r\n    responsaveis = {...responsaveis,'IN_STAT':'0'}\r\n    if(!responsaveis['ID_RESP']){\r\n      this.formResponsaveis.removeAt(index);\r\n      return;\r\n    }\r\n    this.loadingNavBar= true;\r\n    this.tiposConformidadeService\r\n      .postResponsaveis(responsaveis)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loadingNavBar= false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response) => {\r\n            if (response.status === 200) {\r\n              this.formResponsaveis.removeAt(index);\r\n              this.pnotify.success();\r\n            } else {\r\n              this.pnotify.error();\r\n            }\r\n          },\r\n          (error) => {\r\n            this.pnotify.error();\r\n          }\r\n        );\r\n}\r\n\r\n  postTiposConformidade() {\r\n    const fg = this.form.get('responsaveis') as FormArray;\r\n    if (fg.controls[0].get('ID_RESP').value == null) {\r\n      this.pnotify.notice('Informe ao menos um responsável.');\r\n      return\r\n    }\r\n    this.loadingNavBar = true;\r\n    let params = JSON.parse(JSON.stringify(this.form.value)) ;\r\n    delete params['responsaveis'];\r\n    this.tiposConformidadeService\r\n      .postTiposConformidade(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            const id = response.body['data'];\r\n            this.form.get('ID_LOGI_ENMA_FHNC_TIPO').setValue(id);\r\n            if(this.form.get('responsaveis').value[0]['ID_RESP']){\r\n              this.postResponsaveis(id);\r\n            }\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n            this.pnotify.success();\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  get formResponsaveis() {\r\n    return this.form.get('responsaveis') as FormArray;\r\n  }\r\n\r\n  onAddResponsavel() {\r\n    this.formResponsaveis.push(\r\n      this.formBuilder.group({\r\n        ID_LOGI_ENMA_FHNC_TIPO: [null],\r\n        ID_RESP: [null],\r\n        NR_MATR_RESP: [{value: null , disabled: true}, [Validators.required]],\r\n        NM_RESP: [{value: null , disabled: true}, [Validators.required]],\r\n      })\r\n    );\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, index?:number) {\r\n    this.index = index;\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      class: 'modal-xl',\r\n    });\r\n  }\r\n  hideModal() {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  onNestedFieldError(formGroup: string, index: number, field: string) {\r\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n    field = nestedForm.controls[index].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n\r\n    if (nestedForm.controls[index].get(field).validator) {\r\n      let validationResult = nestedForm.controls[index]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  \r\n}\r\n","import { CountoModule } from 'angular2-counto';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n//angular\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n//Modules\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgBrazil } from 'ng-brazil';\r\nimport {\r\n  PaginationModule,\r\n  TooltipModule,\r\n  TabsModule,\r\n  TimepickerModule,\r\n  BsDatepickerModule,\r\n  ModalModule,\r\n  AccordionModule,\r\n} from 'ngx-bootstrap';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgModule } from '@angular/core';\r\nimport { LogisticaEntradaMateriaisRoutingModule } from './entrada-materiais-routing.module';\r\n//Components\r\nimport { LogisticaEntradaMateriaisNotasFiscaisListaComponent } from './notas-fiscais/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisNotasFiscaisCadastroComponent } from './notas-fiscais/cadastro/cadastro.component';\r\nimport { LogisticaEntradaMateriaisComponent} from './entrada-materiais.component';\r\nimport { LogisticaEntradaMateriaisStatusRecebimentoCadastroComponent } from './status-recebimento/cadastro/cadastro.component';\r\nimport { LogisticaEntradaMateriaisStatusRecebimentoListaComponent } from './status-recebimento/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisPainelAprovacaoListaComponent } from './painel-aprovacao/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisMotivosListaComponent } from './motivos/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisMotivosCadastroComponent } from './motivos/cadastro/cadastro.component';\r\nimport { LogisticaEntradaMateriaisTiposConformidadeListaComponent } from './tipos-conformidade/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisTiposConformidadeCadastroComponent } from './tipos-conformidade/cadastro/cadastro.component';\r\nimport { LogisticaEntradaMateriaisFichaConformidadeListaComponent } from './ficha-conformidade/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisFichasConformidadeCadastroComponent } from './ficha-conformidade/cadastro/cadastro.component';\r\nimport { LogisticaEntradaMateriaisFichasConformidadeDocumentosComponent } from './ficha-conformidade/documentos/documentos.component';\r\nimport { LogisticaEntradaMateriaisFichasConformidadeOcorrenciasComponent } from './ficha-conformidade/ocorrencias/ocorrencias.component';\r\nimport { LogisticaEntradaMateriaisParecerListaComponent } from './parecer/lista/lista.component';\r\nimport { LogisticaEntradaMateriaisParecerCadastroComponent } from './parecer/cadastro/cadastro.component';\r\nimport { LogisticaEntradaMateriaisNotasFiscaisDuplicadasComponent } from './notas-fiscais/lista/duplicadas/duplicadas.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogisticaEntradaMateriaisComponent,\r\n    LogisticaEntradaMateriaisNotasFiscaisCadastroComponent,\r\n    LogisticaEntradaMateriaisNotasFiscaisListaComponent,\r\n    LogisticaEntradaMateriaisStatusRecebimentoListaComponent,\r\n    LogisticaEntradaMateriaisStatusRecebimentoCadastroComponent,\r\n    LogisticaEntradaMateriaisPainelAprovacaoListaComponent,\r\n    LogisticaEntradaMateriaisMotivosListaComponent,\r\n    LogisticaEntradaMateriaisMotivosCadastroComponent,\r\n    LogisticaEntradaMateriaisTiposConformidadeListaComponent,\r\n    LogisticaEntradaMateriaisTiposConformidadeCadastroComponent,\r\n    LogisticaEntradaMateriaisFichaConformidadeListaComponent,\r\n    LogisticaEntradaMateriaisFichasConformidadeCadastroComponent,\r\n    LogisticaEntradaMateriaisFichasConformidadeDocumentosComponent,\r\n    LogisticaEntradaMateriaisFichasConformidadeOcorrenciasComponent,\r\n    LogisticaEntradaMateriaisParecerListaComponent,\r\n    LogisticaEntradaMateriaisParecerCadastroComponent,\r\n    LogisticaEntradaMateriaisNotasFiscaisDuplicadasComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    CountoModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    AccordionModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    CurrencyMaskModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    NgBrazil,\r\n    TextMaskModule,\r\n    LogisticaEntradaMateriaisRoutingModule,\r\n  ],\r\n})\r\nexport class LogisticaEntradaMateriaisModule {}\r\n"]}