{"version":3,"sources":["webpack:///src/app/modules/comercial/akna/contatos/formulario/clientes/clientes.component.scss","webpack:///src/app/modules/comercial/akna/contatos/formulario/formulario.component.html","webpack:///src/app/modules/comercial/services/vendedores.service.ts","webpack:///src/app/modules/comercial/akna/contatos/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/akna/contatos/lista/lista.component.ts","webpack:///src/app/modules/comercial/services/clientes.service.ts","webpack:///src/app/modules/comercial/akna/contatos/contatos.service.ts","webpack:///src/app/modules/comercial/akna/contatos/formulario/clientes/clientes.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/akna/contatos/formulario/clientes/clientes.component.ts","webpack:///src/app/modules/comercial/akna/contatos/lista/lista.component.scss","webpack:///src/app/modules/comercial/akna/contatos/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/akna/contatos/lista/lista.component.html","webpack:///src/app/modules/comercial/akna/contatos/contatos.module.ts","webpack:///src/app/modules/comercial/akna/contatos/contatos-routing.module.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialVendedoresService","http","API","API_CADASTROS","get","pipe","id","params","codCliente","providedIn","ComercialAknaContatosFormularioComponent","formBuilder","pnotify","activatedRoute","router","localeService","titleService","atividadesService","contatoService","routerService","dateService","route","breadCrumbTree","formData","compararData","loading","loadingNavBar","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setBreadCrumb","setFormBuilder","onActivatedRoute","subscribe","appTitle","snapshot","idSubModulo","setTitle","descricao","routerLink","hasOwnProperty","idLista","form","group","ID","DESCRICAO","required","field","onFieldInvalid","status","touched","formControl","controls","validator","validationResult","onEventFilter","postContatos","value","next","response","success","navigate","relativeTo","error","_params","_obj","prop","Date","convertToUrlDate","selector","template","ComercialAknaContatosListaComponent","confirmModalService","noResult","tableConfig","subtitleBorder","contatos","contatosFiltrados","tipos","cod","nome","subtitles","text","color","itemsPerPage","currentPage","begin","end","buildForm","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","patchValue","getContatos","getParams","body","totalItems","length","ARQUIVADA","CONTATOS_VALIDOS","PAGI","TIME","getTime","keys","promise","Promise","resolve","reject","filter","contato","_match","key","toString","toLowerCase","indexOf","then","console","log","setBase64UrlParams","event","page","borderClass","ComercialClientesService","httpParams","param","append","documento","getDadosCliente","data","post","put","idEndereco","idSituacao","idContato","idSeqTid","idFilho","idAnexo","ComercialAknaContatosService","observe","emit","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","i","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","stringDateSplit","dateSplit","parseInt","substr","days","setDate","ComercialService","ComercialAknaContatosClientesComponent","contatosService","clientesService","pnotifyService","comercialService","setoresLinhaService","loaderNavbar","$subscriptions","linhas","vendedores","dataLoaded","dadosCadastraisLoaded","dadosCadastraisEmpty","contatosLoaded","contatosEmpty","toggleAll","searchSubmitted","showAdvancedFilter","currentUser","JSON","parse","localStorage","getItem","matricula","ativos","inativos","potencial","arquivados","orderBy","orderType","maxSize","totalClientes","gerentes","clientes","allClientes","clientesPagination","dadosCadastrais","getPNotify","onEventSubscription","getFormFilters","setFormFilter","getLinhas","getVendedores","responseCode","result","formValue","checkRouterParams","formFilter","pesquisa","linha","gerente","dataFinal","dataInicio","vendedor","tipoPessoa","buscarPor","tipoData","situacao","pagina","registros","atob","setSubmittedSearch","search","forEach","formKey","paramKey","isNaN","Number","column","onFilter","setValue","onEventLoading","setRouterParams","q","btoa","stringify","queryParamsHandling","buscandoPor","tiposDatas","getClientes","analitico","slice","notice","map","cliente","checked","postVinculoAllClientes","postVinculoClientes","resetClienteSelecionado","replace","cpf","cnpj","toFixed","clienteSelecionado","ComercialAknaContatosModule","declarations","imports","forRoot","providers","provide","useValue","routes","path","component","redirectTo","pathMatch","ComercialAknaContatosRoutingModule","forChild","exports","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"contatos-contatos-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FrbmEvY29udGF0b3MvZm9ybXVsYXJpby9jbGllbnRlcy9jbGllbnRlcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<!-- <loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen> -->\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Cadastro de Contatos\\\">\\r\\n  <button\\r\\n    [disabled]=\\\"form.valid === false\\\"\\r\\n    (click)=\\\"postContatos()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onFilter()\\\">\\r\\n  Filtrar\\r\\n</button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" >\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-12 pt-2 mx-auto\\\">\\r\\n        <legend>Datos de Lista de Contactos</legend>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\r\\n            <label for=\\\"DESCRICAO\\\">Descripción</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"DESCRICAO\\\"\\r\\n              formControlName=\\\"DESCRICAO\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('DESCRICAO') + ' ' + onFieldRequired('DESCRICAO')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('DESCRICAO')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form><br><br>\\r\\n  <blockquote class=\\\"blockquote  text-center\\\" *ngIf=\\\"!idLista\\\">\\r\\n    <p class=\\\"mb-0 text-danger\\\">Associação de Clientes</p>\\r\\n    <footer class=\\\"blockquote-footer\\\">Associação de clientes é realizada somente com registros já existentes!</footer>\\r\\n  </blockquote>\\r\\n  <div  >\\r\\n    <hr>\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-12 pt-2 mx-auto\\\">\\r\\n        <legend>Búsqueda de Clientes</legend>\\r\\n        <comercial-akna-contatos-clientes></comercial-akna-contatos-clientes>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialVendedoresService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\r\n  private readonly API_CADASTROS = `https://crm360.monterrey.com.bo/api/comercial/cadastros`;\r\n\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getDetalhesCadastro() {\r\n    return this.http\r\n      .get(`${this.API}/detalhes-cadastro`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedores() {\r\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedoresSucursal(id: number){\r\n    return this.http\r\n    .get(`${this.API}/sucursal-vendedor/${id}`)\r\n  }\r\n\r\n  getGestiones() {\r\n    return this.http.get(`${this.API_CADASTROS}/titulos-agenda/lista?codSituacao=1`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/carteira-clientes`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getValidaClienteCarteira(\r\n    codCliente: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVinculoOperadores() {\r\n    return this.http\r\n      .get(`${this.API}/vinculo-operadores`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { DateService } from './../../../../../shared/services/core/date.service';\r\nimport { RouterService } from './../../../../../shared/services/core/router.service';\r\nimport { ComercialAknaContatosService } from './../contatos.service';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n\r\n//Services\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { MoedasService } from 'src/app/shared/services/requests/moedas.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n//Bootstrap\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\n\r\n//interfaces\r\nimport { IComercialAknaContatos } from './../models/contatos';\r\n\r\n//rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'comercial-akna-contatos-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialAknaContatosFormularioComponent implements OnInit {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  formData: Array<FormData> = [];\r\n  idLista: number;\r\n  compararData = null;\r\n  //loading\r\n  loading = true;\r\n  loadingNavBar = false;\r\n\r\n  //Interfaces\r\n  contatos: Array<IComercialAknaContatos>;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private localeService: BsLocaleService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n    private contatoService: ComercialAknaContatosService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService,\r\n    private route: Router\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.appTitle = 'Cadastro';\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/postContatos/home',\r\n      },\r\n      {\r\n        descricao: 'Akna',\r\n        routerLink: `/comercial/akna/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Contatos',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    if (params.hasOwnProperty('id')) {\r\n      this.idLista = params.id;\r\n    }\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      ID: [null],\r\n      DESCRICAO: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onFilter() {\r\n    this.contatoService.onEventFilter();\r\n  }\r\n\r\n  postContatos() {\r\n    this.loadingNavBar = true;\r\n\r\n    this.contatoService\r\n      .postContatos(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotify.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","import { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ComercialAknaContatosService } from './../contatos.service';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { IComercialAknaContatos } from './../models/contatos';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\n//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n@Component({\r\n  selector: 'comercial-akna-contatos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialAknaContatosListaComponent implements OnInit, OnDestroy {\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  noResult = false;\r\n  loading = false; //Loading FullPage\r\n  loadingNavBar = false; //Loading do NAVBAR\r\n\r\n  tableConfig: Partial<CustomTableConfig> = { subtitleBorder: true };\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  $activatedRouteSubscription: Subscription;\r\n  contatoSelecionado: IComercialAknaContatos;\r\n  contatos: IComercialAknaContatos[] = [];\r\n  contatosFiltrados: IComercialAknaContatos[] = [];\r\n  form: FormGroup;\r\n\r\n  // Tipos de Situação dos Tipos de Items (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: 'N',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: 'S',\r\n      nome: 'Arquivado',\r\n    },\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'ATIVO',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'ARQUIVADO',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private contatoService: ComercialAknaContatosService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription =\r\n      this.activatedRoute.queryParams.subscribe((response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        this.getContatos(this.getParams());\r\n      });\r\n  }\r\n\r\n  getContatos(params?) {\r\n    this.loading = true;\r\n\r\n    this.contatoService\r\n      .getContatos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: HttpResponse<IComercialAknaContatos[]>) => {\r\n          if (response.status === 200) {\r\n            this.contatos = response.body;\r\n            this.contatosFiltrados = response.body;\r\n            this.totalItems = response.body.length;\r\n            this.loading = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.contatos = [];\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID: [null],\r\n      DESCRICAO: [null],\r\n      ARQUIVADA: [null],\r\n      CONTATOS_VALIDOS: [null],\r\n      PAGI: [1],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/comercial/home`,\r\n      },\r\n      {\r\n        descricao: 'Akna',\r\n        routerLink: `/comercial/akna/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Contatos',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async onFilter() {\r\n    const { ID, DESCRICAO, ARQUIVADA } = this.getParams();\r\n\r\n    let _params = {};\r\n\r\n    if (ID) _params['ID'] = ID;\r\n\r\n    if (DESCRICAO) _params['DESCRICAO'] = DESCRICAO;\r\n\r\n    if (ARQUIVADA) _params['ARQUIVADA'] = ARQUIVADA;\r\n\r\n    if (Object.keys(_params).length === 0) {\r\n      this.contatosFiltrados = this.contatos;\r\n      return;\r\n    }\r\n\r\n    const promise = new Promise((resolve, reject) => {\r\n      try {\r\n        const filter = this.contatos.filter((contato) => {\r\n          let _match = false;\r\n          for (const key in _params) {\r\n            if (key === 'DESCRICAO') {\r\n              if (\r\n                contato[key]\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .indexOf(_params[key].toString().toLowerCase()) == -1\r\n              ) {\r\n                _match = false;\r\n                break;\r\n              }\r\n            } else if (contato[key] !== _params[key]) {\r\n              _match = false;\r\n              break;\r\n            }\r\n            _match = true;\r\n          }\r\n          return _match;\r\n        });\r\n        resolve(filter);\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n\r\n    await promise\r\n      .then((contatos: IComercialAknaContatos[]) => {\r\n        this.contatosFiltrados = contatos;\r\n        console.log(contatos);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  openRegister(contato: IComercialAknaContatos) {\r\n    this.route.navigate(['../cadastro'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(contato),\r\n    });\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n\r\n  getParams() {\r\n    let _params: Partial<IComercialAknaContatos> = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(contato: IComercialAknaContatos): string {\r\n    let borderClass: string;\r\n\r\n    if (contato.ARQUIVADA == 'N') {\r\n      borderClass = 'border-success';\r\n    } else if (contato.ARQUIVADA == 'S') {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialClientesService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getStatus(): Observable<Object> {\r\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClientes(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClientesGrupoEconomico(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/grupo-economico/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPermissaoAcesso(id: any): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/permissao-acesso/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhes(codCliente: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/detalhes/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getContatosResumido(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/contatos/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getExisteCpfCnpj(\r\n    documento: any,\r\n    getDadosCliente: boolean\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/verificar-cpf-cnpj/${documento}?getDadosCliente=${\r\n          getDadosCliente === true ? 1 : 0\r\n        }`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCliente(data: any): Observable<Object> {\r\n    return this.http\r\n      .post(`${this.API}/pre-cadastro`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPropostaAnaliseCredito(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/proposta-analise-credito/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDadosFaturamento(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/dados-faturamento/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateDadosFaturamento(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/dados-faturamento`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteAtividadeSecundaria(\r\n    codCliente: number,\r\n    id: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/cadastro/excluir/atividade-secundaria/${codCliente}/${id}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEnderecos(\r\n    codCliente: number,\r\n    params?: any\r\n  ): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/enderecos/${codCliente}`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEndereco(\r\n    codCliente: number,\r\n    idEndereco: number,\r\n    idSituacao: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/cadastro/carregar/endereco/${codCliente}/${idEndereco}/${idSituacao}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateEndereco(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/endereco`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteEndereco(codCliente: number, id: number): Observable<Object> {\r\n    return this.http\r\n      .delete(`${this.API}/cadastro/excluir/endereco/${codCliente}/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getContatos(codCliente: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/contatos/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getContato(\r\n    codCliente: number,\r\n    idContato: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/contato/${codCliente}/${idContato}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateContato(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/contato`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteContato(\r\n    codCliente: number,\r\n    id: number,\r\n    idSeqTid: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/cadastro/excluir/contato/${codCliente}/${id}/${idSeqTid}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteMeioContato(\r\n    codCliente: number,\r\n    id: number,\r\n    idSeqTid: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/cadastro/excluir/meio-contato/${codCliente}/${id}/${idSeqTid}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteFilho(idFilho: number): Observable<Object> {\r\n    return this.http\r\n      .delete(`${this.API}/cadastro/excluir/filho/${idFilho}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDadosRelacionamento(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/dados-relacionamento/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateDadosRelacionamento(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/dados-relacionamento`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPotencialCompra(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/potencial-compra/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updatePotencialCompra(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/potencial-compra`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAnexos(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/anexos/${codCliente}`)\r\n      .pipe(take(1)\r\n      // , retry(2)\r\n      );\r\n  }\r\n\r\n  uploadAnexo(data: any): Observable<Object> {\r\n    return this.http\r\n      .post(`${this.API}/cadastro/upload/anexo`, data)\r\n      .pipe(take(1)\r\n      // , retry(2)\r\n      );\r\n  }\r\n\r\n  deleteAnexo(idAnexo: number): Observable<Object> {\r\n    return this.http\r\n      .delete(`${this.API}/cadastro/excluir/anexo/${idAnexo}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getFilial(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/filial/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTravas(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/travas/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getInformacoesFinanceiras(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/cadastro/carregar/informacoes-financeiras/${codCliente}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getInformacoesComerciais(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/informacoes-comerciais/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getListaEmails(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/emails/lista/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { event } from './../../../admin/perfis/models/event';\r\nimport { Injectable, EventEmitter } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IComercialAknaContatos } from './models/contatos';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialAknaContatosService {\r\n  private readonly API = environment.API;\r\n  event: EventEmitter<Partial<event>> = new EventEmitter<Partial<event>>();\r\n  constructor(private http: HttpClient) {}\r\n  getContatos(params?) {\r\n    return this.http.get(\r\n      `${this.API}/comercial/integracoes/akna/listas-contatos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postContatos(contatos: IComercialAknaContatos) {\r\n    return this.http.post(`${this.API}/comercial/akna/contatos`, contatos, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  // -------------------------------------------Clientes-------------------------------\r\n\r\n  getClientes(params?) {\r\n    return this.http.get(\r\n      `${this.API}/comercial/integracoes/akna/listas-contatos-clientes`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n  getSetorAtividades(params?) {\r\n    return this.http.get(\r\n      `${this.API}/comercial/emailMarketing/associacao/setor-atividade`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postVinculoClientes(params) {\r\n    return this.http.post(`${this.API}`, params, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  onEventLoading(value: boolean): void {\r\n    this.event.emit({ loading: value });\r\n  }\r\n\r\n  onEventFilter(): void {\r\n    this.event.emit({ filter: true });\r\n  }\r\n}\r\n","export default \"\\r\\n<div>\\r\\n  <advanced-filter>\\r\\n    <form [formGroup]=\\\"formFilter\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\r\\n          <label for=\\\"buscarPor\\\">Buscar por</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"buscarPor\\\"\\r\\n            formControlName=\\\"buscarPor\\\">\\r\\n            <option value=\\\"1\\\">Código, nome fantasia ou razão social</option>\\r\\n            <option value=\\\"2\\\">CPF ou CNPJ</option>\\r\\n            <option value=\\\"3\\\">Cidade</option>\\r\\n            <option value=\\\"4\\\">Código SAP</option>\\r\\n            <option value=\\\"5\\\">Contactos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-4  pl-0\\\">\\r\\n          <label for=\\\"pesquisa\\\">Termo de pesquisa</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            placeholder=\\\"digite...\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            formControlName=\\\"pesquisa\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\r\\n          <label for=\\\"linhas\\\">Linha</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"linhas\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            dropdownPosition=\\\"bottom\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            labelForId=\\\"ID_LINH\\\"\\r\\n            bindLabel=\\\"NM_LINH\\\"\\r\\n            bindValue=\\\"linha\\\"\\r\\n            id=\\\"linha\\\"\\r\\n            formControlName=\\\"linha\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2  pl-0\\\">\\r\\n          <label for=\\\"tipoPessoa\\\">Tipo de pessoa</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"tipoPessoa\\\"\\r\\n            formControlName=\\\"tipoPessoa\\\">\\r\\n            <option value=\\\"F\\\">Pessoa física</option>\\r\\n            <option value=\\\"J\\\">Pessoa jurídica</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\r\\n          <label for=\\\"tipoData\\\">Tipo de Data</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"tipoData\\\"\\r\\n            formControlName=\\\"tipoData\\\">\\r\\n            <option value=\\\"1\\\">Data de Inclusão</option>\\r\\n            <option value=\\\"2\\\">Data do Último Faturamento</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n          <label for=\\\"dataInicio\\\">Data Inicial</label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n            </div>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataInicio\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            data-placement=\\\"top\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"dataInicio\\\"\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n          <label for=\\\"dataFinal\\\">Data Final</label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n            </div>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataFinal\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            data-placement=\\\"top\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"dataFinal\\\"\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\r\\n          <label for=\\\"situacao\\\">Situação</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"situacao\\\"\\r\\n            formControlName=\\\"situacao\\\">\\r\\n            <option value=\\\"Ativo\\\">Ativos</option>\\r\\n            <option value=\\\"Inativo\\\">Inativos</option>\\r\\n            <option value=\\\"Potenci\\\">Potenciais</option>\\r\\n            <option value=\\\"Arquivo\\\">Arquivados</option>\\r\\n            <option value=\\\"T\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2  pl-0\\\">\\r\\n          <label for=\\\"registros\\\">Registros</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            id=\\\"registros\\\"\\r\\n            formControlName=\\\"registros\\\">\\r\\n            <option>10</option>\\r\\n            <option>25</option>\\r\\n            <option>50</option>\\r\\n            <option>100</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\r\\n          <label for=\\\"gerentes\\\">Gerencia</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"gerentes\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            dropdownPosition=\\\"bottom\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            labelForId=\\\"gerente\\\"\\r\\n            bindLabel=\\\"DS_GERE\\\"\\r\\n            bindValue=\\\"gerente\\\"\\r\\n            id=\\\"gerente\\\"\\r\\n            formControlName=\\\"gerente\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-4  pl-0\\\">\\r\\n          <label for=\\\"vendedores\\\">Promotor</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"vendedores\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            dropdownPosition=\\\"bottom\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            labelForId=\\\"vendedor\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"id\\\"\\r\\n            id=\\\"vendedor\\\"\\r\\n            formControlName=\\\"vendedor\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"dataLoaded && clientes.length > 0\\\">\\r\\n    <div class=\\\"col-12\\\" *ngIf=\\\"clientes.length > 1\\\">\\r\\n      <div class=\\\"custom-control custom-checkbox mr-sm-2 hover\\\">\\r\\n        <input\\r\\n        class=\\\"custom-control-input hover\\\"\\r\\n        type=\\\"checkbox\\\"\\r\\n        id=\\\"toggleAll\\\"\\r\\n        (click)=\\\"onToggleAll()\\\">\\r\\n        <label class=\\\"custom-control-label hover font-weight-bold\\\" for=\\\"toggleAll\\\">\\r\\n          SELECIONAR OS {{totalClientes}} REGISTROS ENCONTRADOS\\r\\n        </label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br><br>\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"text-center hover\\\"\\r\\n              (click)=\\\"setOrderBy('codCliente')\\\">\\r\\n              <thead-sorter value=\\\"Código\\\" [active]=\\\"orderBy == 'codCliente'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"setOrderBy('razaoSocial')\\\">\\r\\n              <thead-sorter value=\\\"Razon Social\\\" [active]=\\\"orderBy == 'razaoSocial'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let cliente of clientes\\\" [class.table-active]=\\\"cliente.codCliente == clienteSelecionado\\\">\\r\\n            <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n              <btn-icon\\r\\n                [icon]=\\\"cliente.checked ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                size=\\\"small\\\"\\r\\n                (click)=\\\"onCheckClientes(cliente)\\\">\\r\\n              </btn-icon>\\r\\n            </td>\\r\\n            <td class=\\\"text-center hover\\\" (click)=\\\"onCheckClientes(cliente)\\\">{{ cliente.codCliente | number: '6.0-0' }}</td>\\r\\n            <td (click)=\\\"onCheckClientes(cliente)\\\">\\r\\n              <i class=\\\"text-success  fas fa-circle mr-3\\\" tooltip=\\\"Ativo\\\" *ngIf= \\\"cliente.situacao == 'Ativo'\\\" ></i>\\r\\n              <i class=\\\"text-danger fas fa-circle mr-3\\\" tooltip=\\\"Inativo\\\" *ngIf= \\\"cliente.situacao == 'Inativo'\\\" ></i>\\r\\n              <i class=\\\"text-primary fas fa-circle mr-3\\\" tooltip=\\\"Potencial\\\" *ngIf= \\\"cliente.situacao == 'Potenci'\\\"></i>\\r\\n              <i class=\\\"text-warning fas fa-circle mr-3\\\"  tooltip=\\\"Arquivado\\\" *ngIf= \\\"cliente.situacao == 'Arquivo'\\\" ></i>\\r\\n              <span>{{ cliente.razaoSocial}}</span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"clientes[0]['total'] > itemsPerPage\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalClientes\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { ComercialVendedoresService } from './../../../../services/vendedores.service';\r\nimport { ComercialCadastrosAssociacaoLinhasService } from './../../../../cadastros/associacao-linhas/associacao-linhas.service';\r\nimport { event } from './../../../../../admin/perfis/models/event';\r\nimport { ComercialAknaContatosService } from './../../contatos.service';\r\nimport { Breadcrumb } from './../../../../../../shared/modules/breadcrumb/breadcrumb';\r\nimport { TitleService } from './../../../../../../shared/services/core/title.service';\r\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from './../../../../clientes/cadastro/dados-faturamento/formulario/formulario.service';\r\nimport { AtividadesService } from './../../../../../../shared/services/requests/atividades.service';\r\nimport { JsonResponse } from './../../../../../../models/json-response';\r\nimport { ComercialClientesService } from './../../../../services/clientes.service';\r\n//angular\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n//services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//rxjs\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n//interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n@Component({\r\n  selector: 'comercial-akna-contatos-clientes',\r\n  templateUrl: './clientes.component.html',\r\n  styleUrls: ['./clientes.component.scss'],\r\n})\r\nexport class ComercialAknaContatosClientesComponent implements OnInit {\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home',\r\n    },\r\n    {\r\n      descricao: 'Busqueda de clientes',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n  $subscriptions: Subscription[] = [];\r\n  linhas: any = [];\r\n  vendedores: any = [];\r\n\r\n  idLista: number;\r\n  dataLoaded = false;\r\n  dadosCadastraisLoaded = false;\r\n  dadosCadastraisEmpty = false;\r\n  contatosLoaded = false;\r\n  contatosEmpty = false;\r\n  toggleAll = false;\r\n  searchSubmitted = false;\r\n  showAdvancedFilter = true;\r\n\r\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  matricula = this.currentUser['info']['matricula'];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  ativos = 0;\r\n  inativos = 0;\r\n  potencial = 0;\r\n  arquivados = 0;\r\n\r\n  formFilter: FormGroup;\r\n  buscandoPor: number;\r\n  tiposDatas: number;\r\n  pesquisa: string;\r\n  orderBy = 'codCliente';\r\n  orderType = 'desc';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 50;\r\n  currentPage = 1;\r\n  totalClientes = 0;\r\n  gerentes: any = [];\r\n  clientes: any = [];\r\n  allClientes: any = [];\r\n  clientesPagination: any = [];\r\n\r\n  clienteSelecionado: number;\r\n  dadosCadastrais: any = {};\r\n  contatos: any = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private contatosService: ComercialAknaContatosService,\r\n    private clientesService: ComercialClientesService,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private localeService: BsLocaleService,\r\n    private comercialService: ComercialVendedoresService,\r\n    private setoresLinhaService: ComercialCadastrosAssociacaoLinhasService,\r\n    private titleService: TitleService\r\n  ) {\r\n    {\r\n      this.localeService.use('pt-br');\r\n      this.bsConfig = Object.assign(\r\n        {},\r\n        { containerClass: 'theme-dark-blue' },\r\n        { adaptivePosition: true },\r\n        { showWeekNumbers: false }\r\n      );\r\n    }\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.onEventSubscription();\r\n    this.getFormFilters();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Busqueda de clientes');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getFormFilters(): void {\r\n    if (!this.idLista) {\r\n      this.setoresLinhaService\r\n        .getLinhas()\r\n        .pipe(finalize(() => {}))\r\n        .subscribe((response) => {\r\n          if (response.status === 200) {\r\n            this.linhas = response.body['data'];\r\n          }\r\n        });\r\n      this.comercialService\r\n        .getVendedores()\r\n        .pipe()\r\n        .subscribe((response: any) => {\r\n          if (response.responseCode === 200) {\r\n            this.vendedores = response.result;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue = this.checkRouterParams();\r\n    this.formFilter = this.formBuilder.group({\r\n      pesquisa: [formValue['pesquisa']],\r\n      linha: [formValue['linha']],\r\n      gerente: [formValue['gerente']],\r\n      dataFinal: [formValue['dataFinal']],\r\n      dataInicio: [formValue['dataInicio']],\r\n      vendedor: [formValue['vendedor']],\r\n      tipoPessoa: [formValue['tipoPessoa'], Validators.required],\r\n      buscarPor: [formValue['buscarPor'], Validators.required],\r\n      tipoData: [formValue['tipoData'], Validators.required],\r\n      situacao: [formValue['situacao'], Validators.required],\r\n      pagina: [formValue['pagina']],\r\n      registros: [formValue['registros'], Validators.required],\r\n    });\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      pesquisa: null,\r\n      buscarPor: 1,\r\n      tipoData: 1,\r\n      situacao: 'Ativo',\r\n      tipoPessoa: 'T',\r\n      pagina: 1,\r\n      linha: null,\r\n      registros: this.itemsPerPage,\r\n    };\r\n    const queryParams = this.activatedRoute.snapshot.queryParams;\r\n    if (Object.keys(queryParams).length > 0) {\r\n      let params = atob(queryParams['q']);\r\n      params = JSON.parse(params);\r\n      this.setSubmittedSearch();\r\n      this.search(params);\r\n\r\n      if (params['registros']) {\r\n        this.itemsPerPage = params['registros'];\r\n      }\r\n\r\n      Object.keys(formValue).forEach((formKey) => {\r\n        Object.keys(params).forEach((paramKey) => {\r\n          if (formKey == paramKey && formValue[formKey] != params[paramKey]) {\r\n            if (!isNaN(Number(params[paramKey]))) {\r\n              formValue[formKey] = Number(params[paramKey]);\r\n            } else {\r\n              formValue[formKey] = params[paramKey];\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    const params = this.activatedRoute.snapshot.params;\r\n    if (params.hasOwnProperty('id')) {\r\n      this.idLista = params.id;\r\n    }\r\n\r\n    return formValue;\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'desc') {\r\n        this.orderType = 'asc';\r\n      } else if (this.orderType == 'asc') {\r\n        this.orderType = 'desc';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'asc';\r\n    }\r\n    this.onFilter();\r\n  }\r\n\r\n  onAdvancedFilter(): void {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  filterByStatus(status: string): void {\r\n    this.formFilter.get('situacao').setValue(status);\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    this.contatosService.onEventLoading(true);\r\n    let params = this.formFilter.value;\r\n    params['orderBy'] = this.orderBy;\r\n    params['orderType'] = this.orderType;\r\n\r\n    this.itemsPerPage = this.formFilter.value['registros'];\r\n    this.currentPage = 1;\r\n    this.setRouterParams(params);\r\n  }\r\n\r\n  setSubmittedSearch(): void {\r\n    this.searchSubmitted = true;\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n      queryParamsHandling: 'merge',\r\n    });\r\n    this.setSubmittedSearch();\r\n    this.search(params);\r\n  }\r\n\r\n  search(params: any): void {\r\n    if (this.searchSubmitted) {\r\n      this.loaderNavbar = true;\r\n      this.dataLoaded = false;\r\n      this.clientes = [];\r\n      this.buscandoPor = params['buscarPor'];\r\n      this.tiposDatas = params['tipoData'];\r\n      this.pesquisa = params['pesquisa'];\r\n\r\n      this.clientesService\r\n        .getClientes(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderNavbar = false;\r\n            this.dataLoaded = true;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: any) => {\r\n            if (response['responseCode'] === 200) {\r\n              const clientes = response.result.analitico;\r\n              // clientes.map(function (el: any) {\r\n              //   el.checked = 0;\r\n              // });\r\n              this.clientes = clientes.slice(0, this.itemsPerPage);\r\n              this.allClientes =\r\n                response['result']['sintetico'][1]['quantidade'];\r\n              this.totalClientes = this.clientes[0]['total'];\r\n            } else if (response['responseCode'] === 204) {\r\n              this.ativos = 0;\r\n              this.inativos = 0;\r\n              this.potencial = 0;\r\n              this.arquivados = 0;\r\n              this.pnotifyService.notice('Nenhum registro encontrado!');\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.pnotifyService.error();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  onToggleAll() {\r\n    this.toggleAll = !this.toggleAll;\r\n    this.clientes.map((cliente) => (cliente.checked = this.toggleAll));\r\n    this.postVinculoAllClientes();\r\n  }\r\n\r\n  onCheckClientes(cliente: any): void {\r\n    cliente.checked = !cliente.checked;\r\n    this.postVinculoClientes(cliente);\r\n  }\r\n\r\n  postVinculoAllClientes(cliente?) {\r\n    let _params = {};\r\n    this.contatosService.onEventLoading(true);\r\n    _params['filtros'] = this.formFilter.value;\r\n    _params['idLista'] = this.idLista;\r\n    if (this.toggleAll) {\r\n      _params['selectAll'] = '1';\r\n    } else {\r\n      _params['selectAll'] = '0';\r\n    }\r\n    this.contatosService\r\n      .postVinculoClientes(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.contatosService.onEventLoading(false);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          this.pnotifyService.success();\r\n        },\r\n        error: (error) => {\r\n          this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n  postVinculoClientes(cliente?) {\r\n    let _params = {};\r\n    this.contatosService.onEventLoading(true);\r\n    _params['situacao'] = cliente.checked == true ? 1 : 0;\r\n    _params['codCliente'] = cliente.codCliente;\r\n    _params['idLista'] = this.idLista;\r\n    this.contatosService\r\n      .postVinculoClientes(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.contatosService.onEventLoading(false);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          this.pnotifyService.success();\r\n        },\r\n        error: (error) => {\r\n          this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string): string {\r\n    let borderClass: string;\r\n\r\n    if (status == 'Ativo') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'Inativo') {\r\n      borderClass = 'border-danger';\r\n    } else if (status == 'Potenci') {\r\n      borderClass = 'border-primary';\r\n    } else if (status == 'Arquivo') {\r\n      borderClass = 'border-secondary';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onEventSubscription() {\r\n    this.$subscriptions[2] = this.contatosService.event.subscribe(\r\n      (response: event) => {\r\n        if (response.filter === true) {\r\n          this.onFilter();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent) {\r\n    if (this.formFilter.value['pagina'] != event.page) {\r\n      this.resetClienteSelecionado();\r\n      this.formFilter.value['pagina'] = event.page;\r\n      this.onFilter();\r\n    }\r\n  }\r\n\r\n  onPreCadastroCpfCnpj() {\r\n    let pesquisa = this.pesquisa.replace(/\\D/g, '');\r\n\r\n    if (pesquisa.length === 11) {\r\n      return { cpf: pesquisa };\r\n    } else if (pesquisa.length === 14) {\r\n      return { cnpj: pesquisa };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  handleCounter(value: any) {\r\n    return value.toFixed(0);\r\n  }\r\n\r\n  resetClienteSelecionado() {\r\n    this.clienteSelecionado = null;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FrbmEvY29udGF0b3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FrbmEvY29udGF0b3MvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"CONTATOS\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"ID\\\">ID</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"ID\\\"\\r\\n                formControlName=\\\"ID\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"DESCRICAO\\\">Descrição</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"DESCRICAO\\\"\\r\\n                formControlName=\\\"DESCRICAO\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"ARQUIVADA\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"ARQUIVADA\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\r\\n              </ng-template>\\r\\n            </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">ID </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Descrição</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Quantidade de e-mails</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let contato of contatosFiltrados | slice : begin : end; let i = index\\\">\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(contato)\\\">\\r\\n              {{contato.ID}}\\r\\n            </td>\\r\\n            <td  class=\\\"text-center hover\\\">{{ contato.DESCRICAO }}</td>\\r\\n            <td  class=\\\"text-center hover\\\">{{ contato.CONTATOS_VALIDOS}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table><br>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"noResult\\\">\\r\\n      </empty-result>\\r\\n      <div *ngIf=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\";","import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport ptBr from '@angular/common/locales/pt';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nregisterLocaleData(ptBr);\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialAknaContatosListaComponent } from './lista/lista.component';\r\nimport { ComercialAknaContatosRoutingModule } from './contatos-routing.module';\r\nimport { ComercialAknaContatosFormularioComponent } from './formulario/formulario.component';\r\nimport { ComercialAknaContatosClientesComponent } from './formulario/clientes/clientes.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialAknaContatosListaComponent,\r\n    ComercialAknaContatosFormularioComponent,\r\n    ComercialAknaContatosClientesComponent,\r\n  ],\r\n  imports: [\r\n    ComercialAknaContatosRoutingModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    NgBrazil,\r\n    TextMaskModule,\r\n    CurrencyMaskModule,\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\r\n})\r\nexport class ComercialAknaContatosModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n//components\r\nimport { ComercialAknaContatosListaComponent } from './lista/lista.component';\r\nimport { ComercialAknaContatosFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialAknaContatosListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialAknaContatosFormularioComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: ComercialAknaContatosFormularioComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialAknaContatosRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}