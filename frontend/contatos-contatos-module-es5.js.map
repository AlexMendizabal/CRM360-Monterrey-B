{"version":3,"sources":["webpack:///src/app/modules/comercial/akna/contatos/formulario/clientes/clientes.component.scss","webpack:///src/app/modules/comercial/akna/contatos/formulario/formulario.component.html","webpack:///src/app/modules/comercial/services/vendedores.service.ts","webpack:///src/app/modules/comercial/akna/contatos/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/akna/contatos/lista/lista.component.ts","webpack:///src/app/modules/comercial/services/clientes.service.ts","webpack:///src/app/modules/comercial/akna/contatos/contatos.service.ts","webpack:///src/app/modules/comercial/akna/contatos/formulario/clientes/clientes.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/akna/contatos/formulario/clientes/clientes.component.ts","webpack:///src/app/modules/comercial/akna/contatos/lista/lista.component.scss","webpack:///src/app/modules/comercial/akna/contatos/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/akna/contatos/lista/lista.component.html","webpack:///src/app/modules/comercial/akna/contatos/contatos.module.ts","webpack:///src/app/modules/comercial/akna/contatos/contatos-routing.module.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialVendedoresService","http","API","get","pipe","params","codCliente","providedIn","ComercialAknaContatosFormularioComponent","formBuilder","pnotify","activatedRoute","router","localeService","titleService","atividadesService","contatoService","routerService","dateService","route","breadCrumbTree","formData","compararData","loading","loadingNavBar","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setBreadCrumb","setFormBuilder","onActivatedRoute","subscribe","appTitle","id","snapshot","idSubModulo","setTitle","descricao","routerLink","hasOwnProperty","idLista","form","group","ID","DESCRICAO","required","field","onFieldInvalid","status","touched","formControl","controls","validator","validationResult","onEventFilter","postContatos","value","next","response","success","navigate","relativeTo","error","_params","_obj","prop","Date","convertToUrlDate","selector","template","ComercialAknaContatosListaComponent","confirmModalService","noResult","tableConfig","subtitleBorder","contatos","contatosFiltrados","tipos","cod","nome","subtitles","text","color","itemsPerPage","currentPage","begin","end","buildForm","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","patchValue","getContatos","getParams","body","totalItems","length","ARQUIVADA","CONTATOS_VALIDOS","PAGI","TIME","getTime","keys","promise","Promise","resolve","reject","filter","contato","_match","key","toString","toLowerCase","indexOf","then","console","log","setBase64UrlParams","event","page","borderClass","ComercialClientesService","httpParams","param","append","documento","getDadosCliente","data","post","put","idEndereco","idSituacao","idContato","idSeqTid","idFilho","idAnexo","ComercialAknaContatosService","observe","emit","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","i","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","stringDateSplit","dateSplit","parseInt","substr","days","setDate","ComercialService","ComercialAknaContatosClientesComponent","contatosService","clientesService","pnotifyService","comercialService","setoresLinhaService","loaderNavbar","$subscriptions","linhas","vendedores","dataLoaded","dadosCadastraisLoaded","dadosCadastraisEmpty","contatosLoaded","contatosEmpty","toggleAll","searchSubmitted","showAdvancedFilter","currentUser","JSON","parse","localStorage","getItem","matricula","ativos","inativos","potencial","arquivados","orderBy","orderType","maxSize","totalClientes","gerentes","clientes","allClientes","clientesPagination","dadosCadastrais","getPNotify","onEventSubscription","getFormFilters","setFormFilter","getLinhas","getVendedores","responseCode","result","formValue","checkRouterParams","formFilter","pesquisa","linha","gerente","dataFinal","dataInicio","vendedor","tipoPessoa","buscarPor","tipoData","situacao","pagina","registros","atob","setSubmittedSearch","search","forEach","formKey","paramKey","isNaN","Number","column","onFilter","setValue","onEventLoading","setRouterParams","q","btoa","stringify","queryParamsHandling","buscandoPor","tiposDatas","getClientes","analitico","slice","notice","map","cliente","checked","postVinculoAllClientes","postVinculoClientes","resetClienteSelecionado","replace","cpf","cnpj","toFixed","clienteSelecionado","ComercialAknaContatosModule","declarations","imports","forRoot","providers","provide","useValue","routes","path","component","redirectTo","pathMatch","ComercialAknaContatosRoutingModule","forChild","exports","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"contatos-contatos-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FrbmEvY29udGF0b3MvZm9ybXVsYXJpby9jbGllbnRlcy9jbGllbnRlcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<!-- <loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen> -->\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Cadastro de Contatos\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false\\\"\\n    (click)=\\\"postContatos()\\\"\\n    >\\n    Salvar\\n  </button>\\n  <button\\n  type=\\\"button\\\"\\n  (click)=\\\"onFilter()\\\">\\n  Filtrar\\n</button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" >\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-12 pt-2 mx-auto\\\">\\n        <legend>Dados da Lista de Contatos</legend>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\n            <label for=\\\"DESCRICAO\\\">Descrição</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"DESCRICAO\\\"\\n              formControlName=\\\"DESCRICAO\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('DESCRICAO') + ' ' + onFieldRequired('DESCRICAO')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('DESCRICAO')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </fieldset>\\n  </form><br><br>\\n  <blockquote class=\\\"blockquote  text-center\\\" *ngIf=\\\"!idLista\\\">\\n    <p class=\\\"mb-0 text-danger\\\">Associação de Clientes</p>\\n    <footer class=\\\"blockquote-footer\\\">Associação de clientes é realizada somente com registros já existentes!</footer>\\n  </blockquote>\\n  <div  >\\n    <hr>\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-12 pt-2 mx-auto\\\">\\n        <legend>Pesquisar Clientes</legend>\\n        <comercial-akna-contatos-clientes></comercial-akna-contatos-clientes>\\n        <br>\\n      </fieldset>\\n    </fieldset>\\n  </div>\\n</app-body>\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialVendedoresService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\n\n  constructor(protected http: HttpClient) {}\n\n  getDetalhesCadastro() {\n    return this.http\n      .get(`${this.API}/detalhes-cadastro`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVendedores() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\n  }\n\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/carteira-clientes`,\n      {\n        params: params\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getValidaClienteCarteira(\n    codCliente: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVinculoOperadores() {\n    return this.http\n      .get(`${this.API}/vinculo-operadores`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { DateService } from './../../../../../shared/services/core/date.service';\nimport { RouterService } from './../../../../../shared/services/core/router.service';\nimport { ComercialAknaContatosService } from './../contatos.service';\n//Angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n\n//Services\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { MoedasService } from 'src/app/shared/services/requests/moedas.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n//Bootstrap\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\n\n//interfaces\nimport { IComercialAknaContatos } from './../models/contatos';\n\n//rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'comercial-akna-contatos-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialAknaContatosFormularioComponent implements OnInit {\n  noResult: boolean;\n  $activatedRouteSubscription: Subscription;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  bsConfig: Partial<BsDatepickerConfig>;\n  formData: Array<FormData> = [];\n  idLista: number;\n  compararData = null;\n  //loading\n  loading = true;\n  loadingNavBar = false;\n\n  //Interfaces\n  contatos: Array<IComercialAknaContatos>;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private localeService: BsLocaleService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n    private contatoService: ComercialAknaContatosService,\n    private routerService: RouterService,\n    private dateService: DateService,\n    private route: Router\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.appTitle = 'Cadastro';\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/postContatos/home',\n      },\n      {\n        descricao: 'Akna',\n        routerLink: `/comercial/akna/${id}`,\n      },\n      {\n        descricao: 'Contatos',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  onActivatedRoute() {\n    const params = this.activatedRoute.snapshot.params;\n    if (params.hasOwnProperty('id')) {\n      this.idLista = params.id;\n    }\n  }\n\n  //formulario\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      ID: [null],\n      DESCRICAO: [null, [Validators.required]],\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onFilter() {\n    this.contatoService.onEventFilter();\n  }\n\n  postContatos() {\n    this.loadingNavBar = true;\n\n    this.contatoService\n      .postContatos(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.status === 200) {\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        error: (error: any) => {\n          this.pnotify.error();\n        }\n      });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n}\n","import { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\nimport { HttpResponse } from '@angular/common/http';\nimport { ComercialAknaContatosService } from './../contatos.service';\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { IComercialAknaContatos } from './../models/contatos';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\n//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//modelos\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n@Component({\n  selector: 'comercial-akna-contatos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialAknaContatosListaComponent implements OnInit, OnDestroy {\n  breadCrumbTree: Array<Breadcrumb>;\n  noResult = false;\n  loading = false; //Loading FullPage\n  loadingNavBar = false; //Loading do NAVBAR\n\n  tableConfig: Partial<CustomTableConfig> = { subtitleBorder: true };\n\n  bsConfig: Partial<BsDatepickerConfig>;\n  $activatedRouteSubscription: Subscription;\n  contatoSelecionado: IComercialAknaContatos;\n  contatos: IComercialAknaContatos[] = [];\n  contatosFiltrados: IComercialAknaContatos[] = [];\n  form: FormGroup;\n\n  // Tipos de Situação dos Tipos de Items (Ativo/Inativo)\n  tipos = [\n    {\n      cod: 'N',\n      nome: 'Ativos',\n    },\n    {\n      cod: 'S',\n      nome: 'Arquivado',\n    },\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'ATIVO',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'ARQUIVADO',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage: number = 10;\n  totalItems: number;\n  currentPage: number = 1;\n  begin: number = 0;\n  end: number = 10;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private localeService: BsLocaleService,\n    private contatoService: ComercialAknaContatosService,\n    private confirmModalService: ConfirmModalService,\n    private routerService: RouterService,\n    private dateService: DateService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription =\n      this.activatedRoute.queryParams.subscribe((response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        this.getContatos(this.getParams());\n      });\n  }\n\n  getContatos(params?) {\n    this.loading = true;\n\n    this.contatoService\n      .getContatos(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe({\n        next: (response: HttpResponse<IComercialAknaContatos[]>) => {\n          if (response.status === 200) {\n            this.contatos = response.body;\n            this.contatosFiltrados = response.body;\n            this.totalItems = response.body.length;\n            this.loading = false;\n          } else {\n            this.noResult = true;\n            this.contatos = [];\n          }\n        },\n        error: (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      });\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID: [null],\n      DESCRICAO: [null],\n      ARQUIVADA: [null],\n      CONTATOS_VALIDOS: [null],\n      PAGI: [1],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/comercial/home`,\n      },\n      {\n        descricao: 'Akna',\n        routerLink: `/comercial/akna/${id}`,\n      },\n      {\n        descricao: 'Contatos',\n      },\n    ];\n  }\n\n  async onFilter() {\n    const { ID, DESCRICAO, ARQUIVADA } = this.getParams();\n\n    let _params = {};\n\n    if (ID) _params['ID'] = ID;\n\n    if (DESCRICAO) _params['DESCRICAO'] = DESCRICAO;\n\n    if (ARQUIVADA) _params['ARQUIVADA'] = ARQUIVADA;\n\n    if (Object.keys(_params).length === 0) {\n      this.contatosFiltrados = this.contatos;\n      return;\n    }\n\n    const promise = new Promise((resolve, reject) => {\n      try {\n        const filter = this.contatos.filter((contato) => {\n          let _match = false;\n          for (const key in _params) {\n            if (key === 'DESCRICAO') {\n              if (\n                contato[key]\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(_params[key].toString().toLowerCase()) == -1\n              ) {\n                _match = false;\n                break;\n              }\n            } else if (contato[key] !== _params[key]) {\n              _match = false;\n              break;\n            }\n            _match = true;\n          }\n          return _match;\n        });\n        resolve(filter);\n      } catch (error) {\n        reject(error);\n      }\n    });\n\n    await promise\n      .then((contatos: IComercialAknaContatos[]) => {\n        this.contatosFiltrados = contatos;\n        console.log(contatos);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  openRegister(contato: IComercialAknaContatos) {\n    this.route.navigate(['../cadastro'], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(contato),\n    });\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n\n  getParams() {\n    let _params: Partial<IComercialAknaContatos> = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  classStatusBorder(contato: IComercialAknaContatos): string {\n    let borderClass: string;\n\n    if (contato.ARQUIVADA == 'N') {\n      borderClass = 'border-success';\n    } else if (contato.ARQUIVADA == 'S') {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialClientesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes`;\n\n  constructor(protected http: HttpClient) {}\n\n  getStatus(): Observable<Object> {\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1), retry(2));\n  }\n\n  getClientes(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/pesquisa/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getClientesGrupoEconomico(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/grupo-economico/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getPermissaoAcesso(id: any): Observable<Object> {\n    return this.http\n      .get(`${this.API}/permissao-acesso/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/pesquisa/detalhes/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatosResumido(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getExisteCpfCnpj(\n    documento: any,\n    getDadosCliente: boolean\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/verificar-cpf-cnpj/${documento}?getDadosCliente=${\n          getDadosCliente === true ? 1 : 0\n        }`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  postCliente(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/pre-cadastro`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPropostaAnaliseCredito(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/proposta-analise-credito/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosFaturamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-faturamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosFaturamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-faturamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteAtividadeSecundaria(\n    codCliente: number,\n    id: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/atividade-secundaria/${codCliente}/${id}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getEnderecos(\n    codCliente: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/cadastro/carregar/enderecos/${codCliente}`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getEndereco(\n    codCliente: number,\n    idEndereco: number,\n    idSituacao: number\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/endereco/${codCliente}/${idEndereco}/${idSituacao}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  updateEndereco(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/endereco`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteEndereco(codCliente: number, id: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/endereco/${codCliente}/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatos(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContato(\n    codCliente: number,\n    idContato: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contato/${codCliente}/${idContato}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateContato(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/contato`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteMeioContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/meio-contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteFilho(idFilho: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/filho/${idFilho}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosRelacionamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-relacionamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosRelacionamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-relacionamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPotencialCompra(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/potencial-compra/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updatePotencialCompra(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/potencial-compra`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getAnexos(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/anexos/${codCliente}`)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  uploadAnexo(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/cadastro/upload/anexo`, data)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  deleteAnexo(idAnexo: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/anexo/${idAnexo}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getFilial(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/filial/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getTravas(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/travas/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesFinanceiras(codCliente: number): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/informacoes-financeiras/${codCliente}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesComerciais(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/informacoes-comerciais/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getListaEmails(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/emails/lista/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { event } from './../../../admin/perfis/models/event';\nimport { Injectable, EventEmitter } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { IComercialAknaContatos } from './models/contatos';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialAknaContatosService {\n  private readonly API = environment.API;\n  event: EventEmitter<Partial<event>> = new EventEmitter<Partial<event>>();\n  constructor(private http: HttpClient) {}\n  getContatos(params?) {\n    return this.http.get(\n      `${this.API}/comercial/integracoes/akna/listas-contatos`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postContatos(contatos: IComercialAknaContatos) {\n    return this.http.post(`${this.API}/comercial/akna/contatos`, contatos, {\n      observe: 'response',\n    });\n  }\n\n  // -------------------------------------------Clientes-------------------------------\n\n  getClientes(params?) {\n    return this.http.get(\n      `${this.API}/comercial/integracoes/akna/listas-contatos-clientes`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n  getSetorAtividades(params?) {\n    return this.http.get(\n      `${this.API}/comercial/emailMarketing/associacao/setor-atividade`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  postVinculoClientes(params) {\n    return this.http.post(`${this.API}`, params, {\n      observe: 'response',\n    });\n  }\n\n  onEventLoading(value: boolean): void {\n    this.event.emit({ loading: value });\n  }\n\n  onEventFilter(): void {\n    this.event.emit({ filter: true });\n  }\n}\n","export default \"\\n<div>\\n  <advanced-filter>\\n    <form [formGroup]=\\\"formFilter\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\n          <label for=\\\"buscarPor\\\">Buscar por</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"buscarPor\\\"\\n            formControlName=\\\"buscarPor\\\">\\n            <option value=\\\"1\\\">Código, nome fantasia ou razão social</option>\\n            <option value=\\\"2\\\">CPF ou CNPJ</option>\\n            <option value=\\\"3\\\">Cidade</option>\\n            <option value=\\\"4\\\">Código SAP</option>\\n            <option value=\\\"5\\\">Contatos</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-4  pl-0\\\">\\n          <label for=\\\"pesquisa\\\">Termo de pesquisa</label>\\n          <input\\n            type=\\\"text\\\"\\n            placeholder=\\\"digite...\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"pesquisa\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\n          <label for=\\\"linhas\\\">Linha</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"linhas\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            dropdownPosition=\\\"bottom\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            labelForId=\\\"ID_LINH\\\"\\n            bindLabel=\\\"NM_LINH\\\"\\n            bindValue=\\\"linha\\\"\\n            id=\\\"linha\\\"\\n            formControlName=\\\"linha\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2  pl-0\\\">\\n          <label for=\\\"tipoPessoa\\\">Tipo de pessoa</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"tipoPessoa\\\"\\n            formControlName=\\\"tipoPessoa\\\">\\n            <option value=\\\"F\\\">Pessoa física</option>\\n            <option value=\\\"J\\\">Pessoa jurídica</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\n          <label for=\\\"tipoData\\\">Tipo de Data</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"tipoData\\\"\\n            formControlName=\\\"tipoData\\\">\\n            <option value=\\\"1\\\">Data de Inclusão</option>\\n            <option value=\\\"2\\\">Data do Último Faturamento</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-md-2 pl-0\\\">\\n          <label for=\\\"dataInicio\\\">Data Inicial</label>\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n            </div>\\n            <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataInicio\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            data-placement=\\\"top\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"dataInicio\\\"\\n            >\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col-md-2 pl-0\\\">\\n          <label for=\\\"dataFinal\\\">Data Final</label>\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n            </div>\\n            <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataFinal\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            data-placement=\\\"top\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"dataFinal\\\"\\n            >\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\n          <label for=\\\"situacao\\\">Situação</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"situacao\\\"\\n            formControlName=\\\"situacao\\\">\\n            <option value=\\\"Ativo\\\">Ativos</option>\\n            <option value=\\\"Inativo\\\">Inativos</option>\\n            <option value=\\\"Potenci\\\">Potenciais</option>\\n            <option value=\\\"Arquivo\\\">Arquivados</option>\\n            <option value=\\\"T\\\">Todos</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2  pl-0\\\">\\n          <label for=\\\"registros\\\">Registros</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"registros\\\"\\n            formControlName=\\\"registros\\\">\\n            <option>10</option>\\n            <option>25</option>\\n            <option>50</option>\\n            <option>100</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3  pl-0\\\">\\n          <label for=\\\"gerentes\\\">Gerencia</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"gerentes\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            dropdownPosition=\\\"bottom\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            labelForId=\\\"gerente\\\"\\n            bindLabel=\\\"DS_GERE\\\"\\n            bindValue=\\\"gerente\\\"\\n            id=\\\"gerente\\\"\\n            formControlName=\\\"gerente\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-4  pl-0\\\">\\n          <label for=\\\"vendedores\\\">Vendedor</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"vendedores\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            dropdownPosition=\\\"bottom\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            labelForId=\\\"vendedor\\\"\\n            bindLabel=\\\"nome\\\"\\n            bindValue=\\\"id\\\"\\n            id=\\\"vendedor\\\"\\n            formControlName=\\\"vendedor\\\"\\n            >\\n          </ng-select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"dataLoaded && clientes.length > 0\\\">\\n    <div class=\\\"col-12\\\" *ngIf=\\\"clientes.length > 1\\\">\\n      <div class=\\\"custom-control custom-checkbox mr-sm-2 hover\\\">\\n        <input \\n        class=\\\"custom-control-input hover\\\" \\n        type=\\\"checkbox\\\" \\n        id=\\\"toggleAll\\\"\\n        (click)=\\\"onToggleAll()\\\">\\n        <label class=\\\"custom-control-label hover font-weight-bold\\\" for=\\\"toggleAll\\\">\\n          SELECIONAR OS {{totalClientes}} REGISTROS ENCONTRADOS\\n        </label>\\n      </div>\\n    </div>\\n    <br><br>\\n    <div class=\\\"col-12\\\">\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\"></th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"setOrderBy('codCliente')\\\">\\n              <thead-sorter value=\\\"Código\\\" [active]=\\\"orderBy == 'codCliente'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n            <th\\n              scope=\\\"col\\\"\\n              class=\\\"hover\\\"\\n              (click)=\\\"setOrderBy('razaoSocial')\\\">\\n              <thead-sorter value=\\\"Razon Social\\\" [active]=\\\"orderBy == 'razaoSocial'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let cliente of clientes\\\" [class.table-active]=\\\"cliente.codCliente == clienteSelecionado\\\">\\n            <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n              <btn-icon\\n                [icon]=\\\"cliente.checked ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                size=\\\"small\\\"\\n                (click)=\\\"onCheckClientes(cliente)\\\">\\n              </btn-icon>\\n            </td>\\n            <td class=\\\"text-center hover\\\" (click)=\\\"onCheckClientes(cliente)\\\">{{ cliente.codCliente | number: '6.0-0' }}</td>\\n            <td (click)=\\\"onCheckClientes(cliente)\\\">\\n              <i class=\\\"text-success  fas fa-circle mr-3\\\" tooltip=\\\"Ativo\\\" *ngIf= \\\"cliente.situacao == 'Ativo'\\\" ></i>\\n              <i class=\\\"text-danger fas fa-circle mr-3\\\" tooltip=\\\"Inativo\\\" *ngIf= \\\"cliente.situacao == 'Inativo'\\\" ></i>\\n              <i class=\\\"text-primary fas fa-circle mr-3\\\" tooltip=\\\"Potencial\\\" *ngIf= \\\"cliente.situacao == 'Potenci'\\\"></i>\\n              <i class=\\\"text-warning fas fa-circle mr-3\\\"  tooltip=\\\"Arquivado\\\" *ngIf= \\\"cliente.situacao == 'Arquivo'\\\" ></i>\\n              <span>{{ cliente.razaoSocial}}</span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"clientes[0]['total'] > itemsPerPage\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalClientes\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { ComercialVendedoresService } from './../../../../services/vendedores.service';\nimport { ComercialCadastrosAssociacaoLinhasService } from './../../../../cadastros/associacao-linhas/associacao-linhas.service';\nimport { event } from './../../../../../admin/perfis/models/event';\nimport { ComercialAknaContatosService } from './../../contatos.service';\nimport { Breadcrumb } from './../../../../../../shared/modules/breadcrumb/breadcrumb';\nimport { TitleService } from './../../../../../../shared/services/core/title.service';\nimport { ComercialClientesCadastroDadosFaturamentoFormularioService } from './../../../../clientes/cadastro/dados-faturamento/formulario/formulario.service';\nimport { AtividadesService } from './../../../../../../shared/services/requests/atividades.service';\nimport { JsonResponse } from './../../../../../../models/json-response';\nimport { ComercialClientesService } from './../../../../services/clientes.service';\n//angular\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n//services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//rxjs\nimport { finalize, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n//interfaces\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n@Component({\n  selector: 'comercial-akna-contatos-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.scss'],\n})\nexport class ComercialAknaContatosClientesComponent implements OnInit {\n  loaderNavbar = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home',\n    },\n    {\n      descricao: 'Busqueda de clientes',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n  $subscriptions: Subscription[] = [];\n  linhas: any = [];\n  vendedores: any = [];\n\n  idLista: number;\n  dataLoaded = false;\n  dadosCadastraisLoaded = false;\n  dadosCadastraisEmpty = false;\n  contatosLoaded = false;\n  contatosEmpty = false;\n  toggleAll = false;\n  searchSubmitted = false;\n  showAdvancedFilter = true;\n\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  matricula = this.currentUser['info']['matricula'];\n  bsConfig: Partial<BsDatepickerConfig>;\n  ativos = 0;\n  inativos = 0;\n  potencial = 0;\n  arquivados = 0;\n\n  formFilter: FormGroup;\n  buscandoPor: number;\n  tiposDatas: number;\n  pesquisa: string;\n  orderBy = 'codCliente';\n  orderType = 'desc';\n\n  maxSize = 10;\n  itemsPerPage = 50;\n  currentPage = 1;\n  totalClientes = 0;\n  gerentes: any = [];\n  clientes: any = [];\n  allClientes: any = [];\n  clientesPagination: any = [];\n\n  clienteSelecionado: number;\n  dadosCadastrais: any = {};\n  contatos: any = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private contatosService: ComercialAknaContatosService,\n    private clientesService: ComercialClientesService,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private localeService: BsLocaleService,\n    private comercialService: ComercialVendedoresService,\n    private setoresLinhaService: ComercialCadastrosAssociacaoLinhasService,\n    private titleService: TitleService\n  ) {\n    {\n      this.localeService.use('pt-br');\n      this.bsConfig = Object.assign(\n        {},\n        { containerClass: 'theme-dark-blue' },\n        { adaptivePosition: true },\n        { showWeekNumbers: false }\n      );\n    }\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.onEventSubscription();\n    this.getFormFilters();\n    this.setFormFilter();\n    this.titleService.setTitle('Busqueda de clientes');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getFormFilters(): void {\n    if (!this.idLista) {\n      this.setoresLinhaService\n        .getLinhas()\n        .pipe(finalize(() => {}))\n        .subscribe((response) => {\n          if (response.status === 200) {\n            this.linhas = response.body['data'];\n          }\n        });\n      this.comercialService\n        .getVendedores()\n        .pipe()\n        .subscribe((response: any) => {\n          if (response.responseCode === 200) {\n            this.vendedores = response.result;\n          }\n        });\n    }\n  }\n\n  setFormFilter(): void {\n    const formValue = this.checkRouterParams();\n    this.formFilter = this.formBuilder.group({\n      pesquisa: [formValue['pesquisa']],\n      linha: [formValue['linha']],\n      gerente: [formValue['gerente']],\n      dataFinal: [formValue['dataFinal']],\n      dataInicio: [formValue['dataInicio']],\n      vendedor: [formValue['vendedor']],\n      tipoPessoa: [formValue['tipoPessoa'], Validators.required],\n      buscarPor: [formValue['buscarPor'], Validators.required],\n      tipoData: [formValue['tipoData'], Validators.required],\n      situacao: [formValue['situacao'], Validators.required],\n      pagina: [formValue['pagina']],\n      registros: [formValue['registros'], Validators.required],\n    });\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      pesquisa: null,\n      buscarPor: 1,\n      tipoData: 1,\n      situacao: 'Ativo',\n      tipoPessoa: 'T',\n      pagina: 1,\n      linha: null,\n      registros: this.itemsPerPage,\n    };\n    const queryParams = this.activatedRoute.snapshot.queryParams;\n    if (Object.keys(queryParams).length > 0) {\n      let params = atob(queryParams['q']);\n      params = JSON.parse(params);\n      this.setSubmittedSearch();\n      this.search(params);\n\n      if (params['registros']) {\n        this.itemsPerPage = params['registros'];\n      }\n\n      Object.keys(formValue).forEach((formKey) => {\n        Object.keys(params).forEach((paramKey) => {\n          if (formKey == paramKey && formValue[formKey] != params[paramKey]) {\n            if (!isNaN(Number(params[paramKey]))) {\n              formValue[formKey] = Number(params[paramKey]);\n            } else {\n              formValue[formKey] = params[paramKey];\n            }\n          }\n        });\n      });\n    }\n\n    const params = this.activatedRoute.snapshot.params;\n    if (params.hasOwnProperty('id')) {\n      this.idLista = params.id;\n    }\n\n    return formValue;\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'desc') {\n        this.orderType = 'asc';\n      } else if (this.orderType == 'asc') {\n        this.orderType = 'desc';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'asc';\n    }\n    this.onFilter();\n  }\n\n  onAdvancedFilter(): void {\n    this.showAdvancedFilter = !this.showAdvancedFilter;\n  }\n\n  filterByStatus(status: string): void {\n    this.formFilter.get('situacao').setValue(status);\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    this.contatosService.onEventLoading(true);\n    let params = this.formFilter.value;\n    params['orderBy'] = this.orderBy;\n    params['orderType'] = this.orderType;\n\n    this.itemsPerPage = this.formFilter.value['registros'];\n    this.currentPage = 1;\n    this.setRouterParams(params);\n  }\n\n  setSubmittedSearch(): void {\n    this.searchSubmitted = true;\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n      queryParamsHandling: 'merge',\n    });\n    this.setSubmittedSearch();\n    this.search(params);\n  }\n\n  search(params: any): void {\n    if (this.searchSubmitted) {\n      this.loaderNavbar = true;\n      this.dataLoaded = false;\n      this.clientes = [];\n      this.buscandoPor = params['buscarPor'];\n      this.tiposDatas = params['tipoData'];\n      this.pesquisa = params['pesquisa'];\n\n      this.clientesService\n        .getClientes(params)\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n            this.dataLoaded = true;\n          })\n        )\n        .subscribe({\n          next: (response: any) => {\n            if (response['responseCode'] === 200) {\n              const clientes = response.result.analitico;\n              // clientes.map(function (el: any) {\n              //   el.checked = 0;\n              // });\n              this.clientes = clientes.slice(0, this.itemsPerPage);\n              this.allClientes =\n                response['result']['sintetico'][1]['quantidade'];\n              this.totalClientes = this.clientes[0]['total'];\n            } else if (response['responseCode'] === 204) {\n              this.ativos = 0;\n              this.inativos = 0;\n              this.potencial = 0;\n              this.arquivados = 0;\n              this.pnotifyService.notice('Nenhum registro encontrado!');\n            }\n          },\n          error: (error: any) => {\n            this.pnotifyService.error();\n          }\n        });\n    }\n  }\n\n  onToggleAll() {\n    this.toggleAll = !this.toggleAll;\n    this.clientes.map((cliente) => (cliente.checked = this.toggleAll));\n    this.postVinculoAllClientes();\n  }\n\n  onCheckClientes(cliente: any): void {\n    cliente.checked = !cliente.checked;\n    this.postVinculoClientes(cliente);\n  }\n\n  postVinculoAllClientes(cliente?) {\n    let _params = {};\n    this.contatosService.onEventLoading(true);\n    _params['filtros'] = this.formFilter.value;\n    _params['idLista'] = this.idLista;\n    if (this.toggleAll) {\n      _params['selectAll'] = '1';\n    } else {\n      _params['selectAll'] = '0';\n    }\n    this.contatosService\n      .postVinculoClientes(_params)\n      .pipe(\n        finalize(() => {\n          this.contatosService.onEventLoading(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.pnotifyService.success();\n        },\n        error: (error) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n  postVinculoClientes(cliente?) {\n    let _params = {};\n    this.contatosService.onEventLoading(true);\n    _params['situacao'] = cliente.checked == true ? 1 : 0;\n    _params['codCliente'] = cliente.codCliente;\n    _params['idLista'] = this.idLista;\n    this.contatosService\n      .postVinculoClientes(_params)\n      .pipe(\n        finalize(() => {\n          this.contatosService.onEventLoading(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.pnotifyService.success();\n        },\n        error: (error) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n\n  classStatusBorder(status: string): string {\n    let borderClass: string;\n\n    if (status == 'Ativo') {\n      borderClass = 'border-success';\n    } else if (status == 'Inativo') {\n      borderClass = 'border-danger';\n    } else if (status == 'Potenci') {\n      borderClass = 'border-primary';\n    } else if (status == 'Arquivo') {\n      borderClass = 'border-secondary';\n    }\n\n    return borderClass;\n  }\n\n  onEventSubscription() {\n    this.$subscriptions[2] = this.contatosService.event.subscribe(\n      (response: event) => {\n        if (response.filter === true) {\n          this.onFilter();\n        }\n      }\n    );\n  }\n\n  onPageChanged(event: PageChangedEvent) {\n    if (this.formFilter.value['pagina'] != event.page) {\n      this.resetClienteSelecionado();\n      this.formFilter.value['pagina'] = event.page;\n      this.onFilter();\n    }\n  }\n\n  onPreCadastroCpfCnpj() {\n    let pesquisa = this.pesquisa.replace(/\\D/g, '');\n\n    if (pesquisa.length === 11) {\n      return { cpf: pesquisa };\n    } else if (pesquisa.length === 14) {\n      return { cnpj: pesquisa };\n    }\n\n    return {};\n  }\n\n  handleCounter(value: any) {\n    return value.toFixed(0);\n  }\n\n  resetClienteSelecionado() {\n    this.clienteSelecionado = null;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FrbmEvY29udGF0b3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FrbmEvY29udGF0b3MvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"CONTATOS\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"ID\\\">ID</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"ID\\\"\\n                formControlName=\\\"ID\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"DESCRICAO\\\">Descrição</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"DESCRICAO\\\"\\n                formControlName=\\\"DESCRICAO\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"ARQUIVADA\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"ARQUIVADA\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\n              </ng-template>\\n            </ng-select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"!noResult\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">ID </th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Descrição</th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Quantidade de e-mails</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let contato of contatosFiltrados | slice : begin : end; let i = index\\\">\\n            <td\\n              class=\\\"text-center hover\\\"\\n              [ngClass]=\\\"classStatusBorder(contato)\\\">\\n              {{contato.ID}}\\n            </td>\\n            <td  class=\\\"text-center hover\\\">{{ contato.DESCRICAO }}</td>\\n            <td  class=\\\"text-center hover\\\">{{ contato.CONTATOS_VALIDOS}}</td>\\n          </tr>\\n        </ng-template>\\n      </custom-table><br>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"noResult\\\">\\n      </empty-result>\\n      <div *ngIf=\\\"!noResult\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\";","import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { RouterModule } from '@angular/router';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport ptBr from '@angular/common/locales/pt';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nregisterLocaleData(ptBr);\ndefineLocale('pt-br', ptBrLocale);\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialAknaContatosListaComponent } from './lista/lista.component';\nimport { ComercialAknaContatosRoutingModule } from './contatos-routing.module';\nimport { ComercialAknaContatosFormularioComponent } from './formulario/formulario.component';\nimport { ComercialAknaContatosClientesComponent } from './formulario/clientes/clientes.component';\n\n@NgModule({\n  declarations: [\n    ComercialAknaContatosListaComponent,\n    ComercialAknaContatosFormularioComponent,\n    ComercialAknaContatosClientesComponent,\n  ],\n  imports: [\n    ComercialAknaContatosRoutingModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n    CurrencyMaskModule,\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\n})\nexport class ComercialAknaContatosModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//components\nimport { ComercialAknaContatosListaComponent } from './lista/lista.component';\nimport { ComercialAknaContatosFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialAknaContatosListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialAknaContatosFormularioComponent,\n  },\n  {\n    path: ':id',\n    component: ComercialAknaContatosFormularioComponent,\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialAknaContatosRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}