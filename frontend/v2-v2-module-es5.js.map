{"version":3,"sources":["webpack:///src/app/modules/logistica/dashboards/analise-frete/v2/v2.component.html","webpack:///src/app/modules/logistica/dashboards/analise-frete/v2/v2.component.ts","webpack:///src/app/modules/logistica/dashboards/analise-frete/v2/v2.module.ts","webpack:///src/app/modules/logistica/dashboards/analise-frete/v2/v2.component.scss","webpack:///src/app/modules/logistica/dashboards/analise-frete/v2/v2-routing.module.ts"],"names":["LogisticaDashboardsAnaliseFreteV2Component","activatedRoute","atividadesService","formBuilder","localeService","router","http","pnotify","dateService","service","routeService","xlsxService","breadCrumbTree","API","currentUser","JSON","parse","localStorage","getItem","matricula","dataLoaded","permission","empresas","data","total","show","loading","empty","columns","segmentacao","rotulos","appTitle","tableConfig","subtitleBorder","isFixed","border","small","hover","theme","color","orderBy","orderType","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","form","group","projeto","dataInicial","getFirstDayMonth","required","dataFinal","Date","parametrizacao","tipoVeiculo","uf","contratoFrete","select","where","groupBy","origem","timestamp","getTime","registrarAcesso","subscribe","getEmpresas","onActiveRoute","getRotulos","setBreadCrumb","queryParams","response","_params","stringify","getBase64UrlParams","undefined","keys","length","split","forEach","element","patchValue","getIndicadores","getParams","params","snapshot","submoduloId","idSubModulo","descricao","routerLink","get","observe","pipe","error","_obj","value","prop","convertToUrlDate","Array","isArray","toString","setValue","navigate","relativeTo","setBase64UrlParams","field","formControl","controls","validator","validationResult","status","touched","$indicadoresSubscription","unsubscribe","parametro","requests","push","body","column","orderData","key","type","sort","a","b","e","map","index","v2","nome","read","selector","template","V2Module","declarations","imports","forRoot","routes","path","component","V2RoutingModule","forChild","exports"],"mappings":"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","file":"v2-v2-module-es5.js","sourcesContent":["export default \"<loader-spinner-full-screen *ngIf=\\\"!dataLoaded\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loading\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"onExport()\\\"\\r\\n    *ngIf=\\\"permission\\\"\\r\\n    [disabled]=\\\"form.status === 'INVALID' && !isFiltered\\\"\\r\\n  >\\r\\n    Exportar\\r\\n  </button>\\r\\n  <button\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    *ngIf=\\\"permission\\\"\\r\\n    [disabled]=\\\"form.status === 'INVALID' && !isFiltered\\\"\\r\\n  >\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <advanced-filter>\\r\\n    <form id=\\\"form-logistica-dashboard\\\" [formGroup]=\\\"form\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-3\\\">\\r\\n        <label for=\\\"empresa\\\">Empresa</label>\\r\\n        <ng-select\\r\\n          [searchable]=\\\"true\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          [items]=\\\"empresas\\\"\\r\\n          [virtualScroll]=\\\"true\\\"\\r\\n          [multiple]=\\\"true\\\"\\r\\n          [closeOnSelect]\\t=\\\"false\\\"\\r\\n          labelForId=\\\"empresa\\\"\\r\\n          bindLabel=\\\"dsEmpresa\\\"\\r\\n          bindValue=\\\"dsEmpresa\\\"\\r\\n          id=\\\"empresa\\\"\\r\\n          formControlName=\\\"projeto\\\"\\r\\n        >\\r\\n        </ng-select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-3\\\">\\r\\n        <label for=\\\"empresa\\\">Data Inicial</label>\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n          </div>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataInicial\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            [ngClass]=\\\"onFieldRequired('dataInicial')\\\"\\r\\n            formControlName=\\\"dataInicial\\\">\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial')\\\" message=\\\"Data Inicial é obrigatório.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-3\\\">\\r\\n        <label for=\\\"empresa\\\">Data Final</label>\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n          </div>\\r\\n          <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"dataFinal\\\"\\r\\n          type=\\\"text\\\"\\r\\n          bsDatepicker\\r\\n          [bsConfig]=\\\"bsConfig\\\"\\r\\n          [ngClass]=\\\"onFieldRequired('dataFinal')\\\"\\r\\n          formControlName=\\\"dataFinal\\\">\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal')\\\" message=\\\"Data Final é obrigatório.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-3\\\">\\r\\n        <label>UF</label>\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          formControlName=\\\"uf\\\"\\r\\n          (keyup.enter)=\\\"onFilter()\\\"\\r\\n          >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-3\\\">\\r\\n        <label>Contrato de Frete</label>\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          formControlName=\\\"contratoFrete\\\"\\r\\n          (keyup.enter)=\\\"onFilter()\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-3\\\">\\r\\n        <label>Tipo de Veículo</label>\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          formControlName=\\\"tipoVeiculo\\\"\\r\\n          (keyup.enter)=\\\"onFilter()\\\"  \\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-3\\\">\\r\\n        <label for=\\\"\\\">Segmentação</label>\\r\\n        <ng-select\\r\\n          [searchable]=\\\"true\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          [multiple]=\\\"true\\\"\\r\\n          [items]=\\\"segmentacao\\\"\\r\\n          placeholder=\\\"Selecione uma opção\\\"\\r\\n          bindLabel=\\\"nome\\\"\\r\\n          bindValue=\\\"nome\\\"\\r\\n          formControlName=\\\"parametrizacao\\\"\\r\\n          (change)=\\\"prepareData($event);\\\"\\r\\n          >\\r\\n        </ng-select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-3\\\">\\r\\n        <label for=\\\"origem\\\">Origem</label>\\r\\n        <select\\r\\n          name=\\\"origem\\\"\\r\\n          id=\\\"origem\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          formControlName=\\\"origem\\\"\\r\\n          (change)=\\\"onFilter()\\\"  \\r\\n        >\\r\\n          <option value=\\\"TMS\\\">TMS</option>\\r\\n          <option value=\\\"Fusion\\\">Fusion</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div>\\r\\n    <div *ngIf=\\\"show\\\">\\r\\n      <div class=\\\"mb-4\\\">\\r\\n        <custom-table class=\\\"text-center\\\" >\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Ano']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Ano\\\"\\r\\n                  [active]=\\\"orderBy == 'Ano'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('Ano')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Mês']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Mês\\\"\\r\\n                  [active]=\\\"orderBy == 'Mês'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('Mês')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['UF']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"UF\\\"\\r\\n                  [active]=\\\"orderBy == 'UF'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('UF')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Contrato de Frete']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Contrato de Frete\\\"\\r\\n                  [active]=\\\"orderBy == 'Contrato de Frete'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('Contrato de Frete')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Tipo de Veículo']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Tipo de Veículo\\\"\\r\\n                  [active]=\\\"orderBy == 'Tipo de Veículo'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('Tipo de Veículo')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Custo de Frete\\\"\\r\\n                    [active]=\\\"orderBy == 'Custo de Frete'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Custo de Frete')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Custo de Frete']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Peso Total Transportado\\\"\\r\\n                    [active]=\\\"orderBy == 'Peso Total Transportado'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Peso Total Transportado')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Peso Total Transportado']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"KM Total\\\"\\r\\n                    [active]=\\\"orderBy == 'KM Total'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('KM Total')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['KM Total']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Valor Nota Fiscal\\\"\\r\\n                    [active]=\\\"orderBy == 'Valor Nota Fiscal'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Valor Nota Fiscal')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Valor Nota Fiscal']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Capacidade de Transporte\\\"\\r\\n                    [active]=\\\"orderBy == 'Capacidade de Transporte'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Capacidade de Transporte')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Capacidade de Transporte']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let item of data\\\">\\r\\n              <td *ngIf=\\\"columns['Ano']\\\">{{item['Ano'] | hifen}}</td>\\r\\n              <td *ngIf=\\\"columns['Mês']\\\">{{item['Mês'] | hifen}}</td>\\r\\n              <td *ngIf=\\\"columns['UF']\\\">{{item['UF'] | hifen}}</td>\\r\\n              <td *ngIf=\\\"columns['Contrato de Frete']\\\">{{item['Contrato de Frete'] | hifen}}</td>\\r\\n              <td *ngIf=\\\"columns['Tipo de Veículo']\\\">{{item['Tipo de Veículo'] | hifen}}</td>\\r\\n              <td>{{item['Custo de Frete'] | currency: 'BRL'}}</td>\\r\\n              <td>{{item['Peso Total Transportado'] | number: '1.0-0'}}</td>\\r\\n              <td>{{item['KM Total'] | number: '1.0-0'}}</td>\\r\\n              <td>{{item['Valor Nota Fiscal'] | currency: 'BRL'}}</td>\\r\\n              <td>{{item['Capacidade de Transporte'] | number: '1.0-0'}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Ano']\\\">-</td>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Mês']\\\">-</td>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['UF']\\\">-</td>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Contrato de Frete']\\\">-</td>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Tipo de Veículo']\\\">-</td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Custo de Frete'] | currency: 'BRL'}}</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Peso Total Transportado'] | number: '1.0-0'}}</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['KM Total'] | number: '1.0-0'}}</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Valor Nota Fiscal'] | currency: 'BRL'}}</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Capacidade de Transporte'] | number: '1.0-0'}}</strong></td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </div>\\r\\n      <div class=\\\"mb-4\\\">\\r\\n        <custom-table class=\\\"text-center\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Ano']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Ano\\\"\\r\\n                  [active]=\\\"orderBy == 'Ano'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('Ano')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Mês']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Mês\\\"\\r\\n                  [active]=\\\"orderBy == 'Mês'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('Mês')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['UF']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"UF\\\"\\r\\n                  [active]=\\\"orderBy == 'UF'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('UF')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Contrato de Frete']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Contrato de Frete\\\"\\r\\n                  [active]=\\\"orderBy == 'Contrato de Frete'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('Contrato de Frete')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Tipo de Veículo']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Tipo de Veículo\\\"\\r\\n                  [active]=\\\"orderBy == 'Tipo de Veículo'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('Tipo de Veículo')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Reais x Ton\\\"\\r\\n                    [active]=\\\"orderBy == 'Boliviano x Ton'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Reais x Ton')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Boliviano x Ton']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Reais x KM\\\"\\r\\n                    [active]=\\\"orderBy == 'Reais x KM'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Reais x KM')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Reais x KM']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Frete x Receita\\\"\\r\\n                    [active]=\\\"orderBy == 'Frete x Receita'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Frete x Receita')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Frete x Receita']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Taxa de Ocupação\\\"\\r\\n                    [active]=\\\"orderBy == 'Taxa de Ocupação'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Taxa de Ocupação')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Taxa de Ocupação']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Ticket Médio Por Entrega\\\"\\r\\n                    [active]=\\\"orderBy == 'Ticket Médio Por Entrega'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Ticket Médio Por Entrega')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Ticket Médio Por Entrega']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let item of data\\\">\\r\\n              <td *ngIf=\\\"columns['Ano']\\\">{{item['Ano'] | hifen}}</td>\\r\\n              <td *ngIf=\\\"columns['Mês']\\\">{{item['Mês'] | hifen}}</td>\\r\\n              <td *ngIf=\\\"columns['UF']\\\">{{item['UF'] | hifen}}</td>\\r\\n              <td *ngIf=\\\"columns['Contrato de Frete']\\\">{{item['Contrato de Frete'] | hifen}}</td>\\r\\n              <td *ngIf=\\\"columns['Tipo de Veículo']\\\">{{item['Tipo de Veículo'] | hifen}}</td>\\r\\n              <td>{{item['Reais x Ton'] | currency: 'BRL'}}</td>\\r\\n              <td>{{item['Reais x KM'] | currency: 'BRL'}}</td>\\r\\n              <td>{{item['Frete x Receita']| number: '1.2-2': 'pt-BR'}}%</td>\\r\\n              <td>{{item['Taxa de Ocupação'] | number: '1.2-2': 'pt-BR'}}%</td>\\r\\n              <td>{{item['Ticket Médio Por Entrega']  | number: '1.3-3': 'pt-BR'}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Ano']\\\"><strong>-</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Mês']\\\"><strong>-</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['UF']\\\"><strong>-</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Contrato de Frete']\\\"><strong>-</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Tipo de Veículo']\\\"><strong>-</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Reais x Ton'] | currency: 'BRL'}}</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Reais x KM'] | currency: 'BRL'}}</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Frete x Receita']  | number: '1.2-2'}}%</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Taxa de Ocupação']  | number: '1.2-2'}}%</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Ticket Médio Por Entrega'] | number: '1.3-3'}}</strong></td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </div>\\r\\n      <div class=\\\"mb-4\\\"> \\r\\n        <custom-table class=\\\"text-center\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Ano']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Ano\\\"\\r\\n                  [active]=\\\"orderBy == 'Ano'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('Ano')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Mês']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Mês\\\"\\r\\n                  [active]=\\\"orderBy == 'Mês'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('Mês')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['UF']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"UF\\\"\\r\\n                  [active]=\\\"orderBy == 'UF'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('UF')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Contrato de Frete']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Contrato de Frete\\\"\\r\\n                  [active]=\\\"orderBy == 'Contrato de Frete'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('Contrato de Frete')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" *ngIf=\\\"columns['Tipo de Veículo']\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Tipo de Veículo\\\"\\r\\n                  [active]=\\\"orderBy == 'Tipo de Veículo'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('Tipo de Veículo')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Total de Clientes\\\"\\r\\n                    [active]=\\\"orderBy == 'Total de Clientes'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Total de Clientes')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Total de Clientes']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Total de Viagens\\\"\\r\\n                    [active]=\\\"orderBy == 'Total de Viagens'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Total de Viagens')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Total de Viagens']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\"> \\r\\n                  <thead-sorter\\r\\n                    value=\\\"Total de Entregas\\\"\\r\\n                    [active]=\\\"orderBy == 'Total de Entregas'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Total de Entregas')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                      class=\\\"far fa-question-circle\\\"\\r\\n                      [tooltip]=\\\"rotulos['Total de Entregas']['descricao']\\\"\\r\\n                      placement=\\\"right\\\"\\r\\n                      container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Entregas x Viagem\\\"\\r\\n                    [active]=\\\"orderBy == 'Entregas x Viagem'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Entregas x Viagem')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Entregas x Viagem']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" width=\\\"12%\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <thead-sorter\\r\\n                    value=\\\"Peso Médio x Viagem\\\"\\r\\n                    [active]=\\\"orderBy == 'Peso Médio x Viagem'\\\"\\r\\n                    [sort]=\\\"orderType\\\"\\r\\n                    (click)=\\\"setOrderBy('Peso Médio x Viagem')\\\">\\r\\n                  </thead-sorter>\\r\\n                  <div>\\r\\n                    <i\\r\\n                    class=\\\"far fa-question-circle\\\"\\r\\n                    [tooltip]=\\\"rotulos['Peso Médio x Viagem']['descricao']\\\"\\r\\n                    placement=\\\"right\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    >\\r\\n                    </i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let item of data\\\">\\r\\n              <td *ngIf=\\\"columns['Ano']\\\">{{item['Ano'] | hifen}}</td>\\r\\n              <td *ngIf=\\\"columns['Mês']\\\">{{item['Mês'] | hifen}}</td>\\r\\n              <td *ngIf=\\\"columns['UF']\\\">{{item['UF'] | hifen}}</td>\\r\\n              <td *ngIf=\\\"columns['Contrato de Frete']\\\">{{item['Contrato de Frete'] | hifen}}</td>\\r\\n              <td *ngIf=\\\"columns['Tipo de Veículo']\\\">{{item['Tipo de Veículo'] | hifen}}</td>\\r\\n              <td>{{item['Total de Clientes'] | number: '1.0-0'}}</td>\\r\\n              <td>{{item['Total de Viagens'] | number: '1.0-0'}}</td>\\r\\n              <td>{{item['Total de Entregas'] | number: '1.0-0'}}</td>\\r\\n              <td>{{item['Entregas x Viagem'] | number: '1.3-3': 'pt-BR'}}</td>\\r\\n              <td>{{item['Peso Médio x Viagem'] | number: '1.3-3': 'pt-BR'}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Ano']\\\"><strong>-</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Mês']\\\"><strong>-</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['UF']\\\"><strong>-</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Contrato de Frete']\\\"><strong>-</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\" *ngIf=\\\"columns['Tipo de Veículo']\\\"><strong>-</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Total de Clientes'] | number: '1.0-0': 'pt-BR'}}</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Total de Viagens']  | number: '1.0-0'}}</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Total de Entregas'] | number: '1.0-0': 'pt-BR'}}</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Entregas x Viagem'] | number: '1.3-3': 'pt-BR'}}</strong></td>\\r\\n              <td class=\\\"bg-dark text-white\\\"><strong>{{total['Peso Médio x Viagem'] | number: '1.3-3': 'pt-BR'}}</strong></td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"empty\\\" class=\\\"text-center h-50 my-auto d-flex justify-content-center align-items-center\\\">\\r\\n      <empty-result message=\\\"No se encontró información \\\"></empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\";","// angular\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// ngx\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap';\r\n\r\n// rxjs\r\nimport { Subscription, forkJoin } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { LogisticaDashboardsAnaliseFreteService } from '../services/analise-frete.service';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { XlsxService } from 'src/app/shared/services/core/xlsx.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n@Component({\r\n  selector: 'logistica-dashboards-frete-analitico',\r\n  templateUrl: './v2.component.html',\r\n  styleUrls: ['./v2.component.scss']\r\n})\r\nexport class LogisticaDashboardsAnaliseFreteV2Component implements OnInit {\r\n\r\n  breadCrumbTree: any = []\r\n\r\n  @ViewChild('scroll', { read: ElementRef }) public scroll: ElementRef<any>;\r\n  \r\n  info: string;\r\n  $subscription: Subscription;\r\n  $indicadoresSubscription: Subscription;\r\n\r\n  private readonly API = environment.API;\r\n  currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  matricula = this.currentUser[\"info\"][\"matricula\"];\r\n  \r\n  dataLoaded = false;\r\n  permission = false;\r\n  \r\n  form: FormGroup;\r\n  empresas: any = [];\r\n  \r\n  data = [];\r\n  total = {};\r\n  show = false;\r\n  loading = false;\r\n  empty = false;\r\n\r\n  columns = {\r\n    'Ano': false,\r\n    'Mes': false,\r\n    'UF': false,\r\n    'Tipo de Veículo': false,\r\n    'Contrato de Frete': false\r\n  }\r\n\r\n  segmentacao = [\r\n    {\r\n      'nome': 'Ano',\r\n      'v2': {\r\n        'select':' ,[Ano] ',\r\n        'where': ' S1.[Ano] = T1.[Ano] ',\r\n        'groupBy': ' [Ano] ',\r\n        'orderBy': ' [Ano] '\r\n      }\r\n    },\r\n    {\r\n      'nome': 'Mês',\r\n      'v2': {\r\n        'select':' ,[Mês] ',\r\n        'where': ' S1.[Mês] = T1.[Mês] ',\r\n        'groupBy': ' [Mês] ',\r\n        'orderBy': ' [Mês] '\r\n      }\r\n    },\r\n    {\r\n      'nome': 'UF',\r\n      'v2': {\r\n        'select':' ,[UF] ',\r\n        'where': ' S1.[UF] = T1.[UF] ',\r\n        'groupBy': ' [UF] ',\r\n        'orderBy': ' [UF] '\r\n      }\r\n    },\r\n    {\r\n      'nome': 'Tipo de Veículo',\r\n      'v2': {\r\n        'select':' ,[Tipo de Veículo] ',\r\n        'where': ' S1.[Tipo de Veículo] = T1.[Tipo de Veículo] ',\r\n        'groupBy': ' [Tipo de Veículo] ',\r\n        'orderBy': ' [Tipo de Veículo] '\r\n      }\r\n    },\r\n    {\r\n      'nome': 'Contrato de Frete',\r\n      'v2': {\r\n        'select':' ,[Contrato de Frete] ',\r\n        'where': ' S1.[Contrato de Frete] = T1.[Contrato de Frete] ',\r\n        'groupBy': ' [Contrato de Frete] ',\r\n        'orderBy': ' [Contrato de Frete] '\r\n      }\r\n    }\r\n  ]\r\n\r\n  rotulos = {};\r\n\r\n  appTitle = 'Análise de Frete II'\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: false,\r\n    isFixed: true,\r\n    border: false,\r\n    small: false,\r\n    hover: false,\r\n    theme: {\r\n      color: 'white',\r\n    },\r\n  };\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  orderBy = 'Frete';\r\n  orderType = 'DESC';\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private atividadesService: AtividadesService,\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private pnotify: PNotifyService,\r\n    private dateService: DateService,\r\n    private service: LogisticaDashboardsAnaliseFreteService,\r\n    private routeService: RouterService,\r\n    private xlsxService: XlsxService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n\r\n    this.form = this.formBuilder.group({\r\n      projeto: [null],\r\n      dataInicial: [dateService.getFirstDayMonth(), Validators.required],\r\n      dataFinal: [new Date(), Validators.required],\r\n      parametrizacao: [[]],\r\n      tipoVeiculo: [null],\r\n      uf: [null],\r\n      contratoFrete: [null],\r\n      select: [null],\r\n      where: [null],\r\n      groupBy: [null],\r\n      orderBy: [null],\r\n      origem: ['TMS'],\r\n      timestamp: [(new Date()).getTime()]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n    this.getEmpresas();\r\n    this.onActiveRoute();\r\n    this.getRotulos();\r\n    this.setBreadCrumb();\r\n  }\r\n\r\n  onActiveRoute() {\r\n\r\n    this.activatedRoute.queryParams\r\n      .subscribe(\r\n      response => {\r\n\r\n        let _params = JSON.parse(JSON.stringify(this.routeService.getBase64UrlParams(response)));\r\n    \r\n        if(_params == undefined){\r\n          return\r\n        }\r\n\r\n        if(Object.keys(_params).length == 0){\r\n          return\r\n        }\r\n        \r\n        _params.projeto = _params?.projeto?.split(',');\r\n        _params.parametrizacao = _params?.parametrizacao ? JSON.parse(_params?.parametrizacao) : [];\r\n\r\n        _params.parametrizacao.forEach(element => {\r\n          this.columns[element] = true;\r\n        });\r\n\r\n        this.form.patchValue(_params);\r\n    \r\n        this.getIndicadores(this.getParams());\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  setBreadCrumb() {\r\n\r\n    const params = this.activatedRoute.snapshot.params;\r\n    const submoduloId = params?.idSubModulo;\r\n\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Logistica'\r\n      },\r\n      {\r\n        descricao: 'Dashboards',\r\n        routerLink: `/logistica/dashboards/${submoduloId}`\r\n      },\r\n      {\r\n        descricao: this.appTitle\r\n      }\r\n    ];\r\n  }\r\n\r\n  getEmpresas() {\r\n    this.http.get(`${this.API}/logistica/associacao-usuario-empresa/${this.matricula}`,\r\n      { params: { \"parametro\": \"4\" }, observe: \"response\" })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.permission = this.empresas.length == 0 ? false : true;\r\n          this.dataLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        data => {\r\n          this.empresas = [];\r\n\r\n          if (data[\"status\"] == 200) {\r\n            this.empresas = data[\"body\"];\r\n          }\r\n        },\r\n        error => {\r\n          this.permission = this.empresas.length == 0 ? false : true;\r\n          this.dataLoaded = true;\r\n        }\r\n      )\r\n  }\r\n\r\n  getParams() {\r\n\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n    for (let prop in _obj) {\r\n      if (!_obj[prop])\r\n        continue\r\n      else if (_obj[prop] instanceof Date)\r\n        _params[prop] = this.dateService.convertToUrlDate(_obj[prop])\r\n      else if(prop == 'parametrizacao')\r\n        _params[prop] = JSON.stringify(_obj[prop])\r\n      else if(Array.isArray(_obj[prop]))\r\n        _params[prop] = _obj[prop].toString()\r\n      else\r\n        _params[prop] = _obj[prop]\r\n      \r\n    }\r\n\r\n    return _params\r\n\r\n  }\r\n\r\n  onFilter() {\r\n\r\n    this.form.get('timestamp').setValue((new Date()).getTime());\r\n\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routeService.setBase64UrlParams(this.getParams()),\r\n    });\r\n\r\n  }\r\n\r\n  /* CSS - Campos requeridos */\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n\r\n  getIndicadores(params) {\r\n    \r\n    if(this.$indicadoresSubscription){\r\n      this.$indicadoresSubscription.unsubscribe();\r\n    }\r\n    \r\n    this.loading = true;\r\n    this.empty = false;\r\n    this.show = false;\r\n\r\n    let parametro = this.form.get(\"origem\").value == \"TMS\" ? 1 : 2;\r\n\r\n    const requests = [];\r\n\r\n    requests.push(this.service.getIndicadores({...params, parametro: parametro}))\r\n    \r\n    delete params['select'];\r\n    delete params['where'];\r\n    delete params['orderBy'];\r\n    delete params['groupBy'];\r\n\r\n    requests.push(this.service.getIndicadores({...params, parametro: parametro}))\r\n\r\n    this.$indicadoresSubscription = forkJoin(requests)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          response => {    \r\n          \r\n            if(response[0]['status'] != 200){\r\n              this.empty = true\r\n              return\r\n            } \r\n\r\n            this.data = response[0]['body'][\"data\"];\r\n            this.show = true;\r\n\r\n            if(response[1]['status'] == 200){\r\n              this.total = response[1]['body'][\"data\"][0];\r\n            }\r\n\r\n      },\r\n      error => {\r\n        this.pnotify.error()\r\n      })\r\n  }\r\n\r\n  getRotulos(){\r\n\r\n    this.service\r\n      .getRotulos()\r\n      .subscribe(\r\n        response => {\r\n          \r\n          if(response.status != 200){\r\n            return\r\n          }\r\n\r\n          this.rotulos = response.body['data'];\r\n\r\n        }\r\n      )\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.orderData(this.orderBy, this.orderType)\r\n\r\n  }\r\n\r\n  orderData(key, type){\r\n\r\n    this.data.sort((a, b) => {\r\n      \r\n      if(a[key] === b[key]){\r\n        return 0;\r\n      }\r\n\r\n      if(type == 'ASC'){\r\n        return a[key] > b[key] ? -1 : 1; \r\n      }\r\n\r\n      return a[key] > b[key] ? 1 : -1;\r\n\r\n    })\r\n  }\r\n\r\n  prepareData(e: Array<any>){\r\n    \r\n    let select = '';\r\n    let where = '';\r\n    let groupBy = '';\r\n    let orderBy = '';\r\n\r\n    Object.keys(this.columns).map(key => this.columns[key] = false)\r\n\r\n    e.forEach((value, index) => {\r\n\r\n      if(where){\r\n        where += ' AND '\r\n      }\r\n\r\n      select += value?.v2?.select;\r\n      where += value?.v2?.where;\r\n      groupBy += value?.v2?.groupBy;\r\n      orderBy += value?.v2?.orderBy;\r\n\r\n      if(index != (e.length - 1)){\r\n        \r\n        select +=  '\\n';\r\n        where +=  '\\n';\r\n        groupBy +=  ',\\n';\r\n        orderBy +=  ',\\n';\r\n      \r\n      }\r\n\r\n      this.columns[value.nome] = true;\r\n\r\n    })\r\n    \r\n    where = ' WHERE ' + where;\r\n    groupBy = ' GROUP BY ' + groupBy;\r\n    orderBy = ' ORDER BY ' + orderBy;\r\n\r\n    this.form.get('select').setValue(select);\r\n    this.form.get('where').setValue(where);\r\n    this.form.get('groupBy').setValue(groupBy);\r\n    this.form.get('orderBy').setValue(orderBy);\r\n    \r\n    this.getIndicadores(this.getParams());\r\n\r\n  }\r\n\r\n  onExport(){\r\n    this.xlsxService.export({data: this.data})\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { V2RoutingModule } from './v2-routing.module';\r\nimport { LogisticaDashboardsAnaliseFreteV2Component } from './v2.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule, ModalModule, PaginationModule, TooltipModule } from 'ngx-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { CountoModule } from 'angular2-counto';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogisticaDashboardsAnaliseFreteV2Component\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    V2RoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    NgSelectModule,\r\n    CountoModule,\r\n    NotFoundModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    PipesModule,\r\n  ]\r\n})\r\nexport class V2Module { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2Rhc2hib2FyZHMvYW5hbGlzZS1mcmV0ZS92Mi92Mi5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LogisticaDashboardsAnaliseFreteV2Component } from './v2.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaDashboardsAnaliseFreteV2Component\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class V2RoutingModule { }\r\n"]}