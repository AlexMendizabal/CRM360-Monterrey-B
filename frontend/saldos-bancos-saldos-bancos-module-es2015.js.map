{"version":3,"sources":["./src/app/modules/controladoria/saldos-bancos/cadastros/saldos-bancos/saldos-bancos.component.scss","./src/app/modules/controladoria/saldos-bancos/listas/saldos-bancos/saldos-bancos.component.html","./src/app/modules/controladoria/saldos-bancos/modals/log/log.component.html","./src/app/modules/controladoria/saldos-bancos/cadastros/tipos-saldos-bancos/tipos-saldos-bancos.component.ts","./src/app/modules/controladoria/saldos-bancos/services/tipos-saldos-bancos.service.ts","./src/app/modules/controladoria/saldos-bancos/listas/tipos-saldos-bancos/tipos-saldos-bancos.component.html","./src/app/modules/controladoria/saldos-bancos/saldos-bancos.component.scss","./src/app/modules/controladoria/saldos-bancos/saldos-bancos.component.ts","./src/app/modules/controladoria/saldos-bancos/cadastros/saldos-bancos/saldos-bancos.component.html","./src/app/shared/services/core/date.service.ts","./src/app/modules/controladoria/saldos-bancos/saldos-bancos.module.ts","./src/app/modules/controladoria/saldos-bancos/cadastros/saldos-bancos/saldos-bancos.component.ts","./src/app/modules/controladoria/saldos-bancos/listas/saldos-bancos/saldos-bancos.component.scss","./src/app/modules/controladoria/saldos-bancos/saldos-bancos.component.html","./src/app/modules/controladoria/saldos-bancos/services/saldos-bancos.service.ts","./src/app/modules/controladoria/saldos-bancos/modals/log/log.component.ts","./src/app/modules/controladoria/saldos-bancos/listas/tipos-saldos-bancos/tipos-saldos-bancos.component.ts","./src/app/modules/controladoria/saldos-bancos/listas/tipos-saldos-bancos/tipos-saldos-bancos.component.scss","./src/app/modules/controladoria/saldos-bancos/cadastros/tipos-saldos-bancos/tipos-saldos-bancos.component.scss","./src/app/modules/controladoria/saldos-bancos/saldos-bancos-routing.module.ts","./src/app/modules/controladoria/saldos-bancos/listas/saldos-bancos/saldos-bancos.component.ts","./src/app/modules/controladoria/saldos-bancos/cadastros/tipos-saldos-bancos/tipos-saldos-bancos.component.html","./src/app/modules/controladoria/saldos-bancos/modals/log/log.component.scss"],"names":[],"mappings":"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","file":"saldos-bancos-saldos-bancos-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9zYWxkb3MtYmFuY29zL2NhZGFzdHJvcy9zYWxkb3MtYmFuY29zL3NhbGRvcy1iYW5jb3MuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"exportarExcel()\\\"\\r\\n    [disabled]=\\\"!noResult\\\"\\r\\n    >\\r\\n    Exportar\\r\\n  </button>\\r\\n  <button\\r\\n    [routerLink]=\\\"['./tipos-saldos-bancos']\\\"\\r\\n    >\\r\\n    Cadastrar Tipos Lançamentos\\r\\n  </button>\\r\\n  <button\\r\\n    [routerLink]=\\\"['../novo']\\\"\\r\\n    >\\r\\n    Inserir\\r\\n  </button>\\r\\n  <button\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    >\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- Início dos Filtros -->\\r\\n  <advanced-filter #scrollToFilter>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row justify-content-center\\\">\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"tipo\\\"> Tipos de lancamentos </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tiposLancamentos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipo\\\"\\r\\n            bindLabel=\\\"DS_BANC_TIPO\\\"\\r\\n            bindValue=\\\"ID_BANC_TIPO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"ID_BANC_TIPO\\\"\\r\\n            [ngClass]=\\\"onFieldError('ID_BANC_TIPO') + ' ' + onFieldRequired('ID_BANC_TIPO')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('ID_BANC_TIPO')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"tipoLancamentos\\\"> Bancos/Fundos </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"bancos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipoLancamentos\\\"\\r\\n            bindLabel=\\\"DESC_BANCO\\\"\\r\\n            bindValue=\\\"COD_BANCO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"ID_LANC_BANC\\\"\\r\\n            [ngClass]=\\\"onFieldError('ID_LANC_BANC') + ' ' + onFieldRequired('ID_LANC_BANC')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('ID_LANC_BANC')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"empresa\\\"> Empresas </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"empresas\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipoDocumento\\\"\\r\\n            bindLabel=\\\"DESC_EMPR\\\"\\r\\n            bindValue=\\\"COD_EMPR\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"ID_LANC_EMPR\\\"\\r\\n            [ngClass]=\\\"onFieldError('ID_LANC_EMPR') + ' ' + onFieldRequired('ID_LANC_EMPR')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('ID_LANC_EMPR')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"dt_inic\\\"> Data inicial </label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">\\r\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dt_inic\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_INIC\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_INIC') + ' ' + onFieldRequired('DT_INIC')\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('DT_INIC')\\\"\\r\\n            message=\\\"Data inicial é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"dt_fina\\\"> Data final </label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">\\r\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dt_fina\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_FINA\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_FINA') + ' ' + onFieldRequired('DT_FINA')\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('DT_FINA')\\\"\\r\\n            message=\\\"Data final é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"status\\\"> Status </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"status\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipo\\\"\\r\\n            bindLabel=\\\"NOME\\\"\\r\\n            bindValue=\\\"COD\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"IN_STAT\\\"\\r\\n            [ngClass]=\\\"onFieldError('IN_STAT') + ' ' + onFieldRequired('IN_STAT')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('IN_STAT')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Início da Lista -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-8 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" [hidden] = \\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Nr. Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Tipo Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Banco/Fundo </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\"> Empresa </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Data de Saldo </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\" [hidden]=\\\"showDetailPanel\\\"> Valor </th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">Status</th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">Log</th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let lista of listas | slice : begin : end; let i = index\\\"\\r\\n              [ngClass]=\\\"{'item-selected':lista.selected}\\\" class=\\\"hover text-center\\\">\\r\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"{\\r\\n              'border-success'    : lista.IN_STAT == '1',\\r\\n              'border-danger'     : lista.IN_STAT == '0'\\r\\n            }\\\" (click)=\\\"openTab(lista); clickEvent(lista)\\\">{{ lista.ID_BANC_SALD }}</td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"openTab(lista); clickEvent(lista)\\\">{{ lista.DS_BANC_TIPO | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"openTab(lista); clickEvent(lista)\\\">{{ lista.DS_LANC_BANC | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"openTab(lista); clickEvent(lista)\\\">{{ lista.DS_LANC_EMPR | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"openTab(lista); clickEvent(lista)\\\">{{ lista.DATA_SALD }}</td>\\r\\n            <td class=\\\"text-end\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"openTab(lista); clickEvent(lista)\\\">{{ lista.VL_LANC | currency:'BRL' }}</td>\\r\\n            \\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span class=\\\"\\\" [tooltip]=\\\"lista.IN_STAT == '1' ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openJustificativa(template, lista)\\\">\\r\\n                  <i [ngClass]=\\\"lista.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span tooltip=\\\"Histórico\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\"  (click)=\\\"openLog(lista)\\\">\\r\\n                  <i class=\\\"fas fa-list-ul\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\">\\r\\n              <span tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', lista.ID_BANC_SALD]\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span tooltip=\\\"Duplicar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" (click)=\\\"onDuplicate(lista)\\\">\\r\\n                  <i class=\\\"fas fa-copy\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n    <!-- Início da tabela de informações -->\\r\\n    <div class=\\\"col-4\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"appTitle\\\">\\r\\n        <div class=\\\"d-flex\\\">\\r\\n          <div class=\\\"col-6 pl-0\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Data saldo </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item?.DATA_SALD }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Valor </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item?.VL_LANC | currency:'BRL' }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>  \\r\\n          <div class=\\\"col-6\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Data de inclusão </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item?.DATA_INCL }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Observação </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item?.DS_LANC_OBSE }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-template #template>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h6 for=\\\"JUSTIFICATIVA\\\"> Justifique sua alteração! </h6>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"75\\\" rows=\\\"10\\\" formControlName=\\\"JUSTIFICATIVA\\\" #JUSTIFICATIVA minlength=\\\"10\\\"></textarea>\\r\\n        <div class=\\\"text-right\\\">\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-secondary mr-1\\\" (click)=\\\"modalRef.hide()\\\"\\r\\n            >\\r\\n            Cancelar \\r\\n          </button>\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"changeType(); modalRef.hide()\\\"\\r\\n            [disabled]=\\\"form.get('JUSTIFICATIVA').status == 'INVALID' || !form.get('JUSTIFICATIVA').value\\\"\\r\\n            >\\r\\n            Salvar \\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n  <controladoria-lanc-saldos-logs></controladoria-lanc-saldos-logs>\\r\\n</app-body>\\r\\n\\r\\n\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <h5>Log de lançamentos e alterações de fluxo de caixa</h5>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div [ngClass]=\\\"{'col-12': !showDetailPanel, 'col-7 pr-0': showDetailPanel}\\\">\\r\\n        <custom-table [config]=\\\"tableLogConfig\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Nr. Lançamento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Tipo Lançamento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Banco/Fundo </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Empresa </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Cod. Usuário de Alteração </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Nome Usuário de Alteração </th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody >\\r\\n            <tr class=\\\"text-center text-white\\\" (click)=\\\"openTab(data); clickEvent(data)\\\">\\r\\n              <td class=\\\"text-center bg-primary\\\">{{ data.ID_BANC_SALD }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\">{{ data.DS_BANC_TIPO | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\">{{ data.DS_LANC_BANC | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ data.DS_LANC_EMPR | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ data.COD_USUARIO }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ data.NM_USUARIO }}</td>\\r\\n            </tr>\\r\\n            <tr class=\\\"text-center\\\" *ngFor=\\\"let item of items | slice : begin : end; let i = index\\\" (click)=\\\"openTab(item); clickEvent(item)\\\">\\r\\n              <td class=\\\"text-center\\\">{{ item?.ID_BANC_SALD }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item?.DS_BANC_TIPO | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item?.DS_LANC_BANC | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.DS_LANC_EMPR | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.COD_USUARIO }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.NM_USUARIO }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n        <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n          Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n          <div class=\\\"row justify-content-between\\\">\\r\\n            <div class=\\\"ml-3\\\">\\r\\n              <pagination\\r\\n                [maxSize]=\\\"10\\\"\\r\\n                [totalItems]=\\\"totalItems\\\"\\r\\n                [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n                (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n                [boundaryLinks]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"currentPage\\\"\\r\\n                previousText=\\\"&lsaquo;\\\"\\r\\n                nextText=\\\"&rsaquo;\\\"\\r\\n                firstText=\\\"&laquo;\\\"\\r\\n                lastText=\\\"&raquo;\\\">\\r\\n              </pagination>\\r\\n            </div>\\r\\n            <div class=\\\"mr-2 pr-1\\\">\\r\\n              <button  \\r\\n                type=\\\"button\\\" class=\\\"btn btn-secondary mr-1\\\" (click)=\\\"modalRef.hide()\\\"\\r\\n                >\\r\\n                Fechar \\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <empty-result\\r\\n          message=\\\"Nenhuma informação encontrada\\\"\\r\\n          class=\\\"my-3\\\"\\r\\n          *ngIf=\\\"dadosEmpty\\\">\\r\\n        </empty-result>\\r\\n      </div>\\r\\n      <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n        <detail-panel [panelTitle]=\\\"appTitle\\\">\\r\\n          <div class=\\\"d-flex\\\">\\r\\n            <div class=\\\"col-6 pl-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Cod. Usuário de Alteração </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.COD_USUARIO }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Empresa de lançamento </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DS_LANC_EMPR | uppercase }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Data de lançamento </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DATA_INCL }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Observação </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DS_LANC_OBSE }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>  \\r\\n            <div class=\\\"col-6\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Nome Usuário de Alteração </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.NM_USUARIO | uppercase }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Data Saldo </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DATA_SALD }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Valor </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.VL_LANC | currency:'BRL' }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col p-0\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Justificativa da alteração </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ log.JUSTIFICATIVA | uppercase }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\";","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { Location } from '@angular/common';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ControladoriaTiposSaldosBancosService } from '../../services/tipos-saldos-bancos.service';\r\n\r\n@Component({\r\n  selector: 'cadastro-tipos-saldos-bancos',\r\n  templateUrl: './tipos-saldos-bancos.component.html',\r\n  styleUrls: ['./tipos-saldos-bancos.component.scss']\r\n})\r\nexport class ControladoriaCadastroTiposSaldosBancosComponent implements OnInit {\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  appTitle = 'Cadastro de tipos de lançamentos';\r\n  form: FormGroup;\r\n  tiposLancamentos = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private tipoSaldosBancosService: ControladoriaTiposSaldosBancosService,\r\n    private notice: PNotifyService,\r\n    private route: Router,\r\n    private location: Location,\r\n    private routerService: RouterService,\r\n    private dateService: DateService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      DS_BANC_TIPO: [null, Validators.required],\r\n      ID_BANC_TIPO: [null],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/saldos-bancos',\r\n      },\r\n      {\r\n        descricao: 'Tipos de lançamentos',\r\n        routerLink: '/controladoria/saldos-bancos/tipos-saldos-bancos',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getTipos(param) {\r\n    this.spinnerFullScreen = true;\r\n    this.tipoSaldosBancosService.getTipos(param).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe tipos de lançamentos cadastrados.');\r\n        this.spinnerFullScreen = false;\r\n      }\r\n      this.form.patchValue(response.body['data'][0]);\r\n      this.spinnerFullScreen = false;\r\n    });\r\n  }\r\n\r\n  putTiposLancamentos() {\r\n    this.spinnerFullScreen = true;\r\n    this.tipoSaldosBancosService\r\n      .putTiposLancamentos(this.getParams())\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200)\r\n            this.notice.success(response.body['mensagem']);\r\n          this.location.back();\r\n        },\r\n        (error) => this.notice.error()\r\n      );\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    if (params.hasOwnProperty('id')) {\r\n      this.getTipos({ ID_BANC_TIPO: params.id });\r\n    }\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControladoriaTiposSaldosBancosService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTipos(params) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos/lancamentos-bancos-saldos/tipos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  putTiposLancamentos(params) {\r\n    if (params.ID_BANC_TIPO != undefined) {\r\n      return this.http.put(\r\n        `${this.BASE_URL}/controladoria/lancamentos/lancamentos-bancos-saldos/tipos`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    } else {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/controladoria/lancamentos/lancamentos-bancos-saldos/tipos`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    [routerLink]=\\\"['./novo']\\\"\\r\\n    >\\r\\n    Inserir\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- <advanced-filter #scrollToFilter></advanced-filter> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [hidden] = \\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Código </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Tipo de Lançamento </th>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let tiposLancamento of tiposLancamentos | slice : begin : end; let i = index\\\" class=\\\"text-center\\\">\\r\\n            <td class=\\\"text-center\\\">{{ tiposLancamento.ID_BANC_TIPO }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ tiposLancamento.DS_BANC_TIPO | uppercase }}</td>\\r\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n              <span tooltip=\\\"Visualizar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', tiposLancamento.ID_BANC_TIPO]\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9zYWxkb3MtYmFuY29zL3NhbGRvcy1iYW5jb3MuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n@Component({\r\n  selector: 'saldos-bancos',\r\n  templateUrl: './saldos-bancos.component.html',\r\n  styleUrls: ['./saldos-bancos.component.scss']\r\n})\r\nexport class ControladoriaSaldosBancosComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private atividadesService: AtividadesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.navigate(['/controladoria/saldos-bancos']);\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n  }\r\n\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"validaSalvar(template)\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- Início dos Filtros -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"row col-6\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"tipoLancamento\\\"> Tipo Lançamento </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"tiposLancamentos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"tipoLancamento\\\"\\r\\n                bindLabel=\\\"DS_BANC_TIPO\\\"\\r\\n                bindValue=\\\"ID_BANC_TIPO\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"ID_BANC_TIPO\\\"\\r\\n                [ngClass]=\\\"onFieldError('ID_BANC_TIPO') + ' ' + onFieldRequired('ID_BANC_TIPO')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('ID_BANC_TIPO')\\\"\\r\\n                message=\\\"Tipo é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"banco\\\"> Banco </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"bancos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"banco\\\"\\r\\n                bindLabel=\\\"DESC_BANCO\\\"\\r\\n                bindValue=\\\"COD_BANCO\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"ID_LANC_BANC\\\"\\r\\n                [ngClass]=\\\"onFieldError('ID_LANC_BANC') + ' ' + onFieldRequired('ID_LANC_BANC')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('ID_LANC_BANC')\\\"\\r\\n                message=\\\"Tipo de lançamento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"dt_sald\\\"> Data saldo </label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">\\r\\n                    <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dt_sald\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"DATA_SALD\\\"\\r\\n                [ngClass]=\\\"onFieldError('DATA_SALD') + ' ' + onFieldRequired('DATA_SALD')\\\"\\r\\n                >\\r\\n              </div>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('DATA_SALD')\\\"\\r\\n                message=\\\"Data final é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"empresa\\\"> Empresa </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"empresas\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"empresa\\\"\\r\\n                bindLabel=\\\"DESC_EMPR\\\"\\r\\n                bindValue=\\\"COD_EMPR\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"ID_LANC_EMPR\\\"\\r\\n                [ngClass]=\\\"onFieldError('ID_LANC_EMPR') + ' ' + onFieldRequired('ID_LANC_EMPR')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('ID_LANC_EMPR')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label for=\\\"vl_sald\\\"> Valor </label>\\r\\n              <input\\r\\n                currencyMask\\r\\n                [options] = \\\" {align: 'left', prefix: 'R$', thousands: '.', decimal: ','} \\\"\\r\\n                id=\\\"vl_sald\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"VL_LANC\\\"\\r\\n                [ngClass]=\\\"onFieldError('VL_LANC') + ' ' + onFieldRequired('VL_LANC')\\\"\\r\\n              >\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('VL_LANC')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-9\\\">\\r\\n              <label for=\\\"valor\\\"> Observação </label>\\r\\n              <input\\r\\n                id=\\\"observacao\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"DS_LANC_OBSE\\\"\\r\\n                [ngClass]=\\\"onFieldError('DS_LANC_OBSE') + ' ' + onFieldRequired('DS_LANC_OBSE')\\\"\\r\\n              >\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('DS_LANC_OBSE')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-template #template>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h6 for=\\\"JUSTIFICATIVA\\\"> Justifique sua alteração! </h6>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"75\\\" rows=\\\"10\\\" formControlName=\\\"JUSTIFICATIVA\\\" #JUSTIFICATIVA minlength=\\\"10\\\"></textarea>\\r\\n        <div class=\\\"text-right\\\">\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-secondary mr-1\\\" (click)=\\\"modalRef.hide()\\\"\\r\\n            >\\r\\n            Cancelar \\r\\n          </button>\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"postCadastrar(); modalRef.hide()\\\"\\r\\n            [disabled]=\\\"form.get('JUSTIFICATIVA').status == 'INVALID' || !form.get('JUSTIFICATIVA').value\\\"\\r\\n            >\\r\\n            Salvar \\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { SharedModule } from './../../../shared/modules/shared.module';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\n\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { \r\n  TooltipModule, \r\n  TimepickerModule,\r\n  ptBrLocale,\r\n  BsDatepickerModule,\r\n  PaginationModule,\r\n  TabsModule, \r\n  defineLocale } from 'ngx-bootstrap';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport ptBr from '@angular/common/locales/pt';\r\n\r\nimport { ControladoriaSaldosBancosRoutingModule } from './saldos-bancos-routing.module';\r\nimport { ControladoriaSaldosBancosComponent } from './saldos-bancos.component';\r\nimport { ControladoriaListaSaldosBancosComponent } from './listas/saldos-bancos/saldos-bancos.component';\r\nimport { ControladoriaCadastroSaldosBancosComponent } from './cadastros/saldos-bancos/saldos-bancos.component';\r\nimport { ControladoriaCadastroTiposSaldosBancosComponent } from './cadastros/tipos-saldos-bancos/tipos-saldos-bancos.component';\r\nimport { ControladoriaSaldosBancosLogComponent } from './modals/log/log.component';\r\nimport { ControladoriaListaTiposSaldosBancosComponent } from './listas/tipos-saldos-bancos/tipos-saldos-bancos.component';\r\n\r\nregisterLocaleData(ptBr);\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ControladoriaSaldosBancosComponent,\r\n    ControladoriaListaSaldosBancosComponent,\r\n    ControladoriaCadastroSaldosBancosComponent,\r\n    ControladoriaListaTiposSaldosBancosComponent,\r\n    ControladoriaCadastroTiposSaldosBancosComponent,\r\n    ControladoriaSaldosBancosLogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ControladoriaSaldosBancosRoutingModule,\r\n    ModuleWrapperModule,\r\n    TemplatesModule.forRoot(),\r\n    FormsModule,\r\n    NgSelectModule,\r\n    SharedModule,\r\n    TooltipModule,\r\n    NotFoundModule,\r\n    PipesModule,\r\n    CurrencyMaskModule,\r\n    ReactiveFormsModule,\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-PT' }],\r\n})\r\nexport class ControladoriaSaldosBancosModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { Location } from '@angular/common';\r\nimport { exit } from 'process';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { ControladoriaSaldosBancosService } from '../../services/saldos-bancos.service';\r\nimport { ControladoriaTiposSaldosBancosService } from '../../services/tipos-saldos-bancos.service';\r\n\r\n@Component({\r\n  selector: 'cadastro-saldos-bancos',\r\n  templateUrl: './saldos-bancos.component.html',\r\n  styleUrls: ['./saldos-bancos.component.scss']\r\n})\r\nexport class ControladoriaCadastroSaldosBancosComponent implements OnInit {\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  breadCrumbTree: any = [];\r\n  data: Date = new Date();\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  form: FormGroup;\r\n  empresas = [];\r\n  bancos = [];\r\n  tiposLancamentos = [];\r\n  listas = [];\r\n  ativaBotao: boolean = false;\r\n\r\n  appTitle = 'Cadastro de Lançamentos';\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: false,\r\n    ignoreBackdropClick: true,\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private formBuilder: FormBuilder,\r\n    private saldosBancosService: ControladoriaSaldosBancosService,\r\n    private tipoSaldosBancosService: ControladoriaTiposSaldosBancosService,\r\n    private notice: PNotifyService,\r\n    private dateService: DateService,\r\n    private route: Router,\r\n    private location: Location,\r\n    private routerService: RouterService,\r\n    private modalService: BsModalService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n\r\n    this.form = this.formBuilder.group({\r\n      DATA_SALD: [null, Validators.required],\r\n      ID_BANC_TIPO: [null, Validators.required],\r\n      ID_LANC_BANC: [null, Validators.required],\r\n      VL_LANC: [null, Validators.required],\r\n      ID_LANC_EMPR: [null],\r\n      DS_LANC_OBSE: [null],\r\n      ID_BANC_SALD: [null],\r\n      JUSTIFICATIVA: [null, Validators.minLength(10)],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getEmpresas();\r\n    this.getBancos();\r\n    this.getTipos();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento saldos bancos',\r\n        routerLink: '/controladoria/saldos-bancos',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getEmpresas() {\r\n    this.saldosBancosService.getEmpresas(this.getParams()).subscribe((response) => {\r\n      this.empresas = response.body['data'];\r\n    });\r\n  }\r\n\r\n  getBancos() {\r\n    this.saldosBancosService.getBancos().subscribe((response) => {\r\n      this.bancos = response.body['data'];\r\n    });\r\n  }\r\n\r\n  getTipos() {\r\n    this.tipoSaldosBancosService.getTipos(this.getParams()).subscribe((response) => {\r\n      this.tiposLancamentos = response.body['data'];\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  postCadastrar() {\r\n    this.spinnerFullScreen = true;\r\n    this.saldosBancosService.postCadastrar(this.getParams()).subscribe(\r\n      (response) => {\r\n        if (response.status === 200)\r\n          this.notice.success(response.body['mensagem']);\r\n        this.location.back();\r\n      },\r\n      (error) => this.notice.error()\r\n    );\r\n  }\r\n\r\n  getLista(params) {\r\n    this.spinnerFullScreen = true;\r\n    this.saldosBancosService.getLista(params).subscribe((response) => {\r\n      this.form.patchValue(response.body['data'][0]);\r\n      this.spinnerFullScreen = false;\r\n    });\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    const queryParams = this.activatedRoute.snapshot.queryParams;\r\n    if (params.hasOwnProperty('id')) {\r\n      this.getLista({ ID_BANC_SALD: params.id });\r\n    } else if (queryParams.hasOwnProperty('q')) {\r\n      const decoded = this.routerService.getBase64UrlParams(queryParams);\r\n\r\n      this.form.patchValue(decoded);\r\n      this.form.get('ID_BANC_SALD').setValue(undefined);\r\n    }\r\n  }\r\n\r\n  validaSalvar(template) {\r\n    if (!this.form.get('ID_BANC_SALD').value) {\r\n      this.postCadastrar();\r\n    } else {\r\n      this.modalRef = this.modalService.show(template, this.config);\r\n    }\r\n  }\r\n}\r\n","export default \"tr.item-selected td {\\n  background-color: #8fb9ef !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb250cm9sYWRvcmlhL3NhbGRvcy1iYW5jb3MvbGlzdGFzL3NhbGRvcy1iYW5jb3Mvc2FsZG9zLWJhbmNvcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG9DQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbnRyb2xhZG9yaWEvc2FsZG9zLWJhbmNvcy9saXN0YXMvc2FsZG9zLWJhbmNvcy9zYWxkb3MtYmFuY29zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidHIuaXRlbS1zZWxlY3RlZCB0ZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOGZiOWVmICFpbXBvcnRhbnQ7XHJcbiAgfSJdfQ== */\";","export default \"<p>saldos-bancos works!</p>\\r\\n\";","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControladoriaSaldosBancosService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  private modalEmitter: EventEmitter<any> = new EventEmitter();\r\n  private detailPanelEmitter: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getEmpresas(param) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/empresas`,\r\n      {\r\n        params: param,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getBancos() {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/bancos`,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getLista(params) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos/lancamentos-bancos-saldos/saldo-bancos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postCadastrar(param) {\r\n    if (param.ID_BANC_SALD == undefined) {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/controladoria/lancamentos/lancamentos-bancos-saldos/lancamentos`,\r\n        param,\r\n        { observe: 'response' }\r\n      );\r\n    } else {\r\n      return this.http.put(\r\n        `${this.BASE_URL}/controladoria/lancamentos/lancamentos-bancos-saldos/lancamentos`,\r\n        param,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n  }\r\n\r\n  getLog(params) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-bancos-saldos/logs`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  setStateModal(params = { state: true, template: undefined, data: [] }): void {\r\n    return this.modalEmitter.emit(params);\r\n  }\r\n\r\n  getStateModal() {\r\n    return this.modalEmitter;\r\n  }\r\n\r\n  setDetailPanel(value: string) {\r\n    return this.detailPanelEmitter.emit(value);\r\n  }\r\n\r\n  getDetailPanel() {\r\n    return this.detailPanelEmitter;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ControladoriaSaldosBancosService } from '../../services/saldos-bancos.service';\r\n\r\n@Component({\r\n  selector: 'controladoria-lanc-saldos-logs',\r\n  templateUrl: './log.component.html',\r\n  styleUrls: ['./log.component.scss']\r\n})\r\nexport class ControladoriaSaldosBancosLogComponent implements OnInit, OnDestroy {\r\n  @ViewChild('template', { static: false }) template: ElementRef;\r\n  spinnerFullScreen: boolean = false;\r\n  data: Array<any> = [];\r\n  items: Array<any> = [];\r\n  noResult = false;\r\n  dadosEmpty = false;\r\n  log: any = {};\r\n  $saldosBancosSubscription: Subscription;\r\n  $saldosBancosServiceSubscription: Subscription;\r\n\r\n  appTitle = 'Detalhes';\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: false,\r\n    ignoreBackdropClick: true,\r\n    class: 'modal-xxl',\r\n  };\r\n\r\n  /* Painel de detalhes */\r\n  $showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanel = undefined;\r\n\r\n  tableLogConfig: Partial<CustomTableConfig> = {\r\n    hover: true,\r\n  };\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private saldosBancosService: ControladoriaSaldosBancosService,\r\n    private notice: PNotifyService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.openModal();\r\n    this.onDetailPanel();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$saldosBancosSubscription.unsubscribe();\r\n    this.$saldosBancosServiceSubscription.unsubscribe();\r\n  }\r\n\r\n  openModal(): void {\r\n    this.$saldosBancosServiceSubscription = this.saldosBancosService\r\n      .getStateModal()\r\n      .subscribe((response) => {\r\n        this.data = response;\r\n        this.modalRef = this.modalService.show(this.template, this.config);\r\n        this.showDetailPanel = false;\r\n        this.getLog();\r\n      });\r\n  }\r\n\r\n  getLog() {\r\n    this.items = [];\r\n    this.spinnerFullScreen = true;\r\n    let ID_BANC_SALD = this.data['ID_BANC_SALD'];\r\n\r\n    this.saldosBancosService.getLog(ID_BANC_SALD).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe log registrado.');\r\n        this.spinnerFullScreen = false;\r\n      } else {\r\n        this.items = response.body['data'];\r\n        this.totalItems = response.body['data'].length;\r\n        this.dadosEmpty = false;\r\n        this.noResult = true;\r\n        this.spinnerFullScreen = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  onDetailPanel(): void {\r\n    this.$showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        if (this.detailPanel !== 'modal') return;\r\n\r\n        this.showDetailPanel = event.showing;\r\n        if (!this.showDetailPanel)\r\n          this.items.map((item) => (item.selected = false));\r\n      }\r\n    );\r\n\r\n    this.$saldosBancosSubscription = this.saldosBancosService\r\n      .getDetailPanel()\r\n      .subscribe((event) => {\r\n        this.detailPanel = event;\r\n        this.detailPanelService.loadedFinished(false);\r\n      });\r\n  }\r\n\r\n  openTab(log) {\r\n    this.items.map((item) => (item.selected = false));\r\n    this.log = log;\r\n    this.log.selected = true;\r\n  }\r\n\r\n  clickEvent(item) {\r\n    this.saldosBancosService.setDetailPanel('modal');\r\n    this.items.forEach((element) => {\r\n      if (element.INDICE != item.INDICE) {\r\n        element.STATUS = false;\r\n      } else if (item.STATUS == true) {\r\n        item.STATUS = true;\r\n      } else {\r\n        item.STATUS = !item.STATUS;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ControladoriaTiposSaldosBancosService } from '../../services/tipos-saldos-bancos.service';\r\n\r\n@Component({\r\n  selector: 'lista-tipos-saldos-bancos',\r\n  templateUrl: './tipos-saldos-bancos.component.html',\r\n  styleUrls: ['./tipos-saldos-bancos.component.scss']\r\n})\r\nexport class ControladoriaListaTiposSaldosBancosComponent implements OnInit {\r\n  appTitle = 'Tipos de lançamentos';\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  noResult = false;\r\n  tiposLancamentos = [];\r\n  dadosEmpty = false;\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private tipoSaldosBancosService: ControladoriaTiposSaldosBancosService,\r\n    private route: Router,\r\n    private notice: PNotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getTipos();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento saldos bancos',\r\n        routerLink: '/controladoria/saldos-bancos',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  getTipos() {\r\n    let param = 0;\r\n    this.spinnerFullScreen = true;\r\n    this.tipoSaldosBancosService.getTipos(param).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe tipos de lançamentos cadastrados.');\r\n        this.spinnerFullScreen = false;\r\n      } else {\r\n        this.tiposLancamentos = response.body['data'];\r\n        this.totalItems = response.body['data'].length;\r\n        this.spinnerFullScreen = false;\r\n        this.noResult = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9zYWxkb3MtYmFuY29zL2xpc3Rhcy90aXBvcy1zYWxkb3MtYmFuY29zL3RpcG9zLXNhbGRvcy1iYW5jb3MuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9zYWxkb3MtYmFuY29zL2NhZGFzdHJvcy90aXBvcy1zYWxkb3MtYmFuY29zL3RpcG9zLXNhbGRvcy1iYW5jb3MuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\n\r\nimport { ControladoriaListaSaldosBancosComponent } from './listas/saldos-bancos/saldos-bancos.component';\r\nimport { ControladoriaCadastroSaldosBancosComponent } from './cadastros/saldos-bancos/saldos-bancos.component';\r\nimport { ControladoriaListaTiposSaldosBancosComponent } from './listas/tipos-saldos-bancos/tipos-saldos-bancos.component';\r\nimport { ControladoriaCadastroTiposSaldosBancosComponent } from './cadastros/tipos-saldos-bancos/tipos-saldos-bancos.component';\r\n\r\nconst routes: Routes = [\r\n  \r\n  {\r\n    path: 'tipos-saldos-bancos',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ControladoriaListaTiposSaldosBancosComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: ControladoriaCadastroTiposSaldosBancosComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: ControladoriaCadastroTiposSaldosBancosComponent,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    component: ControladoriaListaSaldosBancosComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ControladoriaCadastroSaldosBancosComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: ControladoriaCadastroSaldosBancosComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ControladoriaSaldosBancosRoutingModule { }\r\n","import { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  FormBuilder,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  BsModalService,\r\n  BsModalRef,\r\n  ModalDirective,\r\n} from 'ngx-bootstrap/modal';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { ControladoriaSaldosBancosService } from '../../services/saldos-bancos.service';\r\nimport { ControladoriaTiposSaldosBancosService } from '../../services/tipos-saldos-bancos.service';\r\n\r\n@Component({\r\n  selector: 'lista-saldos-bancos',\r\n  templateUrl: './saldos-bancos.component.html',\r\n  styleUrls: ['./saldos-bancos.component.scss']\r\n})\r\nexport class ControladoriaListaSaldosBancosComponent implements OnInit, OnDestroy {\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  breadCrumbTree: any = [];\r\n  data: Date = new Date();\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  form: FormGroup;\r\n  listas: any = [];\r\n  item: any = {};\r\n  empresas = [];\r\n  bancos = [];\r\n  tiposLancamentos = [];\r\n  noResult = false;\r\n  dadosEmpty = false;\r\n  $activateRoutedSubscription: Subscription;\r\n  $saldosBancosSubscription: Subscription;\r\n  showAdvancedFilter: boolean;\r\n  idLanc = 0;\r\n  listaSelecionada: any = [];\r\n\r\n  appTitle = 'Lançamento Saldos Bancos';\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  /* Painel de detalhes */\r\n  $showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanel = 'principal';\r\n\r\n  /* Config Table */\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  status = [\r\n    {\r\n      COD: '1',\r\n      NOME: 'Ativos',\r\n    },\r\n    {\r\n      COD: '0',\r\n      NOME: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: true,\r\n    ignoreBackdropClick: true,\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private formBuilder: FormBuilder,\r\n    private dateService: DateService,\r\n    private xlsxService: XlsxService,\r\n    private saldosBancosService: ControladoriaSaldosBancosService,\r\n    private tipoSaldosBancosService: ControladoriaTiposSaldosBancosService,\r\n    private notice: PNotifyService,\r\n    private routerService: RouterService,\r\n    private route: Router,\r\n    private modalService: BsModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n\r\n    this.form = this.formBuilder.group({\r\n      DT_INIC: [this.dateService.getFirstDayMonth(), Validators.required],\r\n      DT_FINA: [this.data, Validators.required],\r\n      ID_BANC_SALD: [this.idLanc],\r\n      ID_BANC_TIPO: [null],\r\n      ID_LANC_BANC: [null],\r\n      ID_LANC_EMPR: [null],\r\n      IN_STAT: [null],\r\n      JUSTIFICATIVA: [null, Validators.minLength(10)],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getEmpresas();\r\n    this.getBancos();\r\n    this.getTipos();\r\n    this.getActiveRoute();\r\n    this.onDetailPanel();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$showDetailPanelSubscription.unsubscribe();\r\n    this.$activateRoutedSubscription.unsubscribe();\r\n    this.$saldosBancosSubscription.unsubscribe();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.activatedRoute.params.subscribe((form: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/controladoria/home',\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  exportarExcel() {\r\n    this.xlsxService.exportFile(this.listas, 'lançamentos');\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('time').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onShowFilter() {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  getEmpresas() {\r\n    this.saldosBancosService\r\n      .getEmpresas(this.getParams())\r\n      .subscribe((response) => {\r\n        if (response.status === 204) {\r\n          this.notice.notice('Não há empresa cadastrada.');\r\n        } else this.empresas = response.body['data'];\r\n      });\r\n  }\r\n\r\n  getBancos() {\r\n    this.saldosBancosService.getBancos().subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não há bancos cadastrados.');\r\n      } else this.bancos = response.body['data'];\r\n    });\r\n  }\r\n\r\n  getTipos() {\r\n    this.tipoSaldosBancosService\r\n      .getTipos(this.getParams())\r\n      .subscribe((response) => {\r\n        if (response.status === 204) {\r\n          this.notice.notice('Não há tipos de lançamentos cadastrados.');\r\n        } else this.tiposLancamentos = response.body['data'];\r\n      });\r\n  }\r\n\r\n  getActiveRoute() {\r\n    this.$activateRoutedSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        if (Object.keys(response).length > 0) {\r\n          const _response = this.routerService.getBase64UrlParams(response);\r\n          this.form.patchValue(_response);\r\n        }\r\n        this.getLista(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  getLista(params) {\r\n    this.spinnerFullScreen = true;\r\n\r\n    if (this.form.status === 'VALID') {\r\n      this.saldosBancosService\r\n        .getLista(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.spinnerFullScreen = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response) => {\r\n            if (response.status === 204) {\r\n              this.notice.notice('Não há informações para esse período.');\r\n              this.showAdvancedFilter = true;\r\n              this.dadosEmpty = true;\r\n              this.noResult = false;\r\n            } else {\r\n              this.listas = response.body['data'];\r\n              this.listas.forEach((element, i) => {\r\n                element.INDICE = i + 1;\r\n              });\r\n              this.totalItems = response.body['data'].length;\r\n              this.dadosEmpty = false;\r\n              this.noResult = true;\r\n              this.showAdvancedFilter = true;\r\n            }\r\n          },\r\n          (error) => this.notice.error()\r\n        );\r\n    }\r\n  }\r\n\r\n  onDetailPanel(): void {\r\n    this.$showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        if (this.detailPanel !== 'principal') return;\r\n        this.showDetailPanel = event.showing;\r\n\r\n        if (!this.showDetailPanel)\r\n          this.listas.map((lista) => (lista.selected = false));\r\n      }\r\n    );\r\n\r\n    this.$saldosBancosSubscription = this.saldosBancosService\r\n      .getDetailPanel()\r\n      .subscribe((event) => {\r\n        this.detailPanel = event;\r\n        this.detailPanelService.loadedFinished(false);\r\n      });\r\n  }\r\n\r\n  openTab(item) {\r\n    this.listas.map((lista) => (lista.selected = false));\r\n    this.item = item;\r\n    this.item.selected = true;\r\n  }\r\n\r\n  clickEvent(lista) {\r\n    this.saldosBancosService.setDetailPanel('principal');\r\n    this.listas.forEach((element) => {\r\n      if (element.INDICE != lista.INDICE) {\r\n        element.STATUS = false;\r\n      } else if (lista.STATUS == true) {\r\n        lista.STATUS = true;\r\n      } else {\r\n        lista.STATUS = !lista.STATUS;\r\n      }\r\n    });\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  openJustificativa(template, data) {\r\n    this.form.get('JUSTIFICATIVA').reset();\r\n    this.listaSelecionada = data;\r\n    this.modalRef = this.modalService.show(template, this.config);\r\n  }\r\n\r\n  changeType() {\r\n    this.spinnerFullScreen = true;\r\n    let _saldo = JSON.parse(JSON.stringify(this.listaSelecionada));\r\n\r\n    _saldo.IN_STAT = _saldo['IN_STAT'] == '1' ? '0' : '1';\r\n    _saldo.JUSTIFICATIVA = this.form.value['JUSTIFICATIVA'];\r\n\r\n    this.saldosBancosService\r\n      .postCadastrar(_saldo)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.notice.success(response.body['mensagem']);\r\n            this.listaSelecionada.IN_STAT = _saldo.IN_STAT;\r\n          }\r\n        },\r\n        (error) => this.notice.error()\r\n      );\r\n  }\r\n\r\n  openLog(data) {\r\n    this.saldosBancosService.setStateModal(data);\r\n  }\r\n\r\n  onDuplicate(item) {\r\n    this.route.navigate(['./novo'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(item),\r\n    });\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"putTiposLancamentos()\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <div class=\\\"form-group col-md-12 p-0\\\">\\r\\n              <label for=\\\"tipoLancamento\\\"> Descrição TIpo de Lançamento </label>\\r\\n              <input\\r\\n                id=\\\"tipoLancamento\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"DS_BANC_TIPO\\\"\\r\\n                [ngClass]=\\\"onFieldError('DS_BANC_TIPO') + ' ' + onFieldRequired('DS_BANC_TIPO')\\\">\\r\\n            </div>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('DS_BANC_TIPO')\\\"\\r\\n              message=\\\"Informar tipo de lançamento é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9zYWxkb3MtYmFuY29zL21vZGFscy9sb2cvbG9nLmNvbXBvbmVudC5zY3NzIn0= */\";"],"sourceRoot":"webpack:///"}