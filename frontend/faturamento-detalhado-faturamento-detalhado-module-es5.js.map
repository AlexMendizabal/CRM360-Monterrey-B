{"version":3,"sources":["webpack:///src/app/modules/comercial/services/vendedores.service.ts","webpack:///src/app/modules/comercial/relatorios/faturamento-detalhado/faturamento-detalhado.service.ts","webpack:///src/app/modules/comercial/relatorios/faturamento-detalhado/faturamento-detalhado.component.scss","webpack:///src/app/modules/comercial/relatorios/faturamento-detalhado/faturamento-detalhado.component.html","webpack:///src/app/modules/comercial/relatorios/faturamento-detalhado/faturamento-detalhado-routing.module.ts","webpack:///src/app/modules/comercial/relatorios/faturamento-detalhado/faturamento-detalhado.component.ts","webpack:///src/app/modules/comercial/relatorios/faturamento-detalhado/faturamento-detalhado.module.ts"],"names":["ComercialVendedoresService","http","API","API_CADASTROS","get","pipe","id","params","codCliente","providedIn","ComercialRelatoriosFaturamentoDetalhadoService","escritoriosService","vendedoresService","escritorios","getEscritorios","vendedores","getVendedores","httpParams","param","append","routes","path","component","ComercialRelatoriosFaturamentoDetalhadoRoutingModule","imports","forChild","exports","ComercialRelatoriosFaturamentoDetalhadoComponent","activatedRoute","router","location","formBuilder","pnotifyService","localeService","faturamentoDetalhadoService","xlsxService","atividadesService","authService","titleService","dateService","loaderNavbar","loaderFullScreen","adminProfile","breadCrumbTree","itensLoaded","itensEmpty","itens","itensReturned","exibeClasse","exibeProduto","exibeLinha","exibeComparativo","comparativoTotal","exibeVendedores","exibeEscritorios","exibeClientes","maxSize","itemsPerPage","currentPage","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getPNotify","idVendedor","getCurrentUser","registrarAcesso","setBreadCrumb","getPerfil","setFormFilter","setTitle","subscribe","descricao","routerLink","getFilterValues","onChangeFiltrarPor","montaFiltros","next","response","error","back","getFiltros","formValue","checkRouterParams","form","group","visao","required","filtro","inicioData","terminoData","exibirComparativo","vendedor","escritorio","cliente","getFirstDayMonth","Date","activatedRouteSubscription","queryParams","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","convertStringToDate","isNaN","Number","unsubscribe","valid","setRouterParams","verificaParams","getFaturamentoDetalhado","visaoRelatorio","verificaComparativo","d","anoCorrente","getFullYear","anoPassado","slice","notice","navigate","relativeTo","q","btoa","stringify","value","convertToUrlDate","controls","setValue","setValidators","clearValidators","updateValueAndValidity","data","toLocaleDateString","split","dataExport","listagemExport","concat","exportFile","comparativo","inicio","termino","dtInicio","dtTermino","getMonth","getDate","field","onFieldInvalid","status","touched","formControl","validator","validationResult","textClass","event","startItem","page","endItem","selector","template","ComercialRelatoriosFaturamentoDetalhadoModule","declarations","forRoot"],"mappings":"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","file":"faturamento-detalhado-faturamento-detalhado-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialVendedoresService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\r\n  private readonly API_CADASTROS = `https://crm360.monterrey.com.bo/api/comercial/cadastros`;\r\n\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getDetalhesCadastro() {\r\n    return this.http\r\n      .get(`${this.API}/detalhes-cadastro`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedores() {\r\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedoresSucursal(id: number){\r\n    return this.http\r\n    .get(`${this.API}/sucursal-vendedor/${id}`)\r\n  }\r\n\r\n  getGestiones() {\r\n    return this.http.get(`${this.API_CADASTROS}/titulos-agenda/lista?codSituacao=1`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/carteira-clientes`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getValidaClienteCarteira(\r\n    codCliente: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVinculoOperadores() {\r\n    return this.http\r\n      .get(`${this.API}/vinculo-operadores`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { take } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { EscritoriosService } from 'src/app/shared/services/requests/escritorios.service';\r\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialRelatoriosFaturamentoDetalhadoService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private escritoriosService: EscritoriosService,\r\n    private vendedoresService: ComercialVendedoresService\r\n  ) {}\r\n\r\n  getFiltros() {\r\n    const escritorios = this.escritoriosService.getEscritorios();\r\n    const vendedores = this.vendedoresService.getVendedores();\r\n\r\n    return forkJoin([escritorios, vendedores]).pipe(take(1));\r\n  }\r\n\r\n  getPerfil() {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1));\r\n  }\r\n\r\n  getFaturamentoDetalhado(params: any) {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/relatorios/faturamento-detalhado/lista`, {\r\n        params: httpParams\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL3JlbGF0b3Jpb3MvZmF0dXJhbWVudG8tZGV0YWxoYWRvL2ZhdHVyYW1lbnRvLWRldGFsaGFkby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Faturamento detalhado\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onExport()\\\"\\r\\n    *ngIf=\\\"!itensEmpty\\\">\\r\\n    Exportar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    [disabled]=\\\"!form.valid || loaderNavbar\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <advanced-filter>\\r\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\r\\n          <label for=\\\"visao\\\">Visão relatório</label>\\r\\n          <select\\r\\n            id=\\\"visao\\\"\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            formControlName=\\\"visao\\\">\\r\\n            <option value=\\\"1\\\">LINHA</option>\\r\\n            <option value=\\\"2\\\">CLASSE</option>\\r\\n            <option value=\\\"3\\\">PRODUTO</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\r\\n          <label for=\\\"exibirComparativo\\\">Comparativo ano anterior</label>\\r\\n          <select\\r\\n            id=\\\"exibirComparativo\\\"\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            formControlName=\\\"exibirComparativo\\\">\\r\\n            <option value=\\\"0\\\">Não exibir</option>\\r\\n            <option value=\\\"1\\\">Exibir</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\r\\n          <label for=\\\"inicioData\\\">Data inicial</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"inicioData\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"inicioData\\\"\\r\\n            [ngClass]=\\\"onFieldError('inicioData') + ' ' + onFieldRequired('inicioData')\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\r\\n          <label for=\\\"terminoData\\\">Data final</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"terminoData\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"terminoData\\\"\\r\\n            [ngClass]=\\\"onFieldError('terminoData') + ' ' + onFieldRequired('terminoData')\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\" *ngIf=\\\"adminProfile\\\">\\r\\n          <label for=\\\"filtro\\\">Filtrar por</label>\\r\\n          <select\\r\\n            id=\\\"filtro\\\"\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            formControlName=\\\"filtro\\\"\\r\\n            (change)=\\\"onChangeFiltrarPor()\\\">\\r\\n            <option value=\\\"0\\\">TODOS</option>\\r\\n            <option value=\\\"1\\\">ESCRITÓRIO</option>\\r\\n            <option value=\\\"2\\\">VENDEDOR</option>\\r\\n            <option value=\\\"3\\\">CLIENTE</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\" *ngIf=\\\"exibeEscritorios\\\">\\r\\n          <label for=\\\"escritorios\\\">Escritórios</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"escritorios\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"escritorio\\\"\\r\\n            bindLabel=\\\"nomeEscritorio\\\"\\r\\n            bindValue=\\\"codEscritorio\\\"\\r\\n            formControlName=\\\"escritorio\\\"\\r\\n            [ngClass]=\\\"onFieldError('escritorio') + ' ' + onFieldRequired('escritorio')\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\" *ngIf=\\\"exibeVendedores\\\">\\r\\n          <label for=\\\"vendedores\\\">Vendedores</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"vendedores\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"vendedor\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"id\\\"\\r\\n            formControlName=\\\"vendedor\\\"\\r\\n            [ngClass]=\\\"onFieldError('vendedor') + ' ' + onFieldRequired('vendedor')\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\" *ngIf=\\\"exibeClientes\\\">\\r\\n          <label for=\\\"cliente\\\">Código do cliente</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"cliente\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"cliente\\\"\\r\\n            [ngClass]=\\\"onFieldError('cliente') + ' ' + onFieldRequired('cliente')\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table *ngIf=\\\"itensLoaded && !itensEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Linha</th>\\r\\n            <th scope=\\\"col\\\" *ngIf=\\\"exibeClasse || exibeProduto\\\">Classe</th>\\r\\n            <th scope=\\\"col\\\" *ngIf=\\\"exibeProduto\\\">Produto</th>\\r\\n            <th scope=\\\"col\\\" colspan=\\\"2\\\" class=\\\"text-center\\\" *ngIf=\\\"exibeComparativo\\\">{{ anoPassado }}</th>\\r\\n            <th scope=\\\"col\\\" colspan=\\\"2\\\" class=\\\"text-center\\\">{{ anoCorrente }}</th>\\r\\n            <th scope=\\\"col\\\" colspan=\\\"2\\\" class=\\\"text-center\\\" *ngIf=\\\"exibeComparativo\\\">Comparativo</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of itensReturned\\\">\\r\\n            <td>{{ item.linha | uppercase }}</td>\\r\\n            <td *ngIf=\\\"exibeClasse || exibeProduto\\\">{{ item.classe | uppercase }}</td>\\r\\n            <td *ngIf=\\\"exibeProduto\\\">{{ item.descricaoMaterial | uppercase }}</td>\\r\\n            <td class=\\\"text-center bg-white\\\" *ngIf=\\\"exibeComparativo\\\">{{ item.tonPassado | number:'1.3-3' }}t</td>\\r\\n            <td class=\\\"text-center bg-white\\\" *ngIf=\\\"exibeComparativo\\\">{{ item.valorPassado | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ item.tonCorrente | number:'1.3-3' }}t</td>\\r\\n            <td class=\\\"text-center\\\">{{ item.valorCorrente | currency:'BRL':'symbol':'1.2-2' }}</td>\\r\\n            <td class=\\\"text-center bg-white\\\" [ngClass]=\\\"classComparativo(item.tonPercentual)\\\" *ngIf=\\\"exibeComparativo\\\">{{ item.tonPercentual | number:'1.2-2' }}%</td>\\r\\n            <td class=\\\"text-center bg-white\\\" [ngClass]=\\\"classComparativo(item.valorPercentual)\\\" *ngIf=\\\"exibeComparativo\\\">{{ item.valorPercentual | number:'1.2-2' }}%</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td class=\\\"bg-dark text-white text-center\\\"><strong>Total</strong></td>\\r\\n            <td *ngIf=\\\"exibeProduto\\\"></td>\\r\\n            <td *ngIf=\\\"exibeProduto || exibeClasse\\\"></td>\\r\\n            <td class=\\\"bg-dark text-white text-center\\\" *ngIf=\\\"exibeComparativo\\\"><strong>{{ comparativoTotal.tonPassado | number:'1.3-3' }}t</strong></td>\\r\\n            <td class=\\\"bg-dark text-white text-center\\\" *ngIf=\\\"exibeComparativo\\\"><strong>{{ comparativoTotal.valorPassado| currency:'BRL':'symbol':'1.2-2'}}</strong></td>\\r\\n            <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ comparativoTotal.tonCorrente | number:'1.3-3' }}t</strong></td>\\r\\n            <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ comparativoTotal.valorCorrente | currency:'BRL':'symbol':'1.2-2' }}</strong></td>\\r\\n            <td class=\\\"bg-dark text-white text-center\\\" [ngClass]=\\\"classComparativo(comparativoTotal.tonPercentual)\\\" *ngIf=\\\"exibeComparativo\\\"><strong>{{ comparativoTotal.tonPercentual | number:'1.2-2' }}%</strong></td>\\r\\n            <td class=\\\"bg-dark text-white text-center\\\" [ngClass]=\\\"classComparativo(comparativoTotal.valorPercentual)\\\" *ngIf=\\\"exibeComparativo\\\"><strong>{{ comparativoTotal.valorPercentual | number:'1.2-2' }}%</strong></td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        *ngIf=\\\"itensLoaded && itensEmpty\\\"\\r\\n        class=\\\"mt-3\\\">\\r\\n      </empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"itens.length > itemsPerPage && !itensEmpty && !loaderNavbar\\\" >\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"itens.length\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Components\r\nimport { ComercialRelatoriosFaturamentoDetalhadoComponent } from './faturamento-detalhado.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ComercialRelatoriosFaturamentoDetalhadoComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialRelatoriosFaturamentoDetalhadoRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialRelatoriosFaturamentoDetalhadoService } from './faturamento-detalhado.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { AuthService } from 'src/app/shared/services/core/auth.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-relatorios-faturamento-detalhado',\r\n  templateUrl: './faturamento-detalhado.component.html',\r\n  styleUrls: ['./faturamento-detalhado.component.scss']\r\n})\r\nexport class ComercialRelatoriosFaturamentoDetalhadoComponent\r\n  implements OnInit {\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  adminProfile = false;\r\n  idVendedor: number;\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  itensLoaded = false;\r\n  itensEmpty = true;\r\n\r\n  itens: any = [];\r\n  itensReturned: any = [];\r\n  vendedores: any = [];\r\n  escritorios: any = [];\r\n\r\n  exibeClasse = false;\r\n  exibeProduto = false;\r\n  exibeLinha = false;\r\n  exibeComparativo = false;\r\n  comparativoTotal: any = [];\r\n\r\n  anoPassado: number;\r\n  anoCorrente: number;\r\n\r\n  exibeVendedores = false;\r\n  exibeEscritorios = false;\r\n  exibeClientes = false;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 25;\r\n  currentPage = 1;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private localeService: BsLocaleService,\r\n    private faturamentoDetalhadoService: ComercialRelatoriosFaturamentoDetalhadoService,\r\n    private xlsxService: XlsxService,\r\n    private atividadesService: AtividadesService,\r\n    private authService: AuthService,\r\n    private titleService: TitleService,\r\n    private dateService: DateService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n    this.idVendedor = this.authService.getCurrentUser()['info']['idVendedor'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getPerfil();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Faturamento detalhado');\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Relatórios',\r\n          routerLink: `/comercial/relatorios/${params['idSubModulo']}`\r\n        },\r\n        {\r\n          descricao: 'Faturamento detalhado'\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  getPerfil() {\r\n    this.faturamentoDetalhadoService\r\n      .getPerfil()\r\n      .pipe(\r\n        finalize(() => {\r\n          if (this.adminProfile) {\r\n            this.getFilterValues();\r\n            this.onChangeFiltrarPor();\r\n          } else {\r\n            this.loaderFullScreen = false;\r\n          }\r\n          this.montaFiltros();\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response['responseCode'] === 200) {\r\n            if (\r\n              response['result']['coordenador'] ||\r\n              response['result']['gestor']\r\n            ) {\r\n              this.adminProfile = true;\r\n            }\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  getFilterValues() {\r\n    this.faturamentoDetalhadoService\r\n      .getFiltros()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response[0]['responseCode'] === 200) {\r\n            this.escritorios = response[0]['result'];\r\n          }\r\n\r\n          if (response[1]['responseCode'] === 200) {\r\n            this.vendedores = response[1]['result'];\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormFilter() {\r\n    const formValue = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      visao: [formValue['visao'], [Validators.required]],\r\n      filtro: [formValue['filtro'], [Validators.required]],\r\n      inicioData: [formValue['inicioData'], [Validators.required]],\r\n      terminoData: [formValue['terminoData'], [Validators.required]],\r\n      exibirComparativo: [formValue['exibirComparativo']],\r\n      vendedor: [formValue['vendedor']],\r\n      escritorio: [formValue['escritorio']],\r\n      cliente: [formValue['cliente']]\r\n    });\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      visao: 1,\r\n      filtro: 0,\r\n      inicioData: this.dateService.getFirstDayMonth(),\r\n      terminoData: new Date(),\r\n      exibirComparativo: 0,\r\n      vendedor: null,\r\n      escritorio: null,\r\n      cliente: null\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach(formKey => {\r\n            Object.keys(params).forEach(paramKey => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (formKey === 'inicioData' || formKey === 'terminoData') {\r\n                  formValue[formKey] = this.dateService.convertStringToDate(\r\n                    params[paramKey],\r\n                    'pt-br'\r\n                  );\r\n                } else {\r\n                  if (!isNaN(Number(params[paramKey]))) {\r\n                    formValue[formKey] = Number(params[paramKey]);\r\n                  } else {\r\n                    formValue[formKey] = params[paramKey];\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  onFilter() {\r\n    if (this.form.valid) {\r\n      this.setRouterParams(this.verificaParams());\r\n      this.currentPage = 1;\r\n    }\r\n  }\r\n\r\n  search(params: any) {\r\n    this.loaderNavbar = true;\r\n    this.itensLoaded = false;\r\n    this.itensEmpty = true;\r\n    this.itens = [];\r\n    this.itensReturned = [];\r\n\r\n    this.faturamentoDetalhadoService\r\n      .getFaturamentoDetalhado(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.itensLoaded = true;\r\n          this.visaoRelatorio(params['visao']);\r\n          this.verificaComparativo(params['exibirComparativo']);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response['responseCode'] === 200) {\r\n            if (\r\n              response['result']['analitico'].length != 0 &&\r\n              response['result']['analitico']\r\n            ) {\r\n              let d = new Date();\r\n\r\n              this.anoCorrente = d.getFullYear();\r\n              this.anoPassado = this.anoCorrente - 1;\r\n\r\n              this.itens = response['result']['analitico'];\r\n              this.itensReturned = this.itens.slice(0, this.itemsPerPage);\r\n              this.comparativoTotal = response['result']['total'];\r\n              this.itensEmpty = false;\r\n            }\r\n          } else if (response['responseCode'] === 204) {\r\n            this.pnotifyService.notice('Nenhuma informação encontrada');\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) }\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    params['visao'] = this.form.value['visao'];\r\n    params['exibirComparativo'] = this.form.value['exibirComparativo'];\r\n    params['inicioData'] = this.dateService.convertToUrlDate(\r\n      new Date(this.form.value['inicioData'])\r\n    );\r\n    params['terminoData'] = this.dateService.convertToUrlDate(\r\n      new Date(this.form.value['terminoData'])\r\n    );\r\n    params['filtro'] = this.form.value['filtro'];\r\n\r\n    if (this.form.value['escritorio']) {\r\n      params['escritorio'] = this.form.value['escritorio'];\r\n    }\r\n\r\n    if (this.form.value['vendedor']) {\r\n      params['vendedor'] = this.form.value['vendedor'];\r\n    }\r\n\r\n    if (this.form.value['cliente']) {\r\n      params['cliente'] = this.form.value['cliente'];\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  montaFiltros() {\r\n    if (this.adminProfile == false) {\r\n      this.form.controls['filtro'].setValue(2);\r\n      this.form.controls['vendedor'].setValue(this.idVendedor);\r\n    }\r\n  }\r\n\r\n  onChangeFiltrarPor(): void {\r\n    if (this.form.value['filtro'] == 1) {\r\n      this.exibeEscritorios = true;\r\n      this.form.controls['escritorio'].setValidators([Validators.required]);\r\n    } else {\r\n      this.exibeEscritorios = false;\r\n      this.form.controls['escritorio'].clearValidators();\r\n    }\r\n    this.form.controls['escritorio'].updateValueAndValidity();\r\n\r\n    if (this.form.value['filtro'] == 2) {\r\n      this.exibeVendedores = true;\r\n      this.form.controls['vendedor'].setValidators([Validators.required]);\r\n    } else {\r\n      this.exibeVendedores = false;\r\n      this.form.controls['vendedor'].clearValidators();\r\n    }\r\n    this.form.controls['vendedor'].updateValueAndValidity();\r\n\r\n    if (this.form.value['filtro'] == 3) {\r\n      this.exibeClientes = true;\r\n      this.form.controls['cliente'].setValidators([Validators.required]);\r\n    } else {\r\n      this.exibeClientes = false;\r\n      this.form.controls['cliente'].clearValidators();\r\n    }\r\n    this.form.controls['cliente'].updateValueAndValidity();\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n\r\n    listagemExport = this.itens.concat(this.comparativoTotal);\r\n\r\n    this.xlsxService.exportFile(\r\n      listagemExport,\r\n      `FaturamentoDetalhado_${dataExport}`\r\n    );\r\n  }\r\n\r\n  verificaComparativo(comparativo: any): void {\r\n    this.exibeComparativo = comparativo == 1 ? true : false;\r\n  }\r\n\r\n  verificaData(inicio: Date, termino: Date): Array<any> {\r\n    let dtInicio: string, dtTermino: string;\r\n\r\n    dtInicio = `${inicio.getFullYear()}-${inicio.getMonth() +\r\n      1}-${inicio.getDate()}`;\r\n\r\n    dtTermino = `${termino.getFullYear()}-${termino.getMonth() +\r\n      1}-${termino.getDate()}`;\r\n\r\n    return [dtInicio, dtTermino];\r\n  }\r\n\r\n  visaoRelatorio(visao: number): void {\r\n    this.exibeLinha = visao == 1 ? true : false;\r\n    this.exibeClasse = visao == 2 ? true : false;\r\n    this.exibeProduto = visao == 3 ? true : false;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string): string {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  classComparativo(value: number): string {\r\n    let textClass = '';\r\n\r\n    if (value > 0) {\r\n      textClass = 'text-success';\r\n    } else if (value < 0) {\r\n      textClass = 'text-danger';\r\n    }\r\n\r\n    return textClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.itensReturned = this.itens.slice(startItem, endItem);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localePt from '@angular/common/locales/pt';\r\n\r\nregisterLocaleData(localePt, 'pt-BR');\r\n\r\n// ngx-bootstrap\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// Modules\r\nimport { ComercialRelatoriosFaturamentoDetalhadoRoutingModule } from './faturamento-detalhado-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialRelatoriosFaturamentoDetalhadoComponent } from './faturamento-detalhado.component';\r\n\r\n@NgModule({\r\n  declarations: [ComercialRelatoriosFaturamentoDetalhadoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    NgSelectModule,\r\n    ComercialRelatoriosFaturamentoDetalhadoRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule\r\n  ]\r\n})\r\nexport class ComercialRelatoriosFaturamentoDetalhadoModule {}\r\n"]}