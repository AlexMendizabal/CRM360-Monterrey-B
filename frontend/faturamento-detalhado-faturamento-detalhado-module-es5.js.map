{"version":3,"sources":["webpack:///src/app/modules/comercial/services/vendedores.service.ts","webpack:///src/app/modules/comercial/relatorios/faturamento-detalhado/faturamento-detalhado.service.ts","webpack:///src/app/modules/comercial/relatorios/faturamento-detalhado/faturamento-detalhado.component.scss","webpack:///src/app/modules/comercial/relatorios/faturamento-detalhado/faturamento-detalhado.component.html","webpack:///src/app/modules/comercial/relatorios/faturamento-detalhado/faturamento-detalhado-routing.module.ts","webpack:///src/app/modules/comercial/relatorios/faturamento-detalhado/faturamento-detalhado.component.ts","webpack:///src/app/modules/comercial/relatorios/faturamento-detalhado/faturamento-detalhado.module.ts"],"names":["ComercialVendedoresService","http","API","get","pipe","params","codCliente","providedIn","ComercialRelatoriosFaturamentoDetalhadoService","escritoriosService","vendedoresService","escritorios","getEscritorios","vendedores","getVendedores","httpParams","param","append","routes","path","component","ComercialRelatoriosFaturamentoDetalhadoRoutingModule","imports","forChild","exports","ComercialRelatoriosFaturamentoDetalhadoComponent","activatedRoute","router","location","formBuilder","pnotifyService","localeService","faturamentoDetalhadoService","xlsxService","atividadesService","authService","titleService","dateService","loaderNavbar","loaderFullScreen","adminProfile","breadCrumbTree","itensLoaded","itensEmpty","itens","itensReturned","exibeClasse","exibeProduto","exibeLinha","exibeComparativo","comparativoTotal","exibeVendedores","exibeEscritorios","exibeClientes","maxSize","itemsPerPage","currentPage","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getPNotify","idVendedor","getCurrentUser","registrarAcesso","setBreadCrumb","getPerfil","setFormFilter","setTitle","subscribe","descricao","routerLink","getFilterValues","onChangeFiltrarPor","montaFiltros","next","response","error","back","getFiltros","formValue","checkRouterParams","form","group","visao","required","filtro","inicioData","terminoData","exibirComparativo","vendedor","escritorio","cliente","getFirstDayMonth","Date","activatedRouteSubscription","queryParams","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","convertStringToDate","isNaN","Number","unsubscribe","valid","setRouterParams","verificaParams","getFaturamentoDetalhado","visaoRelatorio","verificaComparativo","d","anoCorrente","getFullYear","anoPassado","slice","notice","navigate","relativeTo","q","btoa","stringify","value","convertToUrlDate","controls","setValue","setValidators","clearValidators","updateValueAndValidity","data","toLocaleDateString","split","dataExport","listagemExport","concat","exportFile","comparativo","inicio","termino","dtInicio","dtTermino","getMonth","getDate","field","onFieldInvalid","status","touched","formControl","validator","validationResult","textClass","event","startItem","page","endItem","selector","template","ComercialRelatoriosFaturamentoDetalhadoModule","declarations","forRoot"],"mappings":"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","file":"faturamento-detalhado-faturamento-detalhado-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialVendedoresService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\n\n  constructor(protected http: HttpClient) {}\n\n  getDetalhesCadastro() {\n    return this.http\n      .get(`${this.API}/detalhes-cadastro`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVendedores() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\n  }\n\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/carteira-clientes`,\n      {\n        params: params\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getValidaClienteCarteira(\n    codCliente: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVinculoOperadores() {\n    return this.http\n      .get(`${this.API}/vinculo-operadores`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { EscritoriosService } from 'src/app/shared/services/requests/escritorios.service';\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialRelatoriosFaturamentoDetalhadoService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(\n    protected http: HttpClient,\n    private escritoriosService: EscritoriosService,\n    private vendedoresService: ComercialVendedoresService\n  ) {}\n\n  getFiltros() {\n    const escritorios = this.escritoriosService.getEscritorios();\n    const vendedores = this.vendedoresService.getVendedores();\n\n    return forkJoin([escritorios, vendedores]).pipe(take(1));\n  }\n\n  getPerfil() {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1));\n  }\n\n  getFaturamentoDetalhado(params: any) {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/relatorios/faturamento-detalhado/lista`, {\n        params: httpParams\n      })\n      .pipe(take(1));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL3JlbGF0b3Jpb3MvZmF0dXJhbWVudG8tZGV0YWxoYWRvL2ZhdHVyYW1lbnRvLWRldGFsaGFkby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Faturamento detalhado\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onExport()\\\"\\n    *ngIf=\\\"!itensEmpty\\\">\\n    Exportar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\"\\n    [disabled]=\\\"!form.valid || loaderNavbar\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <advanced-filter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\n          <label for=\\\"visao\\\">Visão relatório</label>\\n          <select\\n            id=\\\"visao\\\"\\n            class=\\\"form-control custom-select\\\"\\n            formControlName=\\\"visao\\\">\\n            <option value=\\\"1\\\">LINHA</option>\\n            <option value=\\\"2\\\">CLASSE</option>\\n            <option value=\\\"3\\\">PRODUTO</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\n          <label for=\\\"exibirComparativo\\\">Comparativo ano anterior</label>\\n          <select\\n            id=\\\"exibirComparativo\\\"\\n            class=\\\"form-control custom-select\\\"\\n            formControlName=\\\"exibirComparativo\\\">\\n            <option value=\\\"0\\\">Não exibir</option>\\n            <option value=\\\"1\\\">Exibir</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\n          <label for=\\\"inicioData\\\">Data inicial</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"inicioData\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"inicioData\\\"\\n            [ngClass]=\\\"onFieldError('inicioData') + ' ' + onFieldRequired('inicioData')\\\">\\n        </div>\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\n          <label for=\\\"terminoData\\\">Data final</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"terminoData\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"terminoData\\\"\\n            [ngClass]=\\\"onFieldError('terminoData') + ' ' + onFieldRequired('terminoData')\\\">\\n        </div>\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\" *ngIf=\\\"adminProfile\\\">\\n          <label for=\\\"filtro\\\">Filtrar por</label>\\n          <select\\n            id=\\\"filtro\\\"\\n            class=\\\"form-control custom-select\\\"\\n            formControlName=\\\"filtro\\\"\\n            (change)=\\\"onChangeFiltrarPor()\\\">\\n            <option value=\\\"0\\\">TODOS</option>\\n            <option value=\\\"1\\\">ESCRITÓRIO</option>\\n            <option value=\\\"2\\\">VENDEDOR</option>\\n            <option value=\\\"3\\\">CLIENTE</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\" *ngIf=\\\"exibeEscritorios\\\">\\n          <label for=\\\"escritorios\\\">Escritórios</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"escritorios\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"escritorio\\\"\\n            bindLabel=\\\"nomeEscritorio\\\"\\n            bindValue=\\\"codEscritorio\\\"\\n            formControlName=\\\"escritorio\\\"\\n            [ngClass]=\\\"onFieldError('escritorio') + ' ' + onFieldRequired('escritorio')\\\">\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\" *ngIf=\\\"exibeVendedores\\\">\\n          <label for=\\\"vendedores\\\">Vendedores</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"vendedores\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"vendedor\\\"\\n            bindLabel=\\\"nome\\\"\\n            bindValue=\\\"id\\\"\\n            formControlName=\\\"vendedor\\\"\\n            [ngClass]=\\\"onFieldError('vendedor') + ' ' + onFieldRequired('vendedor')\\\">\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2 mb-lg-0\\\" *ngIf=\\\"exibeClientes\\\">\\n          <label for=\\\"cliente\\\">Código do cliente</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"cliente\\\"\\n            type=\\\"text\\\"\\n            formControlName=\\\"cliente\\\"\\n            [ngClass]=\\\"onFieldError('cliente') + ' ' + onFieldRequired('cliente')\\\">\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <custom-table *ngIf=\\\"itensLoaded && !itensEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Linha</th>\\n            <th scope=\\\"col\\\" *ngIf=\\\"exibeClasse || exibeProduto\\\">Classe</th>\\n            <th scope=\\\"col\\\" *ngIf=\\\"exibeProduto\\\">Produto</th>\\n            <th scope=\\\"col\\\" colspan=\\\"2\\\" class=\\\"text-center\\\" *ngIf=\\\"exibeComparativo\\\">{{ anoPassado }}</th>\\n            <th scope=\\\"col\\\" colspan=\\\"2\\\" class=\\\"text-center\\\">{{ anoCorrente }}</th>\\n            <th scope=\\\"col\\\" colspan=\\\"2\\\" class=\\\"text-center\\\" *ngIf=\\\"exibeComparativo\\\">Comparativo</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of itensReturned\\\">\\n            <td>{{ item.linha | uppercase }}</td>\\n            <td *ngIf=\\\"exibeClasse || exibeProduto\\\">{{ item.classe | uppercase }}</td>\\n            <td *ngIf=\\\"exibeProduto\\\">{{ item.descricaoMaterial | uppercase }}</td>\\n            <td class=\\\"text-center bg-white\\\" *ngIf=\\\"exibeComparativo\\\">{{ item.tonPassado | number:'1.3-3' }}t</td>\\n            <td class=\\\"text-center bg-white\\\" *ngIf=\\\"exibeComparativo\\\">{{ item.valorPassado | currency:'BRL':'symbol':'1.2-2' }}</td>\\n            <td class=\\\"text-center\\\">{{ item.tonCorrente | number:'1.3-3' }}t</td>\\n            <td class=\\\"text-center\\\">{{ item.valorCorrente | currency:'BRL':'symbol':'1.2-2' }}</td>\\n            <td class=\\\"text-center bg-white\\\" [ngClass]=\\\"classComparativo(item.tonPercentual)\\\" *ngIf=\\\"exibeComparativo\\\">{{ item.tonPercentual | number:'1.2-2' }}%</td>\\n            <td class=\\\"text-center bg-white\\\" [ngClass]=\\\"classComparativo(item.valorPercentual)\\\" *ngIf=\\\"exibeComparativo\\\">{{ item.valorPercentual | number:'1.2-2' }}%</td>\\n          </tr>\\n          <tr>\\n            <td class=\\\"bg-dark text-white text-center\\\"><strong>Total</strong></td>\\n            <td *ngIf=\\\"exibeProduto\\\"></td>\\n            <td *ngIf=\\\"exibeProduto || exibeClasse\\\"></td>\\n            <td class=\\\"bg-dark text-white text-center\\\" *ngIf=\\\"exibeComparativo\\\"><strong>{{ comparativoTotal.tonPassado | number:'1.3-3' }}t</strong></td>\\n            <td class=\\\"bg-dark text-white text-center\\\" *ngIf=\\\"exibeComparativo\\\"><strong>{{ comparativoTotal.valorPassado| currency:'BRL':'symbol':'1.2-2'}}</strong></td>\\n            <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ comparativoTotal.tonCorrente | number:'1.3-3' }}t</strong></td>\\n            <td class=\\\"bg-dark text-white text-center\\\"><strong>{{ comparativoTotal.valorCorrente | currency:'BRL':'symbol':'1.2-2' }}</strong></td>\\n            <td class=\\\"bg-dark text-white text-center\\\" [ngClass]=\\\"classComparativo(comparativoTotal.tonPercentual)\\\" *ngIf=\\\"exibeComparativo\\\"><strong>{{ comparativoTotal.tonPercentual | number:'1.2-2' }}%</strong></td>\\n            <td class=\\\"bg-dark text-white text-center\\\" [ngClass]=\\\"classComparativo(comparativoTotal.valorPercentual)\\\" *ngIf=\\\"exibeComparativo\\\"><strong>{{ comparativoTotal.valorPercentual | number:'1.2-2' }}%</strong></td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        *ngIf=\\\"itensLoaded && itensEmpty\\\"\\n        class=\\\"mt-3\\\">\\n      </empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"itens.length > itemsPerPage && !itensEmpty && !loaderNavbar\\\" >\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"itens.length\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { ComercialRelatoriosFaturamentoDetalhadoComponent } from './faturamento-detalhado.component';\n\nconst routes: Routes = [\n  { path: '', component: ComercialRelatoriosFaturamentoDetalhadoComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialRelatoriosFaturamentoDetalhadoRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// ngx-bootstrap\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialRelatoriosFaturamentoDetalhadoService } from './faturamento-detalhado.service';\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { AuthService } from 'src/app/shared/services/core/auth.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-relatorios-faturamento-detalhado',\n  templateUrl: './faturamento-detalhado.component.html',\n  styleUrls: ['./faturamento-detalhado.component.scss']\n})\nexport class ComercialRelatoriosFaturamentoDetalhadoComponent\n  implements OnInit {\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  adminProfile = false;\n  idVendedor: number;\n\n  activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  itensLoaded = false;\n  itensEmpty = true;\n\n  itens: any = [];\n  itensReturned: any = [];\n  vendedores: any = [];\n  escritorios: any = [];\n\n  exibeClasse = false;\n  exibeProduto = false;\n  exibeLinha = false;\n  exibeComparativo = false;\n  comparativoTotal: any = [];\n\n  anoPassado: number;\n  anoCorrente: number;\n\n  exibeVendedores = false;\n  exibeEscritorios = false;\n  exibeClientes = false;\n\n  maxSize = 10;\n  itemsPerPage = 25;\n  currentPage = 1;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private localeService: BsLocaleService,\n    private faturamentoDetalhadoService: ComercialRelatoriosFaturamentoDetalhadoService,\n    private xlsxService: XlsxService,\n    private atividadesService: AtividadesService,\n    private authService: AuthService,\n    private titleService: TitleService,\n    private dateService: DateService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n    this.idVendedor = this.authService.getCurrentUser()['info']['idVendedor'];\n  }\n\n  ngOnInit() {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getPerfil();\n    this.setFormFilter();\n    this.titleService.setTitle('Faturamento detalhado');\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb() {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Relatórios',\n          routerLink: `/comercial/relatorios/${params['idSubModulo']}`\n        },\n        {\n          descricao: 'Faturamento detalhado'\n        }\n      ];\n    });\n  }\n\n  getPerfil() {\n    this.faturamentoDetalhadoService\n      .getPerfil()\n      .pipe(\n        finalize(() => {\n          if (this.adminProfile) {\n            this.getFilterValues();\n            this.onChangeFiltrarPor();\n          } else {\n            this.loaderFullScreen = false;\n          }\n          this.montaFiltros();\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response['responseCode'] === 200) {\n            if (\n              response['result']['coordenador'] ||\n              response['result']['gestor']\n            ) {\n              this.adminProfile = true;\n            }\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  getFilterValues() {\n    this.faturamentoDetalhadoService\n      .getFiltros()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response[0]['responseCode'] === 200) {\n            this.escritorios = response[0]['result'];\n          }\n\n          if (response[1]['responseCode'] === 200) {\n            this.vendedores = response[1]['result'];\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormFilter() {\n    const formValue = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      visao: [formValue['visao'], [Validators.required]],\n      filtro: [formValue['filtro'], [Validators.required]],\n      inicioData: [formValue['inicioData'], [Validators.required]],\n      terminoData: [formValue['terminoData'], [Validators.required]],\n      exibirComparativo: [formValue['exibirComparativo']],\n      vendedor: [formValue['vendedor']],\n      escritorio: [formValue['escritorio']],\n      cliente: [formValue['cliente']]\n    });\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      visao: 1,\n      filtro: 0,\n      inicioData: this.dateService.getFirstDayMonth(),\n      terminoData: new Date(),\n      exibirComparativo: 0,\n      vendedor: null,\n      escritorio: null,\n      cliente: null\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach(formKey => {\n            Object.keys(params).forEach(paramKey => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (formKey === 'inicioData' || formKey === 'terminoData') {\n                  formValue[formKey] = this.dateService.convertStringToDate(\n                    params[paramKey],\n                    'pt-br'\n                  );\n                } else {\n                  if (!isNaN(Number(params[paramKey]))) {\n                    formValue[formKey] = Number(params[paramKey]);\n                  } else {\n                    formValue[formKey] = params[paramKey];\n                  }\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  onFilter() {\n    if (this.form.valid) {\n      this.setRouterParams(this.verificaParams());\n      this.currentPage = 1;\n    }\n  }\n\n  search(params: any) {\n    this.loaderNavbar = true;\n    this.itensLoaded = false;\n    this.itensEmpty = true;\n    this.itens = [];\n    this.itensReturned = [];\n\n    this.faturamentoDetalhadoService\n      .getFaturamentoDetalhado(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.itensLoaded = true;\n          this.visaoRelatorio(params['visao']);\n          this.verificaComparativo(params['exibirComparativo']);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response['responseCode'] === 200) {\n            if (\n              response['result']['analitico'].length != 0 &&\n              response['result']['analitico']\n            ) {\n              let d = new Date();\n\n              this.anoCorrente = d.getFullYear();\n              this.anoPassado = this.anoCorrente - 1;\n\n              this.itens = response['result']['analitico'];\n              this.itensReturned = this.itens.slice(0, this.itemsPerPage);\n              this.comparativoTotal = response['result']['total'];\n              this.itensEmpty = false;\n            }\n          } else if (response['responseCode'] === 204) {\n            this.pnotifyService.notice('Nenhuma informação encontrada');\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) }\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    params['visao'] = this.form.value['visao'];\n    params['exibirComparativo'] = this.form.value['exibirComparativo'];\n    params['inicioData'] = this.dateService.convertToUrlDate(\n      new Date(this.form.value['inicioData'])\n    );\n    params['terminoData'] = this.dateService.convertToUrlDate(\n      new Date(this.form.value['terminoData'])\n    );\n    params['filtro'] = this.form.value['filtro'];\n\n    if (this.form.value['escritorio']) {\n      params['escritorio'] = this.form.value['escritorio'];\n    }\n\n    if (this.form.value['vendedor']) {\n      params['vendedor'] = this.form.value['vendedor'];\n    }\n\n    if (this.form.value['cliente']) {\n      params['cliente'] = this.form.value['cliente'];\n    }\n\n    return params;\n  }\n\n  montaFiltros() {\n    if (this.adminProfile == false) {\n      this.form.controls['filtro'].setValue(2);\n      this.form.controls['vendedor'].setValue(this.idVendedor);\n    }\n  }\n\n  onChangeFiltrarPor(): void {\n    if (this.form.value['filtro'] == 1) {\n      this.exibeEscritorios = true;\n      this.form.controls['escritorio'].setValidators([Validators.required]);\n    } else {\n      this.exibeEscritorios = false;\n      this.form.controls['escritorio'].clearValidators();\n    }\n    this.form.controls['escritorio'].updateValueAndValidity();\n\n    if (this.form.value['filtro'] == 2) {\n      this.exibeVendedores = true;\n      this.form.controls['vendedor'].setValidators([Validators.required]);\n    } else {\n      this.exibeVendedores = false;\n      this.form.controls['vendedor'].clearValidators();\n    }\n    this.form.controls['vendedor'].updateValueAndValidity();\n\n    if (this.form.value['filtro'] == 3) {\n      this.exibeClientes = true;\n      this.form.controls['cliente'].setValidators([Validators.required]);\n    } else {\n      this.exibeClientes = false;\n      this.form.controls['cliente'].clearValidators();\n    }\n    this.form.controls['cliente'].updateValueAndValidity();\n  }\n\n  onExport(): void {\n    let data = new Date().toLocaleDateString().split('/'),\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\n\n    let listagemExport: any = [];\n\n    listagemExport = this.itens.concat(this.comparativoTotal);\n\n    this.xlsxService.exportFile(\n      listagemExport,\n      `FaturamentoDetalhado_${dataExport}`\n    );\n  }\n\n  verificaComparativo(comparativo: any): void {\n    this.exibeComparativo = comparativo == 1 ? true : false;\n  }\n\n  verificaData(inicio: Date, termino: Date): Array<any> {\n    let dtInicio: string, dtTermino: string;\n\n    dtInicio = `${inicio.getFullYear()}-${inicio.getMonth() +\n      1}-${inicio.getDate()}`;\n\n    dtTermino = `${termino.getFullYear()}-${termino.getMonth() +\n      1}-${termino.getDate()}`;\n\n    return [dtInicio, dtTermino];\n  }\n\n  visaoRelatorio(visao: number): void {\n    this.exibeLinha = visao == 1 ? true : false;\n    this.exibeClasse = visao == 2 ? true : false;\n    this.exibeProduto = visao == 3 ? true : false;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string): string {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  classComparativo(value: number): string {\n    let textClass = '';\n\n    if (value > 0) {\n      textClass = 'text-success';\n    } else if (value < 0) {\n      textClass = 'text-danger';\n    }\n\n    return textClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.itensReturned = this.itens.slice(startItem, endItem);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { registerLocaleData } from '@angular/common';\nimport localePt from '@angular/common/locales/pt';\n\nregisterLocaleData(localePt, 'pt-BR');\n\n// ngx-bootstrap\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// Modules\nimport { ComercialRelatoriosFaturamentoDetalhadoRoutingModule } from './faturamento-detalhado-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialRelatoriosFaturamentoDetalhadoComponent } from './faturamento-detalhado.component';\n\n@NgModule({\n  declarations: [ComercialRelatoriosFaturamentoDetalhadoComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    NgSelectModule,\n    ComercialRelatoriosFaturamentoDetalhadoRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ]\n})\nexport class ComercialRelatoriosFaturamentoDetalhadoModule {}\n"]}