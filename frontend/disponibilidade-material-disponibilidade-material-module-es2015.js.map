{"version":3,"sources":["./src/app/modules/comercial/services/vendedores.service.ts","./src/app/modules/comercial/disponibilidade-material/formulario/formulario.service.ts","./src/app/modules/comercial/disponibilidade-material/formulario/formulario.component.scss","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/shared/services/core/date.service.ts","./src/app/modules/comercial/disponibilidade-material/formulario/formulario-resolver.guard.ts","./src/app/modules/comercial/comercial.service.ts","./src/app/modules/comercial/disponibilidade-material/formulario/formulario.component.ts","./src/app/modules/comercial/disponibilidade-material/lista/lista.component.ts","./src/app/modules/comercial/disponibilidade-material/disponibilidade-material-routing.module.ts","./src/app/guards/form-deactivate.guard.ts","./src/app/modules/comercial/disponibilidade-material/lista/lista.component.html","./src/app/modules/comercial/disponibilidade-material/disponibilidade-material.service.ts","./src/app/modules/comercial/disponibilidade-material/disponibilidade-material.module.ts","./src/app/modules/comercial/disponibilidade-material/formulario/formulario.component.html","./src/app/modules/comercial/disponibilidade-material/lista/lista.component.scss"],"names":[],"mappings":"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","file":"disponibilidade-material-disponibilidade-material-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialVendedoresService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\n\n  constructor(protected http: HttpClient) {}\n\n  getDetalhesCadastro() {\n    return this.http\n      .get(`${this.API}/detalhes-cadastro`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVendedores() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\n  }\n\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/carteira-clientes`,\n      {\n        params: params\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getValidaClienteCarteira(\n    codCliente: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVinculoOperadores() {\n    return this.http\n      .get(`${this.API}/vinculo-operadores`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../../comercial.service';\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialDisponibilidadeMaterialFormularioService {\n  private readonly API = environment.API;\n\n  constructor(\n    private comercialService: ComercialService,\n    private vendedoresService: ComercialVendedoresService,\n    private http: HttpClient\n  ) {}\n\n  loadDependencies(codMaterial: number) {\n    const empresas = this.comercialService.getEmpresas({ tipo: 'faturamento' });\n    const depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\n    const vendedores = this.vendedoresService.getVendedores();\n    const clientes = this.vendedoresService.getCarteiraClientes();\n    const material = this.http\n      .get(`${this.API}/common/materiais?codigo_material=${codMaterial}`)\n      .pipe(take(1));\n\n    return forkJoin([vendedores, empresas, depositos, clientes, material]);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2Rpc3BvbmliaWxpZGFkZS1tYXRlcmlhbC9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialDisponibilidadeMaterialService } from '../disponibilidade-material.service';\nimport { AuthService } from 'src/app/shared/services/core/auth.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialDisponibilidadeMaterialFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private disponibilidadeMaterialService: ComercialDisponibilidadeMaterialService,\n    private authService: AuthService,\n    private dateService: DateService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params['codigo']) {\n      return this.disponibilidadeMaterialService.getSolicitacao(\n        route.params['codigo']\n      );\n    }\n\n    const codMaterial =\n      route.params && route.params['codMaterial']\n        ? route.params['codMaterial']\n        : null;\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codigo: null,\n        codMaterial: codMaterial,\n        codEmpresa: null,\n        codDeposito: null,\n        codUsuarioRequisicao: this.authService.getCurrentUser()['info'][\n          'idVendedor'\n        ],\n        codCliente: null,\n        qtdeMinima: 0,\n        qtdeMaxima: 0,\n        dataInicialParametrizacao: new Date(),\n        dataFinalParametrizacao: this.dateService.getLastDayMonth()\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\ndefineLocale('pt-br', ptBrLocale);\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialDisponibilidadeMaterialFormularioService } from './formulario.service';\nimport { ComercialDisponibilidadeMaterialService } from '../disponibilidade-material.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-disponibilidade-material-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class ComercialDisponibilidadeMaterialFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  action: string;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm = false;\n\n  vendedores: any = [];\n  empresas: any = [];\n  depositos: any = [];\n  filteredDepositos: any = [];\n  clientes: any = [];\n  material = { descricao: '' };\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  currencyMaskOptions = {\n    align: 'left',\n    prefix: '',\n    suffix: '',\n    thousands: '.',\n    decimal: ',',\n    precision: 3\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private location: Location,\n    private localeService: BsLocaleService,\n    private pnotifyService: PNotifyService,\n    private titleService: TitleService,\n    private formularioService: ComercialDisponibilidadeMaterialFormularioService,\n    private disponibilidadeMaterialService: ComercialDisponibilidadeMaterialService,\n    private dateService: DateService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.checkUrlParams();\n    this.setBreadCrumb();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  checkUrlParams(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params['codigo']) {\n        this.action = 'editar';\n      } else {\n        this.action = 'novo';\n      }\n\n      this.setFormBuilder();\n    });\n  }\n\n  appTitle(): string {\n    let title: string;\n\n    if (this.action == 'novo') {\n      title = 'Nova solicitação';\n    } else if (this.action == 'editar') {\n      title = 'Editar solicitação';\n    }\n\n    return title;\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data['detalhes']['success'] === true) {\n      const detalhes = this.activatedRoute.snapshot.data['detalhes']['data'];\n      this.getFormFields(detalhes['codMaterial']);\n\n      let dataInicial: Date;\n      let dataFinal: Date;\n\n      if (detalhes['codigo'] === null) {\n        dataInicial = detalhes['dataInicialParametrizacao'];\n        dataFinal = detalhes['dataFinalParametrizacao'];\n      } else {\n        dataInicial = this.dateService.convertStringToDate(\n          detalhes['dataInicialParametrizacao'],\n          'usa'\n        );\n        dataFinal = this.dateService.convertStringToDate(\n          detalhes['dataFinalParametrizacao'],\n          'usa'\n        );\n      }\n\n      this.form = this.formBuilder.group({\n        codigo: [detalhes['codigo']],\n        codMaterial: [\n          { value: detalhes['codMaterial'], disabled: true },\n          [Validators.required]\n        ],\n        codEmpresa: [detalhes['codEmpresa'], [Validators.required]],\n        codDeposito: [detalhes['codDeposito'], [Validators.required]],\n        codUsuarioRequisicao: [\n          detalhes['codUsuarioRequisicao'],\n          [Validators.required]\n        ],\n        codCliente: [detalhes['codCliente'], [Validators.required]],\n        qtdeMinima: [detalhes['qtdeMinima'], [Validators.required]],\n        qtdeMaxima: [detalhes['qtdeMaxima'], [Validators.required]],\n        dataInicialParametrizacao: [dataInicial, [Validators.required]],\n        dataFinalParametrizacao: [dataFinal, [Validators.required]]\n      });\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  setBreadCrumb(): void {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home'\n      },\n      {\n        descricao: 'Disponibilidade de material',\n        routerLink: `/comercial/disponibilidade-material/solicitacoes`\n      },\n      {\n        descricao:\n          this.action == 'novo' ? 'Nova solicitação' : 'Editar solicitação'\n      }\n    ];\n\n    this.titleService.setTitle(\n      this.breadCrumbTree[this.breadCrumbTree.length - 1]['descricao']\n    );\n  }\n\n  getFormFields(codMaterial: number): void {\n    this.formularioService\n      .loadDependencies(codMaterial)\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n\n          console.log(response);\n          \n          if (response[0]['responseCode'] === 200) {\n            this.vendedores = response[0]['result'];\n          }\n\n          if (response[1]['responseCode'] === 200) {\n            this.empresas = response[1]['result'];\n          }\n\n          if (response[2]['responseCode'] === 200) {\n            this.depositos = response[2]['result'];\n            this.filteredDepositos = this.depositos;\n          }\n\n          if (response[3]['success'] === true) {\n            this.clientes = response[3]['data'];\n          }\n\n          if (response[4]['responseCode'] === 200) {\n            this.material = response[4]['result'][0];\n            this.currencyMaskOptions.suffix = ` ${this.material['unidade']}`;\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  onChangeEmpresa(idEmpresa: number): void {\n    this.form.controls['codDeposito'].reset();\n\n    this.filteredDepositos = this.depositos.filter(\n      (value: any) => value['idEmpresa'] == idEmpresa\n    );\n  }\n\n  onChangeDeposito(deposito: any): void {\n    this.form.controls['codEmpresa'].setValue(deposito['idEmpresa']);\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string): string {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  checkValidatorsQuantidades(): boolean {\n    let validation = true;\n\n    if (\n      this.form.value['qtdeMinima'] === 0 ||\n      this.form.value['qtdeMaxima'] === 0\n    ) {\n      validation = false;\n    }\n\n    if (this.form.value['qtdeMaxima'] < this.form.value['qtdeMinima']) {\n      validation = false;\n    }\n\n    return validation;\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onSubmit(): void {\n    if (this.form.valid) {\n      if (!this.checkValidatorsQuantidades()) {\n        this.pnotifyService.notice('As quantidades informadas são inválidas.');\n        return;\n      }\n\n      this.loaderNavbar = true;\n      this.submittingForm = true;\n\n      this.disponibilidadeMaterialService\n        .save(this.action, this.form.getRawValue())\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n            this.submittingForm = false;\n          })\n        )\n        .subscribe(\n          (response: any) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response['success'] === true\n            ) {\n              this.form.reset();\n              this.formChanged = false;\n              this.pnotifyService.success(response['mensagem']);\n\n              this.router.navigate(\n                ['/comercial/disponibilidade-material/solicitacoes'],\n                {\n                  relativeTo: this.activatedRoute\n                }\n              );\n            } else if (\n              response.hasOwnProperty('success') &&\n              response['success'] === false\n            ) {\n              this.pnotifyService.error(response['mensagem']);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          (error: any) => {\n            this.pnotifyService.error();\n          }\n        );\n    }\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\ndefineLocale('pt-br', ptBrLocale);\n\n// Interfaces\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialDisponibilidadeMaterialService } from '../disponibilidade-material.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AuthService } from 'src/app/shared/services/core/auth.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { DisponibilidadeMaterial } from '../models/disponibilidade-material';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-disponibilidade-material-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class ComercialDisponibilidadeMaterialListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home'\n    },\n    {\n      descricao: 'Disponibilidade de material'\n    }\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green'\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red'\n    }\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n\n  depositos: any = [];\n  vendedores: any = [];\n  situacoes: any = [];\n\n  dados: any = [];\n  dadosPagination: any = [];\n  dadosEmpty: boolean;\n  dadosLoaded = false;\n\n  currentPage = 1;\n  maxSize: number = 10;\n  totalItems: number;\n  itemsPerPage: number = 10;\n\n  orderBy = 'nomeMaterial';\n  orderType = 'asc';\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private localeService: BsLocaleService,\n    private atividadesService: AtividadesService,\n    private disponibilidadeMaterialService: ComercialDisponibilidadeMaterialService,\n    private titleService: TitleService,\n    private authService: AuthService,\n    private dateService: DateService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false },\n      { dateInputFormat: 'DD/MM/YYYY' }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.getFilterValues();\n    this.setFormFilter();\n    this.titleService.setTitle('Disponibilidade de material');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getFilterValues(): void {\n    this.disponibilidadeMaterialService\n      .getFiltros()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response[0].responseCode == 200) {\n            this.depositos = response[0].result;\n\n            this.depositos.unshift({\n              idDeposito: 0,\n              nomeDeposito: 'EXIBIR TODOS'\n            });\n          }\n\n          if (response[1].responseCode == 200) {\n            this.vendedores = response[1].result;\n          }\n\n          if (\n            response[2].hasOwnProperty('success') &&\n            response[2].success === true\n          ) {\n            this.situacoes = response[2].data;\n\n            this.situacoes.unshift({\n              id: 0,\n              descricao: 'EXIBIR TODOS'\n            });\n          }\n        },\n        error: (error: any) => {\n          this.handleError('Ocorreu um erro ao carregar filtros.');\n        }\n      });\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      tipoData: [formValue.tipoData, [Validators.required]],\n      dataInicial: [formValue.dataInicial, [Validators.required]],\n      dataFinal: [formValue.dataFinal, [Validators.required]],\n      material: [formValue.material],\n      codDeposito: [formValue.codDeposito],\n      cliente: [formValue.cliente],\n      vendedor: [formValue.vendedor],\n      situacao: [formValue.situacao],\n      registros: [formValue.registros]\n    });\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      tipoData: 1,\n      dataInicial: this.dateService.getFirstDayMonth(),\n      dataFinal: this.dateService.getLastDayMonth(),\n      codDeposito: 0,\n      cliente: null,\n      material: null,\n      vendedor: this.authService.getCurrentUser().info.idVendedor,\n      situacao: 0,\n      registros: this.itemsPerPage\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach(formKey => {\n            Object.keys(params).forEach(paramKey => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\n                  formValue[formKey] = this.dateService.convertStringToDate(\n                    params[paramKey],\n                    'pt-br'\n                  );\n                } else {\n                  if (!isNaN(Number(params[paramKey]))) {\n                    formValue[formKey] = Number(params[paramKey]);\n                  } else {\n                    formValue[formKey] = params[paramKey];\n                  }\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string): string {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'desc') {\n        this.orderType = 'asc';\n      } else if (this.orderType == 'asc') {\n        this.orderType = 'desc';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'asc';\n    }\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.setRouterParams(this.verificaParams());\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n\n      this.scrollToFilter.nativeElement.scrollIntoView({\n        behavior: 'instant'\n      });\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) }\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.tipoData) {\n      params.tipoData = this.form.value.tipoData;\n    }\n\n    if (this.form.value.dataInicial) {\n      params.dataInicial = this.dateService.convertToUrlDate(\n        new Date(this.form.value.dataInicial)\n      );\n    }\n\n    if (this.form.value.dataFinal) {\n      params.dataFinal = this.dateService.convertToUrlDate(\n        new Date(this.form.value.dataFinal)\n      );\n    }\n\n    if (this.form.value.codDeposito) {\n      params.codDeposito = this.form.value.codDeposito;\n    }\n\n    if (this.form.value.cliente) {\n      params.cliente = this.form.value.cliente;\n    }\n\n    if (this.form.value.material) {\n      params.material = this.form.value.material;\n    }\n\n    if (this.form.value.vendedor) {\n      params.vendedor = this.form.value.vendedor;\n    }\n\n    if (this.form.value.situacao) {\n      params.situacao = this.form.value.situacao;\n    }\n\n    params.orderBy = this.orderBy;\n    params.orderType = this.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.totalItems = 0;\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.disponibilidadeMaterialService\n      .getSolicitacoes(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.pnotifyService.notice(response.mensagem);\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(status: string): string {\n    let borderClass: string;\n\n    if (status == 'Ativo') {\n      borderClass = 'border-success';\n    } else if (status == 'Inativo') {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant'\n    });\n  }\n\n  onEdit(data: any) {\n    if (data.situacao == 'Ativo') {\n      this.router.navigate(['../editar', data['codigo']], {\n        relativeTo: this.activatedRoute\n      });\n    }\n  }\n\n  onCancel(disponibilidadeMaterial: DisponibilidadeMaterial) {\n    if (disponibilidadeMaterial.situacao == 'Ativo') {\n      let confirm$ = this.confirmModalService.showConfirm(\n        'delete',\n        'Confirmar cancelamento',\n        'Deseja realmente prosseguir com o cancelamento da solicitação?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n      confirm$\n        .asObservable()\n        .pipe(\n          take(1),\n          switchMap(result =>\n            result\n              ? this.disponibilidadeMaterialService.deleteSolicitacao(\n                  disponibilidadeMaterial\n                )\n              : EMPTY\n          )\n        )\n        .subscribe({\n          next: (response: any) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.onFilter();\n              this.pnotifyService.success(response.mensagem);\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false\n            ) {\n              this.pnotifyService.error(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          error: (error: any) => {\n            this.pnotifyService.error();\n          }\n        });\n    }\n  }\n\n  onResetForm() {\n    this.form.reset();\n\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.form.controls.codDeposito.setValue(0);\n    this.form.controls.vendedor.setValue(\n      this.authService.getCurrentUser()['info']['idVendedor']\n    );\n    this.form.controls.situacao.setValue(0);\n    this.form.controls.registros.setValue(100);\n  }\n\n  handleError(message: string = null): void {\n    this.pnotifyService.error(message);\n    this.location.back();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialDisponibilidadeMaterialFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialDisponibilidadeMaterialListaComponent } from './lista/lista.component';\nimport { ComercialDisponibilidadeMaterialFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'solicitacoes',\n    component: ComercialDisponibilidadeMaterialListaComponent\n  },\n  {\n    path: 'novo/:codMaterial',\n    component: ComercialDisponibilidadeMaterialFormularioComponent,\n    resolve: {\n      detalhes: ComercialDisponibilidadeMaterialFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: 'editar/:codigo',\n    component: ComercialDisponibilidadeMaterialFormularioComponent,\n    resolve: {\n      detalhes: ComercialDisponibilidadeMaterialFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'solicitacoes',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialDisponibilidadeMaterialRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Disponibilidade de material\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onResetForm()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\"\\n    [disabled]=\\\"!form.valid\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div #scrollToFilter>\\n    <advanced-filter>\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"tipoData\\\">Buscar por</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"tipoData\\\"\\n              formControlName=\\\"tipoData\\\"\\n              [ngClass]=\\\"onFieldError('tipoData') + ' ' + onFieldRequired('tipoData')\\\">\\n              <option value=\\\"1\\\">Data de expiração</option>\\n              <option value=\\\"2\\\">Data da solicitação</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"dataInicial\\\">Data inicial</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"dataInicial\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataInicial\\\"\\n              [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired('dataInicial')\\\">\\n          </div>\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"dataFinal\\\">Data final</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"dataFinal\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataFinal\\\"\\n              [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired('dataFinal')\\\">\\n          </div>\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"codDeposito\\\">Depósito</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"depositos\\\"\\n              formControlName=\\\"codDeposito\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"codDeposito\\\"\\n              bindLabel=\\\"nomeDeposito\\\"\\n              bindValue=\\\"idDeposito\\\"\\n              [ngClass]=\\\"onFieldError('codDeposito') + ' ' + onFieldRequired('codDeposito')\\\">\\n            </ng-select>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\n            <label for=\\\"cliente\\\">Cliente</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"cliente\\\"\\n              formControlName=\\\"cliente\\\"\\n              (keydown.enter)=\\\"onFilter()\\\">\\n          </div>\\n          <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\n            <label for=\\\"material\\\">Material</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"material\\\"\\n              (keydown.enter)=\\\"onFilter()\\\">\\n          </div>\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"vendedor\\\">Vendedor</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"vendedores\\\"\\n              formControlName=\\\"vendedor\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"vendedor\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"id\\\"\\n              [ngClass]=\\\"onFieldError('vendedor') + ' ' + onFieldRequired('vendedor')\\\">\\n            </ng-select>\\n          </div>\\n          <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\n            <label for=\\\"situacao\\\">Situação</label>\\n            <ng-select\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"situacoes\\\"\\n              formControlName=\\\"situacao\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"situacao\\\"\\n              bindLabel=\\\"descricao\\\"\\n              bindValue=\\\"id\\\">\\n            </ng-select>\\n          </div>\\n          <div class=\\\"form-group col-lg-1 mb-lg-0\\\">\\n            <label for=\\\"registros\\\">Registros</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"registros\\\"\\n              formControlName=\\\"registros\\\">\\n              <option>25</option>\\n              <option>50</option>\\n              <option>75</option>\\n              <option>100</option>\\n            </select>\\n          </div>\\n        </div>\\n      </form>\\n    </advanced-filter>\\n    <subtitles\\n      [data]=\\\"subtitles\\\"\\n      [show]=\\\"dados.length > 0 && !dadosEmpty\\\">\\n    </subtitles>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\"></th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">\\n                <thead-sorter\\n                  value=\\\"Cód. material\\\"\\n                  [active]=\\\"orderBy == 'codMaterial'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('codMaterial')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\">\\n                <thead-sorter\\n                  value=\\\"Material\\\"\\n                  [active]=\\\"orderBy == 'nomeMaterial'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('nomeMaterial')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\">\\n                <thead-sorter\\n                  value=\\\"Cliente\\\"\\n                  [active]=\\\"orderBy == 'nomeCliente'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('nomeCliente')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Aceitável</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Ideal</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">\\n                <thead-sorter\\n                  value=\\\"Data inicial\\\"\\n                  [active]=\\\"orderBy == 'dataInicialParametrizacao'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('dataInicialParametrizacao')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">\\n                <thead-sorter\\n                  value=\\\"Data limite\\\"\\n                  [active]=\\\"orderBy == 'dataFinalParametrizacao'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('dataFinalParametrizacao')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let item of dadosPagination\\\">\\n              <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(item.situacao)\\\">\\n                <i class=\\\"text-warning fas fa-envelope\\\" *ngIf=\\\"item.codEmailEnviado == 1\\\" tooltip=\\\"E-mail enviado\\\" placement=\\\"right\\\"></i>\\n                <i class=\\\"text-black-50 far fa-envelope\\\" *ngIf=\\\"item.codEmailEnviado == 2\\\" tooltip=\\\"E-mail não enviado\\\" placement=\\\"right\\\"></i>\\n              </td>\\n              <td class=\\\"text-center\\\">{{ item.codMaterial }}</td>\\n              <td>{{ item.nomeMaterial }}</td>\\n              <td>{{ item.razaoSocial }}</td>\\n              <td class=\\\"text-center\\\">{{ item.qtdeMinima | number:'1.3-3' }} {{ item.unidadeMedida }}</td>\\n              <td class=\\\"text-center\\\">{{ item.qtdeMaxima | number:'1.3-3' }} {{ item.unidadeMedida }}</td>\\n              <td class=\\\"text-center\\\">{{ item.dataInicialParametrizacao | date: 'dd/MM/yyyy' }}</td>\\n              <td class=\\\"text-center\\\">{{ item.dataFinalParametrizacao | date: 'dd/MM/yyyy' }}</td>\\n              <td class=\\\"text-center\\\">\\n                <div *ngIf=\\\"item.situacao == 'Ativo'\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon-sm\\\"\\n                    (click)=\\\"onEdit(item)\\\"\\n                    tooltip=\\\"Editar\\\"\\n                    placement=\\\"left\\\"\\n                    container=\\\"body\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon-sm ml-3\\\"\\n                    (click)=\\\"onCancel(item)\\\"\\n                    tooltip=\\\"Cancelar\\\"\\n                    placement=\\\"left\\\"\\n                    container=\\\"body\\\">\\n                    <i class=\\\"fas fa-trash\\\"></i>\\n                  </button>\\n                </div>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n          <pagination\\n            [maxSize]=\\\"maxSize\\\"\\n            [(totalItems)]=\\\"totalItems\\\"\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n            [boundaryLinks]=\\\"true\\\"\\n            [(ngModel)]=\\\"currentPage\\\"\\n            previousText=\\\"&lsaquo;\\\"\\n            nextText=\\\"&rsaquo;\\\"\\n            firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\">\\n          </pagination>\\n        </div>\\n        <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"mt-2\\\" *ngIf=\\\"dadosEmpty\\\"></empty-result>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../comercial.service';\nimport { GenericService } from 'src/app/shared/services/requests/generic.service';\nimport { ComercialVendedoresService } from '../services/vendedores.service';\nimport { DisponibilidadeMaterial } from './models/disponibilidade-material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialDisponibilidadeMaterialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/disponibilidade-material`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private vendedoresService: ComercialVendedoresService,\n    private genericService: GenericService\n  ) {}\n\n  getFiltros() {\n    const depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\n    const vendedores = this.vendedoresService.getVendedores();\n    const situacoes = this.genericService.getSituacoes();\n\n    return forkJoin([depositos, vendedores, situacoes]).pipe(take(1));\n  }\n\n  getSolicitacoes(params: any) {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/solicitacoes`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getSolicitacao(id: number) {\n    return this.http.get(`${this.API}/solicitacao/${id}`).pipe(take(1));\n  }\n\n  private saveSolicitacao(record: any) {\n    return this.http\n      .post(`${this.API}/solicitacao/salvar`, record)\n      .pipe(take(1));\n  }\n\n  private updateSolicitacao(record: any) {\n    return this.http\n      .put(`${this.API}/solicitacao/atualizar`, record)\n      .pipe(take(1));\n  }\n\n  save(action: string, record: any) {\n    if (action == 'editar') {\n      return this.updateSolicitacao(record);\n    }\n\n    return this.saveSolicitacao(record);\n  }\n\n  deleteSolicitacao(disponibilidadeMaterial: DisponibilidadeMaterial) {\n    return this.http\n      .delete(\n        `${this.API}/solicitacao/excluir/${disponibilidadeMaterial.codigo}`\n      )\n      .pipe(take(1));\n  }\n}\n","import { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { registerLocaleData } from '@angular/common';\nimport localePt from '@angular/common/locales/pt';\n\nregisterLocaleData(localePt, 'pt-BR');\n\n// ngx-bootstrap\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialDisponibilidadeMaterialRoutingModule } from './disponibilidade-material-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialDisponibilidadeMaterialListaComponent } from './lista/lista.component';\nimport { ComercialDisponibilidadeMaterialFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialDisponibilidadeMaterialListaComponent,\n    ComercialDisponibilidadeMaterialFormularioComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialDisponibilidadeMaterialRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-BR' }]\n})\nexport class ComercialDisponibilidadeMaterialModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle()\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"submittingForm || !form.valid\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-5\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div *ngIf=\\\"material.descricao.length > 0\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <div class=\\\"mtc-title text-center mb-0\\\">{{ material.descricao }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\"><hr></div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codMaterial\\\">Código do material</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"codMaterial\\\"\\n              formControlName=\\\"codMaterial\\\"\\n              (input)=\\\"onInput()\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '', decimal: '', precision: 0 }\\\"\\n              [ngClass]=\\\"onFieldError('codMaterial') + ' ' + onFieldRequired('codMaterial')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codMaterial')\\\" message=\\\"Código do material é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codUsuarioRequisicao\\\">Vendedor</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"vendedores\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"codUsuarioRequisicao\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"id\\\"\\n              formControlName=\\\"codUsuarioRequisicao\\\"\\n              (change)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('codUsuarioRequisicao') + ' ' + onFieldRequired('codUsuarioRequisicao')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codUsuarioRequisicao')\\\" message=\\\"Vendedor é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codEmpresa\\\">Empresa</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"empresas\\\"\\n              formControlName=\\\"codEmpresa\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"codEmpresa\\\"\\n              bindLabel=\\\"nomeEmpresa\\\"\\n              bindValue=\\\"idEmpresa\\\"\\n              (change)=\\\"onInput() + ' ' + onChangeEmpresa($event.idEmpresa)\\\"\\n              [ngClass]=\\\"onFieldError('codEmpresa') + ' ' + onFieldRequired('codEmpresa')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codEmpresa')\\\" message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codDeposito\\\">Depósito</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"filteredDepositos\\\"\\n              formControlName=\\\"codDeposito\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"codDeposito\\\"\\n              bindLabel=\\\"nomeDeposito\\\"\\n              bindValue=\\\"idDeposito\\\"\\n              (change)=\\\"onInput() + ' ' + onChangeDeposito($event)\\\"\\n              [ngClass]=\\\"onFieldError('codDeposito') + ' ' + onFieldRequired('codDeposito')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codDeposito')\\\" message=\\\"Depósito é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"codCliente\\\">Cliente</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"clientes\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"codCliente\\\"\\n              bindLabel=\\\"codRazaoSocial\\\"\\n              bindValue=\\\"codCliente\\\"\\n              formControlName=\\\"codCliente\\\"\\n              (change)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('codCliente') + ' ' + onFieldRequired('codCliente')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codCliente')\\\" message=\\\"Cliente é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"qtdeMinima\\\">Quantidade mínima</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"qtdeMinima\\\"\\n              formControlName=\\\"qtdeMinima\\\"\\n              (input)=\\\"onInput()\\\"\\n              currencyMask [options]=\\\"currencyMaskOptions\\\"\\n              [ngClass]=\\\"onFieldError('qtdeMinima') + ' ' + onFieldRequired('qtdeMinima')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('qtdeMinima')\\\" message=\\\"Quantidade aceitável é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"qtdeMaxima\\\">Quantidade ideal</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"qtdeMaxima\\\"\\n              formControlName=\\\"qtdeMaxima\\\"\\n              (input)=\\\"onInput()\\\"\\n              currencyMask [options]=\\\"currencyMaskOptions\\\"\\n              [ngClass]=\\\"onFieldError('qtdeMaxima') + ' ' + onFieldRequired('qtdeMaxima')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('qtdeMaxima')\\\" message=\\\"Quantidade ideal é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"dataInicialParametrizacao\\\">Data inicial</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"dataInicialParametrizacao\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataInicialParametrizacao\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('dataInicialParametrizacao') + ' ' + onFieldRequired('dataInicialParametrizacao')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataInicialParametrizacao')\\\" message=\\\"Data inicial é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"dataFinalParametrizacao\\\">Data limite (expiração)</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"dataFinalParametrizacao\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataFinalParametrizacao\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('dataFinalParametrizacao') + ' ' + onFieldRequired('dataFinalParametrizacao')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataFinalParametrizacao')\\\" message=\\\"Data limite é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2Rpc3BvbmliaWxpZGFkZS1tYXRlcmlhbC9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";"],"sourceRoot":"webpack:///"}