{"version":3,"sources":["webpack:///src/app/modules/admin/perfis/cadastro/cadastro.component.html","webpack:///src/app/modules/admin/perfis/perfis.module.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/admin/perfis/cadastro/cadastro.component.ts","webpack:///src/app/modules/admin/perfis/perfis-routing.module.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/admin/perfis/lista/lista.component.html","webpack:///src/app/modules/admin/perfis/lista/lista.component.scss","webpack:///src/app/modules/admin/perfis/cadastro/cadastro.component.scss","webpack:///src/app/modules/admin/perfis/lista/lista.component.ts"],"names":["AdminPerfisModule","declarations","imports","forRoot","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","AdminPerfisCadastroComponent","service","formBuilder","pnotify","atividadesService","activatedRoute","router","confirmModalService","appTitle","loading","loadingNavBar","itemsPerPage","totalItems","currentPage","tableConfig","subtitleBorder","atividades","atividadesLoading","atividadesAssociadas","atividadesAssociadasLoading","tableConfigAtividadesAssociadas","fixedHeader","bodyHeight","hover","tableConfigAtividades","toggle","buildForm","onActivatedRoute","registrarAcesso","setBreadCrumb","subscribe","breadCrumbTree","descricao","routerLink","$activatedRouteSubscription","unsubscribe","params","snapshot","id","getPerfil","getAtividadesAssociadas","form","group","nome","required","sigla","situacao","formAtividades","buscarPor","pesquisa","field","onFieldInvalid","get","status","touched","formControl","controls","validator","validationResult","pipe","response","data","body","patchValue","value","postPerfil","success","navigate","relativeTo","error","getAtividades","filter","atividade","some","item","length","console","log","IN_STAT","IN_PAGI","material","checked","map","postAtividadesAssociadas","attividadeId","perfilId","showConfirm","_atividades","atividadeId","notice","confirmDelete","selector","template","routes","path","component","AdminPerfisRoutingModule","forChild","exports","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","AdminPerfisListaComponent","route","routerService","dateService","pagina","registrosPorPagina","t","getTime","queryParams","_response","getBase64UrlParams","getPerfis","getParams","noResult","event","setValue","page","setBase64UrlParams","_params","_obj","prop","convertToUrlDate","onFilter"],"mappings":"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","file":"perfis-perfis-module-es5.js","sourcesContent":["export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button \\r\\n    (click)=\\\"onSave()\\\"\\r\\n    [disabled] = \\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Guardar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <form\\r\\n        [formGroup]=\\\"form\\\"\\r\\n        class=\\\"d-flex flex-column\\\"\\r\\n        autocomplete=\\\"off\\\"\\r\\n        [hidden]=\\\"loading\\\"\\r\\n      >\\r\\n        <div class=\\\"mtc-title\\\">Dados do perfil</div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"nome\\\">Nome</label>\\r\\n            <input\\r\\n              id=\\\"nome\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"nome\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('nome')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome')\\\" message=\\\"Nome é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-6\\\">\\r\\n            <label for=\\\"sigla\\\">Sigla</label>\\r\\n            <input \\r\\n              id=\\\"sigla\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"sigla\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('sigla')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('sigla')\\\" message=\\\"Sigla é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"situacao\\\">Situação</label>\\r\\n            <select\\r\\n              name=\\\"situacao\\\"\\r\\n              id=\\\"situacao\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"situacao\\\"\\r\\n            >\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n              <option value=\\\"0\\\">Inativo</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <div class=\\\"row mb-4\\\">\\r\\n        <div class=\\\"col mb-3\\\">\\r\\n          <hr>\\r\\n        </div>\\r\\n      </div>\\r\\n      <message\\r\\n        *ngIf=\\\"atividadesAssociadasLoading\\\"\\r\\n        icon=\\\"fas fa-cog fa-spin\\\"\\r\\n        text=\\\"Estamos buscando informações do perfil selecionado...\\\">\\r\\n      </message>\\r\\n      <div [hidden]=\\\"atividadesAssociadasLoading\\\">\\r\\n        <div class=\\\"row mb-2 mt-4\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Atividades associados ao perfil</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                (click)=\\\"onRemoverAssociacao()\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n                <span>Limpar</span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!atividadesAssociadasLoading && atividadesAssociadas.length > 0\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <custom-table [config]=\\\"tableConfigAtividadesAssociadas\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th\\r\\n                    scope=\\\"col\\\"\\r\\n                    class=\\\"text-center\\\"\\r\\n                    style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"toggle?.atividadesAssociadas ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onToggleAll('atividadesAssociadas')\\\">\\r\\n                    </btn-icon>\\r\\n                  </th>\\r\\n                  <th scope=\\\"col\\\" width=\\\"20%\\\">Código</th>\\r\\n                  <th scope=\\\"col\\\" width=\\\"70%\\\">Descrição</th>\\r\\n                  <th scope=\\\"col\\\" width=\\\"5%\\\"></th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let item of atividadesAssociadas\\\" >\\r\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    </btn-icon>\\r\\n                  </td>\\r\\n                  <td width=\\\"20%\\\">{{ item.id }}</td>\\r\\n                  <td width=\\\"70%\\\">\\r\\n                   {{ item.nome | uppercase }}\\r\\n                  </td>\\r\\n                  <td class=\\\"text-center\\\" width=\\\"5%\\\">\\r\\n                    <btn-icon\\r\\n                      icon=\\\"fas fa-trash\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onRemoverAssociacao(item)\\\"\\r\\n                      *ngIf=\\\"!item.loading\\\"  \\r\\n                    >\\r\\n                    </btn-icon>\\r\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\r\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!atividadesLoading && atividadesAssociadas.length === 0\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-exchange-alt\\\"\\r\\n              text=\\\"Nenhuma associação encontrada\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <div class=\\\"row mb-2\\\">\\r\\n        <div class=\\\"col mt-auto\\\">\\r\\n          <div class=\\\"mtc-title mb-0\\\">Pesquisa de Atividades</div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-end\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n              (click)=\\\"getAtividades()\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formAtividades\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-4\\\">\\r\\n              <label for=\\\"buscarPor\\\">BUSCAR POR</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"buscarPor\\\"\\r\\n              >\\r\\n                <option value=\\\"id\\\">Id</option>\\r\\n                <option value=\\\"nome\\\" selected>Nome</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-8\\\">\\r\\n              <label>TERMO DE PESQUISA</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"pesquisa\\\"\\r\\n                  (keyup.enter)=\\\"getAtividades()\\\"\\r\\n                >\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <div *ngIf=\\\"atividades.length > 0 && !atividadesLoading\\\">\\r\\n        <div class=\\\"row mb-2\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Seleção de Atividades</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\r\\n                (click)=\\\"onAssociarAtividades()\\\"\\r\\n                [disabled]=\\\"!form.get('id')?.value\\\">\\r\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\r\\n                <span\\r\\n                  [tooltip]=\\\"!form.get('id')?.value ? 'Selecione um perfil':''\\\"\\r\\n                  container=\\\"body\\\"\\r\\n                  placement =\\\"left\\\">Associar\\r\\n                </span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <custom-table [config]=\\\"tableConfigAtividades\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th\\r\\n                    scope=\\\"col\\\"\\r\\n                    class=\\\"text-center\\\"\\r\\n                    style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"toggle?.atividades ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onToggleAll('atividades')\\\">\\r\\n                    </btn-icon>\\r\\n                  </th>\\r\\n                  <th scope=\\\"col\\\" style=\\\"width: 90%\\\">Atividades</th>\\r\\n                  <th style=\\\"width: 5%\\\"></th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let item of atividades\\\">\\r\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    </btn-icon>\\r\\n                  </td>\\r\\n                  <td\\r\\n                    class=\\\"hover\\\"\\r\\n                    style=\\\"width: 90%\\\"\\r\\n                    (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    ({{ item.moduloNome }}) ({{ item.id }}) {{ item.nome | uppercase }}\\r\\n                  </td>\\r\\n                  <td style=\\\"width: 5%\\\">\\r\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\r\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"atividadesLoading\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <message\\r\\n            icon=\\\"fas fa-cog fa-spin\\\"\\r\\n            text=\\\"Estamos pesquisando os atividades para você...\\\">\\r\\n          </message>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"(atividades.length == 0) && !atividadesLoading\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-box-open\\\"\\r\\n              text=\\\"Nenhuma informação encontrada\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminPerfisRoutingModule } from './perfis-routing.module';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule, ModalModule, PaginationModule, TabsModule, TimepickerModule, TooltipModule } from 'ngx-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { AdminPerfisListaComponent } from './lista/lista.component';\r\nimport { AdminPerfisCadastroComponent } from './cadastro/cadastro.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminPerfisListaComponent,\r\n    AdminPerfisCadastroComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminPerfisRoutingModule,\r\n    FormsModule,\r\n    ModalModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    ModuleWrapperModule,\r\n    NotFoundModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    PipesModule\r\n  ]\r\n})\r\nexport class AdminPerfisModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n//services\r\nimport { AdminPerfisService } from '../services/perfis.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AdminAtividadesService } from '../../atividades/services/atividades.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\n//rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n//interfaces\r\nimport { IAdimAtividade } from '../../atividades/models/atividade';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\nimport { event } from '../models/event';\r\nimport { Location } from '@angular/common';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n@Component({\r\n  selector: 'admin-perfis-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss']\r\n})\r\nexport class AdminPerfisCadastroComponent implements OnInit, OnDestroy {\r\n  \r\n  form: FormGroup;\r\n  formAtividades: FormGroup;\r\n\r\n  appTitle = \"Cadastros\";\r\n\r\n  loading = true;\r\n  loadingNavBar = false;\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n\r\n  atividades = [];\r\n  atividadesLoading = false;\r\n\r\n  atividadesAssociadas = [];\r\n  atividadesAssociadasLoading = false;\r\n\r\n  tableConfigAtividadesAssociadas: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n    hover: false,\r\n  };\r\n  \r\n  tableConfigAtividades: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  toggle = {\r\n    atividades: false,\r\n    atividadesAssociadas: false\r\n  };\r\n\r\n  constructor(\r\n    private service: AdminPerfisService,\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private atividadesService: AdminAtividadesService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.onActivatedRoute();\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/admin/home`,\r\n      },\r\n      {\r\n        descricao: 'Lista de perfis',\r\n        routerLink: `/admin/perfis`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.$activatedRouteSubscription?.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    \r\n    if (!params?.id){\r\n      this.loading = false;\r\n      return\r\n    }\r\n    \r\n    this.getPerfil(params?.id);\r\n    this.getAtividadesAssociadas({\"perfilId\": params?.id})\r\n  }\r\n\r\n  buildForm() {\r\n\r\n    this.form = this.formBuilder.group({\r\n      id: [null],\r\n      nome: [null, Validators.required],\r\n      sigla: [null, Validators.required],\r\n      situacao: [1]\r\n    });\r\n\r\n    this.formAtividades = this.formBuilder.group({\r\n      buscarPor: ['nome'],\r\n      pesquisa: [null, Validators.required]\r\n    });\r\n\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getPerfil(id) {\r\n    \r\n    this.loading = true;\r\n    \r\n    this.service\r\n      .getPerfil({id: id})\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if(response.status !== 200){\r\n            return\r\n          }\r\n          let data = response.body[\"data\"][0];\r\n          this.form.patchValue(data)\r\n        }\r\n      )\r\n  }\r\n\r\n  onSave() {\r\n    this.loadingNavBar = true;\r\n    \r\n    let params = this.form.value;\r\n\r\n    this.service\r\n      .postPerfil(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          this.pnotify.success();\r\n          this.router.navigate([\"./../\"], {\r\n            relativeTo: this.activatedRoute\r\n          });\r\n        },\r\n        error => {\r\n          let message = error.error?.message;\r\n          message ? this.pnotify.error(message) : this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getAtividades(){\r\n\r\n    const buscarPor = this.formAtividades.get('buscarPor')?.value;\r\n    const pesquisa = this.formAtividades.get('pesquisa')?.value;\r\n\r\n    let params = {};\r\n    \r\n    if(buscarPor){\r\n      params[buscarPor] = pesquisa ?? '';\r\n    }\r\n\r\n    this.toggle.atividades = false;\r\n\r\n    this.atividadesLoading = true\r\n\r\n    this.atividadesService\r\n      .getAtividades(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.atividadesLoading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          \r\n          if(response.status != 200){\r\n            this.atividades = [];\r\n            return;\r\n          }\r\n\r\n          let data = response.body['data'];\r\n          \r\n          this.atividades = data.filter(atividade => {\r\n            return !this.atividadesAssociadas.some(item => item.id == atividade.id)\r\n          })\r\n\r\n          this.tableConfigAtividades.fixedHeader = this.atividades.length > 9 ? true : false;\r\n         \r\n        },\r\n        error => {\r\n          this.atividades = [];\r\n          console.log(error)\r\n        }\r\n      )\r\n  }\r\n\r\n  getAtividadesAssociadas(params){\r\n\r\n    params.IN_STAT = '1';\r\n    params.IN_PAGI = '0';\r\n    /* params.ORDE_BY = 'ID_REFE_ERP' */\r\n\r\n    this.atividadesAssociadasLoading = true;\r\n\r\n    this.atividadesService\r\n      .getAtividades(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.atividadesAssociadasLoading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if(response.status !== 200){\r\n            return\r\n          }\r\n\r\n          this.atividadesAssociadas = response.body['data'];\r\n          this.tableConfigAtividadesAssociadas.fixedHeader = this.atividadesAssociadas.length > 9 ? true : false;\r\n        }\r\n      )\r\n  }\r\n\r\n  onAssociarAtividades(){\r\n    \r\n    let atividades = this.atividades.filter(material => material.checked);\r\n    this.toggle.atividades = false;\r\n\r\n    atividades.map(item => {\r\n      \r\n      item.loading = true;\r\n\r\n      if(this.atividadesAssociadas.some(atividade => atividade?.id === item.id)){\r\n        return\r\n      }\r\n\r\n      let params = {\r\n        \"atividadeId\": item?.id ?? \"\",\r\n        \"perfilId\": this.form.get(\"id\").value ?? \"\",\r\n        \"status\": \"1\"\r\n      }\r\n\r\n      this.service\r\n        .postAtividadesAssociadas(params)\r\n        .subscribe(\r\n          response => {\r\n            if(response.status === 200){\r\n              \r\n              this.atividadesAssociadas = [...this.atividadesAssociadas,\r\n                {\r\n                  ...item,\r\n                  checked: false,\r\n                  loading: false,\r\n                  attividadeId: item.id,\r\n                  perfilId: this.form.get(\"id\").value\r\n                }\r\n              ];\r\n              \r\n              this.atividades = this.atividades.filter(material => !material.checked)\r\n              this.tableConfigAtividadesAssociadas.fixedHeader = this.atividadesAssociadas.length > 9 ? true : false;\r\n\r\n            }\r\n          },\r\n          error => {\r\n            item.loading = false;\r\n          }\r\n        )\r\n    });\r\n  }\r\n\r\n  confirmDelete(): Observable<boolean> {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onRemoverAssociacao(atividade?){\r\n    \r\n    let _atividades = atividade ? [atividade] : this.atividadesAssociadas.filter(atividade => atividade.checked);\r\n    \r\n    let atividades = _atividades.map(item => { return {atividadeId: item.id, perfilId: this.form.get('id').value}})\r\n    \r\n    this.toggle.atividadesAssociadas = false;\r\n\r\n    if(atividades.length == 0){\r\n      this.pnotify.notice(\"Nenhuma atividade selecionada.\");\r\n      return\r\n    }\r\n\r\n    this.confirmDelete()\r\n      .subscribe(\r\n        (response: boolean) => {\r\n          \r\n          if(!response){\r\n            this.atividadesAssociadas.map(item => item.checked = false);\r\n            return;\r\n          }\r\n\r\n          atividades.map(item => {\r\n      \r\n            item[\"status\"] = '0';\r\n            item[\"loading\"] = true;\r\n\r\n            this.service\r\n              .postAtividadesAssociadas(item)\r\n              .pipe(finalize(() => {\r\n                item[\"loading\"] = false;\r\n              }))\r\n              .subscribe(\r\n                response => {\r\n                  \r\n                  if(response.status !== 200){\r\n                    return\r\n                  }\r\n                  \r\n                  this.atividadesAssociadas = this.atividadesAssociadas\r\n                    .filter(atividade => atividade.id != item.atividadeId);\r\n                  \r\n                  this.tableConfigAtividadesAssociadas.fixedHeader = this.atividadesAssociadas.length > 9 ? true : false;\r\n                }\r\n              )\r\n          \r\n          })\r\n          \r\n        }\r\n      )\r\n  }\r\n\r\n  onToggleAll(item: string){\r\n    this.toggle[item] = !this.toggle[item];\r\n    this[item].map(material => material.checked = this.toggle[item]);\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AdminPerfisCadastroComponent } from './cadastro/cadastro.component';\r\nimport { AdminPerfisListaComponent } from './lista/lista.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminPerfisListaComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: AdminPerfisCadastroComponent\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: AdminPerfisCadastroComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminPerfisRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Lista de Perfis\\\">\\r\\n  <button type=\\\"button\\\" (click)=\\\"onReset()\\\">Limpar</button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">Filtrar</button>\\r\\n  <button type=\\\"button\\\" [routerLink]=\\\"['../novo']\\\">Adicionar</button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <advanced-filter>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"nome\\\">Nome</label>\\r\\n          <input id=\\\"nome\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"DIGITE...\\\" formControlName=\\\"nome\\\" (keyup.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"matricula\\\">Sigla</label>\\r\\n          <input id=\\\"matricula\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"DIGITE...\\\" formControlName=\\\"sigla\\\" (keyup.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"situacao\\\">Situação</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            formControlName=\\\"situacao\\\"  \\r\\n            (change)=\\\"onFilter()\\\"\\r\\n          >\\r\\n            <option value=\\\"1\\\">Ativo</option>\\r\\n            <option value=\\\"0\\\">Inativo</option>\\r\\n            <option value=\\\"''\\\">Todos</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-1\\\">\\r\\n          <label for=\\\"registrosPorPagina\\\">Registros</label>\\r\\n          <select\\r\\n            class=\\\"custom-select form-control\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            formControlName=\\\"registrosPorPagina\\\"\\r\\n          >\\r\\n            <option value=\\\"10\\\">10</option>\\r\\n            <option value=\\\"25\\\">25</option>\\r\\n            <option value=\\\"50\\\">50</option>\\r\\n            <option value=\\\"100\\\">100</option>\\r\\n            <option value=\\\"250\\\">250</option>\\r\\n            <option value=\\\"500\\\">500</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"col-12 p-0\\\" [hidden]=\\\"loading || noResult\\\">\\r\\n    <div>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th style=\\\"width:100px\\\">Id</th>\\r\\n            <th>Nome</th>\\r\\n            <th>Sigla</th>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n            <!-- <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th> -->\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of data; let i = index\\\">\\r\\n            <td class=\\\"text-truncate\\\" [ngClass]=\\\"item.situacao == 1 ? 'border-success' : 'border-danger'\\\">\\r\\n              {{ item.id | number:'6.0-0' }}\\r\\n            </td>\\r\\n            <td>\\r\\n              {{ item.nome }}\\r\\n            </td>\\r\\n            <td> {{ item.sigla }} </td>\\r\\n            <td class=\\\"align-middle\\\">\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Editar\\\"\\r\\n                container=\\\"body\\\"\\r\\n              >\\r\\n                <a [routerLink]=\\\"['./', item.id]\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </a>\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div>\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \".fa-check {\\n  color: green;\\n}\\n\\n.fa-ban {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hZG1pbi9wZXJmaXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxVQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2FkbWluL3BlcmZpcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mYS1jaGVjayB7XHJcbiAgY29sb3I6IGdyZWVuO1xyXG59XHJcblxyXG4uZmEtYmFuIHtcclxuICBjb2xvcjogcmVkO1xyXG59Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vcGVyZmlzL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIn0= */\";","//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n//rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n//services\r\nimport { AdminPerfisService } from '../services/perfis.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\n//interfaces\r\nimport { IAdminPeril } from '../models/perfil';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n@Component({\r\n  selector: 'admin-perfis-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class AdminPerfisListaComponent implements OnInit, OnDestroy {\r\n  \r\n  data: IAdminPeril[];\r\n  form: FormGroup;\r\n\r\n  loading = true;\r\n  loadingNavBar = false;\r\n  noResult: boolean;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/admin/home'\r\n    },\r\n    {\r\n      descricao: 'Lista de perfis'\r\n    }\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  constructor(\r\n    private service: AdminPerfisService,\r\n    private pnotify: PNotifyService,\r\n    private route: Router,\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private atividadesService: AtividadesService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      nome: [null],\r\n      sigla: [null],\r\n      pagina: [1],\r\n      registrosPorPagina: [this.itemsPerPage],\r\n      situacao: ['1'],\r\n      t: [(new Date()).getTime()]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registrarAcesso();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(response => {\r\n      const _response = this.routerService.getBase64UrlParams(response);\r\n      \r\n      if(_response?.registrosPorPagina){\r\n        this.itemsPerPage = _response?.registrosPorPagina;\r\n      }\r\n      \r\n      this.form.patchValue(_response);\r\n      this.getPerfis(this.getParams());\r\n    });\r\n  }\r\n\r\n  getPerfis(params?) {\r\n\r\n    this.itemsPerPage = this.form.get(\"registrosPorPagina\").value;\r\n\r\n    if (!this.loading) {\r\n      this.loadingNavBar = true;\r\n    }\r\n\r\n    this.service\r\n      .getPerfis(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if (response.status !== 200) {\r\n            this.data = [];\r\n            this.noResult = true;\r\n            this.pnotify.notice('Não houve retorno para sua consulta');\r\n            return\r\n          }\r\n          this.noResult = false;\r\n          this.data = response.body['data'];\r\n          this.totalItems = response.body['total'];\r\n        },\r\n        error => {\r\n          this.data = [];\r\n          this.noResult = true;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n  \r\n  onPageChanged(event) {\r\n    this.form.get('pagina').setValue(event.page);\r\n    this.form.get('t').setValue((new Date).getTime());\r\n    this.route.navigate([], {\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\r\n    })\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get(\"t\").setValue((new Date()).getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\r\n    })\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  onReset() {\r\n    this.form.patchValue({\r\n      nome: null,\r\n      sigla: null,\r\n      pagina: 1,\r\n      registrosPorPagina: this.itemsPerPage,\r\n      situacao: '1',\r\n      time: [(new Date()).getTime()]\r\n    })\r\n    this.onFilter();\r\n  }\r\n}\r\n"]}