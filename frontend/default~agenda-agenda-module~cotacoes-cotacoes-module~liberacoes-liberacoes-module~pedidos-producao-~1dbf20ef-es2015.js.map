{"version":3,"sources":["./src/app/modules/comercial/estoque/estoque.service.ts","./src/app/modules/comercial/ciclo-vendas/cotacoes/cotacoes.service.ts"],"names":[],"mappings":"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","file":"default~agenda-agenda-module~cotacoes-cotacoes-module~liberacoes-liberacoes-module~pedidos-producao-~1dbf20ef-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialEstoqueService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/estoque`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) { }\r\n\r\n  getFiltros(): Observable<Object | JsonResponse> {\r\n    /* Almacen */\r\n    let almacenes = this.comercialService.getAlmacen();\r\n    /* Familia */\r\n    let classes = this.comercialService.getClasses(null);\r\n    let depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\r\n\r\n    let sucursales = this.comercialService.getEscritorios();\r\n    let empresas = this.tidSoftwareService.getEmpresas('estoques');\r\n    let linhas = this.tidSoftwareService.getLinhas();\r\n\r\n\r\n    return forkJoin([almacenes, classes, depositos, sucursales, empresas, linhas]).pipe(\r\n      take(1),\r\n      retry(2)\r\n    );\r\n  }\r\n\r\n  getEstoqueAtual(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/estoque-atual`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getOutrasUnidades(id: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/outras-unidades/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getPedidosCompra(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/pedidos-compra/${params.idMaterial}/${params.idEmpresa}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getComprometido(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoque-comprometido/${params.idMaterial}/${params.idEmpresa}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLote(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/lote/${params.idMaterial}/${params.idEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getEstoqueSuspenso(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoque-suspenso/${params.idMaterial}/${params.idEmpresa}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getStockComprometido(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoquecomprometido/${params.idMaterial}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getStockSuspeso(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoquesuspenso/${params.idMaterial}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../../tid-software/tid-software.service';\r\nimport { ComercialEstoqueService } from '../../estoque/estoque.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCicloVendasCotacoesService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/ciclo-vendas/cotacoes`;\r\n  private readonly API2 = `http://23.254.204.187/api/comercial/ciclo-vendas/autorizaciones`;\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService,\r\n    private estoqueService: ComercialEstoqueService\r\n  ) { }\r\n\r\n  getIdOferta(){\r\n    return this.http\r\n      .get(`${this.API}/oferta_id`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPermissoesAcesso(): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/permissoes-acesso`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCotacoes(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n    getOfertas(params: any): Observable<Object | JsonResponse> {\r\n      let httpParams = new HttpParams();\r\n      return this.http\r\n        .get(`${this.API}/lista_cotizacion`, {\r\n          params: params,\r\n        })\r\n        .pipe(take(1), retry(2));\r\n    }\r\n\r\n\r\n  getDetalleOferta(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n    return this.http\r\n      .get(`${this.API}/oferta_detalle`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhesCotacoes(\r\n    codEmpresa: number,\r\n    nrPedido: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codEmpresa}/${nrPedido}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhesPedidos(\r\n    nrPedido: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${nrPedido}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriaisCotacao(\r\n    codEmpresa: number,\r\n    nrPedido: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/materiais/detalhes/${codEmpresa}/${nrPedido}`)\r\n\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSituacaoLiberacao(params: any): Observable<Object | JsonResponse> {\r\n\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/situacao-liberacao`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postTransfereFaturamento(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/transfere-faturamento`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  postTrocarCliente(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/trocar/cliente`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postDuplicarProposta(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/duplicar-proposta`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postDesdobrarProposta(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/desdobrar-proposta`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postTrocarEmpresa(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/trocar/empresa`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getImprimirCotacao(nrPedido: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/imprimir-cotacao/${nrPedido}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getImprimirSeparacao(nrPedido: number, codEmpresa: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/imprimir-separacao/${nrPedido}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postEmailCotacao(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/email-cotacao`, params)\r\n      .pipe(take(1)\r\n        // ,\r\n        // retry(2)\r\n      );\r\n  }\r\n\r\n  getReservarIdCotacao(params?): Observable<Object | JsonResponse> {\r\n    return this.http.get(`${this.API}/reservar`, {\r\n      params: params\r\n    }).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCotacao(\r\n    codCotacao: number,\r\n    idEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/${codCotacao}/${idEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCotacaoFilterValues(): Observable<Object | JsonResponse> {\r\n    const linhas = this.tidSoftwareService.getLinhas();\r\n    const classes = this.comercialService.getClasses(null);\r\n\r\n    return forkJoin([linhas, classes]);\r\n  }\r\n\r\n  getMateriais(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEstoqueDetalhes(params: any): Observable<Object | JsonResponse> {\r\n    return this.estoqueService.getEstoqueAtual(params);\r\n  }\r\n\r\n  getEstoqueDepositos(\r\n    codDeposito: number,\r\n    codMaterial: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiais/estoque-depositos/${codMaterial}/${codDeposito}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  descuentoCliente(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/descuento_cliente`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMateriaisCombo(\r\n    codEmpresa: number,\r\n    codMaterial: number,\r\n    codCliente,\r\n    codEndereco,\r\n    codFormaPagamento,\r\n    freteConta\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/materiais/combo/${codEmpresa}/${codMaterial}`, {\r\n        params: {\r\n          codCliente: codCliente,\r\n          codEndereco: codEndereco,\r\n          codFormaPagamento: codFormaPagamento,\r\n          freteConta: freteConta\r\n        }\r\n\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postVendasGerais(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/materiais/relacionados/vendas`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postVendasCliente(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/materiais/relacionados/cliente`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postMateriaisRelacionados(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/materiais/relacionados`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postMaterialesRelacionados(params: any): Observable<Object | JsonResponse> {\r\n    console.log(params)\r\n    return this.http\r\n    .post(`${this.API}/materiales/relacionados`, params)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getFichaCadastralMaterial(\r\n    codMaterial: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/material/ficha-cadastral/${codMaterial}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSimilaridadeMaterial(\r\n    codEmpresa: number,\r\n    codMaterial: number,\r\n    codCliente,\r\n    codEndereco,\r\n    codFormaPagamento,\r\n    freteConta\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/material/similaridade/${codEmpresa}/${codMaterial}`,\r\n        {\r\n          params: {\r\n            codEndereco: codEndereco,\r\n            codCliente: codCliente,\r\n            codFormaPagamento: codFormaPagamento,\r\n            freteConta: freteConta\r\n          }\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTipoCalculoMaterial(\r\n    codMaterial: number,\r\n    codFormaPagamento\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/material/tipo-calculo/${codMaterial}`, {\r\n        params: {\r\n          codFormaPagamento: codFormaPagamento\r\n        }\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCalculoMaterial(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/material/calculo`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getHistoricoCompras(params: any): Observable<Object | JsonResponse> {\r\n\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/historico-compras`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarDuplicatas(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/duplicatas/gerar`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postAlterarDuplicatas(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/duplicatas/alterar`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDuplicatas(params: any): Observable<Object | JsonResponse> {\r\n\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/duplicatas/consulta`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteMaterialCotacao(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .delete(`${this.API}/materiais/excluir`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getHistoricoExclusao(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/historico-exclusao`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCotacao(params: any): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, params).pipe(take(1), retry(2));\r\n  }\r\n  postCotizacion(params: any): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/guardar`, params).pipe(take(1), retry(2));\r\n  }\r\n\r\n  putCotacao(params: any): Observable<Object | JsonResponse> {\r\n    return this.http.put(`${this.API}/atualizar`, params).pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCotacaoPerdida(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/perdida/salvar`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getComissaoCotacao(\r\n    codCotacao: number,\r\n    codEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/comissao/${codCotacao}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getProgressoCotacao(\r\n    codCotacao: number,\r\n    codEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/progresso/${codCotacao}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getValidadeDuplicata(\r\n    codCotacao: number,\r\n    codEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/validade-duplicata/${codCotacao}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLoteMaterial(\r\n    codMaterial: number,\r\n    codEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/material/lote/${codMaterial}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  autorizaciones(data: any): Observable<Object>{\r\n    return this.http\r\n      .post(`${this.API2}/registrar`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}