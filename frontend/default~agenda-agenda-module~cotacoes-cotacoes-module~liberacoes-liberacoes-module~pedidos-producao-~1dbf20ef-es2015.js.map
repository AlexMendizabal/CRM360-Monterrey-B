{"version":3,"sources":["./src/app/modules/comercial/comercial.service.ts","./src/app/modules/comercial/estoque/estoque.service.ts","./src/app/modules/comercial/ciclo-vendas/cotacoes/cotacoes.service.ts"],"names":[],"mappings":"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","file":"default~agenda-agenda-module~cotacoes-cotacoes-module~liberacoes-liberacoes-module~pedidos-producao-~1dbf20ef-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../comercial.service';\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialEstoqueService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/estoque`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getFiltros(): Observable<Object | JsonResponse> {\n    let empresas = this.tidSoftwareService.getEmpresas('estoques');\n    let depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\n    let linhas = this.tidSoftwareService.getLinhas();\n    let classes = this.comercialService.getClasses(null);\n\n    return forkJoin([empresas, depositos, linhas, classes]).pipe(\n      take(1),\n      retry(2)\n    );\n  }\n\n  getEstoqueAtual(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/estoque-atual`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getOutrasUnidades(id: any): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/outras-unidades/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getPedidosCompra(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .get(\n        `${this.API}/pedidos-compra/${params.idMaterial}/${params.idEmpresa}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getComprometido(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .get(\n        `${this.API}/estoque-comprometido/${params.idMaterial}/${params.idEmpresa}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getLote(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/lote/${params.idMaterial}/${params.idEmpresa}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getEstoqueSuspenso(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .get(\n        `${this.API}/estoque-suspenso/${params.idMaterial}/${params.idEmpresa}`\n      )\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { Observable, forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../../comercial.service';\nimport { ComercialTidSoftwareService } from '../../tid-software/tid-software.service';\nimport { ComercialEstoqueService } from '../../estoque/estoque.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCicloVendasCotacoesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/ciclo-vendas/cotacoes`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService,\n    private estoqueService: ComercialEstoqueService\n  ) {}\n\n  getPermissoesAcesso(): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/permissoes-acesso`)\n      .pipe(take(1), retry(2));\n  }\n\n  getCotacoes(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhesCotacoes(\n    codEmpresa: number,\n    nrPedido: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/detalhes/${codEmpresa}/${nrPedido}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhesPedidos(\n    nrPedido: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/detalhes/${nrPedido}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriaisCotacao(\n    codEmpresa: number,\n    nrPedido: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/materiais/detalhes/${codEmpresa}/${nrPedido}`)\n\n      .pipe(take(1), retry(2));\n  }\n\n  getSituacaoLiberacao(params: any ): Observable<Object | JsonResponse> {\n\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/situacao-liberacao`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  postTransfereFaturamento(params: any ): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/transfere-faturamento`, params)\n      .pipe(take(1), retry(2));\n  }\n\n\n  postTrocarCliente(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/trocar/cliente`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  postDuplicarProposta(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/duplicar-proposta`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  postDesdobrarProposta(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/desdobrar-proposta`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  postTrocarEmpresa(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/trocar/empresa`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  getImprimirCotacao(nrPedido: number, codEmpresa: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/imprimir-cotacao/${nrPedido}/${codEmpresa}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getImprimirSeparacao(nrPedido: number, codEmpresa: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/imprimir-separacao/${nrPedido}/${codEmpresa}`)\n      .pipe(take(1), retry(2));\n  }\n\n  postEmailCotacao(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/email-cotacao`, params)\n      .pipe(take(1)\n      // , \n      // retry(2)\n      );\n  }\n\n  getReservarIdCotacao(params?): Observable<Object | JsonResponse> {\n    return this.http.get(`${this.API}/reservar`,{\n      params: params\n    }).pipe(take(1), retry(2));\n  }\n\n  getCotacao(\n    codCotacao: number,\n    idEmpresa: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/${codCotacao}/${idEmpresa}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getCotacaoFilterValues(): Observable<Object | JsonResponse> {\n    const linhas = this.tidSoftwareService.getLinhas();\n    const classes = this.comercialService.getClasses(null);\n\n    return forkJoin([linhas, classes]);\n  }\n\n  getMateriais(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getEstoqueDetalhes(params: any): Observable<Object | JsonResponse> {\n    return this.estoqueService.getEstoqueAtual(params);\n  }\n\n  getEstoqueDepositos(\n    codDeposito: number,\n    codMaterial: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(\n        `${this.API}/materiais/estoque-depositos/${codMaterial}/${codDeposito}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriaisCombo(\n    codEmpresa: number,\n    codMaterial: number,\n    codCliente,\n    codEndereco,\n    codFormaPagamento,\n    freteConta\n    ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/materiais/combo/${codEmpresa}/${codMaterial}`,{\n        params:{\n          codCliente:codCliente,\n          codEndereco: codEndereco,\n          codFormaPagamento: codFormaPagamento,\n          freteConta: freteConta\n        }\n    \n      })\n      .pipe(take(1), retry(2));\n  }\n\n  postVendasGerais(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/materiais/relacionados/vendas`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  postVendasCliente(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/materiais/relacionados/cliente`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  postMateriaisRelacionados(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/materiais/relacionados`, params)\n      .pipe(take(1), retry(2));\n  }\n\n\n  getFichaCadastralMaterial(\n    codMaterial: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/material/ficha-cadastral/${codMaterial}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getSimilaridadeMaterial(\n    codEmpresa: number,\n    codMaterial: number,\n    codCliente,\n    codEndereco,\n    codFormaPagamento,\n    freteConta\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/material/similaridade/${codEmpresa}/${codMaterial}`,\n      {\n        params:{\n          codEndereco:codEndereco,\n          codCliente:codCliente,\n          codFormaPagamento:codFormaPagamento,\n          freteConta: freteConta\n        }\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getTipoCalculoMaterial(\n    codMaterial: number,\n    codFormaPagamento\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/material/tipo-calculo/${codMaterial}`,{\n        params: {\n          codFormaPagamento:codFormaPagamento\n        }\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  postCalculoMaterial(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/material/calculo`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  getHistoricoCompras(params: any ): Observable<Object | JsonResponse> {\n\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/historico-compras`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarDuplicatas(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/duplicatas/gerar`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  postAlterarDuplicatas(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/duplicatas/alterar`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  getDuplicatas (params: any ): Observable<Object | JsonResponse> {\n\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/duplicatas/consulta`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  deleteMaterialCotacao(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .delete(`${this.API}/materiais/excluir`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getHistoricoExclusao(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/historico-exclusao`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  postCotacao(params: any): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/salvar`, params).pipe(take(1), retry(2));\n  }\n\n  putCotacao(params: any): Observable<Object | JsonResponse> {\n    return this.http.put(`${this.API}/atualizar`, params).pipe(take(1), retry(2));\n  }\n\n  postCotacaoPerdida(params: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/perdida/salvar`, params)\n      .pipe(take(1), retry(2));\n  }\n\n  getComissaoCotacao(\n    codCotacao: number,\n    codEmpresa: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/comissao/${codCotacao}/${codEmpresa}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getProgressoCotacao(\n    codCotacao: number,\n    codEmpresa: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/progresso/${codCotacao}/${codEmpresa}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getValidadeDuplicata(\n    codCotacao: number,\n    codEmpresa: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/validade-duplicata/${codCotacao}/${codEmpresa}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLoteMaterial(\n    codMaterial: number,\n    codEmpresa: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/material/lote/${codMaterial}/${codEmpresa}`)\n      .pipe(take(1), retry(2));\n  }\n\n  \n}\n"],"sourceRoot":"webpack:///"}