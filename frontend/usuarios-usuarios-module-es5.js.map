{"version":3,"sources":["webpack:///src/app/modules/admin/usuarios/lista/lista.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/admin/usuarios/services/usuarios.service.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/admin/usuarios/lista/lista.component.scss","webpack:///src/app/modules/admin/usuarios/cadastro/cadastro.component.html","webpack:///src/app/modules/admin/usuarios/lista/lista.component.html","webpack:///src/app/modules/admin/usuarios/cadastro/cadastro.component.ts","webpack:///src/app/modules/admin/usuarios/usuarios-routing.module.ts","webpack:///src/app/modules/admin/usuarios/cadastro/cadastro.component.scss","webpack:///src/app/modules/admin/usuarios/usuarios.module.ts"],"names":["AdminUsuariosListaComponent","pnotify","service","route","formBuilder","activatedRoute","atividadesService","routerService","perfilService","dateService","appTitle","loading","loadingNavBar","loadingSincronizarAd","usuarios","perfis","loadingPerfis","data","itemsPerPage","totalItems","currentPage","numberOfItems","breadCrumbTree","descricao","routerLink","buildForm","setBreadCrumb","onActivatedRoute","getPerfis","inPagina","situacao","$activatedRouteSubscription","unsubscribe","queryParams","subscribe","response","_response","getBase64UrlParams","registrosPorPagina","form","patchValue","getData","getParams","get","setValue","Date","getTime","navigate","relativeTo","setBase64UrlParams","group","id","nome","matricula","perfilId","pagina","t","event","page","_params","_obj","value","prop","convertToUrlDate","reset","onFilter","params","getUsuarios","pipe","status","noResult","notice","body","error","selector","template","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","AdminUsuariosService","http","API","usuario","observe","post","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","AdminUsuariosCadastroComponent","router","modulosService","confirmModalService","localeService","modulos","perfisLoading","perfisAssociados","perfisAssociadosLoading","tableConfigPerfisAssociados","subtitleBorder","tableConfigPerfis","fixedHeader","bodyHeight","toggle","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getModulos","snapshot","getUsuario","getPerfisAssociados","required","apelido","pessoaTipo","departamento","empresa","cargo","dataAniversario","email","telefoneComercial","telefoneCelular","ramal","senha","moduloId","formPerfis","buscarPor","pesquisa","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","postUsuario","success","length","filter","perfil","some","item","console","log","material","checked","map","atividade","postPerfilAssociado","attividadeId","showConfirm","_perfis","usuarioId","confirmDelete","routes","path","component","AdminUsuariosRoutingModule","imports","forChild","exports","AdminUsuariosModule","declarations","forRoot"],"mappings":"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","file":"usuarios-usuarios-module-es5.js","sourcesContent":["//angular\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n//rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n//service\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AdminUsuariosService } from './../services/usuarios.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\n//interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { IAdminPeril } from '../../perfis/models/perfil';\nimport { AdminPerfisService } from '../../perfis/services/perfis.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n@Component({\n  selector: 'admin-usuarios-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class AdminUsuariosListaComponent implements OnInit {\n\n  appTitle = \"Lista de usuarios\";\n\n  form: FormGroup;\n\n  loading = true;\n  loadingNavBar = false;\n  loadingSincronizarAd = false;\n  \n  noResult: boolean;\n\n  usuarios: Array<any> = [];\n  perfis: IAdminPeril[] = [];\n  loadingPerfis = true;\n  data = [];\n\n  /* Pagination */\n  itemsPerPage = 10;\n  totalItems = 10;\n  currentPage = 1;\n  numberOfItems = [10, 25, 50, 100, 250, 500];\n  /* Pagination */\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/admin/home'\n    },\n    {\n      descricao: 'Lista de usuarios'\n    }\n  ];\n\n  $activatedRouteSubscription: Subscription;\n\n  constructor(\n    private pnotify: PNotifyService,\n    private service: AdminUsuariosService,\n    private route: Router,\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private routerService: RouterService,\n    private perfilService: AdminPerfisService,\n    private dateService: DateService\n  ) {\n  }\n\n  ngOnInit() {\n\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n    this.getPerfis({inPagina: 0, situacao: 1});\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription?.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        \n        if(_response?.registrosPorPagina){\n          this.itemsPerPage = _response?.registrosPorPagina;\n        }\n\n        this.form.patchValue(_response);\n        this.getData(this.getParams());\n      }\n    );\n  }\n\n  onFilter() {\n    this.form.get('t').setValue(new Date().getTime());\n    this.form.get('pagina').setValue(1);\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      id: [null],\n      nome: [null],\n      matricula: [null],\n      perfilId: [null],\n      situacao: [null],\n      registrosPorPagina: [100],\n      pagina: [1],\n      t:[null]\n    })\n  }\n\n  setBreadCrumb() {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/admin/home`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  onPageChanged(event) {\n    this.form.get('pagina').setValue(event.page);\n    this.form.get('t').setValue((new Date).getTime());\n    this.route.navigate([], {\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\n    })\n  }\n\n  getParams() {\n\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  onReset() {\n    this.form.reset();\n    this.onFilter();\n  }\n\n  getData(params?){\n\n    if (!this.loading) {\n      this.loadingNavBar = true;\n    }\n\n    this.service\n      .getUsuarios(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        response => {\n          if (response.status !== 200) {\n            this.data = [];\n            this.noResult = true;\n            this.pnotify.notice('No hubo devolución de tu consulta');\n            return\n          }\n          this.noResult = false;\n          this.data = response.body['data'];\n          this.totalItems = response.body['total'];\n        },\n        error => {\n          this.data = [];\n          this.noResult = true;\n          this.pnotify.error();\n        }\n      );\n  }\n\n  getPerfis(params?) {\n\n    this.loadingPerfis = true;\n\n    this.perfilService\n      .getPerfis(params)\n      .pipe(\n        finalize(() => {\n          this.loadingPerfis = false;\n        })\n      )\n      .subscribe(\n        response => {\n\n          if(response.status != 200){\n            this.pnotify.error(\"Erro ao carregar perfis.\");\n            return\n          }\n\n          this.perfis = response.body['data'];\n          \n        },\n        error => {\n          this.pnotify.error(\"Erro ao carregar perfis.\");\n        }\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminUsuariosService {\n\n  private readonly API = environment.API;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getUsuarios(usuario = {}) {\n    return this.http.get(`${this.API}/core/usuarios`, {\n      params: usuario,\n      observe: \"response\"\n    })\n  }\n\n  postUsuario(usuario) {\n    return this.http.post(`${this.API}/core/usuarios`,\n      usuario,\n      { observe: \"response\" }\n    );\n  }\n\n  postPerfilAssociado(usuario) {\n    return this.http.post(`${this.API}/core/usuarios/perfis`,\n      usuario,\n      { observe: \"response\" }\n    );\n  }\n\n  sincronizaAD() {\n    return this.http.get(`${this.API}/core/usuarios/ad/sincronismo`, {\n      observe: \"response\"\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vdXN1YXJpb3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button \\n    (click)=\\\"onSave()\\\"\\n    [disabled] = \\\"form.status == 'INVALID'\\\"\\n    >\\n    Guardar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form\\n        [formGroup]=\\\"form\\\"\\n        class=\\\"d-flex flex-column\\\"\\n        autocomplete=\\\"off\\\"\\n        [hidden]=\\\"loading\\\"\\n      >\\n        <div class=\\\"mtc-title\\\">Datos del Usuario</div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-2\\\">\\n            <label for=\\\"matricula\\\">Registro</label>\\n            <input\\n              id=\\\"matricula\\\"\\n              type=\\\"number\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"matricula\\\"\\n              placeholder=\\\"Ingresse...\\\"\\n              [ngClass]=\\\"onFieldRequired('matricula')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('matricula')\\\" message=\\\"Registro es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"nome\\\">Nombre</label>\\n            <input\\n              id=\\\"nome\\\"\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"nome\\\"\\n              placeholder=\\\"Ingresse...\\\"\\n              [ngClass]=\\\"onFieldRequired('nome')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome')\\\" message=\\\"Nombre es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"apelido\\\">Abreviatura del Nombre</label>\\n            <input \\n              id=\\\"apelido\\\"\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"apelido\\\"\\n              placeholder=\\\"Ingresse...\\\"\\n              [ngClass]=\\\"onFieldRequired('apelido')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('apelido')\\\" message=\\\"Apellido es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"email\\\">Correo Electrónico</label>\\n            <input \\n              id=\\\"email\\\"\\n              type=\\\"email\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"email\\\"\\n              placeholder=\\\"email@email.com\\\"\\n              [ngClass]=\\\"onFieldRequired('email')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email')\\\" message=\\\"Correo Electrónico es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"pessoaTipo\\\">Tipo de persona</label>\\n            <select\\n              name=\\\"pessoaTipo\\\"\\n              id=\\\"pessoaTipo\\\"\\n              class=\\\"form-control\\\"\\n              [ngClass]=\\\"onFieldRequired('pessoaTipo')\\\"\\n              formControlName=\\\"pessoaTipo\\\"\\n            >\\n              <option value=\\\"F\\\">Física</option>\\n              <option value=\\\"J\\\">Jurídica</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group col-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"dataAniversario\\\">Fecha de cumpleaños</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\">\\n                    <i class=\\\"far fa-calendar-alt\\\"></i>\\n                  </span>\\n                </div>\\n                <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataAniversario\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                [bsConfig]=\\\"bsConfig\\\"\\n                placeholder=\\\"Ingrese...\\\"\\n                formControlName=\\\"dataAniversario\\\"\\n              />\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"empresa\\\">Compañia</label>\\n            <input \\n              id=\\\"empresa\\\"\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"empresa\\\"\\n              placeholder=\\\"Ingrese...\\\"\\n              [ngClass]=\\\"onFieldRequired('empresa')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('empresa')\\\" message=\\\"Compañia es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"cargo\\\">Puesto</label>\\n            <input \\n              id=\\\"cargo\\\"\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"cargo\\\"\\n              placeholder=\\\"Ingrese...\\\"\\n              [ngClass]=\\\"onFieldRequired('cargo')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cargo')\\\" message=\\\"Puesto es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"departamento\\\">Departamento</label>\\n            <input \\n              id=\\\"departamento\\\"\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"departamento\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldRequired('departamento')\\\"\\n            >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('departamento')\\\" message=\\\"Departamento es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"senha\\\">Contraseña</label>\\n            <input \\n              id=\\\"senha\\\"\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"senha\\\"\\n              placeholder=\\\"Ingresse...\\\"\\n              style=\\\"text-transform: none !important;\\\"\\n            >\\n          </div>\\n          <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"modulo\\\">Modulo</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"modulos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              labelForId=\\\"modulo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"id\\\"\\n              id=\\\"modulo\\\"\\n              formControlName=\\\"moduloId\\\"\\n              [ngClass]=\\\"onFieldRequired('moduloId')\\\"\\n            >\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('moduloId')\\\" message=\\\"Modulo es obligatorio.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-6\\\">\\n            <label for=\\\"situacao\\\">Situación</label>\\n            <select\\n              name=\\\"situacao\\\"\\n              id=\\\"situacao\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"situacao\\\"\\n            >\\n              <option value=\\\"1\\\">Activo</option>\\n              <option value=\\\"0\\\">Inactivo</option>\\n            </select>\\n          </div>\\n        </div>\\n      </form>\\n      <div class=\\\"row mb-4\\\">\\n        <div class=\\\"col mb-3\\\">\\n          <hr>\\n        </div>\\n      </div>\\n      <message\\n        *ngIf=\\\"perfisAssociadosLoading\\\"\\n        icon=\\\"fas fa-cog fa-spin\\\"\\n        text=\\\"Buscamos información del perfil seleccionado...\\\">\\n      </message>\\n      <div [hidden]=\\\"perfisAssociadosLoading\\\">\\n        <div class=\\\"row mb-2 mt-4\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Perfiles asociados al perfil</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-danger\\\"\\n                (click)=\\\"onRemoverAssociacao()\\\">\\n                <i class=\\\"fas fa-trash\\\"></i>\\n                <span>Limpiar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!perfisAssociadosLoading && perfisAssociados.length > 0\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigPerfisAssociados\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggle?.perfisAssociados ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll('perfisAssociados')\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" width=\\\"20%\\\">Código</th>\\n                  <th scope=\\\"col\\\" width=\\\"70%\\\">Descripción</th>\\n                  <th scope=\\\"col\\\" width=\\\"5%\\\"></th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of perfisAssociados\\\" >\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td width=\\\"20%\\\">{{ item.id }}</td>\\n                  <td width=\\\"70%\\\">\\n                   {{ item.nome | uppercase }}\\n                  </td>\\n                  <td class=\\\"text-center\\\" width=\\\"5%\\\">\\n                    <btn-icon\\n                      icon=\\\"fas fa-trash\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onRemoverAssociacao(item)\\\"\\n                      *ngIf=\\\"!item.loading\\\"  \\n                    >\\n                    </btn-icon>\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!perfisLoading && perfisAssociados.length === 0\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-exchange-alt\\\"\\n              text=\\\"No se encontraron asociaciones\\\">\\n            </message>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <div class=\\\"row mb-2\\\">\\n        <div class=\\\"col mt-auto\\\">\\n          <div class=\\\"mtc-title mb-0\\\">Búsqueda de perfil</div>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <div class=\\\"d-flex justify-content-end\\\">\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\n              (click)=\\\"getPerfis()\\\">\\n              <i class=\\\"fas fa-search\\\"></i>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <advanced-filter>\\n        <form [formGroup]=\\\"formPerfis\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-4\\\">\\n              <label for=\\\"buscarPor\\\">BÚSQUEDA POR</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"buscarPor\\\"\\n              >\\n                <option value=\\\"id\\\">Id</option>\\n                <option value=\\\"nome\\\" selected>Nombre</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-8\\\">\\n              <label>TÉRMINO DE BÚSQUEDA</label>\\n              <div class=\\\"input-group\\\">\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"pesquisa\\\"\\n                  (keyup.enter)=\\\"getPerfis()\\\"\\n                >\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n      <div *ngIf=\\\"perfis.length > 0 && !perfisLoading\\\">\\n        <div class=\\\"row mb-2\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Selección de Perfiles</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\n                (click)=\\\"onAssociarPerfis()\\\"\\n                [disabled]=\\\"!form.get('id')?.value\\\">\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                <span\\n                  [tooltip]=\\\"!form.get('id')?.value ? 'Seleccionar un perfil':''\\\"\\n                  container=\\\"body\\\"\\n                  placement =\\\"left\\\">Conectar\\n                </span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigPerfis\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggle?.perfis ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll('perfis')\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 90%\\\">Perfiles</th>\\n                  <th style=\\\"width: 5%\\\"></th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of perfis\\\">\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 90%\\\"\\n                    (click)=\\\"item.checked = !item.checked\\\">\\n                    ({{ item.id }}) {{ item.nome | uppercase }}\\n                  </td>\\n                  <td style=\\\"width: 5%\\\">\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"perfisLoading\\\">\\n        <div class=\\\"col\\\">\\n          <message\\n            icon=\\\"fas fa-cog fa-spin\\\"\\n            text=\\\"Estamos buscando los perfiles por ti...\\\">\\n          </message>\\n        </div>\\n      </div>\\n      <div>\\n        <div class=\\\"row\\\" *ngIf=\\\"(perfis.length == 0) && !perfisLoading\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-box-open\\\"\\n              text=\\\"No se encontró información\\\">\\n            </message>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button type=\\\"button\\\" (click)=\\\"onReset()\\\">Limpiar</button>\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">Filtrar</button>\\n  <button type=\\\"button\\\" [routerLink]=\\\"['./novo']\\\">Agregar</button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <advanced-filter>\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"id\\\">Id</label>\\n          <input\\n            id=\\\"id\\\"\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"Ingresse...\\\"\\n            formControlName=\\\"id\\\"\\n            (keyup.enter)=\\\"onFilter()\\\"\\n          >\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"nome\\\">Nombre</label>\\n          <input\\n            id=\\\"nome\\\"\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"Ingresse...\\\"\\n            formControlName=\\\"nome\\\"\\n            (keyup.enter)=\\\"onFilter()\\\"\\n          >\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"matricula\\\">Registro</label>\\n          <input\\n            id=\\\"matricula\\\"\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"Ingresse...\\\"\\n            formControlName=\\\"matricula\\\"\\n            (keyup.enter)=\\\"onFilter()\\\"\\n          >\\n        </div>\\n        <div class=\\\"form-group col-md-3\\\">\\n          <label for=\\\"perfil\\\">Perfil</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"perfis\\\"\\n            multiple=\\\"true\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            [loading]=\\\"loadingPerfis\\\"\\n            labelForId=\\\"perfil\\\"\\n            bindLabel=\\\"nome\\\"\\n            bindValue=\\\"id\\\"\\n            id=\\\"perfil\\\"\\n            (change)=\\\"onFilter()\\\"\\n            formControlName=\\\"perfilId\\\"\\n            placeholder=\\\"Seleccione...\\\"\\n          >\\n            <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n              ({{item.id | number : '3.0-0'}}) {{item.nome}}\\n            </ng-template>\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-2\\\">\\n          <label for=\\\"situacao\\\">Situación</label>\\n          <select\\n            name=\\\"situacao\\\"\\n            id=\\\"situacao\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"situacao\\\"\\n          >\\n            <option value=\\\"\\\">Todos</option>\\n            <option value=\\\"1\\\">Activo</option>\\n            <option value=\\\"0\\\">Inactivo</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-2\\\">\\n          <label for=\\\"registrosPorPagina\\\">Datos</label>\\n          <select\\n            name=\\\"registrosPorPagina\\\"\\n            id=\\\"registrosPorPagina\\\"\\n            formControlName=\\\"registrosPorPagina\\\"\\n            class=\\\"form-control\\\"\\n          >\\n            <option value=\\\"10\\\">10</option>\\n            <option value=\\\"25\\\">25</option>\\n            <option value=\\\"50\\\">50</option>\\n            <option value=\\\"100\\\">100</option>\\n            <option value=\\\"250\\\">250</option>\\n            <option value=\\\"500\\\">500</option>\\n          </select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"col-12 p-0\\\" [hidden]=\\\"loading || noResult\\\">\\n    <div>\\n      <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th style=\\\"width:100px\\\">Id</th>\\n            <th>Nombre</th>\\n            <th>Registro</th>\\n            <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of data; let i = index\\\">\\n            <td class=\\\"text-truncate\\\" [ngClass]=\\\"item.situacao == 1 ? 'border-success' : 'border-danger'\\\">\\n              {{ item.id | number:'6.0-0' }}\\n            </td>\\n            <td> {{ item.nome }} </td>\\n            <td> {{ item.matricula }} </td>\\n            <td class=\\\"align-middle\\\">\\n              <button\\n                class=\\\"btn-icon-sm\\\"\\n                tooltip=\\\"Editar\\\"\\n                container=\\\"body\\\"\\n              >\\n                <a [routerLink]=\\\"['./', item.id]\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </a>\\n              </button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div>\\n      Visualización {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n      <pagination\\n        [maxSize]=\\\"10\\\"\\n        [totalItems]=\\\"totalItems\\\"\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        [(ngModel)]=\\\"currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\"\\n        nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"No se encontró información\\\"></empty-result>\\n  </div>\\n</app-body>\\n\";","//angular\nimport { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n//services\nimport { AdminUsuariosService } from '../services/usuarios.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AdminPerfisService } from '../../perfis/services/perfis.service';\nimport { AdminModulosService } from '../../modulos/services/modulos.service';\nimport { AdminPrestadorServicoPessoasService } from '../../prestador-servico/pessoas/pessoas.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n//rxjs\nimport { finalize } from 'rxjs/operators';\nimport { forkJoin, Observable } from 'rxjs';\n\n//interfaces\nimport { IAdminPeril } from '../../perfis/models/perfil';\nimport { IAdminPrestadorServicoPessoa } from '../../prestador-servico/pessoas/pessoa';\nimport { AdminPrestadorServicoService } from '../../prestador-servico/prestador-servico.service';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { IAdminDepartamento } from '../../departamentos/departamento';\nimport { IAdminEmpresa } from '../../empresas/empresa';\nimport { IAdminCargo } from '../../cargos/cargo';\nimport { AdminDepartamentosService } from '../../departamentos/departamentos.service';\nimport { AdminEmpresasService } from '../../empresas/empresas.service';\nimport { AdminCargosService } from '../../cargos/cargos.service';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'admin-usuarios-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss']\n})\nexport class AdminUsuariosCadastroComponent implements OnInit {\n  \n  form: FormGroup;\n  formPerfis: FormGroup;\n\n  breadCrumbTree: Array<Breadcrumb>;\n\n  appTitle = \"Registros\";\n  modulos = [];\n\n  loading = true;\n  loadingNavBar = false;\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  perfis = [];\n  perfisLoading = false;\n\n  perfisAssociados = [];\n  perfisAssociadosLoading = false;\n\n  tableConfigPerfisAssociados: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  tableConfigPerfis: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  toggle = {\n    perfis: false,\n    perfisAssociados: false\n  };\n\n  bsConfig: Partial<BsDatepickerConfig>;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private service: AdminUsuariosService,\n    private pnotify: PNotifyService,\n    private perfilService: AdminPerfisService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private modulosService: AdminModulosService,\n    private confirmModalService: ConfirmModalService,\n    private localeService: BsLocaleService,\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit() {\n    this.buildForm();\n    this.onActivatedRoute();\n    this.setBreadCrumb();\n    this.getModulos();\n  }\n\n  setBreadCrumb() {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/admin/home`,\n      },\n      {\n        descricao: 'Lista de usuarios',\n        routerLink: `/admin/usuarios`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  onActivatedRoute() {\n    \n    const params = this.activatedRoute.snapshot.params;\n    \n    if (!params?.id){\n      this.loading = false;\n      return\n    }\n\n    this.getUsuario(params?.id);\n    this.getPerfisAssociados({\"usuarioId\": params?.id})\n  }\n\n  buildForm() {\n\n    this.form = this.formBuilder.group({\n      id: [null],\n      nome: [null, Validators.required],\n      matricula: [null, Validators.required],\n      apelido: [null, Validators.required],\n      pessoaTipo: ['F', Validators.required],\n      departamento: [null, Validators.required],\n      empresa: [null, Validators.required],\n      cargo: [null, Validators.required],\n      dataAniversario: [null],\n      email: [null, Validators.required],\n      telefoneComercial: [null],\n      telefoneCelular: [null],\n      ramal: [null],\n      senha: [null],\n      moduloId: [null, Validators.required],\n      situacao: [1, Validators.required],\n    });\n\n    this.formPerfis = this.formBuilder.group({\n      buscarPor: ['nome'],\n      pesquisa: [null, Validators.required]\n    });\n\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  getUsuario(id) {\n    \n    this.loading = true;\n    \n    this.service\n      .getUsuarios({id: id})\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe(\n        response => {\n          \n          if(response.status !== 200){\n            return\n          }\n\n          let data = response.body[\"data\"][0];\n\n          data.dataAniversario = data.dataAniversario ? new Date(data.dataAniversario) : null;\n\n          this.form.patchValue(data)\n        }\n      )\n  }\n\n  onSave() {\n    this.loadingNavBar = true;\n    \n    let params = this.form.value;\n\n    this.service\n      .postUsuario(params)\n      .pipe(\n        finalize(() => {\n          this.loadingNavBar = false\n        })\n      )\n      .subscribe(\n        response => {\n          this.pnotify.success();\n          this.router.navigate([\"./../\"], {\n            relativeTo: this.activatedRoute\n          });\n        },\n        error => {\n          let message = error.error?.message;\n          message ? this.pnotify.error(message) : this.pnotify.error();\n        }\n      );\n  }\n\n  getModulos(){\n    \n    this.loading = true;\n\n    this.modulosService\n      .getModulos()\n      .pipe(\n        finalize(() => {\n          this.loading = false\n        })\n      )\n      .subscribe(\n        response => {\n          if(response.status !== 200){\n            return\n          }\n          let data = response.body[\"data\"];\n          this.modulos = data;\n        }\n      )\n  }\n\n  getPerfisAssociados(params){\n\n    params.situacao = '1';\n    params.inPagina = '0';\n    /* params.ORDE_BY = 'ID_REFE_ERP' */\n\n    this.perfisAssociadosLoading = true;\n\n    this.perfilService\n      .getPerfis(params)\n      .pipe(\n        finalize(() => {\n          this.perfisAssociadosLoading = false;\n        })\n      )\n      .subscribe(\n        response => {\n          if(response.status !== 200){\n            return\n          }\n\n          this.perfisAssociados = response.body['data'];\n          this.tableConfigPerfisAssociados.fixedHeader = this.perfisAssociados.length > 9 ? true : false;\n        }\n      )\n  }\n\n  getPerfis(){\n\n    const buscarPor = this.formPerfis.get('buscarPor')?.value;\n    const pesquisa = this.formPerfis.get('pesquisa')?.value;\n\n    let params = {};\n    \n    if(buscarPor){\n      params[buscarPor] = pesquisa ?? '';\n    }\n\n    this.toggle.perfis = false;\n\n    this.perfisLoading = true\n\n    this.perfilService\n      .getPerfis(params)\n      .pipe(\n        finalize(() => {\n          this.perfisLoading = false;\n        })\n      )\n      .subscribe(\n        response => {\n          \n          if(response.status != 200){\n            this.perfis = [];\n            return;\n          }\n\n          let data = response.body['data'];\n          \n          this.perfis = data.filter(perfil => {\n            return !this.perfisAssociados.some(item => item.id == perfil.id)\n          })\n\n          this.tableConfigPerfis.fixedHeader = this.perfis.length > 9 ? true : false;\n         \n        },\n        error => {\n          this.perfis = [];\n          console.log(error)\n        }\n      )\n  }\n\n  onAssociarPerfis(){\n    \n    let perfis = this.perfis.filter(material => material.checked);\n    this.toggle.perfis = false;\n\n    perfis.map(item => {\n      \n      item.loading = true;\n\n      if(this.perfisAssociados.some(atividade => atividade?.id === item.id)){\n        return\n      }\n\n      let params = {\n        \"perfilId\": item?.id ?? \"\",\n        \"usuarioId\": this.form.get(\"id\").value ?? \"\",\n        \"situacao\": \"1\"\n      }\n\n      this.service\n        .postPerfilAssociado(params)\n        .subscribe(\n          response => {\n            if(response.status === 200){\n              \n              this.perfisAssociados = [...this.perfisAssociados,\n                {\n                  ...item,\n                  checked: false,\n                  loading: false,\n                  attividadeId: item.id,\n                  perfilId: this.form.get(\"id\").value\n                }\n              ];\n              \n              this.perfis = this.perfis.filter(material => !material.checked)\n              this.tableConfigPerfisAssociados.fixedHeader = this.perfisAssociados.length > 9 ? true : false;\n\n            }\n          },\n          error => {\n            item.loading = false;\n          }\n        )\n    });\n  }\n\n  confirmDelete(): Observable<boolean> {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onRemoverAssociacao(perfil?){\n    \n    let _perfis = perfil ? [perfil] : this.perfisAssociados.filter(perfil => perfil.checked);\n    \n    let perfis = _perfis.map(item => { return {perfilId: item.id, usuarioId: this.form.get('id').value}})\n    \n    this.toggle.perfisAssociados = false;\n\n    if(perfis.length == 0){\n      this.pnotify.notice(\"Nenhum perfil selecionado.\");\n      return\n    }\n\n    this.confirmDelete()\n      .subscribe(\n        (response: boolean) => {\n          \n          if(!response){\n            this.perfisAssociados.map(item => item.checked = false);\n            return;\n          }\n\n          perfis.map(item => {\n      \n            item[\"situacao\"] = '0';\n            item[\"loading\"] = true;\n\n            this.service\n              .postPerfilAssociado(item)\n              .pipe(finalize(() => {\n                item[\"loading\"] = false;\n              }))\n              .subscribe(\n                response => {\n                  \n                  if(response.status !== 200){\n                    return\n                  }\n                  \n                  this.perfisAssociados = this.perfisAssociados\n                    .filter(perfil => perfil.id != item.perfilId);\n                  \n                  this.tableConfigPerfisAssociados.fixedHeader = this.perfisAssociados.length > 9 ? true : false;\n                },\n                error => {\n                  this.pnotify.error(\"Erro ao remover perfil.\");\n                }\n              )\n          \n          })\n          \n        }\n      )\n  }\n\n  onToggleAll(item: string){\n    this.toggle[item] = !this.toggle[item];\n    this[item].map(material => material.checked = this.toggle[item]);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminUsuariosListaComponent } from './lista/lista.component';\nimport { AdminUsuariosCadastroComponent } from './cadastro/cadastro.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminUsuariosListaComponent\n  },\n  {\n    path: 'novo',\n    component: AdminUsuariosCadastroComponent\n  },\n  {\n    path: ':id',\n    component: AdminUsuariosCadastroComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminUsuariosRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vdXN1YXJpb3MvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDatepickerModule, ModalModule, PaginationModule, TabsModule, TimepickerModule, TooltipModule } from 'ngx-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\n\nimport { AdminUsuariosRoutingModule } from './usuarios-routing.module';\n\nimport { AdminUsuariosListaComponent } from './lista/lista.component';\nimport { AdminUsuariosCadastroComponent } from './cadastro/cadastro.component';\n\n\n@NgModule({\n  declarations: [\n    AdminUsuariosListaComponent,\n    AdminUsuariosCadastroComponent\n  ],\n  imports: [\n    CommonModule,\n    AdminUsuariosRoutingModule,\n    FormsModule,\n    ModalModule,\n    NgSelectModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    ModuleWrapperModule,\n    NotFoundModule,\n    SharedModule,\n    TemplatesModule,\n    PipesModule\n  ]\n})\nexport class AdminUsuariosModule { }\n"]}