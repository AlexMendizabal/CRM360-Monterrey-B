{"version":3,"sources":["webpack:///src/app/modules/admin/usuarios/lista/lista.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/admin/usuarios/services/usuarios.service.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/admin/usuarios/lista/lista.component.scss","webpack:///src/app/modules/admin/usuarios/cadastro/cadastro.component.html","webpack:///src/app/modules/admin/usuarios/lista/lista.component.html","webpack:///src/app/modules/admin/usuarios/cadastro/cadastro.component.ts","webpack:///src/app/modules/admin/usuarios/usuarios-routing.module.ts","webpack:///src/app/modules/admin/usuarios/cadastro/cadastro.component.scss","webpack:///src/app/modules/admin/usuarios/usuarios.module.ts"],"names":["AdminUsuariosListaComponent","pnotify","service","route","formBuilder","activatedRoute","atividadesService","routerService","perfilService","dateService","appTitle","loading","loadingNavBar","loadingSincronizarAd","usuarios","perfis","loadingPerfis","data","itemsPerPage","totalItems","currentPage","numberOfItems","breadCrumbTree","descricao","routerLink","buildForm","setBreadCrumb","onActivatedRoute","getPerfis","inPagina","situacao","$activatedRouteSubscription","unsubscribe","queryParams","subscribe","response","_response","getBase64UrlParams","registrosPorPagina","form","patchValue","getData","getParams","get","setValue","Date","getTime","navigate","relativeTo","setBase64UrlParams","group","id","nome","matricula","perfilId","pagina","t","event","page","_params","_obj","value","prop","convertToUrlDate","reset","onFilter","params","getUsuarios","pipe","status","noResult","notice","body","error","selector","template","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","AdminUsuariosService","http","API","usuario","observe","post","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","currentDate","startOfWeek","setDate","setHours","endOfWeek","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","AdminUsuariosCadastroComponent","router","modulosService","confirmModalService","localeService","modulos","perfisLoading","perfisAssociados","perfisAssociadosLoading","tableConfigPerfisAssociados","subtitleBorder","tableConfigPerfis","fixedHeader","bodyHeight","toggle","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getModulos","snapshot","getUsuario","getPerfisAssociados","required","apelido","pessoaTipo","departamento","empresa","cargo","dataAniversario","email","telefoneComercial","telefoneCelular","ramal","senha","moduloId","formPerfis","buscarPor","pesquisa","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","postUsuario","success","length","filter","perfil","some","item","console","log","material","checked","map","atividade","postPerfilAssociado","attividadeId","showConfirm","_perfis","usuarioId","confirmDelete","routes","path","component","AdminUsuariosRoutingModule","imports","forChild","exports","AdminUsuariosModule","declarations","forRoot"],"mappings":"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","file":"usuarios-usuarios-module-es5.js","sourcesContent":["//angular\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n//rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n//service\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AdminUsuariosService } from './../services/usuarios.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\n//interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { IAdminPeril } from '../../perfis/models/perfil';\r\nimport { AdminPerfisService } from '../../perfis/services/perfis.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n@Component({\r\n  selector: 'admin-usuarios-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class AdminUsuariosListaComponent implements OnInit {\r\n\r\n  appTitle = \"Lista de usuarios\";\r\n\r\n  form: FormGroup;\r\n\r\n  loading = true;\r\n  loadingNavBar = false;\r\n  loadingSincronizarAd = false;\r\n\r\n  noResult: boolean;\r\n\r\n  usuarios: Array<any> = [];\r\n  perfis: IAdminPeril[] = [];\r\n  loadingPerfis = true;\r\n  data = [];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 10;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  numberOfItems = [10, 25, 50, 100, 250, 500];\r\n  /* Pagination */\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/admin/home'\r\n    },\r\n    {\r\n      descricao: 'Lista de usuarios'\r\n    }\r\n  ];\r\n\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  constructor(\r\n    private pnotify: PNotifyService,\r\n    private service: AdminUsuariosService,\r\n    private route: Router,\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private atividadesService: AtividadesService,\r\n    private routerService: RouterService,\r\n    private perfilService: AdminPerfisService,\r\n    private dateService: DateService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.getPerfis({inPagina: 0, situacao: 1});\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription?.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n\r\n        if(_response?.registrosPorPagina){\r\n          this.itemsPerPage = _response?.registrosPorPagina;\r\n        }\r\n\r\n        this.form.patchValue(_response);\r\n        this.getData(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('t').setValue(new Date().getTime());\r\n    this.form.get('pagina').setValue(1);\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      id: [null],\r\n      nome: [null],\r\n      matricula: [null],\r\n      perfilId: [null],\r\n      situacao: [null],\r\n      registrosPorPagina: [100],\r\n      pagina: [1],\r\n      t:[null]\r\n    })\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/admin/home`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('pagina').setValue(event.page);\r\n    this.form.get('t').setValue((new Date).getTime());\r\n    this.route.navigate([], {\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\r\n    })\r\n  }\r\n\r\n  getParams() {\r\n\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.onFilter();\r\n  }\r\n\r\n  getData(params?){\r\n\r\n    if (!this.loading) {\r\n      this.loadingNavBar = true;\r\n    }\r\n\r\n    this.service\r\n      .getUsuarios(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if (response.status !== 200) {\r\n            this.data = [];\r\n            this.noResult = true;\r\n            this.pnotify.notice('No hubo devolución de tu consulta');\r\n            return\r\n          }\r\n          this.noResult = false;\r\n          this.data = response.body['data'];\r\n          this.totalItems = response.body['total'];\r\n        },\r\n        error => {\r\n          this.data = [];\r\n          this.noResult = true;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getPerfis(params?) {\r\n\r\n    this.loadingPerfis = true;\r\n\r\n    this.perfilService\r\n      .getPerfis(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingPerfis = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n\r\n          if(response.status != 200){\r\n            this.pnotify.error(\"Erro ao carregar perfis.\");\r\n            return\r\n          }\r\n\r\n          this.perfis = response.body['data'];\r\n\r\n        },\r\n        error => {\r\n          this.pnotify.error(\"Erro ao carregar perfis.\");\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminUsuariosService {\r\n\r\n  private readonly API = environment.API;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getUsuarios(usuario = {}) {\r\n    return this.http.get(`${this.API}/core/usuarios`, {\r\n      params: usuario,\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  postUsuario(usuario) {\r\n    return this.http.post(`${this.API}/core/usuarios`,\r\n      usuario,\r\n      { observe: \"response\" }\r\n    );\r\n  }\r\n\r\n  postPerfilAssociado(usuario) {\r\n    return this.http.post(`${this.API}/core/usuarios/perfis`,\r\n      usuario,\r\n      { observe: \"response\" }\r\n    );\r\n  }\r\n\r\n  sincronizaAD() {\r\n    return this.http.get(`${this.API}/core/usuarios/ad/sincronismo`, {\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vdXN1YXJpb3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button \\r\\n    (click)=\\\"onSave()\\\"\\r\\n    [disabled] = \\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Guardar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <form\\r\\n        [formGroup]=\\\"form\\\"\\r\\n        class=\\\"d-flex flex-column\\\"\\r\\n        autocomplete=\\\"off\\\"\\r\\n        [hidden]=\\\"loading\\\"\\r\\n      >\\r\\n        <div class=\\\"mtc-title\\\">Datos del Usuario</div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-2\\\">\\r\\n            <label for=\\\"matricula\\\">Registro</label>\\r\\n            <input\\r\\n              id=\\\"matricula\\\"\\r\\n              type=\\\"number\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"matricula\\\"\\r\\n              placeholder=\\\"Ingresse...\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('matricula')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('matricula')\\\" message=\\\"Registro es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"nome\\\">Nombre</label>\\r\\n            <input\\r\\n              id=\\\"nome\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"nome\\\"\\r\\n              placeholder=\\\"Ingresse...\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('nome')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome')\\\" message=\\\"Nombre es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"apelido\\\">Abreviatura del Nombre</label>\\r\\n            <input \\r\\n              id=\\\"apelido\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"apelido\\\"\\r\\n              placeholder=\\\"Ingresse...\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('apelido')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('apelido')\\\" message=\\\"Apellido es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"email\\\">Correo Electrónico</label>\\r\\n            <input \\r\\n              id=\\\"email\\\"\\r\\n              type=\\\"email\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"email\\\"\\r\\n              placeholder=\\\"email@email.com\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('email')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email')\\\" message=\\\"Correo Electrónico es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-6\\\">\\r\\n            <label for=\\\"pessoaTipo\\\">Tipo de persona</label>\\r\\n            <select\\r\\n              name=\\\"pessoaTipo\\\"\\r\\n              id=\\\"pessoaTipo\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('pessoaTipo')\\\"\\r\\n              formControlName=\\\"pessoaTipo\\\"\\r\\n            >\\r\\n              <option value=\\\"F\\\">Física</option>\\r\\n              <option value=\\\"J\\\">Jurídica</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"dataAniversario\\\">Fecha de cumpleaños</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">\\r\\n                    <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataAniversario\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                placeholder=\\\"Ingrese...\\\"\\r\\n                formControlName=\\\"dataAniversario\\\"\\r\\n              />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"empresa\\\">Compañia</label>\\r\\n            <input \\r\\n              id=\\\"empresa\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"empresa\\\"\\r\\n              placeholder=\\\"Ingrese...\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('empresa')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('empresa')\\\" message=\\\"Compañia es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"cargo\\\">Puesto</label>\\r\\n            <input \\r\\n              id=\\\"cargo\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"cargo\\\"\\r\\n              placeholder=\\\"Ingrese...\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('cargo')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cargo')\\\" message=\\\"Puesto es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"departamento\\\">Departamento</label>\\r\\n            <input \\r\\n              id=\\\"departamento\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"departamento\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('departamento')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('departamento')\\\" message=\\\"Departamento es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-6\\\">\\r\\n            <label for=\\\"senha\\\">Contraseña</label>\\r\\n            <input \\r\\n              id=\\\"senha\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"senha\\\"\\r\\n              placeholder=\\\"Ingresse...\\\"\\r\\n              style=\\\"text-transform: none !important;\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-6\\\">\\r\\n            <label for=\\\"modulo\\\">Modulo</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"modulos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              labelForId=\\\"modulo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"id\\\"\\r\\n              id=\\\"modulo\\\"\\r\\n              formControlName=\\\"moduloId\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('moduloId')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('moduloId')\\\" message=\\\"Modulo es obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-6\\\">\\r\\n            <label for=\\\"situacao\\\">Situación</label>\\r\\n            <select\\r\\n              name=\\\"situacao\\\"\\r\\n              id=\\\"situacao\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"situacao\\\"\\r\\n            >\\r\\n              <option value=\\\"1\\\">Activo</option>\\r\\n              <option value=\\\"0\\\">Inactivo</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <div class=\\\"row mb-4\\\">\\r\\n        <div class=\\\"col mb-3\\\">\\r\\n          <hr>\\r\\n        </div>\\r\\n      </div>\\r\\n      <message\\r\\n        *ngIf=\\\"perfisAssociadosLoading\\\"\\r\\n        icon=\\\"fas fa-cog fa-spin\\\"\\r\\n        text=\\\"Buscamos información del perfil seleccionado...\\\">\\r\\n      </message>\\r\\n      <div [hidden]=\\\"perfisAssociadosLoading\\\">\\r\\n        <div class=\\\"row mb-2 mt-4\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Perfiles asociados al perfil</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                (click)=\\\"onRemoverAssociacao()\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n                <span>Limpiar</span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!perfisAssociadosLoading && perfisAssociados.length > 0\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <custom-table [config]=\\\"tableConfigPerfisAssociados\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th\\r\\n                    scope=\\\"col\\\"\\r\\n                    class=\\\"text-center\\\"\\r\\n                    style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"toggle?.perfisAssociados ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onToggleAll('perfisAssociados')\\\">\\r\\n                    </btn-icon>\\r\\n                  </th>\\r\\n                  <th scope=\\\"col\\\" width=\\\"20%\\\">Código</th>\\r\\n                  <th scope=\\\"col\\\" width=\\\"70%\\\">Descripción</th>\\r\\n                  <th scope=\\\"col\\\" width=\\\"5%\\\"></th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let item of perfisAssociados\\\" >\\r\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    </btn-icon>\\r\\n                  </td>\\r\\n                  <td width=\\\"20%\\\">{{ item.id }}</td>\\r\\n                  <td width=\\\"70%\\\">\\r\\n                   {{ item.nome | uppercase }}\\r\\n                  </td>\\r\\n                  <td class=\\\"text-center\\\" width=\\\"5%\\\">\\r\\n                    <btn-icon\\r\\n                      icon=\\\"fas fa-trash\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onRemoverAssociacao(item)\\\"\\r\\n                      *ngIf=\\\"!item.loading\\\"  \\r\\n                    >\\r\\n                    </btn-icon>\\r\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\r\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!perfisLoading && perfisAssociados.length === 0\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-exchange-alt\\\"\\r\\n              text=\\\"No se encontraron asociaciones\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <div class=\\\"row mb-2\\\">\\r\\n        <div class=\\\"col mt-auto\\\">\\r\\n          <div class=\\\"mtc-title mb-0\\\">Búsqueda de perfil</div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-end\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n              (click)=\\\"getPerfis()\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formPerfis\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-4\\\">\\r\\n              <label for=\\\"buscarPor\\\">BÚSQUEDA POR</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"buscarPor\\\"\\r\\n              >\\r\\n                <option value=\\\"id\\\">Id</option>\\r\\n                <option value=\\\"nome\\\" selected>Nombre</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-8\\\">\\r\\n              <label>TÉRMINO DE BÚSQUEDA</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"pesquisa\\\"\\r\\n                  (keyup.enter)=\\\"getPerfis()\\\"\\r\\n                >\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <div *ngIf=\\\"perfis.length > 0 && !perfisLoading\\\">\\r\\n        <div class=\\\"row mb-2\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Selección de Perfiles</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\r\\n                (click)=\\\"onAssociarPerfis()\\\"\\r\\n                [disabled]=\\\"!form.get('id')?.value\\\">\\r\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\r\\n                <span\\r\\n                  [tooltip]=\\\"!form.get('id')?.value ? 'Seleccionar un perfil':''\\\"\\r\\n                  container=\\\"body\\\"\\r\\n                  placement =\\\"left\\\">Conectar\\r\\n                </span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <custom-table [config]=\\\"tableConfigPerfis\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th\\r\\n                    scope=\\\"col\\\"\\r\\n                    class=\\\"text-center\\\"\\r\\n                    style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"toggle?.perfis ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onToggleAll('perfis')\\\">\\r\\n                    </btn-icon>\\r\\n                  </th>\\r\\n                  <th scope=\\\"col\\\" style=\\\"width: 90%\\\">Perfiles</th>\\r\\n                  <th style=\\\"width: 5%\\\"></th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let item of perfis\\\">\\r\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    </btn-icon>\\r\\n                  </td>\\r\\n                  <td\\r\\n                    class=\\\"hover\\\"\\r\\n                    style=\\\"width: 90%\\\"\\r\\n                    (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    ({{ item.id }}) {{ item.nome | uppercase }}\\r\\n                  </td>\\r\\n                  <td style=\\\"width: 5%\\\">\\r\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\r\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"perfisLoading\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <message\\r\\n            icon=\\\"fas fa-cog fa-spin\\\"\\r\\n            text=\\\"Estamos buscando los perfiles por ti...\\\">\\r\\n          </message>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"(perfis.length == 0) && !perfisLoading\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-box-open\\\"\\r\\n              text=\\\"No se encontró información\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button type=\\\"button\\\" (click)=\\\"onReset()\\\">Limpiar</button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">Filtrar</button>\\r\\n  <button type=\\\"button\\\" [routerLink]=\\\"['./novo']\\\">Agregar</button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <advanced-filter>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"id\\\">Id</label>\\r\\n          <input\\r\\n            id=\\\"id\\\"\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Ingresse...\\\"\\r\\n            formControlName=\\\"id\\\"\\r\\n            (keyup.enter)=\\\"onFilter()\\\"\\r\\n          >\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"nome\\\">Nombre</label>\\r\\n          <input\\r\\n            id=\\\"nome\\\"\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Ingresse...\\\"\\r\\n            formControlName=\\\"nome\\\"\\r\\n            (keyup.enter)=\\\"onFilter()\\\"\\r\\n          >\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"matricula\\\">Registro</label>\\r\\n          <input\\r\\n            id=\\\"matricula\\\"\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Ingresse...\\\"\\r\\n            formControlName=\\\"matricula\\\"\\r\\n            (keyup.enter)=\\\"onFilter()\\\"\\r\\n          >\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"perfil\\\">Perfil</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"perfis\\\"\\r\\n            multiple=\\\"true\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [loading]=\\\"loadingPerfis\\\"\\r\\n            labelForId=\\\"perfil\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"id\\\"\\r\\n            id=\\\"perfil\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            formControlName=\\\"perfilId\\\"\\r\\n            placeholder=\\\"Seleccione...\\\"\\r\\n          >\\r\\n            <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\r\\n              ({{item.id | number : '3.0-0'}}) {{item.nome}}\\r\\n            </ng-template>\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-2\\\">\\r\\n          <label for=\\\"situacao\\\">Situación</label>\\r\\n          <select\\r\\n            name=\\\"situacao\\\"\\r\\n            id=\\\"situacao\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            formControlName=\\\"situacao\\\"\\r\\n          >\\r\\n            <option value=\\\"\\\">Todos</option>\\r\\n            <option value=\\\"1\\\">Activo</option>\\r\\n            <option value=\\\"0\\\">Inactivo</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-2\\\">\\r\\n          <label for=\\\"registrosPorPagina\\\">Datos</label>\\r\\n          <select\\r\\n            name=\\\"registrosPorPagina\\\"\\r\\n            id=\\\"registrosPorPagina\\\"\\r\\n            formControlName=\\\"registrosPorPagina\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n          >\\r\\n            <option value=\\\"10\\\">10</option>\\r\\n            <option value=\\\"25\\\">25</option>\\r\\n            <option value=\\\"50\\\">50</option>\\r\\n            <option value=\\\"100\\\">100</option>\\r\\n            <option value=\\\"250\\\">250</option>\\r\\n            <option value=\\\"500\\\">500</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"col-12 p-0\\\" [hidden]=\\\"loading || noResult\\\">\\r\\n    <div>\\r\\n      <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n        <thead class=\\\"thead-light\\\">\\r\\n          <tr>\\r\\n            <th style=\\\"width:100px\\\">Id</th>\\r\\n            <th>Nombre</th>\\r\\n            <th>Registro</th>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data; let i = index\\\">\\r\\n            <td class=\\\"text-truncate\\\" [ngClass]=\\\"item.situacao == 1 ? 'border-success' : 'border-danger'\\\">\\r\\n              {{ item.id | number:'6.0-0' }}\\r\\n            </td>\\r\\n            <td> {{ item.nome }} </td>\\r\\n            <td> {{ item.matricula }} </td>\\r\\n            <td class=\\\"align-middle\\\">\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                tooltip=\\\"Editar\\\"\\r\\n                container=\\\"body\\\"\\r\\n              >\\r\\n                <a [routerLink]=\\\"['./', item.id]\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </a>\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div>\\r\\n      Visualización {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"No se encontró información\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","//angular\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n//services\r\nimport { AdminUsuariosService } from '../services/usuarios.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AdminPerfisService } from '../../perfis/services/perfis.service';\r\nimport { AdminModulosService } from '../../modulos/services/modulos.service';\r\nimport { AdminPrestadorServicoPessoasService } from '../../prestador-servico/pessoas/pessoas.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n//rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { forkJoin, Observable } from 'rxjs';\r\n\r\n//interfaces\r\nimport { IAdminPeril } from '../../perfis/models/perfil';\r\nimport { IAdminPrestadorServicoPessoa } from '../../prestador-servico/pessoas/pessoa';\r\nimport { AdminPrestadorServicoService } from '../../prestador-servico/prestador-servico.service';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { IAdminDepartamento } from '../../departamentos/departamento';\r\nimport { IAdminEmpresa } from '../../empresas/empresa';\r\nimport { IAdminCargo } from '../../cargos/cargo';\r\nimport { AdminDepartamentosService } from '../../departamentos/departamentos.service';\r\nimport { AdminEmpresasService } from '../../empresas/empresas.service';\r\nimport { AdminCargosService } from '../../cargos/cargos.service';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap';\r\n\r\n@Component({\r\n  selector: 'admin-usuarios-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss']\r\n})\r\nexport class AdminUsuariosCadastroComponent implements OnInit {\r\n  \r\n  form: FormGroup;\r\n  formPerfis: FormGroup;\r\n\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n\r\n  appTitle = \"Registros\";\r\n  modulos = [];\r\n\r\n  loading = true;\r\n  loadingNavBar = false;\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  perfis = [];\r\n  perfisLoading = false;\r\n\r\n  perfisAssociados = [];\r\n  perfisAssociadosLoading = false;\r\n\r\n  tableConfigPerfisAssociados: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  tableConfigPerfis: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  toggle = {\r\n    perfis: false,\r\n    perfisAssociados: false\r\n  };\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private service: AdminUsuariosService,\r\n    private pnotify: PNotifyService,\r\n    private perfilService: AdminPerfisService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private modulosService: AdminModulosService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private localeService: BsLocaleService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.onActivatedRoute();\r\n    this.setBreadCrumb();\r\n    this.getModulos();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/admin/home`,\r\n      },\r\n      {\r\n        descricao: 'Lista de usuarios',\r\n        routerLink: `/admin/usuarios`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    \r\n    const params = this.activatedRoute.snapshot.params;\r\n    \r\n    if (!params?.id){\r\n      this.loading = false;\r\n      return\r\n    }\r\n\r\n    this.getUsuario(params?.id);\r\n    this.getPerfisAssociados({\"usuarioId\": params?.id})\r\n  }\r\n\r\n  buildForm() {\r\n\r\n    this.form = this.formBuilder.group({\r\n      id: [null],\r\n      nome: [null, Validators.required],\r\n      matricula: [null, Validators.required],\r\n      apelido: [null, Validators.required],\r\n      pessoaTipo: ['F', Validators.required],\r\n      departamento: [null, Validators.required],\r\n      empresa: [null, Validators.required],\r\n      cargo: [null, Validators.required],\r\n      dataAniversario: [null],\r\n      email: [null, Validators.required],\r\n      telefoneComercial: [null],\r\n      telefoneCelular: [null],\r\n      ramal: [null],\r\n      senha: [null],\r\n      moduloId: [null, Validators.required],\r\n      situacao: [1, Validators.required],\r\n    });\r\n\r\n    this.formPerfis = this.formBuilder.group({\r\n      buscarPor: ['nome'],\r\n      pesquisa: [null, Validators.required]\r\n    });\r\n\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getUsuario(id) {\r\n    \r\n    this.loading = true;\r\n    \r\n    this.service\r\n      .getUsuarios({id: id})\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          \r\n          if(response.status !== 200){\r\n            return\r\n          }\r\n\r\n          let data = response.body[\"data\"][0];\r\n\r\n          data.dataAniversario = data.dataAniversario ? new Date(data.dataAniversario) : null;\r\n\r\n          this.form.patchValue(data)\r\n        }\r\n      )\r\n  }\r\n\r\n  onSave() {\r\n    this.loadingNavBar = true;\r\n    \r\n    let params = this.form.value;\r\n\r\n    this.service\r\n      .postUsuario(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          this.pnotify.success();\r\n          this.router.navigate([\"./../\"], {\r\n            relativeTo: this.activatedRoute\r\n          });\r\n        },\r\n        error => {\r\n          let message = error.error?.message;\r\n          message ? this.pnotify.error(message) : this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getModulos(){\r\n    \r\n    this.loading = true;\r\n\r\n    this.modulosService\r\n      .getModulos()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if(response.status !== 200){\r\n            return\r\n          }\r\n          let data = response.body[\"data\"];\r\n          this.modulos = data;\r\n        }\r\n      )\r\n  }\r\n\r\n  getPerfisAssociados(params){\r\n\r\n    params.situacao = '1';\r\n    params.inPagina = '0';\r\n    /* params.ORDE_BY = 'ID_REFE_ERP' */\r\n\r\n    this.perfisAssociadosLoading = true;\r\n\r\n    this.perfilService\r\n      .getPerfis(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.perfisAssociadosLoading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if(response.status !== 200){\r\n            return\r\n          }\r\n\r\n          this.perfisAssociados = response.body['data'];\r\n          this.tableConfigPerfisAssociados.fixedHeader = this.perfisAssociados.length > 9 ? true : false;\r\n        }\r\n      )\r\n  }\r\n\r\n  getPerfis(){\r\n\r\n    const buscarPor = this.formPerfis.get('buscarPor')?.value;\r\n    const pesquisa = this.formPerfis.get('pesquisa')?.value;\r\n\r\n    let params = {};\r\n    \r\n    if(buscarPor){\r\n      params[buscarPor] = pesquisa ?? '';\r\n    }\r\n\r\n    this.toggle.perfis = false;\r\n\r\n    this.perfisLoading = true\r\n\r\n    this.perfilService\r\n      .getPerfis(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.perfisLoading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          \r\n          if(response.status != 200){\r\n            this.perfis = [];\r\n            return;\r\n          }\r\n\r\n          let data = response.body['data'];\r\n          \r\n          this.perfis = data.filter(perfil => {\r\n            return !this.perfisAssociados.some(item => item.id == perfil.id)\r\n          })\r\n\r\n          this.tableConfigPerfis.fixedHeader = this.perfis.length > 9 ? true : false;\r\n         \r\n        },\r\n        error => {\r\n          this.perfis = [];\r\n          console.log(error)\r\n        }\r\n      )\r\n  }\r\n\r\n  onAssociarPerfis(){\r\n    \r\n    let perfis = this.perfis.filter(material => material.checked);\r\n    this.toggle.perfis = false;\r\n\r\n    perfis.map(item => {\r\n      \r\n      item.loading = true;\r\n\r\n      if(this.perfisAssociados.some(atividade => atividade?.id === item.id)){\r\n        return\r\n      }\r\n\r\n      let params = {\r\n        \"perfilId\": item?.id ?? \"\",\r\n        \"usuarioId\": this.form.get(\"id\").value ?? \"\",\r\n        \"situacao\": \"1\"\r\n      }\r\n\r\n      this.service\r\n        .postPerfilAssociado(params)\r\n        .subscribe(\r\n          response => {\r\n            if(response.status === 200){\r\n              \r\n              this.perfisAssociados = [...this.perfisAssociados,\r\n                {\r\n                  ...item,\r\n                  checked: false,\r\n                  loading: false,\r\n                  attividadeId: item.id,\r\n                  perfilId: this.form.get(\"id\").value\r\n                }\r\n              ];\r\n              \r\n              this.perfis = this.perfis.filter(material => !material.checked)\r\n              this.tableConfigPerfisAssociados.fixedHeader = this.perfisAssociados.length > 9 ? true : false;\r\n\r\n            }\r\n          },\r\n          error => {\r\n            item.loading = false;\r\n          }\r\n        )\r\n    });\r\n  }\r\n\r\n  confirmDelete(): Observable<boolean> {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onRemoverAssociacao(perfil?){\r\n    \r\n    let _perfis = perfil ? [perfil] : this.perfisAssociados.filter(perfil => perfil.checked);\r\n    \r\n    let perfis = _perfis.map(item => { return {perfilId: item.id, usuarioId: this.form.get('id').value}})\r\n    \r\n    this.toggle.perfisAssociados = false;\r\n\r\n    if(perfis.length == 0){\r\n      this.pnotify.notice(\"Nenhum perfil selecionado.\");\r\n      return\r\n    }\r\n\r\n    this.confirmDelete()\r\n      .subscribe(\r\n        (response: boolean) => {\r\n          \r\n          if(!response){\r\n            this.perfisAssociados.map(item => item.checked = false);\r\n            return;\r\n          }\r\n\r\n          perfis.map(item => {\r\n      \r\n            item[\"situacao\"] = '0';\r\n            item[\"loading\"] = true;\r\n\r\n            this.service\r\n              .postPerfilAssociado(item)\r\n              .pipe(finalize(() => {\r\n                item[\"loading\"] = false;\r\n              }))\r\n              .subscribe(\r\n                response => {\r\n                  \r\n                  if(response.status !== 200){\r\n                    return\r\n                  }\r\n                  \r\n                  this.perfisAssociados = this.perfisAssociados\r\n                    .filter(perfil => perfil.id != item.perfilId);\r\n                  \r\n                  this.tableConfigPerfisAssociados.fixedHeader = this.perfisAssociados.length > 9 ? true : false;\r\n                },\r\n                error => {\r\n                  this.pnotify.error(\"Erro ao remover perfil.\");\r\n                }\r\n              )\r\n          \r\n          })\r\n          \r\n        }\r\n      )\r\n  }\r\n\r\n  onToggleAll(item: string){\r\n    this.toggle[item] = !this.toggle[item];\r\n    this[item].map(material => material.checked = this.toggle[item]);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AdminUsuariosListaComponent } from './lista/lista.component';\r\nimport { AdminUsuariosCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminUsuariosListaComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: AdminUsuariosCadastroComponent\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: AdminUsuariosCadastroComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminUsuariosRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vdXN1YXJpb3MvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule, ModalModule, PaginationModule, TabsModule, TimepickerModule, TooltipModule } from 'ngx-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\n\r\nimport { AdminUsuariosRoutingModule } from './usuarios-routing.module';\r\n\r\nimport { AdminUsuariosListaComponent } from './lista/lista.component';\r\nimport { AdminUsuariosCadastroComponent } from './cadastro/cadastro.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminUsuariosListaComponent,\r\n    AdminUsuariosCadastroComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminUsuariosRoutingModule,\r\n    FormsModule,\r\n    ModalModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    ModuleWrapperModule,\r\n    NotFoundModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    PipesModule\r\n  ]\r\n})\r\nexport class AdminUsuariosModule { }\r\n"]}