{"version":3,"sources":["webpack:///src/app/modules/logistica/yms/setores/lista/lista.component.ts","webpack:///src/app/modules/logistica/yms/setores/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/yms/setores/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/yms/setores/setores-routing.module.ts","webpack:///src/app/modules/logistica/yms/setores/lista/lista.component.html","webpack:///src/app/modules/logistica/yms/setores/associacao-materiais/associacao-materiais.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/logistica/yms/setores/associacao-materiais/associacao-materiais.component.scss","webpack:///src/app/modules/logistica/yms/setores/lista/lista.component.scss","webpack:///src/app/modules/logistica/yms/setores/setores.module.ts","webpack:///src/app/modules/logistica/yms/setores/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/yms/setores/associacao-materiais/associacao-materiais.component.html"],"names":["LogisticaYmsSetoresListaComponent","route","pnotify","formBuilder","xlsxService","dateService","routerService","activatedRoute","detailPanelService","confirmModalService","setoresService","filiaisService","tiposSetorService","showDetailPanel","loading","loadingNavBar","totalItens","filial","tableConfig","subtitleBorder","tableConfigAssocMateriais","fixedHeader","bodyHeight","hover","tableConfigAssocIntervalos","tipos","cod","nome","subtitles","id","text","color","itemsPerPage","totalItems","currentPage","buildForm","setBreadCrumb","onActivatedRoute","onDetailPanelEmitter","getFilterSetores","getTiposSetor","$activatedRouteSubscription","unsubscribe","queryParams","subscribe","response","_response","getBase64UrlParams","form","patchValue","hasOwnProperty","TT_REGI_PAGI","getSetores","getParams","showDetailPanelSubscription","config","event","showing","reset","PAGI","TIME","Date","getTime","group","UUID_LOGI_YMS_SETO","NM_SETO","UUID_LOGI_YMS_SETO_TIPO","NM_SETO_TIPO","IN_STAT","DS_OBSE","NR_MATR","NM_USUA","DT_INCL","DT_ATUA","onFilter","snapshot","params","idSubModulo","breadCrumbTree","descricao","routerLink","hide","get","setValue","navigate","relativeTo","setBase64UrlParams","setores","getIntervalos","getMateriaisAssociados","show","setorSelecionado","loadedFinished","IN_PAGI","ORDE_BY","ORDE_TYPE","loadingAssociacaoIntervalos","pipe","status","associacaoIntervalos","body","length","noAssocIntervalos","notice","error","loadingAssociacaoMateriais","console","log","associacaoMateriais","noAssocMateriais","noResult","message","_params","loadingSetores","filterSetores","loadingTiposSetor","tiposSetor","page","_obj","value","prop","convertToUrlDate","borderClass","stat","confirmChange","asObservable","result","postSetores","success","showConfirm","data","toLocaleDateString","split","dataExport","listagemExport","concat","exportFile","time","convertMysqlTime","selector","template","LogisticaYmsSetoresCadastroComponent","router","localeService","foawService","tiposCircuitoService","titleService","atividadesService","formData","disabledForm","MASKS","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setFormBuilder","getTiposCircuito","getFiliais","getIcones","getSetor","onAddIntervalos","loadingTiposCircuitoSetor","intervalos","promise","forEach","Promise","resolve","loadingTiposCircuito","tiposCircuito","loadingFiliais","IN_YMS","filiais","formIntervalos","push","UUID_LOGI_YMS_CIRC_TIPO","required","TP_INTV","HR_INTV","index","at","removeAt","postIntervalos","appTitle","setTitle","UUID_LOGI_FILI","DS_ICON","array","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","request","tpCircuitos","el","convert2PhpDate","responses","formGroup","onNestedFieldInvalid","nestedForm","loadingIcones","icones","icone","classe","routes","path","component","LogisticaYmsSetoresRoutingModule","imports","forChild","exports","LogisticaYmsSetoresAssociacaoMateriaisComponent","materiais","materiaisLoading","loadingMateriais","materiaisAssociados","materiaisAssociadosLoading","tableConfigMateriaisAssociados","tableConfigMateriais","toggle","disabled","formMateriais","buscarPor","pesquisa","UUID_REFE_ERP","NM_MATE","NM_CLAS","NM_LINH","getMateriais","filter","material","some","item","UUID_MATE","ID","checked","map","ID_REFE_ERP","postMateriaisAssociados","confirmDelete","deleteAssociacoes","ConfirmModalService","modalService","type","title","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","LogisticaYmsSetoresModule","declarations","forRoot"],"mappings":"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","file":"setores-setores-module-es5.js","sourcesContent":["import { LogisticaYmsTiposSetorService } from './../../tipos-setor/services/tipos-setor.service';\nimport { ILogisticaYmsTiposSetor } from './../../tipos-setor/models/tipos-setor';\n//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, Data } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\nimport { LogisticaYmsSetoresService } from '../services/setores.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//modelos\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\n\n//Interfaces\nimport { ILogisticaYmsSetores } from './../models/setores';\nimport { LogisticaFiliaisService } from '../../../cadastros/filiais/services/filiais.service';\n\n\n@Component({\n  selector: 'logistica-yms-setores-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class LogisticaYmsSetoresListaComponent\n  implements OnInit, OnDestroy {\n    \n  breadCrumbTree: Array<Breadcrumb>;\n  idSubModulo: number;\n  noResult: boolean;\n  loadingSetores: boolean;\n  modalRef: BsModalRef;\n  form: FormGroup;\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  $activatedRouteSubscription: Subscription;\n\n  //LOADINGS\n  loading = true; \n  loadingNavBar = false;\n  loadingTiposSetor: boolean;\n  loadingFilial: boolean;\n  loadingAssociacaoMateriais: boolean;\n  loadingAssociacaoIntervalos: boolean;\n\n  //VARIAVEIS\n  noAssocIntervalos: boolean\n  associacaoIntervalos: Array<ILogisticaYmsSetores>;\n  noAssocMateriais: boolean\n  associacaoMateriais: Array<ILogisticaYmsSetores>;\n  totalItens: any = [];\n  filial = []\n  filterSetores: Array<ILogisticaYmsSetores>;\n  setores: Array<ILogisticaYmsSetores>;\n  setorSelecionado: ILogisticaYmsSetores;\n  tiposSetor: Array<ILogisticaYmsTiposSetor>;\n\n  // CUSTOM TABLE\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  tableConfigAssocIntervalos: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  // Tipos de Situação dos Setores (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '2',\n      nome: 'Inativos',\n    },\n  ];\n\n  // Subtitles (Ativo/Inativo)\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private formBuilder: FormBuilder,\n    private xlsxService: XlsxService,\n    private dateService: DateService,\n    private routerService: RouterService,\n    private activatedRoute: ActivatedRoute,\n    private detailPanelService: DetailPanelService,\n    private confirmModalService: ConfirmModalService,\n    private setoresService: LogisticaYmsSetoresService,\n    private filiaisService: LogisticaFiliaisService,\n    private tiposSetorService: LogisticaYmsTiposSetorService,\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n    this.onDetailPanelEmitter();\n    this.getFilterSetores();\n    this.getTiposSetor();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n          this.getSetores(this.getParams());\n      }\n    );\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.patchValue({\n      PAGI: 1,\n      TT_REGI_PAGI: 100,\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      UUID_LOGI_YMS_SETO: [null],\n      NM_SETO: [null],\n      UUID_LOGI_YMS_SETO_TIPO: [null],\n      NM_SETO_TIPO: [null],\n      IN_STAT: [null],\n      DS_OBSE: [null],\n      NR_MATR: [null],\n      NM_USUA: [null],\n      DT_INCL: [null],\n      DT_ATUA: [null],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/logistica/home`,\n      },\n      {\n        descricao: 'YMS',\n        routerLink: `/logistica/yms/${id}`,\n      },\n      {\n        descricao: 'Setores',\n      },\n    ];\n  }\n\n  onFilter() {\n    this.detailPanelService.hide();\n    this.form.get('PAGI').setValue(1);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  onDetails(setores: ILogisticaYmsSetores): void {\n    this.getIntervalos({UUID_LOGI_YMS_SETO: setores.UUID_LOGI_YMS_SETO})\n    this.getMateriaisAssociados({UUID_LOGI_YMS_SETO: setores.UUID_LOGI_YMS_SETO});\n    this.detailPanelService.show();\n    this.setorSelecionado = setores;\n    this.detailPanelService.loadedFinished(false);\n  }\n\n  getIntervalos(params?) {\n    params.IN_STAT = '1';\n    params.IN_PAGI = '0';\n    params.ORDE_BY = 'ID_REFE_ERP'\n    params.ORDE_TYPE = 'desc'\n\n    this.loadingAssociacaoIntervalos = true;\n    this.setoresService\n      .getIntervalos(params)\n      .pipe(\n        finalize(() => {\n          this.loadingAssociacaoIntervalos = false;\n        })\n      )\n      .subscribe(response => {\n        if (response.status === 200) {\n          this.associacaoIntervalos = response.body['data'];\n\n          if (this.associacaoIntervalos.length > 9) {\n            this.tableConfigAssocIntervalos.fixedHeader = true;\n          }\n\n          this.noAssocIntervalos = false\n        } else {\n          this.pnotify.notice('Nenhuma associação encontrada!');\n          this.noAssocIntervalos = true\n          this.associacaoIntervalos = [];\n        }\n      },\n      (error) => {\n        this.pnotify.error();\n      }\n    );\n  }\n\n  getMateriaisAssociados(params){\n    this.loadingAssociacaoMateriais = true;\n    params.IN_STAT = '1';\n    params.IN_PAGI = '0';\n    params.ORDE_BY = 'ID_REFE_ERP'\n    params.ORDE_TYPE = 'desc'\n    console.log(params)\n    this.setoresService\n      .getMateriaisAssociados(params)\n      .pipe(\n        finalize(() => {\n          this.loadingAssociacaoMateriais = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.associacaoMateriais = response.body['data'];\n\n            if (this.associacaoMateriais.length > 9) {\n              this.tableConfigAssocMateriais.fixedHeader = true;\n            }\n\n            this.noAssocMateriais = false\n          } else {\n            this.pnotify.notice('Nenhuma associação encontrada!');\n            this.noAssocMateriais = true\n            this.associacaoMateriais = [];\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n        }\n      );\n  }\n\n\n\n  getSetores(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n    this.setoresService\n      .getSetores(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.setores = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.setores = [];\n          }\n        },\n        (error: any) => {\n          this.noResult = true;\n          const message = error.error.message\n          message ? this.pnotify.error(message): this.pnotify.error();\n        }\n      );\n  }\n\n  getFilterSetores(params?: Partial<ILogisticaYmsSetores>) {\n    const _params = params ?? {};\n    _params.IN_STAT = 1;\n    _params.IN_PAGI = 0;\n    this.loadingSetores = true;\n    this.setoresService\n      .getSetores(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingSetores = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filterSetores = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      },\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    );\n  }\n\n  getTiposSetor() {\n    this.loadingTiposSetor = true;\n    this.tiposSetorService\n      .getTiposSetor({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTiposSetor = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tiposSetor = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      },\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    );\n}\n\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  classStatusBorder(setores: ILogisticaYmsSetores): string {\n    let borderClass: string;\n\n    if (setores.IN_STAT == 1) {\n      borderClass = 'border-success';\n    } else if (setores.IN_STAT == 2) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  changeType(params: ILogisticaYmsSetores) {\n    const stat = params.IN_STAT == 1 ? 0 : 1;\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loadingNavBar = true;\n          params.IN_STAT = stat;\n          return this.setoresService.postSetores(params);\n        }),\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotify.success();\n        },\n        (error: any) => {\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\n          this.pnotify.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == 1)\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Deseja realmente prosseguir com a ativação do registro?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onExport(): void {\n    let data = new Date().toLocaleDateString().split('/'),\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\n\n    let listagemExport: any = [];\n    listagemExport = this.setores.concat(this.totalItens);\n\n    this.xlsxService.exportFile(listagemExport, `Setores${dataExport}`);\n  }\n  convertMysqlTime(time: string) {\n    return this.dateService.convertMysqlTime(time);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9zZXRvcmVzL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { IconesFontAwesomeService } from 'src/app/shared/services/core/icons-fonts-awesome.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { LogisticaYmsTurnosService } from './../../turnos/services/turnos.service';\nimport { ILogisticaYmsTurnos } from './../../turnos/models/turnos';\nimport { LogisticaFiliaisService } from './../../../cadastros/filiais/services/filiais.service';\nimport { ILogisticaFiliais } from './../../../cadastros/filiais/models/filiais';\nimport { ILogisticaYmsTiposCircuito } from './../../tipos-circuito/models/tipos-circuito';\nimport { LogisticaYmsTiposCircuitoService } from './../../tipos-circuito/services/tipos-circuito.service';\nimport { FormArray } from '@angular/forms';\nimport { ILogisticaYmsTiposSetor } from './../../tipos-setor/models/tipos-setor';\nimport { LogisticaYmsTiposSetorService } from './../../tipos-setor/services/tipos-setor.service';\n//Services\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//Bootstrap\nimport { utilsBr } from 'js-brasil';\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\n//Angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//rxjs\nimport { Subscription, forkJoin } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LogisticaYmsSetoresService } from '../services/setores.service';\n//interfaces\nimport { ILogisticaYmsSetores } from '../models/setores';\nimport { isNull } from 'util';\nimport { elasticIn } from '@amcharts/amcharts4/.internal/core/utils/Ease';\n\n@Component({\n  selector: 'logistica-yms-setores-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class LogisticaYmsSetoresCadastroComponent\n  implements OnInit {\n  noResult: boolean;\n  $activatedRouteSubscription: Subscription;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  modalRef: BsModalRef;\n  icone: string;\n  icones: Array<any>;\n  formData: Array<FormData> = [];\n  bsConfig: Partial<BsDatepickerConfig>;\n  filiais: Array<ILogisticaFiliais>;\n  turnos: Array<ILogisticaYmsTurnos>;\n  tiposSetor: Array<ILogisticaYmsTiposSetor>;\n  tiposCircuito:Array<ILogisticaYmsTiposCircuito>;\n\n  //loading\n  disabledForm = false;\n  loading = false;\n  loadingNavBar = false;\n  loadingFiliais: boolean;\n  loadingIcones: boolean;\n  loadingTurnos: boolean;\n  loadingTiposSetor: boolean;\n  loadingTiposCircuito: boolean;\n  loadingTiposCircuitoSetor: boolean;\n\n  tipos = [\n    {\n      nome: 'FIXO',\n      cod: 'FIXO',\n    },\n    { \n      nome: 'VARIÁVEL',\n      cod: 'VARIAVEL',\n    },\n  ];\n\n\n  constructor(\n    private dateService: DateService,\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private localeService: BsLocaleService,\n    private filiaisService: LogisticaFiliaisService,\n    private setoresService: LogisticaYmsSetoresService,\n    private foawService: IconesFontAwesomeService,\n    private tiposSetorService: LogisticaYmsTiposSetorService,\n    private tiposCircuitoService: LogisticaYmsTiposCircuitoService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n  public MASKS = utilsBr.MASKS;\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n    this.getTiposSetor();\n    this.getTiposCircuito()\n    this.getFiliais();\n    this.getIcones();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onActivatedRoute() {\n    const _params = this.activatedRoute.snapshot.params;\n    if (_params.hasOwnProperty('id')) {\n      this.getSetor(_params['id']);\n      this.getIntervalos({ UUID_LOGI_YMS_SETO: _params['id'], IN_STAT:'1' });\n    } else { \n      this.onAddIntervalos();\n    } \n  }\n\n  getIntervalos(params?) {\n    this.loadingNavBar = true;\n    this.loadingTiposCircuitoSetor = true\n    this.setoresService\n      .getIntervalos(params)\n      .pipe(\n        finalize(() => {\n          this.loadingNavBar = false;\n          this.loadingTiposCircuitoSetor = false\n        })\n      )\n      .subscribe(async (response) => {\n        if (response.status !== 200) {\n          return;\n        }\n        const intervalos = response['body']['data'];\n        const promise = () => intervalos.forEach(() => this.onAddIntervalos());\n        await Promise.resolve(promise());\n        this.form.get('intervalos').patchValue(intervalos)\n         \n      },\n      (error) => {\n        this.pnotify.error('Não foi encontrado nenhum material');\n      }\n    );\n  }\n\n  getTiposCircuito() {\n    this.loadingTiposCircuito = true;\n    this.tiposCircuitoService\n      .getTiposCircuito({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTiposCircuito = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tiposCircuito = response.body['data'];\n        }else{\n          this.tiposCircuito = [];\n          this.pnotify.notice('Nenhum tipo de circuito encontrado!')\n        }\n      }),\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n  }\n\n  getTiposSetor() {\n    this.loadingTiposSetor = true;\n    this.tiposSetorService\n      .getTiposSetor({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTiposSetor = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tiposSetor = response.body['data'];\n        }else{\n          this.tiposSetor = [];\n          this.pnotify.notice('Nenhum tipo de setor encontrado!')\n        }\n      },\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    );\n  }\n\n  getSetor(id: string) {\n    this.loading = true;\n    this.setoresService\n      .getSetor(id)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            const data : Partial<ILogisticaYmsSetores> = response.body['data']\n            this.form.patchValue(data)\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n          }\n        },\n        (error: any) => {\n          this.noResult = true;\n          const message = error.error.message\n          message ? this.pnotify.error(message): this.pnotify.error();\n        }\n      );\n  }\n  \n  getFiliais() {\n    this.loadingFiliais = true;\n    this.filiaisService\n      .getFiliais({ IN_STAT: '1', IN_PAGI: '0', IN_YMS: 1 })\n      .pipe(\n        finalize(() => {\n          this.loadingFiliais = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filiais = response.body['data'];\n        }else{\n          this.filiais = [];\n          this.pnotify.notice('Nenhuma filial encontrada!')\n        }\n      }),\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n  }\n\n\n  get formIntervalos() {\n    return this.form.get('intervalos') as FormArray;\n  }\n\n  onAddIntervalos() {\n    this.formIntervalos.push(\n      this.formBuilder.group({\n        UUID_LOGI_YMS_SETO: [null],\n        UUID_LOGI_YMS_CIRC_TIPO: [null, [Validators.required]],\n        TP_INTV: [null, [Validators.required]],\n        HR_INTV: [null, [Validators.required]],\n      })\n    );\n  }\n\n  onDeleteTipoCircuito(index: number) {\n    if (this.formIntervalos.length === 1) {\n      this.pnotify.notice('Informe ao menos um tipo de circuito.');\n      return\n    }\n    const id = this.form.get('UUID_LOGI_YMS_SETO').value\n    let intervalos = this.formIntervalos.at(index).value;\n    intervalos.UUID_LOGI_YMS_SETO = id,\n    intervalos = {...intervalos,'IN_STAT':'0'}\n    if(!intervalos['UUID_LOGI_YMS_CIRC_TIPO']){\n      this.formIntervalos.removeAt(index);\n      return;\n    }\n    this.loadingNavBar= true;\n    this.setoresService\n      .postIntervalos(intervalos)\n        .pipe(\n          finalize(() => {\n            this.loadingNavBar= false;\n          })\n        )\n        .subscribe(\n          (response) => {\n            if (response.status === 200) {\n              this.formIntervalos.removeAt(index);\n              this.pnotify.success();\n            } else {\n              this.pnotify.error();\n            }\n          },\n          (error) => {\n            this.pnotify.error();\n          }\n        );\n}\n\n  setBreadCrumb(): void {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.appTitle = 'Cadastro';\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'YMS',\n        routerLink: `/logistica/yms/${id}`,\n      },\n      {\n        descricao: 'Setores',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //formulario\n  setFormBuilder(): void {\n\n    this.form = this.formBuilder.group({\n      UUID_LOGI_YMS_SETO: [null],\n      NM_SETO: [null, [Validators.required]],\n      UUID_LOGI_YMS_SETO_TIPO: [null, [Validators.required]],\n      UUID_LOGI_FILI: [null, [Validators.required]],\n      IN_STAT: [null],\n      DS_OBSE: [null],\n      DS_ICON: [null, [Validators.required]],\n      intervalos: this.formBuilder.array([]),\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  postSetores() {\n    let params = this.form.value;\n    delete params['intervalos']\n    this.loadingNavBar = true;\n    this.setoresService\n      .postSetores(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            const id = response.body['data'];\n            this.form.get('UUID_LOGI_YMS_SETO').setValue(id);\n            if(this.form.get('intervalos').value[0]['UUID_LOGI_YMS_CIRC_TIPO']){\n              this.postIntervalos(id);\n            }\n            this.pnotify.success();\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          const message = error.error.message\n          message ? this.pnotify.error(message): this.pnotify.error();\n        }\n      );\n  }\n\n  async postIntervalos(id:number){\n    let request = [];\n    const tpCircuitos = this.formIntervalos.value;\n    if (!tpCircuitos){\n      this.router.navigate(['../'], {\n        relativeTo: this.activatedRoute,\n      });\n      return\n    }\n\n    const promise = () => {\n      tpCircuitos.forEach(el => {\n        if (el.HR_INTV instanceof Date){\n          el.HR_INTV = this.dateService.convert2PhpDate(el.HR_INTV);\n        }\n        const params = {...el,'UUID_LOGI_YMS_SETO':id}\n        request.push(this.setoresService\n          .postIntervalos(params)\n      )});\n    }\n    await Promise.resolve(promise());\n    forkJoin(request)\n    .pipe(\n      finalize(() => {\n        this.loading = false;\n        this.loadingNavBar = false;\n      })\n    )\n    .subscribe(\n      (responses: Array<any>) => {\n        this.pnotify.success('Intervalos cadastrados com sucesso');\n        this.router.navigate(['../'], {\n          relativeTo: this.activatedRoute,\n        });\n      },\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    )\n  }\n\n  \n  onNestedFieldError(formGroup: string, index: number, field: string) {\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\n    let nestedForm: any = this.form.controls[formGroup];\n    field = nestedForm.controls[index].get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\n    let required = false;\n    let formControl = new FormControl();\n    let nestedForm: any = this.form.controls[formGroup];\n\n    if (nestedForm.controls[index].get(field).validator) {\n      let validationResult = nestedForm.controls[index]\n        .get(field)\n        .validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  getIcones() {\n    this.loadingIcones = true;\n    this.foawService.getIcones().pipe(\n      finalize(() => {\n        this.loadingIcones = false;\n      })\n    ).subscribe(response => {\n      if (response.status === 200) {\n        this.icones = response.body['icones'];\n      }\n    });\n  }\n\n  onIconSelected(event) {\n    this.icone = event.classe;\n  }\n   \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\nimport { LogisticaYmsSetoresListaComponent } from './lista/lista.component';\nimport { LogisticaYmsSetoresCadastroComponent } from './cadastro/cadastro.component';\nimport { LogisticaYmsSetoresAssociacaoMateriaisComponent } from './associacao-materiais/associacao-materiais.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaYmsSetoresListaComponent,\n  },\n  {\n    path: 'novo',\n    component: LogisticaYmsSetoresCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: LogisticaYmsSetoresCadastroComponent,\n  },\n  {\n    path: 'materiais/:id',\n    component: LogisticaYmsSetoresAssociacaoMateriaisComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LogisticaYmsSetoresRoutingModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Setores\\\">\\n  <button\\n  type=\\\"button\\\"\\n  (click)=\\\"onExport()\\\"\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\n  Exportar\\n</button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onReset()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-4 pl-0\\\">\\n              <label for=\\\"tiposSetor\\\">Tipo de Setor</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"tiposSetor\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingTiposSetor\\\"\\n                labelForId=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\n                bindLabel=\\\"NM_SETO_TIPO\\\"\\n                bindValue=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\n                id=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\n                formControlName=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\n                (change)=\\\"getFilterSetores({'UUID_LOGI_YMS_SETO_TIPO': $event?.UUID_LOGI_YMS_SETO_TIPO || ''})\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-4 pl-0\\\">\\n              <label for=\\\"filterSetores\\\">Setor</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"filterSetores\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingSetores\\\"\\n                labelForId=\\\"UUID_LOGI_YMS_SETO\\\"\\n                bindLabel=\\\"NM_SETO\\\"\\n                bindValue=\\\"UUID_LOGI_YMS_SETO\\\"\\n                id=\\\"UUID_LOGI_YMS_SETO\\\"\\n                formControlName=\\\"UUID_LOGI_YMS_SETO\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              (keydown.enter)=\\\"onFilter()\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n            </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\n                (keydown.enter)=\\\"onFilter()\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\n      <div class=\\\"w-100\\\">\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" ></th>\\n              <th scope=\\\"col\\\" >ID</th>\\n              <th scope=\\\"col\\\" >Descrição</th>\\n              <th scope=\\\"col\\\" >Tipo de Setor</th>\\n              <th scope=\\\"col\\\" style=\\\"width:160px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let setor of setores\\\"  [class.table-active]=\\\"setor?.UUID_LOGI_YMS_SETO == setorSelecionado?.UUID_LOGI_YMS_SETO && showDetailPanel\\\">\\n              <td  [ngClass]=\\\"setor.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n                <div [class]=\\\"setor.DS_ICON\\\"></div>\\n              </td>\\n              <td>{{setor.UUID_LOGI_YMS_SETO }}</td>\\n              <td >{{ setor.NM_SETO | uppercase}}</td>\\n              <td >{{ setor.NM_SETO_TIPO | uppercase}}</td>\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"setor.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(setor)\\\">\\n                    <i [ngClass]=\\\"setor.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', setor.UUID_LOGI_YMS_SETO]\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Associar Materiais\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../materiais/', setor.UUID_LOGI_YMS_SETO]\\\">\\n                    <i class=\\\"fas fa-th-large\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(setor)\\\">\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </div>\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel panelTitle=\\\"Detalhes\\\">\\n        <tabset>\\n          <tab heading=\\\"Dados do Setor\\\">\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n              <div>\\n                <div class=\\\"d-flex w-100\\\">\\n                  <div class=\\\"rounded-circle text-white icon-40 bg-secondary\\\" >\\n                    <i [class]=\\\"setorSelecionado?.DS_ICON\\\"></i>\\n                  </div>\\n                  <strong class=\\\"my-auto ml-3 text-truncate\\\" >\\n                    {{setorSelecionado?.NM_SETO | uppercase}}\\n                  </strong>\\n                </div>\\n                <div class=\\\"form-row mt-3\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>ID do Setor</label>\\n                    <div>{{ setorSelecionado?.UUID_LOGI_YMS_SETO}}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Tipo de Setor</label>\\n                    <div>{{ setorSelecionado?.NM_SETO_TIPO | uppercase}}</div>\\n                  </div>\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Filial</label>\\n                    <div>{{ setorSelecionado?.NM_FILI | uppercase}}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row \\\">\\n                  <div class=\\\"form-group col-lg-12\\\">\\n                    <label>Observação:</label>\\n                    <div>{{ setorSelecionado?.DS_OBSE | uppercase}}</div>\\n                  </div>\\n                </div>\\n                <hr>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col\\\">\\n                    <label *ngIf=\\\"!setorSelecionado?.DT_ATUA == null\\\">Usuário Responsável Pelo Cadastro</label>\\n                    <label *ngIf=\\\"setorSelecionado?.DT_ATUA == null\\\">Usuário Responsável Pela Atualização</label>\\n                    <div>{{ setorSelecionado?.NM_USUA | uppercase }}</div>\\n                  </div>\\n                  <div class=\\\"form-group col\\\">\\n                    <label *ngIf=\\\"!setorSelecionado?.DT_ATUA == null\\\">Data do Cadastro</label>\\n                    <label *ngIf=\\\"setorSelecionado?.DT_ATUA == null\\\">Data da Atualização</label>\\n                    <div>{{(setorSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (setorSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </tab>\\n          <tab  heading=\\\"Materiais Associados\\\">\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n              <div class=\\\"mb-3\\\">\\n                <custom-table  [config]=\\\"tableConfigAssocMateriais\\\"  class=\\\"text-center\\\" *ngIf=\\\"!loadingAssociacaoMateriais && !noAssocMateriais\\\">\\n                  <ng-template #thead let-thead>\\n                    <tr>\\n                      <th scope=\\\"col\\\"  width=\\\"20%\\\">Código</th>\\n                      <th scope=\\\"col\\\"  width=\\\"80%\\\">Material</th>\\n                    </tr>\\n                  </ng-template>\\n                  <ng-template #tbody let-tbody>\\n                    <tr *ngFor=\\\"let material of associacaoMateriais\\\">\\n                      <td  width=\\\"20%\\\">{{ material?.ID_REFE_ERP }}</td>\\n                      <td  width=\\\"80%\\\">{{ material?.NM_MATE | uppercase }}</td>\\n                    </tr>\\n                  </ng-template>\\n                </custom-table>\\n                <message\\n                  *ngIf=\\\"loadingAssociacaoMateriais\\\"\\n                  icon=\\\"fas fa-cog fa-spin\\\"\\n                  text=\\\"Estamos pesquisando os materiais para você...\\\">\\n                </message>\\n                <div [hidden]=\\\"loadingAssociacaoMateriais || !noAssocMateriais\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n                  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n                </div>\\n              </div>\\n            </div>\\n          </tab>  \\n          <tab  heading=\\\"Intervalos\\\">\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n              <div class=\\\"mb-3\\\">\\n                <custom-table  [config]=\\\"tableConfigAssocIntervalos\\\" class=\\\"text-center\\\" *ngIf=\\\"!loadingAssociacaoIntervalos && !noAssocIntervalos\\\">\\n                  <ng-template #thead let-thead>\\n                    <tr>\\n                      <th scope=\\\"col\\\"  width=\\\"40%\\\">Tipo de Circuito</th>\\n                      <th scope=\\\"col\\\"  width=\\\"40%\\\">\\n                        Tipo de Intervalo\\n                        <button\\n                          class=\\\"btn-icon-sm\\\"\\n                          [tooltip]=\\\"tooltipTipoIntervalo\\\"\\n                          container=\\\"body\\\"\\n                          placement=\\\"top\\\"  \\n                          >\\n                          <i class=\\\"far fa-question-circle\\\"></i>\\n                        </button>\\n                      \\n                        <ng-template #tooltipTipoIntervalo>\\n                          <table>\\n                            <tbody>\\n                              <tr>\\n                                <th><i class=\\\"fas fa-circle text-primary\\\"></i> FIXO :Tempo fixo de permanência</th>\\n                              </tr>\\n                              <br>\\n                              <tr>\\n                                <th><i class=\\\"fas fa-circle text-primary\\\"></i>Variável : Tempo de permanência pode variar de acordo com a quantidade</th>\\n                              </tr>\\n                            </tbody>\\n                          </table>\\n                        </ng-template>\\n\\n                      </th>\\n                      <th scope=\\\"col\\\"  width=\\\"20%\\\">Tempo</th>\\n                    </tr>\\n                  </ng-template>\\n                  <ng-template #tbody let-tbody>\\n                    <tr *ngFor=\\\"let intervalo of associacaoIntervalos\\\">\\n                      <td  width=\\\"40%\\\">{{ intervalo?.NM_CIRC_TIPO  | uppercase }}</td>\\n                      <td  width=\\\"40%\\\">{{ intervalo?.TP_INTV | uppercase }}</td>\\n                      <td  width=\\\"20%\\\">{{ convertMysqlTime(intervalo?.HR_INTV) | date: 'HH:mm'}}</td>\\n                    </tr>\\n                  </ng-template>\\n                </custom-table>\\n                <message\\n                  *ngIf=\\\"loadingAssociacaoIntervalos\\\"\\n                  icon=\\\"fas fa-cog fa-spin\\\"\\n                  text=\\\"Estamos pesquisando os intervalos para você...\\\">\\n                </message>\\n                <div [hidden]=\\\"loadingAssociacaoIntervalos || !noAssocIntervalos\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n                  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n                </div>\\n              </div>\\n            </div>\\n          </tab>       \\n        </tabset> \\n      </detail-panel>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","import { ILogisticaYmsSetores } from './../models/setores';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n// angular\nimport { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n// services\nimport { LogisticaYmsSetoresService } from '../services/setores.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\n\n// rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'logistica-Setores-associacao-materiais',\n  templateUrl: './associacao-materiais.component.html',\n  styleUrls: ['./associacao-materiais.component.scss']\n})\nexport class LogisticaYmsSetoresAssociacaoMateriaisComponent implements OnInit {\n\n  appTitle = \"Associação Material\";\n\n  form: FormGroup;\n  formMateriais: FormGroup;\n\n  breadCrumbTree: any = [];\n  idSubModulo: number;\n  $subscription: Subscription;\n\n  /*loading*/\n  loading = false;\n  loadingNavBar = false;\n  noResult = true;\n  loadingSetores: boolean;\n  /*loading*/\n\n  materiais = [];\n  materiaisLoading = false;\n  loadingMateriais = false;\n  setores: Array<ILogisticaYmsSetores>;\n\n  materiaisAssociados = [];\n  materiaisAssociadosLoading = false;\n\n  tableConfigMateriaisAssociados: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n    hover: false,\n  };\n  \n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  toggle = {\n    materiais: false,\n    materiaisAssociados: false\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private setoresService: LogisticaYmsSetoresService,\n    private pnotify: PNotifyService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.form = this.formBuilder.group({\n      \"UUID_LOGI_YMS_SETO\": [{value:null, disabled:true}],\n      \"NM_SETO\": [null],\n    });\n\n    this.formMateriais = this.formBuilder.group({\n      buscarPor: ['NM_MATE'],\n      pesquisa: [null, Validators.required],\n      UUID_REFE_ERP:[null],\n      NM_MATE:[null],\n      NM_CLAS:[null],\n      NM_LINH:[null],\n    });\n  }\n\n  ngOnInit() {\n\n    this.atividadesService\n      .registrarAcesso()\n      .subscribe();\n    this.onActivatedRoute();\n    this.setBreadCrumb();\n    this.getSetores();\n  }\n\n  onActivatedRoute() {\n    const params = this.activatedRoute.snapshot.params;\n\n    if (!params?.id){\n      this.loading = false;\n      return\n    }\n    this.form.get('UUID_LOGI_YMS_SETO').setValue(params['id'])\n    this.getMateriaisAssociados({\"UUID_LOGI_YMS_SETO\": params?.id})  \n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'Cadastro',\n        routerLink: `/logistica/cadastros/${id}`,\n      },\n      {\n        descricao: 'Setores',\n        routerLink: `../../`,\n      },\n      {\n        descricao: this.appTitle\n      }\n    ];\n  }\n\n  getSetores() {\n    this.loadingSetores = true;\n    this.setoresService\n      .getSetores({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingSetores = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.setores = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      });\n  }\n\n  getMateriais(){\n\n    const buscarPor = this.formMateriais.get('buscarPor')?.value;\n    const pesquisa = this.formMateriais.get('pesquisa')?.value;\n\n    let params = {};\n    \n    if(buscarPor){\n      params[buscarPor] = pesquisa ?? '';\n    }\n    params['situacao'] = '1';\n    params['qtItensPagina'] = 100;\n\n    this.materiaisLoading = true\n\n    this.setoresService\n      .getMateriais(params)\n      .pipe(\n        finalize(() => {\n          this.materiaisLoading = false;\n        })\n      )\n      .subscribe(\n        response => {\n          let materiais = response.body['result'];\n          this.materiais = materiais.filter(material => {\n            return !this.materiaisAssociados.some(item => item.UUID_MATE == material.ID)\n          })\n\n          this.tableConfigMateriais.fixedHeader = this.materiais.length > 9 ? true : false;\n         \n        }\n      )\n  }\n\n  getMateriaisAssociados(params){\n    this.loadingMateriais = true;\n    params.IN_STAT = '1';\n    params.IN_PAGI = '0';\n    params.ORDE_BY = 'ID_REFE_ERP'\n\n    this.setoresService\n      .getMateriaisAssociados(params)\n      .pipe(\n        finalize(() => {\n          this.loadingMateriais = false;\n        })\n      )\n      .subscribe(\n        response => {\n          if(response.status !== 200){\n            return\n          }\n\n          this.materiaisAssociados = response.body['data'];\n          this.tableConfigMateriaisAssociados.fixedHeader = this.materiaisAssociados.length > 9 ? true : false;\n        }\n      )\n  }\n\n  onAssociarMateriais(){\n    \n    let materiais = this.materiais.filter(material => material.checked);\n    this.toggle.materiais = false;\n\n    materiais.map(item => {\n      \n      item.loading = true;\n\n      if(this.materiaisAssociados.some(material => material?.ID_REFE_ERP === item.ID_REFE_ERP)){\n        return\n      }\n\n      let params = {\n        \"UUID_LOGI_YMS_SETO\": this.form.get(\"UUID_LOGI_YMS_SETO\").value ?? \"\",\n        \"UUID_MATE\": item?.ID ?? \"\",\n        \"IN_STAT\": \"1\"\n      }\n      this.setoresService\n        .postMateriaisAssociados(params)\n        .subscribe(\n          response => {\n            if(response.status === 200){\n              \n              this.materiaisAssociados = [...this.materiaisAssociados,\n                {\n                  ...item,\n                  checked: false,\n                  loading: false,\n                  UUID_MATE: item.ID,\n                  UUID_LOGI_YMS_SETO: this.form.get('UUID_LOGI_YMS_SETO').value\n                }\n              ];\n              \n              this.materiais = this.materiais.filter(material => !material.checked)\n              this.tableConfigMateriaisAssociados.fixedHeader = this.materiaisAssociados.length > 9 ? true : false;\n\n            }\n          }\n        )\n    });\n\n  }\n\n  confirmDelete(): Observable<boolean> {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onRemoverAssociacao(material?){\n    \n    let materiais = material ? [material] : this.materiaisAssociados.filter(material => material.checked);\n    this.toggle.materiaisAssociados = false;\n\n    if(materiais.length == 0){\n      this.pnotify.notice(\"Nenhum material selecionado.\");\n      return\n    }\n\n    this.confirmDelete()\n      .subscribe(\n        (response: boolean) => {\n          \n          if(!response){\n            return\n          }\n          materiais.map(item => {\n            item.IN_STAT = '0';\n            item.loading = true;\n\n            this.setoresService\n              .deleteAssociacoes(item)\n              .pipe(finalize(() => {\n                item.loading = false;\n              }))\n              .subscribe(\n                response => {\n                  \n                  if(response.status !== 200){\n                    return\n                  }\n                  this.materiaisAssociados = this.materiaisAssociados\n                    .filter(material => material.UUID_MATE != item.UUID_MATE);\n                  \n                  this.tableConfigMateriaisAssociados.fixedHeader = this.materiaisAssociados.length > 9 ? true : false;\n                }\n              );\n              (error) => {\n                const message = error.error.message\n                message ? this.pnotify.error(message): this.pnotify.error();\n              }\n          \n          })\n          \n        }\n      )\n  }\n\n  onToggleAll(item: string){\n    this.toggle[item] = !this.toggle[item];\n    this[item].map(material => material.checked = this.toggle[item]);\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n \n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL3NldG9yZXMvYXNzb2NpYWNhby1tYXRlcmlhaXMvYXNzb2NpYWNhby1tYXRlcmlhaXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2lzdGljYS95bXMvc2V0b3Jlcy9hc3NvY2lhY2FvLW1hdGVyaWFpcy9hc3NvY2lhY2FvLW1hdGVyaWFpcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbltkaXNhYmxlZF17XG4gIGN1cnNvcjogbm8tZHJvcDtcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9zZXRvcmVzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  PaginationModule,\n  TooltipModule,\n  TabsModule,\n  TimepickerModule,\n  BsDatepickerModule,\n  ModalModule,\n} from 'ngx-bootstrap';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n\nimport { LogisticaYmsSetoresListaComponent } from './lista/lista.component';\nimport { LogisticaYmsSetoresCadastroComponent } from './cadastro/cadastro.component';\n\nimport { LogisticaYmsSetoresRoutingModule } from './setores-routing.module';\nimport { LogisticaYmsSetoresAssociacaoMateriaisComponent } from './associacao-materiais/associacao-materiais.component';\n\n@NgModule({\n  declarations: [\n    LogisticaYmsSetoresListaComponent,\n    LogisticaYmsSetoresCadastroComponent,\n    LogisticaYmsSetoresAssociacaoMateriaisComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    LogisticaYmsSetoresRoutingModule\n  ]\n})\nexport class LogisticaYmsSetoresModule { }\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Setores\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\n    (click)=\\\"postSetores()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\n        <legend>Dados da Setor</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-4 pl-0\\\">\\n            <label for=\\\"classe\\\">Icone</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"icones\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              labelForId=\\\"classe\\\"\\n              [loading]=\\\"loadingIcones\\\"\\n              bindLabel=\\\"classe\\\"\\n              bindValue=\\\"classe\\\"\\n              id=\\\"classe\\\"\\n              (change)=\\\"onIconSelected($event)\\\"\\n              formControlName=\\\"DS_ICON\\\"\\n              [ngClass]=\\\"onFieldError('DS_ICON') + ' ' + onFieldRequired('DS_ICON')\\\"\\n\\n              >\\n              <ng-template ng-label-tmp let-item=\\\"item\\\" let-clear=\\\"clear\\\">\\n                <div class=\\\"d-flex align-items-center\\\">\\n                    <div [class]=\\\"item.classe\\\" style=\\\"min-width: 25px;\\\"></div>\\n                    <div>{{item.classe}}</div>\\n                  </div>\\n                </ng-template>\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n                <div class=\\\"d-flex align-items-center\\\">\\n                  <div [class]=\\\"item.classe\\\" style=\\\"min-width: 25px;\\\"></div>\\n                  <div>{{item.classe}}</div>\\n                </div>\\n              </ng-template>\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('DS_ICON')\\\" message=\\\"Icone é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-8 pl-0\\\">\\n            <label for=\\\"NM_SETO\\\">Descrição</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_SETO\\\"\\n              formControlName=\\\"NM_SETO\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('NM_SETO') + ' ' + onFieldRequired('NM_SETO')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_SETO')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\n            <label for=\\\"tiposSetor\\\">Tipo de Setor</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tiposSetor\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingTiposSetor\\\"\\n              labelForId=\\\"tiposSetor\\\"\\n              bindLabel=\\\"NM_SETO_TIPO\\\"\\n              bindValue=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\n              id=\\\"tiposSetor\\\"\\n              formControlName=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\n              [ngClass]=\\\"onFieldError('UUID_LOGI_YMS_SETO_TIPO') + ' ' + onFieldRequired('UUID_LOGI_YMS_SETO_TIPO')\\\"\\n              >\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('UUID_LOGI_YMS_SETO_TIPO')\\\" message=\\\"Tipo de Setor é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\n            <label for=\\\"filiais\\\">Filial</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"filiais\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingFiliais\\\"\\n              labelForId=\\\"filiais\\\"\\n              bindLabel=\\\"NM_FILI\\\"\\n              bindValue=\\\"UUID_LOGI_FILI\\\"\\n              id=\\\"filiais\\\"\\n              formControlName=\\\"UUID_LOGI_FILI\\\"\\n              [ngClass]=\\\"onFieldError('UUID_LOGI_FILI') + ' ' + onFieldRequired('UUID_LOGI_FILI')\\\"\\n              >\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('UUID_LOGI_FILI')\\\" message=\\\"Filial é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </fieldset>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\n        <legend>Intervalos</legend>\\n        <div formArrayName=\\\"intervalos\\\" *ngIf=\\\"loadingTiposCircuitoSetor != true\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\n              <div class=\\\"mtc-title\\\"></div>\\n              <div>\\n                <a\\n                  class=\\\"text-secondary\\\"\\n                  (click)=\\\"onAddIntervalos()\\\"\\n                  href=\\\"javascript:void(0)\\\">\\n                  <b>Adicionar</b>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\"  *ngFor=\\\"let item of formIntervalos.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-5 pl-0\\\">\\n                  <label for=\\\"tiposCircuito\\\">Tipo de Circuito</label>\\n                  <ng-select\\n                    [searchable]=\\\"true\\\"\\n                    [clearable]=\\\"true\\\"\\n                    [items]=\\\"tiposCircuito\\\"\\n                    [virtualScroll]=\\\"true\\\"\\n                    placeholder=\\\"Selecione...\\\"\\n                    [loading]=\\\"loadingTiposCircuito\\\"\\n                    labelForId=\\\"tiposCircuito\\\"\\n                    bindLabel=\\\"NM_CIRC_TIPO\\\"\\n                    bindValue=\\\"UUID_LOGI_YMS_CIRC_TIPO\\\"\\n                    id=\\\"tiposCircuito\\\"\\n                    formControlName=\\\"UUID_LOGI_YMS_CIRC_TIPO\\\"\\n                    [ngClass]=\\\"onNestedFieldError('intervalos', i, 'UUID_LOGI_YMS_CIRC_TIPO') + ' ' + onNestedFieldRequired('intervalos', i, 'UUID_LOGI_YMS_CIRC_TIPO')\\\"\\n\\n                    >\\n                  </ng-select>\\n                </div>\\n                <div class=\\\"form-group col-md-4 pl-0\\\">\\n                  <label for=\\\"TP_INTV\\\">tipo de tempo médio de Permanência</label>\\n                  <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"false\\\"\\n                  [items]=\\\"tipos\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  labelForId=\\\"tipo\\\"\\n                  bindLabel=\\\"nome\\\"\\n                  bindValue=\\\"cod\\\"\\n                  id=\\\"tipo\\\"\\n                  formControlName=\\\"TP_INTV\\\"\\n                  [ngClass]=\\\"onNestedFieldError('intervalos', i, 'TP_INTV') + ' ' + onNestedFieldRequired('intervalos', i, 'TP_INTV')\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  >\\n                  </ng-select>\\n                </div>\\n                <div class=\\\"form-group col-md-2 pl-0\\\">\\n                  <label for=\\\"HR_INTV\\\" style=\\\"margin-bottom: 2px;\\\">Tempo Médio</label>\\n                  <timepicker\\n                  [showMeridian]=\\\"false\\\"\\n                  [showSpinners]=\\\"false\\\"\\n                  [mousewheel]=\\\"false\\\"\\n                  formControlName=\\\"HR_INTV\\\"\\n                  [ngClass]=\\\"onNestedFieldError('intervalos', i, 'HR_INTV') + ' ' + onNestedFieldRequired('intervalos', i, 'HR_INTV')\\\"\\n                  >\\n                </timepicker>\\n                </div>\\n                <div class=\\\"col-1 pt-4 d-flex justify-content-center\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon\\\"\\n                    (click)=\\\"onDeleteTipoCircuito(i)\\\">\\n                    <i class=\\\"fas fa-trash\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"loadingTiposCircuitoSetor == true\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-cog fa-spin\\\"\\n              text=\\\"Estamos pesquisando os intervalos para você...\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <br>\\n      </fieldset>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\n        <legend>Observação</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n          </div>\\n        </div>\\n        <br>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n</app-body>\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button \\n    [disabled]=\\\"loadingNavBar === true\\\"\\n    [routerLink]=\\\"['../../']\\\"\\n    >\\n    Finalizar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"mtc-title\\\">Dados da Setor</div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"setores\\\">Setor</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"setores\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingSetores\\\"\\n              labelForId=\\\"setores\\\"\\n              bindLabel=\\\"NM_SETO\\\"\\n              bindValue=\\\"UUID_LOGI_YMS_SETO\\\"\\n              id=\\\"setores\\\"\\n              formControlName=\\\"UUID_LOGI_YMS_SETO\\\"\\n              >\\n            </ng-select>\\n          </div>\\n        </div>\\n      </form>\\n      <div class=\\\"row mb-4\\\">\\n        <div class=\\\"col mb-3\\\">\\n          <hr>\\n        </div>\\n      </div>\\n      <div [hidden]=\\\"loadingMateriais\\\">\\n        <div class=\\\"row mb-2 mt-4\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Materiais associados a Setor</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-danger\\\"\\n                (click)=\\\"onRemoverAssociacao()\\\">\\n                <i class=\\\"fas fa-trash\\\"></i>\\n                <span>Limpar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!materiaisAssociadosLoading && materiaisAssociados.length > 0\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigMateriaisAssociados\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggle?.materiaisAssociados ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll('materiaisAssociados')\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" width=\\\"20%\\\">ID</th>\\n                  <th scope=\\\"col\\\" width=\\\"70%\\\">Material</th>\\n                  <th scope=\\\"col\\\" width=\\\"5%\\\"></th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of materiaisAssociados\\\" >\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td width=\\\"20%\\\">{{ item.ID_REFE_ERP }}</td>\\n                  <td width=\\\"70%\\\">\\n                   {{ item.NM_MATE | uppercase }}\\n                  </td>\\n                  <td class=\\\"text-center\\\" width=\\\"5%\\\" height=\\\"26px\\\">\\n                    <btn-icon\\n                      icon=\\\"fas fa-trash\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onRemoverAssociacao(item)\\\"\\n                      *ngIf=\\\"!item.loading\\\"  \\n                    >\\n                    </btn-icon>\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!loadingMateriais && materiaisAssociados.length === 0\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-exchange-alt\\\"\\n              text=\\\"Nenhuma associação encontrada\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"loadingMateriais\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-cog fa-spin\\\"\\n              text=\\\"Estamos pesquisando os materiais para você...\\\">\\n            </message>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <div class=\\\"row mb-2\\\">\\n        <div class=\\\"col mt-auto\\\">\\n          <div class=\\\"mtc-title mb-0\\\">Pesquisa de Materiais</div>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <div class=\\\"d-flex justify-content-end\\\">\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\n              (click)=\\\"getMateriais()\\\"\\n              [disabled]=\\\" formMateriais.valid == false\\\">\\n              <i class=\\\"fas fa-search\\\"></i>\\n              <span \\n              [tooltip]=\\\"formMateriais.valid == false ? 'Digite um termo de pesquisa':''\\\"\\n              container=\\\"body\\\"\\n              placement =\\\"left\\\">Pesquisar</span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <advanced-filter>\\n        <form [formGroup]=\\\"formMateriais\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-3\\\">\\n              <label for=\\\"cdItem\\\">BUSCAR POR</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"buscarPor\\\"\\n              >\\n                <option value=\\\"ID_REFE_ERP\\\">ID ERP</option>\\n                <option value=\\\"NM_MATE\\\" selected> Nome Material</option>\\n                <option value=\\\"NM_CLAS\\\">Classe</option>\\n                <option value=\\\"NM_LINH\\\">Linha</option>\\n              </select>\\n            </div>\\n\\n            <div class=\\\"form-group col-9\\\">\\n              <label>TERMO DE PESQUISA</label>\\n              <div class=\\\"input-group\\\">\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  placeholder=\\\"Digite...\\\"\\n                  formControlName=\\\"pesquisa\\\"\\n                  (keydown.enter)=\\\"getMateriais()\\\"\\n                >\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n      <div *ngIf=\\\"materiais.length > 0 && !materiaisLoading\\\">\\n        <div class=\\\"row mb-2\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Seleção de Material</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\n                (click)=\\\"onAssociarMateriais()\\\"\\n                [disabled]=\\\"searching === true || form.valid === false\\\">\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                <span\\n                  [tooltip]=\\\"form.valid == false ? 'Selecione uma Setor':''\\\"\\n                  container=\\\"body\\\"\\n                  placement =\\\"left\\\">Associar\\n                </span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigMateriais\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggle?.materiais ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll('materiais')\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 90%\\\">Materiais</th>\\n                  <th style=\\\"width: 5%\\\"></th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of materiais\\\">\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 90%\\\"\\n                    (click)=\\\"item.checked = !item.checked\\\">\\n                    {{ item.ID_REFE_ERP }} - {{ item.NM_MATE | uppercase }}\\n                  </td>\\n                  <td style=\\\"width: 5%; height: 26px\\\">\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"materiaisLoading\\\">\\n        <div class=\\\"col\\\">\\n          <message\\n            icon=\\\"fas fa-cog fa-spin\\\"\\n            text=\\\"Estamos pesquisando os materiais para você...\\\">\\n          </message>\\n        </div>\\n      </div>\\n      <div>\\n        <div class=\\\"row\\\" *ngIf=\\\"(materiais.length == 0) && !materiaisLoading\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-box-open\\\"\\n              text=\\\"Nenhuma informação encontrada\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <!-- <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-search\\\"\\n              text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\n            </message>\\n          </div>\\n        </div> -->\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";"]}