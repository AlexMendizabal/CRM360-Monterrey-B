{"version":3,"sources":["webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-contrato/lista/lista.component.scss","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-contrato/lista/lista.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-contrato/lista/lista.component.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-contrato/cadastro/cadastro.component.html","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-contrato/tipo-contrato.module.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-contrato/tipo-contrato-routing.module.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-contrato/cadastro/cadastro.component.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-contrato/cadastro/cadastro.component.scss"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","TecnologiaInformacaoCadastrosTipoContratoListaComponent","route","pnotify","activatedRoute","tipoContratoService","formBuilder","confirmModalService","routerService","dateService","loading","loadingNavBar","tipos","cod","nome","subtitles","id","text","color","itemsPerPage","currentPage","begin","end","buildForm","setBreadCrumb","onActivatedRoute","$activatedRouteSubscription","unsubscribe","queryParams","subscribe","response","_response","getBase64UrlParams","form","patchValue","getTipoContrato","getParams","group","ID_TECN_INFO_CONT_TIPO","NM_CONT_TIPO","IN_STAT","PAGI","TIME","Date","getTime","snapshot","params","idSubModulo","breadCrumbTree","descricao","routerLink","get","setValue","navigate","relativeTo","setBase64UrlParams","pipe","status","tipoContratos","body","totalItems","noResult","error","tipoContrato","stat","confirmChange","asObservable","result","postTipoContrato","success","showConfirm","event","page","_params","_obj","value","prop","convertToUrlDate","selector","template","TecnologiaInformacaoTipoContratoModule","declarations","imports","forRoot","providers","provide","useValue","routes","path","component","TecnologiaInformacaoCadastrosTipoContratoModuleRoutingModule","forChild","exports","TecnologiaInformacaoCadastrosTipoContratoCadastroComponent","router","titleService","atividadesService","registrarAcesso","setFormBuilder","appTitle","setTitle","required","DS_OBSE","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","reset"],"mappings":"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","file":"tipo-contrato-tipo-contrato-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2NvbnRyYXRvcy90aXBvLWNvbnRyYXRvL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Tipo de Contrato\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"ID_TECN_INFO_CONT_TIPO\\\">ID</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"ID_TECN_INFO_CONT_TIPO\\\"\\r\\n                formControlName=\\\"ID_TECN_INFO_CONT_TIPO\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"NM_CONT_TIPO\\\">Tipo de Contrato</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"NM_CONT_TIPO\\\"\\r\\n                formControlName=\\\"NM_CONT_TIPO\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\r\\n              </ng-template>\\r\\n            </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div>\\r\\n      <table  class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n        <thead class=\\\"thead-light\\\">\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">ID </th>\\r\\n            <th scope=\\\"col\\\">Tipo de Contrato</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:80px\\\"></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let tipoContrato of tipoContratos | slice : begin : end; let i = index\\\">\\r\\n            <td [ngClass]=\\\"tipoContrato.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n            {{tipoContrato.ID_TECN_INFO_CONT_TIPO}}\\r\\n            </td>\\r\\n            <td>{{ tipoContrato.NM_CONT_TIPO | uppercase }}</td>\\r\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n              <span class=\\\"mr-3\\\" [tooltip]=\\\"tipoContrato.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(tipoContrato)\\\">\\r\\n                  <i [ngClass]=\\\"tipoContrato.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openRegister(tipoContrato)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div>\\r\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\n//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { TecnologiaInformacaoCadastroTipoContratoService } from '../services/tipo-contrato.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\nimport { ITecnologiaInformacaoTipoContrato } from './../models/tipoContrato';\r\nimport { PageChangedEvent } from 'ngx-bootstrap';\r\n@Component({\r\n  selector: 'tecnologia-informacao-cadastros-tipo-contrato-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class TecnologiaInformacaoCadastrosTipoContratoListaComponent\r\n  implements OnInit, OnDestroy {\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n\r\n  idSubModulo: number;\r\n  tipoContratos: Array<ITecnologiaInformacaoTipoContrato>;\r\n  noResult: boolean;\r\n  loading = true; //Loading FullPage\r\n  loadingNavBar = false; //Loading do NAVBAR\r\n\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n\r\n  // Tipos de Situação dos Tipos de Contratos (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '0',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private tipoContratoService: TecnologiaInformacaoCadastroTipoContratoService,\r\n    private formBuilder: FormBuilder,\r\n    private confirmModalService: ConfirmModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        this.getTipoContrato(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_TECN_INFO_CONT_TIPO: [null],\r\n      NM_CONT_TIPO: [null],\r\n      IN_STAT: [null],\r\n      PAGI: [1],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/tecnologia-informacao/home`,\r\n      },\r\n      {\r\n        descricao: 'Contratos',\r\n        routerLink: `/tecnologia-informacao/contratos/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipo de Contrato',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getTipoContrato(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n\r\n    this.tipoContratoService\r\n      .getTipoContrato(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.tipoContratos = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.tipoContratos = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  changeType(tipoContrato: ITecnologiaInformacaoTipoContrato) {\r\n    const stat = tipoContrato.IN_STAT == '1' ? '0' : '1';\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          tipoContrato.IN_STAT = stat;\r\n          return this.tipoContratoService.postTipoContrato(tipoContrato);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          tipoContrato.IN_STAT = tipoContrato.IN_STAT == '1' ? '0' : '1';\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == '1')\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  openRegister(tipoContrato: ITecnologiaInformacaoTipoContrato) {\r\n    this.route.navigate(['../', tipoContrato.ID_TECN_INFO_CONT_TIPO], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(tipoContrato),\r\n    });\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Cadastro de Tipo de Contrato\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false\\\"\\r\\n    (click)=\\\"postTipoContrato()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Tipo de Contrato</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-8 pl-0\\\">\\r\\n            <label for=\\\"NM_CONT_TIPO\\\">Tipo de Contrato</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_CONT_TIPO\\\"\\r\\n              formControlName=\\\"NM_CONT_TIPO\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_CONT_TIPO') + ' ' + onFieldRequired('NM_CONT_TIPO')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_CONT_TIPO')\\\" message=\\\"Tipo de Contrato é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-4 pl-0\\\">\\r\\n            <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"IN_STAT\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('IN_STAT')\\\">\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n              <option value=\\\"0\\\">Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('IN_STAT')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\r\\n            <legend>Observação</legend>\\r\\n            <div class=\\\"form-row justify-content-center\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n                <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";","import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport ptBr from '@angular/common/locales/pt';\r\nimport { defineLocale, ptBrLocale, BsDatepickerModule } from 'ngx-bootstrap';\r\nregisterLocaleData(ptBr);\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { TecnologiaInformacaoCadastrosTipoContratoListaComponent } from './lista/lista.component';\r\nimport { TecnologiaInformacaoCadastrosTipoContratoModuleRoutingModule } from './tipo-contrato-routing.module';\r\nimport { TecnologiaInformacaoCadastrosTipoContratoCadastroComponent } from './cadastro/cadastro.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TecnologiaInformacaoCadastrosTipoContratoListaComponent,\r\n    TecnologiaInformacaoCadastrosTipoContratoCadastroComponent,\r\n  ],\r\n  imports: [\r\n    TecnologiaInformacaoCadastrosTipoContratoModuleRoutingModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    NgBrazil,\r\n    TextMaskModule,\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\r\n})\r\nexport class TecnologiaInformacaoTipoContratoModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n//components\r\nimport { TecnologiaInformacaoCadastrosTipoContratoListaComponent } from './lista/lista.component';\r\nimport { TecnologiaInformacaoCadastrosTipoContratoCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TecnologiaInformacaoCadastrosTipoContratoListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: TecnologiaInformacaoCadastrosTipoContratoCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: TecnologiaInformacaoCadastrosTipoContratoCadastroComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TecnologiaInformacaoCadastrosTipoContratoModuleRoutingModule { }\r\n","import { ITecnologiaInformacaoTipoContrato } from './../models/tipoContrato';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { TecnologiaInformacaoCadastroTipoContratoService } from '../services/tipo-contrato.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  AbstractControl,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n//interfaces\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'tecnologia-informacao-cadastros-tipo-contrato-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class TecnologiaInformacaoCadastrosTipoContratoCadastroComponent\r\n  implements OnInit, OnDestroy {\r\n  noResult: boolean;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  tipoContratos: Array<ITecnologiaInformacaoTipoContrato>;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private routerService: RouterService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n    private tipoContratoService: TecnologiaInformacaoCadastroTipoContratoService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/tecnologia-informacao/home',\r\n      },\r\n      {\r\n        descricao: 'Contratos',\r\n        routerLink: `/tecnologia-informacao/contratos/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipo de Contrato',\r\n        routerLink: `./../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //Consumir informações que estão na rota para editar\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n      }\r\n    );\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      ID_TECN_INFO_CONT_TIPO: [null],\r\n      NM_CONT_TIPO: [null, [Validators.required]],\r\n      IN_STAT: ['1'],\r\n      DS_OBSE: [null],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postTipoContrato() {\r\n    this.loadingNavBar = true;\r\n    this.tipoContratoService\r\n      .postTipoContrato(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.form.reset();\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2NvbnRyYXRvcy90aXBvLWNvbnRyYXRvL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIn0= */\";"]}