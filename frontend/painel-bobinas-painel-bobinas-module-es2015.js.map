{"version":3,"sources":["./src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/formulario.module.ts","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/formulario.component.ts","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/lista/lista.component.scss","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/lista/lista.component.ts","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/endereco/endereco.component.ts","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/formulario.component.html","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/contato/contato.component.scss","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/contato/contato.service.ts","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/painel-bobinas.service.ts","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/lista/lista.component.html","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/endereco/endereco.component.html","./src/app/modules/comercial/comercial.service.ts","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/contato/contato.component.html","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/painel-bobinas-routing.module.ts","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/endereco/endereco.component.scss","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/painel-bobinas.module.ts","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/contato/contato.component.ts","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/formulario.component.scss","./src/app/modules/comercial/ciclo-vendas/painel-bobinas/formulario/modal/endereco/endereco.service.ts"],"names":[],"mappings":"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","file":"painel-bobinas-painel-bobinas-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n// ngx-bootstrap\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule, BsModalRef } from 'ngx-bootstrap/modal';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// angular2-counto\nimport { CountoModule } from 'angular2-counto';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialTemplatesModule } from '../../../templates/templates.module';\n\n//components\nimport { ComercialPainelBobinasFormularioComponent } from './formulario.component';\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent } from './modal/contato/contato.component';\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent } from './modal/endereco/endereco.component';\n\n//services\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService } from './modal/contato/contato.service';\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService } from './modal/endereco/endereco.service';\n\n@NgModule({\n  declarations: [\n    ComercialPainelBobinasFormularioComponent,\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent,\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PopoverModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    CarouselModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,\n    CurrencyMaskModule,\n    TextMaskModule,\n    NgBrazil,\n    CountoModule,\n    ReactiveFormsModule,\n    SharedModule,\n    TemplatesModule,\n    ComercialTemplatesModule,\n  ],\n  exports: [\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent,\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent,\n  ],\n  entryComponents: [\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent,\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent,\n  ],\n  providers: [\n    BsModalRef,\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService,\n    ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService,\n  ],\n})\nexport class ComercialCicloVendasPainelBobinasFormularioModule {}\n","import { ComercialCadastrosTransportadoraService } from './../../../cadastros/transportadoras/transportadoras.service';\nimport { ComercialCicloVendasCotacoesFormularioService } from './../../cotacoes/formulario/formulario.service';\nimport { FormasPagamento } from './../../../cadastros/formas-pagamento/models/formas-pagamento';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\nimport { MASKS } from 'ng-brazil';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { IComercialPainelBobinas } from './../models/painel-bobinas';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { finalize } from 'rxjs/operators';\nimport { ComercialPainelBobinasService } from '../painel-bobinas.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//interfaces\n\nimport { Subscription, forkJoin } from 'rxjs';\nimport { Location } from '@angular/common';\n\n//servicos\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService } from './modal/contato/contato.service';\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService } from './modal/endereco/endereco.service';\nimport { ComercialCadastrosFormasPagamentoService } from '../../../cadastros/formas-pagamento/formas-pagamento.service';\nimport { AuthService } from 'src/app/shared/services/core/auth.service';\n\n@Component({\n  selector: 'comercial-ciclo-vendas-painel-bobinas-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialPainelBobinasFormularioComponent\n  implements OnInit, OnDestroy\n{\n  public MASKS = MASKS;\n  private user = this.authService.getCurrentUser();\n  noResult: boolean;\n  loading = false;\n  loadingNavBar = false;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  formClientes: FormGroup;\n  materiaisSelecionados: Array<any> = [];\n  appTitle: string;\n  bsConfig: Partial<BsDatepickerConfig>;\n  loadingContato: boolean;\n  loadingClientes: boolean;\n  loadingFormasPagamento: boolean;\n\n  noClientes: boolean;\n  clientes: Array<any> = [];\n  contatos: Array<any> = [];\n  transportadoras: Array<any> = [];\n  loadingTransportadora: boolean;\n  tipoForm: number;\n  locaisEntrega: Array<any> = [];\n  locaisEntregaLoader: boolean;\n  materiais: Array<IComercialPainelBobinas>;\n  $activatedRouteSubscription: Subscription;\n  loaderDetalhesContatoSubscription: Subscription;\n  loaderDetalhesEnderecoSubscription: Subscription;\n  modalRef: BsModalRef;\n  /* Pagination */\n  itemsPerPage = 10;\n  totalItems = 10;\n  currentPage = 1;\n  begin = 0;\n  end = 10;\n  /* Pagination */\n  formasPagamento: Array<FormasPagamento> = [];\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private pnotify: PNotifyService,\n    private transportadoraService: ComercialCadastrosTransportadoraService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private routerService: RouterService,\n    private cotacoesFormularioService: ComercialCicloVendasCotacoesFormularioService,\n    private titleService: TitleService,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private modalService: BsModalService,\n    private painelBobinasService: ComercialPainelBobinasService,\n    private clientesService: ComercialClientesService,\n    private contatoDetalhesService: ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService,\n    private enderecoDetalhesService: ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService,\n    private formasPagamentoService: ComercialCadastrosFormasPagamentoService\n  ) {}\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.getLocalStorage();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n    this.getFormasPagamento();\n    this.getTransportadoras();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.appTitle = 'Cadastro';\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home',\n      },\n      {\n        descricao: 'Ciclo de Vendas',\n        routerLink: `/comercial/ciclo-vendas/${id}`,\n      },\n      {\n        descricao: 'Painel de Bobinas',\n        routerLink: `/comercial/ciclo-vendas/${id}/painel-bobinas`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //Consumir informações que estão na rota para editar\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n    this.unsetLoaderEvents();\n  }\n\n  unsetLoaderEvents(): void {\n    if (this.loaderDetalhesContatoSubscription) {\n      this.loaderDetalhesContatoSubscription.unsubscribe();\n    }\n    if (this.loaderDetalhesEnderecoSubscription) {\n      this.loaderDetalhesEnderecoSubscription.unsubscribe();\n    }\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription =\n      this.activatedRoute.queryParams.subscribe((response) => {\n        this.tipoForm = this.routerService.getBase64UrlParams(response);\n        this.form.get(['codContato']).disable();\n        this.form.get(['codEndereco']).disable();\n      });\n  }\n\n  getLocalStorage() {\n    try {\n      const materiais = localStorage.getItem('comercialPainelBobinasMateriais');\n      this.materiaisSelecionados = JSON.parse(atob(materiais));\n    } catch (error) {\n      this.materiaisSelecionados = [];\n      localStorage.removeItem('comercialPainelBobinasMateriais');\n      this.pnotify.error('Materiais não encontrados!');\n      this.location.back();\n    }\n  }\n\n  //formulario\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      nomeCliente: [{ value: null, disabled: true }, [Validators.required]],\n      codTransportadora: [\n        { value: 1525, disabled: false },\n        [Validators.required],\n      ],\n      nfMae: [{ value: null, disabled: false }, [Validators.required]],\n      codFormaPagamento: [\n        { value: null, disabled: false },\n        [Validators.required],\n      ],\n      valorMaterial: [{ value: null, disabled: false }, [Validators.required]],\n      aliquotaIcms: [{ value: null, disabled: false }, [Validators.required]],\n      codCliente: [{ value: null, disabled: false }],\n      codContato: [{ value: null, disabled: false }],\n      codEndereco: [{ value: null, disabled: false }],\n    });\n\n    this.formClientes = this.formBuilder.group({\n      buscarPor: ['1'],\n      pesquisa: [null, Validators.required],\n      pagina: [1],\n      situacao: ['Ativo'],\n      registros: [this.itemsPerPage],\n    });\n  }\n\n  getFormasPagamento() {\n    this.loadingFormasPagamento = true;\n    this.formasPagamentoService\n      .getListaFormasPagamento({ tipoConsulta: 2 })\n      .pipe(\n        finalize(() => {\n          this.loadingFormasPagamento = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response.success === true) {\n          this.formasPagamento = response.data;\n        } else {\n          this.pnotify.notice('Nenhum registro encontrado!');\n        }\n        (error) => {\n          this.pnotify.error();\n        };\n      });\n  }\n\n  getClientes() {\n    this.loadingClientes = true;\n    this.noClientes = this.clientes.length === 0 ? true : false;\n    this.clientesService\n      .getClientes(this.formClientes.value)\n      .pipe(\n        finalize(() => {\n          this.loadingClientes = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.responseCode === 200) {\n            this.clientes = response['result']['analitico'];\n            this.totalItems = this.clientes[0]['total'];\n            this.noClientes = false;\n          } else {\n            this.pnotify.notice('Nenhum registro encontrado!');\n            this.clientes = [];\n            this.noClientes = true;\n          }\n        },\n        error: (error) => {\n          this.pnotify.error();\n          this.clientes = [];\n        }\n      });\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.noClientes = true;\n    this.modalRef = this.modalService.show(template, {\n      animated: false,\n      class: 'modal-xl',\n    });\n  }\n  hideModal() {\n    this.modalRef.hide();\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n  onPageChanged(event) {\n    this.formClientes.get('pagina').setValue(event.page);\n    this.getClientes();\n  }\n\n  async postPainelBobinas() {\n    this.loading = true;\n    let request = [];\n    const materiais = this.materiaisSelecionados;\n    if (!materiais) {\n      return;\n    }\n    const promise = () => {\n      materiais.forEach((material) => {\n        const forms = this.form.value;\n        const params = material;\n\n        request.push(\n          this.painelBobinasService.postPainelBobinas(\n            this.setParams(forms, params)\n          )\n        );\n      });\n    };\n    \n    await Promise.resolve(promise());\n    forkJoin([request])\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe({\n        next: (responses: Array<any>) => {\n          responses.forEach((response) => {\n            if (response.success === true) {\n              this.pnotify.success();\n              this.router.navigate(\n                ['/comercial/ciclo-vendas/${id}/painel-bobinas'],\n                {\n                  relativeTo: this.activatedRoute,\n                }\n              );\n            } else {\n              this.pnotify.error();\n            }\n          });\n        },\n        error: (error: any) => {\n          try {\n            this.pnotify.error(error.error.message);\n          } catch (error) {\n            this.pnotify.error();\n          }\n        }\n      });\n  }\n\n  setParams(forms, params): Object {\n    let _params: any = {};\n\n    _params.empresa = params.codEmpresa;\n    _params.seqLote = params.sequenciaLote;\n    _params.matricula = this.user.info.matricula;\n    _params.idVendedor = this.user.info.idVendedor;\n    _params.codCliente = forms.codCliente;\n    _params.codEndereco = forms.codEndereco;\n    _params.aliquotaIcms = forms.aliquotaIcms;\n    _params.valorUnitario = forms.valorMaterial;\n\n    return _params;\n  }\n\n  setCliente(cliente) {\n    this.getClientes();\n    this.form.get('nomeCliente').setValue(cliente.razaoSocial);\n    this.form.get('codCliente').setValue(cliente.codCliente);\n\n    if (this.form.get('codCliente')) {\n      this.getContatos(cliente);\n      this.getLocaisEntrega(cliente);\n    }\n  }\n\n  getContatos(cliente) {\n    this.loadingContato = true;\n    this.clientesService\n      .getContatos(cliente.codCliente)\n      .pipe(\n        finalize(() => {\n          this.loadingContato = false;\n        })\n      )\n      .subscribe((response: JsonResponse) => {\n        if (response.success === true) {\n          this.form.get(['codContato']).enable();\n          const _contatos = response.data;\n          let contatos = [];\n\n          for (let i = 0; i < _contatos.length; i++) {\n            if (\n              _contatos[i].nomeCompleto &&\n              _contatos[i].nomeCompleto != null &&\n              _contatos[i].nomeCompleto != '' &&\n              _contatos[i].nomeCompleto.length > 1\n            )\n              contatos.push({\n                codContato: _contatos[i].idSeqTid,\n                nomeContato: _contatos[i].nomeCompleto,\n              });\n          }\n          this.contatos = contatos;\n        }\n      });\n  }\n\n  getLocaisEntrega(cliente): void {\n    this.locaisEntrega = [];\n    this.locaisEntregaLoader = true;\n\n    this.cotacoesFormularioService\n      .getLocaisEntrega(cliente.codCliente)\n      .pipe(\n        finalize(() => {\n          this.locaisEntregaLoader = false;\n          this.form.controls.codEndereco.enable();\n        })\n      )\n      .subscribe((response: JsonResponse) => {\n        if (response.success === true) {\n          this.form.get(['codEndereco']).enable();\n          const _enderecos = response.data.enderecos;\n          const _enderecosAguardando = response.data.enderecosAguardando || [];\n\n          let enderecos = [],\n            enderecosAguardando = [];\n\n          for (let i = 0; i < _enderecos.length; i++) {\n            enderecos.push({\n              codEndereco: _enderecos[i].id,\n              descricao: this.formatLocalEntrega(_enderecos[i]),\n              tipo: 'Aprovados',\n            });\n          }\n\n          for (let i = 0; i < _enderecosAguardando.length; i++) {\n            enderecosAguardando.push({\n              codEndereco: _enderecosAguardando[i].id,\n              descricao: this.formatLocalEntrega(_enderecosAguardando[i]),\n              tipo: 'Aguardando aprovação',\n            });\n          }\n\n          this.locaisEntrega = [...enderecos, ...enderecosAguardando];\n        }\n      });\n  }\n  formatLocalEntrega(localEntrega: any): string {\n    return `${localEntrega.endereco} - ${localEntrega.bairro}, ${localEntrega.cidade} - ${localEntrega.uf} - ${localEntrega.cep}`;\n  }\n\n  getTransportadoras(params?) {\n    const _params = params ?? {};\n    this.loadingTransportadora = true;\n    this.transportadoraService\n      .getListaTransportadoras(params)\n      .pipe(\n        finalize(() => {\n          this.loadingTransportadora = false;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.transportadoras = response['data'];\n          } else {\n            this.pnotify.error();\n          }\n        },\n        error: (error: any) => {\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotify.error(error.error.mensagem);\n          } else {\n            this.pnotify.error();\n          }\n        }\n      });\n  }\n\n  setLoaderEvents(): void {\n    this.loaderDetalhesContatoSubscription =\n      this.contatoDetalhesService.loaderNavbar.subscribe(\n        (response: boolean) => {\n          this.loadingNavBar = response;\n        }\n      );\n\n    this.loaderDetalhesEnderecoSubscription =\n      this.enderecoDetalhesService.loaderNavbar.subscribe(\n        (response: boolean) => {\n          this.loadingNavBar = response;\n        }\n      );\n  }\n\n  onDetalhesContato(): void {\n    if (this.form.value.codContato != null) {\n      this.contatoDetalhesService.showModal(\n        this.form.value.codCliente,\n        this.form.value.codContato\n      );\n    }\n  }\n\n  onDetalhesLocalEntrega(): void {\n    if (this.form.value.codEndereco != null) {\n      this.enderecoDetalhesService.showModal(\n        this.form.value.codCliente,\n        this.form.value.codEndereco\n      );\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NpY2xvLXZlbmRhcy9wYWluZWwtYm9iaW5hcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { MaterialPerdido } from './../../../materiais-perdidos/models/material-perdido';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { CardCounterConfig } from 'src/app/shared/templates/card-counter/models/config';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { IComercialPainelBobinas } from './../models/painel-bobinas';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n//angular\nimport { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialPainelBobinasService } from '../painel-bobinas.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialCicloVendasCotacoesFormularioService } from '../../cotacoes/formulario/formulario.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//materiais\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-ciclo-vendas-painel-bobinas-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialPainelBobinasListaComponent implements OnInit, OnDestroy {\n  breadCrumbTree: Array<Breadcrumb>;\n  modalRef: BsModalRef;\n  idSubModulo: number;\n  noResult = false;\n  loading = false; //Loading FullPage\n  loadingNavBar = false; //Loading do NAVBAR\n  materiais: Array<any> = [];\n  empresas: Array<any> = [];\n  materiaisSelecionados = [];\n  $activatedRouteSubscription: Subscription;\n  qtMateriais = 0;\n  form: FormGroup;\n\n  cardCounterConfig: Partial<CardCounterConfig> = {\n    showDecimals: false,\n    format: 'number',\n  };\n  // Tipos de Situação dos Materials (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '0',\n      nome: 'Inativos',\n    },\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  // CUSTOM TABLE\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  /* Pagination */\n  itemsPerPage: number = 100;\n  totalItems: number;\n  currentPage: number = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private painelBobinasService: ComercialPainelBobinasService,\n    private formBuilder: FormBuilder,\n    private modalService: BsModalService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private routerService: RouterService,\n    private dateService: DateService,\n    private formularioService: ComercialCicloVendasCotacoesFormularioService\n  ) {}\n\n  ngOnInit() {\n    localStorage.removeItem('comercialPainelBobinasMateriais');\n    this.getEmpresas();\n    this.buildForm();\n    this.setBreadCrumb();\n    this.titleService.setTitle('Painel de Bobinas');\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  getLocalStorage() {\n    try {\n      const materiais = localStorage.getItem('comercialPainelBobinasMateriais');\n      this.materiaisSelecionados = JSON.parse(atob(materiais));\n    } catch (error) {\n      this.materiaisSelecionados = [];\n      localStorage.removeItem('comercialPainelBobinasMateriais');\n    }\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription =\n      this.activatedRoute.queryParams.subscribe((response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n      });\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      lote: [null],\n      empresa: [18, [Validators.required]],\n      pagina: [1],\n      registros: [this.itemsPerPage],\n      categoriaProduto: [1],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/comercial/home`,\n      },\n      {\n        descricao: 'Ciclo de Vendas',\n        routerLink: `/comercial/ciclo-vendas/${id}`,\n      },\n      {\n        descricao: 'Painel de Bobinas',\n      },\n    ];\n  }\n\n  onFilter(params?) {\n    localStorage.removeItem('comercialPainelBobinasMateriais');\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n    this.getListaBobinas(this.getParams());\n    this.getLocalStorage();\n  }\n\n  checkMaterial(material: any): void {\n    material.checked = material.checked == 0 ? 1 : 0;\n    const materiais = this.materiais.filter(\n      (material) => material['checked'] == 1\n    );\n    this.materiaisSelecionados = materiais;\n    localStorage.removeItem('comercialPainelBobinasMateriais');\n    localStorage.setItem(\n      'comercialPainelBobinasMateriais',\n      btoa(JSON.stringify(this.materiaisSelecionados))\n    );\n  }\n\n  getTotalMateriais() {\n    return this.materiaisSelecionados.length;\n  }\n\n  removeMaterial(material: any): void {\n    this.materiaisSelecionados = this.materiaisSelecionados.filter(\n      (value: any) => value.sequenciaLote != material.sequenciaLote\n    );\n\n    this.materiais.map((value: any) => {\n      if (value.sequenciaLote == material.sequenciaLote) {\n        material.checked = 0;\n      }\n\n      this.materiaisSelecionados = this.materiaisSelecionados.filter(\n        (value: any) => value.checked == 1\n      );\n\n      localStorage.removeItem('comercialPainelBobinasMateriais');\n      localStorage.setItem(\n        'comercialPainelBobinasMateriais',\n        btoa(JSON.stringify(this.materiaisSelecionados))\n      );\n    });\n    if (this.materiaisSelecionados.length == 0) {\n      localStorage.removeItem('comercialPainelBobinasMateriais');\n    }\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.materiaisSelecionados;\n    this.modalRef = this.modalService.show(template, {\n      animated: false,\n      class: 'modal-xl',\n      backdrop: 'static',\n    });\n  }\n\n  hideModal() {\n    this.modalRef.hide();\n  }\n\n  getListaBobinas(params) {\n    this.loading = true;\n    this.painelBobinasService\n      .getListaBobinas(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.success === true) {\n            const codMaterial = this.materiaisSelecionados.map(\n              (material) => material.ID\n            );\n            this.materiais = response.data.map(function (el: any) {\n              var o = Object.assign({}, el);\n              o.checked = codMaterial.includes(o.ID) ? 1 : 0;\n              return o;\n            });\n            this.materiais = this.materiais.filter(\n              (value: any) => value.situacao == 'Disponível'\n            );\n            this.totalItems = this.materiais.length;\n            this.noResult = false;\n          }\n          if (this.materiais.length == 0) {\n            this.pnotify.notice('Nenhum registro encontrado!');\n            this.materiais = [];\n            this.noResult = true;\n          }\n        },\n        error: (error) => {\n          this.pnotify.error();\n        }\n      });\n  }\n\n  getEmpresas() {\n    this.loading = true;\n    this.formularioService\n      .loadDependencies()\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe((response: Array<JsonResponse | any>) => {\n        this.empresas = response[1].result || [];\n      });\n  }\n\n  openRegister() {\n    this.hideModal();\n    this.route.navigate(['../novo'], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(\n        this.form.get('categoriaProduto').value.toString()\n      ),\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  // Validação de formulário\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.onFilter();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n// ngx-bootstrap\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n//service\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n@Component({\n  selector:\n    'comercial-ciclo-vendas-cotacoes-formulario-modal-detalhes-endereco',\n  templateUrl: './endereco.component.html',\n  styleUrls: ['./endereco.component.scss'],\n})\nexport class ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent\n  implements OnInit {\n  @Input('endereco') endereco: any;\n\n  constructor(\n    private bsModalRef: BsModalRef,\n    private dateService: DateService\n    ) {}\n\n  ngOnInit(): void {}\n\n  convertMysqlTime(time: string) {\n    return this.dateService.convertMysqlTime(time);\n  }\n\n  onClose(): void {\n    this.bsModalRef.hide();\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Cadastro de Materiais\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false || form.value.codCliente == null\\\"\\n    (click)=\\\"postPainelBobinas()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div >\\n    <blockquote class=\\\"blockquote mx-4 text-center\\\" >\\n      <p class=\\\"text-primary mb-0\\\" [hidden] =\\\"tipoForm != 1\\\">BOBINA</p>\\n      <p class=\\\"text-primary mb-0\\\" [hidden] =\\\"tipoForm != 2\\\">CORTE ESPECIAL</p>\\n      <p class=\\\"text-primary mb-0\\\" [hidden] =\\\"tipoForm != 3\\\">REBAIXAMENTO</p>\\n    </blockquote>\\n  </div>\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-12\\\">\\n        <legend>Materiais</legend>\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th>Lote</th>\\n              <th>Material</th>\\n              <th>Empresa</th>\\n              <th>Data de Entrada do Lote</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiaisSelecionados\\\">\\n              <td [ngClass]=\\\"material.situacao == 'Disponível' ? 'border-success' : 'border-danger'\\\">{{ material.descLote | uppercase }}</td>\\n              <td>{{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}</td>\\n              <td>{{ material.nomeEmpresa | uppercase }}</td>\\n              <td>{{ material.dataEntradaLote | date:'dd/MM/yyyy HH:mm' }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-12\\\">\\n        <legend>Dados do Cliente</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-5 pl-0\\\">\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n              <label class=\\\"my-auto\\\" for=\\\"nomeCliente\\\">Cliente</label>\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\" >\\n                <a\\n                  class=\\\"text-primary\\\"\\n                  href=\\\"javascript:void(0)\\\"\\n                  (click)=\\\"openModal(selecionarCliente)\\\">\\n                  <strong>Selecionar</strong>\\n                </a>\\n              </div>\\n            </div>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeCliente\\\"\\n              formControlName=\\\"nomeCliente\\\"\\n              placeholder=\\\"SELECIONE\\\"\\n              [ngClass]=\\\"onFieldError('nomeCliente') + ' ' + onFieldRequired('nomeCliente')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeCliente')\\\" message=\\\"Cliente é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-2 pl-0 \\\">\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n              <label class=\\\"my-auto\\\" for=\\\"codContato\\\">Contato responsável</label>\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 11px\\\" *ngIf=\\\"form.value.codCliente != null\\\">\\n                <a\\n                  class=\\\"text-secondary\\\"\\n                  href=\\\"javascript:void(0)\\\"\\n                  \\n                  (click)=\\\"onDetalhesContato()\\\">\\n                  <strong>Detalhes</strong>\\n                </a>\\n              </div>\\n            </div>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"contatos\\\"\\n              formControlName=\\\"codContato\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              bindLabel=\\\"nomeContato\\\"\\n              bindValue=\\\"codContato\\\"\\n              [loading]=\\\"loadingContato\\\"\\n              loadingText=\\\"Carregando...\\\"\\n              >\\n            </ng-select>\\n          </div>\\n          <div class=\\\"form-group col-lg-5 pl-0 \\\">\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n              <label class=\\\"my-auto\\\" for=\\\"codEndereco\\\">Local de entrega</label>\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 11px\\\" *ngIf=\\\"form.value.codCliente != null\\\">\\n                <a \\n                  class=\\\"text-secondary\\\"\\n                  href=\\\"javascript:void(0)\\\"\\n                  (click)=\\\"onDetalhesLocalEntrega()\\\">\\n                  <strong>Detalhes</strong>\\n                </a>\\n              </div>\\n            </div>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"locaisEntrega\\\"\\n              formControlName=\\\"codEndereco\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              bindLabel=\\\"descricao\\\"\\n              bindValue=\\\"codEndereco\\\"\\n              [loading]=\\\"locaisEntregaLoader\\\"\\n              loadingText=\\\"Carregando...\\\"\\n              groupBy=\\\"tipo\\\"\\n            >\\n            </ng-select>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-lg-5 pl-0 \\\">\\n            <label for=\\\"codTransportadora\\\">Transportadora</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"transportadoras\\\"\\n              formControlName=\\\"codTransportadora\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              [loading]=\\\"loadingTransportadora\\\"\\n              bindLabel=\\\"nomeTransportadora\\\"\\n              bindValue=\\\"codTransportadoraTid\\\"\\n              [ngClass]=\\\"onFieldError('codTransportadora') + ' ' + onFieldRequired('codTransportadora')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codTransportadora')\\\" message=\\\"Transportadora é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <!-- <div class=\\\"form-group col-md-5 pl-0\\\">\\n            <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n              <label class=\\\"my-auto\\\" for=\\\"NM_TRAS\\\">Trasportadora</label>\\n              <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\" >\\n                <a\\n                  class=\\\"text-primary\\\"\\n                  href=\\\"javascript:void(0)\\\"\\n                  (click)=\\\"openModal(selecionarNotaFiscal)\\\">\\n                  <strong>Selecionar</strong>\\n                </a>\\n              </div>\\n            </div>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_TRAS\\\"\\n              formControlName=\\\"NM_TRAS\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('NM_TRAS') + ' ' + onFieldRequired('NM_TRAS')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_TRAS')\\\" message=\\\"Trasportadora é obrigatório.\\\"></invalid-form-control>\\n          </div> -->\\n          <div class=\\\"form-group col-md-2 pl-0\\\">\\n            <label for=\\\"nfMae\\\">Nota Fiscal Mãe</label>\\n            <select \\n            class=\\\"form-control custom-select\\\"\\n            id=\\\"nfMae\\\"\\n            formControlName=\\\"nfMae\\\"\\n            [ngClass]=\\\"onFieldError('nfMae') + ' ' + onFieldRequired('nfMae')\\\"\\n          >\\n            <option value ='1' >Sim</option>\\n            <option value ='0'>Não</option>\\n          </select>\\n          <invalid-form-control [show]=\\\"onFieldInvalid('nfMae')\\\" message=\\\"Nota fiscal mãe é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-2 pl-0\\\">\\n            <label for=\\\"formasPagamento\\\">Forma de Pagamento</label>\\n            <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"formasPagamento\\\"\\n            [loading]=\\\"loadingFormasPagamento\\\"\\n            formControlName=\\\"codFormaPagamento\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            bindLabel=\\\"descricao\\\"\\n            bindValue=\\\"codFormaPagamento\\\"\\n            [ngClass]=\\\"onFieldError('codFormaPagamento') + ' ' + onFieldRequired('codFormaPagamento')\\\">\\n          </ng-select>\\n          <invalid-form-control [show]=\\\"onFieldInvalid('codFormaPagamento')\\\" message=\\\"Forma de pagamento é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-1 pl-0\\\">\\n            <label for=\\\"aliquotaIcms\\\">Aliquota ICMS</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"aliquotaIcms\\\"\\n              formControlName=\\\"aliquotaIcms\\\"\\n              currencyMask [options]=\\\"{ align: 'left', suffix: ' %' , thousands: '.', decimal: ',', precision: 2, prefix: '' }\\\"\\n              [ngClass]=\\\"onFieldError('aliquotaIcms') + ' ' + onFieldRequired('aliquotaIcms')\\\"\\n            >\\n          <invalid-form-control [show]=\\\"onFieldInvalid('valorMaterial')\\\" message=\\\"Aliquota é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-2 pl-0\\\">\\n            <label for=\\\"valorMaterial\\\">Preço do Material</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"valorMaterial\\\"\\n              formControlName=\\\"valorMaterial\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ' , thousands: '.', decimal: ',' }\\\"\\n              [ngClass]=\\\"onFieldError('valorMaterial') + ' ' + onFieldRequired('valorMaterial')\\\"\\n            >\\n          <invalid-form-control [show]=\\\"onFieldInvalid('valorMaterial')\\\" message=\\\"Preço é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n  <ng-template #selecionarCliente>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Busqueda de Clientes</h4>\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n        <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\" *ngIf=\\\"loadingClientes\\\">\\n          <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"formClientes\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-3\\\">\\n              <label for=\\\"situacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"situacao\\\"\\n              >\\n                <option value=\\\"Ativo\\\">Ativo</option>\\n                <option value=\\\"Inativo\\\">Inativo</option>\\n                <option value=\\\"Potenci\\\">Potencial</option>\\n                <option value=\\\"Arquivo\\\">Arquivado</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-4\\\">\\n              <label for=\\\"cdItem\\\">BUSCAR POR</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"buscarPor\\\"\\n              >\\n                <option value=\\\"1\\\">CÓDIGO, NOME FANTASIA OU RAZON SOCIAL</option>\\n                <option value=\\\"2\\\" selected>CNPJ</option>\\n              </select>\\n            </div>\\n\\n            <div class=\\\"form-group col-5\\\">\\n              <label>TERMO DE PESQUISA</label>\\n              <div class=\\\"input-group\\\">\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"pesquisa\\\"\\n                  >\\n                  <div class=\\\"input-group-append\\\">\\n                    <span \\n                      [tooltip]=\\\"formClientes.valid == false ? 'Digite um termo de pesquisa':''\\\"\\n                      container=\\\"body\\\"\\n                      placement =\\\"left\\\"\\n                    >\\n                      <button\\n                      style=\\\"height: 25px;\\\"\\n                        [disabled]=\\\"formClientes.valid == false\\\"\\n                        class=\\\"input-group-text hover\\\"\\n                        (click)=\\\"getClientes()\\\"\\n                        >\\n                        <i class=\\\"fas fa-search\\\"></i>\\n                      </button>\\n                    </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n      <custom-table *ngIf=\\\"!noClientes\\\" class=\\\"text-center\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th>Cód. Cliente</th>\\n            <th>Razão Social</th>\\n            <th>CNPJ</th>\\n            <th>TIPO</th>\\n            <th></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let cliente of clientes\\\">\\n            <td>{{ cliente.codCliente }}</td>\\n            <td>{{ cliente.razaoSocial }}</td>\\n            <td *ngIf=\\\"!cliente.cnpj\\\">NÃO INFORMADO</td>\\n            <td *ngIf=\\\"cliente.cnpj\\\">{{ cliente.cnpj }}</td>\\n            <td *ngIf=\\\"cliente.tipo == 'J' \\\">JURÍDICA</td>\\n            <td *ngIf=\\\"cliente.tipo == 'F' \\\">FISÍCA</td>\\n            <td>\\n              <button\\n                class=\\\"btn-icon-sm\\\"\\n                tooltip=\\\"Salvar Informações\\\"\\n                container=\\\"body\\\"\\n                (click)=\\\"setCliente(cliente);modalRef.hide()\\\"\\n              >\\n                <i class=\\\"far fa-save\\\"></i>\\n              </button>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      \\n    </div>\\n  </ng-template>\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NpY2xvLXZlbmRhcy9wYWluZWwtYm9iaW5hcy9mb3JtdWxhcmlvL21vZGFsL2NvbnRhdG8vY29udGF0by5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable, EventEmitter } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent } from './contato.component';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoService {\n  loaderNavbar: EventEmitter<boolean> = new EventEmitter();\n\n  constructor(\n    private modalService: BsModalService,\n    private pnotifyService: PNotifyService,\n    private clientesService: ComercialClientesService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  showModal(codCliente: number, codContato: number): void {\n    this.loaderNavbar.emit(true);\n\n    this.clientesService\n      .getContato(codCliente, codContato)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar.emit(false);\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.success === true) {\n            const modalConfig = {\n              animated: false,\n            };\n\n            const initialState = {\n              contato: response.data,\n            };\n\n            this.modalService.show(\n              ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent,\n              Object.assign({}, modalConfig, {\n                initialState,\n              })\n            );\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n}\n","import { IComercialPainelBobinas } from './models/painel-bobinas';\n//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { retry, take } from 'rxjs/operators';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialPainelBobinasService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/ciclo-vendas/painel-bobinas`;\n\n  constructor(private http: HttpClient) {}\n\n  getListaBobinas(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n\n  postPainelBobinas(material: any): Observable<any>{\n    return this.http.post(`${this.API}/salvar`, material).pipe(take(1));\n  }\n\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Painel de Bobinas\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"openModal(FormProposta)\\\"\\n    [disabled]=\\\"getTotalMateriais() == 0\\\">\\n    Avançar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\"\\n    [disabled]=\\\"!form.controls.empresa.valid\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2 pl-0\\\">\\n              <label for=\\\"lote\\\">Lote</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"lote\\\"\\n                formControlName=\\\"lote\\\"\\n                placeholder=\\\"Digite...\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <!-- <div class=\\\"form-group col-lg-2 pl-0\\\">\\n              <label for=\\\"empresa\\\">Empresa</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"false\\\"\\n                  [items]=\\\"empresas\\\"\\n                  formControlName=\\\"empresa\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  labelForId=\\\"empresa\\\"\\n                  bindLabel=\\\"nomeEmpresa\\\"\\n                  bindValue=\\\"idEmpresa\\\"\\n                  [ngClass]=\\\"onFieldError('empresa') + ' ' + onFieldRequired(form.controls.empresa)\\\">\\n                </ng-select>\\n                <invalid-form-control [show]=\\\"onFieldInvalid('empresa')\\\" message=\\\"Empresa é obrigatório\\\"></invalid-form-control>\\n            </div> -->\\n            <div class=\\\"form-group col-lg-1 pl-0\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"registros\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"totalItems > 0 && !noResult\\\">\\n    <div class=\\\"row justify-content-between\\\">\\n      <div class=\\\"col-lg-9\\\"></div>\\n      <div class=\\\"col-lg-3\\\">\\n        <card-counter\\n          icon=\\\"fas fa-tasks\\\"\\n          color=\\\"bg-blue\\\"\\n          (click)=\\\"openModal(FormMateriaisSelecionados)\\\"\\n          [counter]=\\\"getTotalMateriais()\\\"\\n          duration=\\\"0.1\\\"\\n          text=\\\"Total de materiais selecionados\\\"\\n          [config]=\\\"cardCounterConfig\\\">\\n        </card-counter>\\n      </div>\\n    </div>\\n    <br>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <subtitles\\n          [data]=\\\"subtitles\\\"\\n        >\\n        </subtitles>\\n      </div>\\n    </div>\\n    <div class=\\\"col-12 p-0\\\">\\n      <div class=\\\"w-100\\\">\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th style=\\\"width:40px\\\"></th>\\n              <th>Lote</th>\\n              <th>Material</th>\\n              <th>Empresa</th>\\n              <th>Data de Entrada do Lote</th>\\n              <!-- <th style=\\\"width:80px\\\"></th> -->\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiais; let i = index\\\">\\n              <td class=\\\"text-center\\\" style=\\\"width: 5%\\\" [ngClass]=\\\"material.situacao == 'Disponível' ? 'border-success' : 'border-danger'\\\">\\n                <div class=\\\"form-check\\\">\\n                  <input class=\\\"form-check-input position-static\\\" \\n                  type=\\\"checkbox\\\" \\n                  id=\\\"blankCheckbox\\\" \\n                  [checked]=\\\"material?.checked === 1\\\"\\n                  (click)=\\\"checkMaterial(material)\\\"\\n                  value=\\\"option1\\\" \\n                  aria-label=\\\"checkbox\\\">\\n                </div>\\n              </td>\\n              <td>{{ material.descLote | uppercase }}</td>\\n              <td>{{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}</td>\\n              <td>{{ material.nomeEmpresa | uppercase }}</td>\\n              <td>{{ material.dataEntradaLote | date:'dd/MM/yyyy HH:mm' }}</td>\\n              <!-- <td class=\\\"align-middle\\\" style=\\\"width:40px\\\">\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Detalhes do Material\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModal(detalhesMaterial)\\\">\\n                    <i class=\\\"fas fa-search\\\"></i>\\n                  </button>\\n                </span>\\n              </td> -->\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </div>\\n      <div>\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"noResult\\\"  class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n  <ng-template #FormMateriaisSelecionados>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Materiais Selecionados</h4>\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-body\\\" *ngIf=\\\"getTotalMateriais() != 0\\\">\\n      <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th>Lote</th>\\n            <th>Material</th>\\n            <th>Empresa</th>\\n            <th style=\\\"width:40px\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let material of materiaisSelecionados\\\">\\n            <td [ngClass]=\\\"material.situacao == 'Disponível' ? 'border-success' : 'border-danger'\\\">{{ material.descLote | uppercase }}</td>\\n            <td>{{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}</td>\\n            <td>{{ material.nomeEmpresa | uppercase }}</td>\\n            <td>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Delete\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"removeMaterial(material)\\\">\\n                  <i class=\\\"fas fa-trash-alt\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table><br>\\n    </div>\\n    <div [hidden]=\\\"getTotalMateriais()\\\" class=\\\"text-center d-flex justify-content-center align-items-center p-4\\\" style=\\\"height: 80%\\\">\\n      <empty-result message=\\\"Nenhum material selecionado!\\\"></empty-result>\\n    </div>\\n  </ng-template>\\n  <ng-template #FormProposta>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Selecione a Categoria</h4>\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <div class=\\\"modal-body\\\" *ngIf=\\\"getTotalMateriais() != 0\\\">\\n        <a><strong>Materiais Selecionados</strong></a>\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th>Lote</th>\\n              <th>Material</th>\\n              <th>Empresa</th>\\n              <th style=\\\"width:40px\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiaisSelecionados\\\">\\n              <td [ngClass]=\\\"material.situacao == 'Disponível' ? 'border-success' : 'border-danger'\\\">{{ material.descLote | uppercase }}</td>\\n              <td>{{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}</td>\\n              <td>{{ material.nomeEmpresa | uppercase }}</td>\\n              <td>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Delete\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"removeMaterial(material)\\\">\\n                    <i class=\\\"fas fa-trash-alt\\\"></i>\\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n          <div class=\\\"form-row justify-content-center\\\">\\n            <div class=\\\"form-group col\\\">\\n              <label for=\\\"categoriaProduto\\\" >Categoria</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"categoriaProduto\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                formControlName=\\\"categoriaProduto\\\"\\n                [ngClass]=\\\"onFieldError('categoriaProduto') + ' ' + onFieldRequired('form.controls.categoriaProduto')\\\">\\n                <option value=\\\"1\\\">Bobina</option>\\n                <option value=\\\"2\\\">Corte especial</option>\\n                <option value=\\\"3\\\">Rebaixamento</option>\\n              </select>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('categoriaProduto')\\\" message=\\\"Categoria é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div  class=\\\"form-row justify-content-center text-center\\\">\\n        <button \\n          type=\\\"button\\\" \\n          class=\\\"btn btn-default btn-lg m-2\\\"\\n          (click)=\\\"openRegister()\\\"\\n          [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">\\n           <i class=\\\" text-primary fas fa-arrow-right\\\"></i>\\n          </span>Avançar\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n\\n</app-body>\";","export default \"<div class=\\\"modal-content\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"mtc-title mb-0 my-auto\\\">DETALHES DO LOCAL DE ENTREGA</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onClose()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"endereco\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>CEP</label>\\n            <div *ngIf=\\\"endereco.cep == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.cep != null\\\">{{ endereco.cep | cep }}</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Endereço</label>\\n            <div *ngIf=\\\"endereco.endereco == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.endereco != null\\\">{{ endereco.endereco }}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Complemento</label>\\n            <div *ngIf=\\\"endereco.complemento == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.complemento != null\\\">{{ endereco.complemento }}</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Referência</label>\\n            <div *ngIf=\\\"endereco.referencia == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.referencia != null\\\">{{ endereco.referencia }}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Bairro</label>\\n            <div *ngIf=\\\"endereco.bairro == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.bairro != null\\\">{{ endereco.bairro }}</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6 mb-0\\\">\\n            <label>Cidade</label>\\n            <div *ngIf=\\\"endereco.cidade == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.cidade != null\\\">\\n              {{ endereco.cidade }}<span *ngIf=\\\"endereco.uf != null\\\"> / {{ endereco.uf }}</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6 mb-0\\\" *ngIf=\\\"endereco.principal == 1\\\">\\n            <label>Região de atuação comercial</label>\\n            <div *ngIf=\\\"endereco.descAtuacaoComercial == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"endereco.descAtuacaoComercial != null\\\">{{ endereco.descAtuacaoComercial }}</div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"endereco.entrega == 1\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"col\\\"><hr></div>\\n          </div>\\n          <div class=\\\"mtc-title\\\">Dados de entrega</div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Título do local de entrega</label>\\n              <div *ngIf=\\\"endereco.titulo == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.titulo != null\\\">{{ endereco.titulo }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Região de entrega</label>\\n              <div *ngIf=\\\"endereco.descRegiaoEntrega == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.descRegiaoEntrega != null\\\">{{ endereco.descRegiaoEntrega }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\">\\n              <label>Dias para realizar entregas</label>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.segunda.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.segunda.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Segunda-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.segunda.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.segunda.minimo !== null && endereco.diasEntrega.segunda.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.segunda.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.segunda.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.segunda.minimo == null || endereco.diasEntrega.segunda.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.segunda.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.terca.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.terca.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Terça-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.terca.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.terca.minimo !== null && endereco.diasEntrega.terca.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.terca.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.terca.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.terca.minimo == null || endereco.diasEntrega.terca.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.terca.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.quarta.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.quarta.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Quarta-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.quarta.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.quarta.minimo !== null && endereco.diasEntrega.quarta.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.quarta.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.quarta.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.quarta.minimo == null || endereco.diasEntrega.quarta.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.quarta.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.quinta.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.quinta.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Quinta-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.quinta.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.quinta.minimo !== null && endereco.diasEntrega.quinta.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.quinta.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.quinta.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.quinta.minimo == null || endereco.diasEntrega.quinta.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.quinta.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.sexta.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.sexta.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Sexta-feira:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.sexta.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.sexta.minimo !== null && endereco.diasEntrega.sexta.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.sexta.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.sexta.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.sexta.minimo == null || endereco.diasEntrega.sexta.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.sexta.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.sabado.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.sabado.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Sábado:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.sabado.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.sabado.minimo !== null && endereco.diasEntrega.sabado.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.sabado.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.sabado.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.sabado.minimo == null || endereco.diasEntrega.sabado.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.sabado.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col d-flex w-100 mb-1\\\">\\n                  <div class=\\\"d-flex mr-1\\\">\\n                    <div class=\\\"mr-1\\\">\\n                      <i class=\\\"fas fa-times-circle text-danger\\\" *ngIf=\\\"endereco.diasEntrega.domingo.checked == 0\\\"></i>\\n                      <i class=\\\"fas fa-check-circle text-success\\\" *ngIf=\\\"endereco.diasEntrega.domingo.checked == 1\\\"></i>\\n                    </div>\\n                    <span>Domingo:</span>\\n                  </div>\\n                  <div *ngIf=\\\"endereco.diasEntrega.domingo.checked == 1\\\">\\n                    <div *ngIf=\\\"endereco.diasEntrega.domingo.minimo !== null && endereco.diasEntrega.domingo.maximo !== null\\\">\\n                      das {{ convertMysqlTime(endereco.diasEntrega.domingo.minimo) }} às {{ convertMysqlTime(endereco.diasEntrega.domingo.maximo) }}\\n                    </div>\\n                    <div *ngIf=\\\"endereco.diasEntrega.domingo.minimo == null || endereco.diasEntrega.domingo.maximo == null\\\">\\n                      horário não informado\\n                    </div>\\n                  </div>\\n                  <strong *ngIf=\\\"endereco.diasEntrega.domingo.checked == 0\\\">\\n                    não aceita entregas\\n                  </strong>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Tipo de material</label>\\n              <div *ngIf=\\\"endereco.dsTipoMaterial == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.dsTipoMaterial != null\\\">{{ endereco.dsTipoMaterial | uppercase }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Tipo de descarga</label>\\n              <div *ngIf=\\\"endereco.dsTipoDescarga == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.dsTipoDescarga != null\\\">{{ endereco.dsTipoDescarga | uppercase }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Modo de descarga</label>\\n              <div *ngIf=\\\"endereco.dsModoDescarga == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.dsModoDescarga != null\\\">{{ endereco.dsModoDescarga | uppercase }}</div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Tipos de veículo</label>\\n              <div *ngIf=\\\"endereco.tiposVeiculosDesc == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.tiposVeiculosDesc != null\\\">{{ endereco.tiposVeiculosDesc | uppercase }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6 mb-0\\\">\\n              <label>Dados especiais</label>\\n              <div *ngIf=\\\"endereco.dadosEspeciaisDesc == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"endereco.dadosEspeciaisDesc != null\\\">{{ endereco.dadosEspeciaisDesc | uppercase }}</div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","export default \"<div class=\\\"modal-content\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"mtc-title mb-0 my-auto\\\">DETALHES DO CONTATO</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onClose()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"contato\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Nome completo</label>\\n            <div *ngIf=\\\"contato.nomeCompleto == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"contato.nomeCompleto != null\\\">{{ contato.nomeCompleto }}</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Sexo</label>\\n            <div *ngIf=\\\"contato.descGenero == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"contato.descGenero != null\\\">{{ contato.descGenero }}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6 mb-0\\\">\\n            <label>Função</label>\\n            <div *ngIf=\\\"contato.descFuncao == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"contato.descFuncao != null\\\">{{ contato.descFuncao }}</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6 mb-0\\\">\\n            <label>Setor</label>\\n            <div *ngIf=\\\"contato.descSetor == null\\\">NÃO INFORMADO</div>\\n            <div *ngIf=\\\"contato.descSetor != null\\\">{{ contato.descSetor }}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"col\\\"><hr></div>\\n        </div>\\n        <div class=\\\"mtc-title\\\">Meios de contato</div>\\n        <div class=\\\"form-row\\\" *ngIf=\\\"contato.contatos != null\\\">\\n          <div class=\\\"form-group col-md-6\\\" *ngFor=\\\"let item of contato.contatos\\\">\\n            <label>{{ item.tipo }}</label>\\n            <div *ngIf=\\\"(item.tipo == 'Telefone') || (item.tipo == 'Celular')\\\">\\n              <div *ngIf=\\\"item.contato == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"item.contato != null\\\">{{ item.contato | telefone }}</div>\\n            </div>\\n            <div *ngIf=\\\"(item.tipo == 'Email NFe') || (item.tipo == 'E-mail NFe') || (item.tipo == 'E-Mail') || (item.tipo == 'Email') || (item.tipo == 'MalaDireta')\\\">\\n              <div *ngIf=\\\"item.contato == null\\\">NÃO INFORMADO</div>\\n              <div *ngIf=\\\"item.contato != null\\\">\\n                <a [href]=\\\"'mailto:' + item.contato\\\">{{ item.contato | lowercase }}</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <message\\n          icon=\\\"fas fa-box-open\\\"\\n          text=\\\"Nenhuma informação encontrada\\\"\\n          class=\\\"py-4\\\"\\n          *ngIf=\\\"contato.contatos == null\\\">\\n        </message>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\n\n// Components\nimport { ComercialPainelBobinasListaComponent } from './lista/lista.component';\nimport { ComercialPainelBobinasFormularioComponent } from './formulario/formulario.component';\n\n//modules\nimport { ComercialCicloVendasPainelBobinasFormularioModule } from './formulario/formulario.module';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialPainelBobinasListaComponent },\n  {\n    path: 'novo',\n    component: ComercialPainelBobinasFormularioComponent,\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    ComercialCicloVendasPainelBobinasFormularioModule,\n  ],\n  exports: [RouterModule],\n})\nexport class ComercialPainelBobinasModuleRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NpY2xvLXZlbmRhcy9wYWluZWwtYm9iaW5hcy9mb3JtdWxhcmlvL21vZGFsL2VuZGVyZWNvL2VuZGVyZWNvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { CurrencyMaskModule } from 'ng2-currency-mask';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { RouterModule } from '@angular/router';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport ptBr from '@angular/common/locales/pt';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nregisterLocaleData(ptBr);\ndefineLocale('pt-br', ptBrLocale);\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialCicloVendasPainelBobinasFormularioModule } from './formulario/formulario.module';\n\n// Components\nimport { ComercialPainelBobinasListaComponent } from './lista/lista.component';\nimport { ComercialPainelBobinasModuleRoutingModule } from './painel-bobinas-routing.module';\n\n@NgModule({\n  declarations: [ComercialPainelBobinasListaComponent],\n  imports: [\n    ComercialPainelBobinasModuleRoutingModule,\n    ComercialCicloVendasPainelBobinasFormularioModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n    CurrencyMaskModule,\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\n})\nexport class ComercialPainelBobinasModule {}\n","import { Component, OnInit, Input } from '@angular/core';\n\n// ngx-bootstrap\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'comercial-ciclo-vendas-cotacoes-formulario-modal-detalhes-contato',\n  templateUrl: './contato.component.html',\n  styleUrls: ['./contato.component.scss'],\n})\nexport class ComercialCicloVendasPainelBobinasFormularioModalDetalhesContatoComponent\n  implements OnInit {\n  @Input('contato') contato: any;\n\n  constructor(private bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  onClose(): void {\n    this.bsModalRef.hide();\n  }\n}\n","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2ljbG8tdmVuZGFzL3BhaW5lbC1ib2JpbmFzL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NpY2xvLXZlbmRhcy9wYWluZWwtYm9iaW5hcy9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b25bZGlzYWJsZWRde1xuICBjdXJzb3I6IG5vLWRyb3A7XG59Il19 */\";","import { Injectable, EventEmitter } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent } from './endereco.component';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoService {\n  loaderNavbar: EventEmitter<boolean> = new EventEmitter();\n\n  constructor(\n    private modalService: BsModalService,\n    private pnotifyService: PNotifyService,\n    private clienteService: ComercialClientesService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  showModal(codCliente: number, codEndereco: number): void {\n    this.loaderNavbar.emit(true);\n\n    this.clienteService\n      .getEndereco(codCliente, codEndereco, 1)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar.emit(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.responseCode === 200) {\n            const modalConfig = {\n              animated: false,\n              class: 'modal-lg',\n            };\n\n            const initialState = {\n              endereco: response.result,\n            };\n\n            this.modalService.show(\n              ComercialCicloVendasPainelBobinasFormularioModalDetalhesEnderecoComponent,\n              Object.assign({}, modalConfig, {\n                initialState,\n              })\n            );\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n        }\n      });\n  }\n}\n"],"sourceRoot":"webpack:///"}