{"version":3,"sources":["webpack:///src/app/modules/logistica/yms/etapas/associacao-setores/associacao-setores.component.html","webpack:///src/app/modules/logistica/yms/etapas/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/yms/etapas/lista/lista.component.scss","webpack:///src/app/modules/logistica/yms/etapas/associacao-setores/associacao-setores.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/logistica/yms/etapas/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/yms/etapas/lista/lista.component.html","webpack:///src/app/modules/logistica/yms/etapas/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/yms/etapas/associacao-setores/associacao-setores.component.ts","webpack:///src/app/modules/logistica/yms/etapas/etapas.module.ts","webpack:///src/app/modules/logistica/yms/etapas/etapas-routing.module.ts","webpack:///src/app/modules/logistica/yms/etapas/lista/lista.component.ts"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","LogisticaYmsEtapasCadastroComponent","formBuilder","pnotify","activatedRoute","router","localeService","etapasService","titleService","atividadesService","tiposEtapaService","setoresService","breadCrumbTree","formData","disabledForm","loading","loadingNavBar","tipos","cod","nome","MASKS","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setBreadCrumb","setFormBuilder","onActivatedRoute","getTiposEtapa","getSetores","subscribe","_params","snapshot","params","hasOwnProperty","getEtapa","IN_STAT","IN_PAGI","loadingTiposEtapa","pipe","response","status","tiposEtapa","body","error","loadingSetores","setores","id","data","form","patchValue","noResult","idSubModulo","appTitle","setTitle","descricao","routerLink","group","UUID_LOGI_YMS_ETAP","NM_ETAP","required","SG_ETAP","UUID_LOGI_YMS_ETAP_TIPO","NM_ETAP_TIPO","DS_OBSE","field","onFieldInvalid","get","touched","formControl","controls","validator","validationResult","postEtapas","value","success","navigate","relativeTo","selector","template","LogisticaYmsEtapasAssociacaoSetoresComponent","confirmModalService","tiposSetorService","filiaisService","setoresLoading","loadingFilterSetores","loadingTiposSetor","setoresAssociados","setoresAssociadosLoading","tableConfigSetoresAssociados","fixedHeader","bodyHeight","hover","tableConfigSetores","toggle","disabled","formSetores","UUID_LOGI_YMS_SETO","NM_SETO","UUID_LOGI_YMS_SETO_TIPO","NM_SETO_TIPO","UUID_LOGI_FILI","NM_FILI","getEtapas","getTiposSetor","getFilterSetores","getFiliais","filterSetores","notice","tiposSetor","loadingFiliais","IN_YMS","filiais","setValue","getSetoresAssociados","loadingEtapas","etapas","console","log","filter","setor","some","item","ID","length","ORDE_BY","checked","NR_SQNC","map","postSetoresAssociados","showConfirm","confirmDelete","deleteAssociacoes","event","LogisticaYmsEtapasModule","declarations","imports","forRoot","routes","path","component","LogisticaYmsEtapasRoutingModule","forChild","exports","LogisticaYmsEtapasListaComponent","route","xlsxService","dateService","routerService","detailPanelService","circuitosService","showDetailPanel","totalItens","tableConfig","subtitleBorder","tableConfigAssocSetores","subtitles","text","color","itemsPerPage","totalItems","currentPage","buildForm","onDetailPanelEmitter","getFilterEtapas","getCircuitos","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","TT_REGI_PAGI","getParams","showDetailPanelSubscription","config","showing","reset","PAGI","TIME","Date","getTime","loadingCircuitos","circuitos","ID_LOGI_YMS_SETO","ID_LOGI_YMS_CIRC","NM_CIRC","NR_MATR","NM_USUA","DT_INCL","DT_ATUA","onFilter","hide","setBase64UrlParams","etapaSelecionada","loadedFinished","loadingAssociacaoSetores","associacaoSetores","noAssocSetores","filterEtapas","page","_obj","prop","convertToUrlDate","borderClass","stat","confirmChange","asObservable","result","toLocaleDateString","split","dataExport","listagemExport","concat","exportFile"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCGf;;;UAMaA,mBAAmB;AAC9B,qCAAoBC,YAApB,EAAkD;AAAA;;AAA9B,eAAAA,YAAA,GAAAA,YAAA;AAAgC;;AADtB;AAAA;AAAA,iBAG9B,qBACEC,IADF,EAEEC,KAFF,EAGEC,OAHF,EAIEC,SAJF,EAKEC,KALF,EAKgB;AAEd,gBAAMC,QAAQ,GAAG,KAAKN,YAAL,CAAkBO,IAAlB,CAAuB,8EAAvB,EAA8C;AAC7DC,sBAAQ,EAAE,KADmD;AAE7DC,iCAAmB,EAAE,IAFwC;AAG7DC,sBAAQ,EAAE,KAHmD;AAI7D,uBAAO;AAJsD,aAA9C,CAAjB;AAOAJ,oBAAQ,CAACK,OAAT,CAAiBV,IAAjB,GAAwBA,IAAxB;AACAK,oBAAQ,CAACK,OAAT,CAAiBT,KAAjB,GAAyBA,KAAzB;AACAI,oBAAQ,CAACK,OAAT,CAAiBR,OAAjB,GAA2BA,OAA3B;;AAEA,gBAAIF,IAAI,KAAK,QAAb,EAAuB;AACrBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,+CAD+B,EAE/B,mCAF+B,CAAjC;AAID;;AAED,gBAAIX,IAAI,KAAK,YAAb,EAA2B;AACzBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,sCAD+B,CAAjC;AAGD;;AAED,gBAAIR,SAAJ,EAAe;AACbE,sBAAQ,CAACK,OAAT,CAAiBP,SAAjB,GAA6BA,SAA7B;AACD;;AAED,gBAAIC,KAAJ,EAAW;AACTC,sBAAQ,CAACK,OAAT,CAAiBN,KAAjB,GAAyBA,KAAzB;AACD,aAhCa,CAkCd;AACA;;;AACA,mBAA+BC,QAAQ,CAACK,OAAT,CAAkBE,aAAjD;AACD;AA7C6B;;AAAA;AAAA,S;;;;gBARvB;;;;AAQId,yBAAmB,6DAH/B,iEAAW;AACVe,kBAAU,EAAE;AADF,OAAX,CAG+B,E,+EACI,kE,EADJ,GAAnBf,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCAf;AAOA;AAGA;;;UAwBagB,mCAAmC;AA+B9C,qDACUC,WADV,EAEUC,OAFV,EAGUC,cAHV,EAIUC,MAJV,EAKUC,aALV,EAMUC,aANV,EAOUC,YAPV,EAQUC,iBARV,EASUC,iBATV,EAUUC,cAVV,EAUoD;AAAA;;AAT1C,eAAAT,WAAA,GAAAA,WAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AArCV,eAAAC,cAAA,GAA6B,EAA7B;AAIA,eAAAC,QAAA,GAA4B,EAA5B,CAiCoD,CA5BpD;;AACA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,aAAA,GAAgB,KAAhB;AAIA,eAAAC,KAAA,GAAQ,CACN;AACEC,eAAG,EAAE,MADP;AAEEC,gBAAI,EAAE;AAFR,WADM,EAKN;AACED,eAAG,EAAE,UADP;AAEEC,gBAAI,EAAE;AAFR,WALM,CAAR;AA+BO,eAAAC,KAAA,GAAQ,kDAAQA,KAAhB;AARL,eAAKd,aAAL,CAAmBe,GAAnB,CAAuB,OAAvB;AACA,eAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAP,CACd,EADc,EAEd;AAAEC,0BAAc,EAAE;AAAlB,WAFc,EAGd;AAAEC,4BAAgB,EAAE;AAApB,WAHc,EAId;AAAEC,2BAAe,EAAE;AAAnB,WAJc,CAAhB;AAMD;;AAlD6C;AAAA;AAAA,iBAqD9C,oBAAQ;AACN,iBAAKC,eAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,cAAL;AACA,iBAAKC,gBAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,UAAL;AACD;AA5D6C;AAAA;AAAA,iBA8D9C,2BAAe;AACb,iBAAKxB,iBAAL,CAAuBmB,eAAvB,GAAyCM,SAAzC;AACD;AAhE6C;AAAA;AAAA,iBAkE9C,4BAAmB;AACjB,gBAAMC,OAAO,GAAG,KAAK/B,cAAL,CAAoBgC,QAApB,CAA6BC,MAA7C;AACA,gBAAIF,OAAO,CAACG,cAAR,CAAuB,IAAvB,CAAJ,EACA,OAAO,KAAKC,QAAL,CAAcJ,OAAO,CAAC,IAAD,CAArB,CAAP;AACD;AAtE6C;AAAA;AAAA,iBAwE9C,uBAAcE,MAAd,EAAwD;AAAA;;AACtD,gBAAMF,OAAO,GAAGE,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACAF,mBAAO,CAACK,OAAR,GAAkB,CAAlB;AACAL,mBAAO,CAACM,OAAR,GAAkB,CAAlB;AACA,iBAAKC,iBAAL,GAAyB,IAAzB;AACA,iBAAKhC,iBAAL,CACGsB,aADH,CACiBG,OADjB,EAEGQ,IAFH,CAGI,iEAAS,YAAM;AACb,mBAAI,CAACD,iBAAL,GAAyB,KAAzB;AACD,aAFD,CAHJ,EAOGR,SAPH,CAOa,UAACU,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,qBAAI,CAACC,UAAL,GAAkBF,QAAQ,CAACG,IAAT,CAAc,MAAd,CAAlB;AACD,eAFD,MAEK;AACH,qBAAI,CAACD,UAAL,GAAkB,EAAlB;AACD;AACF,aAbH,EAcE,UAACE,KAAD,EAAgB;AACd,kBAAI;AACF,qBAAI,CAAC7C,OAAL,CAAa6C,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAY3D,OAA/B;AACD,eAFD,CAEE,OAAO2D,KAAP,EAAc;AACd,qBAAI,CAAC7C,OAAL,CAAa6C,KAAb;AACD;AACF,aApBH;AAsBD;AAnG6C;AAAA;AAAA,iBAqG9C,oBAAWX,MAAX,EAAmD;AAAA;;AACjD,gBAAMF,OAAO,GAAGE,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACAF,mBAAO,CAACK,OAAR,GAAkB,CAAlB;AACAL,mBAAO,CAACM,OAAR,GAAkB,CAAlB;AACA,iBAAKQ,cAAL,GAAsB,IAAtB;AACA,iBAAKtC,cAAL,CACGsB,UADH,CACcE,OADd,EAEGQ,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAACM,cAAL,GAAsB,KAAtB;AACD,aAFD,CAHJ,EAOGf,SAPH,CAOa,UAACU,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACK,OAAL,GAAeN,QAAQ,CAACG,IAAT,CAAc,MAAd,CAAf;AACD,eAFD,MAEK;AACH,sBAAI,CAACG,OAAL,GAAe,EAAf;AACD;AACF,aAbH,EAcE,UAACF,KAAD,EAAgB;AACd,kBAAI;AACF,sBAAI,CAAC7C,OAAL,CAAa6C,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAY3D,OAA/B;AACD,eAFD,CAEE,OAAO2D,KAAP,EAAc;AACd,sBAAI,CAAC7C,OAAL,CAAa6C,KAAb;AACD;AACF,aApBH;AAsBD;AAhI6C;AAAA;AAAA,iBAmI9C,kBAASG,EAAT,EAAqB;AAAA;;AACnB,iBAAKpC,OAAL,GAAe,IAAf;AACA,iBAAKR,aAAL,CACGgC,QADH,CACYY,EADZ,EAEGR,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC5B,OAAL,GAAe,KAAf;AACA,oBAAI,CAACC,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGkB,SARH,CASI,UAACU,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,oBAAMO,IAAI,GAAyBR,QAAQ,CAACG,IAAT,CAAc,MAAd,EAAsB,CAAtB,CAAnC;;AACA,sBAAI,CAACM,IAAL,CAAUC,UAAV,CAAqBF,IAArB;;AACA,sBAAI,CAACG,QAAL,GAAgB,KAAhB;AACD,eAJD,MAIO;AACL,sBAAI,CAACA,QAAL,GAAgB,IAAhB;AACD;AACF,aAjBL,EAkBI,UAACP,KAAD,EAAW;AACT,oBAAI,CAAC7C,OAAL,CAAa6C,KAAb;;AACA,oBAAI,CAACO,QAAL,GAAgB,IAAhB;AACD,aArBL;AAuBD;AA5J6C;AAAA;AAAA,iBA8J9C,yBAAa;AACX,gBAAMJ,EAAE,GAAG,KAAK/C,cAAL,CAAoBgC,QAApB,CAA6BC,MAA7B,CAAoCmB,WAA/C;AACA,iBAAKC,QAAL,GAAgB,UAAhB;AACA,iBAAKjD,YAAL,CAAkBkD,QAAlB,CAA2B,KAAKD,QAAhC;AACA,iBAAK7C,cAAL,GAAsB,CACpB;AACE+C,uBAAS,EAAE,MADb;AAEEC,wBAAU,EAAE;AAFd,aADoB,EAKpB;AACED,uBAAS,EAAE,KADb;AAEEC,wBAAU,2BAAoBT,EAApB;AAFZ,aALoB,EASpB;AACEQ,uBAAS,EAAE,QADb;AAEEC,wBAAU;AAFZ,aAToB,EAapB;AACED,uBAAS,EAAE,KAAKF;AADlB,aAboB,CAAtB;AAiBD,WAnL6C,CAqL9C;;AArL8C;AAAA;AAAA,iBAsL9C,0BAAc;AAEZ,iBAAKJ,IAAL,GAAY,KAAKnD,WAAL,CAAiB2D,KAAjB,CAAuB;AACjCC,gCAAkB,EAAE,CAAC,IAAD,CADa;AAEjCC,qBAAO,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWC,QAAZ,CAAP,CAFwB;AAGjCC,qBAAO,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWD,QAAZ,CAAP,CAHwB;AAIjCE,qCAAuB,EAAC,CAAC,IAAD,EAAO,CAAC,2DAAWF,QAAZ,CAAP,CAJS;AAKjCG,0BAAY,EAAC,CAAC,IAAD,CALoB;AAMjC3B,qBAAO,EAAE,CAAC,IAAD,CANwB;AAOjC4B,qBAAO,EAAE,CAAC,IAAD;AAPwB,aAAvB,CAAZ;AASD,WAjM6C,CAmM9C;;AAnM8C;AAAA;AAAA,iBAoM9C,sBAAaC,KAAb,EAA4B;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AAzM6C;AAAA;AAAA,iBA2M9C,wBAAeA,KAAf,EAA2B;AACzBA,iBAAK,GAAG,KAAKhB,IAAL,CAAUkB,GAAV,CAAcF,KAAd,CAAR;AACA,mBAAOA,KAAK,CAACxB,MAAN,IAAgB,SAAhB,IAA6BwB,KAAK,CAACG,OAA1C;AACD;AA9M6C;AAAA;AAAA,iBAgN9C,yBAAgBH,KAAhB,EAA+B;AAC7B,gBAAIL,QAAQ,GAAG,KAAf;AACA,gBAAIS,WAAW,GAAG,IAAI,2DAAJ,EAAlB;;AAEA,gBAAI,KAAKpB,IAAL,CAAUqB,QAAV,CAAmBL,KAAnB,EAA0BM,SAA9B,EAAyC;AACvC,kBAAIC,gBAAgB,GAAG,KAAKvB,IAAL,CAAUqB,QAAV,CAAmBL,KAAnB,EAA0BM,SAA1B,CAAoCF,WAApC,CAAvB;AACAT,sBAAQ,GACNY,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACZ,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AA7N6C;AAAA;AAAA,iBA+N9C,sBAAa;AAAA;;AACX,iBAAKhD,aAAL,GAAqB,IAArB;AACA,iBAAKT,aAAL,CACGsE,UADH,CACc,KAAKxB,IAAL,CAAUyB,KADxB,EAEGnC,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC5B,OAAL,GAAe,KAAf;AACA,oBAAI,CAACC,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGkB,SARH,CASI,UAACU,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAAC1C,OAAL,CAAa4E,OAAb;;AACA,sBAAI,CAAC1E,MAAL,CAAY2E,QAAZ,CAAqB,CAAC,KAAD,CAArB,EAA8B;AAC5BC,4BAAU,EAAE,MAAI,CAAC7E;AADW,iBAA9B;AAGD,eALD,MAKO;AACL,sBAAI,CAACD,OAAL,CAAa6C,KAAb;AACD;AACF,aAlBL,EAmBI,UAACA,KAAD,EAAgB;AACd,kBAAI;AACF,sBAAI,CAAC7C,OAAL,CAAa6C,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAY3D,OAA/B;AACD,eAFD,CAEE,OAAO2D,KAAP,EAAc;AACd,sBAAI,CAAC7C,OAAL,CAAa6C,KAAb;AACD;AACF,aAzBL;AA2BD;AA5P6C;;AAAA;AAAA,S;;;;gBAnB9C;;gBATO;;gBAKA;;gBAAgB;;gBAFgB;;gBAahC;;gBAlBA;;gBACA;;gBAJA;;gBACA;;;;AAgCI/C,yCAAmC,6DAL/C,iEAAU;AACTiF,gBAAQ,EAAE,+BADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAK+C,E,+EAgCvB,2D,EACJ,2F,EACO,+D,EACR,uD,EACO,6D,EACA,mF,EACD,uF,EACK,qG,EACA,uG,EACH,4F,EAzCoB,GAAnClF,mCAAmC,CAAnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eC3Bb;AAKA;AAKA;;;UAWamF,4CAA4C;AA+CvD,8DACUlF,WADV,EAEUK,aAFV,EAGUJ,OAHV,EAIUC,cAJV,EAKUK,iBALV,EAMU4E,mBANV,EAOU1E,cAPV,EAQU2E,iBARV,EASUC,cATV,EASiD;AAAA;;AARvC,eAAArF,WAAA,GAAAA,WAAA;AACA,eAAAK,aAAA,GAAAA,aAAA;AACA,eAAAJ,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAK,iBAAA,GAAAA,iBAAA;AACA,eAAA4E,mBAAA,GAAAA,mBAAA;AACA,eAAA1E,cAAA,GAAAA,cAAA;AACA,eAAA2E,iBAAA,GAAAA,iBAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AAtDV,eAAA9B,QAAA,GAAW,oBAAX;AAKA,eAAA7C,cAAA,GAAsB,EAAtB;AAIA;;AACA,eAAAG,OAAA,GAAU,KAAV;AACA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAuC,QAAA,GAAW,IAAX;AAKA,eAAAL,OAAA,GAAS,EAAT;AAGA,eAAAsC,cAAA,GAAiB,KAAjB;AACA,eAAAvC,cAAA,GAAiB,KAAjB;AACA,eAAAwC,oBAAA,GAAsB,KAAtB;AACA,eAAAC,iBAAA,GAAmB,KAAnB;AAGA,eAAAC,iBAAA,GAAoB,EAApB;AACA,eAAAC,wBAAA,GAA2B,KAA3B;AAEA,eAAAC,4BAAA,GAA2D;AACzDC,uBAAW,EAAE,KAD4C;AAEzDC,sBAAU,EAAE,GAF6C;AAGzDC,iBAAK,EAAE;AAHkD,WAA3D;AAMA,eAAAC,kBAAA,GAAiD;AAC/CH,uBAAW,EAAE,KADkC;AAE/CC,sBAAU,EAAE;AAFmC,WAAjD;AAKA,eAAAG,MAAA,GAAS;AACPhD,mBAAO,EAAE,KADF;AAEPyC,6BAAiB,EAAE;AAFZ,WAAT;AAgBE,eAAKtC,IAAL,GAAY,KAAKnD,WAAL,CAAiB2D,KAAjB,CAAuB;AACjC,kCAAsB,CAAC;AAACiB,mBAAK,EAAC,IAAP;AAAaqB,sBAAQ,EAAC;AAAtB,aAAD,CADW;AAEjC,uBAAW,CAAC,IAAD;AAFsB,WAAvB,CAAZ;AAKA,eAAKC,WAAL,GAAmB,KAAKlG,WAAL,CAAiB2D,KAAjB,CAAuB;AACxCwC,8BAAkB,EAAC,CAAC,IAAD,CADqB;AAExCC,mBAAO,EAAC,CAAC,IAAD,CAFgC;AAGxCC,mCAAuB,EAAC,CAAC,IAAD,CAHgB;AAIxCC,wBAAY,EAAC,CAAC,IAAD,CAJ2B;AAKxCC,0BAAc,EAAC,CAAC,IAAD,CALyB;AAMxCC,mBAAO,EAAC,CAAC,IAAD;AANgC,WAAvB,CAAnB;AAQD;;AAvEsD;AAAA;AAAA,iBAyEvD,oBAAW;AAET,iBAAKjG,iBAAL,CACGmB,eADH,GAEGM,SAFH;AAGA,iBAAKH,gBAAL;AACA,iBAAKF,aAAL;AACA,iBAAK8E,SAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,gBAAL;AACA,iBAAKC,UAAL;AACD;AApFsD;AAAA;AAAA,iBAsFvD,0BAAiBzE,MAAjB,EAAyD;AAAA;;AACvD,gBAAMF,OAAO,GAAGE,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACAF,mBAAO,CAACK,OAAR,GAAkB,CAAlB;AACAL,mBAAO,CAACM,OAAR,GAAkB,CAAlB;AACA,iBAAKgD,oBAAL,GAA4B,IAA5B;AACA,iBAAK9E,cAAL,CACGsB,UADH,CACcE,OADd,EAEGQ,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC8C,oBAAL,GAA4B,KAA5B;AACD,aAFD,CAHJ,EAOGvD,SAPH,CAOa,UAACU,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACkE,aAAL,GAAqBnE,QAAQ,CAACG,IAAT,CAAc,MAAd,CAArB;AACD,eAFD,MAEK;AACH,sBAAI,CAAC5C,OAAL,CAAa6G,MAAb,CAAoB,6BAApB;AACD;AACF,aAbH,EAcE,UAAChE,KAAD,EAAgB;AACd,kBAAM3D,OAAO,GAAG2D,KAAK,CAACA,KAAN,CAAY3D,OAA5B;AACAA,qBAAO,GAAG,MAAI,CAACc,OAAL,CAAa6C,KAAb,CAAmB3D,OAAnB,CAAH,GAAgC,MAAI,CAACc,OAAL,CAAa6C,KAAb,EAAvC;AACD,aAjBH;AAmBD;AA9GsD;AAAA;AAAA,iBAgHvD,yBAAgB;AAAA;;AACd,iBAAK0C,iBAAL,GAAyB,IAAzB;AACA,iBAAKJ,iBAAL,CACGsB,aADH,CACiB;AAAEpE,qBAAO,EAAE,GAAX;AAAgBC,qBAAO,EAAE;AAAzB,aADjB,EAEGE,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC+C,iBAAL,GAAyB,KAAzB;AACD,aAFD,CAHJ,EAOGxD,SAPH,CAOa,UAACU,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACoE,UAAL,GAAkBrE,QAAQ,CAACG,IAAT,CAAc,MAAd,CAAlB;AACD,eAFD,MAEK;AACH,sBAAI,CAAC5C,OAAL,CAAa6G,MAAb,CAAoB,6BAApB;AACD;AACF,aAbH,EAcE,UAAChE,KAAD,EAAgB;AACd,kBAAM3D,OAAO,GAAG2D,KAAK,CAACA,KAAN,CAAY3D,OAA5B;AACAA,qBAAO,GAAG,MAAI,CAACc,OAAL,CAAa6C,KAAb,CAAmB3D,OAAnB,CAAH,GAAgC,MAAI,CAACc,OAAL,CAAa6C,KAAb,EAAvC;AACD,aAjBH;AAmBD;AArIsD;AAAA;AAAA,iBAuIvD,sBAAa;AAAA;;AACX,iBAAKkE,cAAL,GAAsB,IAAtB;AACA,iBAAK3B,cAAL,CACGuB,UADH,CACc;AAAEtE,qBAAO,EAAE,GAAX;AAAgBC,qBAAO,EAAE,GAAzB;AAA8B0E,oBAAM,EAAE;AAAtC,aADd,EAEGxE,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAACuE,cAAL,GAAsB,KAAtB;AACD,aAFD,CAHJ,EAOGhF,SAPH,CAOa,UAACU,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACuE,OAAL,GAAexE,QAAQ,CAACG,IAAT,CAAc,MAAd,CAAf;AACD,eAFD,MAEK;AACH,sBAAI,CAACqE,OAAL,GAAe,EAAf;;AACA,sBAAI,CAACjH,OAAL,CAAa6G,MAAb,CAAoB,4BAApB;AACD;AACF,aAdH,GAeE,UAAChE,KAAD,EAAgB;AACd,kBAAM3D,OAAO,GAAG2D,KAAK,CAACA,KAAN,CAAY3D,OAA5B;AACAA,qBAAO,GAAG,MAAI,CAACc,OAAL,CAAa6C,KAAb,CAAmB3D,OAAnB,CAAH,GAAgC,MAAI,CAACc,OAAL,CAAa6C,KAAb,EAAvC;AACD,aAlBH;AAmBD;AA5JsD;AAAA;AAAA,iBA8JvD,4BAAmB;AACjB,gBAAMX,MAAM,GAAG,KAAKjC,cAAL,CAAoBgC,QAApB,CAA6BC,MAA5C;;AAEA,gBAAI,EAACA,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEc,EAAT,CAAJ,EAAgB;AACd,mBAAKpC,OAAL,GAAe,KAAf;AACA;AACD;;AACD,iBAAKsC,IAAL,CAAUkB,GAAV,CAAc,oBAAd,EAAoC8C,QAApC,CAA6ChF,MAAM,CAAC,IAAD,CAAnD;AACA,iBAAKiF,oBAAL,CAA0B;AAAC,oCAAsBjF,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEc;AAA/B,aAA1B;AACD;AAvKsD;AAAA;AAAA,iBAyKvD,yBAAgB;AACd,gBAAMA,EAAE,GAAG,KAAK/C,cAAL,CAAoBgC,QAApB,CAA6BC,MAA7B,CAAoCmB,WAA/C;AACA,iBAAK5C,cAAL,GAAsB,CACpB;AACE+C,uBAAS,EAAE,MADb;AAEEC,wBAAU,EAAE;AAFd,aADoB,EAKpB;AACED,uBAAS,EAAE,UADb;AAEEC,wBAAU,iCAA0BT,EAA1B;AAFZ,aALoB,EASpB;AACEQ,uBAAS,EAAE,QADb;AAEEC,wBAAU;AAFZ,aAToB,EAapB;AACED,uBAAS,EAAE,KAAKF;AADlB,aAboB,CAAtB;AAiBD;AA5LsD;AAAA;AAAA,iBA8LvD,qBAAY;AAAA;;AACV,iBAAK8D,aAAL,GAAqB,IAArB;AACA,iBAAKhH,aAAL,CACGoG,SADH,CACa;AAAEnE,qBAAO,EAAE,GAAX;AAAgBC,qBAAO,EAAE;AAAzB,aADb,EAEGE,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC4E,aAAL,GAAqB,KAArB;AACD,aAFD,CAHJ,EAOGrF,SAPH,CAOa,UAACU,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAAC2E,MAAL,GAAc5E,QAAQ,CAACG,IAAT,CAAc,MAAd,CAAd;AACD,eAFD,MAEK;AACH,sBAAI,CAAC5C,OAAL,CAAa6G,MAAb,CAAoB,6BAApB;AACD;AACF,aAbH;AAcD;AA9MsD;AAAA;AAAA,iBAgNvD,sBAAU;AAAA;;;;AAER,gBAAI3E,MAAM,GAAG,CAAH,KAAG,QAAE,IAAF,IAAE,aAAF,GAAE,EAAF,GAAM,KAAK+D,WAAL,CAAiBtB,KAApC;AACAzC,kBAAM,CAACG,OAAP,GAAiB,CAAjB;AACAH,kBAAM,CAACI,OAAP,GAAiB,CAAjB;AAGA,iBAAK+C,cAAL,GAAsB,IAAtB;AAEA,iBAAKjF,aAAL,CACG0B,UADH,CACcI,MADd,EAEGM,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC6C,cAAL,GAAsB,KAAtB;AACD,aAFD,CAHJ,EAOGtD,SAPH,CAQI,UAAAU,QAAQ,EAAI;AACV,kBAAIM,OAAO,GAAGN,QAAQ,CAACG,IAAT,CAAc,MAAd,CAAd;AACA0E,qBAAO,CAACC,GAAR,CAAYxE,OAAZ;AACA,oBAAI,CAACA,OAAL,GAAeA,OAAO,CAACyE,MAAR,CAAe,UAAAC,KAAK,EAAI;AACrC,uBAAO,CAAC,MAAI,CAACjC,iBAAL,CAAuBkC,IAAvB,CAA4B,UAAAC,IAAI;AAAA,yBAAIA,IAAI,CAACzB,kBAAL,IAA2BuB,KAAK,CAACG,EAArC;AAAA,iBAAhC,CAAR;AACD,eAFc,CAAf;AAIA,oBAAI,CAAC9B,kBAAL,CAAwBH,WAAxB,GAAsC,MAAI,CAAC5C,OAAL,CAAa8E,MAAb,GAAsB,CAAtB,GAA0B,IAA1B,GAAiC,KAAvE;AAED,aAjBL;AAmBD;AA5OsD;AAAA;AAAA,iBA8OvD,8BAAqB3F,MAArB,EAA2B;AAAA;;AACzB,iBAAKY,cAAL,GAAsB,IAAtB;AACAZ,kBAAM,CAACG,OAAP,GAAiB,GAAjB;AACAH,kBAAM,CAACI,OAAP,GAAiB,GAAjB;AACAJ,kBAAM,CAAC4F,OAAP,GAAiB,aAAjB;AAEA,iBAAK1H,aAAL,CACG+G,oBADH,CACwBjF,MADxB,EAEGM,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACM,cAAL,GAAsB,KAAtB;AACD,aAFD,CAHJ,EAOGf,SAPH,CAQI,UAAAU,QAAQ,EAAI;AACV,kBAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACzB;AACD;;AAED,qBAAI,CAAC8C,iBAAL,GAAyB/C,QAAQ,CAACG,IAAT,CAAc,MAAd,CAAzB;AACA,qBAAI,CAAC8C,4BAAL,CAAkCC,WAAlC,GAAgD,OAAI,CAACH,iBAAL,CAAuBqC,MAAvB,GAAgC,CAAhC,GAAoC,IAApC,GAA2C,KAA3F;AACD,aAfL;AAiBD;AArQsD;AAAA;AAAA,iBAuQvD,6BAAiB;AAAA;;AACf,gBAAI9E,OAAO,GAAG,KAAKA,OAAL,CAAayE,MAAb,CAAoB,UAAAC,KAAK;AAAA,qBAAIA,KAAK,CAACM,OAAN,IAAiBN,KAAK,CAACO,OAAN,IAAiB,IAAtC;AAAA,aAAzB,CAAd;AAEAV,mBAAO,CAACC,GAAR,CAAYxE,OAAZ;AACA,iBAAKgD,MAAL,CAAYhD,OAAZ,GAAsB,KAAtB;AACAA,mBAAO,CAACkF,GAAR,CAAY,UAAAN,IAAI,EAAI;;;AAElBA,kBAAI,CAAC/G,OAAL,GAAe,IAAf;;AAEA,kBAAG,OAAI,CAAC4E,iBAAL,CAAuBkC,IAAvB,CAA4B,UAAAD,KAAK;AAAA,uBAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEvB,kBAAP,MAA8ByB,IAAI,CAACzB,kBAAvC;AAAA,eAAjC,CAAH,EAA+F;AAC7F;AACD;;AAED,kBAAIhE,MAAM,GAAG;AACX,sCAAsB,CAAF,KAAE,OAAI,CAACgB,IAAL,CAAUkB,GAAV,CAAc,oBAAd,EAAoCO,KAApC,MAAyC,IAAzC,IAAyC,aAAzC,GAAyC,EAAzC,GAA6C,EADxD;AAEX,sCAAsB,CAAF,KAAEgD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEzB,kBAAN,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,EAAxB,GAA4B,EAFvC;AAGX,2BAAW,GAHA;AAIX,2BAAW,CAAF,KAAEyB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEK,OAAN,MAAa,IAAb,IAAa,aAAb,GAAa,EAAb,GAAiB;AAJjB,eAAb;;AAMA,qBAAI,CAAC5H,aAAL,CACG8H,qBADH,CACyBhG,MADzB,EAEGH,SAFH,CAGI,UAAAU,QAAQ,EAAI;AACV,oBAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AAEzB,yBAAI,CAAC8C,iBAAL,gCAA6B,OAAI,CAACA,iBAAlC,IAAmD,gCAE5CmC,IAF4C,GAExC;AACPI,2BAAO,EAAE,KADF;AAEPC,2BAAO,EAAEL,IAAI,CAACK,OAFP;AAGP7B,2BAAO,EAAEwB,IAAI,CAACxB,OAHP;AAIPI,2BAAO,EAAEoB,IAAI,CAACpB,OAJP;AAKPF,gCAAY,EAAEsB,IAAI,CAACtB,YALZ;AAMPzF,2BAAO,EAAE,KANF;AAOPsF,sCAAkB,EAAEyB,IAAI,CAACzB,kBAPlB;AAQPvC,sCAAkB,EAAE,OAAI,CAACT,IAAL,CAAUkB,GAAV,CAAc,oBAAd,EAAoCO;AARjD,mBAFwC,CAAnD;AAaA2C,yBAAO,CAACC,GAAR,CAAY,OAAI,CAAC/B,iBAAjB;AAEA,yBAAI,CAACzC,OAAL,GAAe,OAAI,CAACA,OAAL,CAAayE,MAAb,CAAoB,UAAAC,KAAK;AAAA,2BAAI,CAACA,KAAK,CAACM,OAAX;AAAA,mBAAzB,CAAf;AACA,yBAAI,CAACrC,4BAAL,CAAkCC,WAAlC,GAAgD,OAAI,CAACH,iBAAL,CAAuBqC,MAAvB,GAAgC,CAAhC,GAAoC,IAApC,GAA2C,KAA3F;AAED;AACF,eAzBL;AA2BD,aAzCD;AA2CD;AAvTsD;AAAA;AAAA,iBAyTvD,yBAAa;AACX,mBAAO,KAAK3C,mBAAL,CAAyBiD,WAAzB,CACL,QADK,EAEL,oBAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AAjUsD;AAAA;AAAA,iBAmUvD,6BAAoBV,KAApB,EAA0B;AAAA;;AACxB,gBAAI1E,OAAO,GAAG0E,KAAK,GAAG,CAACA,KAAD,CAAH,GAAa,KAAKjC,iBAAL,CAAuBgC,MAAvB,CAA8B,UAAAC,KAAK;AAAA,qBAAIA,KAAK,CAACM,OAAV;AAAA,aAAnC,CAAhC;AACAT,mBAAO,CAACC,GAAR,CAAYxE,OAAZ;AACA,iBAAKgD,MAAL,CAAYP,iBAAZ,GAAgC,KAAhC;;AAEA,gBAAGzC,OAAO,CAAC8E,MAAR,IAAkB,CAArB,EAAuB;AACrB,mBAAK7H,OAAL,CAAa6G,MAAb,CAAoB,2BAApB;AACA;AACD;;AAED,iBAAKuB,aAAL,GACGrG,SADH,CAEI,UAACU,QAAD,EAAuB;AAErB,kBAAG,CAACA,QAAJ,EAAa;AACX;AACD;;AACDM,qBAAO,CAACkF,GAAR,CAAY,UAAAN,IAAI,EAAI;AAClBA,oBAAI,CAACtF,OAAL,GAAe,GAAf;AACAsF,oBAAI,CAAC/G,OAAL,GAAe,IAAf;;AAEA,uBAAI,CAACR,aAAL,CACGiI,iBADH,CACqBV,IADrB,EAEGnF,IAFH,CAEQ,iEAAS,YAAM;AACnBmF,sBAAI,CAAC/G,OAAL,GAAe,KAAf;AACD,iBAFK,CAFR,EAKGmB,SALH,CAMI,UAAAU,QAAQ,EAAI;AAEV,sBAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACzB;AACD;;AACD,yBAAI,CAAC8C,iBAAL,GAAyB,OAAI,CAACA,iBAAL,CACtBgC,MADsB,CACf,UAAAC,KAAK;AAAA,2BAAIA,KAAK,CAACvB,kBAAN,IAA4ByB,IAAI,CAACzB,kBAArC;AAAA,mBADU,CAAzB;AAGA,yBAAI,CAACR,4BAAL,CAAkCC,WAAlC,GAAgD,OAAI,CAACH,iBAAL,CAAuBqC,MAAvB,GAAgC,CAAhC,GAAoC,IAApC,GAA2C,KAA3F;AACD,iBAfL;;AAiBE,2BAAChF,KAAD,EAAW;AACT,sBAAM3D,OAAO,GAAG2D,KAAK,CAACA,KAAN,CAAY3D,OAA5B;AACAA,yBAAO,GAAG,OAAI,CAACc,OAAL,CAAa6C,KAAb,CAAmB3D,OAAnB,CAAH,GAAgC,OAAI,CAACc,OAAL,CAAa6C,KAAb,EAAvC;AACD,iBAHD;AAKH,eA1BD;AA4BD,aAnCL;AAqCD;AAlXsD;AAAA;AAAA,iBAoXvD,qBAAY8E,IAAZ,EAAwB;AAAA;;AACtBL,mBAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,iBAAK5B,MAAL,CAAY4B,IAAZ,IAAoB,CAAC,KAAK5B,MAAL,CAAY4B,IAAZ,CAArB;AACA,iBAAKA,IAAL,EAAWM,GAAX,CAAe,UAAAR,KAAK;AAAA,qBAAIA,KAAK,CAACM,OAAN,GAAgB,OAAI,CAAChC,MAAL,CAAY4B,IAAZ,CAApB;AAAA,aAApB;AAED,WAzXsD,CA2XvD;;AA3XuD;AAAA;AAAA,iBA4XvD,sBAAazD,KAAb,EAA4B;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AAjYsD;AAAA;AAAA,iBAmYvD,wBAAeA,KAAf,EAA2B;AACzBA,iBAAK,GAAG,KAAK+B,WAAL,CAAiB7B,GAAjB,CAAqBF,KAArB,CAAR;AACA,mBAAOA,KAAK,CAACxB,MAAN,IAAgB,SAAhB,IAA6BwB,KAAK,CAACG,OAA1C;AACD;AAtYsD;AAAA;AAAA,iBAwYvD,yBAAgBH,KAAhB,EAA+B;AAC7B,gBAAIL,QAAQ,GAAG,KAAf;AACA,gBAAIS,WAAW,GAAG,IAAI,0DAAJ,EAAlB;;AAEA,gBAAI,KAAK2B,WAAL,CAAiB1B,QAAjB,CAA0BL,KAA1B,EAAiCM,SAArC,EAAgD;AAC9C,kBAAIC,gBAAgB,GAAG,KAAKwB,WAAL,CAAiB1B,QAAjB,CAA0BL,KAA1B,EAAiCM,SAAjC,CAA2CF,WAA3C,CAAvB;AACAT,sBAAQ,GACNY,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACZ,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AArZsD;AAAA;AAAA,iBAuZzD,sBAAayE,KAAb,EAAkB;AAChBhB,mBAAO,CAACC,GAAR,CAAYe,KAAZ;AACD;AAzZwD;;AAAA;AAAA,S;;;;gBAnBxB;;gBAIxB;;gBACA;;gBAJA;;gBAKA;;gBATA;;gBAFA;;gBAFA;;gBAmBA;;;;AAOIrD,kDAA4C,6DALxD,gEAAU;AACTF,gBAAQ,EAAE,qCADD;AAETC,gBAAQ,EAAR,qFAFS;;AAAA,OAAV,CAKwD,E,+EAgDhC,0D,EACE,kF,EACN,4F,EACO,8D,EACG,sG,EACE,8G,EACL,4F,EACG,uG,EACH,oG,EAxD6B,GAA5CC,4CAA4C,CAA5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC2BAsD,wBAAwB;AAAA;AAAA,Q;;AAAxBA,8BAAwB,6DA1BpC,+DAAS;AACRC,oBAAY,EAAE,CACZ,wFADY,EAEZ,iGAFY,EAGZ,8HAHY,CADN;AAMRC,eAAO,EAAE,CACP,4DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,mEALO,EAMP,+DAAiBC,OAAjB,EANO,EAOP,4DAAcA,OAAd,EAPO,EAQP,yDAAWA,OAAX,EARO,EASP,+DAAiBA,OAAjB,EATO,EAUP,iEAAmBA,OAAnB,EAVO,EAWP,0DAAYA,OAAZ,EAXO,EAYP,6EAZO,EAaP,sFAbO,EAcP,qGAdO,EAeP,kFAfO,EAgBP,0FAhBO,EAiBP,uFAjBO;AAND,OAAT,CA0BoC,GAAxBH,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9Cb,UAAMI,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACED,YAAI,EAAE,MADR;AAEEC,iBAAS,EAAE;AAFb,OALqB,EASrB;AACED,YAAI,EAAE,KADR;AAEEC,iBAAS,EAAE;AAFb,OATqB,EAarB;AACED,YAAI,EAAE,aADR;AAEEC,iBAAS,EAAE;AAFb,OAbqB,EAiBrB;AACED,YAAI,EAAE,IADR;AAEEC,iBAAS,EAAE;AAFb,OAjBqB,CAAvB;;UA2BaC,+BAA+B;AAAA;AAAA,Q;;AAA/BA,qCAA+B,6DAJ3C,+DAAS;AACRL,eAAO,EAAE,CAAC,6DAAaM,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI2C,GAA/BF,+BAA+B,CAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eChCb;AAKA;AASA;;;UAmBaG,gCAAgC;AAqE3C;AAEA,kDACUC,KADV,EAEUlJ,OAFV,EAGUD,WAHV,EAIUoJ,WAJV,EAKUC,WALV,EAMUC,aANV,EAOUpJ,cAPV,EAQUqJ,kBARV,EASUpE,mBATV,EAUU9E,aAVV,EAWUmJ,gBAXV,EAYU/I,cAZV,EAYoD;AAAA;;AAX1C,eAAA0I,KAAA,GAAAA,KAAA;AACA,eAAAlJ,OAAA,GAAAA,OAAA;AACA,eAAAD,WAAA,GAAAA,WAAA;AACA,eAAAoJ,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAApJ,cAAA,GAAAA,cAAA;AACA,eAAAqJ,kBAAA,GAAAA,kBAAA;AACA,eAAApE,mBAAA,GAAAA,mBAAA;AACA,eAAA9E,aAAA,GAAAA,aAAA;AACA,eAAAmJ,gBAAA,GAAAA,gBAAA;AACA,eAAA/I,cAAA,GAAAA,cAAA;AAzEV,eAAAgJ,eAAA,GAAkB,KAAlB,CAyEoD,CAnEpD;;AACA,eAAA5I,OAAA,GAAU,IAAV;AACA,eAAAC,aAAA,GAAgB,KAAhB,CAiEoD,CA7DpD;;AACA,eAAA4I,UAAA,GAAkB,EAAlB,CA4DoD,CAvDpD;;AACA,eAAAC,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C;AAIA,eAAAC,uBAAA,GAAsD;AACpDjE,uBAAW,EAAE,KADuC;AAEpDC,sBAAU,EAAE,GAFwC;AAGpDC,iBAAK,EAAE;AAH6C,WAAtD,CAkDoD,CA5CpD;;AACA,eAAA/E,KAAA,GAAQ,CACN;AACEC,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADM,EAKN;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALM,CAAR,CA2CoD,CAhCpD;;AACA,eAAA6I,SAAA,GAA8B,CAC5B;AACE7G,cAAE,EAAE,CADN;AAEE8G,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACE/G,cAAE,EAAE,CADN;AAEE8G,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA;;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AAgBI;;AApFuC;AAAA;AAAA,iBAsF3C,oBAAW;AACT,iBAAKC,SAAL;AACA,iBAAKzI,aAAL;AACA,iBAAKE,gBAAL;AACA,iBAAKwI,oBAAL;AACA,iBAAKC,eAAL;AACA,iBAAKC,YAAL;AACA,iBAAKxI,UAAL;AACD;AA9F0C;AAAA;AAAA,iBAgG3C,uBAAc;AACZ,iBAAKyI,2BAAL,CAAiCC,WAAjC;AACD;AAlG0C;AAAA;AAAA,iBAoG3C,4BAAmB;AAAA;;AACjB,iBAAKD,2BAAL,GAAmC,KAAKtK,cAAL,CAAoBwK,WAApB,CAAgC1I,SAAhC,CACjC,UAACU,QAAD,EAAc;AACZ,kBAAMiI,SAAS,GAAG,OAAI,CAACrB,aAAL,CAAmBsB,kBAAnB,CAAsClI,QAAtC,CAAlB;;AACA,qBAAI,CAACS,IAAL,CAAUC,UAAV,CAAqBuH,SAArB;;AACA,kBAAIA,SAAS,CAACvI,cAAV,CAAyB,cAAzB,CAAJ,EACE,OAAI,CAAC6H,YAAL,GAAoBU,SAAS,CAACE,YAA9B;;AACA,qBAAI,CAACpE,SAAL,CAAe,OAAI,CAACqE,SAAL,EAAf;AACH,aAPgC,CAAnC;AASD;AA9G0C;AAAA;AAAA,iBAgH3C,gCAAoB;AAAA;;AAClB,iBAAKC,2BAAL,GAAmC,KAAKxB,kBAAL,CAAwByB,MAAxB,CAA+BhJ,SAA/B,CACjC,UAACuG,KAAD,EAAgB;AACd,qBAAI,CAACkB,eAAL,GAAuBlB,KAAK,CAAC0C,OAA7B;AACD,aAHgC,CAAnC;AAKD;AAtH0C;AAAA;AAAA,iBAwH3C,mBAAU;AACR,iBAAK9H,IAAL,CAAU+H,KAAV;AACA,iBAAK/H,IAAL,CAAUC,UAAV,CAAqB;AACnB+H,kBAAI,EAAE,CADa;AAEnBN,0BAAY,EAAE,GAFK;AAGnBO,kBAAI,EAAE,CAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAD;AAHa,aAArB;AAKD;AA/H0C;AAAA;AAAA,iBAiI3C,sBAAanJ,MAAb,EAAuD;AAAA;;AACrD,gBAAMF,OAAO,GAAGE,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACAF,mBAAO,CAACK,OAAR,GAAkB,CAAlB;AACAL,mBAAO,CAACM,OAAR,GAAkB,CAAlB;AACA,iBAAKgJ,gBAAL,GAAwB,IAAxB;AACA,iBAAK/B,gBAAL,CACGe,YADH,CACgBtI,OADhB,EAEGQ,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC8I,gBAAL,GAAwB,KAAxB;AACD,aAFD,CAHJ,EAOGvJ,SAPH,CAOa,UAACU,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC6I,SAAL,GAAiB9I,QAAQ,CAACG,IAAT,CAAc,MAAd,CAAjB;AACD,eAFD,MAEK;AACH,uBAAI,CAAC2I,SAAL,GAAiB,EAAjB;AACD;AACF,aAbH,EAcE,UAAC1I,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7C,OAAL,CAAa6C,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAY3D,OAA/B;AACD,eAFD,CAEE,OAAO2D,KAAP,EAAc;AACd,uBAAI,CAAC7C,OAAL,CAAa6C,KAAb;AACD;AACF,aApBH;AAsBD;AA5J0C;AAAA;AAAA,iBA8J3C,oBAAWX,MAAX,EAAmD;AAAA;;AACjD,gBAAMF,OAAO,GAAGE,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,MAAA,GAAU,EAA1B;;AACAF,mBAAO,CAACK,OAAR,GAAkB,CAAlB;AACAL,mBAAO,CAACM,OAAR,GAAkB,CAAlB;AACA,iBAAKQ,cAAL,GAAsB,IAAtB;AACA,iBAAKtC,cAAL,CACGsB,UADH,CACcE,OADd,EAEGQ,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAACM,cAAL,GAAsB,KAAtB;AACD,aAFD,CAHJ,EAOGf,SAPH,CAOa,UAACU,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACK,OAAL,GAAeN,QAAQ,CAACG,IAAT,CAAc,MAAd,CAAf;AACD,eAFD,MAEK;AACH,uBAAI,CAACG,OAAL,GAAe,EAAf;AACD;AACF,aAbH,EAcE,UAACF,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7C,OAAL,CAAa6C,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAY3D,OAA/B;AACD,eAFD,CAEE,OAAO2D,KAAP,EAAc;AACd,uBAAI,CAAC7C,OAAL,CAAa6C,KAAb;AACD;AACF,aApBH;AAsBD;AAzL0C;AAAA;AAAA,iBA2L3C,qBAAY;AACV,iBAAKK,IAAL,GAAY,KAAKnD,WAAL,CAAiB2D,KAAjB,CAAuB;AACjCC,gCAAkB,EAAE,CAAC,IAAD,CADa;AAEjCC,qBAAO,EAAE,CAAC,IAAD,CAFwB;AAGjC4H,8BAAgB,EAAC,CAAC,IAAD,CAHgB;AAIjCrF,qBAAO,EAAC,CAAC,IAAD,CAJyB;AAKjCsF,8BAAgB,EAAC,CAAC,IAAD,CALgB;AAMjCC,qBAAO,EAAC,CAAC,IAAD,CANyB;AAOjCrJ,qBAAO,EAAE,CAAC,IAAD,CAPwB;AAQjC4B,qBAAO,EAAE,CAAC,IAAD,CARwB;AASjC0H,qBAAO,EAAE,CAAC,IAAD,CATwB;AAUjCC,qBAAO,EAAE,CAAC,IAAD,CAVwB;AAWjCC,qBAAO,EAAE,CAAC,IAAD,CAXwB;AAYjCC,qBAAO,EAAE,CAAC,IAAD,CAZwB;AAajCZ,kBAAI,EAAE,CAAC,CAAD,CAb2B;AAcjCN,0BAAY,EAAE,CAAC,KAAKZ,YAAN,CAdmB;AAejCmB,kBAAI,EAAE,CAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAD;AAf2B,aAAvB,CAAZ;AAiBD;AA7M0C;AAAA;AAAA,iBA+M3C,0BAAiBrB,YAAjB,EAA+B;AAC7B,iBAAKA,YAAL,GAAoBA,YAApB;AACA,iBAAK+B,QAAL;AACD;AAlN0C;AAAA;AAAA,iBAoN3C,yBAAgB;AACd,gBAAM/I,EAAE,GAAG,KAAK/C,cAAL,CAAoBgC,QAApB,CAA6BC,MAA7B,CAAoCmB,WAA/C;AACA,iBAAK5C,cAAL,GAAsB,CACpB;AACE+C,uBAAS,EAAE,MADb;AAEEC,wBAAU;AAFZ,aADoB,EAKpB;AACED,uBAAS,EAAE,KADb;AAEEC,wBAAU,2BAAoBT,EAApB;AAFZ,aALoB,EASpB;AACEQ,uBAAS,EAAE;AADb,aAToB,CAAtB;AAaD;AAnO0C;AAAA;AAAA,iBAqO3C,oBAAW;AACT,iBAAK8F,kBAAL,CAAwB0C,IAAxB;AACA,iBAAK9I,IAAL,CAAUkB,GAAV,CAAc,MAAd,EAAsB8C,QAAtB,CAA+B,CAA/B;AACA,iBAAKhE,IAAL,CAAUkB,GAAV,CAAc,MAAd,EAAsB8C,QAAtB,CAA+B,IAAIkE,IAAJ,GAAWC,OAAX,EAA/B;AACA,iBAAKnC,KAAL,CAAWrE,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAK7E,cADK;AAEtBwK,yBAAW,EAAE,KAAKpB,aAAL,CAAmB4C,kBAAnB,CAAsC,KAAKpB,SAAL,EAAtC;AAFS,aAAxB;AAID;AA7O0C;AAAA;AAAA,iBA+O3C,mBAAUxD,MAAV,EAAqC;AACnC,iBAAKF,oBAAL,CAA0B;AAACxD,gCAAkB,EAAE0D,MAAM,CAAC1D;AAA5B,aAA1B;AACA,iBAAK2F,kBAAL,CAAwBhK,IAAxB;AACA,iBAAK4M,gBAAL,GAAwB7E,MAAxB;AACA,iBAAKiC,kBAAL,CAAwB6C,cAAxB,CAAuC,KAAvC;AACD;AApP0C;AAAA;AAAA,iBAsP3C,mBAAUjK,MAAV,EAAmB;AAAA;;AACjB,gBAAI,CAAC,KAAKtB,OAAV,EAAmB,KAAKC,aAAL,GAAqB,IAArB;AACnB,iBAAKT,aAAL,CACGoG,SADH,CACatE,MADb,EAEGM,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC5B,OAAL,GAAe,KAAf;AACA,qBAAI,CAACC,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGkB,SARH,CASI,UAACU,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC2E,MAAL,GAAc5E,QAAQ,CAACG,IAAT,CAAc,MAAd,CAAd;AACA,uBAAI,CAACqH,UAAL,GAAkBxH,QAAQ,CAACG,IAAT,CAAc,OAAd,CAAlB;AACA,uBAAI,CAACQ,QAAL,GAAgB,KAAhB;AACD,eAJD,MAIO;AACL,uBAAI,CAACA,QAAL,GAAgB,IAAhB;AACA,uBAAI,CAACiE,MAAL,GAAc,EAAd;AACD;AACF,aAlBL,EAmBI,UAACxE,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAACO,QAAL,GAAgB,IAAhB;;AACA,uBAAI,CAACpD,OAAL,CAAa6C,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAY3D,OAA/B;AACD,eAHD,CAGE,OAAO2D,KAAP,EAAc;AACd,uBAAI,CAAC7C,OAAL,CAAa6C,KAAb;AACD;AACF,aA1BL;AA4BC;AApRwC;AAAA;AAAA,iBAuRzC,8BAAqBX,MAArB,EAA2B;AAAA;;AACzB,iBAAKkK,wBAAL,GAAgC,IAAhC;AACAlK,kBAAM,CAACG,OAAP,GAAiB,GAAjB;AACAH,kBAAM,CAACI,OAAP,GAAiB,GAAjB;AACAJ,kBAAM,CAAC4F,OAAP,GAAiB,SAAjB;AACA5F,kBAAM,CAAC4F,OAAP,GAAiB,KAAjB;AACAR,mBAAO,CAACC,GAAR,CAAYrF,MAAZ;AACA,iBAAK9B,aAAL,CACG+G,oBADH,CACwBjF,MADxB,EAEGM,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC4J,wBAAL,GAAgC,KAAhC;AACD,aAFD,CAHJ,EAOGrK,SAPH,CAQI,UAACU,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC2J,iBAAL,GAAyB5J,QAAQ,CAACG,IAAT,CAAc,MAAd,CAAzB;;AAEA,oBAAI,OAAI,CAACyJ,iBAAL,CAAuBxE,MAAvB,GAAgC,CAApC,EAAuC;AACrC,yBAAI,CAAC+B,uBAAL,CAA6BjE,WAA7B,GAA2C,IAA3C;AACD;;AAED,uBAAI,CAAC2G,cAAL,GAAsB,KAAtB;AACD,eARD,MAQO;AACL,uBAAI,CAACtM,OAAL,CAAa6G,MAAb,CAAoB,gCAApB;;AACA,uBAAI,CAACyF,cAAL,GAAsB,IAAtB;AACA,uBAAI,CAACD,iBAAL,GAAyB,EAAzB;AACD;AACF,aAtBL,EAuBI,UAACxJ,KAAD,EAAW;AACT,qBAAI,CAAC7C,OAAL,CAAa6C,KAAb;AACD,aAzBL;AA2BD;AAzTwC;AAAA;AAAA,iBA2T3C,2BAAkB;AAAA;;AAChB,iBAAKuE,aAAL,GAAqB,IAArB;AACA,iBAAKhH,aAAL,CACGoG,SADH,CACa;AAAEnE,qBAAO,EAAE,GAAX;AAAgBC,qBAAO,EAAE;AAAzB,aADb,EAEGE,IAFH,CAGI,iEAAS,YAAM;AACb,qBAAI,CAAC4E,aAAL,GAAqB,KAArB;AACD,aAFD,CAHJ,EAOGrF,SAPH,CAOa,UAACU,QAAD,EAAc;AACvB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAAC6J,YAAL,GAAoB9J,QAAQ,CAACG,IAAT,CAAc,MAAd,CAApB;AACD,eAFD,MAEK;AACH,uBAAI,CAAC2J,YAAL,GAAoB,EAApB;AACD;AACF,aAbH,EAcE,UAAC1J,KAAD,EAAgB;AACd,kBAAI;AACF,uBAAI,CAAC7C,OAAL,CAAa6C,KAAb,CAAmBA,KAAK,CAACA,KAAN,CAAY3D,OAA/B;AACD,eAFD,CAEE,OAAO2D,KAAP,EAAc;AACd,uBAAI,CAAC7C,OAAL,CAAa6C,KAAb;AACD;AACF,aApBH;AAsBD;AAnV0C;AAAA;AAAA,iBAsV3C,uBAAcyF,KAAd,EAAqB;AACnB,iBAAKpF,IAAL,CAAUkB,GAAV,CAAc,MAAd,EAAsB8C,QAAtB,CAA+BoB,KAAK,CAACkE,IAArC;AACA,iBAAKtJ,IAAL,CAAUkB,GAAV,CAAc,MAAd,EAAsB8C,QAAtB,CAA+B,IAAIkE,IAAJ,GAAWC,OAAX,EAA/B;AACA,iBAAKnC,KAAL,CAAWrE,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAK7E,cADK;AAEtBwK,yBAAW,EAAE,KAAKpB,aAAL,CAAmB4C,kBAAnB,CAAsC,KAAKpB,SAAL,EAAtC;AAFS,aAAxB;AAID;AA7V0C;AAAA;AAAA,iBA+V3C,qBAAY;AACV,gBAAI7I,OAAO,GAAG,EAAd;AACA,gBAAIyK,IAAI,GAAG,KAAKvJ,IAAL,CAAUyB,KAArB;;AAEA,iBAAK,IAAI+H,IAAT,IAAiBD,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACC,IAAD,CAAR,EAAgB;AACd,oBAAID,IAAI,CAACC,IAAD,CAAJ,YAAsBtB,IAA1B,EACEpJ,OAAO,CAAC0K,IAAD,CAAP,GAAgB,KAAKtD,WAAL,CAAiBuD,gBAAjB,CAAkCF,IAAI,CAACC,IAAD,CAAtC,CAAhB,CADF,KAEK1K,OAAO,CAAC0K,IAAD,CAAP,GAAgBD,IAAI,CAACC,IAAD,CAApB;AACN;AACF;;AAED,mBAAO1K,OAAP;AACD;AA5W0C;AAAA;AAAA,iBA8W3C,2BAAkBqF,MAAlB,EAA6C;AAC3C,gBAAIuF,WAAJ;;AAEA,gBAAIvF,MAAM,CAAChF,OAAP,IAAkB,CAAtB,EAAyB;AACvBuK,yBAAW,GAAG,gBAAd;AACD,aAFD,MAEO,IAAIvF,MAAM,CAAChF,OAAP,IAAkB,CAAtB,EAAyB;AAC9BuK,yBAAW,GAAG,eAAd;AACD;;AAED,mBAAOA,WAAP;AACD;AAxX0C;AAAA;AAAA,iBA0X3C,oBAAW1K,MAAX,EAAwC;AAAA;;AACtC,gBAAM2K,IAAI,GAAG3K,MAAM,CAACG,OAAP,IAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAAvC;AAEA,iBAAKyK,aAAL,CAAmBD,IAAnB,EACGE,YADH,GAEGvK,IAFH,CAGI,6DAAK,CAAL,CAHJ,EAII,kEAAU,UAACwK,MAAD,EAAY;AACpB,kBAAI,CAACA,MAAL,EAAa,OAAO,2CAAP;AAEb,qBAAI,CAACnM,aAAL,GAAqB,IAArB;AACAqB,oBAAM,CAACG,OAAP,GAAiBwK,IAAjB;AACA,qBAAO,OAAI,CAACzM,aAAL,CAAmBsE,UAAnB,CAA8BxC,MAA9B,CAAP;AACD,aAND,CAJJ,EAWI,iEAAS,YAAM;AACb,qBAAI,CAACrB,aAAL,GAAqB,KAArB;AACD,aAFD,CAXJ,EAeGkB,SAfH,CAgBI,UAAC6C,OAAD,EAAkB;AAChB,qBAAI,CAAC5E,OAAL,CAAa4E,OAAb;AACD,aAlBL,EAmBI,UAAC/B,KAAD,EAAgB;AACdX,oBAAM,CAACG,OAAP,GAAiBH,MAAM,CAACG,OAAP,IAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAA3C;;AACA,qBAAI,CAACrC,OAAL,CAAa6C,KAAb;AACD,aAtBL;AAwBD;AArZ0C;AAAA;AAAA,iBAuZ3C,uBAAcgK,IAAd,EAAkB;AAChB,gBAAIA,IAAI,IAAI,CAAZ,EACE,OAAO,KAAK3H,mBAAL,CAAyBiD,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAQF,mBAAO,KAAKjD,mBAAL,CAAyBiD,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AAxa0C;AAAA;AAAA,iBA0a3C,oBAAQ;AACN,gBAAIlF,IAAI,GAAG,IAAImI,IAAJ,GAAW6B,kBAAX,GAAgCC,KAAhC,CAAsC,GAAtC,CAAX;AAAA,gBACEC,UAAU,aAAMlK,IAAI,CAAC,CAAD,CAAV,SAAgBA,IAAI,CAAC,CAAD,CAApB,SAA0BA,IAAI,CAAC,CAAD,CAA9B,CADZ;AAGA,gBAAImK,cAAc,GAAQ,EAA1B;AACAA,0BAAc,GAAG,KAAK/F,MAAL,CAAYgG,MAAZ,CAAmB,KAAK5D,UAAxB,CAAjB;AAEA,iBAAKN,WAAL,CAAiBmE,UAAjB,CAA4BF,cAA5B,kBAAqDD,UAArD;AACD;AAlb0C;;AAAA;AAAA,S;;;;gBA/BpC;;gBAIA;;gBAHW;;gBAQX;;gBACA;;gBAFA;;gBARQ;;gBAMR;;gBADA;;gBAEA;;gBAVA;;gBADA;;;;AAmCIlE,sCAAgC,6DAL5C,gEAAU;AACTlE,gBAAQ,EAAE,4BADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAK4C,E,+EAwE1B,sD,EACE,2F,EACI,0D,EACA,qF,EACA,sF,EACE,0F,EACC,8D,EACI,sG,EACC,uG,EACN,mF,EACG,kG,EACF,4F,EAnFiB,GAAhCiE,gCAAgC,CAAhC","file":"etapas-etapas-module-es5.js","sourcesContent":["export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"loadingNavBar === true\\\"\\r\\n    [routerLink]=\\\"['../../']\\\"\\r\\n    >\\r\\n    Finalizar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"mtc-title\\\">Dados da Etapa</div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col pl-0\\\">\\r\\n            <label for=\\\"etapas\\\">Etapa</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"etapas\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              [loading]=\\\"loadingEtapas\\\"\\r\\n              labelForId=\\\"etapas\\\"\\r\\n              bindLabel=\\\"NM_ETAP\\\"\\r\\n              bindValue=\\\"UUID_LOGI_YMS_ETAP\\\"\\r\\n              id=\\\"etapas\\\"\\r\\n              formControlName=\\\"UUID_LOGI_YMS_ETAP\\\"\\r\\n              >\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <div class=\\\"row mb-4\\\">\\r\\n        <div class=\\\"col mb-3\\\">\\r\\n          <hr>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div [hidden]=\\\"loadingSetores\\\">\\r\\n        <div class=\\\"row mb-2 mt-4\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Setores associados a Etapa</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                (click)=\\\"onRemoverAssociacao()\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n                <span>Limpar</span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!setoresAssociadosLoading && setoresAssociados.length > 0\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <custom-table [config]=\\\"tableConfigSetoresAssociados\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th\\r\\n                    scope=\\\"col\\\"\\r\\n                    class=\\\"text-center\\\"\\r\\n                    style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"toggle?.setoresAssociados ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onToggleAll('setoresAssociados')\\\">\\r\\n                    </btn-icon>\\r\\n                  </th>\\r\\n                  <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Seq.</th>\\r\\n                  <th scope=\\\"col\\\" style=\\\"width: 10%\\\"></th>\\r\\n                  <th scope=\\\"col\\\" style=\\\"width: 35%\\\">Setores</th>\\r\\n                  <th scope=\\\"col\\\" style=\\\"width: 35%\\\">Tipo de setor</th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let item of setoresAssociados\\\" >\\r\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    </btn-icon>\\r\\n                  </td>\\r\\n                  <td \\r\\n                    class=\\\"hover\\\"\\r\\n                    style=\\\"width: 10%\\\">\\r\\n                    {{ item.NR_SQNC  }}\\r\\n                  </td>\\r\\n                  <td\\r\\n                    class=\\\"hover text-center\\\"\\r\\n                    style=\\\"width: 10%\\\">\\r\\n                    <div [class]=\\\"item.DS_ICON\\\"></div>\\r\\n                  </td>\\r\\n                  <td\\r\\n                    class=\\\"hover\\\"\\r\\n                    style=\\\"width: 35%\\\">\\r\\n                    {{ item.NM_SETO | uppercase }}\\r\\n                  </td>\\r\\n                  <td\\r\\n                    class=\\\"hover\\\"\\r\\n                    style=\\\"width: 35%\\\">\\r\\n                    {{ item.NM_SETO_TIPO | uppercase }}\\r\\n                  </td>\\r\\n                  <td class=\\\"text-center\\\" width=\\\"5%\\\" height=\\\"26px\\\">\\r\\n                    <btn-icon\\r\\n                      icon=\\\"fas fa-trash\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onRemoverAssociacao(item)\\\"\\r\\n                      *ngIf=\\\"!item.loading\\\"  \\r\\n                    >\\r\\n                    </btn-icon>\\r\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\r\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!loadingSetores && setoresAssociados.length === 0\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-exchange-alt\\\"\\r\\n              text=\\\"Nenhuma associação encontrada\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"loadingSetores\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-cog fa-spin\\\"\\r\\n              text=\\\"Estamos pesquisando os setores para você...\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <form [formGroup]=\\\"formSetores\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"row mb-2\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Pesquisa de Setores</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n                (click)=\\\"getSetores()\\\">\\r\\n                <i class=\\\"fas fa-search\\\"></i>\\r\\n                <span \\r\\n                container=\\\"body\\\"\\r\\n                placement =\\\"left\\\">Pesquisar</span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <advanced-filter>\\r\\n          <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-6 pl-0\\\">\\r\\n                <label for=\\\"tiposSetor\\\">Tipo de Setor</label>\\r\\n                <ng-select\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"true\\\"\\r\\n                  [items]=\\\"tiposSetor\\\"\\r\\n                  [virtualScroll]=\\\"true\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  [loading]=\\\"loadingTiposSetor\\\"\\r\\n                  labelForId=\\\"tiposSetor\\\"\\r\\n                  (keydown.enter)=\\\"getSetores()\\\"\\r\\n                  bindLabel=\\\"NM_SETO_TIPO\\\"\\r\\n                  bindValue=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n                  id=\\\"tiposSetor\\\"\\r\\n                  formControlName=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n                  (change)=\\\"getFilterSetores({'UUID_LOGI_YMS_SETO_TIPO': $event?.UUID_LOGI_YMS_SETO_TIPO || ''})\\\">\\r\\n                </ng-select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-md-6 pl-0\\\">\\r\\n                <label for=\\\"filterSetores\\\">Setor</label>\\r\\n                <ng-select\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"true\\\"\\r\\n                  [items]=\\\"filterSetores\\\"\\r\\n                  [virtualScroll]=\\\"true\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  [loading]=\\\"loadingFilterSetores\\\"\\r\\n                  labelForId=\\\"filterSetores\\\"\\r\\n                  (keydown.enter)=\\\"getSetores()\\\"\\r\\n                  bindLabel=\\\"NM_SETO\\\"\\r\\n                  bindValue=\\\"UUID_LOGI_YMS_SETO\\\"\\r\\n                  id=\\\"filterSetores\\\"\\r\\n                  formControlName=\\\"UUID_LOGI_YMS_SETO\\\">\\r\\n                </ng-select>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12 pl-0\\\">\\r\\n                <label for=\\\"filiais\\\">Filial</label>\\r\\n                <ng-select\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"true\\\"\\r\\n                  [items]=\\\"filiais\\\"\\r\\n                  [virtualScroll]=\\\"true\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  (keydown.enter)=\\\"getSetores()\\\"\\r\\n                  [loading]=\\\"loadingFiliais\\\"\\r\\n                  labelForId=\\\"filiais\\\"\\r\\n                  bindLabel=\\\"NM_FILI\\\"\\r\\n                  bindValue=\\\"UUID_LOGI_FILI\\\"\\r\\n                  id=\\\"filiais\\\"\\r\\n                  formControlName=\\\"UUID_LOGI_FILI\\\"\\r\\n                  >\\r\\n                </ng-select>\\r\\n              </div>\\r\\n          </div>\\r\\n        </advanced-filter>\\r\\n        <div *ngIf=\\\"setores.length > 0 && !setoresLoading\\\">\\r\\n          <div class=\\\"row mb-2\\\">\\r\\n            <div class=\\\"col mt-auto\\\">\\r\\n              <div class=\\\"mtc-title mb-0\\\">Seleção de Setor</div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"d-flex justify-content-end\\\">\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-sm btn-outline-primary\\\"\\r\\n                  (click)=\\\"onAssociarSetores()\\\"\\r\\n                  [disabled]=\\\"searching === true || formSetores.valid === false\\\">\\r\\n                  <i class=\\\"fas fa-exchange-alt\\\"></i>\\r\\n                  <span\\r\\n                    [tooltip]=\\\"form.valid == false ? 'Selecione uma Etapa':''\\\"\\r\\n                    container=\\\"body\\\"\\r\\n                    placement =\\\"left\\\">Associar\\r\\n                  </span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table [config]=\\\"tableConfigSetores\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th\\r\\n                      scope=\\\"col\\\"\\r\\n                      class=\\\"text-center\\\"\\r\\n                      style=\\\"width: 5%\\\">\\r\\n                      <btn-icon\\r\\n                        [icon]=\\\"toggle?.setores ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        (click)=\\\"onToggleAll('setores')\\\">\\r\\n                      </btn-icon>\\r\\n                    </th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%\\\" class=\\\"text-center\\\">Seq.</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%\\\"></th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 35%\\\">Setores</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 35%\\\">Tipo de setor</th>\\r\\n                    <th style=\\\"width: 5%\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let item of setores\\\">\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                      <btn-icon\\r\\n                        *ngIf = \\\"item.NR_SQNC > 0 \\\"\\r\\n                        [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        (click)=\\\"item.checked = !item.checked;\\\">\\r\\n                      </btn-icon>\\r\\n                    </td>\\r\\n                    <td\\r\\n                    class=\\\"hover\\\"\\r\\n                    style=\\\"width: 10%\\\"\\r\\n                    >\\r\\n                      <input\\r\\n                      type=\\\"number\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      min = \\\"1\\\"\\r\\n                      (change)=\\\"item.NR_SQNC = ($event.target.value);\\\"\\r\\n                    />\\r\\n                    </td>\\r\\n                    <td \\r\\n                      class=\\\"hover text-center\\\"\\r\\n                      style=\\\"width: 10%\\\">\\r\\n                      <div [class]=\\\"item.DS_ICON\\\"></div>\\r\\n                    </td>\\r\\n                    <td\\r\\n                      class=\\\"hover\\\"\\r\\n                      style=\\\"width: 35%\\\"\\r\\n                      (click)=\\\"item.checked = !item.checked\\\">\\r\\n                      {{ item.NM_SETO | uppercase }}\\r\\n                    </td>\\r\\n                    <td\\r\\n                      class=\\\"hover\\\"\\r\\n                      style=\\\"width: 35%\\\"\\r\\n                      (click)=\\\"item.checked = !item.checked\\\">\\r\\n                      {{ item.NM_SETO_TIPO | uppercase }}\\r\\n                    </td>\\r\\n                    <td style=\\\"width: 5%; height: 26px\\\">\\r\\n                      <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\r\\n                        <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"setoresLoading\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-cog fa-spin\\\"\\r\\n              text=\\\"Estamos pesquisando os setores para você...\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"(setores.length == 0) && !setoresLoading\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <message\\r\\n                icon=\\\"fas fa-box-open\\\"\\r\\n                text=\\\"Nenhuma informação encontrada\\\">\\r\\n              </message>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"row\\\" *ngIf=\\\"setoresLista.length === 0 && !firstSearch\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <message\\r\\n                icon=\\\"fas fa-search\\\"\\r\\n                text=\\\"Preecha os campos acima para pesquisar setores\\\">\\r\\n              </message>\\r\\n            </div>\\r\\n          </div> -->\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9ldGFwYXMvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9ldGFwYXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2V0YXBhcy9hc3NvY2lhY2FvLXNldG9yZXMvYXNzb2NpYWNhby1zZXRvcmVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2V0YXBhcy9hc3NvY2lhY2FvLXNldG9yZXMvYXNzb2NpYWNhby1zZXRvcmVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uW2Rpc2FibGVkXXtcclxuICBjdXJzb3I6IG5vLWRyb3A7XHJcbn1cclxuIl19 */\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Etapas\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postEtapas()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Dados da Etapa</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\r\\n            <label for=\\\"NM_ETAP\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_ETAP\\\"\\r\\n              formControlName=\\\"NM_ETAP\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_ETAP') + ' ' + onFieldRequired('NM_ETAP')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_ETAP')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\r\\n            <label for=\\\"tiposEtapa\\\">Tipo de etapa</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"tiposEtapa\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              [loading]=\\\"loadingTiposEtapa\\\"\\r\\n              labelForId=\\\"tiposEtapa\\\"\\r\\n              bindLabel=\\\"NM_ETAP_TIPO\\\"\\r\\n              bindValue=\\\"UUID_LOGI_YMS_ETAP_TIPO\\\"\\r\\n              id=\\\"tiposEtapa\\\"\\r\\n              formControlName=\\\"UUID_LOGI_YMS_ETAP_TIPO\\\"\\r\\n              [ngClass]=\\\"onFieldError('UUID_LOGI_YMS_ETAP_TIPO') + ' ' + onFieldRequired('UUID_LOGI_YMS_ETAP_TIPO')\\\">\\r\\n              >\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('UUID_LOGI_YMS_ETAP_TIPO')\\\" message=\\\"Circuito é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\r\\n            <label for=\\\"IN_STAT\\\">Sigla</label>\\r\\n            <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"tipos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipo\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"cod\\\"\\r\\n            id=\\\"tipo\\\"\\r\\n            formControlName=\\\"SG_ETAP\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            [ngClass]=\\\"onFieldError('SG_ETAP') + ' ' + onFieldRequired('SG_ETAP')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('SG_ETAP')\\\" message=\\\"Tipo de circuito é obrigatório.\\\"></invalid-form-control>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Observação</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"ETAPAS\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onExport()\\\"\\r\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\r\\n              <label for=\\\"circuitos\\\">Circuito</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"circuitos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingCircuitos\\\"\\r\\n                labelForId=\\\"ID_LOGI_YMS_CIRC\\\"\\r\\n                bindLabel=\\\"NM_CIRC\\\"\\r\\n                bindValue=\\\"ID_LOGI_YMS_CIRC\\\"\\r\\n                id=\\\"ID_LOGI_YMS_CIRC\\\"\\r\\n                formControlName=\\\"ID_LOGI_YMS_CIRC\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\r\\n              <label for=\\\"setores\\\">Setores</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"setores\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingSetores\\\"\\r\\n                labelForId=\\\"ID_LOGI_YMS_SETO\\\"\\r\\n                bindLabel=\\\"NM_SETO\\\"\\r\\n                bindValue=\\\"ID_LOGI_YMS_SETO\\\"\\r\\n                id=\\\"ID_LOGI_YMS_SETO\\\"\\r\\n                formControlName=\\\"ID_LOGI_YMS_SETO\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\r\\n              <label for=\\\"filterEtapas\\\">Etapa</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"filterEtapas\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingEtapas\\\"\\r\\n                labelForId=\\\"UUID_LOGI_YMS_ETAP\\\"\\r\\n                bindLabel=\\\"NM_ETAP\\\"\\r\\n                bindValue=\\\"UUID_LOGI_YMS_ETAP\\\"\\r\\n                id=\\\"UUID_LOGI_YMS_ETAP\\\"\\r\\n                formControlName=\\\"UUID_LOGI_YMS_ETAP\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              (keydown.enter)=\\\"onFilter()\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" >ID</th>\\r\\n              <th scope=\\\"col\\\" >Descrição</th>\\r\\n              <th scope=\\\"col\\\" >Tipo etapas</th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:160px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let etapa of etapas\\\"  [class.table-active]=\\\"etapa?.UUID_LOGI_YMS_ETAP == etapaSelecionada?.UUID_LOGI_YMS_ETAP && showDetailPanel\\\">\\r\\n              <td  [ngClass]=\\\"etapa.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n              {{etapa.UUID_LOGI_YMS_ETAP }}\\r\\n              </td>\\r\\n              <td >{{ etapa.NM_ETAP | uppercase}}</td>\\r\\n              <td >{{ etapa.NM_ETAP_TIPO | uppercase}}</td>\\r\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"etapa.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(etapa)\\\">\\r\\n                    <i [ngClass]=\\\"etapa.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', etapa.UUID_LOGI_YMS_ETAP]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Associar Setores\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../setores/', etapa.UUID_LOGI_YMS_ETAP]\\\">\\r\\n                    <i class=\\\"fas fa-warehouse\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(etapa)\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Detalhes\\\">\\r\\n        <tabset>\\r\\n          <tab heading=\\\"Dados da Etapa\\\">\\r\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n              <div>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col-lg-6\\\">\\r\\n                    <label>ID da Etapa</label>\\r\\n                    <div>{{ etapaSelecionada?.UUID_LOGI_YMS_ETAP}}</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col-lg-6\\\">\\r\\n                    <label>Etapa</label>\\r\\n                    <div>{{ etapaSelecionada?.NM_ETAP | uppercase}}</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col-lg-6\\\">\\r\\n                    <label>Tipo de Etapa</label>\\r\\n                    <div>{{ etapaSelecionada?.NM_ETAP_TIPO | uppercase}}</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-row \\\">\\r\\n                  <div class=\\\"form-group col-lg-12\\\">\\r\\n                    <label>Observação:</label>\\r\\n                    <div>{{ etapaSelecionada?.DS_OBSE | uppercase}}</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <hr>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col\\\">\\r\\n                    <label *ngIf=\\\"!etapaSelecionada?.DT_ATUA == null\\\">Usuário Responsável Pelo Cadastro</label>\\r\\n                    <label *ngIf=\\\"etapaSelecionada?.DT_ATUA == null\\\">Usuário Responsável Pela Atualização</label>\\r\\n                    <div>{{ etapaSelecionada?.NM_USUA | uppercase }}</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col\\\">\\r\\n                    <label *ngIf=\\\"!etapaSelecionada?.DT_ATUA == null\\\">Data do Cadastro</label>\\r\\n                    <label *ngIf=\\\"etapaSelecionada?.DT_ATUA == null\\\">Data da Atualização</label>\\r\\n                    <div>{{(etapaSelecionada?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (etapaSelecionada?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </tab>\\r\\n          <tab  heading=\\\"Setores Associados\\\">\\r\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\r\\n              <div class=\\\"mb-3\\\">\\r\\n                <!-- <custom-table  [config]=\\\"tableConfigAssocSetores\\\"  class=\\\"text-center\\\" *ngIf=\\\"!loadingAssociacaoSetores && !noAssocSetores\\\">\\r\\n                  <ng-template #thead let-thead>\\r\\n                    <tr>\\r\\n                      <th scope=\\\"col\\\"  width=\\\"50%\\\">Tipo de Setor</th>\\r\\n                      <th scope=\\\"col\\\"  width=\\\"50%\\\">Setor</th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                  <ng-template #tbody let-tbody>\\r\\n                    <tr *ngFor=\\\"let setor of associacaoSetores\\\">\\r\\n                      <td  width=\\\"50%\\\">{{ setor?.NM_SETO_TIPO | uppercase }}</td>\\r\\n                      <td  width=\\\"50%\\\">{{ setor?.NM_SETO | uppercase }}</td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </custom-table> -->\\r\\n                <div *ngFor=\\\"let setor of associacaoSetores; let last = last; let first = first\\\" [ngClass]=\\\"fist ? 'mt-4' : ''\\\">\\r\\n                  <div class=\\\"d-flex w-100\\\" [tooltip]=\\\"setor?.NM_SETO\\\" placement=\\\"left\\\">\\r\\n                    <div class=\\\"rounded-circle text-white icon-40 bg-secondary\\\">\\r\\n                      <i [class]=\\\"setor?.DS_ICON\\\"></i>\\r\\n                    </div>\\r\\n                    <strong class=\\\"my-auto ml-3 text-truncate\\\">\\r\\n                      {{ setor?.NM_SETO | uppercase}}\\r\\n                    </strong>\\r\\n                  </div>\\r\\n                  <div class=\\\"my-1\\\" *ngIf=\\\"!last\\\">\\r\\n                    <div class=\\\"ml-1\\\">\\r\\n                      <div class=\\\"border-left border-secondary ml-3 p-2\\\">\\r\\n                        <div *ngIf=\\\"setor?.check === 1\\\"></div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <message\\r\\n                  *ngIf=\\\"loadingAssociacaoSetores\\\"\\r\\n                  icon=\\\"fas fa-cog fa-spin\\\"\\r\\n                  text=\\\"Estamos pesquisando os setores para você...\\\">\\r\\n                </message>\\r\\n                <div [hidden]=\\\"loadingAssociacaoSetores || !noAssocSetores\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n                  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </tab>       \\r\\n        </tabset> \\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","//Services\r\nimport { LogisticaYmsTiposEtapaService } from './../../tipos-etapa/services/tipos-etapa.service';\r\nimport { LogisticaYmsSetoresService } from './../../setores/services/setores.service';\r\nimport { ILogisticaYmsSetores } from './../../setores/models/setores';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LogisticaYmsEtapasService } from '../services/etapas.service';\r\n//interfaces\r\nimport { ILogisticaYmsEtapas } from '../models/etapas';\r\nimport { isNull } from 'util';\r\nimport { ILogisticaYmsCircuitos } from '../../circuitos/models/circuitos';\r\nimport { ILogisticaYmsTiposEtapa } from '../../tipos-etapa/models/tipos-etapa';\r\n\r\n@Component({\r\n  selector: 'logistica-yms-etapas-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaYmsEtapasCadastroComponent\r\n  implements OnInit {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  tiposEtapa: Array<ILogisticaYmsTiposEtapa>;\r\n  setores: Array<ILogisticaYmsSetores>;\r\n\r\n  //loading\r\n  disabledForm = false;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n  loadingTiposEtapa:boolean;\r\n  loadingSetores:boolean;\r\n\r\n  tipos = [\r\n    {\r\n      cod: 'fixa',\r\n      nome: 'Fixa',\r\n    },\r\n    {\r\n      cod: 'variavel',\r\n      nome: 'Variável',\r\n    },\r\n  ];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private localeService: BsLocaleService,\r\n    private etapasService: LogisticaYmsEtapasService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n    private tiposEtapaService: LogisticaYmsTiposEtapaService,\r\n    private setoresService: LogisticaYmsSetoresService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n    this.getTiposEtapa();\r\n    this.getSetores();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id'))\r\n    return this.getEtapa(_params['id']); \r\n  }\r\n\r\n  getTiposEtapa(params?: Partial<ILogisticaYmsCircuitos>) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = 1;\r\n    _params.IN_PAGI = 0;\r\n    this.loadingTiposEtapa = true;\r\n    this.tiposEtapaService\r\n      .getTiposEtapa(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTiposEtapa = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.tiposEtapa = response.body['data'];\r\n        }else{\r\n          this.tiposEtapa = [];\r\n        }\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getSetores(params?: Partial<ILogisticaYmsSetores>) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = 1;\r\n    _params.IN_PAGI = 0;\r\n    this.loadingSetores = true;\r\n    this.setoresService\r\n      .getSetores(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingSetores = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.setores = response.body['data'];\r\n        }else{\r\n          this.setores = []\r\n        }\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  getEtapa(id: number) {\r\n    this.loading = true;\r\n    this.etapasService\r\n      .getEtapa(id)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            const data : ILogisticaYmsEtapas = response.body['data'][0]\r\n            this.form.patchValue(data) \r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'YMS',\r\n        routerLink: `/logistica/yms/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Etapas',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_YMS_ETAP: [null],\r\n      NM_ETAP: [null, [Validators.required]],\r\n      SG_ETAP: [null, [Validators.required]],\r\n      UUID_LOGI_YMS_ETAP_TIPO:[null, [Validators.required]],\r\n      NM_ETAP_TIPO:[null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postEtapas() {\r\n    this.loadingNavBar = true;\r\n    this.etapasService\r\n      .postEtapas(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n  \r\n}\r\n","import { ILogisticaFiliais } from './../../../cadastros/filiais/models/filiais';\r\nimport { ILogisticaYmsTiposSetor } from './../../tipos-setor/models/tipos-setor';\r\nimport { LogisticaYmsTiposSetorService } from './../../tipos-setor/services/tipos-setor.service';\r\nimport { ILogisticaYmsSetores } from './../../setores/models/setores';\r\nimport { LogisticaYmsSetoresService } from './../../setores/services/setores.service';\r\nimport { ILogisticaYmsEtapas } from './../models/etapas';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n// angular\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// services\r\nimport { LogisticaYmsEtapasService } from '../services/etapas.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n// rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { LogisticaFiliaisService } from '../../../cadastros/filiais/services/filiais.service';\r\n\r\n@Component({\r\n  selector: 'logistica-etapas-associacao-setores',\r\n  templateUrl: './associacao-setores.component.html',\r\n  styleUrls: ['./associacao-setores.component.scss']\r\n})\r\nexport class LogisticaYmsEtapasAssociacaoSetoresComponent implements OnInit {\r\n\r\n  appTitle = \"Associação Setores\";\r\n\r\n  form: FormGroup;\r\n  formSetores: FormGroup;\r\n\r\n  breadCrumbTree: any = [];\r\n  idSubModulo: number;\r\n  $subscription: Subscription;\r\n\r\n  /*loading*/\r\n  loading = false;\r\n  loadingNavBar = false;\r\n  noResult = true;\r\n  loadingEtapas: boolean;\r\n  loadingFiliais: boolean;\r\n  /*loading*/\r\n  filterSetores:Array<ILogisticaYmsSetores>;\r\n  setores= [];\r\n  filiais: Array<ILogisticaFiliais>;\r\n  tiposSetor: Array<ILogisticaYmsTiposSetor>;\r\n  setoresLoading = false;\r\n  loadingSetores = false;\r\n  loadingFilterSetores= false;\r\n  loadingTiposSetor= false;\r\n  etapas: Array<ILogisticaYmsEtapas>;\r\n\r\n  setoresAssociados = [];\r\n  setoresAssociadosLoading = false;\r\n\r\n  tableConfigSetoresAssociados: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n    hover: false,\r\n  };\r\n  \r\n  tableConfigSetores: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  toggle = {\r\n    setores: false,\r\n    setoresAssociados: false\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private etapasService: LogisticaYmsEtapasService,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private atividadesService: AtividadesService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private setoresService: LogisticaYmsSetoresService,\r\n    private tiposSetorService: LogisticaYmsTiposSetorService,\r\n    private filiaisService: LogisticaFiliaisService,\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      \"UUID_LOGI_YMS_ETAP\": [{value:null, disabled:true}],\r\n      \"NM_ETAP\": [null],\r\n    });\r\n\r\n    this.formSetores = this.formBuilder.group({\r\n      UUID_LOGI_YMS_SETO:[null],\r\n      NM_SETO:[null],\r\n      UUID_LOGI_YMS_SETO_TIPO:[null],\r\n      NM_SETO_TIPO:[null],\r\n      UUID_LOGI_FILI:[null],\r\n      NM_FILI:[null]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n    this.onActivatedRoute();\r\n    this.setBreadCrumb();\r\n    this.getEtapas();\r\n    this.getTiposSetor();\r\n    this.getFilterSetores();\r\n    this.getFiliais();\r\n  }\r\n\r\n  getFilterSetores(params?: Partial<ILogisticaYmsSetores>) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = 1;\r\n    _params.IN_PAGI = 0;\r\n    this.loadingFilterSetores = true;\r\n    this.setoresService\r\n      .getSetores(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingFilterSetores = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.filterSetores = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      },\r\n      (error: any) => {\r\n        const message = error.error.message\r\n        message ? this.pnotify.error(message): this.pnotify.error();\r\n      }\r\n    );\r\n  }\r\n\r\n  getTiposSetor() {\r\n    this.loadingTiposSetor = true;\r\n    this.tiposSetorService\r\n      .getTiposSetor({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTiposSetor = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.tiposSetor = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      },\r\n      (error: any) => {\r\n        const message = error.error.message\r\n        message ? this.pnotify.error(message): this.pnotify.error();\r\n      }\r\n    );\r\n  }\r\n\r\n  getFiliais() {\r\n    this.loadingFiliais = true;\r\n    this.filiaisService\r\n      .getFiliais({ IN_STAT: '1', IN_PAGI: '0', IN_YMS: 1 })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingFiliais = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.filiais = response.body['data'];\r\n        }else{\r\n          this.filiais = [];\r\n          this.pnotify.notice('Nenhuma filial encontrada!')\r\n        }\r\n      }),\r\n      (error: any) => {\r\n        const message = error.error.message\r\n        message ? this.pnotify.error(message): this.pnotify.error();\r\n      }\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n\r\n    if (!params?.id){\r\n      this.loading = false;\r\n      return\r\n    }\r\n    this.form.get('UUID_LOGI_YMS_ETAP').setValue(params['id'])\r\n    this.getSetoresAssociados({\"UUID_LOGI_YMS_ETAP\": params?.id})  \r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'Cadastro',\r\n        routerLink: `/logistica/cadastros/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Etapas',\r\n        routerLink: `../../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle\r\n      }\r\n    ];\r\n  }\r\n\r\n  getEtapas() {\r\n    this.loadingEtapas = true;\r\n    this.etapasService\r\n      .getEtapas({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingEtapas = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.etapas = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      });\r\n  }\r\n\r\n  getSetores(){\r\n\r\n    let params = {} ?? this.formSetores.value;\r\n    params.IN_STAT = 1;\r\n    params.IN_PAGI = 0;\r\n\r\n\r\n    this.setoresLoading = true\r\n\r\n    this.etapasService\r\n      .getSetores(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.setoresLoading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          let setores = response.body['data'];\r\n          console.log(setores)\r\n          this.setores = setores.filter(setor => {\r\n            return !this.setoresAssociados.some(item => item.UUID_LOGI_YMS_SETO == setor.ID)\r\n          })\r\n\r\n          this.tableConfigSetores.fixedHeader = this.setores.length > 9 ? true : false;\r\n         \r\n        }\r\n      )\r\n  }\r\n\r\n  getSetoresAssociados(params){\r\n    this.loadingSetores = true;\r\n    params.IN_STAT = '1';\r\n    params.IN_PAGI = '0';\r\n    params.ORDE_BY = 'ID_REFE_ERP'\r\n\r\n    this.etapasService\r\n      .getSetoresAssociados(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingSetores = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if(response.status !== 200){\r\n            return\r\n          }\r\n\r\n          this.setoresAssociados = response.body['data'];\r\n          this.tableConfigSetoresAssociados.fixedHeader = this.setoresAssociados.length > 9 ? true : false;\r\n        }\r\n      )\r\n  }\r\n\r\n  onAssociarSetores(){\r\n    let setores = this.setores.filter(setor => setor.checked && setor.NR_SQNC != null);\r\n\r\n    console.log(setores)\r\n    this.toggle.setores = false;\r\n    setores.map(item => {\r\n      \r\n      item.loading = true;\r\n\r\n      if(this.setoresAssociados.some(setor => setor?.UUID_LOGI_YMS_SETO === item.UUID_LOGI_YMS_SETO)){\r\n        return\r\n      }\r\n\r\n      let params = {\r\n        \"UUID_LOGI_YMS_ETAP\": this.form.get(\"UUID_LOGI_YMS_ETAP\").value ?? \"\",\r\n        \"UUID_LOGI_YMS_SETO\": item?.UUID_LOGI_YMS_SETO ?? \"\",\r\n        \"IN_STAT\": \"1\",\r\n        \"NR_SQNC\": item?.NR_SQNC ?? \"\",\r\n      }\r\n      this.etapasService\r\n        .postSetoresAssociados(params)\r\n        .subscribe(\r\n          response => {\r\n            if(response.status === 200){\r\n              \r\n              this.setoresAssociados = [...this.setoresAssociados,\r\n                {\r\n                  ...item,\r\n                  checked: false,\r\n                  NR_SQNC: item.NR_SQNC,\r\n                  NM_SETO: item.NM_SETO,\r\n                  NM_FILI: item.NM_FILI,\r\n                  NM_SETO_TIPO: item.NM_SETO_TIPO,\r\n                  loading: false,\r\n                  UUID_LOGI_YMS_SETO: item.UUID_LOGI_YMS_SETO,\r\n                  UUID_LOGI_YMS_ETAP: this.form.get('UUID_LOGI_YMS_ETAP').value\r\n                }\r\n              ];\r\n              console.log(this.setoresAssociados)\r\n              \r\n              this.setores = this.setores.filter(setor => !setor.checked)\r\n              this.tableConfigSetoresAssociados.fixedHeader = this.setoresAssociados.length > 9 ? true : false;\r\n\r\n            }\r\n          }\r\n        )\r\n    });\r\n\r\n  }\r\n\r\n  confirmDelete(): Observable<boolean> {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onRemoverAssociacao(setor?){\r\n    let setores = setor ? [setor] : this.setoresAssociados.filter(setor => setor.checked);\r\n    console.log(setores)\r\n    this.toggle.setoresAssociados = false;\r\n\r\n    if(setores.length == 0){\r\n      this.pnotify.notice(\"Nenhum setor selecionado.\");\r\n      return\r\n    }\r\n\r\n    this.confirmDelete()\r\n      .subscribe(\r\n        (response: boolean) => {\r\n          \r\n          if(!response){\r\n            return\r\n          }\r\n          setores.map(item => {\r\n            item.IN_STAT = '0';\r\n            item.loading = true;\r\n\r\n            this.etapasService\r\n              .deleteAssociacoes(item)\r\n              .pipe(finalize(() => {\r\n                item.loading = false;\r\n              }))\r\n              .subscribe(\r\n                response => {\r\n                  \r\n                  if(response.status !== 200){\r\n                    return\r\n                  }\r\n                  this.setoresAssociados = this.setoresAssociados\r\n                    .filter(setor => setor.UUID_LOGI_YMS_SETO != item.UUID_LOGI_YMS_SETO);\r\n                  \r\n                  this.tableConfigSetoresAssociados.fixedHeader = this.setoresAssociados.length > 9 ? true : false;\r\n                }\r\n              );\r\n              (error) => {\r\n                const message = error.error.message\r\n                message ? this.pnotify.error(message): this.pnotify.error();\r\n              }\r\n          \r\n          })\r\n          \r\n        }\r\n      )\r\n  }\r\n\r\n  onToggleAll(item: string){\r\n    console.log(item)\r\n    this.toggle[item] = !this.toggle[item];\r\n    this[item].map(setor => setor.checked = this.toggle[item]);\r\n\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.formSetores.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.formSetores.controls[field].validator) {\r\n      let validationResult = this.formSetores.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\nsetValidacao(event){\r\n  console.log(event)\r\n}\r\n \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  PaginationModule,\r\n  TooltipModule,\r\n  TabsModule,\r\n  TimepickerModule,\r\n  BsDatepickerModule,\r\n  ModalModule,\r\n} from 'ngx-bootstrap';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n\r\nimport { LogisticaYmsEtapasListaComponent } from './lista/lista.component';\r\nimport { LogisticaYmsEtapasCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nimport { LogisticaYmsEtapasRoutingModule } from './etapas-routing.module';\r\nimport { LogisticaYmsEtapasAssociacaoSetoresComponent } from './associacao-setores/associacao-setores.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogisticaYmsEtapasListaComponent,\r\n    LogisticaYmsEtapasCadastroComponent,\r\n    LogisticaYmsEtapasAssociacaoSetoresComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    LogisticaYmsEtapasRoutingModule\r\n  ]\r\n})\r\nexport class LogisticaYmsEtapasModule { }\r\n","import { LogisticaYmsEtapasAssociacaoSetoresComponent } from './associacao-setores/associacao-setores.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\nimport { LogisticaYmsEtapasCadastroComponent } from './cadastro/cadastro.component';\r\nimport { LogisticaYmsEtapasListaComponent } from './lista/lista.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaYmsEtapasListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: LogisticaYmsEtapasCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: LogisticaYmsEtapasCadastroComponent,\r\n  },\r\n  {\r\n    path: 'setores/:id',\r\n    component: LogisticaYmsEtapasAssociacaoSetoresComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LogisticaYmsEtapasRoutingModule {}\r\n","import { ILogisticaYmsSetores } from './../../setores/models/setores';\r\nimport { ILogisticaYmsCircuitos } from './../../circuitos/models/circuitos';\r\nimport { LogisticaYmsSetoresService } from './../../setores/services/setores.service';\r\nimport { LogisticaYmsCircuitosService } from './../../circuitos/services/circuitos.service';\r\n//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { LogisticaYmsEtapasService } from '../services/etapas.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaYmsEtapas } from './../models/etapas';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-yms-etapas-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaYmsEtapasListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  loadingEtapas: boolean;\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  $activatedRouteSubscription: Subscription;\r\n  circuitos: Array<ILogisticaYmsCircuitos>;\r\n  setores: Array<ILogisticaYmsSetores>;\r\n  noAssocSetores: boolean\r\n  associacaoSetores: Array<ILogisticaYmsEtapas>;\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false; \r\n  loadingCircuitos:boolean;\r\n  loadingSetores:boolean;\r\n  loadingAssociacaoSetores: boolean;\r\n  //VARIAVEIS\r\n  totalItens: any = [];\r\n  filterEtapas: Array<ILogisticaYmsEtapas>;\r\n  etapas: Array<ILogisticaYmsEtapas>;\r\n  etapaSelecionada: ILogisticaYmsEtapas;\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigAssocSetores: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  // Tipos de Situação dos Etapas (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private dateService: DateService,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private detailPanelService: DetailPanelService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private etapasService: LogisticaYmsEtapasService,\r\n    private circuitosService: LogisticaYmsCircuitosService,\r\n    private setoresService: LogisticaYmsSetoresService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.onDetailPanelEmitter();\r\n    this.getFilterEtapas();\r\n    this.getCircuitos();\r\n    this.getSetores();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n          this.getEtapas(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  getCircuitos(params?: Partial<ILogisticaYmsCircuitos>) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = 1;\r\n    _params.IN_PAGI = 0;\r\n    this.loadingCircuitos = true;\r\n    this.circuitosService\r\n      .getCircuitos(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingCircuitos = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.circuitos = response.body['data'];\r\n        }else{\r\n          this.circuitos = [];\r\n        }\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getSetores(params?: Partial<ILogisticaYmsSetores>) {\r\n    const _params = params ?? {};\r\n    _params.IN_STAT = 1;\r\n    _params.IN_PAGI = 0;\r\n    this.loadingSetores = true;\r\n    this.setoresService\r\n      .getSetores(_params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingSetores = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.setores = response.body['data'];\r\n        }else{\r\n          this.setores = [];\r\n        }\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_YMS_ETAP: [null],\r\n      NM_ETAP: [null],\r\n      ID_LOGI_YMS_SETO:[null],\r\n      NM_SETO:[null],\r\n      ID_LOGI_YMS_CIRC:[null],\r\n      NM_CIRC:[null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      NR_MATR: [null],\r\n      NM_USUA: [null],\r\n      DT_INCL: [null],\r\n      DT_ATUA: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'YMS',\r\n        routerLink: `/logistica/yms/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Etapas',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onDetails(etapas: ILogisticaYmsEtapas): void {\r\n    this.getSetoresAssociados({UUID_LOGI_YMS_ETAP: etapas.UUID_LOGI_YMS_ETAP});\r\n    this.detailPanelService.show();\r\n    this.etapaSelecionada = etapas;\r\n    this.detailPanelService.loadedFinished(false);\r\n  }\r\n\r\n  getEtapas(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.etapasService\r\n      .getEtapas(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.etapas = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.etapas = [];\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.noResult = true;\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n\r\n    getSetoresAssociados(params){\r\n      this.loadingAssociacaoSetores = true;\r\n      params.IN_STAT = '1';\r\n      params.IN_PAGI = '0';\r\n      params.ORDE_BY = 'NR_SQNC'\r\n      params.ORDE_BY = 'asc'\r\n      console.log(params)\r\n      this.etapasService\r\n        .getSetoresAssociados(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loadingAssociacaoSetores = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response) => {\r\n            if (response.status === 200) {\r\n              this.associacaoSetores = response.body['data'];\r\n  \r\n              if (this.associacaoSetores.length > 9) {\r\n                this.tableConfigAssocSetores.fixedHeader = true;\r\n              }\r\n  \r\n              this.noAssocSetores = false\r\n            } else {\r\n              this.pnotify.notice('Nenhuma associação encontrada!');\r\n              this.noAssocSetores = true\r\n              this.associacaoSetores = [];\r\n            }\r\n          },\r\n          (error) => {\r\n            this.pnotify.error();\r\n          }\r\n        );\r\n    }\r\n\r\n  getFilterEtapas() {\r\n    this.loadingEtapas = true;\r\n    this.etapasService\r\n      .getEtapas({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingEtapas = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.filterEtapas = response.body['data'];\r\n        }else{\r\n          this.filterEtapas = [];\r\n        }\r\n      },\r\n      (error: any) => {\r\n        try {\r\n          this.pnotify.error(error.error.message);\r\n        } catch (error) {\r\n          this.pnotify.error();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(etapas: ILogisticaYmsEtapas): string {\r\n    let borderClass: string;\r\n\r\n    if (etapas.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (etapas.IN_STAT == 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(params: ILogisticaYmsEtapas) {\r\n    const stat = params.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          params.IN_STAT = stat;\r\n          return this.etapasService.postEtapas(params);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.etapas.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Etapas${dataExport}`);\r\n  }\r\n}\r\n"]}