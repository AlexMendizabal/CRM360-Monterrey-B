{"version":3,"sources":["webpack:///src/app/modules/logistica/yms/etapas/associacao-setores/associacao-setores.component.html","webpack:///src/app/modules/logistica/yms/etapas/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/yms/etapas/lista/lista.component.scss","webpack:///src/app/modules/logistica/yms/etapas/associacao-setores/associacao-setores.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/logistica/yms/etapas/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/yms/etapas/lista/lista.component.html","webpack:///src/app/modules/logistica/yms/etapas/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/yms/etapas/associacao-setores/associacao-setores.component.ts","webpack:///src/app/modules/logistica/yms/etapas/etapas.module.ts","webpack:///src/app/modules/logistica/yms/etapas/etapas-routing.module.ts","webpack:///src/app/modules/logistica/yms/etapas/lista/lista.component.ts"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","LogisticaYmsEtapasCadastroComponent","formBuilder","pnotify","activatedRoute","router","localeService","etapasService","titleService","atividadesService","tiposEtapaService","setoresService","breadCrumbTree","formData","disabledForm","loading","loadingNavBar","tipos","cod","nome","MASKS","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setBreadCrumb","setFormBuilder","onActivatedRoute","getTiposEtapa","getSetores","subscribe","_params","snapshot","params","hasOwnProperty","getEtapa","IN_STAT","IN_PAGI","loadingTiposEtapa","pipe","response","status","tiposEtapa","body","error","loadingSetores","setores","id","data","form","patchValue","noResult","idSubModulo","appTitle","setTitle","descricao","routerLink","group","UUID_LOGI_YMS_ETAP","NM_ETAP","required","SG_ETAP","UUID_LOGI_YMS_ETAP_TIPO","NM_ETAP_TIPO","DS_OBSE","field","onFieldInvalid","get","touched","formControl","controls","validator","validationResult","postEtapas","value","success","navigate","relativeTo","selector","template","LogisticaYmsEtapasAssociacaoSetoresComponent","confirmModalService","tiposSetorService","filiaisService","setoresLoading","loadingFilterSetores","loadingTiposSetor","setoresAssociados","setoresAssociadosLoading","tableConfigSetoresAssociados","fixedHeader","bodyHeight","hover","tableConfigSetores","toggle","disabled","formSetores","UUID_LOGI_YMS_SETO","NM_SETO","UUID_LOGI_YMS_SETO_TIPO","NM_SETO_TIPO","UUID_LOGI_FILI","NM_FILI","getEtapas","getTiposSetor","getFilterSetores","getFiliais","filterSetores","notice","tiposSetor","loadingFiliais","IN_YMS","filiais","setValue","getSetoresAssociados","loadingEtapas","etapas","console","log","filter","setor","some","item","ID","length","ORDE_BY","checked","NR_SQNC","map","postSetoresAssociados","showConfirm","confirmDelete","deleteAssociacoes","event","LogisticaYmsEtapasModule","declarations","imports","forRoot","routes","path","component","LogisticaYmsEtapasRoutingModule","forChild","exports","LogisticaYmsEtapasListaComponent","route","xlsxService","dateService","routerService","detailPanelService","circuitosService","showDetailPanel","totalItens","tableConfig","subtitleBorder","tableConfigAssocSetores","subtitles","text","color","itemsPerPage","totalItems","currentPage","buildForm","onDetailPanelEmitter","getFilterEtapas","getCircuitos","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","TT_REGI_PAGI","getParams","showDetailPanelSubscription","config","showing","reset","PAGI","TIME","Date","getTime","loadingCircuitos","circuitos","ID_LOGI_YMS_SETO","ID_LOGI_YMS_CIRC","NM_CIRC","NR_MATR","NM_USUA","DT_INCL","DT_ATUA","onFilter","hide","setBase64UrlParams","etapaSelecionada","loadedFinished","loadingAssociacaoSetores","associacaoSetores","noAssocSetores","filterEtapas","page","_obj","prop","convertToUrlDate","borderClass","stat","confirmChange","asObservable","result","toLocaleDateString","split","dataExport","listagemExport","concat","exportFile"],"mappings":"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","file":"etapas-etapas-module-es5.js","sourcesContent":["export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button \\n    [disabled]=\\\"loadingNavBar === true\\\"\\n    [routerLink]=\\\"['../../']\\\"\\n    >\\n    Finalizar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"mtc-title\\\">Dados da Etapa</div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"etapas\\\">Etapa</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"etapas\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingEtapas\\\"\\n              labelForId=\\\"etapas\\\"\\n              bindLabel=\\\"NM_ETAP\\\"\\n              bindValue=\\\"UUID_LOGI_YMS_ETAP\\\"\\n              id=\\\"etapas\\\"\\n              formControlName=\\\"UUID_LOGI_YMS_ETAP\\\"\\n              >\\n            </ng-select>\\n          </div>\\n        </div>\\n      </form>\\n      <div class=\\\"row mb-4\\\">\\n        <div class=\\\"col mb-3\\\">\\n          <hr>\\n        </div>\\n      </div>\\n      <div [hidden]=\\\"loadingSetores\\\">\\n        <div class=\\\"row mb-2 mt-4\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Setores associados a Etapa</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-danger\\\"\\n                (click)=\\\"onRemoverAssociacao()\\\">\\n                <i class=\\\"fas fa-trash\\\"></i>\\n                <span>Limpar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!setoresAssociadosLoading && setoresAssociados.length > 0\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigSetoresAssociados\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggle?.setoresAssociados ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll('setoresAssociados')\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Seq.</th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 10%\\\"></th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 35%\\\">Setores</th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 35%\\\">Tipo de setor</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of setoresAssociados\\\" >\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td \\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 10%\\\">\\n                    {{ item.NR_SQNC  }}\\n                  </td>\\n                  <td\\n                    class=\\\"hover text-center\\\"\\n                    style=\\\"width: 10%\\\">\\n                    <div [class]=\\\"item.DS_ICON\\\"></div>\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 35%\\\">\\n                    {{ item.NM_SETO | uppercase }}\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 35%\\\">\\n                    {{ item.NM_SETO_TIPO | uppercase }}\\n                  </td>\\n                  <td class=\\\"text-center\\\" width=\\\"5%\\\" height=\\\"26px\\\">\\n                    <btn-icon\\n                      icon=\\\"fas fa-trash\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onRemoverAssociacao(item)\\\"\\n                      *ngIf=\\\"!item.loading\\\"  \\n                    >\\n                    </btn-icon>\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!loadingSetores && setoresAssociados.length === 0\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-exchange-alt\\\"\\n              text=\\\"Nenhuma associação encontrada\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"loadingSetores\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-cog fa-spin\\\"\\n              text=\\\"Estamos pesquisando os setores para você...\\\">\\n            </message>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <form [formGroup]=\\\"formSetores\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"row mb-2\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Pesquisa de Setores</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-secondary\\\"\\n                (click)=\\\"getSetores()\\\">\\n                <i class=\\\"fas fa-search\\\"></i>\\n                <span \\n                container=\\\"body\\\"\\n                placement =\\\"left\\\">Pesquisar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <advanced-filter>\\n          <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-6 pl-0\\\">\\n                <label for=\\\"tiposSetor\\\">Tipo de Setor</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"true\\\"\\n                  [items]=\\\"tiposSetor\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  [loading]=\\\"loadingTiposSetor\\\"\\n                  labelForId=\\\"tiposSetor\\\"\\n                  (keydown.enter)=\\\"getSetores()\\\"\\n                  bindLabel=\\\"NM_SETO_TIPO\\\"\\n                  bindValue=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\n                  id=\\\"tiposSetor\\\"\\n                  formControlName=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\n                  (change)=\\\"getFilterSetores({'UUID_LOGI_YMS_SETO_TIPO': $event?.UUID_LOGI_YMS_SETO_TIPO || ''})\\\">\\n                </ng-select>\\n              </div>\\n              <div class=\\\"form-group col-md-6 pl-0\\\">\\n                <label for=\\\"filterSetores\\\">Setor</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"true\\\"\\n                  [items]=\\\"filterSetores\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  [loading]=\\\"loadingFilterSetores\\\"\\n                  labelForId=\\\"filterSetores\\\"\\n                  (keydown.enter)=\\\"getSetores()\\\"\\n                  bindLabel=\\\"NM_SETO\\\"\\n                  bindValue=\\\"UUID_LOGI_YMS_SETO\\\"\\n                  id=\\\"filterSetores\\\"\\n                  formControlName=\\\"UUID_LOGI_YMS_SETO\\\">\\n                </ng-select>\\n              </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-12 pl-0\\\">\\n                <label for=\\\"filiais\\\">Filial</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"true\\\"\\n                  [items]=\\\"filiais\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  (keydown.enter)=\\\"getSetores()\\\"\\n                  [loading]=\\\"loadingFiliais\\\"\\n                  labelForId=\\\"filiais\\\"\\n                  bindLabel=\\\"NM_FILI\\\"\\n                  bindValue=\\\"UUID_LOGI_FILI\\\"\\n                  id=\\\"filiais\\\"\\n                  formControlName=\\\"UUID_LOGI_FILI\\\"\\n                  >\\n                </ng-select>\\n              </div>\\n          </div>\\n        </advanced-filter>\\n        <div *ngIf=\\\"setores.length > 0 && !setoresLoading\\\">\\n          <div class=\\\"row mb-2\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Seleção de Setor</div>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-primary\\\"\\n                  (click)=\\\"onAssociarSetores()\\\"\\n                  [disabled]=\\\"searching === true || formSetores.valid === false\\\">\\n                  <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                  <span\\n                    [tooltip]=\\\"form.valid == false ? 'Selecione uma Etapa':''\\\"\\n                    container=\\\"body\\\"\\n                    placement =\\\"left\\\">Associar\\n                  </span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table [config]=\\\"tableConfigSetores\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th\\n                      scope=\\\"col\\\"\\n                      class=\\\"text-center\\\"\\n                      style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        [icon]=\\\"toggle?.setores ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"onToggleAll('setores')\\\">\\n                      </btn-icon>\\n                    </th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%\\\" class=\\\"text-center\\\">Seq.</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%\\\"></th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 35%\\\">Setores</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 35%\\\">Tipo de setor</th>\\n                    <th style=\\\"width: 5%\\\"></th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let item of setores\\\">\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        *ngIf = \\\"item.NR_SQNC > 0 \\\"\\n                        [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"item.checked = !item.checked;\\\">\\n                      </btn-icon>\\n                    </td>\\n                    <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 10%\\\"\\n                    >\\n                      <input\\n                      type=\\\"number\\\"\\n                      class=\\\"form-control\\\"\\n                      min = \\\"1\\\"\\n                      (change)=\\\"item.NR_SQNC = ($event.target.value);\\\"\\n                    />\\n                    </td>\\n                    <td \\n                      class=\\\"hover text-center\\\"\\n                      style=\\\"width: 10%\\\">\\n                      <div [class]=\\\"item.DS_ICON\\\"></div>\\n                    </td>\\n                    <td\\n                      class=\\\"hover\\\"\\n                      style=\\\"width: 35%\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                      {{ item.NM_SETO | uppercase }}\\n                    </td>\\n                    <td\\n                      class=\\\"hover\\\"\\n                      style=\\\"width: 35%\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                      {{ item.NM_SETO_TIPO | uppercase }}\\n                    </td>\\n                    <td style=\\\"width: 5%; height: 26px\\\">\\n                      <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\n                        <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"setoresLoading\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-cog fa-spin\\\"\\n              text=\\\"Estamos pesquisando os setores para você...\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <div>\\n          <div class=\\\"row\\\" *ngIf=\\\"(setores.length == 0) && !setoresLoading\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-box-open\\\"\\n                text=\\\"Nenhuma informação encontrada\\\">\\n              </message>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"row\\\" *ngIf=\\\"setoresLista.length === 0 && !firstSearch\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-search\\\"\\n                text=\\\"Preecha os campos acima para pesquisar setores\\\">\\n              </message>\\n            </div>\\n          </div> -->\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9ldGFwYXMvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9ldGFwYXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2V0YXBhcy9hc3NvY2lhY2FvLXNldG9yZXMvYXNzb2NpYWNhby1zZXRvcmVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2V0YXBhcy9hc3NvY2lhY2FvLXNldG9yZXMvYXNzb2NpYWNhby1zZXRvcmVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uW2Rpc2FibGVkXXtcbiAgY3Vyc29yOiBuby1kcm9wO1xufVxuIl19 */\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Etapas\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\n    (click)=\\\"postEtapas()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\n        <legend>Dados da Etapa</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\n            <label for=\\\"NM_ETAP\\\">Descrição</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_ETAP\\\"\\n              formControlName=\\\"NM_ETAP\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('NM_ETAP') + ' ' + onFieldRequired('NM_ETAP')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_ETAP')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\n            <label for=\\\"tiposEtapa\\\">Tipo de etapa</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tiposEtapa\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingTiposEtapa\\\"\\n              labelForId=\\\"tiposEtapa\\\"\\n              bindLabel=\\\"NM_ETAP_TIPO\\\"\\n              bindValue=\\\"UUID_LOGI_YMS_ETAP_TIPO\\\"\\n              id=\\\"tiposEtapa\\\"\\n              formControlName=\\\"UUID_LOGI_YMS_ETAP_TIPO\\\"\\n              [ngClass]=\\\"onFieldError('UUID_LOGI_YMS_ETAP_TIPO') + ' ' + onFieldRequired('UUID_LOGI_YMS_ETAP_TIPO')\\\">\\n              >\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('UUID_LOGI_YMS_ETAP_TIPO')\\\" message=\\\"Circuito é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\n            <label for=\\\"IN_STAT\\\">Sigla</label>\\n            <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"tipos\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"tipo\\\"\\n            bindLabel=\\\"nome\\\"\\n            bindValue=\\\"cod\\\"\\n            id=\\\"tipo\\\"\\n            formControlName=\\\"SG_ETAP\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            [ngClass]=\\\"onFieldError('SG_ETAP') + ' ' + onFieldRequired('SG_ETAP')\\\"\\n          >\\n          </ng-select>\\n          <invalid-form-control [show]=\\\"onFieldInvalid('SG_ETAP')\\\" message=\\\"Tipo de circuito é obrigatório.\\\"></invalid-form-control>\\n\\n          </div>\\n        </div>\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\n        <legend>Observação</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n          </div>\\n        </div>\\n        <br>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n</app-body>\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"ETAPAS\\\">\\n  <button\\n  type=\\\"button\\\"\\n  (click)=\\\"onExport()\\\"\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\n  Exportar\\n</button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onReset()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\n              <label for=\\\"circuitos\\\">Circuito</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"circuitos\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingCircuitos\\\"\\n                labelForId=\\\"ID_LOGI_YMS_CIRC\\\"\\n                bindLabel=\\\"NM_CIRC\\\"\\n                bindValue=\\\"ID_LOGI_YMS_CIRC\\\"\\n                id=\\\"ID_LOGI_YMS_CIRC\\\"\\n                formControlName=\\\"ID_LOGI_YMS_CIRC\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\n              <label for=\\\"setores\\\">Setores</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"setores\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingSetores\\\"\\n                labelForId=\\\"ID_LOGI_YMS_SETO\\\"\\n                bindLabel=\\\"NM_SETO\\\"\\n                bindValue=\\\"ID_LOGI_YMS_SETO\\\"\\n                id=\\\"ID_LOGI_YMS_SETO\\\"\\n                formControlName=\\\"ID_LOGI_YMS_SETO\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\n              <label for=\\\"filterEtapas\\\">Etapa</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"filterEtapas\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingEtapas\\\"\\n                labelForId=\\\"UUID_LOGI_YMS_ETAP\\\"\\n                bindLabel=\\\"NM_ETAP\\\"\\n                bindValue=\\\"UUID_LOGI_YMS_ETAP\\\"\\n                id=\\\"UUID_LOGI_YMS_ETAP\\\"\\n                formControlName=\\\"UUID_LOGI_YMS_ETAP\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              (keydown.enter)=\\\"onFilter()\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n            </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\n                (keydown.enter)=\\\"onFilter()\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\n      <div class=\\\"w-100\\\">\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" >ID</th>\\n              <th scope=\\\"col\\\" >Descrição</th>\\n              <th scope=\\\"col\\\" >Tipo etapas</th>\\n              <th scope=\\\"col\\\" style=\\\"width:160px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let etapa of etapas\\\"  [class.table-active]=\\\"etapa?.UUID_LOGI_YMS_ETAP == etapaSelecionada?.UUID_LOGI_YMS_ETAP && showDetailPanel\\\">\\n              <td  [ngClass]=\\\"etapa.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n              {{etapa.UUID_LOGI_YMS_ETAP }}\\n              </td>\\n              <td >{{ etapa.NM_ETAP | uppercase}}</td>\\n              <td >{{ etapa.NM_ETAP_TIPO | uppercase}}</td>\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"etapa.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(etapa)\\\">\\n                    <i [ngClass]=\\\"etapa.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', etapa.UUID_LOGI_YMS_ETAP]\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Associar Setores\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../setores/', etapa.UUID_LOGI_YMS_ETAP]\\\">\\n                    <i class=\\\"fas fa-warehouse\\\"></i>                  \\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(etapa)\\\">\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </div>\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel panelTitle=\\\"Detalhes\\\">\\n        <tabset>\\n          <tab heading=\\\"Dados da Etapa\\\">\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n              <div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>ID da Etapa</label>\\n                    <div>{{ etapaSelecionada?.UUID_LOGI_YMS_ETAP}}</div>\\n                  </div>\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Etapa</label>\\n                    <div>{{ etapaSelecionada?.NM_ETAP | uppercase}}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Tipo de Etapa</label>\\n                    <div>{{ etapaSelecionada?.NM_ETAP_TIPO | uppercase}}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row \\\">\\n                  <div class=\\\"form-group col-lg-12\\\">\\n                    <label>Observação:</label>\\n                    <div>{{ etapaSelecionada?.DS_OBSE | uppercase}}</div>\\n                  </div>\\n                </div>\\n                <hr>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col\\\">\\n                    <label *ngIf=\\\"!etapaSelecionada?.DT_ATUA == null\\\">Usuário Responsável Pelo Cadastro</label>\\n                    <label *ngIf=\\\"etapaSelecionada?.DT_ATUA == null\\\">Usuário Responsável Pela Atualização</label>\\n                    <div>{{ etapaSelecionada?.NM_USUA | uppercase }}</div>\\n                  </div>\\n                  <div class=\\\"form-group col\\\">\\n                    <label *ngIf=\\\"!etapaSelecionada?.DT_ATUA == null\\\">Data do Cadastro</label>\\n                    <label *ngIf=\\\"etapaSelecionada?.DT_ATUA == null\\\">Data da Atualização</label>\\n                    <div>{{(etapaSelecionada?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (etapaSelecionada?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </tab>\\n          <tab  heading=\\\"Setores Associados\\\">\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n              <div class=\\\"mb-3\\\">\\n                <!-- <custom-table  [config]=\\\"tableConfigAssocSetores\\\"  class=\\\"text-center\\\" *ngIf=\\\"!loadingAssociacaoSetores && !noAssocSetores\\\">\\n                  <ng-template #thead let-thead>\\n                    <tr>\\n                      <th scope=\\\"col\\\"  width=\\\"50%\\\">Tipo de Setor</th>\\n                      <th scope=\\\"col\\\"  width=\\\"50%\\\">Setor</th>\\n                    </tr>\\n                  </ng-template>\\n                  <ng-template #tbody let-tbody>\\n                    <tr *ngFor=\\\"let setor of associacaoSetores\\\">\\n                      <td  width=\\\"50%\\\">{{ setor?.NM_SETO_TIPO | uppercase }}</td>\\n                      <td  width=\\\"50%\\\">{{ setor?.NM_SETO | uppercase }}</td>\\n                    </tr>\\n                  </ng-template>\\n                </custom-table> -->\\n                <div *ngFor=\\\"let setor of associacaoSetores; let last = last; let first = first\\\" [ngClass]=\\\"fist ? 'mt-4' : ''\\\">\\n                  <div class=\\\"d-flex w-100\\\" [tooltip]=\\\"setor?.NM_SETO\\\" placement=\\\"left\\\">\\n                    <div class=\\\"rounded-circle text-white icon-40 bg-secondary\\\">\\n                      <i [class]=\\\"setor?.DS_ICON\\\"></i>\\n                    </div>\\n                    <strong class=\\\"my-auto ml-3 text-truncate\\\">\\n                      {{ setor?.NM_SETO | uppercase}}\\n                    </strong>\\n                  </div>\\n                  <div class=\\\"my-1\\\" *ngIf=\\\"!last\\\">\\n                    <div class=\\\"ml-1\\\">\\n                      <div class=\\\"border-left border-secondary ml-3 p-2\\\">\\n                        <div *ngIf=\\\"setor?.check === 1\\\"></div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <message\\n                  *ngIf=\\\"loadingAssociacaoSetores\\\"\\n                  icon=\\\"fas fa-cog fa-spin\\\"\\n                  text=\\\"Estamos pesquisando os setores para você...\\\">\\n                </message>\\n                <div [hidden]=\\\"loadingAssociacaoSetores || !noAssocSetores\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n                  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n                </div>\\n              </div>\\n            </div>\\n          </tab>       \\n        </tabset> \\n      </detail-panel>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","//Services\nimport { LogisticaYmsTiposEtapaService } from './../../tipos-etapa/services/tipos-etapa.service';\nimport { LogisticaYmsSetoresService } from './../../setores/services/setores.service';\nimport { ILogisticaYmsSetores } from './../../setores/models/setores';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//Bootstrap\nimport { utilsBr } from 'js-brasil';\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\n//Angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//rxjs\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LogisticaYmsEtapasService } from '../services/etapas.service';\n//interfaces\nimport { ILogisticaYmsEtapas } from '../models/etapas';\nimport { isNull } from 'util';\nimport { ILogisticaYmsCircuitos } from '../../circuitos/models/circuitos';\nimport { ILogisticaYmsTiposEtapa } from '../../tipos-etapa/models/tipos-etapa';\n\n@Component({\n  selector: 'logistica-yms-etapas-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class LogisticaYmsEtapasCadastroComponent\n  implements OnInit {\n  noResult: boolean;\n  $activatedRouteSubscription: Subscription;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  modalRef: BsModalRef;\n  formData: Array<FormData> = [];\n  bsConfig: Partial<BsDatepickerConfig>;\n  tiposEtapa: Array<ILogisticaYmsTiposEtapa>;\n  setores: Array<ILogisticaYmsSetores>;\n\n  //loading\n  disabledForm = false;\n  loading = false;\n  loadingNavBar = false;\n  loadingTiposEtapa:boolean;\n  loadingSetores:boolean;\n\n  tipos = [\n    {\n      cod: 'fixa',\n      nome: 'Fixa',\n    },\n    {\n      cod: 'variavel',\n      nome: 'Variável',\n    },\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private localeService: BsLocaleService,\n    private etapasService: LogisticaYmsEtapasService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n    private tiposEtapaService: LogisticaYmsTiposEtapaService,\n    private setoresService: LogisticaYmsSetoresService,\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n  public MASKS = utilsBr.MASKS;\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n    this.getTiposEtapa();\n    this.getSetores();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onActivatedRoute() {\n    const _params = this.activatedRoute.snapshot.params;\n    if (_params.hasOwnProperty('id'))\n    return this.getEtapa(_params['id']); \n  }\n\n  getTiposEtapa(params?: Partial<ILogisticaYmsCircuitos>) {\n    const _params = params ?? {};\n    _params.IN_STAT = 1;\n    _params.IN_PAGI = 0;\n    this.loadingTiposEtapa = true;\n    this.tiposEtapaService\n      .getTiposEtapa(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingTiposEtapa = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tiposEtapa = response.body['data'];\n        }else{\n          this.tiposEtapa = [];\n        }\n      },\n      (error: any) => {\n        try {\n          this.pnotify.error(error.error.message);\n        } catch (error) {\n          this.pnotify.error();\n        }\n      }\n    );\n  }\n\n  getSetores(params?: Partial<ILogisticaYmsSetores>) {\n    const _params = params ?? {};\n    _params.IN_STAT = 1;\n    _params.IN_PAGI = 0;\n    this.loadingSetores = true;\n    this.setoresService\n      .getSetores(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingSetores = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.setores = response.body['data'];\n        }else{\n          this.setores = []\n        }\n      },\n      (error: any) => {\n        try {\n          this.pnotify.error(error.error.message);\n        } catch (error) {\n          this.pnotify.error();\n        }\n      }\n    );\n  }\n\n\n  getEtapa(id: number) {\n    this.loading = true;\n    this.etapasService\n      .getEtapa(id)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            const data : ILogisticaYmsEtapas = response.body['data'][0]\n            this.form.patchValue(data) \n            this.noResult = false;\n          } else {\n            this.noResult = true;\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  setBreadCrumb(): void {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.appTitle = 'Cadastro';\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'YMS',\n        routerLink: `/logistica/yms/${id}`,\n      },\n      {\n        descricao: 'Etapas',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //formulario\n  setFormBuilder(): void {\n\n    this.form = this.formBuilder.group({\n      UUID_LOGI_YMS_ETAP: [null],\n      NM_ETAP: [null, [Validators.required]],\n      SG_ETAP: [null, [Validators.required]],\n      UUID_LOGI_YMS_ETAP_TIPO:[null, [Validators.required]],\n      NM_ETAP_TIPO:[null],\n      IN_STAT: [null],\n      DS_OBSE: [null],\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  postEtapas() {\n    this.loadingNavBar = true;\n    this.etapasService\n      .postEtapas(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          try {\n            this.pnotify.error(error.error.message);\n          } catch (error) {\n            this.pnotify.error();\n          }\n        }\n      );\n  }\n  \n}\n","import { ILogisticaFiliais } from './../../../cadastros/filiais/models/filiais';\nimport { ILogisticaYmsTiposSetor } from './../../tipos-setor/models/tipos-setor';\nimport { LogisticaYmsTiposSetorService } from './../../tipos-setor/services/tipos-setor.service';\nimport { ILogisticaYmsSetores } from './../../setores/models/setores';\nimport { LogisticaYmsSetoresService } from './../../setores/services/setores.service';\nimport { ILogisticaYmsEtapas } from './../models/etapas';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n// angular\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n// services\nimport { LogisticaYmsEtapasService } from '../services/etapas.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\n\n// rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { LogisticaFiliaisService } from '../../../cadastros/filiais/services/filiais.service';\n\n@Component({\n  selector: 'logistica-etapas-associacao-setores',\n  templateUrl: './associacao-setores.component.html',\n  styleUrls: ['./associacao-setores.component.scss']\n})\nexport class LogisticaYmsEtapasAssociacaoSetoresComponent implements OnInit {\n\n  appTitle = \"Associação Setores\";\n\n  form: FormGroup;\n  formSetores: FormGroup;\n\n  breadCrumbTree: any = [];\n  idSubModulo: number;\n  $subscription: Subscription;\n\n  /*loading*/\n  loading = false;\n  loadingNavBar = false;\n  noResult = true;\n  loadingEtapas: boolean;\n  loadingFiliais: boolean;\n  /*loading*/\n  filterSetores:Array<ILogisticaYmsSetores>;\n  setores= [];\n  filiais: Array<ILogisticaFiliais>;\n  tiposSetor: Array<ILogisticaYmsTiposSetor>;\n  setoresLoading = false;\n  loadingSetores = false;\n  loadingFilterSetores= false;\n  loadingTiposSetor= false;\n  etapas: Array<ILogisticaYmsEtapas>;\n\n  setoresAssociados = [];\n  setoresAssociadosLoading = false;\n\n  tableConfigSetoresAssociados: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n    hover: false,\n  };\n  \n  tableConfigSetores: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  toggle = {\n    setores: false,\n    setoresAssociados: false\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private etapasService: LogisticaYmsEtapasService,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private confirmModalService: ConfirmModalService,\n    private setoresService: LogisticaYmsSetoresService,\n    private tiposSetorService: LogisticaYmsTiposSetorService,\n    private filiaisService: LogisticaFiliaisService,\n  ) {\n    this.form = this.formBuilder.group({\n      \"UUID_LOGI_YMS_ETAP\": [{value:null, disabled:true}],\n      \"NM_ETAP\": [null],\n    });\n\n    this.formSetores = this.formBuilder.group({\n      UUID_LOGI_YMS_SETO:[null],\n      NM_SETO:[null],\n      UUID_LOGI_YMS_SETO_TIPO:[null],\n      NM_SETO_TIPO:[null],\n      UUID_LOGI_FILI:[null],\n      NM_FILI:[null]\n    });\n  }\n\n  ngOnInit() {\n\n    this.atividadesService\n      .registrarAcesso()\n      .subscribe();\n    this.onActivatedRoute();\n    this.setBreadCrumb();\n    this.getEtapas();\n    this.getTiposSetor();\n    this.getFilterSetores();\n    this.getFiliais();\n  }\n\n  getFilterSetores(params?: Partial<ILogisticaYmsSetores>) {\n    const _params = params ?? {};\n    _params.IN_STAT = 1;\n    _params.IN_PAGI = 0;\n    this.loadingFilterSetores = true;\n    this.setoresService\n      .getSetores(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingFilterSetores = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filterSetores = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      },\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    );\n  }\n\n  getTiposSetor() {\n    this.loadingTiposSetor = true;\n    this.tiposSetorService\n      .getTiposSetor({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTiposSetor = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tiposSetor = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      },\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    );\n  }\n\n  getFiliais() {\n    this.loadingFiliais = true;\n    this.filiaisService\n      .getFiliais({ IN_STAT: '1', IN_PAGI: '0', IN_YMS: 1 })\n      .pipe(\n        finalize(() => {\n          this.loadingFiliais = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filiais = response.body['data'];\n        }else{\n          this.filiais = [];\n          this.pnotify.notice('Nenhuma filial encontrada!')\n        }\n      }),\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n  }\n\n  onActivatedRoute() {\n    const params = this.activatedRoute.snapshot.params;\n\n    if (!params?.id){\n      this.loading = false;\n      return\n    }\n    this.form.get('UUID_LOGI_YMS_ETAP').setValue(params['id'])\n    this.getSetoresAssociados({\"UUID_LOGI_YMS_ETAP\": params?.id})  \n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'Cadastro',\n        routerLink: `/logistica/cadastros/${id}`,\n      },\n      {\n        descricao: 'Etapas',\n        routerLink: `../../`,\n      },\n      {\n        descricao: this.appTitle\n      }\n    ];\n  }\n\n  getEtapas() {\n    this.loadingEtapas = true;\n    this.etapasService\n      .getEtapas({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingEtapas = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.etapas = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      });\n  }\n\n  getSetores(){\n\n    let params = {} ?? this.formSetores.value;\n    params.IN_STAT = 1;\n    params.IN_PAGI = 0;\n\n\n    this.setoresLoading = true\n\n    this.etapasService\n      .getSetores(params)\n      .pipe(\n        finalize(() => {\n          this.setoresLoading = false;\n        })\n      )\n      .subscribe(\n        response => {\n          let setores = response.body['data'];\n          console.log(setores)\n          this.setores = setores.filter(setor => {\n            return !this.setoresAssociados.some(item => item.UUID_LOGI_YMS_SETO == setor.ID)\n          })\n\n          this.tableConfigSetores.fixedHeader = this.setores.length > 9 ? true : false;\n         \n        }\n      )\n  }\n\n  getSetoresAssociados(params){\n    this.loadingSetores = true;\n    params.IN_STAT = '1';\n    params.IN_PAGI = '0';\n    params.ORDE_BY = 'ID_REFE_ERP'\n\n    this.etapasService\n      .getSetoresAssociados(params)\n      .pipe(\n        finalize(() => {\n          this.loadingSetores = false;\n        })\n      )\n      .subscribe(\n        response => {\n          if(response.status !== 200){\n            return\n          }\n\n          this.setoresAssociados = response.body['data'];\n          this.tableConfigSetoresAssociados.fixedHeader = this.setoresAssociados.length > 9 ? true : false;\n        }\n      )\n  }\n\n  onAssociarSetores(){\n    let setores = this.setores.filter(setor => setor.checked && setor.NR_SQNC != null);\n\n    console.log(setores)\n    this.toggle.setores = false;\n    setores.map(item => {\n      \n      item.loading = true;\n\n      if(this.setoresAssociados.some(setor => setor?.UUID_LOGI_YMS_SETO === item.UUID_LOGI_YMS_SETO)){\n        return\n      }\n\n      let params = {\n        \"UUID_LOGI_YMS_ETAP\": this.form.get(\"UUID_LOGI_YMS_ETAP\").value ?? \"\",\n        \"UUID_LOGI_YMS_SETO\": item?.UUID_LOGI_YMS_SETO ?? \"\",\n        \"IN_STAT\": \"1\",\n        \"NR_SQNC\": item?.NR_SQNC ?? \"\",\n      }\n      this.etapasService\n        .postSetoresAssociados(params)\n        .subscribe(\n          response => {\n            if(response.status === 200){\n              \n              this.setoresAssociados = [...this.setoresAssociados,\n                {\n                  ...item,\n                  checked: false,\n                  NR_SQNC: item.NR_SQNC,\n                  NM_SETO: item.NM_SETO,\n                  NM_FILI: item.NM_FILI,\n                  NM_SETO_TIPO: item.NM_SETO_TIPO,\n                  loading: false,\n                  UUID_LOGI_YMS_SETO: item.UUID_LOGI_YMS_SETO,\n                  UUID_LOGI_YMS_ETAP: this.form.get('UUID_LOGI_YMS_ETAP').value\n                }\n              ];\n              console.log(this.setoresAssociados)\n              \n              this.setores = this.setores.filter(setor => !setor.checked)\n              this.tableConfigSetoresAssociados.fixedHeader = this.setoresAssociados.length > 9 ? true : false;\n\n            }\n          }\n        )\n    });\n\n  }\n\n  confirmDelete(): Observable<boolean> {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onRemoverAssociacao(setor?){\n    let setores = setor ? [setor] : this.setoresAssociados.filter(setor => setor.checked);\n    console.log(setores)\n    this.toggle.setoresAssociados = false;\n\n    if(setores.length == 0){\n      this.pnotify.notice(\"Nenhum setor selecionado.\");\n      return\n    }\n\n    this.confirmDelete()\n      .subscribe(\n        (response: boolean) => {\n          \n          if(!response){\n            return\n          }\n          setores.map(item => {\n            item.IN_STAT = '0';\n            item.loading = true;\n\n            this.etapasService\n              .deleteAssociacoes(item)\n              .pipe(finalize(() => {\n                item.loading = false;\n              }))\n              .subscribe(\n                response => {\n                  \n                  if(response.status !== 200){\n                    return\n                  }\n                  this.setoresAssociados = this.setoresAssociados\n                    .filter(setor => setor.UUID_LOGI_YMS_SETO != item.UUID_LOGI_YMS_SETO);\n                  \n                  this.tableConfigSetoresAssociados.fixedHeader = this.setoresAssociados.length > 9 ? true : false;\n                }\n              );\n              (error) => {\n                const message = error.error.message\n                message ? this.pnotify.error(message): this.pnotify.error();\n              }\n          \n          })\n          \n        }\n      )\n  }\n\n  onToggleAll(item: string){\n    console.log(item)\n    this.toggle[item] = !this.toggle[item];\n    this[item].map(setor => setor.checked = this.toggle[item]);\n\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.formSetores.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.formSetores.controls[field].validator) {\n      let validationResult = this.formSetores.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\nsetValidacao(event){\n  console.log(event)\n}\n \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  PaginationModule,\n  TooltipModule,\n  TabsModule,\n  TimepickerModule,\n  BsDatepickerModule,\n  ModalModule,\n} from 'ngx-bootstrap';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n\nimport { LogisticaYmsEtapasListaComponent } from './lista/lista.component';\nimport { LogisticaYmsEtapasCadastroComponent } from './cadastro/cadastro.component';\n\nimport { LogisticaYmsEtapasRoutingModule } from './etapas-routing.module';\nimport { LogisticaYmsEtapasAssociacaoSetoresComponent } from './associacao-setores/associacao-setores.component';\n\n@NgModule({\n  declarations: [\n    LogisticaYmsEtapasListaComponent,\n    LogisticaYmsEtapasCadastroComponent,\n    LogisticaYmsEtapasAssociacaoSetoresComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    LogisticaYmsEtapasRoutingModule\n  ]\n})\nexport class LogisticaYmsEtapasModule { }\n","import { LogisticaYmsEtapasAssociacaoSetoresComponent } from './associacao-setores/associacao-setores.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\nimport { LogisticaYmsEtapasCadastroComponent } from './cadastro/cadastro.component';\nimport { LogisticaYmsEtapasListaComponent } from './lista/lista.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaYmsEtapasListaComponent,\n  },\n  {\n    path: 'novo',\n    component: LogisticaYmsEtapasCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: LogisticaYmsEtapasCadastroComponent,\n  },\n  {\n    path: 'setores/:id',\n    component: LogisticaYmsEtapasAssociacaoSetoresComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LogisticaYmsEtapasRoutingModule {}\n","import { ILogisticaYmsSetores } from './../../setores/models/setores';\nimport { ILogisticaYmsCircuitos } from './../../circuitos/models/circuitos';\nimport { LogisticaYmsSetoresService } from './../../setores/services/setores.service';\nimport { LogisticaYmsCircuitosService } from './../../circuitos/services/circuitos.service';\n//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\nimport { LogisticaYmsEtapasService } from '../services/etapas.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//modelos\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\n\n//Interfaces\nimport { ILogisticaYmsEtapas } from './../models/etapas';\n\n\n@Component({\n  selector: 'logistica-yms-etapas-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class LogisticaYmsEtapasListaComponent\n  implements OnInit, OnDestroy {\n    \n  breadCrumbTree: Array<Breadcrumb>;\n  idSubModulo: number;\n  noResult: boolean;\n  loadingEtapas: boolean;\n  modalRef: BsModalRef;\n  form: FormGroup;\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  $activatedRouteSubscription: Subscription;\n  circuitos: Array<ILogisticaYmsCircuitos>;\n  setores: Array<ILogisticaYmsSetores>;\n  noAssocSetores: boolean\n  associacaoSetores: Array<ILogisticaYmsEtapas>;\n  //LOADINGS\n  loading = true; \n  loadingNavBar = false; \n  loadingCircuitos:boolean;\n  loadingSetores:boolean;\n  loadingAssociacaoSetores: boolean;\n  //VARIAVEIS\n  totalItens: any = [];\n  filterEtapas: Array<ILogisticaYmsEtapas>;\n  etapas: Array<ILogisticaYmsEtapas>;\n  etapaSelecionada: ILogisticaYmsEtapas;\n\n  // CUSTOM TABLE\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigAssocSetores: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  // Tipos de Situação dos Etapas (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '2',\n      nome: 'Inativos',\n    },\n  ];\n\n  // Subtitles (Ativo/Inativo)\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private formBuilder: FormBuilder,\n    private xlsxService: XlsxService,\n    private dateService: DateService,\n    private routerService: RouterService,\n    private activatedRoute: ActivatedRoute,\n    private detailPanelService: DetailPanelService,\n    private confirmModalService: ConfirmModalService,\n    private etapasService: LogisticaYmsEtapasService,\n    private circuitosService: LogisticaYmsCircuitosService,\n    private setoresService: LogisticaYmsSetoresService,\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n    this.onDetailPanelEmitter();\n    this.getFilterEtapas();\n    this.getCircuitos();\n    this.getSetores();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n          this.getEtapas(this.getParams());\n      }\n    );\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.patchValue({\n      PAGI: 1,\n      TT_REGI_PAGI: 100,\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  getCircuitos(params?: Partial<ILogisticaYmsCircuitos>) {\n    const _params = params ?? {};\n    _params.IN_STAT = 1;\n    _params.IN_PAGI = 0;\n    this.loadingCircuitos = true;\n    this.circuitosService\n      .getCircuitos(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingCircuitos = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.circuitos = response.body['data'];\n        }else{\n          this.circuitos = [];\n        }\n      },\n      (error: any) => {\n        try {\n          this.pnotify.error(error.error.message);\n        } catch (error) {\n          this.pnotify.error();\n        }\n      }\n    );\n  }\n\n  getSetores(params?: Partial<ILogisticaYmsSetores>) {\n    const _params = params ?? {};\n    _params.IN_STAT = 1;\n    _params.IN_PAGI = 0;\n    this.loadingSetores = true;\n    this.setoresService\n      .getSetores(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingSetores = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.setores = response.body['data'];\n        }else{\n          this.setores = [];\n        }\n      },\n      (error: any) => {\n        try {\n          this.pnotify.error(error.error.message);\n        } catch (error) {\n          this.pnotify.error();\n        }\n      }\n    );\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      UUID_LOGI_YMS_ETAP: [null],\n      NM_ETAP: [null],\n      ID_LOGI_YMS_SETO:[null],\n      NM_SETO:[null],\n      ID_LOGI_YMS_CIRC:[null],\n      NM_CIRC:[null],\n      IN_STAT: [null],\n      DS_OBSE: [null],\n      NR_MATR: [null],\n      NM_USUA: [null],\n      DT_INCL: [null],\n      DT_ATUA: [null],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/logistica/home`,\n      },\n      {\n        descricao: 'YMS',\n        routerLink: `/logistica/yms/${id}`,\n      },\n      {\n        descricao: 'Etapas',\n      },\n    ];\n  }\n\n  onFilter() {\n    this.detailPanelService.hide();\n    this.form.get('PAGI').setValue(1);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  onDetails(etapas: ILogisticaYmsEtapas): void {\n    this.getSetoresAssociados({UUID_LOGI_YMS_ETAP: etapas.UUID_LOGI_YMS_ETAP});\n    this.detailPanelService.show();\n    this.etapaSelecionada = etapas;\n    this.detailPanelService.loadedFinished(false);\n  }\n\n  getEtapas(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n    this.etapasService\n      .getEtapas(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.etapas = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.etapas = [];\n          }\n        },\n        (error: any) => {\n          try {\n            this.noResult = true;\n            this.pnotify.error(error.error.message);\n          } catch (error) {\n            this.pnotify.error();\n          }\n        }\n      );\n    }\n\n\n    getSetoresAssociados(params){\n      this.loadingAssociacaoSetores = true;\n      params.IN_STAT = '1';\n      params.IN_PAGI = '0';\n      params.ORDE_BY = 'NR_SQNC'\n      params.ORDE_BY = 'asc'\n      console.log(params)\n      this.etapasService\n        .getSetoresAssociados(params)\n        .pipe(\n          finalize(() => {\n            this.loadingAssociacaoSetores = false;\n          })\n        )\n        .subscribe(\n          (response) => {\n            if (response.status === 200) {\n              this.associacaoSetores = response.body['data'];\n  \n              if (this.associacaoSetores.length > 9) {\n                this.tableConfigAssocSetores.fixedHeader = true;\n              }\n  \n              this.noAssocSetores = false\n            } else {\n              this.pnotify.notice('Nenhuma associação encontrada!');\n              this.noAssocSetores = true\n              this.associacaoSetores = [];\n            }\n          },\n          (error) => {\n            this.pnotify.error();\n          }\n        );\n    }\n\n  getFilterEtapas() {\n    this.loadingEtapas = true;\n    this.etapasService\n      .getEtapas({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingEtapas = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filterEtapas = response.body['data'];\n        }else{\n          this.filterEtapas = [];\n        }\n      },\n      (error: any) => {\n        try {\n          this.pnotify.error(error.error.message);\n        } catch (error) {\n          this.pnotify.error();\n        }\n      }\n    );\n  }\n\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  classStatusBorder(etapas: ILogisticaYmsEtapas): string {\n    let borderClass: string;\n\n    if (etapas.IN_STAT == 1) {\n      borderClass = 'border-success';\n    } else if (etapas.IN_STAT == 2) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  changeType(params: ILogisticaYmsEtapas) {\n    const stat = params.IN_STAT == 1 ? 0 : 1;\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loadingNavBar = true;\n          params.IN_STAT = stat;\n          return this.etapasService.postEtapas(params);\n        }),\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotify.success();\n        },\n        (error: any) => {\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\n          this.pnotify.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == 1)\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Deseja realmente prosseguir com a ativação do registro?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onExport(): void {\n    let data = new Date().toLocaleDateString().split('/'),\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\n\n    let listagemExport: any = [];\n    listagemExport = this.etapas.concat(this.totalItens);\n\n    this.xlsxService.exportFile(listagemExport, `Etapas${dataExport}`);\n  }\n}\n"]}