{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/escritorios/lista/lista.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/escritorios/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/escritorios/escritorios.module.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/escritorios/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/escritorios/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/escritorios/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/escritorios/escritorios-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/escritorios/formulario/formulario-resolver.guard.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/escritorios/formulario/formulario.component.ts"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialCadastrosEscritorioModule","declarations","imports","forRoot","providers","ComercialService","http","API","params","httpParams","param","append","get","pipe","id","codCliente","ComercialCadastrosEscritorioListaComponent","activatedRoute","router","location","formBuilder","escritorioService","pnotifyService","atividadesService","titleService","confirmModalService","detailPanelService","comercialService","loaderNavbar","loaderFullScreen","breadCrumbTree","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","empresas","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","getPNotify","registrarAcesso","setBreadCrumb","getFormFields","setFormFilter","setTitle","onDetailPanelEmitter","setEscritorioSelecionado","showDetailPanelSubscription","unsubscribe","subscribe","descricao","routerLink","config","event","showing","getEmpresas","next","response","responseCode","result","unshift","idEmpresa","nomeEmpresa","error","back","formValue","checkRouterParams","form","group","nomeEscritorio","codEmpresa","codSituacao","pagina","registros","required","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","value","escritorioSelecionado","codEscritorio","situacao","codUsuario","nomeUsuario","dataCadastro","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","hide","getListaEscritorios","hasOwnProperty","success","data","slice","mensagem","escritorio","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","toUpperCase","getAlteracoes","setTimeout","loadedFinished","index","confirmActivate","asObservable","activateEscritorio","refreshMainData","showConfirm","confirmInactive","inactivateEscritorio","i","selector","template","routes","path","component","resolve","detalhes","canDeactivate","redirectTo","pathMatch","ComercialCadastrosEscritorioModuleRoutingModule","forChild","exports","ComercialCadastrosEscritorioFormularioResolverGuard","route","getDetalhes","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosEscritorioFormularioComponent","formChanged","setFormBuilder","appTitle","idSubModulo","snapshot","pristine","submittingForm","save","reset","notice","confirm"],"mappings":"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","file":"escritorios-escritorios-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Escritórios\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"nomeEscritorio\\\">Nome do escritório</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"nomeEscritorio\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codEmpresa\\\">Empresa</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"empresas\\\"\\r\\n                formControlName=\\\"codEmpresa\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                bindLabel=\\\"nomeEmpresa\\\"\\r\\n                bindValue=\\\"idEmpresa\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"0\\\">Todos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n                <option value=\\\"2\\\">Inativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-4 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Escritório</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Empresa</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let escritorio of dadosPagination; let i = index\\\" [class.table-active]=\\\"escritorio.codEscritorio == escritorioSelecionado.codEscritorio && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(escritorio)\\\"\\r\\n              (click)=\\\"onDetails(escritorio)\\\">\\r\\n              {{ escritorio.nomeEscritorio | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(escritorio)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              {{ escritorio.nomeEmpresa | uppercase }}\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"escritorio.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, escritorio)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"escritorio.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, escritorio)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(escritorio)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n              <th scope=\\\"col\\\">Alteração</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\r\\n              <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\r\\n              <td>{{ alteracao.mensagem | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"nomeEscritorio\\\">Nome do escritório</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeEscritorio\\\"\\r\\n              formControlName=\\\"nomeEscritorio\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeEscritorio') + ' ' + onFieldRequired(form.controls.nomeEscritorio)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeEscritorio')\\\" message=\\\"Nome do escritório é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codEmpresa\\\">Empresa</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"empresas\\\"\\r\\n              formControlName=\\\"codEmpresa\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              bindLabel=\\\"nomeEmpresa\\\"\\r\\n              bindValue=\\\"idEmpresa\\\"\\r\\n              [ngClass]=\\\"onFieldError('codEmpresa') + ' ' + onFieldRequired(form.controls.codEmpresa)\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codEmpresa')\\\" message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"codSituacao\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n              <option value=\\\"2\\\">Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosEscritorioModuleRoutingModule } from './escritorios-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosEscritorioListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosEscritorioFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosEscritorioListaComponent,\r\n    ComercialCadastrosEscritorioFormularioComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosEscritorioModuleRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class ComercialCadastrosEscritorioModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`,  {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getUpSellService(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_suplementarios`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos() {\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9lc2NyaXRvcmlvcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9lc2NyaXRvcmlvcy9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosEscritorioService } from '../escritorios.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialService } from '../../../comercial.service';\r\n\r\n// Interfaces\r\nimport { Escritorio } from '../models/escritorio';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-escritorio-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class ComercialCadastrosEscritorioListaComponent\r\n  implements OnInit, OnDestroy {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red'\r\n    }\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'nomeEscritorio';\r\n  orderType = 'ASC';\r\n\r\n  empresas: Array<any> = [];\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<Escritorio> = [];\r\n  dadosPagination: Array<Escritorio> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  escritorioSelecionado: Escritorio;\r\n  alteracoes: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private escritorioService: ComercialCadastrosEscritorioService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFormFields();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Escritórios');\r\n    this.onDetailPanelEmitter();\r\n    this.setEscritorioSelecionado();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`\r\n        },\r\n        {\r\n          descricao: 'Escritórios'\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  getFormFields(): void {\r\n    this.comercialService\r\n      .getEmpresas(null)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.responseCode === 200) {\r\n            this.empresas = response.result;\r\n\r\n            this.empresas.unshift({\r\n              idEmpresa: 0,\r\n              nomeEmpresa: 'EXIBIR TODOS'\r\n            });\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      nomeEscritorio: [formValue.nomeEscritorio],\r\n      codEmpresa: [formValue.codEmpresa],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required]\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      nomeEscritorio: null,\r\n      codEmpresa: 0,\r\n      codSituacao: 0,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach(formKey => {\r\n            Object.keys(params).forEach(paramKey => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setEscritorioSelecionado(): void {\r\n    this.escritorioSelecionado = {\r\n      codEscritorio: -1,\r\n      nomeEscritorio: null,\r\n      codEmpresa: null,\r\n      nomeEmpresa: null,\r\n      codSituacao: null,\r\n      situacao: null,\r\n      codUsuario: null,\r\n      nomeUsuario: null,\r\n      dataCadastro: null\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) }\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.nomeEscritorio) {\r\n      params.nomeEscritorio = this.form.value.nomeEscritorio;\r\n    }\r\n\r\n    if (this.form.value.codEmpresa) {\r\n      params.codEmpresa = this.form.value.codEmpresa;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    this.escritorioService\r\n      .getListaEscritorios(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(escritorio: Escritorio): string {\r\n    let borderClass: string;\r\n\r\n    if (escritorio.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (escritorio.codSituacao === 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant'\r\n    });\r\n  }\r\n\r\n  onDetails(escritorio: Escritorio): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `HISTÓRICO DE ALTERAÇÕES / ${escritorio.nomeEscritorio.toUpperCase()}`;\r\n    this.setEscritorioSelecionado();\r\n    this.escritorioSelecionado = escritorio;\r\n    this.alteracoes = [];\r\n\r\n    this.escritorioService\r\n      .getAlteracoes(escritorio.codEscritorio)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.alteracoes = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onEdit(escritorio: Escritorio): void {\r\n    this.router.navigate(['../editar', escritorio.codEscritorio], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, escritorio: Escritorio): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap(result =>\r\n          result ? this.activateEscritorio(index, escritorio) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(escritorio);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateEscritorio(index: number, escritorio: Escritorio): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.escritorioService.activateEscritorio(escritorio.codEscritorio);\r\n  }\r\n\r\n  onInactivate(index: number, escritorio: Escritorio): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap(result =>\r\n          result ? this.inactivateEscritorio(index, escritorio) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(escritorio);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateEscritorio(index: number, escritorio: Escritorio): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 2;\r\n\r\n    return this.escritorioService.inactivateEscritorio(\r\n      escritorio.codEscritorio\r\n    );\r\n  }\r\n\r\n  refreshMainData(escritorio: Escritorio): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (escritorio.codEscritorio === this.dados[i].codEscritorio) {\r\n        this.dados[i].codSituacao = escritorio.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosEscritorioFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosEscritorioListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosEscritorioFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialCadastrosEscritorioListaComponent },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosEscritorioFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosEscritorioFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosEscritorioFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosEscritorioFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialCadastrosEscritorioModuleRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosEscritorioService } from '../escritorios.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosEscritorioFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(private escritorioService: ComercialCadastrosEscritorioService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.escritorioService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codEscritorio: null,\r\n        nomeEscritorio: null,\r\n        codEmpresa: null,\r\n        nomeEmpresa: null,\r\n        codSituacao: 1,\r\n        situacao: null,\r\n        codUsuario: null,\r\n        nomeUsuario: null,\r\n        dataCadastro: null\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosEscritorioService } from '../escritorios.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ComercialService } from '../../../comercial.service';\r\n\r\n// Interfaces\r\nimport { Escritorio } from '../models/escritorio';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-escritorio-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss']\r\n})\r\nexport class ComercialCadastrosEscritorioFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderNavbar: boolean;\r\n  loaderFullScreen = true;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<any> = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  empresas: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private escritorioService: ComercialCadastrosEscritorioService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFormFields();\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar escritório';\r\n      } else {\r\n        this.appTitle = 'Novo escritório';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`\r\n        },\r\n        {\r\n          descricao: 'Escritórios',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/escritorios/lista`\r\n        },\r\n        {\r\n          descricao: this.appTitle\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFormFields(): void {\r\n    this.comercialService\r\n      .getEmpresas(null)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.responseCode === 200) {\r\n            this.empresas = response.result;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: Escritorio = this.activatedRoute.snapshot.data.detalhes\r\n        .data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codEscritorio: [detalhes.codEscritorio],\r\n        nomeEscritorio: [detalhes.nomeEscritorio, [Validators.required]],\r\n        codEmpresa: [detalhes.codEmpresa, [Validators.required]],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]]\r\n      });\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.escritorioService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n"]}