{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/escritorios/lista/lista.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/escritorios/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/escritorios/escritorios.module.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/escritorios/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/escritorios/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/escritorios/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/escritorios/escritorios-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/escritorios/formulario/formulario-resolver.guard.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/escritorios/formulario/formulario.component.ts"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialCadastrosEscritorioModule","declarations","imports","forRoot","providers","ComercialService","http","API","params","httpParams","param","append","get","pipe","ComercialCadastrosEscritorioListaComponent","activatedRoute","router","location","formBuilder","escritorioService","pnotifyService","atividadesService","titleService","confirmModalService","detailPanelService","comercialService","loaderNavbar","loaderFullScreen","breadCrumbTree","subtitles","id","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","empresas","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","getPNotify","registrarAcesso","setBreadCrumb","getFormFields","setFormFilter","setTitle","onDetailPanelEmitter","setEscritorioSelecionado","showDetailPanelSubscription","unsubscribe","subscribe","descricao","routerLink","config","event","showing","getEmpresas","next","response","responseCode","result","unshift","idEmpresa","nomeEmpresa","error","back","formValue","checkRouterParams","form","group","nomeEscritorio","codEmpresa","codSituacao","pagina","registros","required","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","value","escritorioSelecionado","codEscritorio","situacao","codUsuario","nomeUsuario","dataCadastro","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","hide","getListaEscritorios","hasOwnProperty","success","data","slice","mensagem","escritorio","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","toUpperCase","getAlteracoes","setTimeout","loadedFinished","index","confirmActivate","asObservable","activateEscritorio","refreshMainData","showConfirm","confirmInactive","inactivateEscritorio","i","selector","template","routes","path","component","resolve","detalhes","canDeactivate","redirectTo","pathMatch","ComercialCadastrosEscritorioModuleRoutingModule","forChild","exports","ComercialCadastrosEscritorioFormularioResolverGuard","route","getDetalhes","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosEscritorioFormularioComponent","formChanged","setFormBuilder","appTitle","idSubModulo","snapshot","pristine","submittingForm","save","reset","notice","confirm"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCGf;;;UAMaA,mBAAmB;AAC9B,qCAAoBC,YAApB,EAAkD;AAAA;;AAA9B,eAAAA,YAAA,GAAAA,YAAA;AAAgC;;AADtB;AAAA;AAAA,sCAI5BC,IAJ4B,EAK5BC,KAL4B,EAM5BC,OAN4B,EAO5BC,SAP4B,EAQ5BC,KAR4B,EAQd;AAEd,gBAAMC,QAAQ,GAAG,KAAKN,YAAL,CAAkBO,IAAlB,CAAuB,8EAAvB,EAA8C;AAC7DC,sBAAQ,EAAE,KADmD;AAE7DC,iCAAmB,EAAE,IAFwC;AAG7DC,sBAAQ,EAAE,KAHmD;AAI7D,uBAAO;AAJsD,aAA9C,CAAjB;AAOAJ,oBAAQ,CAACK,OAAT,CAAiBV,IAAjB,GAAwBA,IAAxB;AACAK,oBAAQ,CAACK,OAAT,CAAiBT,KAAjB,GAAyBA,KAAzB;AACAI,oBAAQ,CAACK,OAAT,CAAiBR,OAAjB,GAA2BA,OAA3B;;AAEA,gBAAIF,IAAI,KAAK,QAAb,EAAuB;AACrBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,+CAD+B,EAE/B,mCAF+B,CAAjC;AAID;;AAED,gBAAIX,IAAI,KAAK,YAAb,EAA2B;AACzBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,oCAD+B,CAAjC;AAGD;;AAED,gBAAIR,SAAJ,EAAe;AACbE,sBAAQ,CAACK,OAAT,CAAiBP,SAAjB,GAA6BA,SAA7B;AACD;;AAED,gBAAIC,KAAJ,EAAW;AACTC,sBAAQ,CAACK,OAAT,CAAiBN,KAAjB,GAAyBA,KAAzB;AACD,aAhCa,CAkCd;AACA;;;AACA,mBAA+BC,QAAQ,CAACK,OAAT,CAAkBE,aAAjD;AACD;AA7C6B;;AAAA;AAAA,S;;;;gBARvB;;;;AAQId,yBAAmB,6DAH/B,iEAAW;AACVe,kBAAU,EAAE;AADF,OAAX,CAG+B,E,+EACI,kE,EADJ,GAAnBf,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCIf;AAIA;AAGA;AAIA;AAGA;AAKA;;;UAwBagB,kCAAkC;AAAA;AAAA,O;;AAAlCA,wCAAkC,6DApB9C,+DAAS;AACRC,oBAAY,EAAE,CACZ,kGADY,EAEZ,iHAFY,CADN;AAKRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0EAAiBC,OAAjB,EAJO,EAKP,oEAAcA,OAAd,EALO,EAMP,mEANO,EAOP,iEAPO,EAQP,kDARO,EASP,4GATO,EAUP,kFAVO,EAWP,0FAXO,CALD;AAkBRC,iBAAS,EAAE,CAAC,2FAAD;AAlBH,OAAT,CAoB8C,GAAlCJ,kCAAkC,CAAlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UClCAK,gBAAgB;AAG3B,kCAAsBC,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAC,GAAA;AAEyB;;AAHf;AAAA;AAAA,sCAKfC,MALe,EAKH;AACtB,gBAAIC,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;AACxBC,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBF,MAAM,CAACE,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKJ,IAAL,CACJM,GADI,WACG,KAAKL,GADR,gBACwB;AAC3BC,oBAAM,EAAEC;AADmB,aADxB,EAIJI,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AAjB0B;AAAA;AAAA,uCAmBdL,MAnBc,EAmBH;AACtB,gBAAIC,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;AACxBC,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBF,MAAM,CAACE,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKJ,IAAL,CACJM,GADI,WACG,KAAKL,GADR,iBACyB;AAC5BC,oBAAM,EAAEC;AADoB,aADzB,EAIJI,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AA/B0B;AAAA;AAAA,oCAiCjBL,MAjCiB,EAiCN;AACnB,gBAAIC,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;AACxBC,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBF,MAAM,CAACE,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKJ,IAAL,CACJM,GADI,WACG,KAAKL,GADR,cACsB;AACzBC,oBAAM,EAAEC;AADiB,aADtB,EAIJI,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AA7C0B;AAAA;AAAA,qCA+ChBL,MA/CgB,EA+CL;AACpB,gBAAIC,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;AACxBC,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBF,MAAM,CAACE,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKJ,IAAL,CACJM,GADI,WACG,KAAKL,GADR,eACuB;AAC1BC,oBAAM,EAAEC;AADkB,aADvB,EAIJI,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AA3D0B;AAAA;AAAA,yCA6DE;AAAA,gBAAhBL,MAAgB,uEAAF,EAAE;AAC3B,gBAAIC,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;AACxBC,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBF,MAAM,CAACE,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKJ,IAAL,CACJM,GADI,WACG,KAAKL,GADR,iBACyB;AAAEC,oBAAM,EAAEC;AAAV,aADzB,EAEJI,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAvE0B;AAAA;AAAA,sCAyElB;AACP,mBAAO,KAAKP,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,cAAoCM,IAApC,CAAyC,4DAAK,CAAL,CAAzC,EAAkD,6DAAM,CAAN,CAAlD,CAAP;AACD;AA3E0B;AAAA;AAAA,2CA6Eb;AACZ,mBAAO,KAAKP,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,mBAAyCM,IAAzC,CAA8C,4DAAK,CAAL,CAA9C,EAAuD,6DAAM,CAAN,CAAvD,CAAP;AACD;AA/E0B;;AAAA;AAAA,S;;;;gBAZpB;;;;AAYIR,sBAAgB,6DAH5B,iEAAW;AACVN,kBAAU,EAAE;AADF,OAAX,CAG4B,E,+EAGC,+D,EAHD,GAAhBM,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCqBf;;;UAoBaS,0CAA0C;AAmDrD,4DACUC,cADV,EAEUC,MAFV,EAGUC,QAHV,EAIUC,WAJV,EAKUC,iBALV,EAMUC,cANV,EAOUC,iBAPV,EAQUC,YARV,EASUC,mBATV,EAUUC,kBAVV,EAWUC,gBAXV,EAW4C;AAAA;;AAVlC,eAAAV,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AA1DV,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,gBAAA,GAAmB,IAAnB;AAEA,eAAAC,cAAA,GAAoC,EAApC;AAEA,eAAAC,SAAA,GAA8B,CAC5B;AACEC,cAAE,EAAE,CADN;AAEEC,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACEF,cAAE,EAAE,CADN;AAEEC,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA,eAAAC,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C;AAOA,eAAAC,eAAA,GAAkB,KAAlB;AAIA,eAAAC,OAAA,GAAU,gBAAV;AACA,eAAAC,SAAA,GAAY,KAAZ;AAEA,eAAAC,QAAA,GAAuB,EAAvB;AAEA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,WAAA,GAAc,CAAd;AACA,eAAAC,UAAA,GAAa,CAAb;AAEA,eAAAC,KAAA,GAA2B,EAA3B;AACA,eAAAC,eAAA,GAAqC,EAArC;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,UAAA,GAAa,KAAb;AAGA,eAAAC,UAAA,GAAyB,EAAzB;AAeE,eAAK3B,cAAL,CAAoB4B,UAApB;AACD;;AAjEoD;AAAA;AAAA,qCAmE7C;AACN,iBAAKC,eAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,aAAL;AACA,iBAAK9B,YAAL,CAAkB+B,QAAlB,CAA2B,aAA3B;AACA,iBAAKC,oBAAL;AACA,iBAAKC,wBAAL;AACD;AA3EoD;AAAA;AAAA,wCA6E1C;AACT,iBAAKC,2BAAL,CAAiCC,WAAjC;AACD;AA/EoD;AAAA;AAAA,4CAiFtC;AACb,iBAAKpC,iBAAL,CAAuB4B,eAAvB,GAAyCS,SAAzC;AACD;AAnFoD;AAAA;AAAA,0CAqFxC;AAAA;;AACX,iBAAK3C,cAAL,CAAoBP,MAApB,CAA2BkD,SAA3B,CAAqC,UAAClD,MAAD,EAAiB;AACpD,mBAAI,CAACoB,cAAL,GAAsB,CACpB;AACE+B,yBAAS,EAAE,MADb;AAEEC,0BAAU,EAAE;AAFd,eADoB,EAKpB;AACED,yBAAS,EAAE,WADb;AAEEC,0BAAU,iCAA0BpD,MAAM,CAAC,aAAD,CAAhC;AAFZ,eALoB,EASpB;AACEmD,yBAAS,EAAE;AADb,eAToB,CAAtB;AAaD,aAdD;AAeD;AArGoD;AAAA;AAAA,iDAuGjC;AAAA;;AAClB,iBAAKH,2BAAL,GAAmC,KAAKhC,kBAAL,CAAwBqC,MAAxB,CAA+BH,SAA/B,CACjC,UAACI,KAAD,EAAgB;AACd,oBAAI,CAAC3B,eAAL,GAAuB2B,KAAK,CAACC,OAA7B;AACD,aAHgC,CAAnC;AAKD;AA7GoD;AAAA;AAAA,0CA+GxC;AAAA;;AACX,iBAAKtC,gBAAL,CACGuC,WADH,CACe,IADf,EAEGnD,IAFH,CAGI,gEAAS,YAAM;AACb,oBAAI,CAACc,gBAAL,GAAwB,KAAxB;AACD,aAFD,CAHJ,EAOG+B,SAPH,CAOa;AACTO,kBAAI,EAAE,cAACC,QAAD,EAAmB;AACvB,oBAAIA,QAAQ,CAACC,YAAT,KAA0B,GAA9B,EAAmC;AACjC,wBAAI,CAAC7B,QAAL,GAAgB4B,QAAQ,CAACE,MAAzB;;AAEA,wBAAI,CAAC9B,QAAL,CAAc+B,OAAd,CAAsB;AACpBC,6BAAS,EAAE,CADS;AAEpBC,+BAAW,EAAE;AAFO,mBAAtB;AAID,iBAPD,MAOO;AACL,wBAAI,CAACnD,cAAL,CAAoBoD,KAApB;;AACA,wBAAI,CAACvD,QAAL,CAAcwD,IAAd;AACD;AACF,eAbQ;AAcTD,mBAAK,EAAE,eAACA,MAAD,EAAgB;AACrB,sBAAI,CAACpD,cAAL,CAAoBoD,KAApB;;AACA,sBAAI,CAACvD,QAAL,CAAcwD,IAAd;AACD;AAjBQ,aAPb;AA0BD;AA1IoD;AAAA;AAAA,0CA4IxC;AACX,gBAAMC,SAAS,GAAQ,KAAKC,iBAAL,EAAvB;AAEA,iBAAKC,IAAL,GAAY,KAAK1D,WAAL,CAAiB2D,KAAjB,CAAuB;AACjCC,4BAAc,EAAE,CAACJ,SAAS,CAACI,cAAX,CADiB;AAEjCC,wBAAU,EAAE,CAACL,SAAS,CAACK,UAAX,CAFqB;AAGjCC,yBAAW,EAAE,CAACN,SAAS,CAACM,WAAX,CAHoB;AAIjC5C,qBAAO,EAAE,CAACsC,SAAS,CAACtC,OAAX,CAJwB;AAKjCC,uBAAS,EAAE,CAACqC,SAAS,CAACrC,SAAX,CALsB;AAMjC4C,oBAAM,EAAE,CAACP,SAAS,CAACO,MAAX,CANyB;AAOjCC,uBAAS,EAAE,CAACR,SAAS,CAACQ,SAAX,EAAsB,0DAAWC,QAAjC;AAPsB,aAAvB,CAAZ;AAUA,iBAAKC,UAAL;AACD;AA1JoD;AAAA;AAAA,8CA4JpC;AAAA;;AACf,gBAAIV,SAAS,GAAG;AACdI,4BAAc,EAAE,IADF;AAEdC,wBAAU,EAAE,CAFE;AAGdC,yBAAW,EAAE,CAHC;AAId5C,qBAAO,EAAE,KAAKA,OAJA;AAKdC,uBAAS,EAAE,KAAKA,SALF;AAMd4C,oBAAM,EAAE,CANM;AAOdC,uBAAS,EAAE,KAAK1C;AAPF,aAAhB;AAUA,iBAAK6C,0BAAL,GAAkC,KAAKtE,cAAL,CAAoBuE,WAApB,CAAgC5B,SAAhC,CAChC,UAAC4B,WAAD,EAAsB;AACpB,kBAAIC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,MAAzB,GAAkC,CAAtC,EAAyC;AACvC,oBAAIjF,MAAM,GAAGkF,IAAI,CAACJ,WAAW,CAAC,GAAD,CAAZ,CAAjB;AACA9E,sBAAM,GAAGmF,IAAI,CAACC,KAAL,CAAWpF,MAAX,CAAT;;AACA,sBAAI,CAACqF,MAAL,CAAYrF,MAAZ;;AAEA+E,sBAAM,CAACC,IAAP,CAAYd,SAAZ,EAAuBoB,OAAvB,CAA+B,UAAAC,OAAO,EAAI;AACxCR,wBAAM,CAACC,IAAP,CAAYhF,MAAZ,EAAoBsF,OAApB,CAA4B,UAAAE,QAAQ,EAAI;AACtC,wBACED,OAAO,IAAIC,QAAX,IACAtB,SAAS,CAACqB,OAAD,CAAT,IAAsBvF,MAAM,CAACwF,QAAD,CAF9B,EAGE;AACA,0BAAI,CAACC,KAAK,CAACC,MAAM,CAAC1F,MAAM,CAACwF,QAAD,CAAP,CAAP,CAAV,EAAsC;AACpCtB,iCAAS,CAACqB,OAAD,CAAT,GAAqBG,MAAM,CAAC1F,MAAM,CAACwF,QAAD,CAAP,CAA3B;AACD,uBAFD,MAEO;AACLtB,iCAAS,CAACqB,OAAD,CAAT,GAAqBvF,MAAM,CAACwF,QAAD,CAA3B;AACD;AACF;AACF,mBAXD;AAYD,iBAbD;AAcD;AACF,aAtB+B,CAAlC;AAwBA,iBAAKX,0BAAL,CAAgC5B,WAAhC;AAEA,mBAAOiB,SAAP;AACD;AAlMoD;AAAA;AAAA,uCAoM3C;AACR,gBAAI,KAAKE,IAAL,CAAUuB,KAAV,CAAgB/D,OAAhB,KAA4B,KAAKA,OAArC,EAA8C;AAC5C,mBAAKA,OAAL,GAAe,KAAKwC,IAAL,CAAUuB,KAAV,CAAgB/D,OAA/B;AACD;;AAED,gBAAI,KAAKwC,IAAL,CAAUuB,KAAV,CAAgB9D,SAAhB,KAA8B,KAAKA,SAAvC,EAAkD;AAChD,mBAAKA,SAAL,GAAiB,KAAKuC,IAAL,CAAUuB,KAAV,CAAgB9D,SAAjC;AACD;AACF;AA5MoD;AAAA;AAAA,qDA8M7B;AACtB,iBAAK+D,qBAAL,GAA6B;AAC3BC,2BAAa,EAAE,CAAC,CADW;AAE3BvB,4BAAc,EAAE,IAFW;AAG3BC,wBAAU,EAAE,IAHe;AAI3BR,yBAAW,EAAE,IAJc;AAK3BS,yBAAW,EAAE,IALc;AAM3BsB,sBAAQ,EAAE,IANiB;AAO3BC,wBAAU,EAAE,IAPe;AAQ3BC,yBAAW,EAAE,IARc;AAS3BC,0BAAY,EAAE;AATa,aAA7B;AAWD;AA1NoD;AAAA;AAAA,uCA4NxCC,KA5NwC,EA4N3B;AACxB,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AAlOoD;AAAA;AAAA,yCAoOtCA,KApOsC,EAoO5B;AACvBA,iBAAK,GAAG,KAAK9B,IAAL,CAAUhE,GAAV,CAAc8F,KAAd,CAAR;AAEA,mBAAOA,KAAK,CAACE,MAAN,IAAgB,SAAhB,IAA6BF,KAAK,CAACG,OAA1C;AACD;AAxOoD;AAAA;AAAA,0CA2OnDC,eA3OmD,EA4OnDC,oBA5OmD,EA4OtB;AAE7B,gBAAID,eAAe,CAACE,SAApB,EAA+B;AAC7B,kBAAMA,SAAS,GAAGF,eAAe,CAACE,SAAhB,CAA0B,EAA1B,CAAlB;;AACA,kBAAIA,SAAS,IAAIA,SAAS,CAAC7B,QAA3B,EAAqC;AACnC,uBAAO,aAAP;AACD;AACF;;AAED,gBAAI4B,oBAAJ,EAA0B;AACxB,mBAAK,IAAME,WAAX,IAA0BH,eAAe,CAAC,UAAD,CAAzC,EAAuD;AACrD,oBAAIA,eAAe,CAAC,UAAD,CAAf,CAA4BG,WAA5B,CAAJ,EAA8C;AAC5C,sBACE,KAAKC,eAAL,CAAqBJ,eAAe,CAAC,UAAD,CAAf,CAA4BG,WAA5B,CAArB,KACAA,WAAW,IAAIF,oBAFjB,EAGE;AACA,2BAAO,aAAP;AACD;AACF;AACF;AACF;;AAED,mBAAO,EAAP;AACD;AAnQoD;AAAA;AAAA,qCAqQ1CI,MArQ0C,EAqQ5B;AACvB,gBAAI,KAAK/E,OAAL,KAAiB+E,MAArB,EAA6B;AAC3B,kBAAI,KAAK9E,SAAL,IAAkB,MAAtB,EAA8B;AAC5B,qBAAKA,SAAL,GAAiB,KAAjB;AACD,eAFD,MAEO,IAAI,KAAKA,SAAL,IAAkB,KAAtB,EAA6B;AAClC,qBAAKA,SAAL,GAAiB,MAAjB;AACD;AACF,aAND,MAMO;AACL,mBAAKD,OAAL,GAAe+E,MAAf;AACA,mBAAK9E,SAAL,GAAiB,KAAjB;AACD;;AAED,iBAAKuC,IAAL,CAAUuB,KAAV,CAAgB/D,OAAhB,GAA0B,KAAKA,OAA/B;AACA,iBAAKwC,IAAL,CAAUuB,KAAV,CAAgB9D,SAAhB,GAA4B,KAAKA,SAAjC;AAEA,iBAAK+E,QAAL;AACD;AArRoD;AAAA;AAAA,qCAuR7C;AACN,gBAAI,KAAKxC,IAAL,CAAUyC,KAAd,EAAqB;AACnB,mBAAK7E,YAAL,GAAoB,KAAKoC,IAAL,CAAUuB,KAAV,CAAgBjB,SAApC;AACA,mBAAKzC,WAAL,GAAmB,CAAnB;AACA,mBAAK6E,eAAL,CAAqB,KAAKC,cAAL,EAArB;AACD;AACF;AA7RoD;AAAA;AAAA,0CA+RrC/G,MA/RqC,EA+R1B;AACzB,iBAAKQ,MAAL,CAAYwG,QAAZ,CAAqB,EAArB,EAAyB;AACvBC,wBAAU,EAAE,KAAK1G,cADM;AAEvBuE,yBAAW,EAAE;AAAEoC,iBAAC,EAAEC,IAAI,CAAChC,IAAI,CAACiC,SAAL,CAAepH,MAAf,CAAD;AAAT;AAFU,aAAzB;AAIA,iBAAKqF,MAAL,CAAYrF,MAAZ;AACD;AArSoD;AAAA;AAAA,2CAuSvC;AACZ,gBAAIA,MAAM,GAAQ,EAAlB;;AAEA,gBAAI,KAAKoE,IAAL,CAAUuB,KAAV,CAAgBrB,cAApB,EAAoC;AAClCtE,oBAAM,CAACsE,cAAP,GAAwB,KAAKF,IAAL,CAAUuB,KAAV,CAAgBrB,cAAxC;AACD;;AAED,gBAAI,KAAKF,IAAL,CAAUuB,KAAV,CAAgBpB,UAApB,EAAgC;AAC9BvE,oBAAM,CAACuE,UAAP,GAAoB,KAAKH,IAAL,CAAUuB,KAAV,CAAgBpB,UAApC;AACD;;AAED,gBAAI,KAAKH,IAAL,CAAUuB,KAAV,CAAgBnB,WAApB,EAAiC;AAC/BxE,oBAAM,CAACwE,WAAP,GAAqB,KAAKJ,IAAL,CAAUuB,KAAV,CAAgBnB,WAArC;AACD;;AAEDxE,kBAAM,CAAC4B,OAAP,GAAiB,KAAKwC,IAAL,CAAUuB,KAAV,CAAgB/D,OAAjC;AACA5B,kBAAM,CAAC6B,SAAP,GAAmB,KAAKuC,IAAL,CAAUuB,KAAV,CAAgB9D,SAAnC;AAEA,mBAAO7B,MAAP;AACD;AA1ToD;AAAA;AAAA,iCA4T9CA,MA5T8C,EA4TnC;AAAA;;AAChB,iBAAKkB,YAAL,GAAoB,IAApB;AACA,iBAAKiB,KAAL,GAAa,EAAb;AACA,iBAAKC,eAAL,GAAuB,EAAvB;AACA,iBAAKC,WAAL,GAAmB,KAAnB;AACA,iBAAKC,UAAL,GAAkB,KAAlB;AACA,iBAAKtB,kBAAL,CAAwBqG,IAAxB;AAEA,iBAAK1G,iBAAL,CACG2G,mBADH,CACuBtH,MADvB,EAEGK,IAFH,CAGI,gEAAS,YAAM;AACb,oBAAI,CAACa,YAAL,GAAoB,KAApB;AACA,oBAAI,CAACmB,WAAL,GAAmB,IAAnB;AACD,aAHD,CAHJ,EAQGa,SARH,CAQa;AACTO,kBAAI,EAAE,cAACC,QAAD,EAAmB;AACvB,oBAAIA,QAAQ,CAAC6D,cAAT,CAAwB,SAAxB,KAAsC7D,QAAQ,CAAC8D,OAAT,KAAqB,IAA/D,EAAqE;AACnE,wBAAI,CAACrF,KAAL,GAAauB,QAAQ,CAAC+D,IAAtB;AACA,wBAAI,CAACrF,eAAL,GAAuB,MAAI,CAACD,KAAL,CAAWuF,KAAX,CAAiB,CAAjB,EAAoB,MAAI,CAAC1F,YAAzB,CAAvB;AACA,wBAAI,CAACE,UAAL,GAAkB,MAAI,CAACC,KAAL,CAAW8C,MAA7B;AACA,wBAAI,CAAC5C,WAAL,GAAmB,IAAnB;AACD,iBALD,MAKO,IACLqB,QAAQ,CAAC6D,cAAT,CAAwB,SAAxB,KACA7D,QAAQ,CAAC8D,OAAT,KAAqB,KAFhB,EAGL;AACA,wBAAI,CAAClF,UAAL,GAAkB,IAAlB;AACD,iBALM,MAKA;AACL,wBAAI,CAAC1B,cAAL,CAAoBoD,KAApB;;AACA,wBAAI,CAAC1B,UAAL,GAAkB,IAAlB;AACD;AACF,eAhBQ;AAiBT0B,mBAAK,EAAE,eAACA,OAAD,EAAgB;AACrB,sBAAI,CAAC1B,UAAL,GAAkB,IAAlB;;AAEA,oBAAI0B,OAAK,CAACA,KAAN,CAAYuD,cAAZ,CAA2B,UAA3B,CAAJ,EAA4C;AAC1C,wBAAI,CAAC3G,cAAL,CAAoBoD,KAApB,CAA0BA,OAAK,CAACA,KAAN,CAAY2D,QAAtC;AACD,iBAFD,MAEO;AACL,wBAAI,CAAC/G,cAAL,CAAoBoD,KAApB;AACD;AACF;AAzBQ,aARb;AAmCD;AAvWoD;AAAA;AAAA,4CAyWnC4D,UAzWmC,EAyWb;AACtC,gBAAIC,WAAJ;;AAEA,gBAAID,UAAU,CAACpD,WAAX,KAA2B,CAA/B,EAAkC;AAChCqD,yBAAW,GAAG,gBAAd;AACD,aAFD,MAEO,IAAID,UAAU,CAACpD,WAAX,KAA2B,CAA/B,EAAkC;AACvCqD,yBAAW,GAAG,eAAd;AACD;;AAED,mBAAOA,WAAP;AACD;AAnXoD;AAAA;AAAA,wCAqXvCvE,KArXuC,EAqXhB;AACnC,gBAAMwE,SAAS,GAAG,CAACxE,KAAK,CAACyE,IAAN,GAAa,CAAd,IAAmBzE,KAAK,CAACtB,YAA3C;AACA,gBAAMgG,OAAO,GAAG1E,KAAK,CAACyE,IAAN,GAAazE,KAAK,CAACtB,YAAnC;AACA,iBAAKI,eAAL,GAAuB,KAAKD,KAAL,CAAWuF,KAAX,CAAiBI,SAAjB,EAA4BE,OAA5B,CAAvB;AAEA,iBAAKC,cAAL,CAAoBC,aAApB,CAAkCC,cAAlC,CAAiD;AAC/CC,sBAAQ,EAAE;AADqC,aAAjD;AAGD;AA7XoD;AAAA;AAAA,oCA+X3CR,UA/X2C,EA+XrB;AAAA;;AAC9B,iBAAK1G,YAAL,GAAoB,IAApB;AACA,iBAAKF,kBAAL,CAAwBhC,IAAxB;AACA,iBAAKqJ,gBAAL,gDAAqDT,UAAU,CAACtD,cAAX,CAA0BgE,WAA1B,EAArD;AACA,iBAAKvF,wBAAL;AACA,iBAAK6C,qBAAL,GAA6BgC,UAA7B;AACA,iBAAKrF,UAAL,GAAkB,EAAlB;AAEA,iBAAK5B,iBAAL,CACG4H,aADH,CACiBX,UAAU,CAAC/B,aAD5B,EAEGxF,IAFH,CAGI,gEAAS,YAAM;AACbmI,wBAAU,CAAC,YAAM;AACf,sBAAI,CAACtH,YAAL,GAAoB,KAApB;AACD,eAFS,EAEP,GAFO,CAAV;AAGD,aAJD,CAHJ,EASGgC,SATH,CASa;AACTO,kBAAI,EAAE,cAACC,QAAD,EAAmB;AACvB,oBAAIA,QAAQ,CAAC6D,cAAT,CAAwB,SAAxB,KAAsC7D,QAAQ,CAAC8D,OAAT,KAAqB,IAA/D,EAAqE;AACnE;AACA,wBAAI,CAACxG,kBAAL,CAAwByH,cAAxB,CAAuC,KAAvC;;AACA,wBAAI,CAAClG,UAAL,GAAkBmB,QAAQ,CAAC+D,IAA3B;AACD,iBAJD,MAIO,IACL/D,QAAQ,CAAC6D,cAAT,CAAwB,SAAxB,KACA7D,QAAQ,CAAC8D,OAAT,KAAqB,KAFhB,EAGL;AACA;AACA,wBAAI,CAACxG,kBAAL,CAAwByH,cAAxB,CAAuC,IAAvC;AACD,iBANM,MAMA;AACL;AACA,wBAAI,CAAC7H,cAAL,CAAoBoD,KAApB;;AACA,wBAAI,CAAChD,kBAAL,CAAwByH,cAAxB,CAAuC,IAAvC;AACD;AACF,eAjBQ;AAkBTzE,mBAAK,EAAE,eAACA,OAAD,EAAgB;AACrB;AACA,sBAAI,CAAChD,kBAAL,CAAwByH,cAAxB,CAAuC,IAAvC;;AAEA,oBAAIzE,OAAK,CAACA,KAAN,CAAYuD,cAAZ,CAA2B,UAA3B,CAAJ,EAA4C;AAC1C,wBAAI,CAAC3G,cAAL,CAAoBoD,KAApB,CAA0BA,OAAK,CAACA,KAAN,CAAY2D,QAAtC;AACD,iBAFD,MAEO;AACL,wBAAI,CAAC/G,cAAL,CAAoBoD,KAApB;AACD;AACF;AA3BQ,aATb;AAsCD;AA7aoD;AAAA;AAAA,iCA+a9C4D,UA/a8C,EA+axB;AAC3B,iBAAKpH,MAAL,CAAYwG,QAAZ,CAAqB,CAAC,WAAD,EAAcY,UAAU,CAAC/B,aAAzB,CAArB,EAA8D;AAC5DoB,wBAAU,EAAE,KAAK1G;AAD2C,aAA9D;AAGD;AAnboD;AAAA;AAAA,qCAqb1CmI,KArb0C,EAqb3Bd,UArb2B,EAqbL;AAAA;;AAC9C,iBAAKe,eAAL,GACGC,YADH,GAEGvI,IAFH,CAGI,4DAAK,CAAL,CAHJ,EAII,iEAAU,UAAAuD,MAAM;AAAA,qBACdA,MAAM,GAAG,MAAI,CAACiF,kBAAL,CAAwBH,KAAxB,EAA+Bd,UAA/B,CAAH,GAAgD,0CADxC;AAAA,aAAhB,CAJJ,EAOI,gEAAS,YAAM;AACb,oBAAI,CAAC1G,YAAL,GAAoB,KAApB;AACD,aAFD,CAPJ,EAWGgC,SAXH,CAYI,UAACsE,OAAD,EAAkB;AAChB,oBAAI,CAAC5G,cAAL,CAAoB4G,OAApB;;AACA,oBAAI,CAACsB,eAAL,CAAqBlB,UAArB;AACD,aAfL,EAgBI,UAAC5D,KAAD,EAAgB;AACd,oBAAI,CAACpD,cAAL,CAAoBoD,KAApB;;AACA,oBAAI,CAAC5B,eAAL,CAAqBsG,KAArB,EAA4BlE,WAA5B,GAA0C,CAA1C;AACD,aAnBL;AAqBD;AA3coD;AAAA;AAAA,4CA6ctC;AACb,mBAAO,KAAKzD,mBAAL,CAAyBgI,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AArdoD;AAAA;AAAA,6CAudlCL,KAvdkC,EAudnBd,UAvdmB,EAudG;AACtD,iBAAK1G,YAAL,GAAoB,IAApB;AACA,iBAAKkB,eAAL,CAAqBsG,KAArB,EAA4BlE,WAA5B,GAA0C,CAA1C;AAEA,mBAAO,KAAK7D,iBAAL,CAAuBkI,kBAAvB,CAA0CjB,UAAU,CAAC/B,aAArD,CAAP;AACD;AA5doD;AAAA;AAAA,uCA8dxC6C,KA9dwC,EA8dzBd,UA9dyB,EA8dH;AAAA;;AAChD,iBAAKoB,eAAL,GACGJ,YADH,GAEGvI,IAFH,CAGI,4DAAK,CAAL,CAHJ,EAII,iEAAU,UAAAuD,MAAM;AAAA,qBACdA,MAAM,GAAG,MAAI,CAACqF,oBAAL,CAA0BP,KAA1B,EAAiCd,UAAjC,CAAH,GAAkD,0CAD1C;AAAA,aAAhB,CAJJ,EAOI,gEAAS,YAAM;AACb,oBAAI,CAAC1G,YAAL,GAAoB,KAApB;AACD,aAFD,CAPJ,EAWGgC,SAXH,CAYI,UAACsE,OAAD,EAAkB;AAChB,oBAAI,CAAC5G,cAAL,CAAoB4G,OAApB;;AACA,oBAAI,CAACsB,eAAL,CAAqBlB,UAArB;AACD,aAfL,EAgBI,UAAC5D,KAAD,EAAgB;AACd,oBAAI,CAACpD,cAAL,CAAoBoD,KAApB;;AACA,oBAAI,CAAC5B,eAAL,CAAqBsG,KAArB,EAA4BlE,WAA5B,GAA0C,CAA1C;AACD,aAnBL;AAqBD;AApfoD;AAAA;AAAA,4CAsftC;AACb,mBAAO,KAAKzD,mBAAL,CAAyBgI,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AA9foD;AAAA;AAAA,+CAggBhCL,KAhgBgC,EAggBjBd,UAhgBiB,EAggBK;AACxD,iBAAK1G,YAAL,GAAoB,IAApB;AACA,iBAAKkB,eAAL,CAAqBsG,KAArB,EAA4BlE,WAA5B,GAA0C,CAA1C;AAEA,mBAAO,KAAK7D,iBAAL,CAAuBsI,oBAAvB,CACLrB,UAAU,CAAC/B,aADN,CAAP;AAGD;AAvgBoD;AAAA;AAAA,0CAygBrC+B,UAzgBqC,EAygBf;AACpC,iBAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK/G,KAAL,CAAW8C,MAA/B,EAAuCiE,CAAC,EAAxC,EAA4C;AAC1C,kBAAItB,UAAU,CAAC/B,aAAX,KAA6B,KAAK1D,KAAL,CAAW+G,CAAX,EAAcrD,aAA/C,EAA8D;AAC5D,qBAAK1D,KAAL,CAAW+G,CAAX,EAAc1E,WAAd,GAA4BoD,UAAU,CAACpD,WAAvC;AACA;AACD;AACF;AACF;AAhhBoD;;AAAA;AAAA,S;;;;gBAlC9C;;gBAAgB;;gBAChB;;gBAGP;;gBAWO;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;;;;;gBAeN,uD;AAAS,iBAAC,gBAAD,EAAmB,EAAnB;;;AAFClE,gDAA0C,6DALtD,gEAAU;AACT6I,gBAAQ,EAAE,sCADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAKsD,E,+EAoD3B,8D,EACR,sD,EACE,wD,EACG,0D,EACM,wF,EACH,4F,EACG,sG,EACL,wF,EACO,+G,EACD,6G,EACF,oE,EA9DyB,GAA1C9I,0CAA0C,CAA1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCtCb;AAIA;;;AAIA,UAAM+I,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE;AAA5B,OADqB,EAErB;AACED,YAAI,EAAE,MADR;AAEEC,iBAAS,EAAE,gHAFb;AAGEC,eAAO,EAAE;AACPC,kBAAQ,EAAE;AADH,SAHX;AAMEC,qBAAa,EAAE,CAAC,wFAAD;AANjB,OAFqB,EAUrB;AACEJ,YAAI,EAAE,YADR;AAEEC,iBAAS,EAAE,gHAFb;AAGEC,eAAO,EAAE;AACPC,kBAAQ,EAAE;AADH,SAHX;AAMEC,qBAAa,EAAE,CAAC,wFAAD;AANjB,OAVqB,EAkBrB;AACEJ,YAAI,EAAE,EADR;AAEEK,kBAAU,EAAE,OAFd;AAGEC,iBAAS,EAAE;AAHb,OAlBqB,CAAvB;;UA6BaC,+CAA+C;AAAA;AAAA,O;;AAA/CA,qDAA+C,6DAJ3D,+DAAS;AACRnK,eAAO,EAAE,CAAC,6DAAaoK,QAAb,CAAsBT,MAAtB,CAAD,CADD;AAERU,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI2D,GAA/CF,+CAA+C,CAA/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCpCb;;;UAMaG,mDAAmD;AAE9D,qEAAoBrJ,iBAApB,EAA4E;AAAA;;AAAxD,eAAAA,iBAAA,GAAAA,iBAAA;AAA2D;;AAFjB;AAAA;AAAA,kCAItDsJ,KAJsD,EAIzB;AACnC,gBAAIA,KAAK,CAACjK,MAAN,IAAgBiK,KAAK,CAACjK,MAAN,CAAasB,EAAjC,EAAqC;AACnC,qBAAO,KAAKX,iBAAL,CAAuBuJ,WAAvB,CAAmCD,KAAK,CAACjK,MAAN,CAAasB,EAAhD,CAAP;AACD,aAHkC,CAKnC;;;AACA,mBAAO,gDAAG;AACRkG,qBAAO,EAAE,IADD;AAERC,kBAAI,EAAE;AACJ5B,6BAAa,EAAE,IADX;AAEJvB,8BAAc,EAAE,IAFZ;AAGJC,0BAAU,EAAE,IAHR;AAIJR,2BAAW,EAAE,IAJT;AAKJS,2BAAW,EAAE,CALT;AAMJsB,wBAAQ,EAAE,IANN;AAOJC,0BAAU,EAAE,IAPR;AAQJC,2BAAW,EAAE,IART;AASJC,4BAAY,EAAE;AATV;AAFE,aAAH,CAAP;AAcD;AAxB6D;;AAAA;AAAA,S;;;;gBALvD;;;;AAKI+D,yDAAmD,6DAH/D,iEAAW;AACVzK,kBAAU,EAAE;AADF,OAAX,CAG+D,E,+EAEvB,wF,EAFuB,GAAnDyK,mDAAmD,CAAnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKAG,mBAAmB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAE5BZ,SAF4B,EAG5BU,KAH4B,EAI5BG,KAJ4B,EAIF;AAM1B,mBAAOb,SAAS,CAACc,iBAAV,EAAP;AACD;AAX6B;;AAAA;AAAA,S;;AAAnBF,yBAAmB,6DAH/B,iEAAW;AACV5K,kBAAU,EAAE;AADF,OAAX,CAG+B,GAAnB4K,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCDb;;;UAeaG,+CAA+C;AAc1D,iEACU/J,cADV,EAEUC,MAFV,EAGUC,QAHV,EAIUC,WAJV,EAKUC,iBALV,EAMUC,cANV,EAOUC,iBAPV,EAQUC,YARV,EASUG,gBATV,EAS4C;AAAA;;AARlC,eAAAV,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAG,gBAAA,GAAAA,gBAAA;AApBV,eAAAE,gBAAA,GAAmB,IAAnB;AAGA,eAAAC,cAAA,GAA6B,EAA7B;AAGA,eAAAmJ,WAAA,GAAc,KAAd;AAGA,eAAAzI,QAAA,GAAuB,EAAvB;AAaE,eAAKlB,cAAL,CAAoB4B,UAApB;AACD;;AA1ByD;AAAA;AAAA,qCA4BlD;AACN,iBAAKC,eAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,aAAL;AACA,iBAAK6H,cAAL;AACD;AAjCyD;AAAA;AAAA,4CAmC3C;AACb,iBAAK3J,iBAAL,CAAuB4B,eAAvB,GAAyCS,SAAzC;AACD;AArCyD;AAAA;AAAA,0CAuC7C;AAAA;;AACX,iBAAK3C,cAAL,CAAoBP,MAApB,CAA2BkD,SAA3B,CAAqC,UAAClD,MAAD,EAAiB;AACpD,kBAAIA,MAAM,CAACsB,EAAX,EAAe;AACb,sBAAI,CAACmJ,QAAL,GAAgB,mBAAhB;AACD,eAFD,MAEO;AACL,sBAAI,CAACA,QAAL,GAAgB,iBAAhB;AACD;;AAED,oBAAI,CAAC3J,YAAL,CAAkB+B,QAAlB,CAA2B,MAAI,CAAC4H,QAAhC;;AAEA,oBAAI,CAACrJ,cAAL,GAAsB,CACpB;AACE+B,yBAAS,EAAE,MADb;AAEEC,0BAAU,EAAE;AAFd,eADoB,EAKpB;AACED,yBAAS,EAAE,WADb;AAEEC,0BAAU,iCAA0BpD,MAAM,CAAC0K,WAAjC;AAFZ,eALoB,EASpB;AACEvH,yBAAS,EAAE,aADb;AAEEC,0BAAU,iCAA0BpD,MAAM,CAAC0K,WAAjC;AAFZ,eAToB,EAapB;AACEvH,yBAAS,EAAE,MAAI,CAACsH;AADlB,eAboB,CAAtB;AAiBD,aA1BD;AA2BD;AAnEyD;AAAA;AAAA,0CAqE7C;AAAA;;AACX,iBAAKxJ,gBAAL,CACGuC,WADH,CACe,IADf,EAEGnD,IAFH,CAGI,gEAAS,YAAM;AACb,qBAAI,CAACc,gBAAL,GAAwB,KAAxB;AACD,aAFD,CAHJ,EAOG+B,SAPH,CAOa;AACTO,kBAAI,EAAE,cAACC,QAAD,EAAmB;AACvB,oBAAIA,QAAQ,CAACC,YAAT,KAA0B,GAA9B,EAAmC;AACjC,yBAAI,CAAC7B,QAAL,GAAgB4B,QAAQ,CAACE,MAAzB;AACD,iBAFD,MAEO;AACL,yBAAI,CAAChD,cAAL,CAAoBoD,KAApB;;AACA,yBAAI,CAACvD,QAAL,CAAcwD,IAAd;AACD;AACF,eARQ;AASTD,mBAAK,EAAE,eAACA,OAAD,EAAgB;AACrB,uBAAI,CAACpD,cAAL,CAAoBoD,KAApB;;AACA,uBAAI,CAACvD,QAAL,CAAcwD,IAAd;AACD;AAZQ,aAPb;AAqBD;AA3FyD;AAAA;AAAA,2CA6F5C;AACZ,gBAAI,KAAK1D,cAAL,CAAoBoK,QAApB,CAA6BlD,IAA7B,CAAkCgC,QAAlC,CAA2CjC,OAA3C,KAAuD,IAA3D,EAAiE;AAC/D,kBAAMiC,QAAQ,GAAe,KAAKlJ,cAAL,CAAoBoK,QAApB,CAA6BlD,IAA7B,CAAkCgC,QAAlC,CAC1BhC,IADH;AAGA,mBAAKrD,IAAL,GAAY,KAAK1D,WAAL,CAAiB2D,KAAjB,CAAuB;AACjCwB,6BAAa,EAAE,CAAC4D,QAAQ,CAAC5D,aAAV,CADkB;AAEjCvB,8BAAc,EAAE,CAACmF,QAAQ,CAACnF,cAAV,EAA0B,CAAC,0DAAWK,QAAZ,CAA1B,CAFiB;AAGjCJ,0BAAU,EAAE,CAACkF,QAAQ,CAAClF,UAAV,EAAsB,CAAC,0DAAWI,QAAZ,CAAtB,CAHqB;AAIjCH,2BAAW,EAAE,CAACiF,QAAQ,CAACjF,WAAV,EAAuB,CAAC,0DAAWG,QAAZ,CAAvB;AAJoB,eAAvB,CAAZ;AAMD,aAVD,MAUO;AACL,mBAAK/D,cAAL,CAAoBoD,KAApB;AACA,mBAAKvD,QAAL,CAAcwD,IAAd;AACD;AACF;AA5GyD;AAAA;AAAA,uCA8G7CiC,KA9G6C,EA8GhC;AACxB,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AApHyD;AAAA;AAAA,yCAsH3CA,KAtH2C,EAsHjC;AACvBA,iBAAK,GAAG,KAAK9B,IAAL,CAAUhE,GAAV,CAAc8F,KAAd,CAAR;AAEA,mBAAOA,KAAK,CAACE,MAAN,IAAgB,SAAhB,IAA6BF,KAAK,CAACG,OAA1C;AACD;AA1HyD;AAAA;AAAA,0CA6HxDC,eA7HwD,EA8HxDC,oBA9HwD,EA8H3B;AAE7B,gBAAID,eAAe,CAACE,SAApB,EAA+B;AAC7B,kBAAMA,SAAS,GAAGF,eAAe,CAACE,SAAhB,CAA0B,EAA1B,CAAlB;;AACA,kBAAIA,SAAS,IAAIA,SAAS,CAAC7B,QAA3B,EAAqC;AACnC,uBAAO,aAAP;AACD;AACF;;AAED,gBAAI4B,oBAAJ,EAA0B;AACxB,mBAAK,IAAME,WAAX,IAA0BH,eAAe,CAAC,UAAD,CAAzC,EAAuD;AACrD,oBAAIA,eAAe,CAAC,UAAD,CAAf,CAA4BG,WAA5B,CAAJ,EAA8C;AAC5C,sBACE,KAAKC,eAAL,CAAqBJ,eAAe,CAAC,UAAD,CAAf,CAA4BG,WAA5B,CAArB,KACAA,WAAW,IAAIF,oBAFjB,EAGE;AACA,2BAAO,aAAP;AACD;AACF;AACF;AACF;;AAED,mBAAO,EAAP;AACD;AArJyD;AAAA;AAAA,qCAuJlD;AAAA;;AACN,gBAAI,KAAKnC,IAAL,CAAUwG,QAAd,EAAwB;AACtB,mBAAKnK,QAAL,CAAcwD,IAAd;AACD,aAFD,MAEO;AACL,kBAAI,KAAKG,IAAL,CAAUyC,KAAd,EAAqB;AACnB,qBAAK3F,YAAL,GAAoB,IAApB;AACA,qBAAK2J,cAAL,GAAsB,IAAtB;AAEA,qBAAKlK,iBAAL,CACGmK,IADH,CACQ,KAAK1G,IAAL,CAAUuB,KADlB,EAEGtF,IAFH,CAGI,gEAAS,YAAM;AACb,yBAAI,CAACa,YAAL,GAAoB,KAApB;AACA,yBAAI,CAAC2J,cAAL,GAAsB,KAAtB;AACD,iBAHD,CAHJ,EAQG3H,SARH,CAQa;AACTO,sBAAI,EAAE,cAACC,QAAD,EAAmB;AACvB,wBACEA,QAAQ,CAAC6D,cAAT,CAAwB,UAAxB,KACA7D,QAAQ,CAAC6D,cAAT,CAAwB,SAAxB,CADA,IAEA7D,QAAQ,CAAC8D,OAAT,KAAqB,IAHvB,EAIE;AACA,6BAAI,CAACpD,IAAL,CAAU2G,KAAV;;AACA,6BAAI,CAACR,WAAL,GAAmB,KAAnB;;AACA,6BAAI,CAAC3J,cAAL,CAAoB4G,OAApB,CAA4B9D,QAAQ,CAACiE,QAArC;;AAEA,6BAAI,CAACpH,cAAL,CAAoBP,MAApB,CAA2BkD,SAA3B,CAAqC,UAAClD,MAAD,EAAiB;AACpD,4BAAIA,MAAM,CAACuH,cAAP,CAAsB,IAAtB,CAAJ,EAAiC;AAC/B,iCAAI,CAAC9G,QAAL,CAAcwD,IAAd;AACD,yBAFD,MAEO;AACL,iCAAI,CAACzD,MAAL,CAAYwG,QAAZ,CAAqB,CAAC,UAAD,CAArB,EAAmC;AACjCC,sCAAU,EAAE,OAAI,CAAC1G;AADgB,2BAAnC;AAGD;AACF,uBARD;AASD,qBAlBD,MAkBO,IACLmD,QAAQ,CAAC6D,cAAT,CAAwB,UAAxB,KACA7D,QAAQ,CAAC6D,cAAT,CAAwB,SAAxB,CADA,IAEA7D,QAAQ,CAAC8D,OAAT,KAAqB,KAHhB,EAIL;AACA,6BAAI,CAAC5G,cAAL,CAAoBoK,MAApB,CAA2BtH,QAAQ,CAACiE,QAApC;AACD,qBANM,MAMA;AACL,6BAAI,CAAC/G,cAAL,CAAoBoD,KAApB;AACD;AACF,mBA7BQ;AA8BTA,uBAAK,EAAE,eAACA,OAAD,EAAgB;AACrB,2BAAI,CAACpD,cAAL,CAAoBoD,KAApB;AACD;AAhCQ,iBARb;AA0CD;AACF;AACF;AA3MyD;AAAA;AAAA,qCA6MlD;AACN,iBAAKvD,QAAL,CAAcwD,IAAd;AACD;AA/MyD;AAAA;AAAA,oCAiNnD;AACL,iBAAKsG,WAAL,GAAmB,IAAnB;AACD;AAnNyD;AAAA;AAAA,8CAqNzC;AACf,gBAAI,KAAKA,WAAT,EAAsB;AACpB,kBAAIU,OAAO,CAAC,4CAAD,CAAX,EAA2D;AACzD,uBAAO,IAAP;AACD,eAFD,MAEO;AACL,uBAAO,KAAP;AACD;AACF;;AACD,mBAAO,IAAP;AACD;AA9NyD;;AAAA;AAAA,S;;;;gBA5BnD;;gBAAgB;;gBAChB;;gBAGP;;gBAUO;;gBACA;;gBACA;;gBACA;;gBACA;;;;AAUIX,qDAA+C,6DAL3D,gEAAU;AACTnB,gBAAQ,EAAE,2CADD;AAETC,gBAAQ,EAAR,6EAFS;;AAAA,OAAV,CAK2D,E,+EAehC,8D,EACR,sD,EACE,wD,EACG,0D,EACM,wF,EACH,2F,EACG,sG,EACL,wF,EACI,oE,EAvB8B,GAA/CkB,+CAA+C,CAA/C","file":"escritorios-escritorios-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Escritórios\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"nomeEscritorio\\\">Nome do escritório</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"nomeEscritorio\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codEmpresa\\\">Empresa</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"empresas\\\"\\n                formControlName=\\\"codEmpresa\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                bindLabel=\\\"nomeEmpresa\\\"\\n                bindValue=\\\"idEmpresa\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"0\\\">Todos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n                <option value=\\\"2\\\">Inativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-4 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Escritório</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Empresa</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let escritorio of dadosPagination; let i = index\\\" [class.table-active]=\\\"escritorio.codEscritorio == escritorioSelecionado.codEscritorio && showDetailPanel\\\">\\n            <td\\n              class=\\\"hover\\\"\\n              [ngClass]=\\\"classStatusBorder(escritorio)\\\"\\n              (click)=\\\"onDetails(escritorio)\\\">\\n              {{ escritorio.nomeEscritorio | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(escritorio)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              {{ escritorio.nomeEmpresa | uppercase }}\\n            </td>\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"escritorio.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, escritorio)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"escritorio.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, escritorio)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(escritorio)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"dadosEmpty\\\">\\n      </empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-8\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\n        <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n              <th scope=\\\"col\\\">Usuário</th>\\n              <th scope=\\\"col\\\">Alteração</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\n              <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\n              <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\n              <td>{{ alteracao.mensagem | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"nomeEscritorio\\\">Nome do escritório</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeEscritorio\\\"\\n              formControlName=\\\"nomeEscritorio\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('nomeEscritorio') + ' ' + onFieldRequired(form.controls.nomeEscritorio)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeEscritorio')\\\" message=\\\"Nome do escritório é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codEmpresa\\\">Empresa</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"empresas\\\"\\n              formControlName=\\\"codEmpresa\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              bindLabel=\\\"nomeEmpresa\\\"\\n              bindValue=\\\"idEmpresa\\\"\\n              [ngClass]=\\\"onFieldError('codEmpresa') + ' ' + onFieldRequired(form.controls.codEmpresa)\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codEmpresa')\\\" message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codSituacao\\\">Situação</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"codSituacao\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n              <option value=\\\"1\\\">Ativo</option>\\n              <option value=\\\"2\\\">Inativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosEscritorioModuleRoutingModule } from './escritorios-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosEscritorioListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosEscritorioFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosEscritorioListaComponent,\n    ComercialCadastrosEscritorioFormularioComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialCadastrosEscritorioModuleRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialCadastrosEscritorioModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9lc2NyaXRvcmlvcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9lc2NyaXRvcmlvcy9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosEscritorioService } from '../escritorios.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\nimport { ComercialService } from '../../../comercial.service';\n\n// Interfaces\nimport { Escritorio } from '../models/escritorio';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-escritorio-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class ComercialCadastrosEscritorioListaComponent\n  implements OnInit, OnDestroy {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green'\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red'\n    }\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  detailPanelTitle: string;\n\n  form: FormGroup;\n  orderBy = 'nomeEscritorio';\n  orderType = 'ASC';\n\n  empresas: Array<any> = [];\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<Escritorio> = [];\n  dadosPagination: Array<Escritorio> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  escritorioSelecionado: Escritorio;\n  alteracoes: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private escritorioService: ComercialCadastrosEscritorioService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService,\n    private comercialService: ComercialService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFormFields();\n    this.setFormFilter();\n    this.titleService.setTitle('Escritórios');\n    this.onDetailPanelEmitter();\n    this.setEscritorioSelecionado();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`\n        },\n        {\n          descricao: 'Escritórios'\n        }\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  getFormFields(): void {\n    this.comercialService\n      .getEmpresas(null)\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.responseCode === 200) {\n            this.empresas = response.result;\n\n            this.empresas.unshift({\n              idEmpresa: 0,\n              nomeEmpresa: 'EXIBIR TODOS'\n            });\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      nomeEscritorio: [formValue.nomeEscritorio],\n      codEmpresa: [formValue.codEmpresa],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required]\n    });\n\n    this.checkOrder();\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      nomeEscritorio: null,\n      codEmpresa: 0,\n      codSituacao: 0,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach(formKey => {\n            Object.keys(params).forEach(paramKey => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setEscritorioSelecionado(): void {\n    this.escritorioSelecionado = {\n      codEscritorio: -1,\n      nomeEscritorio: null,\n      codEmpresa: null,\n      nomeEmpresa: null,\n      codSituacao: null,\n      situacao: null,\n      codUsuario: null,\n      nomeUsuario: null,\n      dataCadastro: null\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) }\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.nomeEscritorio) {\n      params.nomeEscritorio = this.form.value.nomeEscritorio;\n    }\n\n    if (this.form.value.codEmpresa) {\n      params.codEmpresa = this.form.value.codEmpresa;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    this.escritorioService\n      .getListaEscritorios(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(escritorio: Escritorio): string {\n    let borderClass: string;\n\n    if (escritorio.codSituacao === 1) {\n      borderClass = 'border-success';\n    } else if (escritorio.codSituacao === 2) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant'\n    });\n  }\n\n  onDetails(escritorio: Escritorio): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.detailPanelTitle = `HISTÓRICO DE ALTERAÇÕES / ${escritorio.nomeEscritorio.toUpperCase()}`;\n    this.setEscritorioSelecionado();\n    this.escritorioSelecionado = escritorio;\n    this.alteracoes = [];\n\n    this.escritorioService\n      .getAlteracoes(escritorio.codEscritorio)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.alteracoes = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        error: (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onEdit(escritorio: Escritorio): void {\n    this.router.navigate(['../editar', escritorio.codEscritorio], {\n      relativeTo: this.activatedRoute\n    });\n  }\n\n  onActivate(index: number, escritorio: Escritorio): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap(result =>\n          result ? this.activateEscritorio(index, escritorio) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(escritorio);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateEscritorio(index: number, escritorio: Escritorio): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.escritorioService.activateEscritorio(escritorio.codEscritorio);\n  }\n\n  onInactivate(index: number, escritorio: Escritorio): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap(result =>\n          result ? this.inactivateEscritorio(index, escritorio) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(escritorio);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateEscritorio(index: number, escritorio: Escritorio): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 2;\n\n    return this.escritorioService.inactivateEscritorio(\n      escritorio.codEscritorio\n    );\n  }\n\n  refreshMainData(escritorio: Escritorio): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (escritorio.codEscritorio === this.dados[i].codEscritorio) {\n        this.dados[i].codSituacao = escritorio.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosEscritorioFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosEscritorioListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosEscritorioFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialCadastrosEscritorioListaComponent },\n  {\n    path: 'novo',\n    component: ComercialCadastrosEscritorioFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosEscritorioFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosEscritorioFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosEscritorioFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialCadastrosEscritorioModuleRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosEscritorioService } from '../escritorios.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosEscritorioFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(private escritorioService: ComercialCadastrosEscritorioService) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.escritorioService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codEscritorio: null,\n        nomeEscritorio: null,\n        codEmpresa: null,\n        nomeEmpresa: null,\n        codSituacao: 1,\n        situacao: null,\n        codUsuario: null,\n        nomeUsuario: null,\n        dataCadastro: null\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosEscritorioService } from '../escritorios.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialService } from '../../../comercial.service';\n\n// Interfaces\nimport { Escritorio } from '../models/escritorio';\n\n@Component({\n  selector: 'comercial-cadastros-escritorio-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class ComercialCadastrosEscritorioFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar: boolean;\n  loaderFullScreen = true;\n\n  appTitle: string;\n  breadCrumbTree: Array<any> = [];\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n\n  empresas: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private escritorioService: ComercialCadastrosEscritorioService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private comercialService: ComercialService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFormFields();\n    this.setFormBuilder();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar escritório';\n      } else {\n        this.appTitle = 'Novo escritório';\n      }\n\n      this.titleService.setTitle(this.appTitle);\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`\n        },\n        {\n          descricao: 'Escritórios',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/escritorios/lista`\n        },\n        {\n          descricao: this.appTitle\n        }\n      ];\n    });\n  }\n\n  getFormFields(): void {\n    this.comercialService\n      .getEmpresas(null)\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.responseCode === 200) {\n            this.empresas = response.result;\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes: Escritorio = this.activatedRoute.snapshot.data.detalhes\n        .data;\n\n      this.form = this.formBuilder.group({\n        codEscritorio: [detalhes.codEscritorio],\n        nomeEscritorio: [detalhes.nomeEscritorio, [Validators.required]],\n        codEmpresa: [detalhes.codEmpresa, [Validators.required]],\n        codSituacao: [detalhes.codSituacao, [Validators.required]]\n      });\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n\n        this.escritorioService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe({\n            next: (response: any) => {\n              if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                this.form.reset();\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  if (params.hasOwnProperty('id')) {\n                    this.location.back();\n                  } else {\n                    this.router.navigate(['../lista'], {\n                      relativeTo: this.activatedRoute\n                    });\n                  }\n                });\n              } else if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === false\n              ) {\n                this.pnotifyService.notice(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              this.pnotifyService.error();\n            }\n          });\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n"]}