{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/tipo-operadores/tipo-operadores.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/movimentacoes/services/movimentacoes.service.ts","webpack:///src/app/modules/comercial/cadastros/equipe-venda/equipe-venda.service.ts","webpack:///src/app/modules/comercial/clientes/cadastro/enderecos/formulario/formulario.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/grupos.service.ts","webpack:///node_modules/ngx-filter-pipe/esm2015/ngx-filter-pipe.js","webpack:///src/app/modules/admin/perfis/services/perfis.service.ts","webpack:///src/app/core/not-found/not-found.component.ts","webpack:///src/app/core/not-found/not-found.component.html","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/services/restricoes.service.ts","webpack:///src/app/modules/comercial/agenda/agenda.service.ts","webpack:///src/app/shared/services/ws/cep.service.ts","webpack:///src/app/modules/logistica/entrada-materiais/notas-fiscais/services/notas-fiscais.service.ts","webpack:///src/app/modules/logistica/services/steellog.service.ts","webpack:///src/app/modules/comercial/ciclo-vendas/pedidos-producao-telas/formulario/formulario.service.ts","webpack:///src/app/shared/services/core/xlsx.service.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/modelo/services/modelo.service.ts","webpack:///src/app/modules/logistica/cadastros/regioes-entrega/services/regioes-entrega.service.ts","webpack:///src/app/shared/services/core/icons-fonts-awesome.service.ts","webpack:///src/app/modules/sul-fluminense/estoque-avancado/services/generic.service.ts","webpack:///src/app/modules/comercial/cadastros/escritorios/escritorios.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/combos/combos.service.ts","webpack:///src/app/shared/services/requests/estados.service.ts","webpack:///src/app/modules/logistica/entrega/services/fusion.service.ts","webpack:///src/app/shared/services/requests/generic.service.ts","webpack:///src/app/modules/logistica/yms/checklist/services/checklist.service.ts","webpack:///src/app/modules/logistica/cadastros/prazo-entrega/services/prazo-entrega.service.ts","webpack:///src/app/shared/services/requests/submodulos.service.ts","webpack:///src/app/shared/services/requests/escritorios.service.ts","webpack:///src/app/modules/logistica/cadastros/filiais/services/filiais.service.ts","webpack:///src/app/modules/logistica/entrega/desmembramento/services/desmembramento.service.ts","webpack:///src/app/modules/comercial/cadastros/representantes/representantes.service.ts","webpack:///src/app/modules/logistica/yms/etapas/services/etapas.service.ts","webpack:///node_modules/@amcharts/amcharts4/themes/animated.js","webpack:///src/app/modules/tecnologia-informacao/estoque/produtos/services/produtos.service.ts","webpack:///node_modules/@amcharts/amcharts4/lang/pt_BR.js","webpack:///node_modules/@amcharts/amcharts4/themes/material.js","webpack:///src/app/modules/tecnologia-informacao/contratos/contrato/services/contrato.service.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-contrato/services/tipo-contrato.service.ts","webpack:///src/app/modules/comercial/comissoes/representantes/gestao-comissionamentos/gestao-comissionamentos.service.ts","webpack:///node_modules/file-saver/src/FileSaver.js","webpack:///src/app/core/not-found/not-found.component.scss","webpack:///src/app/modules/comercial/gestao/associacoes/coordenadores-escritorios/coordenadores-escritorios.service.ts","webpack:///node_modules/ngx-order-pipe/fesm2015/ngx-order-pipe.js","webpack:///src/app/modules/tecnologia-informacao/estoque/marcas/services/marcas.service.ts","webpack:///src/app/modules/admin/submodulos/services/submodulos.service.ts","webpack:///src/app/modules/logistica/dashboards/conferencia-cte/conferencia-cte.service.ts","webpack:///src/app/modules/logistica/yms/tipos-circuito/services/tipos-circuito.service.ts","webpack:///src/app/modules/logistica/dashboards/analise-frete/services/analise-frete.service.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/motivo-associacao.service.ts","webpack:///src/app/modules/servicos/contatos/services/contato.service.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-item/services/tipo-item.service.ts","webpack:///src/app/modules/comercial/gestao/contratos-comerciais/contratos-comerciais.service.ts","webpack:///src/app/core/not-found/not-found.module.ts","webpack:///node_modules/@amcharts/amcharts4/.internal/themes/animated.js","webpack:///node_modules/@amcharts/amcharts4/.internal/themes/material.js","webpack:///src/app/modules/logistica/yms/tipos-setor/services/tipos-setor.service.ts","webpack:///src/app/modules/comercial/cadastros/tipos-comissionamento/tipo-comissionamento.service.ts","webpack:///src/app/modules/logistica/yms/tipos-etapa/services/tipos-etapa.service.ts","webpack:///src/app/modules/logistica/yms/setores/services/setores.service.ts","webpack:///src/app/modules/logistica/cadastros/tipo-motorista/services/tipo-motorista.service.ts","webpack:///src/app/modules/comercial/akna/mensagens/mensagens.service.ts","webpack:///src/app/modules/logistica/yms/circuitos/services/circuitos.service.ts"],"names":["ComercialCadastrosTipoOperadorService","http","API","params","httpParams","param","append","get","pipe","codTipoOperador","tipoOperador","post","put","updateTipoOperador","saveTipoOperador","providedIn","TecnologiaInformacaoEstoqueMovimentacoesService","observe","item","ComercialCadastrosEquipeVendaService","codEquipeVenda","equipeVenda","updateEquipeVenda","saveEquipeVenda","codigo","ComercialClientesCadastroEnderecosFormularioService","clientesService","codCliente","regioesAtuacaoComercial","getRegioesAtuacaoComercial","regioesEntrega","getRegioesEntrega","tiposMaterial","getTiposMaterial","tiposDescarga","getTiposDescarga","modosDescarga","getModosDescarga","validacoes","getEnderecos","tiposVeiculos","getTiposVeiculos","dadosEspeciais","getDadosEspeciais","data","codIBGE","bairro","codEndereco","codAnexo","ComercialCadastrosMateriaisGrupoService","comercialService","tidSoftwareService","codGrupo","record","updateGrupo","saveGrupo","linhas","getLinhas","classes","getClasses","FilterPipe","filter","toLowerCase","value","indexOf","Boolean","key","filterByOr","$or","getValue","isFoundOnWalking","isMatching","val","filterByBoolean","filterByString","filterByObject","filterDefault","length","arrayComparison","i","otherComparison","comparison","Array","isArray","undefined","array","isNumber","walker","found","hasOwnProperty","Object","getOwnPropertyDescriptor","getPrototypeOf","isNaN","parseInt","isFinite","decorators","type","args","name","pure","ctorParameters","FilterPipeModule","declarations","providers","exports","AdminPerfisService","event","perfil","NotFoundComponent","selector","template","LogisticaEntergaRestricoesService","uuid","ComercialAgendaService","id_agenda","id","console","log","action","updateCompromisso","finalizarCompromisso","rescheduleCompromisso","saveCompromisso","CepService","cep","replace","validaCep","test","LogisticaEntradaMateriaisNotasFiscaisService","notas","LogisticaSteellogService","ComercialCicloVendasPedidosProducaoTelasFormularioService","vendedoresService","situacoesService","notifySubmit","notifySubmitObservable$","asObservable","materiaisSubject","limparCarrinhoSubject","calculoSubject","dataSubject","descontoSubject","next","situacoes","getListaSituacaoProposta","empresas","getEmpresas","tipo","depositos","getDepositos","grupoManetoni","carteiraClientes","carteiraClientesSubject","carteiraClientesLoaded","_carteiraClientes","getCarteiraClientes","termoPesquisa","razaoSocial","nrPedido","XlsxService","wopts","bookType","fileLoaded","varExport","headers","keys","push","forEach","element","values","ws","aoa_to_sheet","wb","book_new","book_append_sheet","getFileName","filename","evt","target","files","Error","reader","FileReader","onload","e","bstr","result","wsname","SheetNames","Sheets","emit","sheet_to_json","header","readAsBinaryString","d","Date","timestamp","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","TecnologiaInformacaoCadastroModeloService","modelo","LogisticaRegioesEntregaService","IconesFontAwesomeService","icone","qtItensPorPagina","SulFluminenseEstoqueAvancadoGenericService","BASE_URL","ComercialCadastrosEscritorioService","codEscritorio","escritorio","updateEscritorio","saveEscritorio","ComercialCadastrosMateriaisComboService","codMaterial","updateCombo","saveCombo","codCombo","codAssociacao","EstadosService","estados","sigla","descricao","LogisticaEntregaFusionService","nome","cnpj","GenericService","idEmpresa","linha","materiais","getMateriais","LogisticaYmsChecklistService","checklist","LogisticaPrazoEntregaService","SubModulosService","idSubModulo","EscritoriosService","LogisticaFiliaisService","filiais","associacao","LogisticaEntregaDesmembramentoService","ComercialCadastrosRepresentantesService","updateERP","saveERP","codRepresentante","codERP","LogisticaYmsEtapasService","etapas","TecnologiaInformacaoEstoqueProdutosService","day","TecnologiaInformacaoCadastroContratoService","contrato","ID_TECN_INFO_CONT","TecnologiaInformacaoCadastroTipoContratoService","tipoContrato","ComercialComissoesGestaoComissionamentosService","codComissaoRepresentante","codGestao","idAnoMes","codComissao","_global","window","self","global","bom","blob","opts","autoBom","warn","Blob","String","fromCharCode","download","url","xhr","XMLHttpRequest","open","responseType","saveAs","response","onerror","error","send","corsEnabled","status","click","node","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","isMacOSWebView","navigator","userAgent","HTMLAnchorElement","prototype","URL","webkitURL","a","createElement","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","popup","title","body","innerText","force","isSafari","HTMLElement","safari","isChromeIOS","onloadend","readAsDataURL","module","ComercialGestaoAssociacoesCoordenadoresEscritoriosService","OrderPipe","expression","reverse","isCaseInsensitive","comparator","multiExpressionTransform","slice","sortArray","transformObject","assign","isDeepLink","parseExpression","compareFn","caseInsensitiveSort","defaultCompare","sortedArray","sort","b","parsedExpression","lastPredicate","pop","oldValue","setValue","transform","expressions","reduce","isString","localeCompare","getTime","split","object","n","k","OrderModule","TecnologiaInformacaoEstoqueMarcasService","marca","AdminSubModulosService","submodulo","subModulo","LogisticaDashboardConferenciaCteService","LogisticaYmsTiposCircuitoService","LogisticaDashboardsAnaliseFreteService","ComercialCadastrosMotivoAssociacaoService","codMotivoAssociacao","motivoAssociacao","updateMotivoAssociacao","saveMotivoAssociacao","ContatoService","TecnologiaInformacaoCadastroTipoItemService","tipoItem","ComercialGestaoContratosComerciaisService","codContrato","updateContrato","saveContrato","NotFoundModule","imports","theme","transitionDuration","rangeChangeDuration","interpolationDuration","sequencedInterpolation","defaultState","hiddenState","animationDuration","properties","opacity","showOnInit","list","minLightness","maxLightness","reuse","background","cornerRadiusTopLeft","cornerRadiusTopRight","cornerRadiusBottomLeft","cornerRadiusBottomRight","LogisticaYmsTiposSetorService","ComercialCadastrosTipoComissionamentoService","codTipoComissionamento","updateTipoComissionamento","saveTipoComissionamento","LogisticaYmsTiposEtapaService","LogisticaYmsSetoresService","setores","LogisticaTipoMotoristaService","ComercialAknaMensagensService","mensagens","LogisticaYmsCircuitosService","circuitos"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { TipoOperador } from './models/tipo-operador';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosTipoOperadorService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/tipo-operador`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaTipoOperador(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codTipoOperador: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codTipoOperador}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codTipoOperador: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codTipoOperador}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveTipoOperador(tipoOperador: TipoOperador) {\r\n    return this.http.post(`${this.API}/salvar`, tipoOperador).pipe(take(1));\r\n  }\r\n\r\n  private updateTipoOperador(tipoOperador: TipoOperador) {\r\n    return this.http.put(`${this.API}/atualizar`, tipoOperador).pipe(take(1));\r\n  }\r\n\r\n  save(tipoOperador: TipoOperador): Observable<any> {\r\n    if (tipoOperador.codTipoOperador !== null) {\r\n      return this.updateTipoOperador(tipoOperador);\r\n    }\r\n\r\n    return this.saveTipoOperador(tipoOperador);\r\n  }\r\n\r\n  activateTipoOperador(codTipoOperador: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codTipoOperador).pipe(take(1));\r\n  }\r\n\r\n  inactivateTipoOperador(codTipoOperador: number): Observable<any> {\r\n    return this.http\r\n      .post(`${this.API}/inativar`, codTipoOperador)\r\n      .pipe(take(1));\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ITecnologiaInformacaoMovimentacoes } from '../models/movimentacoes';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TecnologiaInformacaoEstoqueMovimentacoesService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //-----------------------------------MOVIMENTACÃO--------------------------\\\\\r\n\r\n  getMovimentacoes(params?) {\r\n    return this.http.get(\r\n      `${this.API}/tecnologia-informacao/estoque/movimentacoes`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postMovimentacoes(item: ITecnologiaInformacaoMovimentacoes) {\r\n    return this.http.post(\r\n      `${this.API}/tecnologia-informacao/estoque/movimentacoes`,\r\n      item,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { EquipeVenda } from './models/equipe-venda';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosEquipeVendaService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/equipe-venda`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaEquipesVenda(params?: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codEquipeVenda: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codEquipeVenda}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codEquipeVenda: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codEquipeVenda}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveEquipeVenda(equipeVenda: EquipeVenda) {\r\n    return this.http.post(`${this.API}/salvar`, equipeVenda).pipe(take(1));\r\n  }\r\n\r\n  private updateEquipeVenda(equipeVenda: EquipeVenda) {\r\n    return this.http.put(`${this.API}/atualizar`, equipeVenda).pipe(take(1));\r\n  }\r\n\r\n  save(equipeVenda: EquipeVenda): Observable<any> {\r\n    if (equipeVenda.codEquipeVenda !== null) {\r\n      return this.updateEquipeVenda(equipeVenda);\r\n    }\r\n\r\n    return this.saveEquipeVenda(equipeVenda);\r\n  }\r\n\r\n  activateEquipeVenda(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  inactivateEquipeVenda(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  getListaEquipesERP(): Observable<any> {\r\n    return this.http.get(`${this.API}/erp/lista`).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { take } from 'rxjs/operators';\r\nimport { forkJoin, Observable } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialClientesCadastroEnderecosFormularioService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/clientes/cadastro/formulario/enderecos`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private clientesService: ComercialClientesService\r\n  ) {}\r\n\r\n  loadDepencies(codCliente: any) {\r\n    let regioesAtuacaoComercial = this.getRegioesAtuacaoComercial();\r\n    let regioesEntrega = this.getRegioesEntrega();\r\n    let tiposMaterial = this.getTiposMaterial();\r\n    let tiposDescarga = this.getTiposDescarga();\r\n    let modosDescarga = this.getModosDescarga();\r\n    let validacoes = this.clientesService.getEnderecos(codCliente);\r\n    let tiposVeiculos = this.getTiposVeiculos();\r\n    let dadosEspeciais = this.getDadosEspeciais();\r\n\r\n    return forkJoin([\r\n      regioesAtuacaoComercial,\r\n      regioesEntrega,\r\n      tiposMaterial,\r\n      tiposDescarga,\r\n      modosDescarga,\r\n      validacoes,\r\n      tiposVeiculos,\r\n      dadosEspeciais,\r\n    ]).pipe(take(1));\r\n  }\r\n\r\n  getRegioesAtuacaoComercial() {\r\n    return this.http.get(`${this.API}/regioes-atuacao-comercial`).pipe(take(1));\r\n  }\r\n\r\n  getRegioesEntrega() {\r\n    return this.http.get(`${this.API}/regioes-entrega`).pipe(take(1));\r\n  }\r\n\r\n  getIbgeCidades(data: any) {\r\n    return this.http.post(`${this.API}/ibge`, data).pipe(take(1));\r\n  }\r\n\r\n  getRegiaoEntrega(codIBGE: any) {\r\n    return this.http.get(`${this.API}/regiao-entrega/${codIBGE}`).pipe(take(1));\r\n  }\r\n\r\n  getRegiaoEntregaPorBairro(bairro: string) {\r\n    return this.http.get(`${this.API}/regiao-entrega-por-bairro/${bairro}`).pipe(take(1));\r\n  }\r\n\r\n  getTiposMaterial() {\r\n    return this.http.get(`${this.API}/tipos-material`).pipe(take(1));\r\n  }\r\n\r\n  getTiposDescarga() {\r\n    return this.http.get(`${this.API}/tipos-descarga`).pipe(take(1));\r\n  }\r\n\r\n  getModosDescarga() {\r\n    return this.http.get(`${this.API}/modos-descarga`).pipe(take(1));\r\n  }\r\n\r\n  getTiposVeiculos() {\r\n    return this.http.get(`${this.API}/tipos-veiculos`).pipe(take(1));\r\n  }\r\n\r\n  getDadosEspeciais() {\r\n    return this.http.get(`${this.API}/dados-especiais`).pipe(take(1));\r\n  }\r\n\r\n  getAnexos(codEndereco: number): Observable<Object | JsonResponse> {\r\n    return this.http.get(`${this.API}/anexos/${codEndereco}`).pipe(take(1));\r\n  }\r\n\r\n  getCliente(codCliente){\r\n    return this.http.get(`http://23.254.204.187/comercial/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  postAnexos(\r\n    params,\r\n    codEndereco: number,\r\n    codCliente: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http.post(\r\n      `${this.API}/anexos/salvar?codEndereco=${codEndereco}&codCliente=${codCliente}`,\r\n      params\r\n    );\r\n  }\r\n\r\n  deleteAnexo(codAnexo: number): Observable<Object | JsonResponse> {\r\n    let params = {\r\n      codAnexo: codAnexo,\r\n    };\r\n\r\n    return this.http.put(`${this.API}/anexos/excluir`, params).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../../../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\r\n\r\n// Interfaces\r\nimport { IGrupo } from './models/grupo';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisGrupoService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/materiais/grupos`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) {}\r\n\r\n  getListaGrupos(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAssociacoesMateriais(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/associacoes/${codGrupo}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhes(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codGrupo}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  private saveGrupo(record: IGrupo): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1), retry(2));\r\n  }\r\n\r\n  private updateGrupo(record: IGrupo): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  save(record: IGrupo): Observable<Object | JsonResponse> {\r\n    if (record.codGrupo !== null) {\r\n      return this.updateGrupo(record);\r\n    }\r\n\r\n    return this.saveGrupo(record);\r\n  }\r\n\r\n  activateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/ativar`, codGrupo)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  inactivateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/inativar`, codGrupo)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getFilterValues(): Observable<Object | JsonResponse> {\r\n    const linhas = this.tidSoftwareService.getLinhas();\r\n    const classes = this.comercialService.getClasses(null);\r\n\r\n    return forkJoin([linhas, classes]);\r\n  }\r\n}\r\n","import { Pipe, Injectable, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass FilterPipe {\n    /**\n     * @param {?} value\n     * @param {?} key\n     * @return {?}\n     */\n    static isFoundOnWalking(value, key) {\n        let /** @type {?} */ walker = value;\n        let /** @type {?} */ found = false;\n        do {\n            if (walker.hasOwnProperty(key) || Object.getOwnPropertyDescriptor(walker, key)) {\n                found = true;\n                break;\n            }\n        } while (walker = Object.getPrototypeOf(walker));\n        return found;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    static isNumber(value) {\n        return !isNaN(parseInt(value, 10)) && isFinite(value);\n    }\n    /**\n     * Checks function's value if type is function otherwise same value\n     * @param {?} value\n     * @return {?}\n     */\n    static getValue(value) {\n        return typeof value === 'function' ? value() : value;\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByString(filter) {\n        if (filter) {\n            filter = filter.toLowerCase();\n        }\n        return value => !filter || (value ? ('' + value).toLowerCase().indexOf(filter) !== -1 : false);\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByBoolean(filter) {\n        return value => Boolean(value) === filter;\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByObject(filter) {\n        return value => {\n            for (const /** @type {?} */ key in filter) {\n                if (key === '$or') {\n                    if (!this.filterByOr(filter.$or)(FilterPipe.getValue(value))) {\n                        return false;\n                    }\n                    continue;\n                }\n                if (!value || !FilterPipe.isFoundOnWalking(value, key)) {\n                    return false;\n                }\n                if (!this.isMatching(filter[key], FilterPipe.getValue(value[key]))) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    }\n    /**\n     * @param {?} filter\n     * @param {?} val\n     * @return {?}\n     */\n    isMatching(filter, val) {\n        switch (typeof filter) {\n            case 'boolean':\n                return this.filterByBoolean(filter)(val);\n            case 'string':\n                return this.filterByString(filter)(val);\n            case 'object':\n                return this.filterByObject(filter)(val);\n        }\n        return this.filterDefault(filter)(val);\n    }\n    /**\n     * Filter value by $or\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByOr(filter) {\n        return (value) => {\n            const /** @type {?} */ length = filter.length;\n            const /** @type {?} */ arrayComparison = (i) => value.indexOf(filter[i]) !== -1;\n            const /** @type {?} */ otherComparison = (i) => this.isMatching(filter[i], value);\n            const /** @type {?} */ comparison = Array.isArray(value) ? arrayComparison : otherComparison;\n            for (let /** @type {?} */ i = 0; i < length; i++) {\n                if (comparison(i)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n    /**\n     * Default filterDefault function\n     * @param {?} filter\n     * @return {?}\n     */\n    filterDefault(filter) {\n        return (value) => filter === undefined || filter == value;\n    }\n    /**\n     * @param {?} array\n     * @param {?} filter\n     * @return {?}\n     */\n    transform(array, filter) {\n        if (!array) {\n            return array;\n        }\n        switch (typeof filter) {\n            case 'boolean':\n                return array.filter(this.filterByBoolean(filter));\n            case 'string':\n                if (FilterPipe.isNumber(filter)) {\n                    return array.filter(this.filterDefault(filter));\n                }\n                return array.filter(this.filterByString(filter));\n            case 'object':\n                return array.filter(this.filterByObject(filter));\n            case 'function':\n                return array.filter(filter);\n        }\n        return array.filter(this.filterDefault(filter));\n    }\n}\nFilterPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filterBy',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/** @nocollapse */\nFilterPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass FilterPipeModule {\n}\nFilterPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [FilterPipe],\n                providers: [FilterPipe],\n                exports: [FilterPipe]\n            },] },\n];\n/** @nocollapse */\nFilterPipeModule.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FilterPipeModule, FilterPipe };\n//# sourceMappingURL=ngx-filter-pipe.js.map\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\nimport { IAdminPeril } from '../models/perfil';\r\nimport { event } from '../models/event';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminPerfisService {\r\n\r\n  private readonly API: string = environment.API;\r\n\r\n  event: EventEmitter<Partial<event>> = new EventEmitter<Partial<event>>();\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getPerfil(perfil = {}) {\r\n    return this.http.get<IAdminPeril>(`${this.API}/core/perfis`, {\r\n      params: perfil,\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  getPerfis(params?) {\r\n    return this.http.get<IAdminPeril>(`${this.API}/core/perfis`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  postPerfil(perfil) {\r\n    return this.http.post(`${this.API}/core/perfis`,\r\n      perfil,\r\n      { observe: \"response\" }\r\n    )\r\n  }\r\n\r\n  getAtividadesAssociadas(params?) {\r\n    return this.http.get<IAdminPeril>(`${this.API}/core/perfis/atividades`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  postAtividadesAssociadas(params) {\r\n    return this.http.post(`${this.API}/core/perfis/atividades`,\r\n      params,\r\n      { observe: \"response\" }\r\n    )\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","export default \"<div class=\\\"row\\\" id=\\\"application-header\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div id=\\\"title\\\">\\r\\n      <back-button></back-button>\\r\\n      <h1>Página não encontrada</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" id=\\\"application-body\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"not-found\\\">\\r\\n      <img id=\\\"img\\\" src=\\\"../../../assets/images/system-alerts/404.png\\\">\\r\\n      <div>\\r\\n        <div id=\\\"title\\\">Oops! Página não encontrada</div>\\r\\n        <div id=\\\"message\\\">A página que você está tentando acessar não existe\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaEntergaRestricoesService {\r\n\r\n  API = environment.API;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getRestricoes(params?) {\r\n    return this.http.get(`${this.API}/logistica/restricoes-transporte`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getRestricao(uuid: string) {\r\n    return this.http.get(`${this.API}/logistica/restricoes-transporte/${uuid}`, {\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  postRestricoes(params) {\r\n    return this.http.post(`${this.API}/logistica/restricoes-transporte`, params, {\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  postMateriaisAssociados(params) {\r\n    return this.http.post(`${this.API}/logistica/restricoes-transporte/materiais`, params, {\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  getMateriais(params?){\r\n    return this.http.get(`${this.API}/logistica/entrada-materiais/materiais`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  getMateriaisAssociados(params?){\r\n    return this.http.get(`${this.API}/logistica/restricoes-transporte/materiais`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Resto del código del servicio\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialAgendaService {\r\n  getruta(id_agenda: any) {\r\n    return this.http.get(`${this.API}/getruta/${id_agenda}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  private readonly API = `http://23.254.204.187/api/comercial/agenda`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getAcessos() {\r\n    return this.http.get(`${this.API}/acessos`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCompromissos(params: any) {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/compromissos/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCompromisso(id: any) {\r\n    return this.http\r\n      .get(`${this.API}/compromissos/detalhes/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n    reporteAgenda(data: any) {\r\n      console.log('entro')\r\n      return this.http.post(`${this.API}/reporte`, data).pipe(take(1), retry(2));\r\n    }\r\n\r\n    estadosAgenda(data?: any): Observable<any> {\r\n      const params = data ? { params: data } : {}; // Opcionalmente, incluye los parámetros en la solicitud\r\n\r\n      return this.http.get(`${this.API}/estados`, params).pipe(\r\n        take(1),\r\n        retry(2)\r\n      );\r\n\r\n    }\r\n\r\n  private saveCompromisso(record: any) {\r\n    return this.http\r\n      .post(`${this.API}/compromisso/salvar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  // private actualizarCompromiso(record: any) {\r\n  //   return this.http\r\n  //     .post(`${this.API}/compromiso/actualizar`, record)\r\n  //     .pipe(take(1), retry(2));\r\n  // }\r\n  private updateCompromisso(record: any) {\r\n    return this.http\r\n      .post(`${this.API}/compromiso/actualizar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  private rescheduleCompromisso(record: any) {\r\n    return this.http\r\n      .post(`${this.API}/compromisso/reagendar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  private finalizarCompromisso(record: any) {\r\n    return this.http\r\n      .post(`${this.API}/compromiso/actualizar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  save(action: string, record: any) {\r\n    if (action == 'editar') {\r\n      return this.updateCompromisso(record);\r\n    } else if (action == 'finalizar') {\r\n      return this.finalizarCompromisso(record);\r\n    } else if (action == 'reagendar') {\r\n      return this.rescheduleCompromisso(record);\r\n    } else {\r\n      return this.saveCompromisso(record);\r\n    }\r\n  }\r\n\r\n  deleteCompromisso(id: any) {\r\n    const record = { id: id };\r\n    return this.http\r\n      .post(`${this.API}/compromiso/eliminar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  reporte(params: any) {\r\n    console.log(params);\r\n      return this.http.post(`${this.API}/reporte`, params ).pipe(\r\n        take(1),\r\n        retry(2)\r\n      );\r\n  }\r\n\r\n  reporte_cliente(params: any) {\r\n    console.log('entro432')\r\n    console.log(params);\r\n      return this.http.post(`${this.API}/reportecliente`, params ).pipe(\r\n        take(1),\r\n        retry(2)\r\n      );\r\n  }\r\n\r\n  getPosicionPromotor(id: any) {\r\n    return this.http.get(`${this.API}/getruta/${id}`).pipe(\r\n      take(1),\r\n      retry(2)\r\n    );\r\n  }\r\n\r\n  getImagenes(id: any) {\r\n\r\n    return this.http.get(`${this.API}/getimagenes/${id}`).pipe(\r\n      take(1),\r\n      retry(2));\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { of } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CepService {\r\n  private readonly API = `http://23.254.204.187/api/common/services/cep`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getData(cep: string) {\r\n    cep = cep.replace(/\\D/g, '');\r\n\r\n    if (cep !== '') {\r\n      let validaCep = /^[0-9]{8}$/;\r\n\r\n      if (validaCep.test(cep)) {\r\n        return this.http.get(`${this.API}/${cep}`);\r\n      }\r\n    }\r\n\r\n    return of({});\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaEntradaMateriaisNotasFiscais } from '../models/notasFiscais';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaEntradaMateriaisNotasFiscaisService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getNotasFiscais(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getExport(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/relatorio`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getAlteracoes(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/historico`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getLotesDuplicados(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/materiais/lotes-duplicados`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n  postNotasDuplicadas(notas: ILogisticaEntradaMateriaisNotasFiscais) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/materiais/lotes-duplicados`,\r\n      notas,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  postNotasFiscais(notas) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais`,\r\n      notas,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n  \r\n  getHistoricoMateriais(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/materiais/historico`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getNotasMateriais(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/materiais`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postMateriais(notas) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/entrada-materiais/notas-fiscais/materiais`,\r\n      notas,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaSteellogService {\r\n\r\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTipoTransporte(params?) {\r\n    return this.http.get(`${this.API}/logistica/steellog/tipo-transporte`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getEmpresas(params?) {\r\n    return this.http.get(`${this.API}/logistica/steellog/empresas`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n}\r\n","import { IDescontoModel } from './../../cotacoes/formulario/models/descontos';\r\nimport { ICalculoModel } from './../../cotacoes/formulario/models/calculo';\r\nimport { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient, HttpParams} from '@angular/common/http';\r\nimport { Subject, Observable, forkJoin, BehaviorSubject, of } from 'rxjs';\r\nimport { take, delay } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../../../comercial.service';\r\nimport { ComercialVendedoresService } from '../../../services/vendedores.service';\r\nimport { ComercialCadastrosSituacaoPropostaService } from '../../../cadastros/situacao-proposta/situacao-proposta.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCicloVendasPedidosProducaoTelasFormularioService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/ciclo-vendas/pedidos-producao-telas`;\r\n\r\n  private notifySubmit = new Subject<any>();\r\n\r\n  notifySubmitObservable$ = this.notifySubmit.asObservable();\r\n\r\n  materiaisSubject: Subject<Array<any>> = new Subject<Array<any>>();\r\n  limparCarrinhoSubject: Subject<boolean> = new Subject<boolean>();\r\n  calculoSubject: Subject<ICalculoModel> = new Subject<ICalculoModel>();\r\n  dataSubject: Subject<ICalculoModel> = new Subject<ICalculoModel>();\r\n  descontoSubject: Subject<IDescontoModel> = new Subject<IDescontoModel>();\r\n\r\n  calculoBehavior: BehaviorSubject<ICalculoModel>;\r\n  calculoObservable: Observable<ICalculoModel>;\r\n\r\n  carteiraClientesSubject: BehaviorSubject<any>;\r\n  carteiraClientes: Observable<any>;\r\n  carteiraClientesLoaded: boolean;\r\n\r\n  codCliente: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private situacoesService: ComercialCadastrosSituacaoPropostaService,\r\n  ) {}\r\n\r\n\r\n  public onNotifySubmit(data: boolean) {\r\n    this.notifySubmit.next(data);\r\n  }\r\n\r\n\r\n  loadDependencies(): Observable<Array<Object | JsonResponse>> {\r\n    const situacoes = this.situacoesService.getListaSituacaoProposta(null);\r\n    const empresas = this.comercialService.getEmpresas({ tipo: 'faturamento' });\r\n    const depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\r\n\r\n    return forkJoin([\r\n      situacoes,\r\n      empresas,\r\n      depositos\r\n    ]);\r\n  }\r\n\r\n  createCarteiraClientes(carteiraClientes: Array<any>): void {\r\n    this.carteiraClientesSubject = new BehaviorSubject<any>(carteiraClientes);\r\n    this.carteiraClientes = this.carteiraClientesSubject.asObservable();\r\n    this.carteiraClientesSubject.next(carteiraClientes);\r\n    this.carteiraClientesLoaded = true;\r\n  }\r\n\r\n  getCurrentCarteiraClientes(): Array<any> {\r\n    let _carteiraClientes = [];\r\n\r\n    if (this.carteiraClientesLoaded === true) {\r\n      _carteiraClientes = this.carteiraClientesSubject.value;\r\n    }\r\n\r\n    return _carteiraClientes;\r\n  }\r\n\r\n  getCarteiraClientes(): Observable<Object | JsonResponse> {\r\n    return this.vendedoresService.getCarteiraClientes();\r\n  }\r\n\r\n  clearCarteiraClientes(): void {\r\n    if (typeof this.carteiraClientesSubject !== 'undefined') {\r\n      this.carteiraClientesSubject.next([]);\r\n    }\r\n  }\r\n\r\n  getPesquisaCliente(termoPesquisa: string): Observable<Object | JsonResponse> {\r\n    return of([\r\n      {\r\n        codCliente: 78919,\r\n        razaoSocial: 'LINDSAY',\r\n      },\r\n    ]).pipe(delay(1000));\r\n  }\r\n\r\n  postProducao(nrPedido: number): Observable<any> {\r\n    return this.http.post(`${this.API}/producao`, nrPedido).pipe(take(1));\r\n  }\r\n\r\n  postExpedicao(nrPedido: number): Observable<any> {\r\n    return this.http.post(`${this.API}/expedicao`, nrPedido).pipe(take(1));\r\n  }\r\n\r\n  // getCalculoMaterial(\r\n  //   params\r\n  // ): Observable<Object | JsonResponse> {\r\n  //   return this.http\r\n  //     .get(`${this.API}/material/calculo`, params)\r\n  //     .pipe(take(1));\r\n  // }\r\n\r\n  getCalculoMaterial(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/material/calculo`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\nimport { IXlsxExport } from 'src/app/models/xlsx-export';\r\n\r\n// xlsx\r\nimport * as XLSX from 'xlsx';\r\ntype AOA = any[][];\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class XlsxService {\r\n\r\n  private data: AOA;\r\n  private wopts: XLSX.WritingOptions = { bookType: 'xlsx', type: 'array' };\r\n\r\n  fileLoaded: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  export(params: Partial<IXlsxExport>) {\r\n\r\n    let varExport: any = [];\r\n\r\n    const headers = params.headers ?? Object.keys(params.data[0]);\r\n\r\n    varExport.push(headers);\r\n\r\n    params.data.forEach(element => {\r\n      varExport.push(Object.values(element));\r\n    });\r\n\r\n    /* generate worksheet */\r\n    const ws: XLSX.WorkSheet = XLSX.utils.aoa_to_sheet(varExport);\r\n\r\n    /* generate workbook and add the worksheet */\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n    /* save to file */\r\n    XLSX.writeFile(wb, (this.getFileName(params.filename)) + '.xlsx');\r\n  }\r\n\r\n  getFile(evt: any) {\r\n\r\n    /* wire up file reader */\r\n    const target: DataTransfer = <DataTransfer>evt.target;\r\n\r\n    if (target.files.length !== 1) throw new Error('Cannot use multiple files');\r\n\r\n    const reader: FileReader = new FileReader();\r\n    reader.onload = (e: any) => {\r\n      /* read workbook */\r\n      const bstr: string = e.target.result;\r\n      const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\r\n\r\n      /* grab first sheet */\r\n      const wsname: string = wb.SheetNames[0];\r\n      const ws: XLSX.WorkSheet = wb.Sheets[wsname];\r\n\r\n      /* save data */\r\n      this.fileLoaded.emit(<AOA>XLSX.utils.sheet_to_json(ws, { header: 1 }));\r\n    };\r\n\r\n    reader.readAsBinaryString(target.files[0]);\r\n  }\r\n\r\n  getFileName(filename: string = 'relatorio'){\r\n\r\n    filename = filename ?? 'relatorio'\r\n\r\n    const d = (new Date());\r\n    const timestamp = `${d.getFullYear()}_${d.getMonth()}_${d.getDate()}_${d.getHours()}_${d.getMinutes()}_${d.getSeconds()}`;\r\n    return `${filename}__${timestamp}`;\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ITecnologiaInformacaoModelo } from '../models/modelo';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TecnologiaInformacaoCadastroModeloService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getModelo(params?) {\r\n    return this.http.get(`${this.API}/tecnologia-informacao/item/modelos`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  postModelo(modelo: ITecnologiaInformacaoModelo) {\r\n    return this.http.post(\r\n      `${this.API}/tecnologia-informacao/item/modelo`,\r\n      modelo,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaRegioesEntregaService {\r\n\r\n  API = environment.API;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  postRegiaoEntrega(params){\r\n    return this.http.post(`${this.API}/logistica/regioes-entrega`, params, {\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  getRegioesEntrega(params?){\r\n    return this.http.get(`${this.API}/logistica/regioes-entrega`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  getRegiaoEntrega(id){\r\n    return this.http.get(`${this.API}/logistica/regioes-entrega/${id}`, {\r\n      observe: \"response\"\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IconesFontAwesomeService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getIcones(\r\n    icone = {\r\n      qtItensPorPagina: '1000000'\r\n    }\r\n  ) {\r\n    return this.http.get(`${this.API}/servicos/icons`, {\r\n      params: icone,\r\n      observe: 'response'\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SulFluminenseEstoqueAvancadoGenericService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.BASE_URL}/common/v2/linhas`,{\r\n      observe: 'response'\r\n    },\r\n    );\r\n  }\r\n\r\n  getClasses(params) {\r\n    return this.http.get(`${this.BASE_URL}/common/v2/classes`, {\r\n      params,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  getMateriais(params = {}) {\r\n    return this.http.get(`${this.BASE_URL}/common/v2/materiais`, {\r\n      params,\r\n      observe: 'response'\r\n    });\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { Escritorio } from './models/escritorio';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosEscritorioService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/escritorio`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaEscritorios(params?: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codEscritorio: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codEscritorio}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codEscritorio: number): Observable<any> {\r\n    return this.http.get(`${this.API}/detalhes/${codEscritorio}`).pipe(take(1));\r\n  }\r\n\r\n  private saveEscritorio(escritorio: Escritorio) {\r\n    return this.http.post(`${this.API}/salvar`, escritorio).pipe(take(1));\r\n  }\r\n\r\n  private updateEscritorio(escritorio: Escritorio) {\r\n    return this.http.put(`${this.API}/atualizar`, escritorio).pipe(take(1));\r\n  }\r\n\r\n  save(escritorio: Escritorio): Observable<any> {\r\n    if (escritorio.codEscritorio !== null) {\r\n      return this.updateEscritorio(escritorio);\r\n    }\r\n\r\n    return this.saveEscritorio(escritorio);\r\n  }\r\n\r\n  activateEscritorio(codEscritorio: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codEscritorio).pipe(take(1));\r\n  }\r\n\r\n  inactivateEscritorio(codEscritorio: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codEscritorio).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../../../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\r\n\r\n// Interfaces\r\nimport { ICombo } from './models/combo';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisComboService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/materiais/combos`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) {}\r\n\r\n  getListaCombos(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAssociacoesMateriais(\r\n    codMaterial: number,\r\n    params?: any\r\n  ): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/associacoes/${codMaterial}`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhes(codMaterial: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codMaterial}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  private saveCombo(record: ICombo): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1), retry(2));\r\n  }\r\n\r\n  private updateCombo(record: ICombo): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  save(record: ICombo, action: string): Observable<Object | JsonResponse> {\r\n    if (action === 'update') {\r\n      return this.updateCombo(record);\r\n    }\r\n\r\n    return this.saveCombo(record);\r\n  }\r\n\r\n  deleteAssociacao(\r\n    codCombo: number,\r\n    codAssociacao: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .delete(`${this.API}/associacao/remover/${codCombo}/${codAssociacao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  activateCombo(codCombo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/ativar`, codCombo)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  inactivateCombo(codCombo: number): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/inativar`, codCombo).pipe(take(1));\r\n  }\r\n\r\n  getFilterValues(): Observable<Object | JsonResponse> {\r\n    const linhas = this.tidSoftwareService.getLinhas();\r\n    const classes = this.comercialService.getClasses(null);\r\n\r\n    return forkJoin([linhas, classes]);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EstadosService {\r\n  estados: any = [\r\n    {\r\n      sigla: 'AC',\r\n      descricao: 'Acre',\r\n    },\r\n    {\r\n      sigla: 'AL',\r\n      descricao: 'Alagoas',\r\n    },\r\n    {\r\n      sigla: 'AP',\r\n      descricao: 'Amapá',\r\n    },\r\n    {\r\n      sigla: 'AM',\r\n      descricao: 'Amazonas',\r\n    },\r\n    {\r\n      sigla: 'BA',\r\n      descricao: 'Bahia',\r\n    },\r\n    {\r\n      sigla: 'CE',\r\n      descricao: 'Ceará',\r\n    },\r\n    {\r\n      sigla: 'DF',\r\n      descricao: 'Distrito Federal',\r\n    },\r\n    {\r\n      sigla: 'ES',\r\n      descricao: 'Espírito Santo',\r\n    },\r\n    {\r\n      sigla: 'GO',\r\n      descricao: 'Goiás',\r\n    },\r\n    {\r\n      sigla: 'MA',\r\n      descricao: 'Maranhão',\r\n    },\r\n    {\r\n      sigla: 'MT',\r\n      descricao: 'Mato Grosso',\r\n    },\r\n    {\r\n      sigla: 'MS',\r\n      descricao: 'Mato Grosso do Sul',\r\n    },\r\n    {\r\n      sigla: 'MG',\r\n      descricao: 'Minas Gerais',\r\n    },\r\n    {\r\n      sigla: 'PA',\r\n      descricao: 'Pará',\r\n    },\r\n    {\r\n      sigla: 'PB',\r\n      descricao: 'Paraíba',\r\n    },\r\n    {\r\n      sigla: 'PR',\r\n      descricao: 'Paraná',\r\n    },\r\n    {\r\n      sigla: 'PE',\r\n      descricao: 'Pernambuco',\r\n    },\r\n    {\r\n      sigla: 'PI',\r\n      descricao: 'Piauí',\r\n    },\r\n    {\r\n      sigla: 'RJ',\r\n      descricao: 'Rio de Janeiro',\r\n    },\r\n    {\r\n      sigla: 'RN',\r\n      descricao: 'Rio Grande do Norte',\r\n    },\r\n    {\r\n      sigla: 'RS',\r\n      descricao: 'Rio Grande do Sul',\r\n    },\r\n    {\r\n      sigla: 'RO',\r\n      descricao: 'Rondônia',\r\n    },\r\n    {\r\n      sigla: 'RR',\r\n      descricao: 'Roraima',\r\n    },\r\n    {\r\n      sigla: 'SC',\r\n      descricao: 'Santa Catarina',\r\n    },\r\n    {\r\n      sigla: 'SP',\r\n      descricao: 'São Paulo',\r\n    },\r\n    {\r\n      sigla: 'SE',\r\n      descricao: 'Sergipe',\r\n    },\r\n    {\r\n      sigla: 'TO',\r\n      descricao: 'Tocantins',\r\n    },\r\n  ];\r\n\r\n  getEstados() {\r\n    return this.estados;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaEntregaFusionService {\r\n  private API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPedidos(params = {}) {\r\n    return this.http.get(`${this.API}/logistica/integracoes/fusion/pedidos`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  integraPedidoFusion(params) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/integracoes/fusion/pedidos`,\r\n      params,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  getManifestos(params) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/integracoes/fusion/steellog/manifestos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postManifesto(params) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/integracoes/fusion/steellog/manifestos`,\r\n      params,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  getFiliais() {\r\n    return [\r\n      {\r\n        id: '1',\r\n        nome: 'Centro Logístico 01',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        id: '21',\r\n        nome: 'Centro Logístico 03',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        id: '2',\r\n        nome: 'Centro Logístico 07',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        id: '3',\r\n        nome: 'Centro Logístico 08',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        nome: 'Almacen 09 - Montero',\r\n        id: '9',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        nome: 'Almacen 11 - Trinidad',\r\n        id: '11',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        nome: 'Almacen 12 - Satelite',\r\n        id: '12',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        nome: 'Almacen 17 - Sucre',\r\n        id: '17',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        nome: 'Almacen 18 - La Paz',\r\n        id: '18',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        nome: 'Almacen 19 - Potosi',\r\n        id: '19',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        nome: 'Almacen 20 - Tarija',\r\n        id: '20',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        nome: 'Almacen V 32',\r\n        id: '25',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        nome: 'Centro de Acopio y Distribucion',\r\n        id: '14',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        nome: 'Producción 07',\r\n        id: '22',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        nome: 'Producción 17',\r\n        id: '23',\r\n        cnpj: '1028555020',\r\n      },\r\n      {\r\n        nome: 'Producción 20',\r\n        id: '24',\r\n        cnpj: '1028555020',\r\n      }\r\n    ];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { take } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GenericService {\r\n  private readonly API = `http://23.254.204.187/api/common`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getEscritorios() {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1));\r\n  }\r\n\r\n  getEmpresas() {\r\n    return this.http.get(`${this.API}/empresas`).pipe(take(1));\r\n  }\r\n\r\n  getDepositos(idEmpresa: number) {\r\n    return this.http.get(`${this.API}/depositos/${idEmpresa}`);\r\n  }\r\n\r\n  getClasses(linha: any) {\r\n    return this.http.get(`${this.API}/classes/${linha}`).pipe(take(1));\r\n  }\r\n\r\n  getMateriais(params: any = []) {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getSituacoes() {\r\n    return this.http.get(`${this.API}/situacoes`).pipe(take(1));\r\n  }\r\n\r\n  getFiltros() {\r\n    let materiais = this.getMateriais();\r\n    let linhas = this.getLinhas();\r\n    let empresas = this.getEmpresas();\r\n\r\n    return forkJoin([materiais, linhas, empresas]).pipe(take(1));\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaYmsChecklist } from '../models/checklist';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaYmsChecklistService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getChecklist(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/checklist`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postChecklist(checklist: ILogisticaYmsChecklist) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/yms/checklist`,\r\n      checklist,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaPrazoEntregaService {\r\n\r\n  API = environment.API;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  postPrazoEntrega(params){\r\n    return this.http.post(`${this.API}/logistica/prazos-entrega`, params, {\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  getPrazosEntrega(params?){\r\n    return this.http.get(`${this.API}/logistica/prazos-entrega`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  getPrazoEntrega(id){\r\n    return this.http.get(`${this.API}/logistica/prazos-entrega/${id}`, {\r\n      observe: \"response\"\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubModulosService {\r\n  private readonly API = `http://23.254.204.187/api/core/submodulo`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getSubModulo(idSubModulo: number) {\r\n    return this.http\r\n      .get(`${this.API}/${idSubModulo}`, { observe: 'response' })\r\n      .pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EscritoriosService {\r\n  private readonly API = `http://23.254.204.187/api/common/escritorios`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getEscritorios() {\r\n    return this.http.get(`${this.API}`).pipe(take(1));\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaFiliais } from '../models/filiais';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaFiliaisService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getFiliais(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/filiais`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getFilial(id: number) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/filiais/${id}`,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postFiliais(filiais: ILogisticaFiliais) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/filiais`,\r\n      filiais,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getUsuariosAssociados(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/filiais/usuarios`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  postUsuariosAssociados(associacao) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/filiais/usuarios`,\r\n      associacao,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteAssociacoes(params) {\r\n    return this.http.delete(\r\n      `${this.API}/logistica/filiais/usuarios`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getUsuarios(params?) {\r\n    return this.http.get(\r\n      `${this.API}/core/mtcorp/usuarios`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","// angular\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaEntregaDesmembramentoService {\r\n\r\n  private readonly API = environment.API;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  getProdutos(params) {\r\n    return this.http.get(`${this.API}/logistica/pedidos/produtos`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  getTipoOperacao(params) {\r\n    return this.http.get(`${this.API}/logistica/pedidos/tipo-operacao`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  post(params) {\r\n    return this.http.post(`${this.API}/logistica/pedidos/desmembramento`, params, {\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  put(params){\r\n    return this.http.put(`${this.API}/logistica/pedidos/desmembramento`, params, {\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, tap, retry } from 'rxjs/operators';\r\n\r\nimport { setRepresentantes } from './models/representantes';\r\n\r\nimport { environment } from './../../../../../environments/environment';\r\nimport { JsonResponse } from './../../../../models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosRepresentantesService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/representantes`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaRepresentantes(params: any = []): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n    httpParams = httpParams.append(param, params[param]);    }\r\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  private saveERP(record: any): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/save`, record).pipe(take(1));\r\n  }\r\n\r\n  private updateERP(record: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .put(`${this.API}/update`, record)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  save(record: any, action: string): Observable<Object | JsonResponse> {\r\n    console.log(record)\r\n    if (action === 'update') {\r\n      console.log(record)\r\n      return this.updateERP(record);\r\n    }\r\n\r\n    return this.saveERP(record);\r\n\r\n  }\r\n\r\n  getDetalhes(codRepresentante: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codRepresentante}`)\r\n      .pipe(\r\n        take(1),\r\n        retry(2)\r\n        );\r\n  }\r\n\r\n  getTipoComissionamento() {\r\n    return this.http.get(`${this.API}/tipo-comissionamento`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getBancos() {\r\n    return this.http.get(`${this.API}/bancos`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTipoVendedor() {\r\n    return this.http.get(`${this.API}/tipo-vendedor`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  activateERP(codERP: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/ativar`, codERP)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  inactivateERP(codERP: number): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/inativar`, codERP).pipe(take(1));\r\n  }\r\n\r\n  getAnexos(codRepresentante: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/anexo/documentos/${codRepresentante}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  postAnexos(params, codRepresentante: number): Observable<any> {\r\n    return this.http.post(\r\n      `${this.API}/anexo/documentos/salvar?codRepresentante=${codRepresentante}`,\r\n      params\r\n    ).pipe(take(1));\r\n  }\r\n\r\n  deleteAnexo(codAnexo: number): Observable<any> {\r\n    let params = {\r\n      codAnexo: codAnexo,\r\n    };\r\n\r\n    return this.http\r\n      .put(`${this.API}/anexo/documentos/excluir`, params)\r\n      .pipe(take(1));\r\n  }\r\n\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaYmsEtapas } from '../models/etapas';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaYmsEtapasService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getEtapas(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/etapas`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getEtapa(id: number) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/etapas/${id}`,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postEtapas(etapas: ILogisticaYmsEtapas) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/yms/etapas`,\r\n      etapas,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getSetoresAssociados(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/etapas/setores`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getSetores(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/setores`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  deleteAssociacoes(params) {\r\n    return this.http.delete(\r\n      `${this.API}/logistica/yms/etapas/setores`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  postSetoresAssociados(associacao) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/yms/etapas/setores`,\r\n      associacao,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","export { default } from \"../.internal/themes/animated\";\r\n//# sourceMappingURL=animated.js.map","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ITecnologiaInformacaoEstoqueProduto } from '../models/produto';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TecnologiaInformacaoEstoqueProdutosService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getProdutos(params?) {\r\n    return this.http.get(`${this.API}/tecnologia-informacao/estoque/produtos`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getProduto(id: number) {\r\n    return this.http.get(`${this.API}/tecnologia-informacao/estoque/produtos/${id}`, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  postProdutos(item: ITecnologiaInformacaoEstoqueProduto) {\r\n    return this.http.post(\r\n      `${this.API}/tecnologia-informacao/estoque/produtos`,\r\n      item,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","/**\r\n * amCharts 4 locale\r\n *\r\n * Locale: pt_BR\r\n * Language: Brazilian Portuguese\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v4/tutorials/creating-translations/) to make corrections or add new translations.\r\n */\r\nexport default {\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \",\",\r\n    \"_thousandSeparator\": \".\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_day\": \"dd MMM\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_hour\": \"hh\",\r\n    \"_duration_day\": \"dd\",\r\n    \"_duration_week\": \"ww\",\r\n    \"_duration_month\": \"MM\",\r\n    \"_duration_year\": \"yyyy\",\r\n    // Era translations\r\n    \"_era_ad\": \"DC\",\r\n    \"_era_bc\": \"AC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    \"January\": \"Janeiro\",\r\n    \"February\": \"Fevereiro\",\r\n    \"March\": \"Março\",\r\n    \"April\": \"Abril\",\r\n    \"May\": \"Maio\",\r\n    \"June\": \"Junho\",\r\n    \"July\": \"Julho\",\r\n    \"August\": \"Agosto\",\r\n    \"September\": \"Setembro\",\r\n    \"October\": \"Outubro\",\r\n    \"November\": \"Novembro\",\r\n    \"December\": \"Dezembro\",\r\n    \"Jan\": \"Jan\",\r\n    \"Feb\": \"Fev\",\r\n    \"Mar\": \"Mar\",\r\n    \"Apr\": \"Abr\",\r\n    \"May(short)\": \"Mai\",\r\n    \"Jun\": \"Jun\",\r\n    \"Jul\": \"Jul\",\r\n    \"Aug\": \"Ago\",\r\n    \"Sep\": \"Set\",\r\n    \"Oct\": \"Out\",\r\n    \"Nov\": \"Nov\",\r\n    \"Dec\": \"Dez\",\r\n    // Weekdays.\r\n    \"Sunday\": \"Domingo\",\r\n    \"Monday\": \"Segunda-feira\",\r\n    \"Tuesday\": \"Terça-feira\",\r\n    \"Wednesday\": \"Quarta-feira\",\r\n    \"Thursday\": \"Quinta-feira\",\r\n    \"Friday\": \"Sexta-feira\",\r\n    \"Saturday\": \"Sábado\",\r\n    \"Sun\": \"Dom\",\r\n    \"Mon\": \"Seg\",\r\n    \"Tue\": \"Ter\",\r\n    \"Wed\": \"Qua\",\r\n    \"Thu\": \"Qui\",\r\n    \"Fri\": \"Sex\",\r\n    \"Sat\": \"Sáb\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        return \"º\";\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"Reduzir Zoom\",\r\n    // Timeline buttons\r\n    \"Play\": \"Play\",\r\n    \"Stop\": \"Parar\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"Legenda\",\r\n    // Legend's item screen reader indicator.\r\n    \"Click, tap or press ENTER to toggle\": \"Clique, toque ou pressione ENTER para alternar\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"Carregando\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"Início\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"Gráfico\",\r\n    \"Serial chart\": \"Gráfico Serial\",\r\n    \"X/Y chart\": \"Gráfico XY\",\r\n    \"Pie chart\": \"Gráfico de Pizza\",\r\n    \"Gauge chart\": \"Gráfico Indicador\",\r\n    \"Radar chart\": \"Gráfico de Radar\",\r\n    \"Sankey diagram\": \"Diagrama Sankey\",\r\n    \"Chord diagram\": \"Diagram Chord\",\r\n    \"Flow diagram\": \"Diagrama Flow\",\r\n    \"TreeMap chart\": \"Gráfico de Mapa de Árvore\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"Séries\",\r\n    \"Candlestick Series\": \"Séries do Candlestick\",\r\n    \"Column Series\": \"Séries de Colunas\",\r\n    \"Line Series\": \"Séries de Linhas\",\r\n    \"Pie Slice Series\": \"Séries de Fatias de Pizza\",\r\n    \"X/Y Series\": \"Séries de XY\",\r\n    // Map-related stuff.\r\n    \"Map\": \"Mapa\",\r\n    \"Press ENTER to zoom in\": \"Pressione ENTER para aumentar o zoom\",\r\n    \"Press ENTER to zoom out\": \"Pressione ENTER para diminuir o zoom\",\r\n    \"Use arrow keys to zoom in and out\": \"Use as setas para diminuir ou aumentar o zoom\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"Use as teclas mais ou menos no seu teclado para diminuir ou aumentar o zoom\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"Exportar\",\r\n    \"Image\": \"Imagem\",\r\n    \"Data\": \"Dados\",\r\n    \"Print\": \"Imprimir\",\r\n    \"Click, tap or press ENTER to open\": \"Clique, toque ou pressione ENTER para abrir\",\r\n    \"Click, tap or press ENTER to print.\": \"Clique, toque ou pressione ENTER para imprimir\",\r\n    \"Click, tap or press ENTER to export as %1.\": \"Clique, toque ou pressione ENTER para exportar como %1.\",\r\n    'To save the image, right-click this link and choose \"Save picture as...\"': \"Para salvar a imagem, clique no link com o botão da direira e escolha \\\"Salvar imagem como...\\\"\",\r\n    'To save the image, right-click thumbnail on the left and choose \"Save picture as...\"': \"Para salvar, clique na imagem à esquerda com o botão direito e escolha \\\"Salvar imagem como...\\\"\",\r\n    \"(Press ESC to close this message)\": \"(Pressione ESC para fechar esta mensagem)\",\r\n    \"Image Export Complete\": \"A exportação da imagem foi completada\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"A exportação da imagem demorou mais do que o experado. Algo deve ter dado errado.\",\r\n    \"Saved from\": \"Salvo de\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"Use TAB para selecionar os botões ou setas para a direita ou esquerda para mudar a seleção\",\r\n    \"Use left and right arrows to move selection\": \"Use as setas para a esquerda ou direita para mover a seleção\",\r\n    \"Use left and right arrows to move left selection\": \"Use as setas para a esquerda ou direita para mover a seleção da esquerda\",\r\n    \"Use left and right arrows to move right selection\": \"Use as setas para a esquerda ou direita para mover a seleção da direita\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"Use TAB para selecionar os botões ou setas para cima ou para baixo para mudar a seleção\",\r\n    \"Use up and down arrows to move selection\": \"Use as setas para cima ou para baixo para mover a seleção\",\r\n    \"Use up and down arrows to move lower selection\": \"Use as setas para cima ou para baixo para mover a seleção de baixo\",\r\n    \"Use up and down arrows to move upper selection\": \"Use as setas para cima ou para baixo para mover a seleção de cima\",\r\n    \"From %1 to %2\": \"De %1 até %2\",\r\n    \"From %1\": \"De %1\",\r\n    \"To %1\": \"Até %1\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"Não há um interpretador para este arquivo: %1\",\r\n    \"Error parsing file: %1\": \"Erro analizando o arquivo: %1\",\r\n    \"Unable to load file: %1\": \"O arquivo não pôde ser carregado: %1\",\r\n    \"Invalid date\": \"Data inválida\",\r\n};\r\n//# sourceMappingURL=pt_BR.js.map","export { default } from \"../.internal/themes/material\";\r\n//# sourceMappingURL=material.js.map","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ITecnologiaInformacaoContrato } from '../models/contrato';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TecnologiaInformacaoCadastroContratoService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //-----------------------------------ITENS--------------------------\\\\\r\n\r\n  getContrato(params?) {\r\n    return this.http.get(`${this.API}/tecnologia-informacao/contratos`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  postContrato(contrato) {\r\n    return this.http.post(\r\n      `${this.API}/tecnologia-informacao/contrato`,\r\n      contrato,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  //-----------------------------------Docuementos--------------------------\\\\\r\n  getDocumento(params) {\r\n    return this.http.get(\r\n      `${this.API}/tecnologia-informacao/contratos/documentos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postDocumento(params, ID_TECN_INFO_CONT: number) {\r\n    return this.http.post(\r\n      `${this.API}/tecnologia-informacao/contrato/documento?ID_TECN_INFO_CONT=${ID_TECN_INFO_CONT}`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  putDocumento(params) {\r\n    return this.http.put(\r\n      `${this.API}/tecnologia-informacao/contrato/documento`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n  //------------------------------------  EMPRESAS ------------------------------//\r\n\r\n  getEmpresas(params?) {\r\n    return this.http.get(`${this.API}/tecnologia-informacao/empresas`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getEmpresasAssoc(params?) {\r\n    return this.http.get(\r\n      `${this.API}/tecnologia-informacao/contratos/empresas`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postEmpresas(params) {\r\n    return this.http.post(\r\n      `${this.API}/tecnologia-informacao/contratos/empresas`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getIndices(params?) {\r\n    return this.http.get(`${this.API}/servicos/indices`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ITecnologiaInformacaoTipoContrato } from '../models/tipoContrato';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TecnologiaInformacaoCadastroTipoContratoService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTipoContrato(params?) {\r\n    return this.http.get(\r\n      `${this.API}/tecnologia-informacao/contrato/tipo-contrato`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postTipoContrato(tipoContrato: ITecnologiaInformacaoTipoContrato) {\r\n    return this.http.post(\r\n      `${this.API}/tecnologia-informacao/contrato/tipo-contrato`,\r\n      tipoContrato,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { descricaoTabela, assocTabela } from './models/tabela-precos';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { take, tap, retry } from 'rxjs/operators';\r\nimport { JsonResponse } from './../../../../../models/json-response';\r\nimport { environment } from './../../../../../../environments/environment';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialComissoesGestaoComissionamentosService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/comissoes/representantes/gestao-comissionamentos`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getComissionamentos(params: any = []): Observable<any> {\r\n\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n    httpParams = httpParams.append(param, params[param]);    }\r\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  getListaComissoes(params: any = []): Observable<any> {\r\n\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n    httpParams = httpParams.append(param, params[param]);    }\r\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  getListaEdicaoComissoes(params: any = []): Observable<any> {\r\n\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n    httpParams = httpParams.append(param, params[param]);    }\r\n    return this.http.get(`${this.API}/lista-edicao`, { params: httpParams })\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  getDetalhesRepresentante(params): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n    httpParams = httpParams.append(param, params[param]);    }\r\n    return this.http.get(`${this.API}/representantes-detalhes`, { params: httpParams })\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  getDetalhesUnidades(params): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n    httpParams = httpParams.append(param, params[param]);    }\r\n    return this.http.get(`${this.API}/unidades-detalhes`, { params: httpParams })\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  // getDetalhesRepresentante(params): Observable<any> {\r\n  //   return this.http.get(`${this.API}/comissoes-detalhes/${codGestao}/${codComissao}`)\r\n  //   .pipe(\r\n  //     take(1),\r\n  //     retry(2)\r\n  //     );\r\n  // }\r\n\r\n  getFormComissoes(params): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n    httpParams = httpParams.append(param, params[param]);    }\r\n    return this.http.get(`${this.API}/dados-comissoes`, { params: httpParams })\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  getHistorico(codComissaoRepresentante): Observable<any> {\r\n    return this.http.get(`${this.API}/historico/${codComissaoRepresentante}`)\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  getModelo(codGestao): Observable<any> {\r\n    return this.http.get(`${this.API}/modelos/${codGestao}`)\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  getSituacao(): Observable<any> {\r\n    return this.http.get(`${this.API}/situacao`)\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  // getFilterValues(): Observable<Object | JsonResponse> {\r\n  //   let escritorios = this.getEscritorios();\r\n  //   let representantes = this.getRepresentantes();\r\n\r\n  //   return forkJoin([\r\n  //     escritorios,\r\n  //     representantes,\r\n  //   ]).pipe(take(1));\r\n  // }\r\n\r\n  getRepresentantes(codEscritorio): Observable<any> {\r\n  return this.http.get(`${this.API}/representantes/${codEscritorio}`)\r\n  .pipe(\r\n    take(1),\r\n    retry(2)\r\n    );\r\n  }\r\n\r\n  getEscritorios(): Observable<any> {\r\n    return this.http.get(`${this.API}/escritorios`)\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  getDetalhes(idAnoMes): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${idAnoMes}`)\r\n      .pipe(\r\n        take(1),\r\n        retry(2)\r\n        );\r\n  }\r\n\r\n  getPermissoesAcesso(): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/permissoes-acesso`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  saveComissao(record: any, action?): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\r\n  }\r\n\r\n  updateComissao(record: any, action?): Observable<Object | JsonResponse> {\r\n    return this.http.put(`${this.API}/atualizar`, record).pipe(take(1));\r\n  }\r\n\r\n  // getSolicitaNfEscritorio(){\r\n  //   return this.http.get(`${this.API}/solicitar-nf-escritorio`).pipe(take(1));\r\n  // }\r\n\r\n  getSolicitaNfRepresentante(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/solicitar-nf-representante`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postValores(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/salvar-valores`, params)\r\n      .pipe(take(1));\r\n  }\r\n\r\n\r\n   postAprovar(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/aprovar`, params)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  postReprovar(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/reprovar`, params)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAnexos(codComissao: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/anexo/documentos/${codComissao}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  postAnexos(params, codComissaoRepresentante: number): Observable<any> {\r\n    return this.http.post(\r\n      `${this.API}/anexo/documentos/salvar?codComissaoRepresentante=${codComissaoRepresentante}`,\r\n      params\r\n    );\r\n  }\r\n\r\n  deleteAnexo(codAnexo: number): Observable<any> {\r\n    let params = {\r\n      codAnexo: codAnexo,\r\n    };\r\n\r\n    return this.http\r\n      .put(`${this.API}/anexo/documentos/excluir`, params)\r\n      .pipe(take(1));\r\n  }\r\n\r\n}\r\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","export default \"::ng-deep not-found {\\n  height: 100vh;\\n}\\n::ng-deep not-found .not-found {\\n  -ms-flex-align: center;\\n      align-items: center;\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: 100%;\\n  -ms-flex-pack: center;\\n      justify-content: center;\\n  width: 100%;\\n}\\n::ng-deep not-found .not-found #img {\\n  height: 70px;\\n  margin-right: 15px;\\n}\\n::ng-deep not-found .not-found #title {\\n  color: #586464;\\n  font-size: 18px;\\n  font-weight: 500;\\n  letter-spacing: 0.25px;\\n}\\n::ng-deep not-found .not-found #message {\\n  color: #212529;\\n  font-size: 16px;\\n  font-weight: 400;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIiwic3JjL2Fzc2V0cy9zY3NzL3ZhcmlhYmxlcy5zY3NzIiwic3JjL2Fzc2V0cy9zY3NzL2NvbG9ycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlFO0VBQ0UsYUFBQTtBQUhKO0FBSUk7RUFDRSxzQkFBQTtNQUFBLG1CQUFBO0VBQ0Esb0JBQUE7RUFBQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLHFCQUFBO01BQUEsdUJBQUE7RUFDQSxXQUFBO0FBRk47QUFHTTtFQUNFLFlBQUE7RUFDQSxrQkNkQztBRGFUO0FBR007RUFDRSxjRWRNO0VGZU4sZUFBQTtFQUNBLGdCQUFBO0VBQ0Esc0JBQUE7QUFEUjtBQUdNO0VBQ0UsY0VyQkk7RUZzQkosZUFBQTtFQUNBLGdCQUFBO0FBRFIiLCJmaWxlIjoic3JjL2FwcC9jb3JlL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAge1xyXG4gIEBpbXBvcnQgJy4uLy4uLy4uL2Fzc2V0cy9zY3NzL2NvbG9ycyc7XHJcbiAgQGltcG9ydCAnLi4vLi4vLi4vYXNzZXRzL3Njc3MvdmFyaWFibGVzJztcclxuXHJcbiAgbm90LWZvdW5kIHtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICAubm90LWZvdW5kIHtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICNpbWcge1xyXG4gICAgICAgIGhlaWdodDogNzBweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6ICRndXR0ZXI7XHJcbiAgICAgIH1cclxuICAgICAgI3RpdGxlIHtcclxuICAgICAgICBjb2xvcjogJG1lZGl1bS1ncmF5O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjI1cHg7XHJcbiAgICAgIH1cclxuICAgICAgI21lc3NhZ2Uge1xyXG4gICAgICAgIGNvbG9yOiAkZGFyay1ncmF5O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIiRndXR0ZXI6IDE1cHg7XHJcbiRzaWRlYmFyLXNpemU6IDQ4cHg7XHJcbiRzaWRlYmFyLW9wZW4tc2l6ZTogMjUwcHg7XHJcbiRuYXZiYXItc2l6ZTogNDhweDtcclxuJGhlYWRlci1zaXplOiA0NXB4O1xyXG4iLCIkYmxhY2s6ICMwMDAwMDA7XHJcbiRncmF5OiAjNWE1YTVhO1xyXG4kZGFyay1ncmF5OiAjMjEyNTI5O1xyXG4kbWVkaXVtLWdyYXk6ICM1ODY0NjQ7XHJcbiRsaWdodC1ncmF5OiAjZTVlNWUzO1xyXG4kY3lhbm86ICMwMGUwZDg7XHJcbiRibHVlOiAjMDA1ZmRjO1xyXG4kbGlnaHQtYmx1ZTogIzhGQjlFRjtcclxuJGRhcmstYmx1ZTogIzA0MzM1ZTtcclxuJHJlZDogI2I4MzQyYztcclxuJG9yYW5nZTogI2ZmNjYzMztcclxuJGxpZ2h0LW9yYW5nZTogI2ZmODQyOTtcclxuJGFxdWE6ICMyMmZmYTE7XHJcbiRncmVlbjogIzRkY2M3MTtcclxuJGxpZ2h0LWdyZWVuOiAjYmZmZjAwO1xyXG4kZGFyay1ncmVlbjogIzAwODA2MDtcclxuJHllbGxvdzogI2ZmZWEwMDtcclxuJGdvbGRlbjogI2NhOWYxZDtcclxuJHBpbms6ICNjYzA3NjY7XHJcbiRwdXJwbGU6ICM3OTBhYTM7XHJcbiR3aGl0ZTogI2ZmZmZmZjtcclxuJGljZTogI2Y3ZjdmNztcclxuJHB1cnBsZU10Q29ycDogIzNlMDc1MjtcclxuJHB1cnBsZUxpZ2h0TXRDb3JwOiAjOTYyMThlO1xyXG4kb3JhbmdlTXRDb3JwOiAjRkM5RjNBO1xyXG4kb3JhbmdlRGFya010Q29ycDogIzllNTIwMTtcclxuIl19 */\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialGestaoAssociacoesCoordenadoresEscritoriosService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/gestao/associacao-coordenadores`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaCoordenadoresEscritorios() {\r\n    return this.http.get(`${this.API}/lista`).pipe(take(1));\r\n  }\r\n\r\n  putAssociacaoCoordenadorEscritorio(data: any) {\r\n    return this.http.put(`${this.API}/salvar`, data).pipe(take(1));\r\n  }\r\n}\r\n","import { Pipe, NgModule } from '@angular/core';\n\nclass OrderPipe {\n    /**\n     * Check if a value is a string\n     *\n     * @param value\n     */\n    static isString(value) {\n        return typeof value === \"string\" || value instanceof String;\n    }\n    /**\n     * Sorts values ignoring the case\n     *\n     * @param a\n     * @param b\n     */\n    static caseInsensitiveSort(a, b) {\n        if (OrderPipe.isString(a) && OrderPipe.isString(b)) {\n            return a.localeCompare(b);\n        }\n        return OrderPipe.defaultCompare(a, b);\n    }\n    /**\n     * Default compare method\n     *\n     * @param a\n     * @param b\n     */\n    static defaultCompare(a, b) {\n        if (a && a instanceof Date) {\n            a = a.getTime();\n        }\n        if (b && b instanceof Date) {\n            b = b.getTime();\n        }\n        if (a === b) {\n            return 0;\n        }\n        if (a == null) {\n            return 1;\n        }\n        if (b == null) {\n            return -1;\n        }\n        return a > b ? 1 : -1;\n    }\n    /**\n     * Parse expression, split into items\n     * @param expression\n     * @returns {string[]}\n     */\n    static parseExpression(expression) {\n        expression = expression.replace(/\\[(\\w+)\\]/g, \".$1\");\n        expression = expression.replace(/^\\./, \"\");\n        return expression.split(\".\");\n    }\n    /**\n     * Get value by expression\n     *\n     * @param object\n     * @param expression\n     * @returns {any}\n     */\n    static getValue(object, expression) {\n        for (let i = 0, n = expression.length; i < n; ++i) {\n            if (!object) {\n                return;\n            }\n            const k = expression[i];\n            if (!(k in object)) {\n                return;\n            }\n            if (typeof object[k] === \"function\") {\n                object = object[k]();\n            }\n            else {\n                object = object[k];\n            }\n        }\n        return object;\n    }\n    /**\n     * Set value by expression\n     *\n     * @param object\n     * @param value\n     * @param expression\n     */\n    static setValue(object, value, expression) {\n        let i;\n        for (i = 0; i < expression.length - 1; i++) {\n            object = object[expression[i]];\n        }\n        object[expression[i]] = value;\n    }\n    transform(value, expression, reverse, isCaseInsensitive = false, comparator) {\n        if (!value) {\n            return value;\n        }\n        if (Array.isArray(expression)) {\n            return this.multiExpressionTransform(value, expression.slice(), reverse, isCaseInsensitive, comparator);\n        }\n        if (Array.isArray(value)) {\n            return this.sortArray(value.slice(), expression, reverse, isCaseInsensitive, comparator);\n        }\n        if (typeof value === \"object\") {\n            return this.transformObject(Object.assign({}, value), expression, reverse, isCaseInsensitive, comparator);\n        }\n        return value;\n    }\n    /**\n     * Sort array, returns sorted array\n     *\n     * @param array\n     * @param expression\n     * @param reverse\n     * @param isCaseInsensitive\n     * @param comparator\n     * @returns {Type[]}\n     */\n    sortArray(array, expression, reverse, isCaseInsensitive, comparator) {\n        const isDeepLink = expression && expression.indexOf(\".\") !== -1;\n        if (isDeepLink) {\n            expression = OrderPipe.parseExpression(expression);\n        }\n        let compareFn;\n        if (comparator && typeof comparator === \"function\") {\n            compareFn = comparator;\n        }\n        else {\n            compareFn = isCaseInsensitive\n                ? OrderPipe.caseInsensitiveSort\n                : OrderPipe.defaultCompare;\n        }\n        const sortedArray = array.sort((a, b) => {\n            if (!expression) {\n                return compareFn(a, b);\n            }\n            if (!isDeepLink) {\n                if (a && b) {\n                    return compareFn(a[expression], b[expression]);\n                }\n                return compareFn(a, b);\n            }\n            return compareFn(OrderPipe.getValue(a, expression), OrderPipe.getValue(b, expression));\n        });\n        if (reverse) {\n            return sortedArray.reverse();\n        }\n        return sortedArray;\n    }\n    /**\n     * Transform Object\n     *\n     * @param value\n     * @param expression\n     * @param reverse\n     * @param isCaseInsensitive\n     * @param comparator\n     * @returns {any[]}\n     */\n    transformObject(value, expression, reverse, isCaseInsensitive, comparator) {\n        const parsedExpression = OrderPipe.parseExpression(expression);\n        let lastPredicate = parsedExpression.pop();\n        let oldValue = OrderPipe.getValue(value, parsedExpression);\n        if (!Array.isArray(oldValue)) {\n            parsedExpression.push(lastPredicate);\n            lastPredicate = null;\n            oldValue = OrderPipe.getValue(value, parsedExpression);\n        }\n        if (!oldValue) {\n            return value;\n        }\n        OrderPipe.setValue(value, this.transform(oldValue, lastPredicate, reverse, isCaseInsensitive), parsedExpression);\n        return value;\n    }\n    /**\n     * Apply multiple expressions\n     *\n     * @param value\n     * @param {any[]} expressions\n     * @param {boolean} reverse\n     * @param {boolean} isCaseInsensitive\n     * @param {Function} comparator\n     * @returns {any}\n     */\n    multiExpressionTransform(value, expressions, reverse, isCaseInsensitive = false, comparator) {\n        return expressions.reverse().reduce((result, expression) => {\n            return this.transform(result, expression, reverse, isCaseInsensitive, comparator);\n        }, value);\n    }\n}\nOrderPipe.decorators = [\n    { type: Pipe, args: [{\n                name: \"orderBy\",\n                pure: false,\n            },] }\n];\n\n/**\n * Created by vadimdez on 20/01/2017.\n */\nclass OrderModule {\n}\nOrderModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [OrderPipe],\n                exports: [OrderPipe],\n                providers: [OrderPipe]\n            },] }\n];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OrderModule, OrderPipe };\n//# sourceMappingURL=ngx-order-pipe.js.map\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ITecnologiaInformacaoEstoqueMarcas } from '../models/marcas';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TecnologiaInformacaoEstoqueMarcasService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getMarcas(params?) {\r\n    return this.http.get(\r\n      `${this.API}/tecnologia-informacao/estoque/produtos/marcas`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postMarcas(marca: ITecnologiaInformacaoEstoqueMarcas) {\r\n    return this.http.post(\r\n      `${this.API}/tecnologia-informacao/estoque/produtos/marcas`,\r\n      marca,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IAdminSubModulo } from '../models/submodulo';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminSubModulosService {\r\n\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSubModulos(submodulo = {}) {\r\n    return this.http.get<IAdminSubModulo[]>(`${this.API}/core/submodulos`, {\r\n      params: submodulo,\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getSubModulo(id: any) {\r\n    return this.http.get<IAdminSubModulo[]>(`${this.API}/core/submodulos/${id}`, {\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  postSubModulo(subModulo) {\r\n    return this.http.post<IAdminSubModulo>(`${this.API}/core/submodulos`,\r\n      subModulo,\r\n      { observe: \"response\" }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaDashboardConferenciaCteService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getConferencia(params?) {\r\n    return this.http.get(`${this.API}/logistica/indicadores/conferencia-cte`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getRelatorio(params){\r\n    return this.http.get(`${this.API}/logistica/indicadores/conferencia-cte/relatorio`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaYmsTiposCircuito } from '../models/tipos-circuito';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaYmsTiposCircuitoService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getTiposCircuito(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/circuitos/tipo`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postTiposCircuito(tipo: ILogisticaYmsTiposCircuito) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/yms/circuitos/tipo`,\r\n      tipo,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaDashboardsAnaliseFreteService {\r\n\r\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getIndicadores(params){\r\n    return this.http.get(`${this.API}/logistica/dashboards/analise-frete`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  getRotulos(params?){\r\n    return this.http.get(`${this.API}/logistica/dashboards/analise-frete/rotulos`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { MotivoAssociacao } from './models/motivo-associacao';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosMotivoAssociacaoService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/motivo-associacao`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaMotivosAssociacao(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codMotivoAssociacao: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codMotivoAssociacao}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codMotivoAssociacao: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codMotivoAssociacao}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveMotivoAssociacao(motivoAssociacao: MotivoAssociacao) {\r\n    return this.http.post(`${this.API}/salvar`, motivoAssociacao).pipe(take(1));\r\n  }\r\n\r\n  private updateMotivoAssociacao(motivoAssociacao: MotivoAssociacao) {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, motivoAssociacao)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  save(motivoAssociacao: MotivoAssociacao): Observable<any> {\r\n    if (motivoAssociacao.codMotivoAssociacao !== null) {\r\n      return this.updateMotivoAssociacao(motivoAssociacao);\r\n    }\r\n\r\n    return this.saveMotivoAssociacao(motivoAssociacao);\r\n  }\r\n\r\n  activateMotivoAssociacao(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  inactivateMotivoAssociacao(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContatoService {\r\n\r\n  private readonly API = environment.API;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  get(params?) {\r\n    return this.http.get(`${this.API}/servicos/contatos`, {\r\n      observe: \"response\",\r\n      params: params\r\n    })\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ITecnologiaInformacaoTipoItem } from '../models/tipoItem';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TecnologiaInformacaoCadastroTipoItemService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTipoItem(params?) {\r\n    return this.http.get(`${this.API}/tecnologia-informacao/item/tipo-item`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  postTipoItem(tipoItem: ITecnologiaInformacaoTipoItem) {\r\n    return this.http.post(\r\n      `${this.API}/tecnologia-informacao/item/tipo-item`,\r\n      tipoItem,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialGestaoContratosComerciaisService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/gestao/contratos-comerciais`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaContratos(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n   getListaRepresentantes(params: any = []): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n    httpParams = httpParams.append(param, params[param]);    }\r\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n   getDetailPanel(codContrato: number): Observable<Object | JsonResponse> {\r\n    return this.http.get(`${this.API}/detail-panel/${codContrato}`).pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codContrato: number): Observable<Object | JsonResponse> {\r\n    return this.http.get(`${this.API}/detalhes/${codContrato}`).pipe(take(1));\r\n  }\r\n\r\n  aprovaReprovaEndereco(record: any) {\r\n    return this.http\r\n      .put(`${this.API}/aprova-reprova-endereco`, record)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getUltimaCompra(codCliente: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/ultima-compra/${codCliente}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveContrato(record: any): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/save`, record).pipe(take(1));\r\n  }\r\n\r\n  private updateContrato(record: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, record)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  save(record: any, action: string): Observable<Object | JsonResponse> {\r\n\r\n    if (action === 'update') {\r\n\r\n      return this.updateContrato(record);\r\n    }\r\n\r\n    return this.saveContrato(record);\r\n\r\n  }\r\n\r\n  getSituacao(): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/situacao`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getTiposFrete(): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/tipos-frete`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getTipoServico(): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/tipo-servico`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  postAprovacao(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/aprovar`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postReprovacao(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/reprovar`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAnexos(codContrato: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/anexo/documentos/${codContrato}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  postAnexos(params, codContrato: number): Observable<any> {\r\n    return this.http.post(\r\n      `${this.API}/anexo/documentos/salvar?codContrato=${codContrato}`,\r\n      params\r\n    ).pipe(take(1));\r\n  }\r\n\r\n  deleteAnexo(codAnexo: number): Observable<any> {\r\n    let params = {\r\n      codAnexo: codAnexo,\r\n    };\r\n\r\n    return this.http\r\n      .put(`${this.API}/anexo/documentos/excluir`, params)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\n\r\n// Components\r\nimport { NotFoundComponent } from './not-found.component';\r\n\r\n@NgModule({\r\n  declarations: [NotFoundComponent],\r\n  imports: [CommonModule, SharedModule],\r\n  exports: [NotFoundComponent]\r\n})\r\nexport class NotFoundModule {}\r\n","import { is } from \"../core/Registry\";\r\nvar theme = function (object) {\r\n    if (is(object, \"SpriteState\")) {\r\n        object.transitionDuration = 400;\r\n    }\r\n    if (is(object, \"Component\")) {\r\n        object.rangeChangeDuration = 500;\r\n        object.interpolationDuration = 500;\r\n        object.sequencedInterpolation = false;\r\n        if (is(object, \"SankeyDiagram\")) {\r\n            object.sequencedInterpolation = true;\r\n        }\r\n        if (is(object, \"FunnelSeries\")) {\r\n            object.sequencedInterpolation = true;\r\n        }\r\n    }\r\n    if (is(object, \"Chart\")) {\r\n        object.defaultState.transitionDuration = 2000;\r\n        object.hiddenState.transitionDuration = 1000;\r\n    }\r\n    if (is(object, \"Tooltip\")) {\r\n        object.animationDuration = 400;\r\n        object.defaultState.transitionDuration = 400;\r\n        object.hiddenState.transitionDuration = 400;\r\n    }\r\n    if (is(object, \"Scrollbar\")) {\r\n        object.animationDuration = 500;\r\n    }\r\n    if (is(object, \"Series\")) {\r\n        object.defaultState.transitionDuration = 1000;\r\n        object.hiddenState.transitionDuration = 700;\r\n        object.hiddenState.properties.opacity = 1;\r\n        object.showOnInit = true;\r\n    }\r\n    if (is(object, \"MapSeries\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n    if (is(object, \"PercentSeries\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n    if (is(object, \"FunnelSlice\")) {\r\n        object.defaultState.transitionDuration = 800;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Slice\")) {\r\n        object.defaultState.transitionDuration = 700;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Preloader\")) {\r\n        object.hiddenState.transitionDuration = 2000;\r\n    }\r\n    if (is(object, \"Column\")) {\r\n        object.defaultState.transitionDuration = 700;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Column3D\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n};\r\nexport default theme;\r\n//# sourceMappingURL=animated.js.map","import { is } from \"../core/Registry\";\r\nimport { color } from \"../core/utils/Color\";\r\nvar theme = function (object) {\r\n    if (is(object, \"ColorSet\")) {\r\n        object.list = [\r\n            color(\"#F44336\"),\r\n            color(\"#E91E63\"),\r\n            color(\"#9C27B0\"),\r\n            color(\"#673AB7\"),\r\n            color(\"#3F51B5\"),\r\n            color(\"#2196F3\"),\r\n            color(\"#03A9F4\"),\r\n            color(\"#00BCD4\"),\r\n            color(\"#009688\"),\r\n            color(\"#4CAF50\"),\r\n            color(\"#8BC34A\"),\r\n            color(\"#CDDC39\"),\r\n            color(\"#FFEB3B\"),\r\n            color(\"#FFC107\"),\r\n            color(\"#FF9800\"),\r\n            color(\"#FF5722\"),\r\n            color(\"#795548\"),\r\n            color(\"#9E9E9E\"),\r\n            color(\"#607D8B\")\r\n        ];\r\n        object.minLightness = 0.2;\r\n        object.maxLightness = 0.7;\r\n        object.reuse = true;\r\n    }\r\n    if (is(object, \"ResizeButton\")) {\r\n        object.background.cornerRadiusTopLeft = 20;\r\n        object.background.cornerRadiusTopRight = 20;\r\n        object.background.cornerRadiusBottomLeft = 20;\r\n        object.background.cornerRadiusBottomRight = 20;\r\n    }\r\n    if (is(object, \"Tooltip\")) {\r\n        object.animationDuration = 800;\r\n    }\r\n};\r\nexport default theme;\r\n//# sourceMappingURL=material.js.map","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaYmsTiposSetor } from '../models/tipos-setor';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaYmsTiposSetorService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getTiposSetor(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/setores/tipo`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getTipo(id: string) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/setores/tipo/${id}`,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postTiposSetor(tipo: ILogisticaYmsTiposSetor) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/yms/setores/tipo`,\r\n      tipo,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { JsonResponse } from 'src/app/models/json-response';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { TipoComissionamento } from './models/tipo-comissionamento';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosTipoComissionamentoService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/tipo-comissionamento`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getTipoComissionamento(params?: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codTipoComissionamento: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codTipoComissionamento}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codTipoComissionamento: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codTipoComissionamento}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetailTipoComissionamento(codTipoComissionamento: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/faixa-percentual/${codTipoComissionamento}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getFilterValues(): Observable<Object | JsonResponse> {\r\n    let linhas = this.getLinhas();\r\n    let classes = this.getClasses(null);\r\n\r\n    return forkJoin([\r\n      linhas,\r\n      classes,\r\n    ]).pipe(take(1));\r\n  }\r\n\r\n\r\n  getLinhas(): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/linhas`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveTipoComissionamento(codTipoComissionamento) {\r\n    return this.http.post(`${this.API}/salvar`, codTipoComissionamento).pipe(take(1));\r\n  }\r\n\r\n  private updateTipoComissionamento(codTipoComissionamento) {\r\n    return this.http.put(`${this.API}/atualizar`, codTipoComissionamento).pipe(take(1));\r\n  }\r\n\r\n  save(codTipoComissionamento): Observable<any> {\r\n    if (codTipoComissionamento.codTipoComissionamento !== null) {\r\n      return this.updateTipoComissionamento(codTipoComissionamento);\r\n    }\r\n\r\n    return this.saveTipoComissionamento(codTipoComissionamento);\r\n  }\r\n\r\n  deleteFaixa(params: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/delete`, params)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  activateTipoComissionamento(codTipoComissionamento: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codTipoComissionamento).pipe(take(1));\r\n  }\r\n\r\n  inactivateTipoComissionamento(codTipoComissionamento: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codTipoComissionamento).pipe(take(1));\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaYmsTiposEtapa } from '../models/tipos-etapa';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaYmsTiposEtapaService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getTiposEtapa(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/etapas/tipo`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getTipo(id: string) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/etapas/tipo/${id}`,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postTiposEtapa(tipo: ILogisticaYmsTiposEtapa) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/yms/etapas/tipo`,\r\n      tipo,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { ILogisticaYmsTiposCircuito } from './../../tipos-circuito/models/tipos-circuito';\r\n//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaYmsSetores } from '../models/setores';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaYmsSetoresService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getSetores(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/setores`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getSetor(id: string) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/setores/${id}`,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postSetores(setores: ILogisticaYmsSetores) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/yms/setores`,\r\n      setores,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  postIntervalos(params: ILogisticaYmsTiposCircuito) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/yms/setores/intervalos`,\r\n      params,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getIntervalos(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/setores/intervalos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getMateriaisAssociados(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/setores/materiais`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getMateriais(params?) {\r\n    return this.http.get(\r\n      `${this.API}/common/v2/materiais`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  deleteAssociacoes(params) {\r\n    return this.http.delete(\r\n      `${this.API}/logistica/yms/setores/materiais`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  postMateriaisAssociados(associacao) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/yms/setores/materiais`,\r\n      associacao,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaTipoMotoristaService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTipoMotoristas(params?) {\r\n    return this.http.get(`${this.API}/logistica/tipo-motorista`, {\r\n      params: params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  postTipoMotorista(params) {\r\n    return this.http.post(`${this.API}/logistica/tipo-motorista`, params, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IComercialAknaMensagens } from './models/mensagens';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialAknaMensagensService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n  getMensagens(params?) {\r\n    return this.http.get(\r\n      `${this.API}/comercial/integracoes/akna/lista-mensagens`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  postMensagens(mensagens: IComercialAknaMensagens) {\r\n    return this.http.post(`${this.API}/comercial/akna/mensagens`, mensagens, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ILogisticaYmsCircuitos } from '../models/circuitos';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogisticaYmsCircuitosService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getCircuitos(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/circuitos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getCircuito(id: number) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/circuitos/${id}`,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  postCircuitos(circuitos: ILogisticaYmsCircuitos) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/yms/circuitos`,\r\n      circuitos,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getEtapasAssociados(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/circuitos/etapas`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getEtapas(params?) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/yms/etapas`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  deleteAssociacoes(params) {\r\n    return this.http.delete(\r\n      `${this.API}/logistica/yms/circuitos/etapas`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  postEtapasAssociados(associacao) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/yms/circuitos/etapas`,\r\n      associacao,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n"]}