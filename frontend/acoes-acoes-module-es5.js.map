{"version":3,"sources":["webpack:///src/app/modules/comercial/akna/acoes/acoes-routing.module.ts","webpack:///src/app/modules/comercial/akna/acoes/formulario/formulario.component.html","webpack:///src/app/modules/comercial/akna/acoes/acoes.service.ts","webpack:///src/app/modules/comercial/akna/acoes/lista/lista.component.scss","webpack:///src/app/modules/comercial/akna/acoes/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/akna/acoes/lista/lista.component.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/akna/acoes/lista/lista.component.html","webpack:///src/app/modules/comercial/akna/acoes/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/akna/acoes/acoes.module.ts"],"names":["routes","path","component","ComercialAknaAcoesRoutingModule","imports","forChild","exports","ComercialAknaAcoesService","http","API","params","get","observe","acoes","post","providedIn","ComercialAknaAcoesListaComponent","router","pnotify","activatedRoute","acaoService","formBuilder","routerService","mensagemService","dateService","detailPanelService","totalItens","noVinculo","loading","loadingNavBar","loadingMensagens","mensagens","tableConfig","subtitleBorder","showDetailPanel","tipos","cod","nome","subtitles","id","text","color","itemsPerPage","totalItems","currentPage","buildForm","setBreadCrumb","onActivatedRoute","getAcoes","getMensagens","onDetailPanelEmitter","$activatedRouteSubscription","unsubscribe","queryParams","subscribe","response","_response","getBase64UrlParams","form","patchValue","hasOwnProperty","TT_REGI_PAGI","showDetailPanelSubscription","config","event","showing","reset","PAGI","TIME","Date","getTime","group","TITULO","onFilter","snapshot","idSubModulo","breadCrumbTree","descricao","routerLink","hide","setValue","navigate","relativeTo","setBase64UrlParams","getParams","acao","show","acaoSelecionado","loadedFinished","setTimeout","pipe","next","status","body","noResult","error","page","_params","_obj","value","prop","convertToUrlDate","borderClass","IN_STAT","selector","template","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","ComercialAknaAcoesFormularioComponent","acoesService","titleService","atividadesService","formData","loadingContatos","contatos","MASKS","registrarAcesso","setFormBuilder","appTitle","setTitle","required","CONTATO","DS_OBSE","postAcoes","success","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","ComercialAknaAcoesModule","declarations","forRoot","providers","provide","useValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAGA;;;AAIA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACED,YAAI,EAAE,MADR;AAEEC,iBAAS,EAAE;AAFb,OALqB,EASrB;AACED,YAAI,EAAE,KADR;AAEEC,iBAAS,EAAE;AAFb,OATqB,CAAvB;;UAmBaC,+BAA+B;AAAA;AAAA,O;;AAA/BA,qCAA+B,6DAJ3C,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI2C,GAA/BH,+BAA+B,CAA/B;;;;;;;;;;;;;;;;AC1Bb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCEf;;;UAQaI,yBAAyB;AAGpC,2CAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFH,eAAAC,GAAA,GAAM,yEAAYA,GAAlB;AAEuB;;AAHJ;AAAA;AAAA,mCAI3BC,MAJ2B,EAIlB;AAChB,mBAAO,KAAKF,IAAL,CAAUG,GAAV,WAAiB,KAAKF,GAAtB,8CAAoE;AACzEC,oBAAM,EAAEA,MADiE;AAEzEE,qBAAO,EAAE;AAFgE,aAApE,CAAP;AAID;AATmC;AAAA;AAAA,oCAW1BC,KAX0B,EAWX;AACvB,mBAAO,KAAKL,IAAL,CAAUM,IAAV,WAAkB,KAAKL,GAAvB,4BAAmDI,KAAnD,EAA0D;AAC/DD,qBAAO,EAAE;AADsD,aAA1D,CAAP;AAGD;AAfmC;;AAAA;AAAA,S;;;;gBAN7B;;;;AAMIL,+BAAyB,6DAHrC,iEAAW;AACVQ,kBAAU,EAAE;AADF,OAAX,CAGqC,E,+EAGV,+D,EAHU,GAAzBR,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACVb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCMf;AAKA;AAIA;;;UAeaS,gCAAgC;AAoD3C;AAEA,kDACUC,MADV,EAEUC,OAFV,EAGUC,cAHV,EAIUC,WAJV,EAKUC,WALV,EAMUC,aANV,EAOUC,eAPV,EAQUC,WARV,EASUC,kBATV,EASgD;AAAA;;AARtC,eAAAR,MAAA,GAAAA,MAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AA5DV,eAAAC,UAAA,GAAkB,EAAlB;AAEA,eAAAC,SAAA,GAAY,IAAZ;AACA,eAAAC,OAAA,GAAU,IAAV,CAyDgD,CAzDhC;;AAChB,eAAAC,aAAA,GAAgB,KAAhB,CAwDgD,CAxDzB;;AACvB,eAAAC,gBAAA,GAAmB,KAAnB;AAGA,eAAAC,SAAA,GAAuC,EAAvC;AAIA,eAAAC,WAAA,GAA0C;AAAEC,0BAAc,EAAE;AAAlB,WAA1C;AAIA,eAAAC,eAAA,GAAkB,KAAlB,CA4CgD,CAxChD;;AACA,eAAAC,KAAA,GAAQ,CACN;AACEC,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WADM,EAKN;AACED,eAAG,EAAE,GADP;AAEEC,gBAAI,EAAE;AAFR,WALM,CAAR;AAWA,eAAAC,SAAA,GAA8B,CAC5B;AACEC,cAAE,EAAE,CADN;AAEEC,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACEF,cAAE,EAAE,CADN;AAEEC,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA;;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AAaI;;AAhEuC;AAAA;AAAA,qCAkEhC;AACT,iBAAKC,SAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,gBAAL;AACA,iBAAKC,QAAL;AACA,iBAAKC,YAAL;AACA,iBAAKC,oBAAL;AACD;AAzE0C;AAAA;AAAA,wCA2E7B;AACZ,iBAAKC,2BAAL,CAAiCC,WAAjC;AACD;AA7E0C;AAAA;AAAA,6CA+ExB;AAAA;;AACjB,iBAAKD,2BAAL,GACE,KAAKhC,cAAL,CAAoBkC,WAApB,CAAgCC,SAAhC,CAA0C,UAACC,QAAD,EAAc;AACtD,kBAAMC,SAAS,GAAG,KAAI,CAAClC,aAAL,CAAmBmC,kBAAnB,CAAsCF,QAAtC,CAAlB;;AACA,mBAAI,CAACG,IAAL,CAAUC,UAAV,CAAqBH,SAArB;;AACA,kBAAIA,SAAS,CAACI,cAAV,CAAyB,cAAzB,CAAJ,EACE,KAAI,CAAClB,YAAL,GAAoBc,SAAS,CAACK,YAA9B;AACH,aALD,CADF;AAOD;AAvF0C;AAAA;AAAA,iDAyFvB;AAAA;;AAClB,iBAAKC,2BAAL,GAAmC,KAAKrC,kBAAL,CAAwBsC,MAAxB,CAA+BT,SAA/B,CACjC,UAACU,KAAD,EAAgB;AACd,oBAAI,CAAC9B,eAAL,GAAuB8B,KAAK,CAACC,OAA7B;AACD,aAHgC,CAAnC;AAKD;AA/F0C;AAAA;AAAA,oCAiGjC;AACR,iBAAKP,IAAL,CAAUQ,KAAV;AACA,iBAAKR,IAAL,CAAUC,UAAV,CAAqB;AACnBQ,kBAAI,EAAE,CADa;AAEnBN,0BAAY,EAAE,GAFK;AAGnBO,kBAAI,EAAE,CAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAD;AAHa,aAArB;AAKD;AAxG0C;AAAA;AAAA,sCA0G/B;AACV,iBAAKZ,IAAL,GAAY,KAAKrC,WAAL,CAAiBkD,KAAjB,CAAuB;AACjCC,oBAAM,EAAE,CAAC,IAAD,CADyB;AAEjCL,kBAAI,EAAE,CAAC,CAAD,CAF2B;AAGjCN,0BAAY,EAAE,CAAC,KAAKnB,YAAN,CAHmB;AAIjC0B,kBAAI,EAAE,CAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAD;AAJ2B,aAAvB,CAAZ;AAMD;AAjH0C;AAAA;AAAA,2CAmH1B5B,YAnH0B,EAmHZ;AAC7B,iBAAKA,YAAL,GAAoBA,YAApB;AACA,iBAAK+B,QAAL;AACD;AAtH0C;AAAA;AAAA,0CAwH3B;AACd,gBAAMlC,EAAE,GAAG,KAAKpB,cAAL,CAAoBuD,QAApB,CAA6BhE,MAA7B,CAAoCiE,WAA/C;AACA,iBAAKC,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU;AAFZ,aADoB,EAKpB;AACED,uBAAS,EAAE,MADb;AAEEC,wBAAU,4BAAqBvC,EAArB;AAFZ,aALoB,EASpB;AACEsC,uBAAS,EAAE;AADb,aAToB,CAAtB;AAaD;AAvI0C;AAAA;AAAA,qCAyIhC;AACT,iBAAKpD,kBAAL,CAAwBsD,IAAxB;AACA,iBAAKrB,IAAL,CAAU/C,GAAV,CAAc,MAAd,EAAsBqE,QAAtB,CAA+B,IAAIX,IAAJ,GAAWC,OAAX,EAA/B;AACA,iBAAKrD,MAAL,CAAYgE,QAAZ,CAAqB,EAArB,EAAyB;AACvBC,wBAAU,EAAE,KAAK/D,cADM;AAEvBkC,yBAAW,EAAE,KAAK/B,aAAL,CAAmB6D,kBAAnB,CAAsC,KAAKC,SAAL,EAAtC;AAFU,aAAzB;AAID;AAhJ0C;AAAA;AAAA,oCAkJjCC,IAlJiC,EAkJrB;AAAA;;AACpB,iBAAKxD,aAAL,GAAqB,IAArB;AACA,iBAAKJ,kBAAL,CAAwB6D,IAAxB;AACA,iBAAKC,eAAL,GAAuBF,IAAvB;AACA,iBAAK5D,kBAAL,CAAwB+D,cAAxB,CAAuC,KAAvC;AAEAC,sBAAU,CAAC,YAAM;AACf,oBAAI,CAAC5D,aAAL,GAAqB,KAArB;AACD,aAFS,EAEP,GAFO,CAAV;AAGD;AA3J0C;AAAA;AAAA,uCA6J9BnB,MA7J8B,EA6JrB;AAAA;;AACpB,iBAAKoB,gBAAL,GAAwB,IAAxB;AACA,iBAAKP,eAAL,CACG0B,YADH,CACgBvC,MADhB,EAEGgF,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC5D,gBAAL,GAAwB,KAAxB;AACA,oBAAI,CAACD,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGyB,SARH,CAQa;AACTqC,kBAAI,EAAE,cAACpC,QAAD,EAAuD;AAC3D,oBAAIA,QAAQ,CAACqC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,wBAAI,CAAC7D,SAAL,GAAiBwB,QAAQ,CAACsC,IAA1B;AACA,wBAAI,CAACjE,OAAL,GAAe,KAAf;AACD,iBAHD,MAGO;AACL,wBAAI,CAACkE,QAAL,GAAgB,IAAhB;AACA,wBAAI,CAAC/D,SAAL,GAAiB,EAAjB;AACA,wBAAI,CAACd,MAAL,CAAYgE,QAAZ,CAAqB,KAArB;AACD;AACF,eAVQ;AAWTc,mBAAK,EAAE,eAACA,MAAD,EAAW;AAChB,sBAAI,CAAC7E,OAAL,CAAa6E,KAAb;;AACA,sBAAI,CAACD,QAAL,GAAgB,IAAhB;AACD;AAdQ,aARb;AAwBD;AAvL0C;AAAA;AAAA,mCAyLlCpF,MAzLkC,EAyLzB;AAAA;;AAChB,iBAAKkB,OAAL,GAAe,IAAf;AACA,iBAAKR,WAAL,CACG4B,QADH,CACYtC,MADZ,EAEGgF,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC9D,OAAL,GAAe,KAAf;AACA,oBAAI,CAACC,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGyB,SARH,CAQa;AACTqC,kBAAI,EAAE,cAACpC,QAAD,EAAmB;AACvB,oBAAIA,QAAQ,CAACqC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,wBAAI,CAAC/E,KAAL,GAAa0C,QAAQ,CAACsC,IAAT,CAAc,MAAd,CAAb;AACA,wBAAI,CAAClD,UAAL,GAAkBY,QAAQ,CAACsC,IAAT,CAAc,OAAd,CAAlB;AACA,wBAAI,CAACC,QAAL,GAAgB,KAAhB;AACD,iBAJD,MAIO;AACL,wBAAI,CAACA,QAAL,GAAgB,IAAhB;AACA,wBAAI,CAACjF,KAAL,GAAa,EAAb;AACD;AACF,eAVQ;AAWTkF,mBAAK,EAAE,eAACA,OAAD,EAAW;AAChB,sBAAI,CAAC7E,OAAL,CAAa6E,KAAb;;AACA,sBAAI,CAACD,QAAL,GAAgB,IAAhB;AACD;AAdQ,aARb;AAwBD;AAnN0C;AAAA;AAAA,uCAqN9BT,IArN8B,EAqNhB;AACzB,iBAAKpE,MAAL,CAAYgE,QAAZ,CAAqB,CAAC,aAAD,CAArB,EAAsC;AACpCC,wBAAU,EAAE,KAAK/D,cADmB;AAEpCkC,yBAAW,EAAE,KAAK/B,aAAL,CAAmB6D,kBAAnB,CAAsCE,IAAtC;AAFuB,aAAtC;AAID;AA1N0C;AAAA;AAAA,wCA4N7BrB,KA5N6B,EA4NtB;AACnB,iBAAKN,IAAL,CAAU/C,GAAV,CAAc,MAAd,EAAsBqE,QAAtB,CAA+BhB,KAAK,CAACgC,IAArC;AACA,iBAAKvB,QAAL;AACD;AA/N0C;AAAA;AAAA,sCAiO/B;AACV,gBAAIwB,OAAO,GAAG,EAAd;AACA,gBAAIC,IAAI,GAAG,KAAKxC,IAAL,CAAUyC,KAArB;;AAEA,iBAAK,IAAIC,IAAT,IAAiBF,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACE,IAAD,CAAR,EAAgB;AACd,oBAAIF,IAAI,CAACE,IAAD,CAAJ,YAAsB/B,IAA1B,EACE4B,OAAO,CAACG,IAAD,CAAP,GAAgB,KAAK5E,WAAL,CAAiB6E,gBAAjB,CAAkCH,IAAI,CAACE,IAAD,CAAtC,CAAhB,CADF,KAEKH,OAAO,CAACG,IAAD,CAAP,GAAgBF,IAAI,CAACE,IAAD,CAApB;AACN;AACF;;AAED,mBAAOH,OAAP;AACD;AA9O0C;AAAA;AAAA,4CAgPzBZ,IAhPyB,EAgPb;AAC5B,gBAAIiB,WAAJ;;AAEA,gBAAIjB,IAAI,CAACkB,OAAL,IAAgB,GAApB,EAAyB;AACvBD,yBAAW,GAAG,gBAAd;AACD,aAFD,MAEO,IAAIjB,IAAI,CAACkB,OAAL,IAAgB,GAApB,EAAyB;AAC9BD,yBAAW,GAAG,eAAd;AACD,aAFM,MAEA,IAAIjB,IAAI,CAACkB,OAAL,IAAgB,GAApB,EAAyB;AAC9BD,yBAAW,GAAG,gBAAd;AACD,aAFM,MAEA,IAAIjB,IAAI,CAACkB,OAAL,IAAgB,GAApB,EAAyB;AAC9BD,yBAAW,GAAG,gBAAd;AACD;;AACD,mBAAOA,WAAP;AACD;AA7P0C;;AAAA;AAAA,S;;;;gBAtBpC;;gBAIA;;gBAJQ;;gBANR;;gBAOW;;gBAIX;;gBAbA;;gBAsBA;;gBAjBA;;;;AAyBItF,sCAAgC,6DAL5C,gEAAU;AACTwF,gBAAQ,EAAE,4BADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAK4C,E,+EAuDzB,sD,EACC,2F,EACO,8D,EACH,wE,EACA,0D,EACE,0F,EACE,0F,EACJ,sF,EACO,qG,EA/Da,GAAhCzF,gCAAgC,CAAhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCzBA0F,WAAW;;;;AACtB,eAAAC,MAAA,GAAwB,CACtB,OADsB,EAEtB,SAFsB,EAGtB,QAHsB,EAItB,OAJsB,EAKtB,MALsB,EAMtB,OANsB,EAOtB,OAPsB,EAQtB,QARsB,EAStB,YATsB,EAUtB,SAVsB,EAWtB,WAXsB,EAYtB,WAZsB,CAAxB;AAeA,eAAAC,KAAA,GAAuB,CACrB,SADqB,EAErB,OAFqB,EAGrB,QAHqB,EAIrB,WAJqB,EAKrB,QALqB,EAMrB,SANqB,EAOrB,QAPqB,CAAvB;AAsMD;;AAtNuB;AAAA;AAAA,kCA0BdC,KA1Bc,EA0BDC,KA1BC,EA0BU;AAC9B,mBACED,KAAK,CAACE,WAAN,OAAwBD,KAAK,CAACC,WAAN,EAAxB,IACAF,KAAK,CAACG,QAAN,OAAqBF,KAAK,CAACE,QAAN,EADrB,IAEAH,KAAK,CAACI,OAAN,OAAoBH,KAAK,CAACG,OAAN,EAHtB;AAKD;AAhCqB;AAAA;AAAA,wCAkCRC,IAlCQ,EAkCE;AACtB,gBAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAL,EAAjB;AACA,gBAAMC,UAAU,GAAGF,IAAI,CAACE,UAAL,EAAnB;AACA,gBAAIC,KAAJ,EAAgBC,OAAhB;;AAEA,gBAAIH,QAAQ,GAAG,EAAf,EAAmB;AACjBE,mBAAK,cAAOF,QAAP,CAAL;AACD,aAFD,MAEO;AACLE,mBAAK,GAAGF,QAAR;AACD;;AAED,gBAAIC,UAAU,GAAG,EAAjB,EAAqB;AACnBE,qBAAO,cAAOF,UAAP,CAAP;AACD,aAFD,MAEO;AACLE,qBAAO,GAAGF,UAAV;AACD;;AAED,6BAAUC,KAAV,cAAmBC,OAAnB;AACD;AApDqB;AAAA;AAAA,sCAsDVT,KAtDU,EAsDGC,KAtDH,EAsDyC;AAAA,gBAAxBS,QAAwB,uEAAJ,IAAI;AAC7D,gBAAMC,GAAG,GAAGX,KAAK,CAACI,OAAN,EAAZ;AACA,gBAAMQ,OAAO,GAAGZ,KAAK,CAACa,MAAN,EAAhB;AACA,gBAAMC,KAAK,GAAGd,KAAK,CAACG,QAAN,EAAd;AACA,gBAAMY,IAAI,GAAGf,KAAK,CAACE,WAAN,EAAb;AACA,gBAAMc,IAAI,GAAG,KAAKC,aAAL,CAAmBjB,KAAnB,CAAb;;AAEA,gBAAIU,QAAJ,EAAc;AACZ,kBAAIT,KAAJ,EAAW;AACT,oBAAMiB,KAAK,GAAG,KAAKD,aAAL,CAAmBhB,KAAnB,CAAd;AAEA,iCAAU,KAAKF,KAAL,CAAWa,OAAX,CAAV,eAAkCD,GAAlC,iBAA4C,KAAKb,MAAL,CAAYgB,KAAZ,CAA5C,kBAAsEC,IAAtE,qBAAqFC,IAArF,oBAAmGE,KAAnG;AACD;;AAED,+BAAU,KAAKnB,KAAL,CAAWa,OAAX,CAAV,eAAkCD,GAAlC,iBAA4C,KAAKb,MAAL,CAAYgB,KAAZ,CAA5C,kBAAsEC,IAAtE,oBAAoFC,IAApF;AACD,aARD,MAQO;AACL,+BAAU,KAAKjB,KAAL,CAAWa,OAAX,CAAV,eAAkCD,GAAlC,iBAA4C,KAAKb,MAAL,CAAYgB,KAAZ,CAA5C,kBAAsEC,IAAtE;AACD;AACF;AAxEqB;AAAA;AAAA,uCA0ETV,IA1ES,EA0EC;AACrB,mBAAO,KAAKP,MAAL,CAAYO,IAAI,CAACF,QAAL,EAAZ,CAAP;AACD;AA5EqB;AAAA;AAAA,4CA8EP;AACb,gBAAIE,IAAI,GAAG,IAAI7C,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAAS6C,IAAI,CAACH,WAAL,EAAT,EAA6B,CAA7B,EAAgC,CAAhC,CAAP;AACD;AAjFqB;AAAA;AAAA,2CAmFR;AACZ,gBAAIG,IAAI,GAAG,IAAI7C,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAAS6C,IAAI,CAACH,WAAL,EAAT,EAA6B,EAA7B,EAAiC,EAAjC,CAAP;AACD;AAtFqB;AAAA;AAAA,6CAwFN;AACd,gBAAIG,IAAI,GAAG,IAAI7C,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAAS6C,IAAI,CAACH,WAAL,EAAT,EAA6BG,IAAI,CAACF,QAAL,EAA7B,EAA8C,CAA9C,CAAP;AACD;AA3FqB;AAAA;AAAA,4CA6FP;AACb,gBAAIE,IAAI,GAAG,IAAI7C,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAAS6C,IAAI,CAACH,WAAL,EAAT,EAA6BG,IAAI,CAACF,QAAL,KAAkB,CAA/C,EAAkD,CAAlD,CAAP;AACD;AAhGqB;AAAA;AAAA,qCAkGd;AACN,gBAAIE,IAAI,GAAG,IAAI7C,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAAS6C,IAAI,CAACH,WAAL,EAAT,EAA6BG,IAAI,CAACF,QAAL,EAA7B,EAA8CE,IAAI,CAACD,OAAL,EAA9C,CAAP;AACD;AArGqB;AAAA;AAAA,0CAuGNC,IAvGM,EAuGI;AACxB,gBAAMc,CAAC,GAAGd,IAAI,CAACH,WAAL,EAAV;AACA,gBAAIkB,CAAC,GAAQf,IAAI,CAACF,QAAL,KAAkB,CAA/B;AACA,gBAAIkB,CAAC,GAAQhB,IAAI,CAACD,OAAL,EAAb;AACA,gBAAIkB,CAAC,GAAQjB,IAAI,CAACC,QAAL,EAAb;AACA,gBAAIiB,CAAC,GAAQlB,IAAI,CAACE,UAAL,EAAb;AAEA,gBAAIa,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIC,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIC,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIC,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AAEZ,6BAAUJ,CAAV,cAAeC,CAAf,cAAoBC,CAApB,cAAyBC,CAAzB,cAA8BC,CAA9B;AACD;AApHqB;AAAA;AAAA,iDAsHClB,IAtHD,EAsHW;AAC/B,gBAAIc,CAAC,GAAGd,IAAI,CAACH,WAAL,GAAmBsB,QAAnB,EAAR;AACA,gBAAIJ,CAAC,GAAG,CAACf,IAAI,CAACF,QAAL,KAAkB,CAAnB,EAAsBqB,QAAtB,GAAiCC,QAAjC,CAA0C,CAA1C,EAA6C,GAA7C,CAAR;AACA,gBAAIJ,CAAC,GAAGhB,IAAI,CAACD,OAAL,GAAeoB,QAAf,GAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAR;AACA,gBAAIH,CAAC,GAAGjB,IAAI,CAACC,QAAL,GAAgBkB,QAAhB,GAA2BC,QAA3B,CAAoC,CAApC,EAAuC,GAAvC,CAAR;AACA,gBAAIF,CAAC,GAAGlB,IAAI,CAACE,UAAL,GAAkBiB,QAAlB,GAA6BC,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAR;AACA,gBAAIC,CAAC,GAAGrB,IAAI,CAACsB,UAAL,GAAkBH,QAAlB,GAA6BC,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAR;AAEA,6BAAUJ,CAAV,cAAeD,CAAf,cAAoBD,CAApB,cAAyBG,CAAzB,cAA8BC,CAA9B,cAAmCG,CAAnC;AACD;AA/HqB;AAAA;AAAA,2CAiILE,IAjIK,EAiIO;AAC3B,gBAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,kBAAIC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAhB;AAEA,+BAAUD,SAAS,CAAC,CAAD,CAAnB,cAA0BA,SAAS,CAAC,CAAD,CAAnC;AACD;;AAED,mBAAOD,IAAP;AACD;AAzIqB;AAAA;AAAA,2CA2ILvB,IA3IK,EA2IK;AACzB,gBAAIgB,CAAC,GAAQhB,IAAI,CAACD,OAAL,EAAb;AACA,gBAAIgB,CAAC,GAAQf,IAAI,CAACF,QAAL,KAAkB,CAA/B;AACA,gBAAIgB,CAAC,GAAQd,IAAI,CAACH,WAAL,EAAb;AAEA,gBAAImB,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAID,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AAEZ,6BAAUC,CAAV,cAAeD,CAAf,cAAoBD,CAApB;AACD;AApJqB;AAAA;AAAA,8CAsJFY,UAtJE,EAsJeC,QAtJf,EAsJ+B;AACnD,gBAAI3B,IAAJ;;AAEA,gBAAI0B,UAAU,CAACE,OAAX,CAAmB,GAAnB,IAA0B,CAAC,CAA/B,EAAkC;AAChC,kBAAMC,eAAe,GAAGH,UAAU,CAACD,KAAX,CAAiB,GAAjB,CAAxB;AACA,kBAAMK,SAAS,GAAGD,eAAe,CAAC,CAAD,CAAf,CAAmBJ,KAAnB,CAAyB,GAAzB,CAAlB;AACA,kBAAMD,SAAS,GAAGK,eAAe,CAAC,CAAD,CAAf,CAAmBJ,KAAnB,CAAyB,GAAzB,CAAlB;;AAEA,kBAAIE,QAAQ,IAAI,OAAhB,EAAyB;AACvB3B,oBAAI,GAAG,IAAI7C,IAAJ,CACL2E,SAAS,CAAC,CAAD,CADJ,EAELC,QAAQ,CAACD,SAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,SAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,EAILR,SAAS,CAAC,CAAD,CAJJ,EAKLA,SAAS,CAAC,CAAD,CALJ,EAMLA,SAAS,CAAC,CAAD,CANJ,CAAP;AAQD,eATD,MASO,IAAIG,QAAQ,IAAI,KAAhB,EAAuB;AAC5B3B,oBAAI,GAAG,IAAI7C,IAAJ,CACL2E,SAAS,CAAC,CAAD,CADJ,EAELC,QAAQ,CAACD,SAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,SAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,EAILR,SAAS,CAAC,CAAD,CAJJ,EAKLA,SAAS,CAAC,CAAD,CALJ,EAMLA,SAAS,CAAC,CAAD,CANJ,CAAP;AAQD;AACF,aAxBD,MAwBO;AACL,kBAAMM,UAAS,GAAGJ,UAAU,CAACD,KAAX,CAAiB,GAAjB,CAAlB;;AAEA,kBAAIE,QAAQ,IAAI,OAAhB,EAAyB;AACvB3B,oBAAI,GAAG,IAAI7C,IAAJ,CACL2E,UAAS,CAAC,CAAD,CADJ,EAELC,QAAQ,CAACD,UAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,UAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,CAAP;AAKD,eAND,MAMO,IAAIL,QAAQ,IAAI,KAAhB,EAAuB;AAC5B3B,oBAAI,GAAG,IAAI7C,IAAJ,CACL2E,UAAS,CAAC,CAAD,CADJ,EAELC,QAAQ,CAACD,UAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,UAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,CAAP;AAKD;AACF;;AAED,mBAAOhC,IAAP;AACD;AApMqB;AAAA;AAAA,4CAsMJ0B,UAtMI,EAsMaC,QAtMb,EAsM6B;AACjD,gBAAMG,SAAS,GAAGJ,UAAU,CAACD,KAAX,CAAiB,GAAjB,CAAlB;AACA,gBAAIzB,IAAJ;;AAEA,gBAAI2B,QAAQ,IAAI,OAAhB,EAAyB;AACvB3B,kBAAI,aAAM8B,SAAS,CAAC,CAAD,CAAf,cAAsBA,SAAS,CAAC,CAAD,CAA/B,cAAsCA,SAAS,CAAC,CAAD,CAA/C,CAAJ;AACD,aAFD,MAEO,IAAIH,QAAQ,IAAI,KAAhB,EAAuB;AAC5B3B,kBAAI,aAAM8B,SAAS,CAAC,CAAD,CAAf,cAAsBA,SAAS,CAAC,CAAD,CAA/B,cAAsCA,SAAS,CAAC,CAAD,CAA/C,CAAJ;AACD;;AAED,mBAAO9B,IAAP;AACD;AAjNqB;AAAA;AAAA,wCAmNRA,IAnNQ,EAmNIiC,IAnNJ,EAmNgB;AACpC,mBAAO,IAAI9E,IAAJ,CAAS6C,IAAI,CAACkC,OAAL,CAAalC,IAAI,CAACD,OAAL,KAAiBkC,IAA9B,CAAT,CAAP;AACD;AArNqB;;AAAA;AAAA,S;;AAAXzC,iBAAW,6DAHvB,iEAAW;AACV3F,kBAAU,EAAE;AADF,OAAX,CAGuB,GAAX2F,WAAW,CAAX;;;;;;;;;;;;;;;;ACLb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCSf;AAOA;;;UAoBa2C,qCAAqC;AAqBhD;AAEA,uDACUhI,WADV,EAEUH,OAFV,EAGUC,cAHV,EAIUmI,YAJV,EAKUC,YALV,EAMUC,iBANV,EAOUjI,eAPV,EAQUN,MARV,EAQwB;AAAA;;AAPd,eAAAI,WAAA,GAAAA,WAAA;AACA,eAAAH,OAAA,GAAAA,OAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAmI,YAAA,GAAAA,YAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAjI,eAAA,GAAAA,eAAA;AACA,eAAAN,MAAA,GAAAA,MAAA;AA5BV,eAAA2D,cAAA,GAA6B,EAA7B;AAIA,eAAA6E,QAAA,GAA4B,EAA5B,CAwBwB,CArBxB;;AACA,eAAA7H,OAAA,GAAU,KAAV,CAoBwB,CAnBxB;;AACA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,gBAAA,GAAmB,KAAnB;AACA,eAAA4H,eAAA,GAAkB,KAAlB,CAgBwB,CAdxB;;AACA,eAAA7I,KAAA,GAAkB,EAAlB;AACA,eAAAkB,SAAA,GAAuC,EAAvC;AACA,eAAA4H,QAAA,GAAqC,EAArC;AAaO,eAAAC,KAAA,GAAQ,kDAAQA,KAAhB;AADH;;AAhC4C;AAAA;AAAA,qCAmCxC;AACN,iBAAKC,eAAL;AACA,iBAAK/G,aAAL;AACA,iBAAKgH,cAAL;AACA,iBAAK7G,YAAL;AACA,iBAAKF,gBAAL;AACD;AAzC+C;AAAA;AAAA,4CA2CjC;AACb,iBAAKyG,iBAAL,CAAuBK,eAAvB,GAAyCvG,SAAzC;AACD;AA7C+C;AAAA;AAAA,6CA+C7B;AACjB,gBAAM2C,OAAO,GAAG,KAAK9E,cAAL,CAAoBuD,QAApB,CAA6BhE,MAA7C;AACA,gBAAI,CAACuF,OAAO,CAACrC,cAAR,CAAuB,IAAvB,CAAL,EAAmC;AACpC;AAlD+C;AAAA;AAAA,0CAoDnC;AACX,gBAAMrB,EAAE,GAAG,KAAKpB,cAAL,CAAoBuD,QAApB,CAA6BhE,MAA7B,CAAoCiE,WAA/C;AACA,iBAAKoF,QAAL,GAAgB,UAAhB;AACA,iBAAKR,YAAL,CAAkBS,QAAlB,CAA2B,KAAKD,QAAhC;AACA,iBAAKnF,cAAL,GAAsB,CACpB;AACEC,uBAAS,EAAE,MADb;AAEEC,wBAAU,EAAE;AAFd,aADoB,EAKpB;AACED,uBAAS,EAAE,MADb;AAEEC,wBAAU,4BAAqBvC,EAArB;AAFZ,aALoB,EASpB;AACEsC,uBAAS,EAAE,OADb;AAEEC,wBAAU;AAFZ,aAToB,EAapB;AACED,uBAAS,EAAE,KAAKkF;AADlB,aAboB,CAAtB;AAiBD,WAzE+C,CA2EhD;;AA3EgD;AAAA;AAAA,2CA4ElC;AACZ,iBAAKrG,IAAL,GAAY,KAAKrC,WAAL,CAAiBkD,KAAjB,CAAuB;AACjCC,oBAAM,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWyF,QAAZ,CAAP,CADyB;AAEjCC,qBAAO,EAAE,CAAC,IAAD,EAAO,CAAC,2DAAWD,QAAZ,CAAP,CAFwB;AAGjCE,qBAAO,EAAE,CAAC,IAAD;AAHwB,aAAvB,CAAZ;AAKD;AAlF+C;AAAA;AAAA,sCAoFpC;AAAA;;AACV,iBAAKtI,aAAL,GAAqB,IAArB;AACA,iBAAKyH,YAAL,CACGc,SADH,CACa,KAAK1G,IAAL,CAAUyC,KADvB,EAEGT,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC7D,aAAL,GAAqB,KAArB;AACD,aAFD,CAHJ,EAOGyB,SAPH,CAOa;AACTqC,kBAAI,EAAE,cAACpC,QAAD,EAAmB;AACvB,oBAAIA,QAAQ,CAACqC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,wBAAI,CAAClC,IAAL,CAAUQ,KAAV;;AACA,wBAAI,CAAChD,OAAL,CAAamJ,OAAb;;AACA,wBAAI,CAACpJ,MAAL,CAAYgE,QAAZ,CAAqB,CAAC,KAAD,CAArB,EAA8B;AAC5BC,8BAAU,EAAE,MAAI,CAAC/D;AADW,mBAA9B;AAGD,iBAND,MAMO;AACL,wBAAI,CAACD,OAAL,CAAa6E,KAAb;AACD;AACF,eAXQ;AAYTA,mBAAK,EAAE,eAACA,OAAD,EAAgB;AACrB,sBAAI,CAAC7E,OAAL,CAAa6E,KAAb;AACD;AAdQ,aAPb;AAuBD;AA7G+C;AAAA;AAAA,uCA+GnCrF,MA/GmC,EA+G1B;AAAA;;AACpB,iBAAKkB,OAAL,GAAe,IAAf;AACA,iBAAKL,eAAL,CACG0B,YADH,CACgBvC,MADhB,EAEGgF,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAAC9D,OAAL,GAAe,KAAf;AACA,oBAAI,CAACC,aAAL,GAAqB,KAArB;AACD,aAHD,CAHJ,EAQGyB,SARH,CAQa;AACTqC,kBAAI,EAAE,cAACpC,QAAD,EAAuD;AAC3D,oBAAIA,QAAQ,CAACqC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,wBAAI,CAAC7D,SAAL,GAAiBwB,QAAQ,CAACsC,IAA1B;AACA,wBAAI,CAACjE,OAAL,GAAe,KAAf;AACD,iBAHD,MAGO;AACL,wBAAI,CAACkE,QAAL,GAAgB,IAAhB;AACA,wBAAI,CAAC/D,SAAL,GAAiB,EAAjB;AACA,wBAAI,CAACd,MAAL,CAAYgE,QAAZ,CAAqB,KAArB;AACD;AACF,eAVQ;AAWTc,mBAAK,EAAE,eAACA,OAAD,EAAW;AAChB,sBAAI,CAAC7E,OAAL,CAAa6E,KAAb;;AACA,sBAAI,CAACD,QAAL,GAAgB,IAAhB;AACD;AAdQ,aARb;AAwBD,WAzI+C,CA2IhD;;AA3IgD;AAAA;AAAA,uCA4InCwE,KA5ImC,EA4IpB;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AAjJ+C;AAAA;AAAA,yCAmJjCA,KAnJiC,EAmJrB;AACzBA,iBAAK,GAAG,KAAK5G,IAAL,CAAU/C,GAAV,CAAc2J,KAAd,CAAR;AACA,mBAAOA,KAAK,CAAC1E,MAAN,IAAgB,SAAhB,IAA6B0E,KAAK,CAACE,OAA1C;AACD;AAtJ+C;AAAA;AAAA,0CAwJhCF,KAxJgC,EAwJjB;AAC7B,gBAAIL,QAAQ,GAAG,KAAf;AACA,gBAAIQ,WAAW,GAAG,IAAI,2DAAJ,EAAlB;;AAEA,gBAAI,KAAK/G,IAAL,CAAUgH,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA9B,EAAyC;AACvC,kBAAIC,gBAAgB,GAAG,KAAKlH,IAAL,CAAUgH,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA1B,CAAoCF,WAApC,CAAvB;AACAR,sBAAQ,GACNW,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACX,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AArK+C;;AAAA;AAAA,S;;;;gBAfhD;;gBAVO;;gBAMA;;gBAbA;;gBADA;;gBAOA;;gBARA;;gBAegB;;;;AAmBZZ,2CAAqC,6DALjD,iEAAU;AACT7C,gBAAQ,EAAE,iCADD;AAETC,gBAAQ,EAAR,6EAFS;;AAAA,OAAV,CAKiD,E,+EAwBzB,2D,EACJ,2F,EACO,8D,EACF,wE,EACA,gF,EACK,qG,EACF,0F,EACT,sD,EA/B8B,GAArC4C,qCAAqC,CAArC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBb,iFAAmB,kEAAnB;AACA,kFAAa,OAAb,EAAsB,gEAAtB,E,CAEA;AAIA;AAGA;AAKA;AAIA;;UAiCawB,wBAAwB;AAAA;AAAA,O;;AAAxBA,8BAAwB,6DA5BpC,+DAAS;AACRC,oBAAY,EAAE,CACZ,wFADY,EAEZ,uGAFY,CADN;AAKR1K,eAAO,EAAE,CACP,sFADO,EAEP,4DAFO,EAGP,4DAHO,EAIP,2DAJO,EAKP,mEALO,EAMP,oEANO,EAOP,2EAAiB2K,OAAjB,EAPO,EAQP,qEAAcA,OAAd,EARO,EASP,8DAAWA,OAAX,EATO,EAUP,gEAAYA,OAAZ,EAVO,EAWP,6EAAmBA,OAAnB,EAXO,EAYP,6EAZO,EAaP,sFAbO,EAcP,qGAdO,EAeP,kFAfO,EAgBP,0FAhBO,EAiBP,mDAjBO,EAkBP,kEAlBO,EAmBP,qEAnBO,CALD;AA0BRC,iBAAS,EAAE,CAAC,2FAAD,EAAiB;AAAEC,iBAAO,EAAE,uDAAX;AAAsBC,kBAAQ,EAAE;AAAhC,SAAjB;AA1BH,OAAT,CA4BoC,GAAxBL,wBAAwB,CAAxB","file":"acoes-acoes-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//components\nimport { ComercialAknaAcoesListaComponent } from './lista/lista.component';\nimport { ComercialAknaAcoesFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ComercialAknaAcoesListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialAknaAcoesFormularioComponent,\n  },\n  {\n    path: ':id',\n    component: ComercialAknaAcoesFormularioComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialAknaAcoesRoutingModule {}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Cadastro de Nova Ação\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false\\\"\\n    (click)=\\\"postAcoes()\\\"\\n    >\\n    Enviar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\n        <legend>Dados da Ação</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"mensagens\\\">Mensagem</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"mensagens\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingMensagens\\\"\\n              labelForId=\\\"TITULO\\\"\\n              bindLabel=\\\"TITULO\\\"\\n              bindValue=\\\"TITULO\\\"\\n              id=\\\"TITULO\\\"\\n              formControlName=\\\"TITULO\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('TITULO')\\\" message=\\\"Mensagem é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <!-- <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"contatos\\\">Lista de Contatos</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"contatos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingContatos\\\"\\n              labelForId=\\\"CONTATO\\\"\\n              bindLabel=\\\"CONTATO\\\"\\n              bindValue=\\\"CONTATO\\\"\\n              id=\\\"CONTATO\\\"\\n              formControlName=\\\"CONTATO\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('CONTATO')\\\" message=\\\"Lista de Contatos é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div> -->\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\n            <legend>Observação</legend>\\n            <div class=\\\"form-row justify-content-center\\\">\\n              <div class=\\\"form-group col\\\">\\n                <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n                <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n              </div>\\n            </div>\\n            <br>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n</app-body>\";","import { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { IAcoes } from './models/acoes';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialAknaAcoesService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n  getAcoes(params?) {\n    return this.http.get(`${this.API}/comercial/integracoes/akna/lista-acoes`, {\n      params: params,\n      observe: 'response',\n    });\n  }\n\n  postAcoes(acoes: IAcoes) {\n    return this.http.post(`${this.API}/comercial/akna/acoes`, acoes, {\n      observe: 'response',\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FrbmEvYWNvZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2FrbmEvYWNvZXMvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ComercialAknaMensagensService } from './../../mensagens/mensagens.service';\nimport { IComercialAknaMensagens } from './../../mensagens/models/mensagens';\nimport { ComercialAknaAcoesService } from './../acoes.service';\nimport { IAcoes } from './../models/acoes';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\n//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\n// rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n//modelos\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'comercial-akna-acoes-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialAknaAcoesListaComponent implements OnInit, OnDestroy {\n  breadCrumbTree: Array<Breadcrumb>;\n  idSubModulo: number;\n  totalItens: any = [];\n  noResult: boolean;\n  noVinculo = true;\n  loading = true; //Loading FullPage\n  loadingNavBar = false; //Loading do NAVBAR\n  loadingMensagens = false;\n\n  acoes: Array<IAcoes>;\n  mensagens: IComercialAknaMensagens[] = [];\n\n  $activatedRouteSubscription: Subscription;\n\n  tableConfig: Partial<CustomTableConfig> = { subtitleBorder: true };\n  form: FormGroup;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  acaoSelecionado: IAcoes;\n\n  // Tipos de Situação dos Tipos de Items (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '2',\n      nome: 'Inativos',\n    },\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private router: Router,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private acaoService: ComercialAknaAcoesService,\n    private formBuilder: FormBuilder,\n    private routerService: RouterService,\n    private mensagemService: ComercialAknaMensagensService,\n    private dateService: DateService,\n    private detailPanelService: DetailPanelService\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n    this.getAcoes();\n    this.getMensagens();\n    this.onDetailPanelEmitter();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription =\n      this.activatedRoute.queryParams.subscribe((response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n      });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.patchValue({\n      PAGI: 1,\n      TT_REGI_PAGI: 100,\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      TITULO: [null],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/comercial/home`,\n      },\n      {\n        descricao: 'Akna',\n        routerLink: `/comercial/akna/${id}`,\n      },\n      {\n        descricao: 'Ações',\n      },\n    ];\n  }\n\n  onFilter() {\n    this.detailPanelService.hide();\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  onDetails(acao: IAcoes): void {\n    this.loadingNavBar = true;\n    this.detailPanelService.show();\n    this.acaoSelecionado = acao;\n    this.detailPanelService.loadedFinished(false);\n\n    setTimeout(() => {\n      this.loadingNavBar = false;\n    }, 500);\n  }\n\n  getMensagens(params?) {\n    this.loadingMensagens = true;\n    this.mensagemService\n      .getMensagens(params)\n      .pipe(\n        finalize(() => {\n          this.loadingMensagens = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe({\n        next: (response: HttpResponse<IComercialAknaMensagens[]>) => {\n          if (response.status === 200) {\n            this.mensagens = response.body;\n            this.loading = false;\n          } else {\n            this.noResult = true;\n            this.mensagens = [];\n            this.router.navigate['../'];\n          }\n        },\n        error: (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      });\n  }\n\n  getAcoes(params?) {\n    this.loading = true;\n    this.acaoService\n      .getAcoes(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.status === 200) {\n            this.acoes = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.acoes = [];\n          }\n        },\n        error: (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      });\n  }\n\n  openRegister(acao: IAcoes) {\n    this.router.navigate(['../cadastro'], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(acao),\n    });\n  }\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.onFilter();\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  classStatusBorder(acao: IAcoes): string {\n    let borderClass: string;\n\n    if (acao.IN_STAT == '1') {\n      borderClass = 'border-success';\n    } else if (acao.IN_STAT == '2') {\n      borderClass = 'border-danger';\n    } else if (acao.IN_STAT == '3') {\n      borderClass = 'border-warning';\n    } else if (acao.IN_STAT == '4') {\n      borderClass = 'border-primary';\n    }\n    return borderClass;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"AÇÕES\\\">\\n  <button\\n  type=\\\"button\\\"\\n  (click)=\\\"onReset()\\\">\\n  Limpar\\n</button>\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-4 pl-0\\\">\\n              <label for=\\\"mensagens\\\">Mensagem</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"mensagens\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingMensagens\\\"\\n                labelForId=\\\"TITULO\\\"\\n                bindLabel=\\\"TITULO\\\"\\n                bindValue=\\\"TITULO\\\"\\n                id=\\\"TITULO\\\"\\n                formControlName=\\\"TITULO\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-1\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-5': showDetailPanel}\\\">\\n      <div class=\\\"w-100\\\">\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" >ID </th>\\n              <th scope=\\\"col\\\">Código/Nº Série</th>\\n              <th scope=\\\"col\\\"[hidden]=\\\"showDetailPanel\\\">Modelo</th>\\n              <th scope=\\\"col\\\"[hidden]=\\\"showDetailPanel\\\">Tipo do Item</th>\\n              <th scope=\\\"col\\\"[hidden]=\\\"showDetailPanel\\\">Responsável</th>\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let item of item; let i = index\\\"  [class.table-active]=\\\"item?.ID_TECN_INFO_ITEM == acaoSelecionado?.ID_TECN_INFO_ITEM && showDetailPanel\\\">\\n              <td (click)=\\\"onDetails(item)\\\"[ngClass]=\\\"classStatusBorder(item)\\\">\\n              {{item.ID_TECN_INFO_ITEM}}\\n              </td>\\n              <td (click)=\\\"onDetails(item)\\\">{{ item.CD_ITEM }}</td>\\n              <td (click)=\\\"onDetails(item)\\\" [hidden]=\\\"showDetailPanel\\\">{{ item.NM_MODE  | uppercase}}</td>\\n              <td (click)=\\\"onDetails(item)\\\" [hidden]=\\\"showDetailPanel\\\">{{ item.NM_ITEM_TIPO | uppercase }}</td>\\n              <td  *ngIf=\\\"item.NM_USUA != null && item.NM_USUA != ''\\\" (click)=\\\"onDetails(item)\\\" [hidden]=\\\"showDetailPanel\\\">{{ item.NM_USUA | uppercase }}</td>\\n              <td  *ngIf=\\\"item.NM_USUA != null && item.NM_USUA == ''\\\" (click)=\\\"onDetails(item)\\\" [hidden]=\\\"showDetailPanel\\\">NENHUM RESPONSÁVEL</td>\\n              <td  *ngIf=\\\"item.NM_USUA == null && item.NM_CCU != null\\\" (click)=\\\"onDetails(item)\\\" [hidden]=\\\"showDetailPanel\\\">{{ item.NM_CCU | uppercase }}</td>\\n              <td  *ngIf=\\\"item.NM_USUA == null && item.NM_CCU == null\\\" (click)=\\\"onDetails(item)\\\" [hidden]=\\\"showDetailPanel\\\">NENHUM RESPONSÁVEL</td>\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', item.ID_TECN_INFO_ITEM]\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\" Gerar Termo\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onTermo(item)\\\">\\n                    <i class=\\\"text-warning fas fa-file\\\" *ngIf= \\\"item.QT_DOCU > 0 \\\"placement=\\\"right\\\"></i>\\n                    <i class=\\\"text-black fas fa-file\\\" *ngIf=\\\"item.QT_DOCU == 0\\\"  placement=\\\"right\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\"  placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\n                    <i class=\\\"text-{{item.DS_COR_STAT_USUA}} fas fa-user\\\" placement=\\\"right\\\" *ngIf=\\\"item.CD_STAT_USUA == 7 && item.NM_USUA != null\\\"  tooltip=\\\"Responsável {{item.DS_STAT_USUA}}\\\"></i>\\n                    <i class=\\\"text-{{item.DS_COR_STAT_USUA}} fas fa-user\\\" placement=\\\"right\\\" *ngIf=\\\"item.CD_STAT_USUA == 1 && item.NM_USUA != null\\\"  tooltip=\\\"Responsável {{item.DS_STAT_USUA}}\\\"></i>\\n                    <i class=\\\"text-{{item.DS_COR_STAT_USUA}} fas fa-user\\\" placement=\\\"right\\\" *ngIf=\\\"item.CD_STAT_USUA != 1 && item.CD_STAT_USUA != 7 && item.NM_USUA != null \\\" tooltip=\\\"Responsável {{item.DS_STAT_USUA}}\\\"></i>\\n                    <i class=\\\"text-black fas fa-hotel\\\" placement=\\\"right\\\" *ngIf=\\\"item.NM_USUA == null && item.NM_CCU != null\\\" tooltip=\\\"Escritório\\\"></i>\\n                    <i class=\\\"text-black fas fa-times\\\" placement=\\\"right\\\" *ngIf=\\\"item.NM_USUA == null && item.NM_CCU == null\\\" tooltip=\\\"Nenhum Responsável\\\"></i>\\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </div>\\n      <div>\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel>\\n        <tabset>\\n          <!-- <tab heading=\\\"Dados cadastrais\\\">\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n              <div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Nome</label>\\n                    <div *ngIf=\\\"acaoSelecionado?.NM_USUA == null\\\">NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"acaoSelecionado?.NM_USUA == ''\\\" >NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"acaoSelecionado?.NM_USUA != null && acaoSelecionado?.NM_USUA != ''\\\">{{acaoSelecionado?.NR_MATR}} - {{ acaoSelecionado?.NM_USUA | uppercase}}</div>\\n                  </div>\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Código/Nº Série</label>\\n                    <div *ngIf=\\\"acaoSelecionado?.CD_ITEM == null\\\">NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"acaoSelecionado?.CD_ITEM != null\\\">{{ acaoSelecionado?.CD_ITEM}}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Centro de Custo</label>\\n                    <div *ngIf=\\\"acaoSelecionado?.CD_CCU == null\\\">NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"acaoSelecionado?.CD_CCU != null\\\"> {{acaoSelecionado?.CD_CCU}} - {{ acaoSelecionado?.NM_CCU | uppercase}}</div>\\n                  </div>\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Valor</label>\\n                    <div *ngIf=\\\"acaoSelecionado?.VL_ITEM == null\\\">NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"acaoSelecionado?.VL_ITEM != null\\\">{{ acaoSelecionado?.VL_ITEM }}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Tipo de Item</label>\\n                    <div *ngIf=\\\"acaoSelecionado?.ID_TECN_INFO_ITEM_TIPO == null\\\">NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"acaoSelecionado?.ID_TECN_INFO_ITEM_TIPO != null\\\">{{ acaoSelecionado?.NM_ITEM_TIPO | uppercase}}</div>\\n                  </div>\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Modelo do Item</label>\\n                    <div *ngIf=\\\"acaoSelecionado?.ID_TECN_INFO_ITEM_MODE == null\\\">NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"acaoSelecionado?.ID_TECN_INFO_ITEM_MODE != null\\\">{{ acaoSelecionado?.NM_MODE | uppercase}}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Contrato</label>\\n                    <div *ngIf=\\\"acaoSelecionado?.ID_TECN_INFO_CONT == null \\\">NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"acaoSelecionado?.ID_TECN_INFO_CONT != null \\\">{{ acaoSelecionado?.DS_CONT | uppercase}}</div>\\n                  </div>\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>OBSERVAÇÃO</label>\\n                    <div *ngIf=\\\"acaoSelecionado?.DS_OBSE == null \\\">NÃO INFORMADO</div>\\n                    <div *ngIf=\\\"acaoSelecionado?.DS_OBSE != null \\\">{{ acaoSelecionado?.DS_OBSE | uppercase}}</div>\\n                  </div>\\n                </div><hr>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Usuário Responsável Pelo Cadastro</label>\\n                    <div>{{ acaoSelecionado?.NM_USUA_CADA | uppercase}}</div>\\n                  </div>\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Data do Cadastro</label>\\n                    <div>{{ acaoSelecionado?.DT_INCL | date: 'dd/MM/yyyy' }}</div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"mb-3\\\" *ngIf=\\\"dadosCadastraisLoaded && dadosCadastraisEmpty\\\">\\n                <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n              </div>\\n            </div>\\n          </tab> -->\\n        </tabset>\\n      </detail-panel>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","import { IComercialAknaContatos } from './../../contatos/models/contatos';\nimport { IComercialAknaMensagens } from './../../mensagens/models/mensagens';\nimport { ComercialAknaMensagensService } from './../../mensagens/mensagens.service';\nimport { TitleService } from './../../../../../shared/services/core/title.service';\nimport { ComercialAknaAcoesService } from './../acoes.service';\nimport { IAcoes } from './../models/acoes';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\nimport { utilsBr } from 'js-brasil';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n//Services\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//Bootstrap\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n//Angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//interfaces\n//rxjs\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'comercial-akna-acoes-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialAknaAcoesFormularioComponent implements OnInit {\n  noResult: boolean;\n  $activatedRouteSubscription: Subscription;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  modalRef: BsModalRef;\n  formData: Array<FormData> = [];\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  //loading\n  loading = false;\n  // loadingMoeda: boolean;\n  loadingNavBar = false;\n  loadingMensagens = false;\n  loadingContatos = false;\n\n  //Interfaces\n  acoes: IAcoes[] = [];\n  mensagens: IComercialAknaMensagens[] = [];\n  contatos: IComercialAknaContatos[] = [];\n  // tipoMoeda = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private acoesService: ComercialAknaAcoesService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n    private mensagemService: ComercialAknaMensagensService,\n    private router: Router\n  ) {}\n  public MASKS = utilsBr.MASKS;\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.getMensagens();\n    this.onActivatedRoute();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onActivatedRoute() {\n    const _params = this.activatedRoute.snapshot.params;\n    if (!_params.hasOwnProperty('id')) return;\n  }\n\n  setBreadCrumb(): void {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.appTitle = 'Cadastro';\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home',\n      },\n      {\n        descricao: 'Akna',\n        routerLink: `/comercial/akna/${id}`,\n      },\n      {\n        descricao: 'Ações',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //formulario\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      TITULO: [null, [Validators.required]],\n      CONTATO: [null, [Validators.required]],\n      DS_OBSE: [null],\n    });\n  }\n\n  postAcoes() {\n    this.loadingNavBar = true;\n    this.acoesService\n      .postAcoes(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.status === 200) {\n            this.form.reset();\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        error: (error: any) => {\n          this.pnotify.error();\n        }\n      });\n  }\n\n  getMensagens(params?) {\n    this.loading = true;\n    this.mensagemService\n      .getMensagens(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe({\n        next: (response: HttpResponse<IComercialAknaMensagens[]>) => {\n          if (response.status === 200) {\n            this.mensagens = response.body;\n            this.loading = false;\n          } else {\n            this.noResult = true;\n            this.mensagens = [];\n            this.router.navigate['../'];\n          }\n        },\n        error: (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n}\n","import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { RouterModule } from '@angular/router';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport ptBr from '@angular/common/locales/pt';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nregisterLocaleData(ptBr);\ndefineLocale('pt-br', ptBrLocale);\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialAknaAcoesListaComponent } from './lista/lista.component';\nimport { ComercialAknaAcoesRoutingModule } from './acoes-routing.module';\nimport { ComercialAknaAcoesFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialAknaAcoesListaComponent,\n    ComercialAknaAcoesFormularioComponent,\n  ],\n  imports: [\n    ComercialAknaAcoesRoutingModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n    CurrencyMaskModule,\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\n})\nexport class ComercialAknaAcoesModule {}\n"]}