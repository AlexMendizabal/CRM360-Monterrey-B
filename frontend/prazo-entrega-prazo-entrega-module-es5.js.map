{"version":3,"sources":["webpack:///src/app/modules/logistica/cadastros/prazo-entrega/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/cadastros/prazo-entrega/lista/lista.component.scss","webpack:///src/app/modules/logistica/cadastros/prazo-entrega/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/cadastros/prazo-entrega/prazo-entrega.module.ts","webpack:///src/app/modules/logistica/cadastros/prazo-entrega/prazo-entrega-routing.module.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/logistica/cadastros/prazo-entrega/lista/lista.component.html","webpack:///src/app/modules/logistica/cadastros/prazo-entrega/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/cadastros/prazo-entrega/lista/lista.component.ts"],"names":["LogisticaPrazoEntregaCadastroComponent","formBuilder","pnotify","activatedRoute","router","routerService","titleService","atividadesService","localeService","service","regioesEntregaService","loading","loadingNavBar","breadCrumbTree","regioesEntrega","registrarAcesso","setBreadCrumb","setFormBuilder","onActivatedRoute","getRegioesEntrega","subscribe","appTitle","id","snapshot","params","idSubModulo","setTitle","descricao","routerLink","getPrazoEntrega","pipe","response","status","error","form","patchValue","body","message","IN_STAT","IN_PAGI","group","UUUID","UUID_LOGI_REGI_ENTR","required","CD_FILI","TT_PRZO","DS_OBSE","field","onFieldInvalid","get","touched","formControl","controls","validator","validationResult","postPrazoEntrega","value","reset","success","navigate","relativeTo","selector","template","PrazoEntregaModule","declarations","imports","forRoot","routes","path","component","LogisticaPrazoEntregaRoutingModule","forChild","exports","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","currentDate","startOfWeek","setDate","setHours","endOfWeek","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","providedIn","LogisticaPrazoEntregaListaComponent","route","dateService","showAdvancedFilter","itemsPerPage","totalItems","currentPage","noResult","UUID","NM_REGI_ENTR","PAGI","TT_REGI_PAGI","TIME","getTime","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","hasOwnProperty","getPrazosEntrega","getParams","prazosEntrega","notice","event","setValue","page","setBase64UrlParams","onFilter","_params","_obj","prop","convertToUrlDate"],"mappings":"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","file":"prazo-entrega-prazo-entrega-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy9wcmF6by1lbnRyZWdhL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy9wcmF6by1lbnRyZWdhL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { LogisticaRegioesEntregaService } from './../../regioes-entrega/services/regioes-entrega.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  AbstractControl,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n//interfaces\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { ILogisticaPrazoEntrega } from '../models/ILogisticaPrazoEntrega';\r\nimport { LogisticaPrazoEntregaService } from '../services/prazo-entrega.service';\r\nimport { ILogisticaRegiaoEntrega } from '../../regioes-entrega/models/ILogisticaRegiaoEntrega';\r\n\r\n@Component({\r\n  selector: 'logistica-prazo-entrega-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss']\r\n})\r\nexport class LogisticaPrazoEntregaCadastroComponent implements OnInit {\r\n\r\n  noResult: boolean;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  prazoEntrega: ILogisticaPrazoEntrega;\r\n  regioesEntrega: Array<ILogisticaRegiaoEntrega> = [];\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private routerService: RouterService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n    private localeService: BsLocaleService,\r\n    private service: LogisticaPrazoEntregaService,\r\n    private regioesEntregaService: LogisticaRegioesEntregaService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n    this.getRegioesEntrega();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.appTitle = 'Registrarse';\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'Registrarse',\r\n        routerLink: `/logistica/cadastros/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Plazos de Entrega',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //Consumir informações que estão na rota para editar\r\n  ngOnDestroy() {\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const id = this.activatedRoute.snapshot.params?.id;\r\n    if(id){\r\n      this.getPrazoEntrega(id)\r\n    }\r\n  }\r\n\r\n  getPrazoEntrega(id){\r\n    this.loading = true;\r\n    this.service\r\n      .getPrazoEntrega(id)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if(response.status != 200){\r\n            this.pnotify.error();\r\n            return\r\n          }\r\n\r\n          this.form.patchValue(response.body['data']);\r\n        },\r\n        error => {\r\n          const message = error?.error?.message;\r\n          message ? this.pnotify.error(message) : this.pnotify.error();\r\n        }\r\n      )\r\n  }\r\n\r\n  getRegioesEntrega(){\r\n\r\n    let params = {IN_STAT: '1', IN_PAGI: '0'};\r\n\r\n    this.regioesEntregaService\r\n      .getRegioesEntrega(params)\r\n      .pipe()\r\n      .subscribe(\r\n        response => {\r\n          if(response.status != 200){\r\n            this.pnotify.error();\r\n            return\r\n          }\r\n\r\n          this.regioesEntrega = response.body['data'];\r\n        },\r\n        error => {\r\n          const message = error?.error?.message;\r\n          message ? this.pnotify.error(message) : this.pnotify.error();\r\n        }\r\n      )\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      UUUID: [null],\r\n      UUID_LOGI_REGI_ENTR: [null, [Validators.required]],\r\n      CD_FILI: [null, [Validators.required]],\r\n      TT_PRZO: [null, [Validators.required]],\r\n      IN_STAT: ['1', [Validators.required]],\r\n      DS_OBSE: [null],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postPrazoEntrega() {\r\n    this.loadingNavBar = true;\r\n    this.service\r\n      .postPrazoEntrega(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.form.reset();\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          const message = error?.error?.message;\r\n          message ? this.pnotify.error(message) : this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  PaginationModule,\r\n  TooltipModule,\r\n  TabsModule,\r\n  TimepickerModule,\r\n  BsDatepickerModule,\r\n  ModalModule,\r\n} from 'ngx-bootstrap';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\nimport { NgBrazil } from 'ng-brazil';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\n\r\nimport { LogisticaPrazoEntregaRoutingModule } from './prazo-entrega-routing.module';\r\nimport { LogisticaPrazoEntregaListaComponent } from './lista/lista.component';\r\nimport { LogisticaPrazoEntregaCadastroComponent } from './cadastro/cadastro.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LogisticaPrazoEntregaListaComponent, LogisticaPrazoEntregaCadastroComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LogisticaPrazoEntregaRoutingModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    NgBrazil,\r\n    TextMaskModule,\r\n  ]\r\n})\r\nexport class PrazoEntregaModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\n\r\nimport { LogisticaPrazoEntregaListaComponent } from './lista/lista.component';\r\nimport { LogisticaPrazoEntregaCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaPrazoEntregaListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: LogisticaPrazoEntregaCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: LogisticaPrazoEntregaCadastroComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LogisticaPrazoEntregaRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button (click)=\\\"onReset()\\\">\\r\\n    Limpiar\\r\\n  </button>\\r\\n  <button (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n  <button [routerLink]=\\\"['../novo']\\\" >\\r\\n    Nuevo\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <advanced-filter>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"regiao\\\">Región</label>\\r\\n          <input\\r\\n            id=\\\"regiao\\\"\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"DIGITE...\\\"\\r\\n            formControlName=\\\"NM_REGI_ENTR\\\"\\r\\n            (keyup.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"status\\\">Status</label>\\r\\n          <select\\r\\n            name=\\\"status\\\"\\r\\n            id=\\\"status\\\"\\r\\n            class=\\\"form-control\\\">\\r\\n            <option value=\\\"\\\">Todos</option>\\r\\n            <option value=\\\"1\\\">Activo</option>\\r\\n            <option value=\\\"0\\\">Inactivo</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div  class=\\\"col-12 p-0 mt-3\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div>\\r\\n      <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n        <thead class=\\\"thead-light\\\">\\r\\n          <tr>\\r\\n            <th>Región</th>\\r\\n            <th>Subsidiaria</th>\\r\\n            <th>Plazo</th>\\r\\n            <th width=\\\"25%\\\">Usuario</th>\\r\\n            <th width=\\\"5%\\\"></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of prazosEntrega; let i = index\\\">\\r\\n            <td class=\\\"text-truncate\\\" [ngClass]=\\\"item.IN_STAT == 1 ? 'border-success' : 'border-danger'\\\"> ({{item.CD_REGI_ENTR}})&nbsp;{{ item.NM_REGI_ENTR }} </td>\\r\\n            <td class=\\\"text-truncate\\\">\\r\\n              <span *ngIf=\\\"item.CD_FILI\\\">({{item.CD_FILI}})&nbsp;{{ item.NM_FILI }}</span>\\r\\n              <span *ngIf=\\\"!item.CD_FILI\\\">-</span>\\r\\n            </td>\\r\\n            <td class=\\\"text-truncate\\\"> {{ item.TT_PRZO | hifen}} </td>\\r\\n            <td class=\\\"text-truncate\\\">\\r\\n              <div *ngIf=\\\"item.NR_MATR\\\">\\r\\n                <span *ngIf=\\\"!item.DT_ATUA\\\">[{{ item.DT_INCL | date : 'dd/MM/yyyy HH:mm' }}]&nbsp;</span>\\r\\n                <span *ngIf=\\\"item.DT_ATUA\\\">[{{ item.DT_ATUA | date : 'dd/MM/yyyy HH:mm' }}]&nbsp;</span>\\r\\n                <span>({{ item.NR_MATR }})&nbsp; {{ item.NM_USUA }}</span>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!item.NR_MATR\\\">-</div>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle\\\">\\r\\n              <a class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['../', item.UUID]\\\">\\r\\n                <i class=\\\"fas fa-edit\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div>\\r\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 250px\\\">\\r\\n    <empty-result message=\\\"No se encontró información\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    [disabled]=\\\"form.valid === false\\\"\\r\\n    (click)=\\\"postPrazoEntrega()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"regiaoEntrega\\\">Región de Entrega</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"regioesEntrega\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"regiaoEntrega\\\"\\r\\n              bindLabel=\\\"NM_REGI_ENTR\\\"\\r\\n              bindValue=\\\"UUID\\\"\\r\\n              id=\\\"regiaoEntrega\\\"\\r\\n              formControlName=\\\"UUID_LOGI_REGI_ENTR\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              [ngClass]=\\\"onFieldError('UUID_LOGI_REGI_ENTR') + ' ' + onFieldRequired('UUID_LOGI_REGI_ENTR')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"filial\\\">Subsidiaria</label>\\r\\n            <select\\r\\n              name=\\\"filial\\\"\\r\\n              id=\\\"filial\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"CD_FILI\\\"\\r\\n              [ngClass]=\\\"onFieldError('CD_FILI') + ' ' + onFieldRequired('CD_FILI')\\\"\\r\\n            >\\r\\n              <option value=\\\"18\\\">Distribución Tietê</option>\\r\\n              <option value=\\\"79\\\">Distribución Taipas</option>\\r\\n              <option value=\\\"06\\\">Distribución Osasco</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"prazo\\\">Plazo</label>\\r\\n            <input\\r\\n              type=\\\"number\\\"\\r\\n              min=\\\"1\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"prazo\\\"\\r\\n              formControlName=\\\"TT_PRZO\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('TT_PRZO') + ' ' + onFieldRequired('TT_PRZO')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('TT_PRZO')\\\" message=\\\"Plazo é obligatorio.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"status\\\">Situación</label>\\r\\n            <select\\r\\n                name=\\\"status\\\"\\r\\n                id=\\\"status\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"IN_STAT\\\"\\r\\n                [ngClass]=\\\"onFieldError('IN_STAT') + ' ' + onFieldRequired('IN_STAT')\\\"\\r\\n            >\\r\\n                <option value=\\\"1\\\">Activo</option>\\r\\n                <option value=\\\"0\\\">Inactivo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('IN_STAT')\\\" message=\\\"La situación es obligatoria.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"observacao\\\" >Observación:</label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"observacao\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { LogisticaPrazoEntregaService } from './../services/prazo-entrega.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n// angular\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n//services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n//rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n@Component({\r\n  selector: 'logistica-prazo-entrega-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class LogisticaPrazoEntregaListaComponent implements OnInit {\r\n\r\n  appTitle = \"Plazos de Entrega\";\r\n\r\n  form: FormGroup;\r\n\r\n  breadCrumbTree: any = [];\r\n\r\n  showAdvancedFilter = true;\r\n  prazosEntrega: any;\r\n\r\n  idSubModulo: number;\r\n\r\n  $subscription: Subscription;\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 0;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  /*loading*/\r\n  loading = true;\r\n  loadingNavBar = false;\r\n  noResult = true;\r\n  /*loading*/\r\n\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private service: LogisticaPrazoEntregaService,\r\n    private pnotify: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private atividadesService: AtividadesService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService,\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      UUID: [null],\r\n      NM_REGI_ENTR: [null],\r\n      CD_FILI: [null],\r\n      IN_STAT: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [(new Date).getTime()]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI')){\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n        }\r\n\r\n        this.getPrazosEntrega(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Logística'\r\n      },\r\n      {\r\n        descricao: 'Registro',\r\n        routerLink: `/logistica/cadastros/${id}`,\r\n      },\r\n      {\r\n        descricao: this.appTitle\r\n      }\r\n    ];\r\n  }\r\n\r\n  getPrazosEntrega(params?) {\r\n\r\n    if (this.loading === false) {\r\n      this.loadingNavBar = true;\r\n    }\r\n\r\n    return this.service\r\n      .getPrazosEntrega(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.prazosEntrega = response.body[\"data\"];\r\n            this.totalItems = response.body[\"total\"];\r\n            this.noResult = false;\r\n          } else {\r\n            this.pnotify.notice(\"Ningún resultado encontrado\");\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.noResult = true;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onShowFilter() {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get(\"PAGI\").setValue(1);\r\n    this.form.get(\"TIME\").setValue((new Date).getTime());\r\n\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\r\n    });\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.get(\"status\").setValue(\"T\");\r\n    this.onFilter();\r\n    this.route.navigate([],\r\n      {\r\n        relativeTo: this.activatedRoute,\r\n        queryParams: null\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n}\r\n"]}