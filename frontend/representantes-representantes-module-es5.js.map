{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/representantes/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/services/clientes.service.ts","webpack:///src/app/modules/comercial/cadastros/representantes/representantes.module.ts","webpack:///src/app/modules/comercial/comissoes/representantes/representantes.component.scss","webpack:///src/app/modules/comercial/comissoes/representantes/programacao-pagamentos/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/representantes/lista/lista.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/representantes/representantes-routing.module.ts","webpack:///src/app/modules/comercial/comissoes/representantes/representantes.component.html","webpack:///src/app/modules/comercial/comissoes/representantes/programacao-pagamentos/lista/lista.component.html","webpack:///src/app/modules/comercial/comissoes/representantes/programacao-pagamentos/programacao-pagamentos.module.ts","webpack:///src/app/modules/comercial/cadastros/representantes/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/comissoes/representantes/representantes.module.ts","webpack:///src/app/modules/comercial/cadastros/representantes/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/representantes/formulario/formulario.component.html","webpack:///src/app/modules/comercial/comissoes/representantes/programacao-pagamentos/lista/lista.component.ts","webpack:///src/app/modules/comercial/comissoes/representantes/representantes-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/representantes/lista/lista.component.ts","webpack:///src/app/modules/comercial/comissoes/representantes/representantes.component.ts","webpack:///src/app/modules/comercial/comissoes/representantes/programacao-pagamentos/programacao-pagamentos.service.ts","webpack:///src/app/shared/pipes/cpf.pipe.ts","webpack:///src/app/modules/comercial/cadastros/representantes/lista/lista.component.scss","webpack:///src/app/modules/comercial/comissoes/representantes/programacao-pagamentos/programacao-pagamentos-routing.module.ts"],"names":["ComercialCadastrosRepresentantesFormularioComponent","formBuilder","activatedRoute","dateService","localeService","bsModalService","pnotifyService","confirmModalService","location","representantesService","router","gestaoAssociacoesService","modalService","comercialService","cadastroEquipeVenda","estadosService","cepService","formService","tipoComissionamentoService","gestaoComissionamentosService","MASKS","loaderFullScreen","modalValues","loadingModal","breadCrumbTree","formChanged","submittingForm","dados","escritorio","equipes","bancos","tipoVendedor","urlAnexo","dadosLoaded","dadosEmpty","estados","enderecosOp","enderecosLoading","enderecoLoaded","cidadeRetorno","estadoRetorno","maxLengthRules","maxLengthMessages","toggle","searching","firstSearch","showGrupos","linhas","classes","tableConfigAssocGrupos","fixedHeader","bodyHeight","hover","tableConfigPrecos","tableConfigAnexos","showAnexos","formData","maxSize","itemsPerPage","currentPage","totalItems","situacao","id","descricao","tipoComissao","tipoComissaoModal","use","getPNotify","setFormFilter","setBreadCrumb","getEscritorio","getEquipesVenda","getTipoComissao","getBancos","getTipoVendedor","params","subscribe","appTitle","action","routerLink","idSubModulo","getEstados","resolver","snapshot","data","detalhes","success","form","group","codRepresentante","codSituacao","required","tipoPagamentoComissao","emiteNotaFiscal","recebeEmailInativacaoCliente","codEquipe","codEscritorio","nrMatricula","nome","razaoSocial","cep","value","disabled","endereco","nomeBairro","nomeCidade","uf","cpf","rg","email","telefone","celular","dataInicialContrato","convertStringToDate","getToday","dataFinalContrato","nomeFantasiaRepresentacao","razaoSocialRepresentacao","cnpjEmpresaRepresentacao","ieEmpresaRepresentacao","imEmpresaRepresentacao","nomeTitularConta","tipoConta","nomeBanco","agencia","contaCorrente","anexos","array","setCheckValues","getAnexos","error","back","modalRef","hide","pristine","onPostAnexos","checkFormValidation","valid","loaderNavbar","save","getRawValue","pipe","next","response","hasOwnProperty","reset","navigateTo","navigate","relativeTo","mensagem","notice","isValid","get","status","consultaCEP","getData","length","formEnderecos","enderecosRetorno","openModal","setFormValues","localidade","cidade","getIbgeCidades","responseCode","enderecoSelecionado","controls","enable","setValue","logradouro","bairro","disable","getTipoComissionamento","codTipoComissionamento","console","log","getDetailTipoComissionamento","getListaEquipesVenda","getEscritorios","formModelo","tiposComissao","show","getTipoComissaoModal","field","onFieldInvalid","errors","touched","formControl","validator","validationResult","confirm","dataInicial","dataFinal","patchValue","dataInicialVigencia","dataFimVigencia","Date","convertToUrlDate","anexo","then","result","window","open","setAnexos","i","onAddAnexos","manipulateForm","checkAnexoExists","push","codAnexo","nomeAnexo","linkAnexo","markAsTouched","markAsDirty","some","el","files","fd","FormData","append","forEach","element","index","postAnexos","confirmDelete","r","deleteAnexo","deleteDocumento","splice","removeAt","showConfirm","selector","template","ComercialClientesService","http","API","httpParams","param","codCliente","documento","getDadosCliente","post","put","idEndereco","idSituacao","idContato","idSeqTid","idFilho","idAnexo","providedIn","ComercialCadastrosRepresentantesModule","declarations","imports","forRoot","providers","ConfirmModalService","type","title","message","cancelTxt","okTxt","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","routes","path","children","component","redirectTo","pathMatch","resolve","ComercialCadastrosRepresentantesRoutingModule","forChild","exports","ComercialComissoesRepresentantesProgramacaoPagamentosModule","ComercialComissoesRepresentantesModule","ComercialCadastrosRepresentantesFormularioResolverGuard","route","getDetalhes","codEmpresa","cnpj","ie","im","ComercialComissoesRepresentantesProgramacaoPagamentosListaComponent","activateRoute","detailPanelService","programacaoPagamentosService","atividadesService","escritoriosService","subtitles","text","color","showDetailPanel","representantes","representantesDetail","representanteSelecionado","escritorios","programado","bsValue","maxDate","minDate","tableConfig","subtitleBorder","tableConfigMateriais","registrarAcesso","onDetailPanelEmitter","getSituacao","getRepresentantes","formValue","checkRouterParams","codStatus","registros","item","nomeRepresentante","codigo","formDate","codComissaoRepresentante","dataProgramacao","dataPagamento","postProgramacaoPagamento","onFilter","onPostPagamento","postPagamento","borderClass","activatedRouteSubscription","queryParams","Object","keys","atob","JSON","parse","search","formKey","paramKey","isNaN","Number","unsubscribe","getListaEscritorios","tipo","unshift","nomeEscritorio","nomeSituacao","setRouterParams","getParams","getListaProgramacao","q","btoa","stringify","_params","_obj","prop","dtInicioVigencia","dtFimVigencia","pagina","orderBy","orderType","detailPanelTitle","setDadosBancarios","grupoSelecionado","getAssociacoesDetails","codRepresentanteTid","setTimeout","loadedFinished","codProgramacao","bancoRepresentante","titular","showDetailPanelSubscription","config","event","showing","codPreco","page","scrollToFilter","nativeElement","scrollIntoView","behavior","grupo","codRepresentantes","loadChildren","m","ComercialComissoesRepresentantesGestaoComissionamentosModule","ComercialComissoesRepresentantesRoutingModule","ComercialCadastrosRepresentantesListaComponent","cadastroRepresentantesService","dadosPagination","modeloComissao","emiteNota","column","getListaRepresentantes","slice","codERP","setDetalhesRepresentante","codVendedor","de","ate","valorComissao","valorFixo","confirmActivate","asObservable","activateERP","refreshMainData","confirmInactive","inactivateERP","startItem","endItem","codTabela","ComercialComissoesRepresentantesComponent","titleService","setTitle","ComercialComissoesRepresentantesProgramacaoPagamentosService","CPFPipe","valorFormatado","padStart","substr","replace","name","ComercialComissoesRepresentantesProgramacaoPagamentosRoutingModule"],"mappings":"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","file":"representantes-representantes-module-es5.js","sourcesContent":["import { ComercialComissoesGestaoComissionamentosService } from './../../../comissoes/representantes/gestao-comissionamentos/gestao-comissionamentos.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { JsonResponse } from './../../../../../models/json-response';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\nimport { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormArray,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\n// ng-brazil\r\n// import { MASKS } from 'ng-brazil';\r\nimport { NgBrazilValidators } from 'ng-brazil';\r\nimport { utilsBr } from 'js-brasil';\r\n\r\n// Interfaces\r\n\r\n\r\n// Services\r\nimport { DateService } from './../../../../../shared/services/core/date.service';\r\nimport { PNotifyService } from './../../../../../shared/services/core/pnotify.service';\r\nimport { ComercialGestaoAssociacoesCoordenadoresEscritoriosService } from './../../../gestao/associacoes/coordenadores-escritorios/coordenadores-escritorios.service';\r\nimport { ComercialCadastrosRepresentantesService } from './../representantes.service';\r\nimport { ComercialCadastrosEquipeVendaService } from './../../equipe-venda/equipe-venda.service';\r\nimport { ComercialService } from './../../../comercial.service';\r\nimport { EstadosService } from 'src/app/shared/services/requests/estados.service';\r\nimport { CepService } from 'src/app/shared/services/ws/cep.service';\r\nimport { ComercialCadastrosTipoComissionamentoService } from './../../tipos-comissionamento/tipo-comissionamento.service';\r\nimport { ComercialClientesCadastroEnderecosFormularioService } from './../../../clientes/cadastro/enderecos/formulario/formulario.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from './../../../../../shared/modules/breadcrumb/breadcrumb';\r\n\r\n// ngx-bootstrap\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'comercial-gestao-representantes-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosRepresentantesFormularioComponent\r\n  implements OnInit {\r\n    public MASKS = utilsBr.MASKS;\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  action: string;\r\n\r\n  modalValues: any[] = [];\r\n  loadingModal: boolean = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  form: FormGroup;\r\n  formModelo: FormGroup;\r\n\r\n  formChanged = false;\r\n  submittingForm = false;\r\n\r\n  dados: Array<any> = [];\r\n  escritorio: Array<any> = [];\r\n  equipes: Array<any> = [];\r\n  bancos: Array<any> = [];\r\n  tipoVendedor: Array<any> = [];\r\n  urlAnexo: Array<any> = [];\r\n\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  formEnderecos: FormGroup;\r\n  estados: any = [];\r\n\r\n  enderecosOp: any = [];\r\n  enderecosLoading: boolean = false;\r\n  enderecoLoaded: boolean = false;\r\n\r\n  cidadeRetorno: string = '';\r\n  estadoRetorno: string = '';\r\n\r\n  maxLengthRules: any = {};\r\n  maxLengthMessages: any = {};\r\n\r\n  toggle = false;\r\n  searching = false;\r\n  firstSearch = false;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  showGrupos = true;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n\r\n  limparGrupoPrincipal: boolean;\r\n\r\n  tableConfigAssocGrupos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigPrecos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigAnexos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  showAnexos: boolean = false;\r\n  formData: Array<FormData> = [];\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  situacao: any = [\r\n    {\r\n      id: 0,\r\n      descricao: 'INATIVO',\r\n    },\r\n    {\r\n      id: 1,\r\n      descricao: 'ATIVO',\r\n    }\r\n  ];\r\n\r\n  tipoComissao: any = [];\r\n  tipoComissaoModal: any = [];\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private activatedRoute: ActivatedRoute,\r\n              private dateService: DateService,\r\n              private localeService: BsLocaleService,\r\n              private bsModalService: BsModalService,\r\n              private pnotifyService: PNotifyService,\r\n              private confirmModalService: ConfirmModalService,\r\n              private location: Location,\r\n              private representantesService: ComercialCadastrosRepresentantesService,\r\n              private router: Router,\r\n              private gestaoAssociacoesService: ComercialGestaoAssociacoesCoordenadoresEscritoriosService,\r\n              private modalService: BsModalService,\r\n              private comercialService: ComercialService,\r\n              private cadastroEquipeVenda: ComercialCadastrosEquipeVendaService,\r\n              private estadosService: EstadosService,\r\n              private cepService: CepService,\r\n              private formService: ComercialClientesCadastroEnderecosFormularioService,\r\n              private tipoComissionamentoService: ComercialCadastrosTipoComissionamentoService,\r\n              private gestaoComissionamentosService: ComercialComissoesGestaoComissionamentosService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormFilter();\r\n    this.setBreadCrumb();\r\n    this.getEscritorio();\r\n    this.getEquipesVenda();\r\n    this.getTipoComissao();\r\n    this.getBancos();\r\n    this.getTipoVendedor();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar Representante';\r\n        this.action = 'update';\r\n      } else {\r\n        this.appTitle = 'Novo Representante';\r\n        this.action = 'create';\r\n      }\r\n\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Representantes',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/representantes/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  // Formulário Preenchido para edição ou novo formulário\r\n  setFormFilter() {\r\n        this.estados = this.estadosService.getEstados();\r\n\r\n\r\n        const resolver = this.activatedRoute.snapshot.data.detalhes;\r\n\r\n        if (resolver.success === true) {\r\n\r\n          const detalhes: any = resolver.data[0];\r\n\r\n          this.form = this.formBuilder.group({\r\n          codRepresentante: [detalhes.codRepresentante],\r\n          codSituacao: [detalhes.codSituacao ? detalhes.codSituacao : 1, [Validators.required]],\r\n          tipoPagamentoComissao: [detalhes.tipoPagamentoComissao, [Validators.required]],\r\n          emiteNotaFiscal: [detalhes.emiteNotaFiscal == 0 ? detalhes.emiteNotaFiscal : 1, [Validators.required]],\r\n          recebeEmailInativacaoCliente: [detalhes.recebeEmailInativacaoCliente ? detalhes.recebeEmailInativacaoCliente : 1, [Validators.required]],\r\n          codEquipe: [detalhes.codEquipe, [Validators.required]],\r\n          codEscritorio: [detalhes.codEscritorio, [Validators.required]],\r\n          nrMatricula: [detalhes.nrMatricula, [Validators.required]],\r\n\r\n          nome: [detalhes.nome, [Validators.required]],\r\n          razaoSocial: [detalhes.razaoSocial, [Validators.required]],\r\n          cep: [{value: detalhes.cep, disabled: ''}, [Validators.required]],\r\n          endereco: [detalhes.endereco, [Validators.required]],\r\n          // nrEndereco: [detalhes.nrEndereco],\r\n          nomeBairro: [detalhes.nomeBairro, [Validators.required]],\r\n          // complemento: [detalhes.complemento],\r\n          nomeCidade: [detalhes.nomeCidade, [Validators.required]],\r\n          uf: [detalhes.uf],\r\n          cpf: [detalhes.cpf, [Validators.required]],\r\n          rg: [detalhes.rg],\r\n          email: [detalhes.email],\r\n          telefone: [detalhes.telefone],\r\n          celular: [detalhes.celular],\r\n          dataInicialContrato: detalhes.dataInicialContrato != null\r\n          ? [this.dateService.convertStringToDate(detalhes.dataInicialContrato, 'usa'), [Validators.required]]\r\n          : this.dateService.getToday(),\r\n\r\n          dataFinalContrato: detalhes.dataFinalContrato != null\r\n          ? [this.dateService.convertStringToDate(detalhes.dataFinalContrato, 'usa')] : this.dateService.getToday(),\r\n          // dataFinalContrato: detalhes ? this.dateService.getToday() :\r\n          // [this.dateService.convertStringToDate(detalhes.dataFinalContrato, 'usa')],\r\n          // dataRenovacaoContrato: detalhes ? this.dateService.getToday() :\r\n          // [this.dateService.convertStringToDate(detalhes.dataRenovacaoContrato, 'usa')],\r\n\r\n          nomeFantasiaRepresentacao: [detalhes.nomeFantasiaRepresentacao],\r\n          razaoSocialRepresentacao: [detalhes.razaoSocialRepresentacao],\r\n          cnpjEmpresaRepresentacao: [detalhes.cnpjEmpresaRepresentacao],\r\n          ieEmpresaRepresentacao: [detalhes.ieEmpresaRepresentacao],\r\n          imEmpresaRepresentacao: [detalhes.imEmpresaRepresentacao],\r\n\r\n          nomeTitularConta: [detalhes.nomeTitularConta],\r\n          tipoConta: [detalhes.tipoConta],\r\n          nomeBanco: [detalhes.nomeBanco],\r\n          agencia: [detalhes.agencia],\r\n          contaCorrente: [detalhes.contaCorrente],\r\n\r\n          anexos: this.formBuilder.array([]),\r\n        });\r\n        this.setCheckValues(detalhes);\r\n\r\n        if (detalhes.codRepresentante != null) {\r\n          this.getAnexos(detalhes.codRepresentante);\r\n        }\r\n\r\n      } else {\r\n        this.pnotifyService.error();\r\n        this.location.back();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  closeModal(modalRef: TemplateRef<any>) {\r\n    this.modalRef.hide();\r\n\r\n   this.getTipoComissao();\r\n  }\r\n\r\n\r\n  //Ação de Edição ou novo Formulário\r\n  onSubmit(): void {\r\n    if (this.action === 'update' && this.form.pristine) {\r\n      this.onPostAnexos(this.form.value.codRepresentante);\r\n      this.location.back();\r\n\r\n    } else {\r\n      if (this.checkFormValidation() && this.form.valid) {\r\n          this.loaderNavbar = true;\r\n          this.submittingForm = true;\r\n\r\n          this.representantesService\r\n            .save(this.form.getRawValue(), this.action)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.loaderNavbar = false;\r\n                this.submittingForm = false;\r\n              })\r\n            )\r\n            .subscribe({\r\n              next: (response: any) => {\r\n                if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === true\r\n                ) {\r\n                  this.form.reset();\r\n                  this.formChanged = false;\r\n                  this.pnotifyService.success();\r\n                  this.onPostAnexos(response.data[0].codRepresentante);\r\n\r\n                  this.activatedRoute.params.subscribe((params: any) => {\r\n                    let navigateTo: string;\r\n\r\n                    if (params.hasOwnProperty('id')) {\r\n                      navigateTo = '../../lista';\r\n                    } else {\r\n                      navigateTo = '../lista';\r\n                    }\r\n\r\n                    this.router.navigate([navigateTo], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  });\r\n                } else if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === false\r\n                ) {\r\n                  this.pnotifyService.error(response.mensagem);\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              },\r\n              error: (error: any) => {\r\n                this.pnotifyService.error();\r\n              }\r\n            });\r\n      } else {\r\n        this.pnotifyService.notice('Selecione um material.');\r\n      }\r\n    }\r\n  }\r\n\r\n  checkFormValidation(): boolean {\r\n    let isValid = true;\r\n\r\n    if (this.form.getRawValue().id === null) {\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  onInput() {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  onInputCep(detalhes: TemplateRef<any>) {\r\n    if (this.form.get('cep').status == 'VALID') {\r\n      this.consultaCEP(detalhes, this.form.value.cep);\r\n    }\r\n  }\r\n\r\n  consultaCEP(detalhes: TemplateRef<any>, cep: string) {\r\n    if (this.enderecosLoading == false) {\r\n      this.cidadeRetorno = '';\r\n      this.estadoRetorno = '';\r\n\r\n      this.cepService\r\n        .getData(cep)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.enderecosLoading = false;\r\n            this.loaderFullScreen = false;\r\n          })\r\n        )\r\n        .subscribe((response: any) => {\r\n          this.enderecosLoading = true;\r\n          if (\r\n            response.hasOwnProperty('mensagem') &&\r\n            response.hasOwnProperty('success') &&\r\n            response.success === true\r\n          ) {\r\n            if (response.data.length > 1) {\r\n              this.formEnderecos = this.formBuilder.group({\r\n                enderecosRetorno: ['', [Validators.required]],\r\n              });\r\n\r\n              this.enderecosOp = response.data;\r\n              if ((this.enderecosLoading = true)) {\r\n                this.openModal(detalhes);\r\n              }\r\n            } else {\r\n              this.enderecoLoaded = true;\r\n              this.setFormValues(response.data);\r\n\r\n\r\n              this.cidadeRetorno = response.data.localidade;\r\n              this.estadoRetorno = response.data.uf;\r\n            }\r\n          } else if (\r\n            response.hasOwnProperty('mensagem') &&\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.pnotifyService.notice(response.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  onInputCidade() {\r\n    if (this.form.get('cidade').status == 'VALID') {\r\n      let cidade = {\r\n        cidade: this.form.get('nomeCidade').value,\r\n      };\r\n\r\n      this.formService.getIbgeCidades(cidade).subscribe((response: any) => {\r\n        if (response.responseCode === 200) {\r\n        } else {\r\n          this.pnotifyService.notice(\r\n            'Região de entrega não localizado, favor entrar em contato com o suporte'\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setFormValues(enderecoSelecionado: any) {\r\n    if (this.enderecoLoaded === true) {\r\n\r\n      this.form.controls.endereco.enable();\r\n      this.form.controls.nomeBairro.enable();\r\n      this.form.controls.nomeCidade.enable();\r\n      this.form.controls.uf.enable();\r\n\r\n      this.form.controls.endereco.setValue(enderecoSelecionado.logradouro);\r\n      this.form.controls.nomeBairro.setValue(enderecoSelecionado.bairro);\r\n      this.form.controls.nomeCidade.setValue(enderecoSelecionado.localidade);\r\n      this.form.controls.uf.setValue(enderecoSelecionado.uf);\r\n\r\n      if (enderecoSelecionado.logradouro != '') {\r\n        this.form.controls.endereco.disable();\r\n      }\r\n\r\n      if (enderecoSelecionado.bairro != '') {\r\n        this.form.controls.nomeBairro.disable();\r\n      }\r\n\r\n      if (enderecoSelecionado.localidade != '') {\r\n        this.form.controls.nomeCidade.disable();\r\n      }\r\n\r\n      if (enderecoSelecionado.uf != '') {\r\n        this.form.controls.uf.disable();\r\n      }\r\n    }\r\n  }\r\n\r\n  setCheckValues(data: any) {\r\n      this.form.controls.endereco.enable();\r\n      this.form.controls.nomeBairro.enable();\r\n      this.form.controls.nomeCidade.enable();\r\n      this.form.controls.uf.enable();\r\n\r\n      if (data.endereco != '') {\r\n        this.form.controls.endereco.disable();\r\n      }\r\n\r\n      if (data.nomeBairro != '') {\r\n        this.form.controls.nomeBairro.disable();\r\n      }\r\n\r\n      if (data.nomeCidade != '') {\r\n        this.form.controls.nomeCidade.disable();\r\n      }\r\n\r\n      if (data.uf != '') {\r\n        this.form.controls.uf.disable();\r\n      }\r\n  }\r\n\r\n  // Consulta tipo de comissionamento\r\n  getTipoComissao() {\r\n\r\n    this.representantesService\r\n      .getTipoComissionamento()\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response) {\r\n            this.tipoComissao = response.data;\r\n\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  getTipoComissaoModal(){\r\n    this.loaderFullScreen = true;\r\n    this.tipoComissaoModal = [];\r\n    const codTipoComissionamento = this.form.value.tipoPagamentoComissao;\r\n    console.log(codTipoComissionamento)\r\n\r\n    this.tipoComissionamentoService\r\n    .getDetailTipoComissionamento(codTipoComissionamento)\r\n    .pipe(\r\n      finalize(() => {\r\n        this.loaderFullScreen = false;\r\n      })\r\n    )\r\n    .subscribe(\r\n      (response: any) => {\r\n        if (response.success === true) {\r\n          this.tipoComissaoModal = response.data;\r\n        }\r\n        (error: any) => {\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n    })\r\n  }\r\n\r\n  getBancos() {\r\n    this.representantesService\r\n      .getBancos()\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response) {\r\n            this.bancos = response.data;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  getTipoVendedor() {\r\n    this.representantesService\r\n      .getTipoVendedor()\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response) {\r\n            this.tipoVendedor = response.data;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  getEquipesVenda() {\r\n    this.cadastroEquipeVenda\r\n      .getListaEquipesVenda()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.showAnexos = true;\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success === true) {\r\n            this.equipes = response.data;\r\n          } else {\r\n            this.pnotifyService.error('Cadastre uma Equipe de Vendas');\r\n            this.location.back();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  getEscritorio() {\r\n    this.gestaoComissionamentosService\r\n      .getEscritorios()\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success === true) {\r\n            this.escritorio = response.data;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  // CheckBox\r\n  onChecked() {\r\n    this.formModelo.get('de').disable();\r\n    this.formModelo.get('ate').disable();\r\n  }\r\n\r\n\r\n  // modal\r\n  openModal(tiposComissao: TemplateRef<any>) {\r\n    this.modalRef = this.bsModalService.show(tiposComissao);\r\n    this.getTipoComissaoModal();\r\n  }\r\n\r\n\r\n// Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    // && this.assocMateriais.controls['controls'][field].validator\r\n    if (this.form.controls[field].validator ) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n    }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  geetParams(params: any): any {\r\n    let dataInicial = params['dataInicialVigencia'];\r\n    let dataFinal = params['dataFimVigencia'];\r\n\r\n    this.form.patchValue({\r\n      dataInicialVigencia: dataInicial,\r\n      dataFimVigencia: dataFinal\r\n    });\r\n\r\n    if (dataInicial instanceof Date) {\r\n      dataInicial = this.dateService.convertToUrlDate(dataInicial);\r\n    }\r\n\r\n    if (dataFinal instanceof Date) {\r\n      dataFinal = this.dateService.convertToUrlDate(dataFinal);\r\n    }\r\n\r\n    return {\r\n      dataInicial: {dataInicial},\r\n      dataFinal: {dataFinal}\r\n    };\r\n  }\r\n\r\n  navegarAnexo(anexo) {\r\n    this.router\r\n      .navigate([], {\r\n        relativeTo: this.activatedRoute,\r\n      })\r\n      .then((result) => {\r\n        window.open(`${anexo.value.urlAnexo}`, '_blank');\r\n      });\r\n  }\r\n\r\n  getAnexos(codRepresentante: number) {\r\n    this.loaderNavbar = true;\r\n    this.showAnexos = false;\r\n    this.representantesService\r\n      .getAnexos(codRepresentante)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.showAnexos = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.setAnexos(response.data);\r\n            this.urlAnexo = response.data;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          // if (error['error'].hasOwnProperty('mensagem')) {\r\n          //   this.pnotifyService.error(error.error.mensagem);\r\n          // } else {\r\n          //   this.pnotifyService.error();\r\n          // }\r\n        }\r\n      });\r\n  }\r\n\r\n  setAnexos(anexos: any): void {\r\n    if (anexos.length > 0) {\r\n      for (let i = 0; i < anexos.length; i++) {\r\n        this.onAddAnexos(anexos[i], true);\r\n      }\r\n    }\r\n  }\r\n\r\n  get anexos(): FormArray {\r\n    return this.form.get('anexos') as FormArray;\r\n  }\r\n\r\n  onAddAnexos(anexo: any, manipulateForm?: boolean): void {\r\n    if (this.checkAnexoExists(anexo) === false) {\r\n      this.anexos.push(\r\n        this.formBuilder.group({\r\n          codAnexo: [anexo.codAnexo],\r\n          nomeAnexo: [anexo.nomeAnexo],\r\n          linkAnexo: [anexo.linkAnexo],\r\n          urlAnexo: [anexo.urlAnexo],\r\n        })\r\n      );\r\n\r\n      if (manipulateForm) {\r\n        this.form.markAsTouched();\r\n        this.form.markAsDirty();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkAnexoExists(anexo: any): boolean {\r\n    return this.form.value.anexos.some((el: any) => {\r\n      return el.codAnexo === anexo.codAnexo || el.nomeAnexo == anexo.nomeAnexo;\r\n    });\r\n  }\r\n\r\n  appendFile(files: FileList): any {\r\n    if (files.length === 0) return;\r\n    const fd = new FormData();\r\n    fd.append('file', files[0]);\r\n    this.formData.push(fd);\r\n\r\n    this.anexos.push(\r\n      this.formBuilder.group({\r\n        nomeAnexo: [files[0]['name']],\r\n      })\r\n    );\r\n    if (this.showAnexos === false) {\r\n      this.showAnexos = true;\r\n    }\r\n  }\r\n\r\n  onPostAnexos(codRepresentante: number): void {\r\n    if (this.formData.length === 0) {\r\n      /* this.pnotifyService.notice('Erro'); */\r\n      return;\r\n    }\r\n\r\n    /* const id = this.form.value.codMaterial; */\r\n\r\n    this.formData.forEach((element, index) => {\r\n      this.representantesService\r\n        .postAnexos(element, codRepresentante)\r\n        .subscribe();\r\n    });\r\n  }\r\n\r\n  onDeleteAnexo(codAnexo: number, index: number): void {\r\n    this.confirmDelete().subscribe((r: boolean) => {\r\n      if (codAnexo) {\r\n        this.loaderNavbar = true;\r\n        this.representantesService\r\n          .deleteAnexo(codAnexo)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: JsonResponse) => {\r\n              if (\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                r ? this.deleteDocumento(index) : null;\r\n              } else if (\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false &&\r\n                response.hasOwnProperty('mensagem')\r\n              ) {\r\n                this.pnotifyService.error(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              if (error['error'].hasOwnProperty('mensagem')) {\r\n                this.pnotifyService.error(error.error.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        r ? this.deleteDocumento(index) : null;\r\n        this.formData.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteDocumento(index: number): void {\r\n    this.anexos.removeAt(index);\r\n    this.form.markAsTouched();\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialClientesService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/clientes`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getStatus(): Observable<Object> {\r\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClientes(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClientesGrupoEconomico(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/grupo-economico/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPermissaoAcesso(id: any): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/permissao-acesso/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhes(codCliente: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/detalhes/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getContatosResumido(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/contatos/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getExisteCpfCnpj(\r\n    documento: any,\r\n    getDadosCliente: boolean\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/verificar-cpf-cnpj/${documento}?getDadosCliente=${\r\n          getDadosCliente === true ? 1 : 0\r\n        }`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCliente(data: any): Observable<Object> {\r\n    return this.http\r\n      .post(`${this.API}/pre-cadastro`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPropostaAnaliseCredito(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/proposta-analise-credito/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDadosFaturamento(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/dados-faturamento/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateDadosFaturamento(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/dados-faturamento`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteAtividadeSecundaria(\r\n    codCliente: number,\r\n    id: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/cadastro/excluir/atividade-secundaria/${codCliente}/${id}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEnderecos(\r\n    codCliente: number,\r\n    params?: any\r\n  ): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/enderecos/${codCliente}`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEndereco(\r\n    codCliente: number,\r\n    idEndereco: number,\r\n    idSituacao: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/cadastro/carregar/endereco/${codCliente}/${idEndereco}/${idSituacao}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateEndereco(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/endereco`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteEndereco(codCliente: number, id: number): Observable<Object> {\r\n    return this.http\r\n      .delete(`${this.API}/cadastro/excluir/endereco/${codCliente}/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getContatos(codCliente: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/contatos/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getContato(\r\n    codCliente: number,\r\n    idContato: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/contato/${codCliente}/${idContato}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateContato(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/contato`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteContato(\r\n    codCliente: number,\r\n    id: number,\r\n    idSeqTid: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/cadastro/excluir/contato/${codCliente}/${id}/${idSeqTid}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteMeioContato(\r\n    codCliente: number,\r\n    id: number,\r\n    idSeqTid: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/cadastro/excluir/meio-contato/${codCliente}/${id}/${idSeqTid}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteFilho(idFilho: number): Observable<Object> {\r\n    return this.http\r\n      .delete(`${this.API}/cadastro/excluir/filho/${idFilho}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDadosRelacionamento(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/dados-relacionamento/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateDadosRelacionamento(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/dados-relacionamento`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPotencialCompra(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/potencial-compra/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updatePotencialCompra(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/potencial-compra`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAnexos(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/anexos/${codCliente}`)\r\n      .pipe(take(1)\r\n      // , retry(2)\r\n      );\r\n  }\r\n\r\n  uploadAnexo(data: any): Observable<Object> {\r\n    return this.http\r\n      .post(`${this.API}/cadastro/upload/anexo`, data)\r\n      .pipe(take(1)\r\n      // , retry(2)\r\n      );\r\n  }\r\n\r\n  deleteAnexo(idAnexo: number): Observable<Object> {\r\n    return this.http\r\n      .delete(`${this.API}/cadastro/excluir/anexo/${idAnexo}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getFilial(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/filial/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTravas(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/travas/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getInformacoesFinanceiras(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/cadastro/carregar/informacoes-financeiras/${codCliente}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getInformacoesComerciais(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/informacoes-comerciais/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getListaEmails(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/emails/lista/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { ComercialTemplatesModule } from './../../templates/templates.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from './../../../../shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { TemplatesModule } from './../../../../shared/templates/templates.module';\r\nimport { SharedModule } from './../../../../shared/modules/shared.module';\r\nimport { ComercialCadastrosMateriaisTemplatesModule } from './../../cadastros/materiais/templates/templates.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ComercialCadastrosRepresentantesRoutingModule } from './representantes-routing.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosRepresentantesListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosRepresentantesFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialCadastrosRepresentantesService } from './representantes.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosRepresentantesListaComponent,\r\n    ComercialCadastrosRepresentantesFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialCadastrosRepresentantesRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ComercialTemplatesModule,\r\n    ComercialCadastrosMateriaisTemplatesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    TextMaskModule,\r\n    NgBrazil,\r\n  ],\r\n  providers: [PNotifyService, ComercialCadastrosRepresentantesService],\r\n})\r\nexport class ComercialCadastrosRepresentantesModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NvbWlzc29lcy9yZXByZXNlbnRhbnRlcy9yZXByZXNlbnRhbnRlcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NvbWlzc29lcy9yZXByZXNlbnRhbnRlcy9wcm9ncmFtYWNhby1wYWdhbWVudG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<!-- <loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen> -->\\r\\n<app-header appTitle=\\\"Representantes\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" >\\r\\n  <div class=\\\"row\\\" >\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"nome\\\">Representante</label>\\r\\n              <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"nome\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"nome\\\"\\r\\n            >\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"0\\\">Inativos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"emiteNota\\\">Emite Nota</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"emiteNota\\\"\\r\\n                formControlName=\\\"emiteNota\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"0\\\">Não</option>\\r\\n                <option value=\\\"1\\\">Sim</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" >\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr >\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\" >\\r\\n              <thead-sorter\\r\\n                value=\\\"Código\\\"\\r\\n                [active]=\\\"orderBy == 'NM_VEND'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('NM_VEND')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\">Nome</th>\\r\\n\\r\\n            <th scope=\\\"col\\\">Dt Vigência</th>\\r\\n\\r\\n            <th scope=\\\"col\\\">CNPJ</th>\\r\\n\\r\\n            <th scope=\\\"col\\\"\\r\\n            [hidden]=\\\"showDetailPanel\\\">\\r\\n            Usuário\\r\\n          </th>\\r\\n\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dadosPagination; let i = index;\\\"\\r\\n          [class.table-active]=\\\"item.codRepresentante && showDetailPanel\\\"\\r\\n          >\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(item)\\\"\\r\\n              >\\r\\n              {{ item.codRepresentante }}\\r\\n            </td>\\r\\n            <!-- (click)=\\\"onDetails(item)\\\" -->\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              >\\r\\n              {{ item.nome | uppercase }}\\r\\n            </td>\\r\\n            <!-- (click)=\\\"onDetails(item)\\\" -->\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n\\r\\n              >\\r\\n              {{ item.dataFinalContrato | date: 'dd/MM/yyyy'}}\\r\\n            </td>\\r\\n            <!-- (click)=\\\"onDetails(item)\\\" -->\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n\\r\\n              >\\r\\n              {{ item.cnpjEmpresaRepresentacao }}\\r\\n            </td>\\r\\n            <!-- (click)=\\\"onDetails(item)\\\" -->\\r\\n              <td\\r\\n              class=\\\"hover\\\"\\r\\n\\r\\n              [hidden]=\\\"showDetailPanel\\\"\\r\\n              >\\r\\n              <span >{{ item.nomeUsuarioCadastro | uppercase }}</span>\\r\\n\\r\\n            </td>\\r\\n            <!-- (click)=\\\"onDetails(item)\\\" -->\\r\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"item.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, item)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"item.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, item)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(item)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"modeloComissao.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">De</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Até</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Comissão</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Valor Fixo</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor='let item of modeloComissao'>\\r\\n              <td class=\\\"text-center\\\">{{ item.grupos.de }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.grupos.ate }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.grupos.valorComissao }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.grupos.valorFixo }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\n// import { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosRepresentantesFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosRepresentantesListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosRepresentantesFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      { path: 'lista', component: ComercialCadastrosRepresentantesListaComponent },\r\n      {\r\n        path: '',\r\n        redirectTo: 'lista',\r\n        pathMatch: 'full',\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: ComercialCadastrosRepresentantesFormularioComponent,\r\n        resolve: {\r\n          detalhes: ComercialCadastrosRepresentantesFormularioResolverGuard,\r\n        },\r\n      },\r\n      {\r\n        path: 'editar/:id',\r\n        component: ComercialCadastrosRepresentantesFormularioComponent,\r\n        resolve: {\r\n          detalhes: ComercialCadastrosRepresentantesFormularioResolverGuard,\r\n        },\r\n      },\r\n    ]\r\n  },\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosRepresentantesRoutingModule {}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Representantes\\\"></app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <h5 class=\\\"pt-2 mb-4 text-center\\\">Selecione uma atividade</h5>\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-9\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-chart-pie\\\"\\r\\n            text=\\\"Programação de Pagamentos\\\"\\r\\n            [routerLink]=\\\"['../../programacao-pagamentos']\\\">\\r\\n          </card-button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <card-button\\r\\n            icon=\\\"fas fa-chart-pie\\\"\\r\\n            text=\\\"Gestão de Comissionamentos\\\"\\r\\n            [routerLink]=\\\"['../../gestao-comissionamentos']\\\">\\r\\n          </card-button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Programação de Pagamentos\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" >\\r\\n  <div class=\\\"row\\\" >\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-5\\\">\\r\\n              <label for=\\\"codRepresentante\\\">Representante</label>\\r\\n              <ng-select\\r\\n                  type='text'\\r\\n                  [items]=\\\"representantes\\\"\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"false\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  bindLabel=\\\"nomeRepresentante\\\"\\r\\n                  bindValue=\\\"codRepresentante\\\"\\r\\n                  formControlName=\\\"codRepresentante\\\">\\r\\n                </ng-select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-5\\\">\\r\\n              <label for=\\\"codStatus\\\">Status</label>\\r\\n              <ng-select\\r\\n                    type='text'\\r\\n                    [items]=\\\"situacao\\\"\\r\\n                    [searchable]=\\\"true\\\"\\r\\n                    [clearable]=\\\"false\\\"\\r\\n                    [virtualScroll]=\\\"true\\\"\\r\\n                    [hideSelected]=\\\"true\\\"\\r\\n                    placeholder=\\\"Selecione...\\\"\\r\\n                    bindLabel=\\\"nomeSituacao\\\"\\r\\n                    bindValue=\\\"codSituacao\\\"\\r\\n                    formControlName=\\\"codStatus\\\"\\r\\n                  >\\r\\n                </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"  *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!showDetailPanel \\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" >\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-4 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr >\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\" *ngIf=\\\"!showDetailPanel\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Código\\\"\\r\\n                [active]=\\\"orderBy == 'codPreco'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codPreco')\\\"\\r\\n                [hidden]=\\\"showDetailPanel\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n\\r\\n            <th scope=\\\"col\\\">Razão Social</th>\\r\\n\\r\\n            <th scope=\\\"col\\\">Cpf</th>\\r\\n\\r\\n            <th scope=\\\"col\\\"\\r\\n            [hidden]=\\\"showDetailPanel\\\">Valor NF</th>\\r\\n\\r\\n            <th scope=\\\"col\\\"\\r\\n            [hidden]=\\\"showDetailPanel\\\">Retenções</th>\\r\\n\\r\\n            <th scope=\\\"col\\\"\\r\\n            [hidden]=\\\"showDetailPanel\\\">Valor Comissão</th>\\r\\n\\r\\n          <th scope=\\\"col\\\"\\r\\n          [hidden]=\\\"showDetailPanel\\\">\\r\\n          Data Previsão\\r\\n          </th>\\r\\n\\r\\n          <th scope=\\\"col\\\"\\r\\n          [hidden]=\\\"showDetailPanel\\\">\\r\\n          Data Pagamento\\r\\n          </th>\\r\\n\\r\\n          <th scope=\\\"col\\\"\\r\\n          [hidden]=\\\"showDetailPanel\\\">\\r\\n        </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dados; let i = index;\\\"\\r\\n          [class.table-active]=\\\"item.codRepresentante == codigo\\\"\\r\\n          >\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              (click)=\\\"onDetails(item)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(item)\\\">\\r\\n              {{ item.codRepresentanteTid }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(item)\\\"\\r\\n              >\\r\\n              {{ item.nomeRepresentante }}\\r\\n            </td>\\r\\n            <td\\r\\n              *ngIf=\\\"item.cpfCnpj !== ''\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(item)\\\">\\r\\n              {{ item.cpfCnpj | cpf }}\\r\\n            </td>\\r\\n            <td\\r\\n              *ngIf=\\\"item.cpfCnpj === '' || item.cpfCnpj === null\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(item)\\\">\\r\\n              NÃO INFORMADO\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(item)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              {{ item.valorNotaFiscal | currency:'BRL':'symbol':'1.2-2' }}\\r\\n            </td>\\r\\n\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(item)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              {{ item.valorImpostos | currency:'BRL':'symbol':'1.2-2' }}\\r\\n            </td>\\r\\n\\r\\n            <td\\r\\n            class=\\\"hover\\\"\\r\\n            (click)=\\\"onDetails(item)\\\"\\r\\n            [hidden]=\\\"showDetailPanel\\\">\\r\\n            {{ item.valorComissao | currency:'BRL':'symbol':'1.2-2' }}\\r\\n          </td>\\r\\n\\r\\n            <td [hidden]=\\\"showDetailPanel\\\">\\r\\n              {{ item.dataProgramacaoPagamento | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n\\r\\n            <td [hidden]=\\\"showDetailPanel\\\">\\r\\n              {{ item.dataPagamento | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n\\r\\n            <td [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span class=\\\"mr-3\\\"  placement=\\\"right\\\" container=\\\"body\\\">\\r\\n                <btn-icon\\r\\n                  *ngIf=\\\"item.codSituacao === 7\\\"\\r\\n                  icon=\\\"fas fa-edit\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  tooltip=\\\"Inserir Data\\\"\\r\\n                  (click)=\\\"openModal(template, i); setFormDate(item)\\\">\\r\\n                </btn-icon>\\r\\n\\r\\n                <btn-icon\\r\\n                  *ngIf=\\\"item.dataProgramacaoPagamento != '' && item.codSituacao === 8\\\"\\r\\n                  icon=\\\"fab fa-product-hunt\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  color=\\\"success\\\"\\r\\n                  tooltip=\\\"Dar baixa\\\"\\r\\n                  (click)=\\\"onSubmitPagamento(item); setFormDate(item)\\\">\\r\\n                </btn-icon>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table [config]=\\\"tableConfigMateriais\\\"\\r\\n        *ngIf=\\\"representantesDetail.length > 0\\\"\\r\\n        >\\r\\n          <ng-template #thead let-thead >\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Representante</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Banco</th>\\r\\n              <th scope=\\\"col\\\">Tipo de Conta</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Titular</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Agência</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">C/C</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor='let item of representantesDetail'>\\r\\n              <td class=\\\"text-center\\\">{{ item.nomeRepresentante }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.nomeBanco }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.tipoConta }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.nrAgencia }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.nrContaCorrente }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.nomeTitularConta }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #template>\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModal(expedicao)\\\" aria-label=\\\"Close\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n      <div class=\\\"mtc-title text-center\\\">Edição e baixa de pagamento</div>\\r\\n      <div class=\\\"mtc-title text-center\\\" style=\\\"font-size: 0.7rem;\\\">REPRESENTANTE: {{ nomeRepresentante | uppercase }}</div>\\r\\n      <form [formGroup]=\\\"formDate\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"row mt-2\\\">\\r\\n          <div class=\\\"form-group col-lg-3\\\"></div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <div class=\\\"mtc-title text-center\\\" style=\\\"font-size: 0.7rem;\\\">Data de Programação</div>\\r\\n            <input\\r\\n              style=\\\"text-align: center;\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dtProgramacao\\\"\\r\\n              type=\\\"text\\\"\\r\\n              bsDatepicker\\r\\n              [daysDisabled]=\\\"[6,0]\\\"\\r\\n              [minDate]=\\\"minDate\\\"\\r\\n              formControlName=\\\"dataProgramacao\\\"\\r\\n              >\\r\\n            </div>\\r\\n              <div class=\\\"form-group col-lg-3\\\"></div>\\r\\n          </div>\\r\\n        </form>\\r\\n        <div class=\\\"row mt-2\\\">\\r\\n          <div class=\\\"col\\\" style=\\\"text-align: center;\\\">\\r\\n\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-primary btn-sm \\\"\\r\\n            (click)=\\\"modalRef.hide(); onSubmitProgramacao();\\\"\\r\\n            >\\r\\n            Salvar\\r\\n          </button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n          <div class=\\\"form-group col-lg-2\\\"></div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</app-body>\\r\\n\";","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from './../../../../../shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosMateriaisTemplatesModule } from './../../../cadastros/materiais/templates/templates.module';\r\nimport { ComercialTemplatesModule } from './../../../templates/templates.module';\r\nimport { TemplatesModule } from './../../../../../shared/templates/templates.module';\r\nimport { SharedModule } from './../../../../../shared/modules/shared.module';\r\n\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\nimport { ComercialComissoesRepresentantesProgramacaoPagamentosRoutingModule } from './programacao-pagamentos-routing.module';\r\n\r\n// Components\r\nimport { ComercialComissoesRepresentantesProgramacaoPagamentosListaComponent } from './lista/lista.component';\r\n\r\n// Services\r\nimport { ComercialComissoesRepresentantesProgramacaoPagamentosService } from './programacao-pagamentos.service';\r\n\r\n// Pipe\r\nimport { CPFPipe } from './../../../../../shared/pipes/cpf.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialComissoesRepresentantesProgramacaoPagamentosListaComponent,\r\n    CPFPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialComissoesRepresentantesProgramacaoPagamentosRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ComercialTemplatesModule,\r\n    ComercialCadastrosMateriaisTemplatesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    PNotifyService,\r\n    ComercialComissoesRepresentantesProgramacaoPagamentosService,\r\n  ],\r\n})\r\nexport class ComercialComissoesRepresentantesProgramacaoPagamentosModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9yZXByZXNlbnRhbnRlcy9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from './../../../../shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { TemplatesModule } from './../../../../shared/templates/templates.module';\r\nimport { SharedModule } from './../../../../shared/modules/shared.module';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ComercialComissoesRepresentantesRoutingModule } from './representantes-routing.module';\r\nimport { ComercialComissoesRepresentantesProgramacaoPagamentosModule } from './programacao-pagamentos/programacao-pagamentos.module';\r\n\r\n// Components\r\nimport { ComercialComissoesRepresentantesComponent } from './representantes.component';\r\n\r\n@NgModule({\r\n  declarations: [ComercialComissoesRepresentantesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    ComercialComissoesRepresentantesRoutingModule,\r\n    ComercialComissoesRepresentantesProgramacaoPagamentosModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n  ],\r\n  providers: [PNotifyService],\r\n})\r\nexport class ComercialComissoesRepresentantesModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosRepresentantesService } from './../representantes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosRepresentantesFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor( private representantesService: ComercialCadastrosRepresentantesService\r\n\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.representantesService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      mensagem: null,\r\n      data: [\r\n        {\r\n          codSituacao: '',\r\n          tipoPagamentoComissao: null,\r\n          emiteNotaFiscal: null,\r\n          recebeEmailInativacaoCliente: null,\r\n          codEquipe: null,\r\n          codEmpresa: null,\r\n          nrMatricula: null,\r\n          nome: null,\r\n          razaoSocial: null,\r\n          endereco: null,\r\n          // nrEndereco: null,\r\n          // complemento: null,\r\n          nomeBairro: null,\r\n          cep: null,\r\n          nomeCidade: null,\r\n          uf: null,\r\n          cnpj: null,\r\n          ie: null,\r\n          im: null,\r\n          telefone: null,\r\n          celular: null,\r\n          email: null,\r\n          dataInicialContrato: null,\r\n          dataFinalContrato: null,\r\n          // dataRenovacaoContrato: null,\r\n          nomeFantasiaRepresentacao: null,\r\n          razaoSocialRepresentacao: null,\r\n          cnpjEmpresaRepresentacao: null,\r\n          ieEmpresaRepresentacao: null,\r\n          imEmpresaRepresentacao: null,\r\n          nomeTitularConta: null,\r\n          tipoConta: null,\r\n          nomeBanco: null,\r\n          agencia: null,\r\n          contaCorrente: null,\r\n      }\r\n    ],\r\n    });\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div  class=\\\"ml-5 mr-5\\\">\\r\\n  <div class=\\\"row ml-5 mr-5\\\">\\r\\n  <div class=\\\"row ml-5 mr-5\\\">\\r\\n  <div class=\\\"row ml-5 mr-5\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" >\\r\\n    <div class=\\\"mtc-title mb-2\\\">Formulário cadastro de representante</div>\\r\\n    <hr>\\r\\n  <div class=\\\"row ml-5 mr-5\\\">\\r\\n    <div class=\\\"mtc-title mb-3 mt-2 ml-3 col-lg-12\\\">Dados do Representante</div>\\r\\n          <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label>Situação</label>\\r\\n              <ng-select\\r\\n              type='text'\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"situacao\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              [hideSelected]=\\\"true\\\"\\r\\n              [closeOnSelect]=\\\"true\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              bindLabel=\\\"descricao\\\"\\r\\n              bindValue=\\\"id\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired('codSituacao')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"tipoPagamentoComissao\\\">Tipos Comissão</label>\\r\\n                    <ng-select\\r\\n                      type='text'\\r\\n                      [searchable]=\\\"true\\\"\\r\\n                      [clearable]=\\\"false\\\"\\r\\n                      [items]=\\\"tipoComissao\\\"\\r\\n                      [virtualScroll]=\\\"true\\\"\\r\\n                      [hideSelected]=\\\"true\\\"\\r\\n                      [closeOnSelect]=\\\"true\\\"\\r\\n                      placeholder=\\\"Selecione...\\\"\\r\\n                      bindLabel=\\\"dsTipoComissao\\\"\\r\\n                      bindValue=\\\"idTipoComissao\\\"\\r\\n                      formControlName=\\\"tipoPagamentoComissao\\\"\\r\\n                      (change)=\\\"openModal(tiposComissao);\\\"\\r\\n                      [ngClass]=\\\"onFieldError('tipoPagamentoComissao') + ' ' + onFieldRequired('tipoPagamentoComissao')\\\"\\r\\n                    >\\r\\n\\r\\n\\r\\n                    <invalid-form-control [show]=\\\"onFieldInvalid('tipoPagamentoComissao')\\\" message=\\\"Equipe é obrigatório.\\\"></invalid-form-control>\\r\\n                    </ng-select>\\r\\n                </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"emiteNotaFiscal\\\">Emite Nota</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"emiteNotaFiscal\\\"\\r\\n                formControlName=\\\"emiteNotaFiscal\\\">\\r\\n                <option value=\\\"0\\\">Não</option>\\r\\n                <option value=\\\"1\\\">Sim</option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"recebeEmailInativacaoCliente\\\">Recebe Email</label>\\r\\n              <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"recebeEmailInativacaoCliente\\\"\\r\\n                  formControlName=\\\"recebeEmailInativacaoCliente\\\">\\r\\n                  <option value=\\\"0\\\">Não</option>\\r\\n                  <option value=\\\"1\\\">Sim</option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-5\\\">\\r\\n              <label for=\\\"codEquipe\\\">Equipe</label>\\r\\n                <ng-select\\r\\n                  type='text'\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"false\\\"\\r\\n                  [items]=\\\"equipes\\\"\\r\\n                  [virtualScroll]=\\\"true\\\"\\r\\n                  [hideSelected]=\\\"true\\\"\\r\\n                  [closeOnSelect]=\\\"true\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  bindLabel=\\\"dsEquipeVenda\\\"\\r\\n                  bindValue=\\\"codEquipeVenda\\\"\\r\\n                  formControlName=\\\"codEquipe\\\"\\r\\n                  [ngClass]=\\\"onFieldError('codEquipe') + ' ' + onFieldRequired('codEquipe')\\\"\\r\\n                >\\r\\n                <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('codEquipe')\\\"\\r\\n                message=\\\"Equipe é obrigatório.\\\">\\r\\n                </invalid-form-control>\\r\\n                  </ng-select>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group col-lg-5\\\">\\r\\n                <label for=\\\"codEscritorio\\\">Escritório</label>\\r\\n                <ng-select\\r\\n                  type='text'\\r\\n                  [searchable]=\\\"true\\\"\\r\\n                  [clearable]=\\\"false\\\"\\r\\n                  [items]=\\\"escritorio\\\"\\r\\n                  [virtualScroll]=\\\"true\\\"\\r\\n                  [hideSelected]=\\\"true\\\"\\r\\n                  [closeOnSelect]=\\\"true\\\"\\r\\n                  placeholder=\\\"Selecione...\\\"\\r\\n                  bindLabel=\\\"nomeEscritorio\\\"\\r\\n                  bindValue=\\\"codEscritorio\\\"\\r\\n                  formControlName=\\\"codEscritorio\\\"\\r\\n                  [ngClass]=\\\"onFieldError('codEscritorio') + ' ' + onFieldRequired('codEscritorio')\\\"\\r\\n                >\\r\\n                <!-- (change)=\\\"openModal(template)\\\" -->\\r\\n                <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('codEscritorio')\\\"\\r\\n                message=\\\"Escritorio é obrigatório.\\\">\\r\\n                </invalid-form-control>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"nrMatricula\\\">Matrícula</label>\\r\\n              <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"nrMatricula\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"nrMatricula\\\"\\r\\n            [ngClass]=\\\"onFieldError('nrMatricula') + ' ' + onFieldRequired('nrMatricula')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nrMatricula')\\\" message=\\\"Número da Matrícula é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"nome\\\">Nome</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"nome\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"nome\\\"\\r\\n                [ngClass]=\\\"onFieldError('nome') + ' ' + onFieldRequired('nome')\\\"\\r\\n                >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nome')\\\" message=\\\"Nome é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"razaoSocial\\\">Razão Social</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"razaoSocial\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"razaoSocial\\\"\\r\\n                [ngClass]=\\\"onFieldError('razaoSocial') + ' ' + onFieldRequired('razaoSocial')\\\"\\r\\n                >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocial')\\\" message=\\\"Razão Social é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"cep\\\">Cep</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"cep\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"cep\\\"\\r\\n                (input)=\\\"onInput(); onInputCep(detalhes);\\\"\\r\\n                [ngClass]=\\\"onFieldError('cep') + ' ' + onFieldRequired('cep')\\\"\\r\\n                cep [textMask]=\\\"{ mask: MASKS.cep.textMask }\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cep')\\\" message=\\\"Cep é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-10\\\">\\r\\n              <label for=\\\"endereco\\\">Endereço</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"endereco\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"endereco\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                [ngClass]=\\\"onFieldError('endereco') + ' ' + onFieldRequired('endereco')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('endereco')\\\" message=\\\"Endereço é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"nrEndereco\\\">Número</label>\\r\\n              <input\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"nrEndereco\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  formControlName=\\\"nrEndereco\\\"\\r\\n              >\\r\\n\\r\\n            </div> -->\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-lg-5\\\">\\r\\n              <label for=\\\"nomeBairro\\\">Bairro</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"nomeBairro\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"nomeBairro\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                [ngClass]=\\\"onFieldError('nomeBairro') + ' ' + onFieldRequired('nomeBairro')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeBairro')\\\" message=\\\"Bairro é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"complemento\\\">Complemento</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"complemento\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"complemento\\\"\\r\\n            >\\r\\n            </div> -->\\r\\n\\r\\n            <div class=\\\"form-group col-lg-5\\\">\\r\\n              <label for=\\\"nomeCidade\\\">Cidade</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"nomeCidade\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"nomeCidade\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                [ngClass]=\\\"onFieldError('nomeCidade') + ' ' + onFieldRequired('nomeCidade')\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeCidade')\\\" message=\\\"Cidade é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"uf\\\">UF</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"uf\\\"\\r\\n                formControlName=\\\"uf\\\"\\r\\n                (change)=\\\"onInput()\\\"\\r\\n                [ngClass]=\\\"onFieldError('uf') + ' ' + onFieldRequired('uf')\\\">\\r\\n                <option value=\\\"\\\">SELECIONE UMA OPÇÃO</option>\\r\\n                <option *ngFor=\\\"let item of estados\\\" [value]=\\\"item.sigla\\\">{{ item.sigla }}</option>\\r\\n              </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('uf')\\\" message=\\\"Uf é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"cpf\\\">cpf</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"cpf\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"cpf\\\"\\r\\n                [ngClass]=\\\"onFieldError('cpf') + ' ' + onFieldRequired('cpf')\\\"\\r\\n                cpf [textMask]=\\\"{ mask: MASKS.cpf.textMask }\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cpf')\\\" message=\\\"CPF é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"rg\\\">Rg</label>\\r\\n              <input\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"rg\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  formControlName=\\\"rg\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('rg')\\\" message=\\\"RG é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"email\\\">E-mail</label>\\r\\n              <input\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"email\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  formControlName=\\\"email\\\"\\r\\n            >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email')\\\" message=\\\"E-mail é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"telefone\\\">Telefone</label>\\r\\n            <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"telefone\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"telefone\\\"\\r\\n                telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('telefone')\\\" message=\\\"Telefone é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"celular\\\">Celular</label>\\r\\n            <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"celular\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"celular\\\"\\r\\n                telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('celular')\\\" message=\\\"Celular é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"dataInicialContrato\\\">Data Início</label>\\r\\n          <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataInicialContrato\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                formControlName=\\\"dataInicialContrato\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataInicialContrato') + ' ' + onFieldRequired('dataInicialContrato')\\\"\\r\\n          >\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('dataInicialContrato')\\\" message=\\\"Data Inicial é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"dataFinalContrato\\\">Data Final</label>\\r\\n          <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataFinalContrato\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                formControlName=\\\"dataFinalContrato\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataFinalContrato') + ' ' + onFieldRequired('dataFinalContrato')\\\"\\r\\n          >\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('dataFinalContrato')\\\" message=\\\"Data Vigência é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n\\r\\n          <!-- <div class=\\\"form-group col-lg-4\\\">\\r\\n          <label for=\\\"dataRenovacaoContrato\\\">Data Renovação</label>\\r\\n          <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataRenovacaoContrato\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                formControlName=\\\"dataRenovacaoContrato\\\"\\r\\n          >\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('dataRenovacaoContrato')\\\" message=\\\"Data Renovação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div> -->\\r\\n\\r\\n          <!-- ####################################################################################### -->\\r\\n          <div class=\\\"col-lg-12\\\" formArrayName=\\\"anexos\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-12 d-flex align-items-start\\\">\\r\\n                <div class=\\\"mtc-title mb-0\\\">Anexos</div>\\r\\n              </div>\\r\\n              <!-- Se não puder permitir mais de um anexo, adicione [hidden]=\\\"form.value.anexos.length > 0\\\"  -->\\r\\n              <div class=\\\"col\\\">\\r\\n                <label\\r\\n                  for=\\\"novoAnexo\\\"\\r\\n                  class=\\\"d-flex justify-content-start align-items-center\\\"\\r\\n                  style=\\\"cursor: pointer\\\">\\r\\n                  <p class=\\\"btn btn-sm btn-outline-primary m-0\\\">\\r\\n                    <i class=\\\"fas fa-plus\\\"></i>\\r\\n                    <span>Anexo</span>\\r\\n                  </p>\\r\\n                </label>\\r\\n                <input\\r\\n                  id=\\\"novoAnexo\\\"\\r\\n                  type=\\\"file\\\"\\r\\n                  (change)=\\\"appendFile($event.target.files)\\\"\\r\\n                  class=\\\"d-none\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"showAnexos && form.value.anexos.length > 0\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <custom-table [config]=\\\"tableConfigAnexos\\\">\\r\\n                  <ng-template #tbody let-tbody>\\r\\n                    <tr\\r\\n                      *ngFor=\\\"let anexo of anexos.controls; let i = index\\\"\\r\\n                      [formGroupName]=\\\"i\\\"\\r\\n                    >\\r\\n                      <td style=\\\"width: 90%\\\">\\r\\n                        {{ form.value.anexos[i].codAnexo }} -\\r\\n                        {{ form.value.anexos[i].nomeAnexo | uppercase }}\\r\\n                      </td>\\r\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                        <a\\r\\n                          (click)=\\\"navegarAnexo(anexo)\\\"\\r\\n                          *ngIf=\\\"form.value.anexos[i].codAnexo != null\\\"\\r\\n                          target=\\\"_blank\\\"\\r\\n                          class=\\\"btn-icon-sm mx-2 text-black\\\"\\r\\n                          tooltip=\\\"visualizar\\\"\\r\\n                        >\\r\\n                          <i class=\\\"far fa-eye\\\"></i>\\r\\n                        </a>\\r\\n                      </td>\\r\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                        <btn-icon\\r\\n                          icon=\\\"fas fa-trash\\\"\\r\\n                          size=\\\"small\\\"\\r\\n                          tooltip=\\\"Excluir\\\"\\r\\n                          (click)=\\\"\\r\\n                            onDeleteAnexo(form.value.anexos[i].codAnexo, i)\\r\\n                          \\\"\\r\\n\\r\\n                        >\\r\\n                        <!-- [hidden]=\\\"visualizar\\\" -->\\r\\n                        </btn-icon>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </custom-table>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"showAnexos && form.value.anexos.length === 0\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <message\\r\\n                  icon=\\\"fas fa-exchange-alt\\\"\\r\\n                  text=\\\"Nenhum documento encontrado\\\"\\r\\n                >\\r\\n                </message>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n    <!-- ####################################################################################### -->\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n          <hr>\\r\\n          <div class=\\\"row ml-5 mr-5\\\">\\r\\n          <div class=\\\"mtc-title mb-3 mt-2 ml-3 col-lg-12\\\">Dados da Empresa de Representação</div>\\r\\n\\r\\n          <div class=\\\"form-group col-lg-12\\\">\\r\\n            <label for=\\\"nomeFantasiaRepresentacao\\\">Nome Fantasia</label>\\r\\n            <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"nomeFantasiaRepresentacao\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"nomeFantasiaRepresentacao\\\"\\r\\n\\r\\n          >\\r\\n          <!-- [ngClass]=\\\"onFieldError('nomeFantasiaRepresentacao') + ' ' + onFieldRequired('nomeFantasiaRepresentacao')\\\"\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('nomeFantasiaRepresentacao')\\\" message=\\\"Nome Fantasia é obrigatório.\\\"></invalid-form-control> -->\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group col-lg-12\\\">\\r\\n            <label for=\\\"razaoSocialRepresentacao\\\">Razão Social</label>\\r\\n            <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"razaoSocialRepresentacao\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"razaoSocialRepresentacao\\\"\\r\\n\\r\\n          >\\r\\n          <!-- [ngClass]=\\\"onFieldError('razaoSocialRepresentacao') + ' ' + onFieldRequired('razaoSocialRepresentacao')\\\"\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('razaoSocialRepresentacao')\\\" message=\\\"Razão Social é obrigatório.\\\"></invalid-form-control> -->\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"cnpjEmpresaRepresentacao\\\">CNPJ</label>\\r\\n            <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"cnpjEmpresaRepresentacao\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"cnpjEmpresaRepresentacao\\\"\\r\\n                cnpj [textMask]=\\\"{ mask: MASKS.cnpj.textMask }\\\">\\r\\n                <!-- [ngClass]=\\\"onFieldError('cnpjEmpresaRepresentacao') + ' ' + onFieldRequired('cnpjEmpresaRepresentacao')\\\"\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('cnpjEmpresaRepresentacao')\\\" message=\\\"CNPJ é obrigatório.\\\"></invalid-form-control> -->\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"ieEmpresaRepresentacao\\\">Inscrição Estadual</label>\\r\\n            <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"ieEmpresaRepresentacao\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"ieEmpresaRepresentacao\\\"\\r\\n          >\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('ieEmpresaRepresentacao')\\\" message=\\\"Inscrição Estadual é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"imEmpresaRepresentacao\\\">Inscrição Municipal</label>\\r\\n            <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"imEmpresaRepresentacao\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"imEmpresaRepresentacao\\\"\\r\\n          >\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('imEmpresaRepresentacao')\\\" message=\\\"Inscrição Municipal é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n\\r\\n        <div class=\\\"form-group col-lg-6\\\"></div>\\r\\n        </div>\\r\\n\\r\\n        <hr>\\r\\n        <div class=\\\"row ml-5 mr-5\\\">\\r\\n        <div class=\\\"mtc-title mb-3 mt-2 ml-3 col-lg-12\\\">Dados Bancários</div><br>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group col-lg-9\\\">\\r\\n        <label for=\\\"nomeTitularConta\\\">Titular</label>\\r\\n        <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"nomeTitularConta\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"nomeTitularConta\\\"\\r\\n          >\\r\\n        <invalid-form-control [show]=\\\"onFieldInvalid('nomeTitularConta')\\\" message=\\\"Titular é obrigatório.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n        <label for=\\\"tipoConta\\\">Tipo</label>\\r\\n        <select\\r\\n          class=\\\"form-control custom-select\\\"\\r\\n          id=\\\"tipoConta\\\"\\r\\n          placeholder=\\\"Selecione...\\\"\\r\\n          formControlName=\\\"tipoConta\\\">\\r\\n          <option value=\\\"F\\\">Física</option>\\r\\n          <option value=\\\"J\\\">Jurídica</option>\\r\\n        </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-lg-6\\\">\\r\\n          <label for=\\\"nomeBanco\\\">Banco</label>\\r\\n\\r\\n          <ng-select\\r\\n            type='text'\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"bancos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"nomeBanco\\\"\\r\\n            bindValue=\\\"idBanco\\\"\\r\\n            formControlName=\\\"nomeBanco\\\"\\r\\n            [ngClass]=\\\"onFieldError('nomeBanco') + ' ' + onFieldRequired('nomeBanco')\\\">\\r\\n        <invalid-form-control [show]=\\\"onFieldInvalid('nomeBanco')\\\" message=\\\"Banco é obrigatório.\\\"></invalid-form-control>\\r\\n        </ng-select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"agencia\\\">Agência</label>\\r\\n          <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"agencia\\\"\\r\\n              type=\\\"text\\\"\\r\\n              formControlName=\\\"agencia\\\"\\r\\n        >\\r\\n        <invalid-form-control [show]=\\\"onFieldInvalid('agencia')\\\" message=\\\"Agência é obrigatório.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"contaCorrente\\\">Conta Corrente</label>\\r\\n          <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"contaCorrente\\\"\\r\\n              type=\\\"text\\\"\\r\\n              formControlName=\\\"contaCorrente\\\"\\r\\n        >\\r\\n        <invalid-form-control [show]=\\\"onFieldInvalid('contaCorrente')\\\" message=\\\"Conta Corrente é obrigatório.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n    </div>\\r\\n      <hr>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  </form>\\r\\n\\r\\n  <ng-template #tiposComissao>\\r\\n\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <div class=\\\"mtc-title\\\">Faixa de percentual</div>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModal(tiposComissao);\\\" aria-label=\\\"Close\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <div class=\\\"row mb-3\\\">\\r\\n        <div class=\\\"col-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"mtc-title\\\"*ngIf=\\\"tipoComissaoModal.length > 0\\\">{{ tipoComissaoModal[0].dsTipoComissionamento }}</div>\\r\\n        <div class=\\\"col-12 mb-4\\\" *ngFor=\\\"let dados of tipoComissaoModal\\\">\\r\\n          <custom-table *ngIf=\\\"tipoComissaoModal.length > 0\\\">\\r\\n            <ng-template #thead let-thead  >\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 50%\\\">Linha</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 50%\\\">Classe</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr>\\r\\n                <td class=\\\"text-center\\\">{{ dados.nomeLinha }}</td>\\r\\n                <td class=\\\"text-center\\\" *ngIf=\\\"dados.codClasse === 0\\\" >TODOS</td>\\r\\n                <td class=\\\"text-center\\\" *ngIf=\\\"dados.codClasse != 0\\\">{{ dados.nomeClasse }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n\\r\\n        <custom-table *ngIf=\\\"tipoComissaoModal.length > 0\\\" [config]=\\\"tableConfigDetail\\\">\\r\\n          <!-- *ngIf=\\\"dados.length > 0\\\" -->\\r\\n          <ng-template #thead let-thead  >\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 55%\\\">Percentual de desconto da tabela de vendas de materiais (%) </th>\\r\\n              <th scope=\\\"col\\\" class=\\\"border text-center\\\" style=\\\"width: 45%\\\">Percentual a ser pago de comissão sobre o título (%) </th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let item of dados.percentual\\\">\\r\\n              <td class=\\\"text-center\\\">{{ item.percDescontoDe }} a {{ item.percDescontoAte }} %</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.percPago }} %</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </div>\\r\\n\\r\\n        <div class=\\\"col-1\\\"></div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </ng-template>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n<ng-template #detalhes>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Escolha o endereço a ser utilizado</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onModalClose()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form [formGroup]=\\\"formEnderecos\\\" (ngSubmit)=\\\"setValueEndereco()\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-md-12\\\" *ngFor=\\\"let endereco of enderecosOp; let i = index\\\">\\r\\n          <div class=\\\"custom-control custom-radio\\\">\\r\\n            <input [id]=\\\"i\\\" class=\\\"custom-control-input\\\" formControlName=\\\"enderecosRetorno\\\" type=\\\"radio\\\" [value]=\\\"endereco\\\"/>\\r\\n            <label class=\\\"custom-control-label\\\" [for]=\\\"i\\\">{{endereco.logradouro}}, {{endereco.unidade}} - {{endereco.bairro}}, {{endereco.localidade}} - {{endereco.uf}}, {{endereco.cep}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 d-flex justify-content-center\\\">\\r\\n          <button class=\\\"btn btn-primary\\\">Selecionar</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</ng-template>\\r\\n</app-body>\\r\\n\";","import { ComercialComissoesGestaoComissionamentosService } from './../../gestao-comissionamentos/gestao-comissionamentos.service';\r\nimport { Subtitles } from './../../../../../../shared/modules/subtitles/subtitles';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  ViewChild,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { AtividadesService } from './../../../../../../shared/services/requests/atividades.service';\r\nimport { ConfirmModalService } from './../../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { PNotifyService } from './../../../../../../shared/services/core/pnotify.service';\r\nimport { ComercialComissoesRepresentantesProgramacaoPagamentosService } from './../programacao-pagamentos.service';\r\nimport { DetailPanelService } from './../../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { DateService } from './../../../../../../shared/services/core/date.service';\r\nimport { ComercialCadastrosEscritorioService } from './../../../../cadastros/escritorios/escritorios.service';\r\nimport { ComercialService } from './../../../../comercial.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from './../../../../../../shared/templates/custom-table/models/config';\r\nimport { Breadcrumb } from './../../../../../../shared/modules/breadcrumb/breadcrumb';\r\nimport { dadosBancarios, representantes } from './../models/representantes';\r\nimport { JsonResponse } from './../../../../../../models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-representantes-programacao-pagamentos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialComissoesRepresentantesProgramacaoPagamentosListaComponent\r\n  implements OnInit\r\n{\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Aguardando Programação de Pagamento',\r\n      color: 'gray',\r\n    },\r\n    {\r\n      id: 0,\r\n      text: 'Aguardando Pagamento',\r\n      color: 'blue',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Pagamento Realizado',\r\n      color: 'green',\r\n    },\r\n  ];\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n  nomeRepresentante: string;\r\n\r\n  dados: any[] = [];\r\n  representantes: any[] = [];\r\n  representantesDetail: any[] = [];\r\n  representanteSelecionado: any[] = [];\r\n  escritorios: any[] = [];\r\n  situacao: any[] = [];\r\n\r\n  codigo: number;\r\n\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n  programado = false;\r\n\r\n  bsValue = new Date();\r\n  bsRangeValue: Date[];\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  grupoSelecionado: any;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n  formDate: FormGroup;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private activateRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private dateService: DateService,\r\n    private router: Router,\r\n    private detailPanelService: DetailPanelService,\r\n    private pnotifyService: PNotifyService,\r\n    private programacaoPagamentosService: ComercialComissoesRepresentantesProgramacaoPagamentosService,\r\n    private atividadesService: AtividadesService,\r\n    private bsModalService: BsModalService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private modalService: BsModalService,\r\n    private comercialService: ComercialService,\r\n    private escritoriosService: ComercialCadastrosEscritorioService,\r\n    private gestaoComissionamentosService: ComercialComissoesGestaoComissionamentosService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormFilter();\r\n    // this.getRegistros();\r\n    this.setBreadCrumb();\r\n    this.registrarAcesso();\r\n    this.onDetailPanelEmitter();\r\n    this.getEscritorios();\r\n    this.getSituacao();\r\n    this.getRepresentantes();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activateRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/',\r\n        },\r\n        {\r\n          descricao: 'Comissões',\r\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Representantes',\r\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}/representantes`,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  // form\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      // dtInicioVigencia: [this.dateService.getFirstDayMonth()],\r\n      // dtFimVigencia: [this.dateService.getLastDayMonth()],\r\n      // codEscritorio: [formValue.codEscritorio],\r\n      codRepresentante: [formValue.codRepresentante],\r\n      codStatus: [formValue.codStatus],\r\n      registros: [formValue.registros],\r\n    });\r\n\r\n    // this.checkOrder();\r\n  }\r\n\r\n  // formDate\r\n  setFormDate(item): void {\r\n    this.nomeRepresentante = item.nomeRepresentante;\r\n    this.codigo = item.codRepresentante;\r\n    this.formDate = this.formBuilder.group({\r\n      codComissaoRepresentante: [item.codComissaoRepresentante],\r\n      dataProgramacao: '',\r\n      dataPagamento: new Date(),\r\n    });\r\n  }\r\n\r\n  onSubmitProgramacao() {\r\n    if (this.formDate.valid) {\r\n      // validação salvar\r\n    }\r\n\r\n    this.programacaoPagamentosService\r\n      .postProgramacaoPagamento(this.formDate.getRawValue())\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.nomeRepresentante = '';\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response.hasOwnProperty('success') && response.success === true) {\r\n          this.onFilter();\r\n\r\n          this.pnotifyService.success();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmitPagamento(item?) {\r\n    this.confirmModalService\r\n      .showConfirm(\r\n        null,\r\n        'Baixa de Pagamento',\r\n        `Você está prestes a dar baixa no pagamento do representante ${item.nomeRepresentante}. Deseja continuar mesmo assim?`,\r\n        'Cancelar',\r\n        'Confirmar'\r\n      )\r\n      .subscribe((response: boolean) =>\r\n        response ? this.onPostPagamento() : null\r\n      );\r\n  }\r\n\r\n  onPostPagamento() {\r\n    this.programacaoPagamentosService\r\n      .postPagamento(this.formDate.getRawValue())\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response.success === true) {\r\n          this.pnotifyService.success('Baixa efetuada com sucesso');\r\n          this.onFilter();\r\n        } else {\r\n          this.pnotifyService.error(response.mensagem);\r\n        }\r\n      });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  navigateCadastroRepresentantes(item?) {\r\n    // ${item.codRepresentante}\r\n    this.router.navigate([`/comercial/cadastros/99/representantes/editar/839`], {\r\n      relativeTo: this.activateRoute\r\n    });\r\n  }\r\n\r\n  classStatusBorder(item: any): string {\r\n    let borderClass: string;\r\n\r\n    if (item.codSituacao === 7) {\r\n      borderClass = 'border-secondary';\r\n    } else if (item.codSituacao === 8) {\r\n      borderClass = 'border-primary';\r\n    } else if (item.codSituacao === 9) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      codRepresentante: 0,\r\n      // dtInicioVigencia: [this.dateService.getFirstDayMonth()],\r\n      // dtFimVigencia: [this.dateService.getLastDayMonth()],\r\n      // codEscritorio: 0,\r\n      codStatus: 0,\r\n      registros: this.itemsPerPage,\r\n    };\r\n    this.activatedRouteSubscription = this.activateRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  getEscritorios() {\r\n    this.escritoriosService\r\n      .getListaEscritorios({ tipo: 'faturamento' })\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success === true) {\r\n            this.escritorios = response.data;\r\n\r\n            this.escritorios.unshift({\r\n              codEscritorio: 0,\r\n              nomeEscritorio: 'EXIBIR TODOS',\r\n            });\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  getRepresentantes() {\r\n    this.gestaoComissionamentosService\r\n      .getRepresentantes(0)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success === true) {\r\n            this.representantes = response.data;\r\n\r\n            this.representantes.unshift({\r\n              codRepresentante: 0,\r\n              nomeRepresentante: 'EXIBIR TODOS',\r\n            });\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  getSituacao() {\r\n    this.programacaoPagamentosService.getSituacao().subscribe(\r\n      (response: any) => {\r\n        if (response.success === true) {\r\n          this.situacao = response.data;\r\n\r\n          this.situacao.unshift({\r\n            codSituacao: 0,\r\n            nomeSituacao: 'EXIBIR TODOS',\r\n          });\r\n        } else {\r\n          this.pnotifyService.error();\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.pnotifyService.error();\r\n      }\r\n    );\r\n  }\r\n\r\n  closeModal(modalRef: TemplateRef<any>) {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  // Pesquisa\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.getParams());\r\n    }\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.programacaoPagamentosService\r\n      .getListaProgramacao(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  // Verifica Parâmetros\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activateRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n    return _params;\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.codRepresentante) {\r\n      params.codRepresentante = this.form.value.codRepresentante;\r\n    }\r\n\r\n    if (this.form.value.dtInicioVigencia) {\r\n      params.dtInicioVigencia = this.form.value.dtInicioVigencia;\r\n    }\r\n\r\n    if (this.form.value.dtFimVigencia) {\r\n      params.dtFimVigencia = this.form.value.dtFimVigencia;\r\n    }\r\n\r\n    if (this.form.value.codStatus) {\r\n      params.codStatus = this.form.value.codStatus;\r\n    }\r\n\r\n    params.pagina = this.form.value.pagina;\r\n    params.registros = this.form.value.registros;\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  //Detail Panel\r\n\r\n  onDetails(item): void {\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Dados Bancários`;\r\n    this.setDadosBancarios();\r\n    this.grupoSelecionado = item;\r\n    this.representantesDetail = [];\r\n    this.loaderNavbar = true;\r\n    this.codigo = item.codRepresentante;\r\n\r\n    this.programacaoPagamentosService\r\n      .getAssociacoesDetails(item.codRepresentanteTid)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n            this.detailPanelService.loadedFinished(false);\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.representantesDetail = response.data;\r\n            // this.totalItems = this.dados[0]['total'];\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  setDadosBancarios(): void {\r\n    this.grupoSelecionado = {\r\n      codProgramacao: null,\r\n      bancoRepresentante: null,\r\n      tipoConta: null,\r\n      agencia: null,\r\n      titular: null,\r\n      contaCorrente: null,\r\n    };\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  // Get e EditarLista\r\n  getRegistros() {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.programacaoPagamentosService\r\n      .getListaProgramacao()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n\r\n            this.totalItems = this.dados[0]['total'];\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onEdit(item: any): void {\r\n    this.router.navigate(['../editar', item.codPreco], {\r\n      relativeTo: this.activateRoute,\r\n    });\r\n  }\r\n\r\n  // Outros\r\n  onPageChanged(event: PageChangedEvent) {\r\n    if (this.form.value.pagina != event.page) {\r\n      this.detailPanelService.hide();\r\n      // this.setGrupoSelecionado();\r\n      this.form.value.pagina = event.page;\r\n      this.onFilter();\r\n\r\n      this.scrollToFilter.nativeElement.scrollIntoView({\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }\r\n\r\n  refreshMainData(grupo: any): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (grupo.codRepresentantes === this.dados[i].codRepresentantes) {\r\n        this.dados[i].codSituacao = grupo.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  //modal\r\n  openModal(template: TemplateRef<any>, index) {\r\n    this.modalRef = this.bsModalService.show(template, index);\r\n  }\r\n\r\n  // Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\n// import { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\n\r\n// Components\r\nimport { ComercialComissoesRepresentantesComponent } from './representantes.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ComercialComissoesRepresentantesComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'programacao-pagamentos',\r\n        loadChildren: () =>\r\n          import(\r\n            './programacao-pagamentos/programacao-pagamentos.module'\r\n          ).then(\r\n            (m) =>\r\n              m.ComercialComissoesRepresentantesProgramacaoPagamentosModule\r\n          ),\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'gestao-comissionamentos',\r\n        loadChildren: () =>\r\n          import(\r\n            './gestao-comissionamentos/gestao-comissionamentos.module'\r\n          ).then(\r\n            (m) =>\r\n              m.ComercialComissoesRepresentantesGestaoComissionamentosModule\r\n          ),\r\n      },\r\n    ],\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialComissoesRepresentantesRoutingModule {}\r\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport {  PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n\r\n\r\n// Services\r\nimport { PNotifyService } from './../../../../../shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { AtividadesService } from './../../../../../shared/services/requests/atividades.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { DateService } from './../../../../../shared/services/core/date.service';\r\nimport { ComercialCadastrosRepresentantesService } from './../representantes.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from './../../../../../models/json-response';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\nimport { Breadcrumb } from './../../../../../shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-representantes-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosRepresentantesListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/',\r\n    },\r\n    {\r\n      descricao: 'Cadastros',\r\n      routerLink: `/comercial/cadastros/99`,\r\n    },\r\n    {\r\n      descricao: 'Representantes',\r\n      routerLink: '/comercial/cadastros/99/representantes/lista',\r\n    },\r\n  ];\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  dados: any[] = [];\r\n  dadosPagination: Array<any> = [];\r\n  modeloComissao: any[] = [];\r\n\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  grupoSelecionado: any;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'NM_VEND';\r\n  orderType = 'ASC';\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private activateRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private dateService: DateService,\r\n    private router: Router,\r\n    private detailPanelService: DetailPanelService,\r\n    private pnotifyService: PNotifyService,\r\n    private cadastroRepresentantesService: ComercialCadastrosRepresentantesService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormFilter();\r\n    // this.getRegistros();\r\n    this.registrarAcesso();\r\n    this.onDetailPanelEmitter();\r\n  }\r\n\r\n\r\n// Formulário\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      codRepresentante: [formValue.codRepresentante],\r\n      nome: [formValue.nome],\r\n      codSituacao: [formValue.codSituacao],\r\n      emiteNota: [formValue.emiteNota],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    // this.checkOrder();\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      codRepresentante: null,\r\n      nome: null,\r\n      codSituacao: '',\r\n      emiteNota: '',\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n    this.activatedRouteSubscription = this.activateRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n// Ordem lista\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n\r\n  // Pesquisa\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.getParams());\r\n    }\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.totalItems = 0;\r\n\r\n    this.cadastroRepresentantesService\r\n      .getListaRepresentantes(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  // Verifica Parâmetros\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activateRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n        _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n    _params['orderBy'] = this.orderBy;    _params['orderType'] = this.orderType;\r\n    return _params;  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.codRepresentante) {\r\n      params.codRepresentante = this.form.value.codERP;\r\n    }\r\n\r\n    if (this.form.value.nome) {\r\n      params.nome = this.form.value.nome;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.pagina = this.form.value.pagina;\r\n    params.registros = this.form.value.registros;\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n\r\n  // Detail Panel\r\n  onDetails(item: any): void {\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `${item.tipoComissao}`;\r\n    this.setDetalhesRepresentante();\r\n    this.grupoSelecionado = item;\r\n    this.modeloComissao = [];\r\n    this.loaderNavbar = true;\r\n\r\n    this.cadastroRepresentantesService\r\n      .getTipoComissionamento()\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n            this.detailPanelService.loadedFinished(false);\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.modeloComissao = response.data;\r\n            this.totalItems = this.dados[0]['total'];\r\n          }  else {\r\n            this.pnotifyService.error();\r\n          }\r\n\r\n        },\r\n        error: (error: any) => {\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  setDetalhesRepresentante(): void {\r\n    this.grupoSelecionado = {\r\n      codVendedor: null,\r\n      de: null,\r\n      ate: null,\r\n      valorComissao: null,\r\n      valorFixo: null\r\n    };\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  // Activate e Inactivate e borda Situação\r\n  onActivate(index: number, data: any): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateERP(index, data) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(data);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 0;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateERP(index: number, data: any): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 1;\r\n\r\n    return this.cadastroRepresentantesService.activateERP(data.codRepresentante);\r\n  }\r\n\r\n  onInactivate(index: number, data: any): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateERP(index, data) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(data);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateERP(index: number, data: any): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 0;\r\n\r\n    return this.cadastroRepresentantesService.inactivateERP(data.codRepresentante);\r\n  }\r\n\r\n  classStatusBorder(data: any): string {\r\n    let borderClass: string;\r\n\r\n    if (data.codSituacao === 2) {\r\n      borderClass = 'border-danger';\r\n    } else if (data.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n\r\n// Get e EditarLista\r\n  getRegistros() {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.cadastroRepresentantesService\r\n      .getListaRepresentantes()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n\r\n            this.totalItems = this.dados[0]['total'];\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  onEdit(item: any): void {\r\n    this.router.navigate(['../editar', item.codRepresentante], {\r\n\r\n      relativeTo: this.activateRoute,\r\n\r\n    });\r\n  }\r\n\r\n  // Outros\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant'\r\n    });\r\n  }\r\n\r\n  refreshMainData(data: any): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (data.codTabela === this.dados[i].codTabela) {\r\n        this.dados[i].codSituacao = data.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n    // Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-comissoes-representantes',\r\n  templateUrl: './representantes.component.html',\r\n  styleUrls: ['./representantes.component.scss']\r\n})\r\nexport class ComercialComissoesRepresentantesComponent implements OnInit {\r\n  loaderNavbar: boolean = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n  appTitle: string;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private pnotifyService: PNotifyService,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n      this.registrarAcesso();\r\n      this.setBreadCrumb();\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n\r\n    this.appTitle = 'Representantes';\r\n    this.titleService.setTitle(this.appTitle)\r\n\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home',\r\n      },\r\n      {\r\n        descricao: 'Comissões',\r\n        routerLink: `/comercial/comissoes/${params['idSubModulo']}`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, tap, retry } from 'rxjs/operators';\r\n\r\nimport { JsonResponse } from './../../../../../models/json-response';\r\nimport { environment } from './../../../../../../environments/environment';\r\n\r\nimport { representantes, dadosBancarios } from './models/representantes';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialComissoesRepresentantesProgramacaoPagamentosService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/comissoes/representantes/programacao-pagamentos`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaProgramacao(params: any = []): Observable<any> {\r\n\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n    httpParams = httpParams.append(param, params[param]);    }\r\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  getSituacao(): Observable<any> {\r\n    return this.http.get(`${this.API}/situacao`)\r\n    .pipe(\r\n      take(1),\r\n      retry(2)\r\n      );\r\n  }\r\n\r\n  getAssociacoesDetails(\r\n    codRepresentante: number,\r\n    params?: any\r\n  ): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n    return this.http\r\n      .get(`${this.API}/conta/${codRepresentante}`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postProgramacaoPagamento(params): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/programacao-datas/salvar`, params)\r\n      .pipe(\r\n        take(1)\r\n        );\r\n  }\r\n\r\n  postPagamento(params): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/pagamento/salvar`, params)\r\n      .pipe(\r\n        take(1)\r\n        );\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'cpf' })\r\nexport class CPFPipe implements PipeTransform {\r\n    transform(value: string|number): string {\r\n        let valorFormatado = value + '';\r\n\r\n        valorFormatado = valorFormatado\r\n            .padStart(11, '0')                  // item 1\r\n            .substr(0, 11)                      // item 2\r\n            .replace(/[^0-9]/, '')              // item 3\r\n            .replace(                           // item 4\r\n                /(\\d{3})(\\d{3})(\\d{3})(\\d{2})/,\r\n                '$1.$2.$3-$4'\r\n            );\r\n\r\n        return valorFormatado;\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9yZXByZXNlbnRhbnRlcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\n\r\n\r\n// Components\r\nimport { ComercialComissoesRepresentantesProgramacaoPagamentosListaComponent } from './lista/lista.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      { path: 'lista', component: ComercialComissoesRepresentantesProgramacaoPagamentosListaComponent },\r\n      {\r\n        path: '',\r\n        redirectTo: 'lista',\r\n        pathMatch: 'full',\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialComissoesRepresentantesProgramacaoPagamentosRoutingModule {}\r\n"]}