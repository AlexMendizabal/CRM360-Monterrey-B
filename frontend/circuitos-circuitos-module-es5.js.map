{"version":3,"sources":["webpack:///src/app/modules/logistica/yms/circuitos/circuitos-routing.module.ts","webpack:///src/app/modules/logistica/yms/circuitos/cadastro/cadastro.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/logistica/yms/circuitos/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/yms/circuitos/associacao-etapas/associacao-etapas.component.scss","webpack:///src/app/modules/logistica/yms/circuitos/associacao-etapas/associacao-etapas.component.html","webpack:///src/app/modules/logistica/yms/circuitos/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/yms/circuitos/lista/lista.component.html","webpack:///src/app/modules/logistica/yms/circuitos/associacao-etapas/associacao-etapas.component.ts","webpack:///src/app/modules/logistica/yms/circuitos/lista/lista.component.ts","webpack:///src/app/modules/logistica/yms/circuitos/circuitos.module.ts","webpack:///src/app/modules/logistica/yms/circuitos/lista/lista.component.scss"],"names":["routes","path","component","LogisticaYmsCircuitosRoutingModule","imports","forChild","exports","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","LogisticaYmsCircuitosCadastroComponent","formBuilder","pnotify","activatedRoute","router","localeService","circuitosService","titleService","atividadesService","filiaisService","tiposCircuitoService","breadCrumbTree","formData","disabledForm","loading","loadingNavBar","MASKS","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setBreadCrumb","setFormBuilder","onActivatedRoute","getFiliais","getTiposCircuito","subscribe","_params","snapshot","params","hasOwnProperty","getCircuito","loadingFiliais","IN_STAT","IN_PAGI","IN_YMS","pipe","response","status","filiais","body","notice","error","loadingTiposCircuito","tiposCircuito","id","data","form","patchValue","noResult","idSubModulo","appTitle","setTitle","descricao","routerLink","group","UUID_LOGI_YMS_CIRC","UUID_LOGI_FILI","required","NM_FILI","NM_CIRC","UUID_LOGI_YMS_CIRC_TIPO","NM_CIRC_TIPO","DS_OBSE","field","onFieldInvalid","get","touched","formControl","controls","validator","validationResult","postCircuitos","value","success","navigate","relativeTo","selector","template","LogisticaYmsCircuitosAssociacaoEtapasComponent","confirmModalService","etapasService","tiposEtapaService","etapas","etapasLoading","loadingEtapas","loadingFilterEtapas","loadingTiposEtapa","etapasAssociadas","etapasAssociadasLoading","tableConfigEtapasAssociados","fixedHeader","bodyHeight","hover","tableConfigEtapas","toggle","disabled","formEtapas","UUID_LOGI_YMS_ETAP","NM_ETAP","UUID_LOGI_YMS_ETAP_TIPO","NM_ETAP_TIPO","getCircuitos","getTiposEtapa","getFilterEtapas","getEtapas","filterEtapas","tiposEtapa","setValue","getEtapasAssociados","loadingCircuitos","circuitos","console","log","filter","etapa","some","item","ID","length","ORDE_BY","checked","NR_SQNC","map","postEtapasAssociados","showConfirm","confirmDelete","deleteAssociacoes","event","LogisticaYmsCircuitosListaComponent","route","xlsxService","dateService","routerService","detailPanelService","showDetailPanel","totalItens","tableConfig","subtitleBorder","tableConfigAssocEtapas","tipos","cod","nome","subtitles","text","color","itemsPerPage","totalItems","currentPage","buildForm","onDetailPanelEmitter","getFilterCircuitos","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","TT_REGI_PAGI","getParams","showDetailPanelSubscription","config","showing","reset","PAGI","TIME","Date","getTime","NR_MATR","NM_USUA","DT_INCL","DT_ATUA","onFilter","hide","setBase64UrlParams","circuitoSelecionado","loadedFinished","loadingAssociacaoEtapas","associacaoEtapas","noAssocEtapas","filterCircuitos","page","_obj","prop","convertToUrlDate","borderClass","stat","confirmChange","asObservable","result","toLocaleDateString","split","dataExport","listagemExport","concat","exportFile","LogisticaYmsCircuitosModule","declarations","forRoot"],"mappings":"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","file":"circuitos-circuitos-module-es5.js","sourcesContent":["import { LogisticaYmsCircuitosAssociacaoEtapasComponent } from './associacao-etapas/associacao-etapas.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\nimport { LogisticaYmsCircuitosCadastroComponent } from './cadastro/cadastro.component';\nimport { LogisticaYmsCircuitosListaComponent } from './lista/lista.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaYmsCircuitosListaComponent,\n  },\n  {\n    path: 'novo',\n    component: LogisticaYmsCircuitosCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: LogisticaYmsCircuitosCadastroComponent,\n  },\n  {\n    path: 'etapas/:id',\n    component: LogisticaYmsCircuitosAssociacaoEtapasComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LogisticaYmsCircuitosRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9jaXJjdWl0b3MvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Circuitos\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\n    (click)=\\\"postCircuitos()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\n        <legend>Dados do Circuito</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\n            <label for=\\\"NM_CIRC\\\">Descrição</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_CIRC\\\"\\n              formControlName=\\\"NM_CIRC\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('NM_CIRC') + ' ' + onFieldRequired('NM_CIRC')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_CIRC')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\n            <label for=\\\"tiposCircuito\\\">Tipo de Circuito</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tiposCircuito\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingTiposCircuito\\\"\\n              labelForId=\\\"tiposCircuito\\\"\\n              bindLabel=\\\"NM_CIRC_TIPO\\\"\\n              bindValue=\\\"UUID_LOGI_YMS_CIRC_TIPO\\\"\\n              id=\\\"tiposCircuito\\\"\\n              formControlName=\\\"UUID_LOGI_YMS_CIRC_TIPO\\\"\\n              [ngClass]=\\\"onFieldError('UUID_LOGI_YMS_CIRC_TIPO') + ' ' + onFieldRequired('UUID_LOGI_YMS_CIRC_TIPO')\\\"\\n              >\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('UUID_LOGI_YMS_CIRC_TIPO')\\\" message=\\\"Tipo de Circuito é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\n            <label for=\\\"filiais\\\">Filial</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"filiais\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingFiliais\\\"\\n              labelForId=\\\"UUID_LOGI_FILI\\\"\\n              bindLabel=\\\"NM_FILI\\\"\\n              bindValue=\\\"UUID_LOGI_FILI\\\"\\n              id=\\\"UUID_LOGI_FILI\\\"\\n              formControlName=\\\"UUID_LOGI_FILI\\\"\\n              [ngClass]=\\\"onFieldError('UUID_LOGI_FILI') + ' ' + onFieldRequired('UUID_LOGI_FILI')\\\"\\n              >\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('UUID_LOGI_FILI')\\\" message=\\\"Filial é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\n        <legend>Observação</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n          </div>\\n        </div>\\n        <br>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n</app-body>\";","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2NpcmN1aXRvcy9hc3NvY2lhY2FvLWV0YXBhcy9hc3NvY2lhY2FvLWV0YXBhcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9jaXJjdWl0b3MvYXNzb2NpYWNhby1ldGFwYXMvYXNzb2NpYWNhby1ldGFwYXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b25bZGlzYWJsZWRde1xuICBjdXJzb3I6IG5vLWRyb3A7XG59Il19 */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button \\n    [disabled]=\\\"loadingNavBar === true\\\"\\n    [routerLink]=\\\"['../../']\\\"\\n    >\\n    Finalizar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"mtc-title\\\">Dados do Circuito</div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"circuitos\\\">Circuito</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"circuitos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingCircuitos\\\"\\n              labelForId=\\\"circuitos\\\"\\n              bindLabel=\\\"NM_CIRC\\\"\\n              bindValue=\\\"UUID_LOGI_YMS_CIRC\\\"\\n              id=\\\"circuitos\\\"\\n              formControlName=\\\"UUID_LOGI_YMS_CIRC\\\"\\n              >\\n            </ng-select>\\n          </div>\\n        </div>\\n      </form>\\n      <div class=\\\"row mb-4\\\">\\n        <div class=\\\"col mb-3\\\">\\n          <hr>\\n        </div>\\n      </div>\\n      <div [hidden]=\\\"loadingEtapas\\\">\\n        <div class=\\\"row mb-2 mt-4\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Etapas associadas ao circuito</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-danger\\\"\\n                (click)=\\\"onRemoverAssociacao()\\\">\\n                <i class=\\\"fas fa-trash\\\"></i>\\n                <span>Limpar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!etapasAssociadasLoading && etapasAssociadas.length > 0\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigEtapasAssociadas\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggle?.etapasAssociadas ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll('etapasAssociadas')\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Seq.</th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 40%\\\">Etapas</th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 40%\\\">Tipo de Etapa</th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of etapasAssociadas\\\" >\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td \\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 10%\\\">\\n                    {{ item.NR_SQNC  }}\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 40%\\\">\\n                    {{ item.NM_ETAP | uppercase }}\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 40%\\\">\\n                    {{ item.NM_ETAP_TIPO | uppercase }}\\n                  </td>\\n                  <td class=\\\"text-center\\\" width=\\\"5%\\\" height=\\\"26px\\\">\\n                    <btn-icon\\n                      icon=\\\"fas fa-trash\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onRemoverAssociacao(item)\\\"\\n                      *ngIf=\\\"!item.loading\\\"  \\n                    >\\n                    </btn-icon>\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!loadingEtapas && etapasAssociadas.length === 0\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-exchange-alt\\\"\\n              text=\\\"Nenhuma associação encontrada\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"loadingEtapas\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-cog fa-spin\\\"\\n              text=\\\"Estamos pesquisando os etapas para você...\\\">\\n            </message>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <form [formGroup]=\\\"formEtapas\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"row mb-2\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Pesquisa de Etapas</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-secondary\\\"\\n                (click)=\\\"getEtapas()\\\">\\n                <i class=\\\"fas fa-search\\\"></i>\\n                <span \\n                container=\\\"body\\\"\\n                placement =\\\"left\\\">Pesquisar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <advanced-filter>\\n          <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-6 pl-0\\\">\\n                <label for=\\\"tiposEtapa\\\">Tipo de Etapa</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"true\\\"\\n                  [items]=\\\"tiposEtapa\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  [loading]=\\\"loadingTiposEtapa\\\"\\n                  labelForId=\\\"tiposEtapa\\\"\\n                  (keydown.enter)=\\\"getEtapas()\\\"\\n                  bindLabel=\\\"NM_ETAP_TIPO\\\"\\n                  bindValue=\\\"UUID_LOGI_YMS_ETAP_TIPO\\\"\\n                  id=\\\"tiposEtapa\\\"\\n                  formControlName=\\\"UUID_LOGI_YMS_ETAP_TIPO\\\"\\n                  (change)=\\\"getFilterEtapas({'UUID_LOGI_YMS_ETAP_TIPO': $event?.UUID_LOGI_YMS_ETAP_TIPO || ''})\\\">\\n                </ng-select>\\n              </div>\\n              <div class=\\\"form-group col-md-6 pl-0\\\">\\n                <label for=\\\"filterEtapas\\\">Etapa</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"true\\\"\\n                  [items]=\\\"filterEtapas\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  [loading]=\\\"loadingFilterEtapas\\\"\\n                  labelForId=\\\"filterEtapas\\\"\\n                  (keydown.enter)=\\\"getEtapas()\\\"\\n                  bindLabel=\\\"NM_ETAP\\\"\\n                  bindValue=\\\"UUID_LOGI_YMS_ETAP\\\"\\n                  id=\\\"filterEtapas\\\"\\n                  formControlName=\\\"UUID_LOGI_YMS_ETAP\\\">\\n                </ng-select>\\n              </div>\\n          </div>\\n        </advanced-filter>\\n        <div *ngIf=\\\"etapas.length > 0 && !etapasLoading\\\">\\n          <div class=\\\"row mb-2\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Seleção de Etapa</div>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-primary\\\"\\n                  (click)=\\\"onAssociarEtapas()\\\"\\n                  [disabled]=\\\"searching === true || formEtapas.valid === false\\\">\\n                  <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                  <span\\n                    [tooltip]=\\\"form.valid == false ? 'Selecione uma Circuito':''\\\"\\n                    container=\\\"body\\\"\\n                    placement =\\\"left\\\">Associar\\n                  </span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table [config]=\\\"tableConfigEtapas\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th\\n                      scope=\\\"col\\\"\\n                      class=\\\"text-center\\\"\\n                      style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        [icon]=\\\"toggle?.etapas ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"onToggleAll('etapas')\\\">\\n                      </btn-icon>\\n                    </th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%\\\" class=\\\"text-center\\\">Seq.</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 40%\\\">Etapas</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 40%\\\">Tipo de Etapa</th>\\n                    <th style=\\\"width: 5%\\\"></th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let item of etapas\\\">\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        *ngIf = \\\"item.NR_SQNC > 0 \\\"\\n                        [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"item.checked = !item.checked;\\\">\\n                      </btn-icon>\\n                    </td>\\n                    <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 10%\\\"\\n                    >\\n                      <input\\n                      type=\\\"number\\\"\\n                      class=\\\"form-control\\\"\\n                      min = \\\"1\\\"\\n                      (change)=\\\"item.NR_SQNC = ($event.target.value);\\\"\\n                    />\\n                    </td>\\n                    <td\\n                      class=\\\"hover\\\"\\n                      style=\\\"width: 40%\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                      {{ item.NM_ETAP | uppercase }}\\n                    </td>\\n                    <td\\n                      class=\\\"hover\\\"\\n                      style=\\\"width: 40%\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                      {{ item.NM_ETAP_TIPO | uppercase }}\\n                    </td>\\n                    <td style=\\\"width: 5%; height: 26px\\\">\\n                      <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\n                        <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"etapasLoading\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-cog fa-spin\\\"\\n              text=\\\"Estamos pesquisando os etapas para você...\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <div>\\n          <div class=\\\"row\\\" *ngIf=\\\"(etapas.length == 0) && !etapasLoading\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-box-open\\\"\\n                text=\\\"Nenhuma informação encontrada\\\">\\n              </message>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"row\\\" *ngIf=\\\"etapasLista.length === 0 && !firstSearch\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-search\\\"\\n                text=\\\"Preecha os campos acima para pesquisar etapas\\\">\\n              </message>\\n            </div>\\n          </div> -->\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";","import { LogisticaYmsTiposCircuitoService } from './../../tipos-circuito/services/tipos-circuito.service';\nimport { ILogisticaYmsTiposCircuito } from './../../tipos-circuito/models/tipos-circuito';\nimport { ILogisticaFiliais } from './../../../cadastros/filiais/models/filiais';\nimport { LogisticaFiliaisService } from './../../../cadastros/filiais/services/filiais.service';\n//Services\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//Bootstrap\nimport { utilsBr } from 'js-brasil';\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\n//Angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  FormArray,\n} from '@angular/forms';\n//rxjs\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LogisticaYmsCircuitosService } from '../services/circuitos.service';\n//interfaces\nimport { ILogisticaYmsCircuitos } from '../models/circuitos';\nimport { isNull } from 'util';\n\n@Component({\n  selector: 'logistica-yms-circuitos-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class LogisticaYmsCircuitosCadastroComponent\n  implements OnInit {\n  noResult: boolean;\n  $activatedRouteSubscription: Subscription;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  modalRef: BsModalRef;\n  formData: Array<FormData> = [];\n  bsConfig: Partial<BsDatepickerConfig>;\n  filiais: Array<ILogisticaFiliais>;\n  tiposCircuito: Array<ILogisticaYmsTiposCircuito>;\n  //loading\n  disabledForm = false;\n  loading = false;\n  loadingNavBar = false;\n  loadingFiliais:boolean;\n  loadingTiposCircuito:boolean;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private localeService: BsLocaleService,\n    private circuitosService: LogisticaYmsCircuitosService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n    private filiaisService: LogisticaFiliaisService,\n    private tiposCircuitoService: LogisticaYmsTiposCircuitoService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n  public MASKS = utilsBr.MASKS;\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n    this.getFiliais();\n    this.getTiposCircuito();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onActivatedRoute() {\n    const _params = this.activatedRoute.snapshot.params;\n    if (_params.hasOwnProperty('id'))\n    return this.getCircuito(_params['id']); \n  }\n\n  getFiliais(){\n    this.loadingFiliais = true;\n    this.filiaisService\n    .getFiliais({ IN_STAT: '1', IN_PAGI: '0', IN_YMS: 1 })\n    .pipe(\n      finalize(() => {\n        this.loadingFiliais = false;\n      })\n    )\n    .subscribe(\n      (response) => {\n        if (response.status === 200) {\n          this.filiais = response.body['data']\n        } else {\n          this.filiais = [];\n          this.pnotify.notice('Nenhuma filial encontrada!')\n        }\n      },\n      (error) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    );\n  }\n\n  getTiposCircuito(){\n    this.loadingTiposCircuito = true;\n    this.tiposCircuitoService\n    .getTiposCircuito({ IN_STAT: '1', IN_PAGI: '0' })\n    .pipe(\n      finalize(() => {\n        this.loadingTiposCircuito = false;\n      })\n    )\n    .subscribe(\n      (response) => {\n        if (response.status === 200) {\n          this.tiposCircuito = response.body['data']\n        } else {\n          this.tiposCircuito = [];\n          this.pnotify.notice('Nenhuma filial encontrada!')\n        }\n      },\n      (error) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    );\n  }\n\n\n  getCircuito(id: number) {\n    this.loading = true;\n    this.circuitosService\n      .getCircuito(id)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            const data : ILogisticaYmsCircuitos = response.body['data'][0]\n            this.form.patchValue(data);\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n          }\n        },\n        (error) => {\n          const message = error.error.message\n          message ? this.pnotify.error(message): this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  setBreadCrumb(): void {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.appTitle = 'Cadastro';\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'YMS',\n        routerLink: `/logistica/yms/${id}`,\n      },\n      {\n        descricao: 'Circuitos',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //formulario\n  setFormBuilder(): void {\n\n    this.form = this.formBuilder.group({\n      UUID_LOGI_YMS_CIRC: [null],\n      UUID_LOGI_FILI: [null, [Validators.required]],\n      NM_FILI:[null],\n      NM_CIRC: [null, [Validators.required]],\n      UUID_LOGI_YMS_CIRC_TIPO: [null, [Validators.required]],\n      NM_CIRC_TIPO: [null],\n      IN_STAT: [null],\n      DS_OBSE: [null],\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  postCircuitos() {\n    this.loadingNavBar = true;\n    this.circuitosService\n      .postCircuitos(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error) => {\n          const message = error.error.message\n          message ? this.pnotify.error(message): this.pnotify.error();\n        }\n      );\n  }\n  \n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"CIRCUITOS\\\">\\n  <button\\n  type=\\\"button\\\"\\n  (click)=\\\"onExport()\\\"\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\n  Exportar\\n</button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onReset()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\n              <label for=\\\"filterCircuitos\\\">Circuito</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"filterCircuitos\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingCircuitos\\\"\\n                labelForId=\\\"UUID_LOGI_YMS_CIRC\\\"\\n                bindLabel=\\\"NM_CIRC\\\"\\n                bindValue=\\\"UUID_LOGI_YMS_CIRC\\\"\\n                id=\\\"UUID_LOGI_YMS_CIRC\\\"\\n                formControlName=\\\"UUID_LOGI_YMS_CIRC\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-4 pl-0\\\">\\n              <label for=\\\"filiais\\\">Filial</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"filiais\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingFiliais\\\"\\n                labelForId=\\\"UUID_LOGI_FILI\\\"\\n                bindLabel=\\\"NM_FILI\\\"\\n                bindValue=\\\"UUID_LOGI_FILI\\\"\\n                id=\\\"UUID_LOGI_FILI\\\"\\n                formControlName=\\\"UUID_LOGI_FILI\\\"\\n                >\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              (keydown.enter)=\\\"onFilter()\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n            </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\n                (keydown.enter)=\\\"onFilter()\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\n      <div class=\\\"w-100\\\">\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" >ID</th>\\n              <th scope=\\\"col\\\" >Descrição</th>\\n              <th scope=\\\"col\\\" >Filial</th>\\n              <th scope=\\\"col\\\" style=\\\"width:160px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let circuito of circuitos\\\"  [class.table-active]=\\\"circuito?.UUID_LOGI_YMS_CIRC == circuitoSelecionado?.UUID_LOGI_YMS_CIRC && showDetailPanel\\\">\\n              <td  [ngClass]=\\\"circuito.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n              {{circuito.UUID_LOGI_YMS_CIRC }}\\n              </td>\\n              <td >{{ circuito.NM_CIRC | uppercase}}</td>\\n              <td >{{ circuito.NM_FILI | uppercase}}</td>\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"circuito.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(circuito)\\\">\\n                    <i [ngClass]=\\\"circuito.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', circuito.UUID_LOGI_YMS_CIRC]\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Associar Etapas\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\"  [routerLink]=\\\"['./../etapas/', circuito.UUID_LOGI_YMS_CIRC]\\\">\\n                    <i class=\\\"fas fa-tasks\\\"></i>                  \\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(circuito)\\\">\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </div>\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel panelTitle=\\\"Detalhes\\\">\\n        <tabset>\\n          <tab heading=\\\"Dados do Circuito\\\">\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n              <div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>ID do Circuito</label>\\n                    <div>{{ circuitoSelecionado?.UUID_LOGI_YMS_CIRC}}</div>\\n                  </div>\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Circuito</label>\\n                    <div>{{ circuitoSelecionado?.NM_CIRC | uppercase}}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Tipo de Circuito</label>\\n                    <div>{{ circuitoSelecionado?.NM_CIRC_TIPO | uppercase}}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row \\\">\\n                  <div class=\\\"form-group col-lg-12\\\">\\n                    <label>Observação:</label>\\n                    <div>{{ circuitoSelecionado?.DS_OBSE | uppercase}}</div>\\n                  </div>\\n                </div>\\n                <hr>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col\\\">\\n                    <label *ngIf=\\\"!circuitoSelecionado?.DT_ATUA == null\\\">Usuário Responsável Pelo Cadastro</label>\\n                    <label *ngIf=\\\"circuitoSelecionado?.DT_ATUA == null\\\">Usuário Responsável Pela Atualização</label>\\n                    <div>{{ circuitoSelecionado?.NM_USUA | uppercase }}</div>\\n                  </div>\\n                  <div class=\\\"form-group col\\\">\\n                    <label *ngIf=\\\"!circuitoSelecionado?.DT_ATUA == null\\\">Data do Cadastro</label>\\n                    <label *ngIf=\\\"circuitoSelecionado?.DT_ATUA == null\\\">Data da Atualização</label>\\n                    <div>{{(circuitoSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (circuitoSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </tab>\\n          <tab  heading=\\\"Etapas Associadas\\\">\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n              <div class=\\\"mb-3\\\">\\n                <custom-table  [config]=\\\"tableConfigAssocEtapas\\\"  class=\\\"text-center\\\" *ngIf=\\\"!loadingAssociacaoEtapas && !noAssocEtapas\\\">\\n                  <ng-template #thead let-thead>\\n                    <tr>\\n                      <th scope=\\\"col\\\"  width=\\\"50%\\\">Tipo de Etapa</th>\\n                      <th scope=\\\"col\\\"  width=\\\"50%\\\">Etapa</th>\\n                    </tr>\\n                  </ng-template>\\n                  <ng-template #tbody let-tbody>\\n                    <tr *ngFor=\\\"let etapa of associacaoEtapas\\\">\\n                      <td  width=\\\"50%\\\">{{ etapa?.NM_ETAP_TIPO | uppercase }}</td>\\n                      <td  width=\\\"50%\\\">{{ etapa?.NM_ETAP | uppercase }}</td>\\n                    </tr>\\n                  </ng-template>\\n                </custom-table>\\n                <message\\n                  *ngIf=\\\"loadingAssociacaoEtapas\\\"\\n                  icon=\\\"fas fa-cog fa-spin\\\"\\n                  text=\\\"Estamos pesquisando as etapas para você...\\\">\\n                </message>\\n                <div [hidden]=\\\"loadingAssociacaoEtapas || !noAssocEtapas\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n                  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n                </div>\\n              </div>\\n            </div>\\n          </tab>       \\n        </tabset> \\n      </detail-panel>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","import { ILogisticaFiliais } from './../../../cadastros/filiais/models/filiais';\nimport { ILogisticaYmsTiposEtapa } from './../../tipos-etapa/models/tipos-etapa';\nimport { LogisticaYmsTiposEtapaService } from './../../tipos-etapa/services/tipos-etapa.service';\nimport { ILogisticaYmsEtapas } from './../../etapas/models/etapas';\nimport { LogisticaYmsEtapasService } from './../../etapas/services/etapas.service';\nimport { ILogisticaYmsCircuitos } from './../models/circuitos';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n// angular\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n// services\nimport { LogisticaYmsCircuitosService } from '../services/circuitos.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\n\n// rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { LogisticaFiliaisService } from '../../../cadastros/filiais/services/filiais.service';\n\n@Component({\n  selector: 'logistica-circuitos-associacao-etapas',\n  templateUrl: './associacao-etapas.component.html',\n  styleUrls: ['./associacao-etapas.component.scss']\n})\nexport class LogisticaYmsCircuitosAssociacaoEtapasComponent implements OnInit {\n\n  appTitle = \"Associação Etapas\";\n\n  form: FormGroup;\n  formEtapas: FormGroup;\n\n  breadCrumbTree: any = [];\n  idSubModulo: number;\n  $subscription: Subscription;\n\n  /*loading*/\n  loading = false;\n  loadingNavBar = false;\n  noResult = true;\n  loadingCircuitos: boolean;\n  /*loading*/\n  filterEtapas:Array<ILogisticaYmsEtapas>;\n  etapas= [];\n  tiposEtapa: Array<ILogisticaYmsTiposEtapa>;\n  etapasLoading = false;\n  loadingEtapas = false;\n  loadingFilterEtapas= false;\n  loadingTiposEtapa= false;\n  circuitos: Array<ILogisticaYmsCircuitos>;\n\n  etapasAssociadas = [];\n  etapasAssociadasLoading = false;\n\n  tableConfigEtapasAssociados: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n    hover: false,\n  };\n  \n  tableConfigEtapas: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  toggle = {\n    etapas: false,\n    etapasAssociadas: false\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private circuitosService: LogisticaYmsCircuitosService,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private confirmModalService: ConfirmModalService,\n    private etapasService: LogisticaYmsEtapasService,\n    private tiposEtapaService: LogisticaYmsTiposEtapaService,\n    private filiaisService: LogisticaFiliaisService,\n  ) {\n    this.form = this.formBuilder.group({\n      \"UUID_LOGI_YMS_CIRC\": [{value:null, disabled:true}],\n      \"NM_CIRC\": [null],\n    });\n\n    this.formEtapas = this.formBuilder.group({\n      UUID_LOGI_YMS_ETAP:[null],\n      NM_ETAP:[null],\n      UUID_LOGI_YMS_ETAP_TIPO:[null],\n      NM_ETAP_TIPO:[null],\n      UUID_LOGI_FILI:[null],\n      NM_FILI:[null]\n    });\n  }\n\n  ngOnInit() {\n\n    this.atividadesService\n      .registrarAcesso()\n      .subscribe();\n    this.onActivatedRoute();\n    this.setBreadCrumb();\n    this.getCircuitos();\n    this.getTiposEtapa();\n    this.getFilterEtapas();\n  }\n\n  getFilterEtapas(params?: Partial<ILogisticaYmsEtapas>) {\n    const _params = params ?? {};\n    _params.IN_STAT = 1;\n    _params.IN_PAGI = 0;\n    this.loadingFilterEtapas = true;\n    this.etapasService\n      .getEtapas(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingFilterEtapas = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filterEtapas = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      },\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    );\n  }\n\n  getTiposEtapa() {\n    this.loadingTiposEtapa = true;\n    this.tiposEtapaService\n      .getTiposEtapa({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTiposEtapa = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tiposEtapa = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      },\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    );\n  }\n\n\n  onActivatedRoute() {\n    const params = this.activatedRoute.snapshot.params;\n\n    if (!params?.id){\n      this.loading = false;\n      return\n    }\n    this.form.get('UUID_LOGI_YMS_CIRC').setValue(params['id'])\n    this.getEtapasAssociados({\"UUID_LOGI_YMS_CIRC\": params?.id})  \n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'Cadastro',\n        routerLink: `/logistica/cadastros/${id}`,\n      },\n      {\n        descricao: 'Circuitos',\n        routerLink: `../../`,\n      },\n      {\n        descricao: this.appTitle\n      }\n    ];\n  }\n\n  getCircuitos() {\n    this.loadingCircuitos = true;\n    this.circuitosService\n      .getCircuitos({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingCircuitos = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.circuitos = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      });\n  }\n\n  getEtapas(){\n\n    let params = {} ?? this.formEtapas.value;\n    params.IN_STAT = 1;\n    params.IN_PAGI = 0;\n\n\n    this.etapasLoading = true\n\n    this.circuitosService\n      .getEtapas(params)\n      .pipe(\n        finalize(() => {\n          this.etapasLoading = false;\n        })\n      )\n      .subscribe(\n        response => {\n          let etapas = response.body['data'];\n          console.log(etapas)\n          this.etapas = etapas.filter(etapa => {\n            return !this.etapasAssociadas.some(item => item.UUID_LOGI_YMS_ETAP == etapa.ID)\n          })\n\n          this.tableConfigEtapas.fixedHeader = this.etapas.length > 9 ? true : false;\n         \n        }\n      )\n  }\n\n  getEtapasAssociados(params){\n    this.loadingEtapas = true;\n    params.IN_STAT = '1';\n    params.IN_PAGI = '0';\n    params.ORDE_BY = 'ID_REFE_ERP'\n\n    this.circuitosService\n      .getEtapasAssociados(params)\n      .pipe(\n        finalize(() => {\n          this.loadingEtapas = false;\n        })\n      )\n      .subscribe(\n        response => {\n          if(response.status !== 200){\n            return\n          }\n\n          this.etapasAssociadas = response.body['data'];\n          this.tableConfigEtapasAssociados.fixedHeader = this.etapasAssociadas.length > 9 ? true : false;\n        }\n      )\n  }\n\n  onAssociarEtapas(){\n    let etapas = this.etapas.filter(etapa => etapa.checked && etapa.NR_SQNC != null);\n\n    console.log(etapas)\n    this.toggle.etapas = false;\n    etapas.map(item => {\n      \n      item.loading = true;\n\n      if(this.etapasAssociadas.some(etapa => etapa?.UUID_LOGI_YMS_ETAP === item.UUID_LOGI_YMS_ETAP)){\n        return\n      }\n\n      let params = {\n        \"UUID_LOGI_YMS_CIRC\": this.form.get(\"UUID_LOGI_YMS_CIRC\").value ?? \"\",\n        \"UUID_LOGI_YMS_ETAP\": item?.UUID_LOGI_YMS_ETAP ?? \"\",\n        \"IN_STAT\": \"1\",\n        \"NR_SQNC\": item?.NR_SQNC ?? \"\",\n      }\n      this.circuitosService\n        .postEtapasAssociados(params)\n        .subscribe(\n          response => {\n            if(response.status === 200){\n              \n              this.etapasAssociadas = [...this.etapasAssociadas,\n                {\n                  ...item,\n                  checked: false,\n                  NR_SQNC: item.NR_SQNC,\n                  NM_ETAP: item.NM_ETAP,\n                  NM_FILI: item.NM_FILI,\n                  NM_ETAP_TIPO: item.NM_ETAP_TIPO,\n                  loading: false,\n                  UUID_LOGI_YMS_ETAP: item.UUID_LOGI_YMS_ETAP,\n                  UUID_LOGI_YMS_CIRC: this.form.get('UUID_LOGI_YMS_CIRC').value\n                }\n              ];\n              console.log(this.etapasAssociadas)\n              \n              this.etapas = this.etapas.filter(etapa => !etapa.checked)\n              this.tableConfigEtapasAssociados.fixedHeader = this.etapasAssociadas.length > 9 ? true : false;\n\n            }\n          }\n        )\n    });\n\n  }\n\n  confirmDelete(): Observable<boolean> {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onRemoverAssociacao(etapa?){\n    let etapas = etapa ? [etapa] : this.etapasAssociadas.filter(etapa => etapa.checked);\n    console.log(etapas)\n    this.toggle.etapasAssociadas = false;\n\n    if(etapas.length == 0){\n      this.pnotify.notice(\"Nenhum etapa selecionado.\");\n      return\n    }\n\n    this.confirmDelete()\n      .subscribe(\n        (response: boolean) => {\n          \n          if(!response){\n            return\n          }\n          etapas.map(item => {\n            item.IN_STAT = '0';\n            item.loading = true;\n\n            this.circuitosService\n              .deleteAssociacoes(item)\n              .pipe(finalize(() => {\n                item.loading = false;\n              }))\n              .subscribe(\n                response => {\n                  \n                  if(response.status !== 200){\n                    return\n                  }\n                  this.etapasAssociadas = this.etapasAssociadas\n                    .filter(etapa => etapa.UUID_LOGI_YMS_ETAP != item.UUID_LOGI_YMS_ETAP);\n                  \n                  this.tableConfigEtapasAssociados.fixedHeader = this.etapasAssociadas.length > 9 ? true : false;\n                }\n              );\n              (error) => {\n                const message = error.error.message\n                message ? this.pnotify.error(message): this.pnotify.error();\n              }\n          \n          })\n          \n        }\n      )\n  }\n\n  onToggleAll(item: string){\n    console.log(item)\n    this.toggle[item] = !this.toggle[item];\n    this[item].map(etapa => etapa.checked = this.toggle[item]);\n\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.formEtapas.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.formEtapas.controls[field].validator) {\n      let validationResult = this.formEtapas.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\nsetValidacao(event){\n  console.log(event)\n}\n \n}\n","import { ILogisticaFiliais } from './../../../cadastros/filiais/models/filiais';\nimport { LogisticaFiliaisService } from './../../../cadastros/filiais/services/filiais.service';\n//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\nimport { LogisticaYmsCircuitosService } from '../services/circuitos.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//modelos\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\n\n//Interfaces\nimport { ILogisticaYmsCircuitos } from './../models/circuitos';\n\n\n@Component({\n  selector: 'logistica-yms-circuitos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class LogisticaYmsCircuitosListaComponent\n  implements OnInit, OnDestroy {\n    \n  breadCrumbTree: Array<Breadcrumb>;\n  idSubModulo: number;\n  noResult: boolean;\n  loadingCircuitos: boolean;\n  modalRef: BsModalRef;\n  form: FormGroup;\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  $activatedRouteSubscription: Subscription;\n\n  //LOADINGS\n  loading = true; \n  loadingNavBar = false; \n  loadingFiliais: boolean;\n  loadingAssociacaoEtapas: boolean;\n  //VARIAVEIS\n  filiais: Array<ILogisticaFiliais>;\n  totalItens: any = [];\n  filterCircuitos: Array<ILogisticaYmsCircuitos>;\n  circuitos: Array<ILogisticaYmsCircuitos>;\n  circuitoSelecionado: ILogisticaYmsCircuitos;\n  noAssocEtapas: boolean\n  associacaoEtapas: Array<ILogisticaYmsCircuitos>;\n  // CUSTOM TABLE\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigAssocEtapas: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  // Tipos de Situação dos Circuitos (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '2',\n      nome: 'Inativos',\n    },\n  ];\n\n  // Subtitles (Ativo/Inativo)\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private formBuilder: FormBuilder,\n    private xlsxService: XlsxService,\n    private dateService: DateService,\n    private routerService: RouterService,\n    private activatedRoute: ActivatedRoute,\n    private detailPanelService: DetailPanelService,\n    private confirmModalService: ConfirmModalService,\n    private circuitosService: LogisticaYmsCircuitosService,\n    private filiaisService: LogisticaFiliaisService,\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n    this.onDetailPanelEmitter();\n    this.getFilterCircuitos();\n    this.getFiliais();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n          this.getCircuitos(this.getParams());\n      }\n    );\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.patchValue({\n      PAGI: 1,\n      TT_REGI_PAGI: 100,\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      UUID_LOGI_YMS_CIRC: [null],\n      UUID_LOGI_FILI: [null],\n      NM_CIRC: [null],\n      IN_STAT: [null],\n      DS_OBSE: [null],\n      NR_MATR: [null],\n      NM_USUA: [null],\n      DT_INCL: [null],\n      DT_ATUA: [null],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/logistica/home`,\n      },\n      {\n        descricao: 'YMS',\n        routerLink: `/logistica/yms/${id}`,\n      },\n      {\n        descricao: 'Circuitos',\n      },\n    ];\n  }\n\n  getFiliais(){\n    this.loadingFiliais = true;\n    this.filiaisService\n    .getFiliais({ IN_STAT: '1', IN_PAGI: '0', IN_YMS:1 })\n    .pipe(\n      finalize(() => {\n        this.loadingFiliais = false;\n      })\n    )\n    .subscribe(\n      (response) => {\n        if (response.status === 200) {\n          this.filiais = response.body['data']\n        } else {\n          this.filiais = [];\n          this.pnotify.notice('Nenhuma filial encontrada!')\n        }\n      },\n      (error) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    );\n  }\n\n  onFilter() {\n    this.detailPanelService.hide();\n    this.form.get('PAGI').setValue(1);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  onDetails(circuitos: ILogisticaYmsCircuitos): void {\n    this.getEtapasAssociados({UUID_LOGI_YMS_CIRC: circuitos.UUID_LOGI_YMS_CIRC});\n    this.detailPanelService.show();\n    this.circuitoSelecionado = circuitos;\n    this.detailPanelService.loadedFinished(false);\n  }\n\n  getEtapasAssociados(params){\n    this.loadingAssociacaoEtapas = true;\n    params.IN_STAT = '1';\n    params.IN_PAGI = '0';\n    console.log(params)\n    this.circuitosService\n      .getEtapasAssociados(params)\n      .pipe(\n        finalize(() => {\n          this.loadingAssociacaoEtapas = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.associacaoEtapas = response.body['data'];\n\n            if (this.associacaoEtapas.length > 9) {\n              this.tableConfigAssocEtapas.fixedHeader = true;\n            }\n\n            this.noAssocEtapas = false\n          } else {\n            this.pnotify.notice('Nenhuma associação encontrada!');\n            this.noAssocEtapas = true\n            this.associacaoEtapas = [];\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n        }\n      );\n  }\n\n  getCircuitos(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n    this.circuitosService\n      .getCircuitos(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.circuitos = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.circuitos = [];\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  getFilterCircuitos() {\n    this.loadingCircuitos = true;\n    this.circuitosService\n      .getCircuitos({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingCircuitos = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filterCircuitos = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      });\n  }\n\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  classStatusBorder(circuitos: ILogisticaYmsCircuitos): string {\n    let borderClass: string;\n\n    if (circuitos.IN_STAT == 1) {\n      borderClass = 'border-success';\n    } else if (circuitos.IN_STAT == 2) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  changeType(params: ILogisticaYmsCircuitos) {\n    const stat = params.IN_STAT == 1 ? 0 : 1;\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loadingNavBar = true;\n          params.IN_STAT = stat;\n          return this.circuitosService.postCircuitos(params);\n        }),\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotify.success();\n        },\n        (error: any) => {\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\n          this.pnotify.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == 1)\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Deseja realmente prosseguir com a ativação do registro?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onExport(): void {\n    let data = new Date().toLocaleDateString().split('/'),\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\n\n    let listagemExport: any = [];\n    listagemExport = this.circuitos.concat(this.totalItens);\n\n    this.xlsxService.exportFile(listagemExport, `Circuitos${dataExport}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  PaginationModule,\n  TooltipModule,\n  TabsModule,\n  TimepickerModule,\n  BsDatepickerModule,\n  ModalModule,\n} from 'ngx-bootstrap';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n\nimport { LogisticaYmsCircuitosListaComponent } from './lista/lista.component';\nimport { LogisticaYmsCircuitosCadastroComponent } from './cadastro/cadastro.component';\n\nimport { LogisticaYmsCircuitosRoutingModule } from './circuitos-routing.module';\nimport { LogisticaYmsCircuitosAssociacaoEtapasComponent } from './associacao-etapas/associacao-etapas.component';\n\n@NgModule({\n  declarations: [\n    LogisticaYmsCircuitosListaComponent,\n    LogisticaYmsCircuitosCadastroComponent,\n    LogisticaYmsCircuitosAssociacaoEtapasComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    LogisticaYmsCircuitosRoutingModule\n  ]\n})\nexport class LogisticaYmsCircuitosModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9jaXJjdWl0b3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";"]}