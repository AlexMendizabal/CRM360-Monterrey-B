{"version":3,"sources":["webpack:///src/app/modules/logistica/yms/tipos-setor/lista/lista.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/logistica/yms/tipos-setor/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/yms/tipos-setor/tipos-setor-routing.module.ts","webpack:///src/app/modules/logistica/yms/tipos-setor/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/yms/tipos-setor/lista/lista.component.scss","webpack:///src/app/modules/logistica/yms/tipos-setor/lista/lista.component.html","webpack:///src/app/modules/logistica/yms/tipos-setor/tipos-setor.module.ts","webpack:///src/app/modules/logistica/yms/tipos-setor/cadastro/cadastro.component.ts"],"names":["LogisticaYmsTiposSetorListaComponent","route","pnotify","formBuilder","xlsxService","dateService","routerService","activatedRoute","detailPanelService","confirmModalService","tiposSetorService","showDetailPanel","loading","loadingNavBar","totalItens","tableConfig","subtitleBorder","tipos","cod","nome","subtitles","id","text","color","itemsPerPage","totalItems","currentPage","buildForm","setBreadCrumb","onActivatedRoute","onDetailPanelEmitter","getFilterTiposSetor","$activatedRouteSubscription","unsubscribe","queryParams","subscribe","response","_response","getBase64UrlParams","form","patchValue","hasOwnProperty","TT_REGI_PAGI","getTiposSetor","getParams","showDetailPanelSubscription","config","event","showing","reset","PAGI","TIME","Date","getTime","group","UUID_LOGI_YMS_SETO_TIPO","NM_SETO_TIPO","IN_STAT","DS_OBSE","NR_MATR","NM_USUA","DT_INCL","DT_ATUA","onFilter","snapshot","params","idSubModulo","breadCrumbTree","descricao","routerLink","hide","get","setValue","navigate","relativeTo","setBase64UrlParams","show","tipoSelecionado","loadedFinished","pipe","status","tiposSetor","body","noResult","error","loadingTiposSetor","IN_PAGI","filterTiposSetor","notice","page","_params","_obj","value","prop","convertToUrlDate","borderClass","stat","confirmChange","asObservable","result","postTiposSetor","success","showConfirm","data","toLocaleDateString","split","dataExport","listagemExport","concat","exportFile","selector","template","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","routes","path","component","LogisticaYmsTiposSetorRoutingModule","imports","forChild","exports","LogisticaYmsTiposSetorModule","declarations","forRoot","LogisticaYmsTiposSetorCadastroComponent","router","localeService","titleService","atividadesService","formData","disabledForm","MASKS","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setFormBuilder","getTipo","appTitle","setTitle","required","field","onFieldInvalid","touched","formControl","controls","validator","validationResult"],"mappings":"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","file":"tipos-setor-tipos-setor-module-es5.js","sourcesContent":["//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { LogisticaYmsTiposSetorService } from '../services/tipos-setor.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaYmsTiposSetor } from './../models/tipos-setor';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-yms-tipos-setor-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaYmsTiposSetorListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  loadingTiposSetor: boolean;\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false; \r\n\r\n  //VARIAVEIS\r\n  totalItens: any = [];\r\n  filterTiposSetor: Array<ILogisticaYmsTiposSetor>;\r\n  tiposSetor: Array<ILogisticaYmsTiposSetor>;\r\n  tipoSelecionado: ILogisticaYmsTiposSetor;\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  // Tipos de Situação dos Tipos de Setores (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private dateService: DateService,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private detailPanelService: DetailPanelService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private tiposSetorService: LogisticaYmsTiposSetorService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.onDetailPanelEmitter();\r\n    this.getFilterTiposSetor();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n          this.getTiposSetor(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_YMS_SETO_TIPO: [null],\r\n      NM_SETO_TIPO: [null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      NR_MATR: [null],\r\n      NM_USUA: [null],\r\n      DT_INCL: [null],\r\n      DT_ATUA: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'YMS',\r\n        routerLink: `/logistica/yms/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipos de Setor',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onDetails(tipos: ILogisticaYmsTiposSetor): void {\r\n    this.detailPanelService.show();\r\n    this.tipoSelecionado = tipos;\r\n    this.detailPanelService.loadedFinished(false);\r\n  }\r\n\r\n  getTiposSetor(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.tiposSetorService\r\n      .getTiposSetor(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.tiposSetor = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.tiposSetor = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  getFilterTiposSetor() {\r\n    this.loadingTiposSetor = true;\r\n    this.tiposSetorService\r\n      .getTiposSetor({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTiposSetor = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.filterTiposSetor = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(tipos: ILogisticaYmsTiposSetor): string {\r\n    let borderClass: string;\r\n\r\n    if (tipos.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (tipos.IN_STAT == 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(params: ILogisticaYmsTiposSetor) {\r\n    const stat = params.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          params.IN_STAT = stat;\r\n          return this.tiposSetorService.postTiposSetor(params);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.tiposSetor.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Tipos_Setor${dataExport}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Tipos de Setor\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postTiposSetor()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Tipo de Setor</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\r\\n            <label for=\\\"NM_SETO_TIPO\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_SETO_TIPO\\\"\\r\\n              formControlName=\\\"NM_SETO_TIPO\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_SETO_TIPO') + ' ' + onFieldRequired('NM_SETO_TIPO')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_SETO_TIPO')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Observação</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\nimport { LogisticaYmsTiposSetorCadastroComponent } from './cadastro/cadastro.component';\r\nimport { LogisticaYmsTiposSetorListaComponent } from './lista/lista.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaYmsTiposSetorListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: LogisticaYmsTiposSetorCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: LogisticaYmsTiposSetorCadastroComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LogisticaYmsTiposSetorRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy90aXBvcy1zZXRvci9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy90aXBvcy1zZXRvci9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Tipos de Setor\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onExport()\\\"\\r\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n              <label for=\\\"filterTiposSetor\\\">Tipo de Setor</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"filterTiposSetor\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingTiposSetor\\\"\\r\\n                labelForId=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n                bindLabel=\\\"NM_SETO_TIPO\\\"\\r\\n                bindValue=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n                id=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n                formControlName=\\\"UUID_LOGI_YMS_SETO_TIPO\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              (keydown.enter)=\\\"onFilter()\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" >ID</th>\\r\\n              <th scope=\\\"col\\\" >Descrição</th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let tipos of tiposSetor\\\"  [class.table-active]=\\\"tipos?.UUID_LOGI_YMS_SETO_TIPO == tipoSelecionado?.ID_LOGI_ENMA_FHNC_OCPR && showDetailPanel\\\">\\r\\n              <td  [ngClass]=\\\"tipos.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n              {{tipos.UUID_LOGI_YMS_SETO_TIPO }}\\r\\n              </td>\\r\\n              <td >{{ tipos.NM_SETO_TIPO | uppercase}}</td>\\r\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"tipos.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(tipos)\\\">\\r\\n                    <i [ngClass]=\\\"tipos.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', tipos.UUID_LOGI_YMS_SETO_TIPO]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(tipos)\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Histórico de alteração\\\">\\r\\n        <custom-table>\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr>\\r\\n              <td class=\\\"text-center\\\">{{(tipoSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (tipoSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</td>\\r\\n              <td>{{ tipoSelecionado?.NM_USUA | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  PaginationModule,\r\n  TooltipModule,\r\n  TabsModule,\r\n  TimepickerModule,\r\n  BsDatepickerModule,\r\n  ModalModule,\r\n} from 'ngx-bootstrap';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n\r\nimport { LogisticaYmsTiposSetorListaComponent } from './lista/lista.component';\r\nimport { LogisticaYmsTiposSetorCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nimport { LogisticaYmsTiposSetorRoutingModule } from './tipos-setor-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogisticaYmsTiposSetorListaComponent,\r\n    LogisticaYmsTiposSetorCadastroComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    LogisticaYmsTiposSetorRoutingModule\r\n  ]\r\n})\r\nexport class LogisticaYmsTiposSetorModule { }\r\n","//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LogisticaYmsTiposSetorService } from '../services/tipos-setor.service';\r\n//interfaces\r\nimport { ILogisticaYmsTiposSetor } from '../models/tipos-setor';\r\nimport { isNull } from 'util';\r\nimport { JSONParser } from '@amcharts/amcharts4/core';\r\n\r\n@Component({\r\n  selector: 'logistica-yms-tipos-setor-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaYmsTiposSetorCadastroComponent\r\n  implements OnInit {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  //loading\r\n  disabledForm = false;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private localeService: BsLocaleService,\r\n    private tiposSetorService: LogisticaYmsTiposSetorService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id')){\r\n      this.getTipo(_params['id']);\r\n      return\r\n    }\r\n  }\r\n\r\n\r\n  getTipo(id?: string) {\r\n    this.loading = true;\r\n    this.tiposSetorService\r\n      .getTipo(id)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.form.patchValue(response.body['data'])\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'YMS',\r\n        routerLink: `/logistica/yms/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipos de Setor',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_YMS_SETO_TIPO: [null],\r\n      NM_SETO_TIPO: [null, [Validators.required]],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postTiposSetor() {\r\n    this.loadingNavBar = true;\r\n    this.tiposSetorService\r\n      .postTiposSetor(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n  \r\n}\r\n"]}