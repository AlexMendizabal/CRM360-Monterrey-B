{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/similaridade/formulario/formulario.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/similaridade/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/similaridade/similaridade-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/similaridade/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/similaridade/similaridade.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/similaridade/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/similaridade/lista/lista.component.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/similaridade/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/similaridade/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/similaridade/similaridade.service.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialCadastrosMateriaisSimilaridadeFormularioResolverGuard","materiaisSimilaridadeService","route","params","id","getDetalhes","success","mensagem","data","codSimilaridade","codMaterial","nomeMaterial","codSituacao","materiais","routes","path","component","resolve","detalhes","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMateriaisSimilaridadeRoutingModule","imports","forChild","exports","ComercialCadastrosMateriaisSimilaridadeModule","declarations","providers","ComercialCadastrosMateriaisSimilaridadeListaComponent","activatedRoute","router","formBuilder","pnotifyService","atividadesService","titleService","confirmModalService","detailPanelService","loaderNavbar","breadCrumbTree","subtitles","text","color","tableConfig","subtitleBorder","tableConfigMateriais","hover","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","getPNotify","registrarAcesso","setBreadCrumb","setFormFilter","setTitle","onDetailPanelEmitter","setSimilaridadeSelecionada","subscribe","descricao","routerLink","idSubModulo","showDetailPanelSubscription","config","event","showing","formValue","checkRouterParams","form","group","de","para","pagina","registros","required","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","value","similaridadeSelecionada","situacao","codUsuario","nomeUsuario","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","hide","getListaSimilaridades","pipe","response","hasOwnProperty","slice","error","similaridade","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","getAssociacoesMateriais","setTimeout","loadedFinished","index","confirmActivate","asObservable","result","activateSimilaridade","refreshMainData","showConfirm","confirmInactive","inactivateSimilaridade","console","log","i","selector","template","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosMateriaisSimilaridadeFormularioComponent","location","MASKS","loaderFullScreen","tableConfigAssocMateriais","fixedHeader","bodyHeight","codClasse","formChanged","showMateriais","linhas","classes","materiaisLista","materiaisListaLoaded","materiaisListaEmpty","getFilterValues","setFormBuilder","appTitle","responseCode","back","resolver","snapshot","codLinha","disabled","assocMateriais","array","setMateriais","onAddMaterial","material","manipulateForm","checkMaterialExists","push","markAsTouched","markAsDirty","notice","some","el","limparMaterialPrincipal","onInput","controls","setValue","confirmDelete","deleteMaterial","removeAt","pristine","checkFormValidation","submittingForm","save","getRawValue","reset","navigateTo","isValid","confirm","codigoMaterial","ComercialCadastrosMateriaisSimilaridadeService","http","comercialService","tidSoftwareService","API","httpParams","param","append","codGrupo","record","post","put","updateSimilaridade","saveSimilaridade","getLinhas","getClasses","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"materiais-similaridade-similaridade-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvc2ltaWxhcmlkYWRlL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisSimilaridadeService } from '../similaridade.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisSimilaridadeFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private materiaisSimilaridadeService: ComercialCadastrosMateriaisSimilaridadeService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.materiaisSimilaridadeService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      mensagem: null,\r\n      data: {\r\n        codSimilaridade: null,\r\n        codMaterial: null,\r\n        nomeMaterial: null,\r\n        codSituacao: '',\r\n        materiais: [],\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosMateriaisSimilaridadeFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisSimilaridadeListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisSimilaridadeFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialCadastrosMateriaisSimilaridadeListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosMateriaisSimilaridadeFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisSimilaridadeFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosMateriaisSimilaridadeFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisSimilaridadeFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosMateriaisSimilaridadeRoutingModule {}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div [hidden]=\\\"form.getRawValue().codMaterial != null\\\">\\r\\n        <comercial-cadastros-materiais-templates-material-principal\\r\\n          [linhas]=\\\"linhas\\\"\\r\\n          [classes]=\\\"classes\\\"\\r\\n          [limparMaterialSelecionado]=\\\"limparMaterialPrincipal\\\"\\r\\n          (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\r\\n          (materialPrincipal)=\\\"materialPrincipal($event)\\\">\\r\\n        </comercial-cadastros-materiais-templates-material-principal>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div [hidden]=\\\"form.getRawValue().codMaterial === null\\\">\\r\\n          <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col mt-auto\\\">\\r\\n              <div class=\\\"mtc-title mb-0\\\">Principal material da similaridade</div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\" *ngIf=\\\"form.getRawValue().codMaterial != null\\\">\\r\\n              <div class=\\\"d-flex justify-content-end\\\">\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                  (click)=\\\"onLimparMaterialPrincipal()\\\">\\r\\n                  <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  <span>Limpar</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codMaterial\\\">Cód. Material</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"nomeGrupo\\\"\\r\\n                formControlName=\\\"codMaterial\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codMaterial')\\\" message=\\\"Código é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-7\\\">\\r\\n              <label for=\\\"nomeMaterial\\\">Material</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"nomeGrupo\\\"\\r\\n                formControlName=\\\"nomeMaterial\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('nomeMaterial')\\\" message=\\\"Material é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"codSituacao\\\"minha\\r\\n                formControlName=\\\"codSituacao\\\"\\r\\n                (change)=\\\"onInput()\\\"\\r\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n                <option value=\\\"\\\">SELECIONE UMA OPÇÃO</option>\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n              </select>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <hr>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div formArrayName=\\\"assocMateriais\\\">\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length > 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"mtc-title\\\">Materiais similares</div>\\r\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let material of assocMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <td style=\\\"width: 95%\\\">\\r\\n                      {{ form.value.assocMateriais[i].codMaterial }} - {{ form.value.assocMateriais[i].nomeMaterial | uppercase }}\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                      <btn-icon\\r\\n                        icon=\\\"fas fa-trash\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        (click)=\\\"onDeleteMaterial(i)\\\">\\r\\n                      </btn-icon>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length === 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <message\\r\\n                icon=\\\"fas fa-exchange-alt\\\"\\r\\n                text=\\\"Nenhuma associação encontrada\\\">\\r\\n              </message>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <comercial-cadastros-materiais-templates-associacoes\\r\\n        [linhas]=\\\"linhas\\\"\\r\\n        [classes]=\\\"classes\\\"\\r\\n        [linhaSelecionada]=\\\"form.value.codLinha\\\"\\r\\n        [classeSelecionada]=\\\"form.value.codClasse\\\"\\r\\n        (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\r\\n        (materialAssociado)=\\\"materialAssociado($event)\\\">\\r\\n      </comercial-cadastros-materiais-templates-associacoes>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosMateriaisSimilaridadeRoutingModule } from './similaridade-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialCadastrosMateriaisTemplatesModule } from '../templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisSimilaridadeListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisSimilaridadeFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisSimilaridadeService } from './similaridade.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosMateriaisSimilaridadeListaComponent,\r\n    ComercialCadastrosMateriaisSimilaridadeFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule,\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialCadastrosMateriaisSimilaridadeRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ComercialCadastrosMateriaisTemplatesModule,\r\n  ],\r\n  providers: [PNotifyService, ComercialCadastrosMateriaisSimilaridadeService],\r\n})\r\nexport class ComercialCadastrosMateriaisSimilaridadeModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvc2ltaWxhcmlkYWRlL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisSimilaridadeService } from '../similaridade.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { ISimilaridade } from '../models/similaridade';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-similaridade-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisSimilaridadeListaComponent\r\n  implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'nomeMaterial';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<ISimilaridade> = [];\r\n  dadosPagination: Array<ISimilaridade> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  similaridadeSelecionada: ISimilaridade;\r\n  materiais: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private materiaisSimilaridadeService: ComercialCadastrosMateriaisSimilaridadeService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Similaridade de materiais');\r\n    this.onDetailPanelEmitter();\r\n    this.setSimilaridadeSelecionada();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Similaridade de materiais',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      de: [formValue.de],\r\n      para: [formValue.para],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      de: null,\r\n      para: null,\r\n      codSituacao: '',\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setSimilaridadeSelecionada(): void {\r\n    this.similaridadeSelecionada = {\r\n      codSimilaridade: null,\r\n      codMaterial: null,\r\n      nomeMaterial: null,\r\n      codSituacao: null,\r\n      situacao: null,\r\n      codUsuario: null,\r\n      nomeUsuario: null,\r\n      materiais: [],\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.de) {\r\n      params.de = this.form.value.de;\r\n    }\r\n\r\n    if (this.form.value.para) {\r\n      params.para = this.form.value.para;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.materiaisSimilaridadeService\r\n      .getListaSimilaridades(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  classStatusBorder(similaridade: ISimilaridade): string {\r\n    let borderClass: string;\r\n\r\n    if (similaridade.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (similaridade.codSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(similaridade: ISimilaridade): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Similaridades (${similaridade.nomeMaterial})`;\r\n    this.setSimilaridadeSelecionada();\r\n    this.similaridadeSelecionada = similaridade;\r\n    this.materiais = [];\r\n\r\n    this.materiaisSimilaridadeService\r\n      .getAssociacoesMateriais(similaridade.codSimilaridade)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.materiais = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  onEdit(similaridade: ISimilaridade): void {\r\n    this.router.navigate(['../editar', similaridade.codSimilaridade], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, similaridade: ISimilaridade): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateSimilaridade(index, similaridade) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(similaridade);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateSimilaridade(\r\n    index: number,\r\n    similaridade: ISimilaridade\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.materiaisSimilaridadeService.activateSimilaridade(\r\n      similaridade.codSimilaridade\r\n    );\r\n  }\r\n\r\n  onInactivate(index: number, similaridade: ISimilaridade): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateSimilaridade(index, similaridade) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(similaridade);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateSimilaridade(\r\n    index: number,\r\n    similaridade: ISimilaridade\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 0;\r\n\r\n    return this.materiaisSimilaridadeService.inactivateSimilaridade(\r\n      similaridade.codSimilaridade\r\n    );\r\n  }\r\n\r\n  refreshMainData(similaridade: ISimilaridade): void {\r\n    console.log('Aqui!');\r\n\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (similaridade.codSimilaridade === this.dados[i].codSimilaridade) {\r\n        this.dados[i].codSituacao = similaridade.codSituacao;\r\n\r\n        console.log(this.dados[i]);\r\n\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Similaridade de materiais\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"de\\\">\\r\\n                <span class=\\\"mr-1\\\">origem</span>\\r\\n                <ng-template #tooltipLabelDeTemplate>\\r\\n                  <p class=\\\"mb-0\\\">Código ou Descrição do material</p>\\r\\n                </ng-template>\\r\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelDeTemplate\\\" container=\\\"body\\\"></i>\\r\\n              </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"de\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"para\\\">\\r\\n                <span class=\\\"mr-1\\\">Similar</span>\\r\\n                <ng-template #tooltipLabelParaTemplate>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou nome do grupo</p>\\r\\n                </ng-template>\\r\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelParaTemplate\\\" container=\\\"body\\\"></i>\\r\\n              </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"para\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"0\\\">Inativos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Código \\\"\\r\\n                [active]=\\\"orderBy == 'codMaterial'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codMaterial')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Material\\\"\\r\\n                [active]=\\\"orderBy == 'nomeMaterial'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeMaterial')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let similaridade of dadosPagination; let i = index;\\\" [class.table-active]=\\\"similaridade.codSimilaridade == similaridadeSelecionada.codSimilaridade && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(similaridade)\\\"\\r\\n              (click)=\\\"onDetails(similaridade)\\\">\\r\\n              {{ similaridade.codMaterial }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(similaridade)\\\">\\r\\n              {{ similaridade.nomeMaterial | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(similaridade)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"similaridade.nomeUsuario === null\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"similaridade.nomeUsuario !== null\\\">\\r\\n                {{ similaridade.nomeUsuario | uppercase }}\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <span *ngIf=\\\"similaridade.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, similaridade)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"similaridade.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, similaridade)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(similaridade)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && !dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiais.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n              <th scope=\\\"col\\\">Material</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let material of materiais\\\">\\r\\n              <td class=\\\"text-center\\\">{{ material.codMaterial }}</td>\\r\\n              <td>{{ material.nomeMaterial | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ng-brazil\r\nimport { MASKS } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisSimilaridadeService } from '../similaridade.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { ISimilaridade } from '../models/similaridade';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-grupos-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisSimilaridadeFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = MASKS;\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  codClasse: number = null;\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  showMateriais = true;\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n\r\n  materiaisLista: Array<any> = [];\r\n  materiaisListaLoaded = false;\r\n  materiaisListaEmpty = false;\r\n\r\n  limparMaterialPrincipal: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private materiaisSimilaridadeService: ComercialCadastrosMateriaisSimilaridadeService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFilterValues();\r\n    this.setFormBuilder();\r\n    this.titleService.setTitle('Cadastro de similaridade de materiais');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar similaridade de materiais';\r\n      } else {\r\n        this.appTitle = 'Nova similaridade de materiais';\r\n      }\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Similaridade de materiais',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/similaridade/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.materiaisSimilaridadeService\r\n      .getFilterValues()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n\r\n        if (response[1].responseCode === 200) {\r\n          this.classes = response[1].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\r\n\r\n    if (resolver.success === true) {\r\n      const detalhes: ISimilaridade = resolver.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codSimilaridade: [detalhes.codSimilaridade],\r\n        codLinha: [detalhes.codLinha],\r\n        codClasse: [detalhes.codClasse],\r\n        codMaterial: [{ value: detalhes.codMaterial, disabled: true }],\r\n        nomeMaterial: [{ value: detalhes.nomeMaterial, disabled: true }],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\r\n        assocMateriais: this.formBuilder.array([]),\r\n      });\r\n\r\n      this.setMateriais(detalhes.materiais);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  setMateriais(materiais: any): void {\r\n    if (materiais.length > 0) {\r\n      for (let i = 0; i < materiais.length; i++) {\r\n        this.onAddMaterial(materiais[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  get assocMateriais(): FormArray {\r\n    return this.form.get('assocMateriais') as FormArray;\r\n  }\r\n\r\n  onAddMaterial(material: any, manipulateForm?: boolean): void {\r\n    if (this.codClasse === null) {\r\n      this.codClasse = material.codClasse;\r\n    }\r\n\r\n    if (this.codClasse === material.codClasse) {\r\n      if (this.checkMaterialExists(material) === false) {\r\n        this.assocMateriais.push(\r\n          this.formBuilder.group({\r\n            codMaterial: [material.codMaterial],\r\n            nomeMaterial: [material.nomeMaterial],\r\n            codClasse: [material.codClasse],\r\n          })\r\n        );\r\n\r\n        if (this.form.value.assocMateriais.length > 9) {\r\n          if (this.tableConfigAssocMateriais.fixedHeader === false) {\r\n            this.showMateriais = false;\r\n            this.tableConfigAssocMateriais.fixedHeader = true;\r\n\r\n            setTimeout(() => {\r\n              this.showMateriais = true;\r\n            }, 1);\r\n          }\r\n        }\r\n\r\n        if (manipulateForm) {\r\n          this.form.markAsTouched();\r\n          this.form.markAsDirty();\r\n        }\r\n      }\r\n    } else {\r\n      this.pnotifyService.notice('Associe apenas materiais da mesma classe.');\r\n    }\r\n  }\r\n\r\n  checkMaterialExists(material: any): boolean {\r\n    return this.form.value.assocMateriais.some((el: any) => {\r\n      return el.codMaterial === material.codMaterial;\r\n    });\r\n  }\r\n\r\n  onLimparMaterialPrincipal(): void {\r\n    this.limparMaterialPrincipal = true;\r\n    this.onInput();\r\n\r\n    this.codClasse = null;\r\n    this.form.controls.codMaterial.setValue(null);\r\n    this.form.controls.nomeMaterial.setValue(null);\r\n\r\n    setTimeout(() => {\r\n      this.limparMaterialPrincipal = false;\r\n    }, 100);\r\n  }\r\n\r\n  onDeleteMaterial(index: number): void {\r\n    this.confirmDelete().subscribe((response: boolean) =>\r\n      response ? this.deleteMaterial(index) : null\r\n    );\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  deleteMaterial(index: number) {\r\n    this.assocMateriais.removeAt(index);\r\n    this.form.markAsTouched();\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.checkFormValidation() && this.form.valid) {\r\n        if (this.form.value.assocMateriais.length > 0) {\r\n          this.loaderNavbar = true;\r\n          this.submittingForm = true;\r\n\r\n          this.materiaisSimilaridadeService\r\n            .save(this.form.getRawValue())\r\n            .pipe(\r\n              finalize(() => {\r\n                this.loaderNavbar = false;\r\n                this.submittingForm = false;\r\n              })\r\n            )\r\n            .subscribe(\r\n              (response: any) => {\r\n                if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === true\r\n                ) {\r\n                  this.form.reset();\r\n                  this.formChanged = false;\r\n                  this.pnotifyService.success(response.mensagem);\r\n\r\n                  this.activatedRoute.params.subscribe((params: any) => {\r\n                    let navigateTo: string;\r\n\r\n                    if (params.hasOwnProperty('id')) {\r\n                      navigateTo = '../../lista';\r\n                    } else {\r\n                      navigateTo = '../lista';\r\n                    }\r\n\r\n                    this.router.navigate([navigateTo], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  });\r\n                } else if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === false\r\n                ) {\r\n                  this.pnotifyService.error(response.mensagem);\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              },\r\n              (error: any) => {\r\n                this.pnotifyService.error();\r\n              }\r\n            );\r\n        } else {\r\n          this.pnotifyService.notice('Associe pelo menos um material.');\r\n        }\r\n      } else {\r\n        this.pnotifyService.notice('Selecione um material.');\r\n      }\r\n    }\r\n  }\r\n\r\n  checkFormValidation(): boolean {\r\n    let isValid = true;\r\n\r\n    if (this.form.getRawValue().codMaterial === null) {\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onLoaderNavbar(event: boolean): void {\r\n    this.loaderNavbar = event;\r\n  }\r\n\r\n  materialPrincipal(material: any): void {\r\n    this.onInput();\r\n\r\n    this.form.controls.codLinha.setValue(material.codLinha);\r\n    this.form.controls.codClasse.setValue(material.codClasse);\r\n    this.form.controls.codMaterial.setValue(material.codigoMaterial);\r\n    this.form.controls.nomeMaterial.setValue(material.descricao);\r\n  }\r\n\r\n  materialAssociado(material: any): void {\r\n    this.onAddMaterial(material, true);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../../../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\r\n\r\n// Interfaces\r\nimport { ISimilaridade } from './models/similaridade';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisSimilaridadeService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/materiais/similaridade`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) {}\r\n\r\n  getListaSimilaridades(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAssociacoesMateriais(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/associacoes/${codGrupo}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhes(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codGrupo}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  private saveSimilaridade(\r\n    record: ISimilaridade\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1), retry(2));\r\n  }\r\n\r\n  private updateSimilaridade(\r\n    record: ISimilaridade\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  save(record: ISimilaridade): Observable<Object | JsonResponse> {\r\n    if (record.codSimilaridade !== null) {\r\n      return this.updateSimilaridade(record);\r\n    }\r\n\r\n    return this.saveSimilaridade(record);\r\n  }\r\n\r\n  activateSimilaridade(\r\n    codSimilaridade: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/ativar`, codSimilaridade)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  inactivateSimilaridade(\r\n    codSimilaridade: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/inativar`, codSimilaridade)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getFilterValues(): Observable<Object | JsonResponse> {\r\n    const linhas = this.tidSoftwareService.getLinhas();\r\n    const classes = this.comercialService.getClasses(null);\r\n\r\n    return forkJoin([linhas, classes]);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}