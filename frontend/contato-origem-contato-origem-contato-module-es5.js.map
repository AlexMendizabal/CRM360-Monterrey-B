{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/lista/lista.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/origem-contato.service.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/lista/lista.component.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/origem-contato.module.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/origem-contato-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/formulario/formulario.component.html"],"names":["ComercialCadastrosContatoOrigemContatoFormularioResolverGuard","origemContatoService","route","params","id","getOrigemContato","success","data","codOrigemContato","descricao","codSituacao","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialCadastrosContatoOrigemContatoService","http","API","httpParams","param","append","get","pipe","record","post","put","updateOrigemContato","saveOrigemContato","ComercialCadastrosContatoOrigemContatoFormularioComponent","activatedRoute","router","location","formBuilder","pnotifyService","atividadesService","titleService","loaderFullScreen","breadCrumbTree","descOrigemERP","formChanged","getPNotify","registrarAcesso","setBreadCrumb","setFormBuilder","getFormFields","setTitle","subscribe","appTitle","routerLink","idSubModulo","snapshot","detalhes","console","log","form","group","replace","required","maxLength","codReferenteErp","error","back","getListaOrigemERP","response","unshift","pristine","valid","loaderNavbar","submittingForm","save","value","hasOwnProperty","reset","mensagem","navigate","relativeTo","confirm","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","selector","template","ComercialCadastrosContatoOrigemContatoListaComponent","confirmModalService","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","setFormFilter","onDetailPanelEmitter","setOrigemContatoSelecionado","showDetailPanelSubscription","unsubscribe","config","event","showing","formValue","checkRouterParams","origemContato","formaContato","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","origemContatoSelecionado","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaOrigemContato","key","slice","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","getAlteracoes","setTimeout","loadedFinished","index","confirmActivate","asObservable","result","activateOrigemContato","refreshMainData","showConfirm","confirmInactive","inactivateOrigemContato","i","FormDeactivateGuard","component","state","formCanDeactivate","ComercialCadastrosContatoOrigemContatoModule","declarations","imports","forRoot","providers","routes","path","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosContatoOrigemContatoRoutingModule","forChild","exports"],"mappings":"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","file":"contato-origem-contato-origem-contato-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosContatoOrigemContatoService } from '../origem-contato.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosContatoOrigemContatoFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private origemContatoService: ComercialCadastrosContatoOrigemContatoService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.origemContatoService.getOrigemContato(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codOrigemContato: null,\n        descricao: null,\n        codSituacao: null,\n      },\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jb250YXRvL29yaWdlbS1jb250YXRvL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jb250YXRvL29yaWdlbS1jb250YXRvL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { OrigemContato } from './models/origem-contato';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosContatoOrigemContatoService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/contato/origem-contato`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaOrigemContato(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codOrigemContato: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codOrigemContato}`)\n      .pipe(take(1));\n  }\n\n  getOrigemContato(codOrigemContato: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codOrigemContato}`)\n      .pipe(take(1));\n  }\n\n  private saveOrigemContato(record: any) {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\n  }\n\n  private updateOrigemContato(record: any) {\n    return this.http.put(`${this.API}/atualizar`, record).pipe(take(1));\n  }\n\n  save(record: OrigemContato): Observable<any> {\n    if (record.codOrigemContato !== null) {\n      return this.updateOrigemContato(record);\n    }\n\n    return this.saveOrigemContato(record);\n  }\n\n  deleteOrigemContato(codOrigemContato: number): Observable<any> {\n    return this.http\n      .delete(`${this.API}/excluir/${codOrigemContato}`)\n      .pipe(take(1));\n  }\n\n  activateOrigemContato(codOrigemContato: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codOrigemContato).pipe(take(1));\n  }\n\n  inactivateOrigemContato(codOrigemContato: number): Observable<any> {\n    return this.http\n      .post(`${this.API}/inativar`, codOrigemContato)\n      .pipe(take(1));\n  }\n\n  getListaOrigemERP(): Observable<any> {\n    return this.http.get(`${this.API}/erp/lista`).pipe(take(1));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosContatoOrigemContatoService } from '../origem-contato.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n\n// Interfaces\nimport { OrigemContato } from '../models/origem-contato';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-cadastros-contato-origem-contato-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosContatoOrigemContatoFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar: boolean;\n  loaderFullScreen = true;\n\n  appTitle: string;\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  descOrigemERP: Array<any> = [];\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private origemContatoService: ComercialCadastrosContatoOrigemContatoService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.getFormFields();\n    this.titleService.setTitle('Cadastro de origem de contato');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar origem de contato';\n      } else {\n        this.appTitle = 'Nova origem de contato';\n      }\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Origem de contato',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/contato/origem-contato/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes: OrigemContato = this.activatedRoute.snapshot.data.detalhes\n        .data;\n\n        console.log(detalhes);\n      \n      this.form = this.formBuilder.group({\n        codOrigemContato: [detalhes.codOrigemContato],\n        descricao: [\n          detalhes.descricao == null ? detalhes.descricao : detalhes.descricao.replace(/'/, ''), \n          [Validators.required, Validators.maxLength(40)],\n        ],\n        codReferenteErp:[\n          detalhes.codReferenteErp,\n          [Validators.required],\n        ],\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\n      });\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  getFormFields(): void {\n    this.loaderFullScreen = true;\n\n    this.origemContatoService\n      .getListaOrigemERP()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: JsonResponse) => {\n        if (response.success === true) {\n          this.descOrigemERP = response.data;\n\n          this.descOrigemERP.unshift({\n            codOrigemContato: 0,\n            descricao: 'NENHUM',\n          });\n        }\n      });\n  }\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n\n        this.origemContatoService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe(\n            (response: any) => {\n              if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                this.form.reset();\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  if (params.hasOwnProperty('id')) {\n                    this.location.back();\n                  } else {\n                    this.router.navigate(['../lista'], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  }\n                });\n              } else if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === false\n              ) {\n                this.pnotifyService.error(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            (error: any) => {\n              this.pnotifyService.error();\n            }\n          );\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Origem de contato\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-7\\\">\\n              <label for=\\\"origemContato\\\">Descrição</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"origemContato\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"0\\\">Inativos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\">Código</th>\\n            <th scope=\\\"col\\\">Descrição</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr\\n            *ngFor=\\\"let origemContato of dadosPagination; let i = index\\\"\\n            [class.table-active]=\\\"origemContato.codOrigemContato == origemContatoSelecionado.codOrigemContato\\\">\\n            <td\\n              class=\\\"text-center hover\\\"\\n              [ngClass]=\\\"classStatusBorder(origemContato)\\\"\\n              (click)=\\\"onDetails(origemContato)\\\">\\n              {{ origemContato.codOrigemContato }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(origemContato)\\\">\\n              {{ origemContato.descricao }}\\n            </td>\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"origemContato.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, origemContato)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"origemContato.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, origemContato)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-2\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(origemContato)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"dadosEmpty\\\">\\n      </empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\n        <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n              <th scope=\\\"col\\\">Usuário</th>\\n              <th scope=\\\"col\\\">Alteração</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\n              <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\n              <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\n              <td>{{ alteracao.mensagem | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosContatoOrigemContatoService } from '../origem-contato.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { OrigemContato } from './../models/origem-contato';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-contato-origem-contato-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosContatoOrigemContatoListaComponent\n  implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  orderBy = 'origemContato';\n  orderType = 'ASC';\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<OrigemContato> = [];\n  dadosPagination: Array<OrigemContato> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  origemContatoSelecionado: OrigemContato;\n  alteracoes: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private origemContatoService: ComercialCadastrosContatoOrigemContatoService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Origem de Contato');\n    this.onDetailPanelEmitter();\n    this.setOrigemContatoSelecionado();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Origem de contato',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      origemContato: [formValue.formaContato],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n    this.loaderFullScreen = false;\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      origemContato: null,\n      codSituacao: '',\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setOrigemContatoSelecionado(): void {\n    this.origemContatoSelecionado = {\n      codOrigemContato: 0,\n      descricao: null,\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.origemContato) {\n      params.origemContato = this.form.value.origemContato;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    this.origemContatoService\n      .getListaOrigemContato(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          console.log(response)\n          if (response.hasOwnProperty('success') && response.success === true) {\n\n            Object.keys(response.data).forEach(key => {​​\n              response.data[key]['descricao'] = response.data[key]['descricao'].replace(/'/g, '')\n            }​​);\n\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  classStatusBorder(origemContato: OrigemContato): string {\n    let borderClass: string;\n\n    if (origemContato.codSituacao === 0) {\n      borderClass = 'border-danger';\n    } else if (origemContato.codSituacao === 1) {\n      borderClass = 'border-success';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  onDetails(origemContato: OrigemContato): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.setOrigemContatoSelecionado();\n    this.origemContatoSelecionado = origemContato;\n    this.alteracoes = [];\n\n    this.origemContatoService\n      .getAlteracoes(origemContato.codOrigemContato)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.alteracoes = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  onEdit(origemContato: OrigemContato): void {\n    this.router.navigate(['../editar', origemContato.codOrigemContato], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, origemContato: OrigemContato): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateOrigemContato(index, origemContato) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(origemContato);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 0;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateOrigemContato(\n    index: number,\n    origemContato: OrigemContato\n  ): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.origemContatoService.activateOrigemContato(\n      origemContato.codOrigemContato\n    );\n  }\n\n  onInactivate(index: number, origemContato: OrigemContato): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateOrigemContato(index, origemContato) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(origemContato);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateOrigemContato(\n    index: number,\n    origemContato: OrigemContato\n  ): Observable<any> {\n    this.loaderNavbar = true;\n\n    this.dadosPagination[index].codSituacao = 0;\n\n    return this.origemContatoService.inactivateOrigemContato(\n      origemContato.codOrigemContato\n    );\n  }\n\n  refreshMainData(origemContato: OrigemContato): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (origemContato.codOrigemContato === this.dados[i].codOrigemContato) {\n        this.dados[i].codSituacao = origemContato.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosContatoOrigemContatoRoutingModule } from './origem-contato-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosContatoOrigemContatoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosContatoOrigemContatoFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosContatoOrigemContatoListaComponent,\n    ComercialCadastrosContatoOrigemContatoFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialCadastrosContatoOrigemContatoRoutingModule,\n    SharedModule,\n    TemplatesModule,\n  ],\n  providers: [PNotifyService],\n})\nexport class ComercialCadastrosContatoOrigemContatoModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosContatoOrigemContatoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosContatoOrigemContatoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosContatoOrigemContatoFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialCadastrosContatoOrigemContatoListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialCadastrosContatoOrigemContatoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosContatoOrigemContatoFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosContatoOrigemContatoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosContatoOrigemContatoFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosContatoOrigemContatoRoutingModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"descricao\\\">Descrição</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"descricao\\\"\\n              formControlName=\\\"descricao\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('descricao') + ' ' + onFieldRequired(form.controls.descricao)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('descricao')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codReferenteErp\\\">Descrição do ERP</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"descOrigemERP\\\"\\n              formControlName=\\\"codReferenteErp\\\"\\n              labelForId=\\\"codReferenteErp\\\"\\n              bindLabel=\\\"descricao\\\"\\n              bindValue=\\\"codOrigemContato\\\"\\n              [ngClass]=\\\"onFieldError('codReferenteErp') + ' ' + onFieldRequired(form.controls.codReferenteErp)\\\">\\n            </ng-select>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codSituacao\\\">Situação</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"codSituacao\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n              <option value=\\\"0\\\">Inativo</option>\\n              <option value=\\\"1\\\">Ativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\"></div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\";"]}