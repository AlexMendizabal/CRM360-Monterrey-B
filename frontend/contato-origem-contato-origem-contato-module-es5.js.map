{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/lista/lista.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/origem-contato.service.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/lista/lista.component.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/origem-contato.module.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/origem-contato-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/contato/origem-contato/formulario/formulario.component.html"],"names":["ComercialCadastrosContatoOrigemContatoFormularioResolverGuard","origemContatoService","route","params","id","getOrigemContato","success","data","codOrigemContato","descricao","codSituacao","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialCadastrosContatoOrigemContatoService","http","API","httpParams","param","append","get","pipe","record","post","put","updateOrigemContato","saveOrigemContato","ComercialCadastrosContatoOrigemContatoFormularioComponent","activatedRoute","router","location","formBuilder","pnotifyService","atividadesService","titleService","loaderFullScreen","breadCrumbTree","descOrigemERP","formChanged","getPNotify","registrarAcesso","setBreadCrumb","setFormBuilder","getFormFields","setTitle","subscribe","appTitle","routerLink","idSubModulo","snapshot","detalhes","console","log","form","group","replace","required","maxLength","codReferenteErp","error","back","getListaOrigemERP","response","unshift","pristine","valid","loaderNavbar","submittingForm","save","value","hasOwnProperty","reset","mensagem","navigate","relativeTo","confirm","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","selector","template","ComercialCadastrosContatoOrigemContatoListaComponent","confirmModalService","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","setFormFilter","onDetailPanelEmitter","setOrigemContatoSelecionado","showDetailPanelSubscription","unsubscribe","config","event","showing","formValue","checkRouterParams","origemContato","formaContato","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","origemContatoSelecionado","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaOrigemContato","key","slice","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","getAlteracoes","setTimeout","loadedFinished","index","confirmActivate","asObservable","result","activateOrigemContato","refreshMainData","showConfirm","confirmInactive","inactivateOrigemContato","i","FormDeactivateGuard","component","state","formCanDeactivate","ComercialCadastrosContatoOrigemContatoModule","declarations","imports","forRoot","providers","routes","path","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosContatoOrigemContatoRoutingModule","forChild","exports"],"mappings":"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","file":"contato-origem-contato-origem-contato-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosContatoOrigemContatoService } from '../origem-contato.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosContatoOrigemContatoFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private origemContatoService: ComercialCadastrosContatoOrigemContatoService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.origemContatoService.getOrigemContato(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codOrigemContato: null,\r\n        descricao: null,\r\n        codSituacao: null,\r\n      },\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jb250YXRvL29yaWdlbS1jb250YXRvL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jb250YXRvL29yaWdlbS1jb250YXRvL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { OrigemContato } from './models/origem-contato';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosContatoOrigemContatoService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/contato/origem-contato`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaOrigemContato(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codOrigemContato: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codOrigemContato}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getOrigemContato(codOrigemContato: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codOrigemContato}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveOrigemContato(record: any) {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\r\n  }\r\n\r\n  private updateOrigemContato(record: any) {\r\n    return this.http.put(`${this.API}/atualizar`, record).pipe(take(1));\r\n  }\r\n\r\n  save(record: OrigemContato): Observable<any> {\r\n    if (record.codOrigemContato !== null) {\r\n      return this.updateOrigemContato(record);\r\n    }\r\n\r\n    return this.saveOrigemContato(record);\r\n  }\r\n\r\n  deleteOrigemContato(codOrigemContato: number): Observable<any> {\r\n    return this.http\r\n      .delete(`${this.API}/excluir/${codOrigemContato}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  activateOrigemContato(codOrigemContato: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codOrigemContato).pipe(take(1));\r\n  }\r\n\r\n  inactivateOrigemContato(codOrigemContato: number): Observable<any> {\r\n    return this.http\r\n      .post(`${this.API}/inativar`, codOrigemContato)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getListaOrigemERP(): Observable<any> {\r\n    return this.http.get(`${this.API}/erp/lista`).pipe(take(1));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosContatoOrigemContatoService } from '../origem-contato.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n\r\n// Interfaces\r\nimport { OrigemContato } from '../models/origem-contato';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-contato-origem-contato-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosContatoOrigemContatoFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderNavbar: boolean;\r\n  loaderFullScreen = true;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  descOrigemERP: Array<any> = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private origemContatoService: ComercialCadastrosContatoOrigemContatoService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.getFormFields();\r\n    this.titleService.setTitle('Cadastro de origem de contato');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar origem de contato';\r\n      } else {\r\n        this.appTitle = 'Nova origem de contato';\r\n      }\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Origem de contato',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/contato/origem-contato/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: OrigemContato = this.activatedRoute.snapshot.data.detalhes\r\n        .data;\r\n\r\n        console.log(detalhes);\r\n      \r\n      this.form = this.formBuilder.group({\r\n        codOrigemContato: [detalhes.codOrigemContato],\r\n        descricao: [\r\n          detalhes.descricao == null ? detalhes.descricao : detalhes.descricao.replace(/'/, ''), \r\n          [Validators.required, Validators.maxLength(40)],\r\n        ],\r\n        codReferenteErp:[\r\n          detalhes.codReferenteErp,\r\n          [Validators.required],\r\n        ],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\r\n      });\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  getFormFields(): void {\r\n    this.loaderFullScreen = true;\r\n\r\n    this.origemContatoService\r\n      .getListaOrigemERP()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: JsonResponse) => {\r\n        if (response.success === true) {\r\n          this.descOrigemERP = response.data;\r\n\r\n          this.descOrigemERP.unshift({\r\n            codOrigemContato: 0,\r\n            descricao: 'NENHUM',\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.origemContatoService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe(\r\n            (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.error(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Origem de contato\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-7\\\">\\r\\n              <label for=\\\"origemContato\\\">Descrição</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"origemContato\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"0\\\">Inativos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\">Código</th>\\r\\n            <th scope=\\\"col\\\">Descrição</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr\\r\\n            *ngFor=\\\"let origemContato of dadosPagination; let i = index\\\"\\r\\n            [class.table-active]=\\\"origemContato.codOrigemContato == origemContatoSelecionado.codOrigemContato\\\">\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(origemContato)\\\"\\r\\n              (click)=\\\"onDetails(origemContato)\\\">\\r\\n              {{ origemContato.codOrigemContato }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(origemContato)\\\">\\r\\n              {{ origemContato.descricao }}\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"origemContato.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, origemContato)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"origemContato.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, origemContato)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-2\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(origemContato)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\r\\n        <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n              <th scope=\\\"col\\\">Alteração</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\r\\n              <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\r\\n              <td>{{ alteracao.mensagem | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosContatoOrigemContatoService } from '../origem-contato.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { OrigemContato } from './../models/origem-contato';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-contato-origem-contato-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosContatoOrigemContatoListaComponent\r\n  implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'origemContato';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<OrigemContato> = [];\r\n  dadosPagination: Array<OrigemContato> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  origemContatoSelecionado: OrigemContato;\r\n  alteracoes: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private origemContatoService: ComercialCadastrosContatoOrigemContatoService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Origem de Contato');\r\n    this.onDetailPanelEmitter();\r\n    this.setOrigemContatoSelecionado();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Origem de contato',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      origemContato: [formValue.formaContato],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      origemContato: null,\r\n      codSituacao: '',\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setOrigemContatoSelecionado(): void {\r\n    this.origemContatoSelecionado = {\r\n      codOrigemContato: 0,\r\n      descricao: null,\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.origemContato) {\r\n      params.origemContato = this.form.value.origemContato;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    this.origemContatoService\r\n      .getListaOrigemContato(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log(response)\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n\r\n            Object.keys(response.data).forEach(key => {​​\r\n              response.data[key]['descricao'] = response.data[key]['descricao'].replace(/'/g, '')\r\n            }​​);\r\n\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  classStatusBorder(origemContato: OrigemContato): string {\r\n    let borderClass: string;\r\n\r\n    if (origemContato.codSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    } else if (origemContato.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(origemContato: OrigemContato): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.setOrigemContatoSelecionado();\r\n    this.origemContatoSelecionado = origemContato;\r\n    this.alteracoes = [];\r\n\r\n    this.origemContatoService\r\n      .getAlteracoes(origemContato.codOrigemContato)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.alteracoes = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  onEdit(origemContato: OrigemContato): void {\r\n    this.router.navigate(['../editar', origemContato.codOrigemContato], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, origemContato: OrigemContato): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateOrigemContato(index, origemContato) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(origemContato);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 0;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateOrigemContato(\r\n    index: number,\r\n    origemContato: OrigemContato\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.origemContatoService.activateOrigemContato(\r\n      origemContato.codOrigemContato\r\n    );\r\n  }\r\n\r\n  onInactivate(index: number, origemContato: OrigemContato): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateOrigemContato(index, origemContato) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(origemContato);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateOrigemContato(\r\n    index: number,\r\n    origemContato: OrigemContato\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n\r\n    this.dadosPagination[index].codSituacao = 0;\r\n\r\n    return this.origemContatoService.inactivateOrigemContato(\r\n      origemContato.codOrigemContato\r\n    );\r\n  }\r\n\r\n  refreshMainData(origemContato: OrigemContato): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (origemContato.codOrigemContato === this.dados[i].codOrigemContato) {\r\n        this.dados[i].codSituacao = origemContato.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosContatoOrigemContatoRoutingModule } from './origem-contato-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosContatoOrigemContatoListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosContatoOrigemContatoFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosContatoOrigemContatoListaComponent,\r\n    ComercialCadastrosContatoOrigemContatoFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosContatoOrigemContatoRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n  ],\r\n  providers: [PNotifyService],\r\n})\r\nexport class ComercialCadastrosContatoOrigemContatoModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosContatoOrigemContatoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosContatoOrigemContatoListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosContatoOrigemContatoFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialCadastrosContatoOrigemContatoListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosContatoOrigemContatoFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosContatoOrigemContatoFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosContatoOrigemContatoFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosContatoOrigemContatoFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosContatoOrigemContatoRoutingModule {}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"descricao\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"descricao\\\"\\r\\n              formControlName=\\\"descricao\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('descricao') + ' ' + onFieldRequired(form.controls.descricao)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('descricao')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codReferenteErp\\\">Descrição do ERP</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"descOrigemERP\\\"\\r\\n              formControlName=\\\"codReferenteErp\\\"\\r\\n              labelForId=\\\"codReferenteErp\\\"\\r\\n              bindLabel=\\\"descricao\\\"\\r\\n              bindValue=\\\"codOrigemContato\\\"\\r\\n              [ngClass]=\\\"onFieldError('codReferenteErp') + ' ' + onFieldRequired(form.controls.codReferenteErp)\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"codSituacao\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n              <option value=\\\"0\\\">Inativo</option>\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\"></div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";"]}