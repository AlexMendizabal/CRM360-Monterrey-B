{"version":3,"sources":["./src/app/shared/directives/is-ellipsed.directive.ts","./src/app/modules/comercial/controle-entregas/controle-entregas.module.ts","./src/app/modules/comercial/services/vendedores.service.ts","./src/app/modules/comercial/controle-entregas/lista/lista.component.scss","./src/app/modules/comercial/controle-entregas/lista/lista.component.ts","./src/app/modules/logistica/entrega/controle-entregas/lista/lista.component.ts","./src/app/modules/logistica/entrega/controle-entregas/controle-entregas.service.ts","./src/app/shared/services/core/date.service.ts","./src/app/modules/comercial/controle-entregas/controle-entregas.service.ts","./src/app/modules/logistica/entrega/controle-entregas/lista/lista.component.html","./src/app/modules/comercial/comercial.service.ts","./src/app/modules/logistica/entrega/controle-entregas/lista/lista.component.scss","./src/app/modules/logistica/entrega/controle-entregas/controle-entregas.module.ts","./src/app/modules/comercial/controle-entregas/lista/lista.component.html","./src/app/modules/logistica/entrega/controle-entregas/controle-entregas-routing.module.ts","./src/app/modules/comercial/controle-entregas/controle-entregas-routing.module.ts","./src/app/shared/directives/directives.module.ts","./src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":[],"mappings":"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","file":"controle-entregas-controle-entregas-module-es2015.js","sourcesContent":["import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[isEllipsed]'\n})\nexport class IsEllipsedDirective implements AfterViewInit {\n  constructor(private elementRef: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      const element = this.elementRef.nativeElement;\n      if (element.offsetWidth < element.scrollWidth) {\n        element.title = element.innerHTML;\n      }\n    }, 500);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialControleEntregasRoutingModule } from './controle-entregas-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { DirectivesModule } from 'src/app/shared/directives/directives.module';\n\n// Components\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\n\n@NgModule({\n  declarations: [ComercialControleEntregasListaComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialControleEntregasRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    DirectivesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialControleEntregasModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialVendedoresService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\n\n  constructor(protected http: HttpClient) {}\n\n  getDetalhesCadastro() {\n    return this.http\n      .get(`${this.API}/detalhes-cadastro`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVendedores() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\n  }\n\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/carteira-clientes`,\n      {\n        params: params\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getValidaClienteCarteira(\n    codCliente: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVinculoOperadores() {\n    return this.http\n      .get(`${this.API}/vinculo-operadores`)\n      .pipe(take(1), retry(2));\n  }\n}\n","export default \"::ng-deep comercial-controle-entregas #scrollDetalhes {\\n  height: 340px;\\n  overflow: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY29udHJvbGUtZW50cmVnYXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUk7RUFDRSxhQUFBO0VBQ0EsY0FBQTtBQUROIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY29udHJvbGUtZW50cmVnYXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAge1xuICBjb21lcmNpYWwtY29udHJvbGUtZW50cmVnYXMge1xuICAgICNzY3JvbGxEZXRhbGhlcyB7XG4gICAgICBoZWlnaHQ6IDM0MHB4O1xuICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgfVxuICB9XG59XG4iXX0= */\";","import { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  TemplateRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialControleEntregasService } from '../controle-entregas.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { AdminPerfisService } from 'src/app/modules/admin/perfis/services/perfis.service';\n\ninterface ITipoEmpresa {\n  id: number;\n  nome: string;\n  sigla: string;\n}\n\n@Component({\n  selector: 'comercial-controle-entregas-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialControleEntregasListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n  modalRef: BsModalRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = false;\n  loaderImage = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home',\n    },\n    {\n      descricao: 'Controle de entregas',\n    },\n  ];\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  tableConfig: Partial<CustomTableConfig> = {\n    isResponsive: true,\n    subtitleBorder: true,\n    isFixed: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n  $serviceSubscription: Subscription;\n\n  imageLoading = false;\n\n  showAdvancedFilter = true;\n  form: FormGroup;\n  vendedores: any = [];\n\n  pedidos: any = [];\n  pedidosLoaded = false;\n  pedidosEmpty = true;\n\n  pedido: any = {};\n  entrega = [];\n\n  detalhes: any = [];\n  empresa: number;\n\n  detalhesRomaneio: any = [];\n  detalhesRomaneioEmpty: boolean = false;\n  detalhesRomaneioLoading: boolean = false;\n\n  currentPage = 1;\n  maxSize: number = 10;\n  totalItems: number;\n  itemsPerPage: number = 300;\n  pedidosPagination: any = [];\n\n  orderBy = 'dataPrev';\n  orderType = 'DESC';\n\n  // Subtitles (Ativo/Inativo)\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Entregue',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Não entregue',\n      color: 'red',\n    },\n  ];\n\n  situacoes: any = [];\n\n  filiais: Array<any> = [];\n\n  columns = {\n    nomeEmpresa: {\n      name: 'Empresa',\n      active: true,\n    },\n    romaneio: {\n      name: 'Romaneio',\n      active: true,\n    },\n    dataPrev: {\n      name: 'Data Prevista de Entrega',\n      active: true,\n    },\n    dataEntrega: {\n      name: 'Data de Entrega',\n      active: false,\n    },\n    nomeCliente: {\n      name: 'Cliente',\n      active: true,\n    },\n    sequencia: {\n      name: 'Sequência',\n      active: false,\n    },\n    pedido: {\n      name: 'Pedido',\n      active: true,\n    },\n    notaFiscal: {\n      name: 'Nota Fiscal',\n      active: true,\n    },\n    dataEmissao: {\n      name: 'Data de emissão',\n      active: false,\n    },\n    nomeSituacao: {\n      name: 'Situação',\n      active: true,\n    },\n  };\n\n  constructor(\n    private localeService: BsLocaleService,\n    private router: Router,\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private pnotifyService: PNotifyService,\n    private formBuilder: FormBuilder,\n    private atividadesService: AtividadesService,\n    private controleEntregasService: ComercialControleEntregasService,\n    private dateService: DateService,\n    private titleService: TitleService,\n    private modalService: BsModalService,\n    private routerService: RouterService,\n    private perfilService: AdminPerfisService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.setFormFilter();\n    this.registrarAcesso();\n    this.getFiliais();\n    this.getFiltros();\n    this.getSituacoes();\n    this.titleService.setTitle('Controle de entregas');\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getFiltros() {\n    this.controleEntregasService\n      .getFiltros()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response[0].responseCode === 200) {\n            this.vendedores = response[0].result;\n\n            this.vendedores.unshift({\n              id: 0,\n              nome: 'EXIBIR TODOS',\n            });\n          }\n\n          this.onActivatedRoute();\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      );\n  }\n\n  async getFiliais() {\n    this.filiais = [\n      {\n        CD_FILI: 46,\n        NM_FILI: 'Corte & Dobra - Cajamar',\n      },\n      {\n        CD_FILI: 72,\n        NM_FILI: 'Corte & Dobra - Praia Grande',\n      },\n      {\n        CD_FILI: 3,\n        NM_FILI: 'Corte & Dobra - Rio das Pedras',\n      },\n      {\n        CD_FILI: 41,\n        NM_FILI: 'Distribuição Duque de Caxias',\n      },\n      {\n        CD_FILI: 6,\n        NM_FILI: 'Distribuição Osasco',\n      },\n      {\n        CD_FILI: 18,\n        NM_FILI: 'Distribuição Tietê',\n      },\n      {\n        CD_FILI: 79,\n        NM_FILI: 'Distribuição Taipas',\n      },\n      {\n        CD_FILI: 77,\n        NM_FILI: 'Distribuição Camanducaia',\n      },\n      {\n        CD_FILI: 83,\n        NM_FILI: 'Distribuição Guarulhos',\n      },\n      {\n        CD_FILI: 9661,\n        NM_FILI: 'Dba Aços Especiais',\n      },\n      {\n        CD_FILI: 9639,\n        NM_FILI: 'Dba Jacareí',\n      },\n      {\n        CD_FILI: 9636,\n        NM_FILI: 'Dba Praia Grande',\n      },\n      {\n        CD_FILI: 9645,\n        NM_FILI: 'Dba Piracicaba',\n      },\n    ];\n  }\n\n  onActivatedRoute() {\n    this.activatedRoute.queryParams.subscribe((response) => {\n      let _response = this.routerService.getBase64UrlParams(response);\n\n      if (Object.keys(_response).length > 0) {\n        this.form.patchValue(_response);\n        this.getPedidos(this.getParams());\n      } else {\n        this.loaderNavbar = false;\n      }\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    const vendedorSelecionado = this.vendedores.filter(\n      (vendedor) => vendedor?.id == _params['CD_VEND']\n    );\n\n    _params['NM_VEND'] = '';\n\n    if (vendedorSelecionado.length == 1) {\n      _params['NM_VEND'] = vendedorSelecionado[0]['nome'];\n    }\n\n    return _params;\n  }\n\n  setFormFilter() {\n    this.form = this.formBuilder.group({\n      DT_INIC: [this.dateService.getFirstDayMonth(), [Validators.required]],\n      DT_FINA: [this.dateService.getLastDayMonth(), [Validators.required]],\n      NM_CLIE: [null],\n      NOTA_FISC: [null],\n      CD_PEDI: [null],\n      SG_PEDI: [null],\n      CD_ROMA: [null],\n      CD_VEND: [null],\n      NM_VEND: [null],\n      DS_CLIE: [null],\n      CD_FILI: [null],\n      ENTR_SG_STAT: [null],\n      TT_REGI_PAGI: [300],\n      ORDE_BY: ['dataPrev'],\n      ORDE_TYPE: ['DESC'],\n      PAGI: [1],\n      TIME: new Date().getDate(),\n    });\n\n    this.getMatriculaVendedorLogado();\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.get('ORDE_BY').setValue(this.orderBy);\n    this.form.get('ORDE_TYPE').setValue(this.orderType);\n\n    this.onFilter();\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  getPedidos(params) {\n    this.$serviceSubscription?.unsubscribe();\n\n    this.loaderNavbar = true;\n    this.pedidosLoaded = false;\n\n    this.controleEntregasService\n      .getLista(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.pedidosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.status !== 200) {\n            this.pedidos = [];\n            this.pedidosEmpty = true;\n            return;\n          }\n\n          this.pedidos = response.body['data'];\n          this.totalItems = response.body['total'];\n          this.pedidosEmpty = false;\n        },\n        error: (error) => {\n          this.pedidos = [];\n          this.pedidosEmpty = true;\n          const message = error?.error?.message;\n          message\n            ? this.pnotifyService.error(message)\n            : this.pnotifyService.error();\n        }\n      });\n  }\n\n  getDetalhesEntrega(params, template) {\n    this.loaderNavbar = true;\n    this.imageLoading = true;\n\n    this.controleEntregasService\n      .getDetalhesPedido(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status !== 200) {\n            return;\n          }\n\n          this.entrega = response.body['data'];\n\n          if (!this.entrega['ENTR_COMP_FOTO']) {\n            setTimeout(() => {\n              this.imageLoading = false;\n            }, 200);\n          }\n\n          this.modalRef = this.modalService.show(template, {\n            animated: false,\n            ignoreBackdropClick: true,\n            class: 'modal-xxl',\n          });\n        },\n        (error) => {\n          const message = error?.error?.message;\n          message\n            ? this.pnotifyService.error(message)\n            : this.pnotifyService.error();\n        }\n      );\n  }\n\n  getDetalhesRomaneio(params) {\n    this.detalhesRomaneioLoading = true;\n    this.controleEntregasService\n      .getDetalhesRomaneio(params)\n      .pipe(\n        finalize(() => {\n          this.detalhesRomaneioLoading = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status !== 200) {\n            this.detalhesRomaneioEmpty = true;\n            return;\n          }\n          this.detalhesRomaneioEmpty = false;\n          this.detalhesRomaneio = response.body['data'];\n        },\n        (error) => {\n          this.detalhesRomaneioEmpty = false;\n          const message = error?.error?.message;\n          message\n            ? this.pnotifyService.error(message)\n            : this.pnotifyService.error();\n        }\n      );\n  }\n\n  onFilter() {\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.form.get('PAGI').setValue(1);\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  viewDetails(item: any, template: TemplateRef<any>) {\n    this.pedido = item;\n\n    const params = {\n      CD_ROMA: item?.CD_ROMA,\n      CD_PEDI: item?.CD_PEDI,\n      CD_FILI: item?.CD_FILI,\n      ID_LOGI_FUSI_PEDI: item?.ID,\n    };\n\n    this.getDetalhesEntrega(params, template);\n    this.getDetalhesRomaneio(params);\n  }\n\n  classStatusBorder(item): string {\n    if (item?.ENTR_SG_STAT == 'ENTREGA_REALIZADA') {\n      return 'border-success';\n    }\n\n    return 'border-danger';\n  }\n\n  getSelectedStyle(item) {\n    if (this.pedido?.CD_PEDI == item?.CD_PEDI) {\n      return { 'font-weight': 600, color: 'blue' };\n    }\n\n    return {};\n  }\n\n  onResetForm() {\n    this.form.reset();\n  }\n\n  /* Paginação */\n  onPageChanged(event: PageChangedEvent): void {\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.form.get('PAGI').setValue(event.page);\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n  /* Paginação */\n\n  getSituacoes() {\n    this.controleEntregasService.getSituacoes().subscribe(\n      (response) => {\n        if (response.status === 200) {\n          this.situacoes = response.body['data'];\n        } else {\n          this.pnotifyService.notice('Nenhuma situação encontrada.');\n        }\n      },\n      (error) => {\n        this.pnotifyService.error('Erro ao carregar situações.');\n      }\n    );\n  }\n\n  keepOriginalOrder = (a, b) => a.key;\n\n  getMatriculaVendedorLogado() {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.form.get('CD_VEND').setValue(currentUser?.info?.idVendedor);\n  }\n\n  onImageLoad() {\n    setTimeout(() => {\n      this.imageLoading = false;\n    }, 200);\n  }\n}\n","import { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  TemplateRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialControleEntregasService } from '../controle-entregas.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { AdminPerfisService } from 'src/app/modules/admin/perfis/services/perfis.service';\nimport { LogisticaEntregaFusionService } from '../../services/fusion.service';\nimport { LogisticaEntregaDesmembramentoService } from '../../desmembramento/services/desmembramento.service';\nimport { LogisticaFiliaisService } from '../../../cadastros/filiais/services/filiais.service';\nimport { HttpResponse } from '@angular/common/http';\n\ninterface ITipoEmpresa {\n  id: number;\n  nome: string;\n  sigla: string;\n}\n\n@Component({\n  selector: 'comercial-controle-entregas-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialControleEntregasListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n  modalRef: BsModalRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = false;\n  loadingFiliais = false;\n  loaderImage = true;\n\n  breadCrumbTree: Array<Breadcrumb>;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  tableConfig: Partial<CustomTableConfig> = {\n    isResponsive: true,\n    subtitleBorder: true,\n    isFixed: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n  $serviceSubscription: Subscription;\n\n  imageLoading = false;\n\n  showAdvancedFilter = true;\n  form: FormGroup;\n  vendedores: any = [];\n\n  pedidos: any = [];\n  pedidosLoaded = false;\n  pedidosEmpty = true;\n\n  pedido: any = {};\n  entrega = [];\n\n  detalhes: any = [];\n  empresa: number;\n\n  detalhesRomaneio: any = [];\n  detalhesRomaneioEmpty: boolean = false;\n  detalhesRomaneioLoading: boolean = false;\n\n  currentPage = 1;\n  maxSize: number = 10;\n  totalItems: number;\n  itemsPerPage: number = 300;\n  pedidosPagination: any = [];\n\n  orderBy = 'dataPrev';\n  orderType = 'DESC';\n\n  // Subtitles (Ativo/Inativo)\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Entregado',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'No entregado',\n      color: 'red',\n    },\n  ];\n\n  situacoes: any = [];\n\n  filiais: Array<any> = [];\n\n  columns = {\n    nomeEmpresa: {\n      name: 'Empresa',\n      active: true,\n    },\n    romaneio: {\n      name: 'Lista',\n      active: true,\n    },\n    dataPrev: {\n      name: 'Fecha estimada de entrega',\n      active: true,\n    },\n    dataEntrega: {\n      name: 'Fecha de entrega',\n      active: false,\n    },\n    nomeCliente: {\n      name: 'Cliente',\n      active: true,\n    },\n    sequencia: {\n      name: 'Secuencia',\n      active: false,\n    },\n    pedido: {\n      name: 'Pedido',\n      active: true,\n    },\n    notaFiscal: {\n      name: 'Nota Fiscal',\n      active: true,\n    },\n    dataEmissao: {\n      name: 'Fecha de emisión',\n      active: false,\n    },\n    nomeSituacao: {\n      name: 'Situación',\n      active: true,\n    },\n  };\n\n  tipoOperacao = [];\n\n  constructor(\n    private localeService: BsLocaleService,\n    private router: Router,\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private pnotifyService: PNotifyService,\n    private formBuilder: FormBuilder,\n    private atividadesService: AtividadesService,\n    private service: ComercialControleEntregasService,\n    private dateService: DateService,\n    private titleService: TitleService,\n    private modalService: BsModalService,\n    private routerService: RouterService,\n    private pnotify: PNotifyService,\n    private filiaisService: LogisticaFiliaisService,\n    private desmembramentoService: LogisticaEntregaDesmembramentoService,\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.setFormFilter();\n    this.registrarAcesso();\n    this.getFiliais();\n    //this.getFiltros();\n    this.getSituacoes();\n    this.titleService.setTitle('Control de entrega');\n    this.getVendedores();\n    this.onActivatedRoute();\n    this.setBreadCrumb();\n    this.getTipoOperacao();\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb() {\n    const submoduloId = this.activatedRoute.snapshot.params?.idSubModulo;\n\n    this.breadCrumbTree = [\n      {\n        descricao: 'Logistica',\n      },\n      {\n        descricao: 'GESTIÓN DE ENTREGAS',\n        routerLink: `/logistica/entrega/${submoduloId}`,\n      },\n      {\n        descricao: 'Control de entrega',\n      },\n    ];\n  }\n\n  getFiltros() {\n    /* this.service\n      .getFiltros()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response[0].responseCode === 200) {\n            this.vendedores = response[0].result;\n\n            this.vendedores.unshift({\n              id: 0,\n              nome: 'EXIBIR TODOS',\n            });\n          }\n\n          this.onActivatedRoute();\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      ); */\n  }\n\n  getVendedores() {\n    this.service.getVendedores().subscribe((response) => {\n      if (response.status !== 200) {\n        return;\n      }\n\n      this.vendedores = response.body['data'];\n    });\n  }\n\n  getFiliais() {\n      this.loadingFiliais = true;\n      this.filiaisService.getFiliais({ status: '1' })\n        .pipe(\n          finalize(() => {\n            this.loadingFiliais = false;\n          })\n        )\n        .subscribe({\n          next: response => {\n            this.filiais = response.body['data'];\n          },\n          error: () => {\n            this.pnotify.error();\n          }\n        })\n  }\n\n  onActivatedRoute() {\n    this.activatedRoute.queryParams.subscribe((response) => {\n      let _response = this.routerService.getBase64UrlParams(response);\n\n      if (Object.keys(_response).length == 0) {\n        this.loaderNavbar = false;\n        return;\n      }\n\n      _response['TP_OPER'] = _response?.TP_OPER\n        ? _response?.TP_OPER?.split(',')\n        : [];\n\n      this.form.patchValue(_response);\n      this.getPedidos(this.getParams());\n\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else if(Array.isArray(_obj[prop]))\n          _params[prop] = _obj[prop].toString()\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    /* const vendedorSelecionado = this.vendedores.filter((vendedor) => vendedor?.id == _params[\"CD_VEND\"] )\n\n    _params['NM_VEND'] = '';\n\n    if(vendedorSelecionado.length == 1){\n      _params['NM_VEND'] = vendedorSelecionado[0]['nome'];\n    } */\n\n    return _params;\n  }\n\n  setFormFilter() {\n    this.form = this.formBuilder.group({\n      DT_INIC: [this.dateService.getFirstDayMonth(), [Validators.required]],\n      DT_FINA: [this.dateService.getLastDayMonth(), [Validators.required]],\n      NM_CLIE: [null],\n      NOTA_FISC: [null],\n      CD_PEDI: [null],\n      SG_PEDI: [null],\n      CD_ROMA: [null],\n      CD_VEND: [null],\n      NM_VEND: [null],\n      TP_OPER: [['DEMEMBRAMENTO', 'FACTURA']],\n      DS_CLIE: [null],\n      CD_FILI: [null],\n      ENTR_SG_STAT: [null],\n      TT_REGI_PAGI: [300],\n      ORDE_BY: ['dataPrev'],\n      ORDE_TYPE: ['DESC'],\n      PAGI: [1],\n      TIME: new Date().getDate(),\n    });\n\n    this.getMatriculaVendedorLogado();\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.get('ORDE_BY').setValue(this.orderBy);\n    this.form.get('ORDE_TYPE').setValue(this.orderType);\n\n    this.onFilter();\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  getPedidos(params) {\n    this.$serviceSubscription?.unsubscribe();\n\n    this.loaderNavbar = true;\n    this.pedidosLoaded = false;\n\n    this.$serviceSubscription = this.service\n      .getLista(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.pedidosLoaded = true;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status !== 200) {\n            this.pedidos = [];\n            this.pedidosEmpty = true;\n            return;\n          }\n\n          this.pedidos = response.body['data'];\n          this.totalItems = response.body['total'];\n          this.pedidosEmpty = false;\n        },\n        (error) => {\n          this.pedidos = [];\n          this.pedidosEmpty = true;\n          const message = error?.error?.message;\n          message\n            ? this.pnotifyService.error(message)\n            : this.pnotifyService.error();\n        }\n      );\n  }\n\n  getDetalhesEntrega(params, template) {\n    this.loaderNavbar = true;\n    this.imageLoading = true;\n\n    this.service\n      .getDetalhesPedido(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status !== 200) {\n            return;\n          }\n\n          this.entrega = response.body['data'];\n\n          if (!this.entrega['ENTR_COMP_FOTO']) {\n            setTimeout(() => {\n              this.imageLoading = false;\n            }, 200);\n          }\n\n          this.modalRef = this.modalService.show(template, {\n            animated: false,\n            ignoreBackdropClick: true,\n            class: 'modal-xxl',\n          });\n        },\n        (error) => {\n          const message = error?.error?.message;\n          message\n            ? this.pnotifyService.error(message)\n            : this.pnotifyService.error();\n        }\n      );\n  }\n\n  getDetalhesRomaneio(params) {\n    this.detalhesRomaneioLoading = true;\n    this.service\n      .getDetalhesRomaneio(params)\n      .pipe(\n        finalize(() => {\n          this.detalhesRomaneioLoading = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status !== 200) {\n            this.detalhesRomaneioEmpty = true;\n            return;\n          }\n          this.detalhesRomaneioEmpty = false;\n          this.detalhesRomaneio = response.body['data'];\n        },\n        (error) => {\n          this.detalhesRomaneioEmpty = false;\n          const message = error?.error?.message;\n          message\n            ? this.pnotifyService.error(message)\n            : this.pnotifyService.error();\n        }\n      );\n  }\n\n  onFilter() {\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.form.get('PAGI').setValue(1);\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  viewDetails(item: any, template: TemplateRef<any>) {\n    this.pedido = item;\n\n    const params = {\n      CD_ROMA: item?.CD_ROMA,\n      CD_PEDI: item?.CD_PEDI,\n      CD_FILI: item?.CD_FILI,\n      ID_LOGI_FUSI_PEDI: item?.ID_LOGI_FUSI_PEDI,\n    };\n\n    this.getDetalhesEntrega(params, template);\n    this.getDetalhesRomaneio(params);\n  }\n\n  classStatusBorder(item): string {\n    if (item?.ENTR_SG_STAT == 'ENTREGA_REALIZADA') {\n      return 'border-success';\n    }\n\n    return 'border-danger';\n  }\n\n  getSelectedStyle(item) {\n    if (this.pedido?.CD_PEDI == item?.CD_PEDI) {\n      return { 'font-weight': 600, color: 'blue' };\n    }\n\n    return {};\n  }\n\n  onResetForm() {\n    this.form.reset();\n  }\n\n  /* Paginação */\n  onPageChanged(event: PageChangedEvent): void {\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.form.get('PAGI').setValue(event.page);\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n  /* Paginação */\n\n  getSituacoes() {\n    this.service.getSituacoes().subscribe(\n      (response) => {\n        if (response.status === 200) {\n          this.situacoes = response.body['data'];\n        } else {\n          this.pnotifyService.notice('No se encontró ninguna situación.');\n        }\n      },\n      (error) => {\n        this.pnotifyService.error('Error al cargar situaciones.');\n      }\n    );\n  }\n\n  keepOriginalOrder = (a, b) => a.key;\n\n  getMatriculaVendedorLogado() {\n    /* const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.form.get('CD_VEND').setValue(currentUser?.info?.idVendedor); */\n  }\n\n  onImageLoad() {\n    setTimeout(() => {\n      this.imageLoading = false;\n    }, 200);\n  }\n\n  getTipoOperacao(params?) {\n\n    this.desmembramentoService\n      .getTipoOperacao(params)\n      .subscribe(\n        (response) => {\n          if(response.status !== 200){\n            return\n          }\n\n          this.tipoOperacao = response.body['data'];\n        },\n        (error) => {\n\n        }\n      )\n  }\n\n  removerDataConsulta(item: any){\n\n    const params = {'idEvento': item?.ID_EVEN};\n    item.loading = true;\n\n    this.service\n      .pacthEvento(params)\n      .pipe(\n        finalize(() => {\n          item.loading = false;\n        })\n      )\n      .subscribe({\n        next: (response: HttpResponse<any>) => {\n          if(response.status != 200){\n            this.pnotify.error();\n            return;\n          }\n          this.pnotify.success();\n        },\n        error: (error: any) => {\n          const message = error?.error?.message ?? '';\n          this.pnotify.error(message);\n        }\n      })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ComercialVendedoresService } from 'src/app/modules/comercial/services/vendedores.service';\nimport { ComercialTidSoftwareService } from 'src/app/modules/comercial/tid-software/tid-software.service';\n\n// Services\n/* import { ComercialService } from '../comercial.service';\nimport { ComercialVendedoresService } from '../services/vendedores.service';\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service'; */\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialControleEntregasService {\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private vendedoresService: ComercialVendedoresService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) { }\n\n  getFiltros() {\n    /* const vendedores = this.vendedoresService.getVendedores(); */\n    /* const empresas = this.tidSoftwareService.getEmpresas('entregas'); */\n\n    /* return forkJoin([vendedores, empresas]).pipe(take(1)); */\n  }\n\n  getLista(params: any) {\n\n    return this.http\n      .get(`${this.API}/comercial/controle-entregas/lista`, { params: params, observe: \"response\" })\n      .pipe(take(1));\n  }\n\n  getVendedores(params?){\n    return this.http\n      .get(`${this.API}/logistica/controle-entregas/vendedores`, { params: params, observe: \"response\" })\n      .pipe(take(1));\n  }\n\n  getDetalhesPedido(params: any) {\n    return this.http\n      .get(`${this.API}/comercial/controle-entregas/detalhes-pedido`, {\n        params: params,\n        observe: \"response\"\n      })\n      .pipe(take(1));\n  }\n\n  getDetalhesRomaneio(params: any) {\n    return this.http\n      .get(`${this.API}/comercial/controle-entregas/detalhes-romaneio`, {\n        params: params,\n        observe: \"response\"\n      })\n      .pipe(take(1));\n  }\n\n  getSituacoes(){\n    return this.http.get(`${this.API}/comercial/controle-entregas/situacoes`, {\n      observe: \"response\"\n    }).pipe(take(1));\n  }\n\n  pacthEvento(params){\n    return this.http.patch(`${this.API}/logistica/controle-entregas/eventos`, params, {\n      observe: 'response'\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../comercial.service';\nimport { ComercialVendedoresService } from '../services/vendedores.service';\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialControleEntregasService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/controle-entregas`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private vendedoresService: ComercialVendedoresService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) { }\n\n  getFiltros() {\n    const vendedores = this.vendedoresService.getVendedores();\n    const empresas = this.tidSoftwareService.getEmpresas('entregas');\n\n    return forkJoin([vendedores, empresas]).pipe(take(1));\n  }\n\n  getLista(params: any) {\n\n    return this.http\n      .get(`${this.API}/lista`, { params: params, observe: \"response\" })\n      .pipe(take(1));\n  }\n\n\n  getDetalhesPedido(params: any) {\n    return this.http\n      .get(`${this.API}/detalhes-pedido`, {\n        params: params,\n        observe: \"response\"\n      })\n      .pipe(take(1));\n  }\n\n  getDetalhesRomaneio(params: any) {\n    return this.http\n      .get(`${this.API}/detalhes-romaneio`, {\n        params: params,\n        observe: \"response\"\n      })\n      .pipe(take(1));\n  }\n\n  getSituacoes(){\n    return this.http.get(`${this.API}/situacoes`, {\n      observe: \"response\"\n    }).pipe(take(1));\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Controle de entregas\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onResetForm()\\\">\\n    Limpiar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <advanced-filter #scrollToFilter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"dataInicial\\\">Comienzo</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataInicial\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"DT_INIC\\\"\\n            [ngClass]=\\\"onFieldError('DT_INIC') + ' ' + onFieldRequired('DT_INIC')\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"dataFinal\\\">Final</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataFinal\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"DT_FINA\\\"\\n            [ngClass]=\\\"onFieldError('DT_FINA') + ' ' + onFieldRequired('DT_FINA')\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"cliente\\\">Cliente</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"cliente\\\"\\n            formControlName=\\\"DS_CLIE\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <!-- <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"operacao\\\">Operación</label>\\n          <select\\n            name=\\\"operacao\\\"\\n            id=\\\"operacao\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"TP_OPER\\\"\\n          >\\n            <option value=\\\"ENTREGA_CLIENTE\\\">Entrega Cliente</option>\\n            <option value=\\\"TRANSFERENCIA\\\">Transferência</option>\\n          </select>\\n        </div> -->\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"notaFiscal\\\">Factura</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"notaFiscal\\\"\\n            formControlName=\\\"NOTA_FISC\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"pedido\\\">Orden de venta</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"pedido\\\"\\n            formControlName=\\\"CD_PEDI\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <!-- <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"sigla\\\">Sigla</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"sigla\\\"\\n            formControlName=\\\"SG_PEDI\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div> -->\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"romaneio\\\">Ruta</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"romaneio\\\"\\n            formControlName=\\\"CD_ROMA\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\n          <label for=\\\"situacao\\\">Situación\\n            <i class=\\\"far fa-question-circle ml-1\\\" [tooltip]=\\\"tooltipAutoScrollTemplate\\\"></i>\\n          </label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"situacoes\\\"\\n            formControlName=\\\"ENTR_SG_STAT\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"situacao\\\"\\n            bindLabel=\\\"ENTR_DS_STAT\\\"\\n            bindValue=\\\"ENTR_SG_STAT\\\"\\n            >\\n          </ng-select>\\n          <ng-template #tooltipAutoScrollTemplate>\\n            <p class=\\\"mb-0\\\"><b>ESPERANDO COMPOSICIÓN: Esperando composición de carga para la región del cliente.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>VEHÍCULO EN ESPERA: Carga formada, pendiente de definición del vehículo.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ESPERANDO SALIDA: Vehículo definido, esperando carga y salida para entrega.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>A LA IZQUIERDA PARA ENTREGA: Se inició el viaje.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>RETIRO: Retiros de Hecho.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ENTREGA RETARDADA: Vuelva a reprogramación.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ENTREGA DEVUELTA: Devolución por cancelación.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ENTREGA REALIZADA: Entrega completada.</b></p>\\n          </ng-template>\\n        </div>\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\n          <label for=\\\"vendedores\\\">Vendedor</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"vendedores\\\"\\n            formControlName=\\\"NM_VEND\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"vendedores\\\"\\n            bindLabel=\\\"NM_VEND\\\"\\n            bindValue=\\\"NM_VEND\\\"\\n            >\\n          </ng-select>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3 mb-2\\\">\\n          <label for=\\\"empresa\\\">Empresa</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [loading]=\\\"loadingFiliais\\\"\\n            [items]=\\\"filiais\\\"\\n            formControlName=\\\"CD_FILI\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"empresa\\\"\\n            bindLabel=\\\"nome\\\"\\n            bindValue=\\\"idFilial\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-3 pl-0\\\">\\n          <label for=\\\"tipoOperacao\\\">Tipo de operación</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"tipoOperacao\\\"\\n            [multiple]=\\\"true\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"tipoOperacao\\\"\\n            bindLabel=\\\"TP_OPER\\\"\\n            bindValue=\\\"TP_OPER\\\"\\n            id=\\\"tipoOperacao\\\"\\n            formControlName=\\\"TP_OPER\\\"\\n            (change)=\\\"onFilter()\\\"\\n            placeholder=\\\"SELECCIONE...\\\"\\n          >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\n          <label for=\\\"registros\\\">Registros</label>\\n          <select\\n            class=\\\"form-control\\\"\\n            id=\\\"registros\\\"\\n            formControlName=\\\"TT_REGI_PAGI\\\"\\n            (change)=\\\"onFilter()\\\"\\n            >\\n            <option>25</option>\\n            <option>50</option>\\n            <option>100</option>\\n            <option>200</option>\\n            <option>300</option>\\n          </select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\" *ngIf=\\\"!pedidosEmpty\\\">\\n      <ul\\n        class=\\\"d-flex justify-content-between p-0\\\"\\n      >\\n        <li\\n          *ngFor=\\\"let column of columns | keyvalue : keepOriginalOrder; let index = index\\\"\\n          style=\\\"list-style: none;\\\"\\n        >\\n          <div class=\\\"custom-control custom-checkbox\\\">\\n            <input\\n              type=\\\"checkbox\\\"\\n              class=\\\"custom-control-input\\\"\\n              [id]=\\\"'column'+index\\\"\\n              [name]=\\\"'column'+index\\\"\\n              [checked]=\\\"column.value.active\\\"\\n              [(ngModel)]=\\\"column.value.active\\\"\\n              >\\n            <label\\n              class=\\\"custom-control-label\\\"\\n              [for]=\\\"'column'+index\\\"\\n            >\\n              {{ column.value.name }}\\n            </label>\\n          </div>\\n        </li>\\n      </ul>\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"11%\\\"\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Empresa\\\"\\n                [active]=\\\"orderBy == 'nomeEmpresa'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeEmpresa')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.romaneio.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Ruta\\\"\\n                [active]=\\\"orderBy == 'romaneio'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('romaneio')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"10%\\\"\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Fecha Entr Estimada\\\"\\n                [active]=\\\"orderBy == 'dataPrev'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('dataPrev')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"10%\\\"\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Fecha de Entrega\\\"\\n                [active]=\\\"orderBy == 'dataEntrega'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('dataEntrega')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-truncate hover\\\"\\n              width=\\\"28%\\\"\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Cliente\\\"\\n                [active]=\\\"orderBy == 'nomeCliente'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeCliente')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate\\\"\\n              width=\\\"5%\\\"\\n              *ngIf=\\\"columns.sequencia.active\\\"\\n            >Seq.</th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.pedido.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Orden de vienda\\\"\\n                [active]=\\\"orderBy == 'pedido'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('pedido')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Factura\\\"\\n                [active]=\\\"orderBy == 'notaFiscal'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('notaFiscal')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Fecha de Emisión\\\"\\n                [active]=\\\"orderBy == 'dataEmissao'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('dataEmissao')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate\\\"\\n              width=\\\"20%\\\"\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\n            >\\n              Situación\\n            </th>\\n            <th width=\\\"3%\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of pedidos\\\">\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              ({{ item.CD_FILI }})&nbsp;{{ item.NM_FILI }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.romaneio.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.CD_ROMA }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.ROMA_DT_PREV_SAID | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.ENTR_DT_ENTR | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-truncate hover\\\"\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              ({{ item?.CD_CLIE_ORIG }}) {{ item?.NM_CLIE }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.sequencia.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item?.SEQU_ENTR }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.pedido.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.CD_PEDI }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.NOTA_FISC }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.DT_NOTA_FISC | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.ENTR_DS_STAT }}\\n            </td>\\n            <td>\\n              <span\\n                [tooltip]=\\\"!item.ENTR_DT_ENTR ? 'No entregado' : (\\n                  !item.ENTR_DT_CONS ? 'No integrado' : ''\\n                )\\\"\\n                container=\\\"body\\\"\\n                placement=\\\"left\\\"\\n              >\\n                <button\\n                  class=\\\"btn-icon-sm\\\"\\n                  *ngIf=\\\"!item.loading\\\"\\n                  (click)=\\\"removerDataConsulta(item)\\\"\\n                  [disabled]=\\\"!item.ENTR_DT_ENTR || !item.ENTR_DT_CONS\\\"\\n                >\\n                  <i\\n                    class=\\\"fas fa-paper-plane\\\"\\n                    [ngClass]=\\\"{\\n                      'text-seconday': !item.ENTR_DT_ENTR,\\n                      'text-warning': !item.ENTR_DT_CONS && item.ENTR_DT_ENTR,\\n                      'text-success': item.ENTR_DT_CONS && item.ENTR_DT_ENTR\\n                    }\\\"\\n                  ></i>\\n                </button>\\n                <div\\n                  class=\\\"spinner-border spinner-border-sm\\\"\\n                  role=\\\"status\\\"\\n                  *ngIf=\\\"item.loading\\\"\\n                >\\n                  <span class=\\\"sr-only\\\">Loading...</span>\\n                </div>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div *ngIf=\\\"!pedidosEmpty\\\">\\n        Demostración {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n        [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <empty-result message=\\\"No se encontró información\\\" class=\\\"mx-auto mt-5\\\" *ngIf=\\\"pedidosLoaded && pedidosEmpty\\\"></empty-result>\\n  </div>\\n</app-body>\\n<ng-template #modalDetalhes>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Detalles</h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <tabset>\\n      <tab heading=\\\"Entrega\\\" class=\\\"border-right border-left border-bottom\\\">\\n        <div class=\\\"p-3\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label>Cliente</label>\\n              <div>({{ pedido?.CD_CLIE }}) {{ pedido?.NM_FANT }}</div>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label>Conductor</label>\\n              <div *ngIf=\\\"pedido?.NM_MOTO\\\">{{ pedido?.NM_MOTO }}</div>\\n              <div *ngIf=\\\"!pedido?.NM_MOTO\\\">NO INFORMADO</div>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label>Placa de matrícula del vehículo</label>\\n              <div *ngIf=\\\"pedido?.PLAC\\\">{{ pedido?.PLAC }}</div>\\n              <div *ngIf=\\\"!pedido?.PLAC\\\">NO INFORMADO</div>\\n            </div>\\n          </div>\\n          <div id=\\\"scrollDetalhes\\\" class=\\\"mt-2 d-flex\\\">\\n            <div class=\\\"col-4\\\">\\n              <div *ngFor=\\\"let detalhe of entrega; let last = last; let first = first\\\" [ngClass]=\\\"fist ? 'mt-4' : ''\\\">\\n                <div class=\\\"d-flex w-100\\\" [tooltip]=\\\"detalhe?.desricao\\\" placement=\\\"left\\\">\\n                  <div class=\\\"rounded-circle text-white icon-40\\\" [ngClass]=\\\"detalhe?.check == 0 ? 'bg-secondary' : 'bg-primary'\\\">\\n                    <i [class]=\\\"detalhe?.icone\\\"></i>\\n                  </div>\\n                  <strong class=\\\"my-auto ml-3 text-truncate\\\" [ngClass]=\\\"detalhe?.check == 1 ? 'text-primary' : ''\\\" style=\\\"width: calc(100% - 40px)\\\">\\n                    {{ detalhe?.descricao }}\\n                  </strong>\\n                </div>\\n                <div class=\\\"my-2\\\" *ngIf=\\\"!last\\\">\\n                  <div class=\\\"ml-1\\\">\\n                    <div class=\\\"border-left border-secondary ml-3 p-2\\\">\\n                      <div *ngIf=\\\"detalhe?.check === 1\\\"></div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-8 p-0 form-group\\\">\\n              <label>Fotografía</label>\\n              <div *ngIf=\\\"imageLoading\\\">Cargando...</div>\\n              <div *ngIf=\\\"pedido?.ENTR_COMP_FOTO\\\">\\n                <img [hidden]=\\\"imageLoading\\\" [src]=\\\"pedido?.ENTR_COMP_FOTO\\\" class=\\\"border rounded shadow-sm w-100\\\" (load)=\\\"onImageLoad()\\\">\\n              </div>\\n              <empty-result message=\\\"No se encontró ninguna imagen\\\" *ngIf=\\\"!pedido?.ENTR_COMP_FOTO && !imageLoading\\\"></empty-result>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Ruta\\\" class=\\\"border-right border-left border-bottom\\\">\\n        <div class=\\\"px-3 pt-3\\\" *ngIf=\\\"!detalhesRomaneioLoading && !detalhesRomaneioEmpty\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label>Ruta</label>\\n              <div>{{ pedido?.CD_ROMA }}</div>\\n            </div>\\n            <!-- <div class=\\\"form-group col-lg-3\\\">\\n              <label>Região da entrega</label>\\n              <div>{{ pedido }}</div>\\n            </div> -->\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <subtitles\\n                [data]=\\\"subtitles\\\"\\n                [show]=\\\"!noResult\\\">\\n              </subtitles>\\n            </div>\\n          </div>\\n          <custom-table [config]=\\\"tableConfig\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th>Cliente</th>\\n                <th class=\\\"text-center\\\">Seq.</th>\\n                <th class=\\\"text-center\\\">Factura</th>\\n                <th class=\\\"text-center\\\">Orden de vienda</th>\\n                <th class=\\\"text-center\\\">Código</th>\\n                <th>Producto</th>\\n                <th class=\\\"text-center\\\">Peso</th>\\n                <th>Dirección</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let item of detalhesRomaneio\\\" [ngStyle]=\\\"getSelectedStyle(item)\\\">\\n                <td\\n                  class=\\\"hover\\\"\\n                  [ngClass]=\\\"classStatusBorder(item)\\\">\\n                  ({{ item.CD_CLIE }}) {{ item.NM_FANT }}\\n                </td>\\n                <td class=\\\"text-center\\\">{{ item.NR_SQNC }}</td>\\n                <td class=\\\"text-center\\\">{{ item.NOTA_FISC }}</td>\\n                <td class=\\\"text-center\\\">{{ item.CD_PEDI }}</td>\\n                <td class=\\\"text-center\\\">{{ item.CD_PROD }}</td>\\n                <td>{{ item.NM_PROD }}</td>\\n                <td class=\\\"text-center\\\">{{ item.TT_PROD_PESO  | number: '0.3-3' }}</td>\\n                <td>{{ item.DS_ENDE }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </div>\\n        <empty-result message=\\\"No se encontró información\\\" *ngIf=\\\"detalhesRomaneioEmpty\\\"></empty-result>\\n        <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\" *ngIf=\\\"!detalhesRomaneioLoading && detalhesRomaneioEmpty\\\">\\n          <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n      </tab>\\n    </tabset>\\n  </div>\\n</ng-template>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","export default \"::ng-deep comercial-controle-entregas #scrollDetalhes {\\n  height: 340px;\\n  overflow: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmVnYS9jb250cm9sZS1lbnRyZWdhcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFSTtFQUNFLGFBQUE7RUFDQSxjQUFBO0FBRE4iLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2lzdGljYS9lbnRyZWdhL2NvbnRyb2xlLWVudHJlZ2FzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIHtcbiAgY29tZXJjaWFsLWNvbnRyb2xlLWVudHJlZ2FzIHtcbiAgICAjc2Nyb2xsRGV0YWxoZXMge1xuICAgICAgaGVpZ2h0OiAzNDBweDtcbiAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIH1cbiAgfVxufVxuIl19 */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialControleEntregasRoutingModule } from './controle-entregas-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { DirectivesModule } from 'src/app/shared/directives/directives.module';\n\n// Components\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\n\n@NgModule({\n  declarations: [ComercialControleEntregasListaComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialControleEntregasRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    DirectivesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialControleEntregasModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Controle de entregas\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onResetForm()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <advanced-filter #scrollToFilter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"dataInicial\\\">Data inicial</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataInicial\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"DT_INIC\\\"\\n            [ngClass]=\\\"onFieldError('DT_INIC') + ' ' + onFieldRequired('DT_INIC')\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"dataFinal\\\">Data final</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataFinal\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"DT_FINA\\\"\\n            [ngClass]=\\\"onFieldError('DT_FINA') + ' ' + onFieldRequired('DT_FINA')\\\">\\n        </div>\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"cliente\\\">Cliente</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"cliente\\\"\\n            formControlName=\\\"DS_CLIE\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"notaFiscal\\\">Nota fiscal</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"notaFiscal\\\"\\n            formControlName=\\\"NOTA_FISC\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"pedido\\\">Pedido</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"pedido\\\"\\n            formControlName=\\\"CD_PEDI\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"sigla\\\">Sigla</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"sigla\\\"\\n            formControlName=\\\"SG_PEDI\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"romaneio\\\">Romaneio</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"romaneio\\\"\\n            formControlName=\\\"CD_ROMA\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\n          <label for=\\\"situacao\\\">Situação\\n            <i class=\\\"far fa-question-circle ml-1\\\" [tooltip]=\\\"tooltipAutoScrollTemplate\\\"></i>\\n          </label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"situacoes\\\"\\n            formControlName=\\\"ENTR_SG_STAT\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"situacao\\\"\\n            bindLabel=\\\"ENTR_DS_STAT\\\"\\n            bindValue=\\\"ENTR_SG_STAT\\\"\\n            (change)=\\\"onFilter()\\\"\\n            >\\n          </ng-select>\\n          <ng-template #tooltipAutoScrollTemplate>\\n            <p class=\\\"mb-0\\\"><b>AGUARDANDO COMPOSIÇÃO: Aguardando composição de carga para região do cliente.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>AGUARDANDO VEíCULO: Carga formada, aguardando definição do veículo.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>AGUARDANDO SAÍDA: Veículo definido, aguardando carregamento e saída para entrega.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>SAIU PARA ENTREGA: Viagem Iniciada.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>RETIRADA: Retira Realizada.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ENTREGA ADIADA: Retorno para reprogramação.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ENTREGA DEVOLVIDA: Retorno para cancelamento.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ENTREGA REALIZADA: Entrega realizada.</b></p>\\n          </ng-template>\\n        </div>\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\n          <label for=\\\"vendedores\\\">Vendedor</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"vendedores\\\"\\n            formControlName=\\\"CD_VEND\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"vendedores\\\"\\n            bindLabel=\\\"nome\\\"\\n            bindValue=\\\"id\\\"\\n            (change)=\\\"onFilter()\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col mb-2\\\">\\n          <label for=\\\"empresa\\\">Empresa</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"filiais\\\"\\n            formControlName=\\\"CD_FILI\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"empresa\\\"\\n            bindLabel=\\\"NM_FILI\\\"\\n            bindValue=\\\"CD_FILI\\\"\\n            (change)=\\\"onFilter()\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2 mb-2\\\">\\n          <label for=\\\"registros\\\">Registros</label>\\n          <select\\n            class=\\\"form-control\\\"\\n            id=\\\"registros\\\"\\n            formControlName=\\\"TT_REGI_PAGI\\\"\\n            (change)=\\\"onFilter()\\\"\\n            >\\n            <option>25</option>\\n            <option>50</option>\\n            <option>100</option>\\n            <option>200</option>\\n            <option>300</option>\\n          </select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\" *ngIf=\\\"!pedidosEmpty\\\">\\n      <ul\\n        class=\\\"d-flex justify-content-between p-0\\\"\\n      >\\n        <li\\n          *ngFor=\\\"let column of columns | keyvalue : keepOriginalOrder; let index = index\\\"\\n          style=\\\"list-style: none;\\\"\\n        >\\n          <div class=\\\"custom-control custom-checkbox\\\">\\n            <input\\n              type=\\\"checkbox\\\"\\n              class=\\\"custom-control-input\\\"\\n              [id]=\\\"'column'+index\\\"\\n              [name]=\\\"'column'+index\\\"\\n              [checked]=\\\"column.value.active\\\"\\n              [(ngModel)]=\\\"column.value.active\\\"\\n              >\\n            <label\\n              class=\\\"custom-control-label\\\"\\n              [for]=\\\"'column'+index\\\"\\n            >\\n              {{ column.value.name }}\\n            </label>\\n          </div>\\n        </li>\\n      </ul>\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"11%\\\"\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Empresa\\\"\\n                [active]=\\\"orderBy == 'nomeEmpresa'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeEmpresa')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.romaneio.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Romaneio\\\"\\n                [active]=\\\"orderBy == 'romaneio'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('romaneio')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"10%\\\"\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Data Prev Entrega\\\"\\n                [active]=\\\"orderBy == 'dataPrev'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('dataPrev')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"10%\\\"\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Data de Entrega\\\"\\n                [active]=\\\"orderBy == 'dataEntrega'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('dataEntrega')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-truncate hover\\\"\\n              width=\\\"28%\\\"\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Cliente\\\"\\n                [active]=\\\"orderBy == 'nomeCliente'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeCliente')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate\\\"\\n              width=\\\"5%\\\"\\n              *ngIf=\\\"columns.sequencia.active\\\"\\n            >Seq.</th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.pedido.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Pedido\\\"\\n                [active]=\\\"orderBy == 'pedido'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('pedido')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Nota fiscal\\\"\\n                [active]=\\\"orderBy == 'notaFiscal'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('notaFiscal')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Data de Emissão\\\"\\n                [active]=\\\"orderBy == 'dataEmissao'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('dataEmissao')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate\\\"\\n              width=\\\"23%\\\"\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\n            >\\n              Situação</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of pedidos\\\" (click)=\\\"viewDetails(item, modalDetalhes)\\\">\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\n            >\\n              ({{ item.CD_FILI }})&nbsp;{{ item.NM_FILI }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.romaneio.active\\\"\\n            >\\n              {{ item.CD_ROMA }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\n            >\\n              {{ item.DT_SAID_PREV | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\n            >\\n              {{ item.ENTR_DT_ENTR | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-truncate hover\\\"\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\n              isEllipsed\\n            >\\n              ({{ item?.CD_CLIE }}) {{ item?.NM_CLIE }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.sequencia.active\\\"\\n            >\\n              {{ item?.ENTR_NR_SQNC }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.pedido.active\\\"\\n            >\\n              {{ item.CD_PEDI }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\n            >\\n              {{ item.NR_NOTA_FISC }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\n            >\\n              {{ item.DT_NOTA_FISC | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\n            >\\n              {{ item.ENTR_DS_STAT }}\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div *ngIf=\\\"!pedidosEmpty\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n        [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"mx-auto mt-5\\\" *ngIf=\\\"pedidosLoaded && pedidosEmpty\\\"></empty-result>\\n  </div>\\n</app-body>\\n<ng-template #modalDetalhes>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Detalhes</h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <tabset>\\n      <tab heading=\\\"Entrega\\\" class=\\\"border-right border-left border-bottom\\\">\\n        <div class=\\\"p-3\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label>Cliente</label>\\n              <div>({{ pedido?.CD_CLIE }}) {{ pedido?.NM_FANT }}</div>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label>Motorista</label>\\n              <div *ngIf=\\\"pedido?.NM_MOTO\\\">{{ pedido?.NM_MOTO }}</div>\\n              <div *ngIf=\\\"!pedido?.NM_MOTO\\\">NÃO INFORMADO</div>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label>Placa do veículo</label>\\n              <div *ngIf=\\\"pedido?.PLAC\\\">{{ pedido?.PLAC }}</div>\\n              <div *ngIf=\\\"!pedido?.PLAC\\\">NÃO INFORMADO</div>\\n            </div>\\n          </div>\\n          <div id=\\\"scrollDetalhes\\\" class=\\\"mt-2 d-flex\\\">\\n            <div class=\\\"col-4\\\">\\n              <div *ngFor=\\\"let detalhe of entrega; let last = last; let first = first\\\" [ngClass]=\\\"fist ? 'mt-4' : ''\\\">\\n                <div class=\\\"d-flex w-100\\\" [tooltip]=\\\"detalhe?.desricao\\\" placement=\\\"left\\\">\\n                  <div class=\\\"rounded-circle text-white icon-40\\\" [ngClass]=\\\"detalhe?.check == 0 ? 'bg-secondary' : 'bg-primary'\\\">\\n                    <i [class]=\\\"detalhe?.icone\\\"></i>\\n                  </div>\\n                  <strong class=\\\"my-auto ml-3 text-truncate\\\" [ngClass]=\\\"detalhe?.check == 1 ? 'text-primary' : ''\\\" style=\\\"width: calc(100% - 40px)\\\">\\n                    {{ detalhe?.descricao }}\\n                  </strong>\\n                </div>\\n                <div class=\\\"my-2\\\" *ngIf=\\\"!last\\\">\\n                  <div class=\\\"ml-1\\\">\\n                    <div class=\\\"border-left border-secondary ml-3 p-2\\\">\\n                      <div *ngIf=\\\"detalhe?.check === 1\\\"></div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-8 p-0 form-group\\\">\\n              <label>FOTO DO CANHOTO</label>\\n              <div *ngIf=\\\"imageLoading\\\">Carregando foto do canhoto...</div>\\n              <div *ngIf=\\\"pedido?.ENTR_COMP_FOTO\\\">\\n                <img [hidden]=\\\"imageLoading\\\" [src]=\\\"pedido?.ENTR_COMP_FOTO\\\" class=\\\"border rounded shadow-sm w-100\\\" (load)=\\\"onImageLoad()\\\">\\n              </div>\\n              <empty-result message=\\\"Nehuma imagem encontrada\\\" *ngIf=\\\"!pedido?.ENTR_COMP_FOTO && !imageLoading\\\"></empty-result>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Romaneio\\\" class=\\\"border-right border-left border-bottom\\\">\\n        <div class=\\\"px-3 pt-3\\\" *ngIf=\\\"!detalhesRomaneioLoading && !detalhesRomaneioEmpty\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label>Romaneio</label>\\n              <div>{{ pedido?.CD_ROMA }}</div>\\n            </div>\\n            <!-- <div class=\\\"form-group col-lg-3\\\">\\n              <label>Região da entrega</label>\\n              <div>{{ pedido }}</div>\\n            </div> -->\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <subtitles\\n                [data]=\\\"subtitles\\\"\\n                [show]=\\\"!noResult\\\">\\n              </subtitles>\\n            </div>\\n          </div>\\n          <custom-table [config]=\\\"tableConfig\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th>Cliente</th>\\n                <th class=\\\"text-center\\\">Seq.</th>\\n                <th class=\\\"text-center\\\">Nota fiscal</th>\\n                <th class=\\\"text-center\\\">Pedido</th>\\n                <th class=\\\"text-center\\\">Código</th>\\n                <th>Material</th>\\n                <th class=\\\"text-center\\\">Peso</th>\\n                <th>Endereço</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let item of detalhesRomaneio\\\" [ngStyle]=\\\"getSelectedStyle(item)\\\">\\n                <td\\n                  class=\\\"hover\\\"\\n                  [ngClass]=\\\"classStatusBorder(item)\\\">\\n                  ({{ item.CD_CLIE }}) {{ item.NM_FANT }}\\n                </td>\\n                <td class=\\\"text-center\\\">{{ item.NR_SQNC }}</td>\\n                <td class=\\\"text-center\\\">{{ item.NOTA_FISC }}</td>\\n                <td class=\\\"text-center\\\">{{ item.CD_PEDI }}</td>\\n                <td class=\\\"text-center\\\">{{ item.CD_PROD }}</td>\\n                <td>{{ item.NM_PROD }}</td>\\n                <td class=\\\"text-center\\\">{{ item.TT_PROD_PESO  | number: '0.3-3' }}</td>\\n                <td>{{ item.DS_ENDE }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </div>\\n        <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"detalhesRomaneioEmpty\\\"></empty-result>\\n        <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\" *ngIf=\\\"!detalhesRomaneioLoading && detalhesRomaneioEmpty\\\">\\n          <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n      </tab>\\n    </tabset>\\n  </div>\\n</ng-template>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\n\nconst routes: Routes = [\n  { path: '', component: ComercialControleEntregasListaComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialControleEntregasRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\n\nconst routes: Routes = [\n  { path: '', component: ComercialControleEntregasListaComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialControleEntregasRoutingModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Directives\nimport { IsEllipsedDirective } from './is-ellipsed.directive';\n\n@NgModule({\n  declarations: [IsEllipsedDirective],\n  imports: [CommonModule],\n  exports: [IsEllipsedDirective]\n})\nexport class DirectivesModule {\n  static forRoot(): ModuleWithProviders<DirectivesModule> {\n    return {\n        ngModule: DirectivesModule\n    };\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"],"sourceRoot":"webpack:///"}