{"version":3,"sources":["./src/app/shared/directives/is-ellipsed.directive.ts","./src/app/modules/comercial/controle-entregas/controle-entregas.module.ts","./src/app/modules/comercial/services/vendedores.service.ts","./src/app/modules/comercial/controle-entregas/lista/lista.component.scss","./src/app/modules/comercial/controle-entregas/lista/lista.component.ts","./src/app/modules/logistica/entrega/controle-entregas/lista/lista.component.ts","./src/app/modules/logistica/entrega/controle-entregas/controle-entregas.service.ts","./src/app/shared/services/core/date.service.ts","./src/app/modules/comercial/controle-entregas/controle-entregas.service.ts","./src/app/modules/logistica/entrega/controle-entregas/lista/lista.component.html","./src/app/modules/comercial/comercial.service.ts","./src/app/modules/logistica/entrega/controle-entregas/lista/lista.component.scss","./src/app/modules/logistica/entrega/controle-entregas/controle-entregas.module.ts","./src/app/modules/comercial/controle-entregas/lista/lista.component.html","./src/app/modules/logistica/entrega/controle-entregas/controle-entregas-routing.module.ts","./src/app/modules/comercial/controle-entregas/controle-entregas-routing.module.ts","./src/app/shared/directives/directives.module.ts","./src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAqE;IAKxD,mBAAmB,SAAnB,mBAAmB;IAC9B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE9C,eAAe;QACb,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;YAC9C,IAAI,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,EAAE;gBAC7C,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC;aACnC;QACH,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;CACF;;YAhBkC,wDAAU;;AAKhC,mBAAmB;IAH/B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;KACzB,CAAC;mFAEgC,wDAAU;GAD/B,mBAAmB,CAW/B;AAX+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLS;AACM;AACmB;AAElE,gBAAgB;AACsC;AACJ;AACU;AACZ;AACc;AAE9D,YAAY;AAC0C;AAEtD,oBAAoB;AACmC;AAEvD,UAAU;AACoE;AAE9E,UAAU;AACkF;AACxB;AACQ;AACG;AAE/E,aAAa;AACqE;IAsBrE,+BAA+B,SAA/B,+BAA+B;CAAG;AAAlC,+BAA+B;IApB3C,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,+FAAuC,CAAC;QACvD,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,mEAAa,CAAC,OAAO,EAAE;YACvB,+DAAW,CAAC,OAAO,EAAE;YACrB,yEAAgB,CAAC,OAAO,EAAE;YAC1B,6DAAU,CAAC,OAAO,EAAE;YACpB,2EAAkB,CAAC,OAAO,EAAE;YAC5B,mEAAc;YACd,qEAAkB;YAClB,yGAAsC;YACtC,kFAAY;YACZ,0FAAe;YACf,6FAAgB;SACjB;QACD,SAAS,EAAE,CAAC,4FAAc,CAAC;KAC5B,CAAC;GACW,+BAA+B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;ACjDD;AACO;AAEL;IAUhC,0BAA0B,SAA1B,0BAA0B;IAKrC,YAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJrB,QAAG,GAAG,8CAA8C,CAAC;QACrD,kBAAa,GAAG,+CAA+C,CAAC;IAGvC,CAAC;IAE3C,mBAAmB;QACjB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,oBAAoB,CAAC;aACpC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,qBAAqB,CAAC,EAAU;QAC9B,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,sBAAsB,EAAE,EAAE,CAAC;IAC/C,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,qCAAqC,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3G,CAAC;IAED,mBAAmB,CAAC,MAAO;QACzB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,oBAAoB,EAClC;YACE,MAAM,EAAE,MAAM;SACf,CAAC;aACH,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,6BAA6B,CAAC,MAAO;QACnC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,+BAA+B,EAC7C;YACE,MAAM,EAAE,MAAM;SACf,CAAC;aACH,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,wBAAwB,CACtB,UAAkB;QAElB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,4BAA4B,UAAU,EAAE,CAAC;aACxD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,qBAAqB,CAAC;aACrC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IACD,kBAAkB,CAAC,MAAM;QACzB,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,oBAAoB,EAClC;YACE,MAAM,EAAE,MAAM;SACf,CAAC;aACH,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,SAAS;QAEP,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,CAAC;aACzB,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;CACF;;YApFQ,+DAAU;;AAYN,0BAA0B;IAHtC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAM4B,+DAAU;GAL3B,0BAA0B,CAwEtC;AAxEsC;;;;;;;;;;;;;ACbvC;AAAe,uHAAwD,kBAAkB,mBAAmB,GAAG,6CAA6C,+hBAA+hB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOpqB;AACkC;AACd;AAMnB;AACkB;AAKqC;AACd;AACZ;AACH;AAElD,2EAAY,CAAC,OAAO,EAAE,gEAAU,CAAC,CAAC;AAElC,WAAW;AACmE;AACE;AACQ;AAChB;AACE;AAKE;AAEc;IAa7E,uCAAuC,SAAvC,uCAAuC;IAuHlD,YACU,aAA8B,EAC9B,MAAc,EACd,QAAkB,EAClB,cAA8B,EAC9B,cAA8B,EAC9B,WAAwB,EACxB,iBAAoC,EACpC,uBAAyD,EACzD,WAAwB,EACxB,YAA0B,EAC1B,YAA4B,EAC5B,aAA4B,EAC5B,aAAiC;QAZjC,kBAAa,GAAb,aAAa,CAAiB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAClB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,4BAAuB,GAAvB,uBAAuB,CAAkC;QACzD,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAoB;QAhI3C,iBAAY,GAAG,KAAK,CAAC;QACrB,qBAAgB,GAAG,KAAK,CAAC;QACzB,gBAAW,GAAG,IAAI,CAAC;QAEnB,mBAAc,GAAsB;YAClC;gBACE,SAAS,EAAE,MAAM;gBACjB,UAAU,EAAE,iBAAiB;aAC9B;YACD;gBACE,SAAS,EAAE,sBAAsB;aAClC;SACF,CAAC;QAIF,gBAAW,GAA+B;YACxC,YAAY,EAAE,IAAI;YAClB,cAAc,EAAE,IAAI;YACpB,OAAO,EAAE,IAAI;SACd,CAAC;QAKF,iBAAY,GAAG,KAAK,CAAC;QAErB,uBAAkB,GAAG,IAAI,CAAC;QAE1B,eAAU,GAAQ,EAAE,CAAC;QAErB,YAAO,GAAQ,EAAE,CAAC;QAClB,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,IAAI,CAAC;QAEpB,WAAM,GAAQ,EAAE,CAAC;QACjB,YAAO,GAAG,EAAE,CAAC;QAEb,aAAQ,GAAQ,EAAE,CAAC;QAGnB,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,0BAAqB,GAAY,KAAK,CAAC;QACvC,4BAAuB,GAAY,KAAK,CAAC;QAEzC,gBAAW,GAAG,CAAC,CAAC;QAChB,YAAO,GAAW,EAAE,CAAC;QAErB,iBAAY,GAAW,GAAG,CAAC;QAC3B,sBAAiB,GAAQ,EAAE,CAAC;QAE5B,YAAO,GAAG,UAAU,CAAC;QACrB,cAAS,GAAG,MAAM,CAAC;QAEnB,4BAA4B;QAC5B,cAAS,GAAqB;YAC5B;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,OAAO;aACf;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,cAAc;gBACpB,KAAK,EAAE,KAAK;aACb;SACF,CAAC;QAEF,cAAS,GAAQ,EAAE,CAAC;QAEpB,YAAO,GAAe,EAAE,CAAC;QAEzB,YAAO,GAAG;YACR,WAAW,EAAE;gBACX,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,IAAI;aACb;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE,IAAI;aACb;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,0BAA0B;gBAChC,MAAM,EAAE,IAAI;aACb;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,iBAAiB;gBACvB,MAAM,EAAE,KAAK;aACd;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,IAAI;aACb;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,WAAW;gBACjB,MAAM,EAAE,KAAK;aACd;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,IAAI;aACb;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE,IAAI;aACb;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,iBAAiB;gBACvB,MAAM,EAAE,KAAK;aACd;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE,IAAI;aACb;SACF,CAAC;QAwZF,sBAAiB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QAvYlC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAC3B,EAAE,EACF,EAAE,cAAc,EAAE,iBAAiB,EAAE,EACrC,EAAE,gBAAgB,EAAE,IAAI,EAAE,EAC1B,EAAE,eAAe,EAAE,KAAK,EAAE,CAC3B,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC;IACrD,CAAC;IAED,eAAe;QACb,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC,SAAS,EAAE,CAAC;IACvD,CAAC;IAED,UAAU;QACR,IAAI,CAAC,uBAAuB;aACzB,UAAU,EAAE;aACZ,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CACH;aACA,SAAS,CACR,CAAC,QAAa,EAAE,EAAE;YAChB,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,KAAK,GAAG,EAAE;gBACpC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBAErC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;oBACtB,EAAE,EAAE,CAAC;oBACL,IAAI,EAAE,cAAc;iBACrB,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,EACD,CAAC,KAAU,EAAE,EAAE;YACb,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACvB,CAAC,CACF,CAAC;IACN,CAAC;IAEK,UAAU;;YACd,IAAI,CAAC,OAAO,GAAG;gBACb;oBACE,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,yBAAyB;iBACnC;gBACD;oBACE,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,8BAA8B;iBACxC;gBACD;oBACE,OAAO,EAAE,CAAC;oBACV,OAAO,EAAE,gCAAgC;iBAC1C;gBACD;oBACE,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,8BAA8B;iBACxC;gBACD;oBACE,OAAO,EAAE,CAAC;oBACV,OAAO,EAAE,qBAAqB;iBAC/B;gBACD;oBACE,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,oBAAoB;iBAC9B;gBACD;oBACE,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,qBAAqB;iBAC/B;gBACD;oBACE,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,0BAA0B;iBACpC;gBACD;oBACE,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,wBAAwB;iBAClC;gBACD;oBACE,OAAO,EAAE,IAAI;oBACb,OAAO,EAAE,oBAAoB;iBAC9B;gBACD;oBACE,OAAO,EAAE,IAAI;oBACb,OAAO,EAAE,aAAa;iBACvB;gBACD;oBACE,OAAO,EAAE,IAAI;oBACb,OAAO,EAAE,kBAAkB;iBAC5B;gBACD;oBACE,OAAO,EAAE,IAAI;oBACb,OAAO,EAAE,gBAAgB;iBAC1B;aACF,CAAC;QACJ,CAAC;KAAA;IAED,gBAAgB;QACd,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACrD,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAEhE,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;gBAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;aACnC;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAE3B,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;YACrB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;gBACd,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI;oBAC5B,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;oBAC3D,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;QAED,MAAM,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAChD,CAAC,QAAQ,EAAE,EAAE,CAAC,SAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,EAAE,KAAI,OAAO,CAAC,SAAS,CAAC,CACjD,CAAC;QAEF,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QAExB,IAAI,mBAAmB,CAAC,MAAM,IAAI,CAAC,EAAE;YACnC,OAAO,CAAC,SAAS,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;SACrD;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,OAAO,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrE,OAAO,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpE,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,YAAY,EAAE,CAAC,GAAG,CAAC;YACnB,OAAO,EAAE,CAAC,UAAU,CAAC;YACrB,SAAS,EAAE,CAAC,MAAM,CAAC;YACnB,IAAI,EAAE,CAAC,CAAC,CAAC;YACT,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;SAC3B,CAAC,CAAC;QAEH,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,EAAE;YAC3B,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,EAAE;gBAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAM,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,EAAE;gBAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;aACzB;SACF;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEpD,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,YAAY,CAAC;SACrB;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,cAAc,CAAC,KAAU;QACvB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE7B,OAAO,KAAK,CAAC,MAAM,IAAI,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC;IACpD,CAAC;IAED,eAAe,CAAC,KAAa;QAC3B,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,WAAW,GAAG,IAAI,0DAAW,EAAE,CAAC;QAEpC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE;YACvC,IAAI,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACxE,QAAQ;gBACN,gBAAgB,KAAK,IAAI,IAAI,gBAAgB,CAAC,QAAQ,KAAK,IAAI,CAAC;SACnE;QAED,IAAI,QAAQ,EAAE;YACZ,OAAO,aAAa,CAAC;SACtB;IACH,CAAC;IAED,UAAU,CAAC,MAAM;;QACf,UAAI,CAAC,oBAAoB,0CAAE,WAAW,GAAG;QAEzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAI,CAAC,uBAAuB;aACzB,QAAQ,CAAC,MAAM,CAAC;aAChB,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;gBACtB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;oBAC3B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;oBAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,OAAO;iBACR;gBAED,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;;gBACf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,MAAM,OAAO,SAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,OAAO,CAAC;gBACtC,OAAO;oBACL,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;oBACpC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAClC,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,kBAAkB,CAAC,MAAM,EAAE,QAAQ;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,uBAAuB;aACzB,iBAAiB,CAAC,MAAM,CAAC;aACzB,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CACH;aACA,SAAS,CACR,CAAC,QAAa,EAAE,EAAE;YAChB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,OAAO;aACR;YAED,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAErC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;gBACnC,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC5B,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAC/C,QAAQ,EAAE,KAAK;gBACf,mBAAmB,EAAE,IAAI;gBACzB,KAAK,EAAE,WAAW;aACnB,CAAC,CAAC;QACL,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;;YACR,MAAM,OAAO,SAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,OAAO,CAAC;YACtC,OAAO;gBACL,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;gBACpC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAClC,CAAC,CACF,CAAC;IACN,CAAC;IAED,mBAAmB,CAAC,MAAM;QACxB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,uBAAuB;aACzB,mBAAmB,CAAC,MAAM,CAAC;aAC3B,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QACvC,CAAC,CAAC,CACH;aACA,SAAS,CACR,CAAC,QAAa,EAAE,EAAE;YAChB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;gBAClC,OAAO;aACR;YACD,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACnC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;;YACR,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACnC,MAAM,OAAO,SAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,OAAO,CAAC;YACtC,OAAO;gBACL,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;gBACpC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAClC,CAAC,CACF,CAAC;IACN,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,UAAU,EAAE,IAAI,CAAC,cAAc;YAC/B,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;SACrE,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,IAAS,EAAE,QAA0B;QAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,MAAM,MAAM,GAAG;YACb,OAAO,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO;YACtB,OAAO,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO;YACtB,OAAO,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO;YACtB,iBAAiB,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE;SAC5B,CAAC;QAEF,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,iBAAiB,CAAC,IAAI;QACpB,IAAI,KAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,KAAI,mBAAmB,EAAE;YAC7C,OAAO,gBAAgB,CAAC;SACzB;QAED,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,gBAAgB,CAAC,IAAI;;QACnB,IAAI,WAAI,CAAC,MAAM,0CAAE,OAAO,MAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,GAAE;YACzC,OAAO,EAAE,aAAa,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;SAC9C;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,eAAe;IACf,aAAa,CAAC,KAAuB;QACnC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,UAAU,EAAE,IAAI,CAAC,cAAc;YAC/B,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;SACrE,CAAC,CAAC;IACL,CAAC;IACD,eAAe;IAEf,YAAY;QACV,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE,CAAC,SAAS,CACnD,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACxC;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,8BAA8B,CAAC,CAAC;aAC5D;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;QAC3D,CAAC,CACF,CAAC;IACJ,CAAC;IAID,0BAA0B;;QACxB,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,OAAC,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,IAAI,0CAAE,UAAU,CAAC,CAAC;IACnE,CAAC;IAED,WAAW;QACT,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;CACF;;YAzjBQ,wEAAe;YAbC,sDAAM;YACtB,wDAAQ;YADR,8DAAc;YAqBd,4FAAc;YAlBrB,0DAAW;YAoBJ,sGAAiB;YADjB,4FAAgC;YAEhC,sFAAW;YACX,wFAAY;YAXZ,kEAAc;YAgBd,0FAAa;YAEb,wGAAkB;;;6BAcxB,uDAAS,SAAC,gBAAgB,EAAE,EAAE;;AADpB,uCAAuC;IALnD,+DAAS,CAAC;QACT,QAAQ,EAAE,mCAAmC;QAC7C,kFAAqC;;KAEtC,CAAC;mFAyHyB,wEAAe;QACtB,sDAAM;QACJ,wDAAQ;QACF,8DAAc;QACd,4FAAc;QACjB,0DAAW;QACL,sGAAiB;QACX,4FAAgC;QAC5C,sFAAW;QACV,wFAAY;QACZ,kEAAc;QACb,0FAAa;QACb,wGAAkB;GApIhC,uCAAuC,CAyhBnD;AAzhBmD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9C7B;AACkC;AACd;AAMnB;AACkB;AAKqC;AACpB;AACN;AACH;AAElD,2EAAY,CAAC,OAAO,EAAE,gEAAU,CAAC,CAAC;AAElC,WAAW;AACmE;AACE;AACQ;AAChB;AACE;AAKE;AAIiC;AACf;IAcjF,uCAAuC,SAAvC,uCAAuC;IAkHlD,YACU,aAA8B,EAC9B,MAAc,EACd,QAAkB,EAClB,cAA8B,EAC9B,cAA8B,EAC9B,WAAwB,EACxB,iBAAoC,EACpC,OAAyC,EACzC,WAAwB,EACxB,YAA0B,EAC1B,YAA4B,EAC5B,aAA4B,EAC5B,OAAuB,EACvB,cAAuC,EACvC,qBAA4D;QAd5D,kBAAa,GAAb,aAAa,CAAiB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAClB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,YAAO,GAAP,OAAO,CAAkC;QACzC,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,YAAO,GAAP,OAAO,CAAgB;QACvB,mBAAc,GAAd,cAAc,CAAyB;QACvC,0BAAqB,GAArB,qBAAqB,CAAuC;QA7HtE,iBAAY,GAAG,KAAK,CAAC;QACrB,qBAAgB,GAAG,KAAK,CAAC;QACzB,mBAAc,GAAG,KAAK,CAAC;QACvB,gBAAW,GAAG,IAAI,CAAC;QAMnB,gBAAW,GAA+B;YACxC,YAAY,EAAE,IAAI;YAClB,cAAc,EAAE,IAAI;YACpB,OAAO,EAAE,IAAI;SACd,CAAC;QAKF,iBAAY,GAAG,KAAK,CAAC;QAErB,uBAAkB,GAAG,IAAI,CAAC;QAE1B,eAAU,GAAQ,EAAE,CAAC;QAErB,YAAO,GAAQ,EAAE,CAAC;QAClB,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,IAAI,CAAC;QAEpB,WAAM,GAAQ,EAAE,CAAC;QACjB,YAAO,GAAG,EAAE,CAAC;QAEb,aAAQ,GAAQ,EAAE,CAAC;QAGnB,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,0BAAqB,GAAY,KAAK,CAAC;QACvC,4BAAuB,GAAY,KAAK,CAAC;QAEzC,gBAAW,GAAG,CAAC,CAAC;QAChB,YAAO,GAAW,EAAE,CAAC;QAErB,iBAAY,GAAW,GAAG,CAAC;QAC3B,sBAAiB,GAAQ,EAAE,CAAC;QAE5B,YAAO,GAAG,UAAU,CAAC;QACrB,cAAS,GAAG,MAAM,CAAC;QAEnB,4BAA4B;QAC5B,cAAS,GAAqB;YAC5B;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE,OAAO;aACf;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,cAAc;gBACpB,KAAK,EAAE,KAAK;aACb;SACF,CAAC;QAEF,cAAS,GAAQ,EAAE,CAAC;QAEpB,YAAO,GAAe,EAAE,CAAC;QAEzB,YAAO,GAAG;YACR,WAAW,EAAE;gBACX,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,IAAI;aACb;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,IAAI;aACb;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,2BAA2B;gBACjC,MAAM,EAAE,IAAI;aACb;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,kBAAkB;gBACxB,MAAM,EAAE,KAAK;aACd;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,IAAI;aACb;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,WAAW;gBACjB,MAAM,EAAE,KAAK;aACd;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,IAAI;aACb;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE,IAAI;aACb;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,kBAAkB;gBACxB,MAAM,EAAE,KAAK;aACd;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,WAAW;gBACjB,MAAM,EAAE,IAAI;aACb;SACF,CAAC;QAEF,iBAAY,GAAG,EAAE,CAAC;QAyZlB,sBAAiB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QAtYlC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAC3B,EAAE,EACF,EAAE,cAAc,EAAE,iBAAiB,EAAE,EACrC,EAAE,gBAAgB,EAAE,IAAI,EAAE,EAC1B,EAAE,eAAe,EAAE,KAAK,EAAE,CAC3B,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,oBAAoB;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC,SAAS,EAAE,CAAC;IACvD,CAAC;IAED,aAAa;;QACX,MAAM,WAAW,SAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,0CAAE,WAAW,CAAC;QAErE,IAAI,CAAC,cAAc,GAAG;YACpB;gBACE,SAAS,EAAE,WAAW;aACvB;YACD;gBACE,SAAS,EAAE,qBAAqB;gBAChC,UAAU,EAAE,sBAAsB,WAAW,EAAE;aAChD;YACD;gBACE,SAAS,EAAE,oBAAoB;aAChC;SACF,CAAC;IACJ,CAAC;IAED,UAAU;QACR;;;;;;;;;;;;;;;;;;;;;;;;eAwBO;IACT,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAClD,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,OAAO;aACR;YAED,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;aAC5C,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,QAAQ,CAAC,EAAE;gBACf,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvC,CAAC;YACD,KAAK,EAAE,GAAG,EAAE;gBACV,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YACvB,CAAC;SACF,CAAC;IACR,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;;YACrD,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAEhE,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;gBACtC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,OAAO;aACR;YAED,SAAS,CAAC,SAAS,CAAC,GAAG,UAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,EACvC,CAAC,OAAC,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,0CAAE,KAAK,CAAC,GAAG,EAC/B,CAAC,CAAC,EAAE,CAAC;YAEP,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAEpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAE3B,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;YACrB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;gBACd,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI;oBAC5B,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;qBAC3D,IAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC/B,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE;;oBAClC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;QAED;;;;;;YAMI;QAEJ,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,OAAO,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrE,OAAO,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpE,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,CAAC,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,YAAY,EAAE,CAAC,GAAG,CAAC;YACnB,OAAO,EAAE,CAAC,UAAU,CAAC;YACrB,SAAS,EAAE,CAAC,MAAM,CAAC;YACnB,IAAI,EAAE,CAAC,CAAC,CAAC;YACT,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;SAC3B,CAAC,CAAC;QAEH,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,EAAE;YAC3B,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,EAAE;gBAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAM,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,EAAE;gBAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;aACzB;SACF;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEpD,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,YAAY,CAAC;SACrB;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,cAAc,CAAC,KAAU;QACvB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE7B,OAAO,KAAK,CAAC,MAAM,IAAI,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC;IACpD,CAAC;IAED,eAAe,CAAC,KAAa;QAC3B,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,WAAW,GAAG,IAAI,0DAAW,EAAE,CAAC;QAEpC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE;YACvC,IAAI,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACxE,QAAQ;gBACN,gBAAgB,KAAK,IAAI,IAAI,gBAAgB,CAAC,QAAQ,KAAK,IAAI,CAAC;SACnE;QAED,IAAI,QAAQ,EAAE;YACZ,OAAO,aAAa,CAAC;SACtB;IACH,CAAC;IAED,UAAU,CAAC,MAAM;;QACf,UAAI,CAAC,oBAAoB,0CAAE,WAAW,GAAG;QAEzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,OAAO;aACrC,QAAQ,CAAC,MAAM,CAAC;aAChB,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC,CACH;aACA,SAAS,CACR,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,OAAO;aACR;YAED,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;;YACR,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,OAAO,SAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,OAAO,CAAC;YACtC,OAAO;gBACL,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;gBACpC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAClC,CAAC,CACF,CAAC;IACN,CAAC;IAED,kBAAkB,CAAC,MAAM,EAAE,QAAQ;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,OAAO;aACT,iBAAiB,CAAC,MAAM,CAAC;aACzB,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CACH;aACA,SAAS,CACR,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,OAAO;aACR;YAED,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAErC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;gBACnC,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC5B,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAC/C,QAAQ,EAAE,KAAK;gBACf,mBAAmB,EAAE,IAAI;gBACzB,KAAK,EAAE,WAAW;aACnB,CAAC,CAAC;QACL,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;;YACR,MAAM,OAAO,SAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,OAAO,CAAC;YACtC,OAAO;gBACL,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;gBACpC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAClC,CAAC,CACF,CAAC;IACN,CAAC;IAED,mBAAmB,CAAC,MAAM;QACxB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,OAAO;aACT,mBAAmB,CAAC,MAAM,CAAC;aAC3B,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QACvC,CAAC,CAAC,CACH;aACA,SAAS,CACR,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;gBAClC,OAAO;aACR;YACD,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACnC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;;YACR,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACnC,MAAM,OAAO,SAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,OAAO,CAAC;YACtC,OAAO;gBACL,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;gBACpC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAClC,CAAC,CACF,CAAC;IACN,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,UAAU,EAAE,IAAI,CAAC,cAAc;YAC/B,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;SACrE,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,IAAS,EAAE,QAA0B;QAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,MAAM,MAAM,GAAG;YACb,OAAO,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO;YACtB,OAAO,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO;YACtB,OAAO,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO;YACtB,iBAAiB,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,iBAAiB;SAC3C,CAAC;QAEF,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,iBAAiB,CAAC,IAAI;QACpB,IAAI,KAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,KAAI,mBAAmB,EAAE;YAC7C,OAAO,gBAAgB,CAAC;SACzB;QAED,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,gBAAgB,CAAC,IAAI;;QACnB,IAAI,WAAI,CAAC,MAAM,0CAAE,OAAO,MAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,GAAE;YACzC,OAAO,EAAE,aAAa,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;SAC9C;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,eAAe;IACf,aAAa,CAAC,KAAuB;QACnC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,UAAU,EAAE,IAAI,CAAC,cAAc;YAC/B,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;SACrE,CAAC,CAAC;IACL,CAAC;IACD,eAAe;IAEf,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,SAAS,CACnC,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACxC;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,mCAAmC,CAAC,CAAC;aACjE;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAC5D,CAAC,CACF,CAAC;IACJ,CAAC;IAID,0BAA0B;QACxB;4EACoE;IACtE,CAAC;IAED,WAAW;QACT,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,eAAe,CAAC,MAAO;QAErB,IAAI,CAAC,qBAAqB;aACvB,eAAe,CAAC,MAAM,CAAC;aACvB,SAAS,CACR,CAAC,QAAQ,EAAE,EAAE;YACX,IAAG,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAC;gBACzB,OAAM;aACP;YAED,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5C,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;QAEV,CAAC,CACF;IACL,CAAC;IAED,mBAAmB,CAAC,IAAS;QAE3B,MAAM,MAAM,GAAG,EAAC,UAAU,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,EAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,OAAO;aACT,WAAW,CAAC,MAAM,CAAC;aACnB,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAA2B,EAAE,EAAE;gBACpC,IAAG,QAAQ,CAAC,MAAM,IAAI,GAAG,EAAC;oBACxB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;oBACrB,OAAO;iBACR;gBACD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACzB,CAAC;YACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;;gBACpB,MAAM,OAAO,eAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,OAAO,mCAAI,EAAE,CAAC;gBAC5C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC9B,CAAC;SACF,CAAC;IACN,CAAC;CAEF;;YAvmBQ,wEAAe;YAbC,sDAAM;YACtB,wDAAQ;YADR,8DAAc;YAqBd,4FAAc;YAlBrB,0DAAW;YAoBJ,sGAAiB;YADjB,4FAAgC;YAEhC,sFAAW;YACX,wFAAY;YAXZ,4DAAc;YAgBd,0FAAa;YATb,4FAAc;YAcd,oGAAuB;YADvB,sHAAqC;;;6BAgB3C,uDAAS,SAAC,gBAAgB,EAAE,EAAE;;AADpB,uCAAuC;IALnD,+DAAS,CAAC;QACT,QAAQ,EAAE,mCAAmC;QAC7C,kFAAqC;;KAEtC,CAAC;mFAoHyB,wEAAe;QACtB,sDAAM;QACJ,wDAAQ;QACF,8DAAc;QACd,4FAAc;QACjB,0DAAW;QACL,sGAAiB;QAC3B,4FAAgC;QAC5B,sFAAW;QACV,wFAAY;QACZ,4DAAc;QACb,0FAAa;QACnB,4FAAc;QACP,oGAAuB;QAChB,sHAAqC;GAjI3D,uCAAuC,CAmkBnD;AAnkBmD;;;;;;;;;;;;;;;;;;;;;;;ACzDT;AACL;AACwB;AAIiB;AACoB;AACO;AAE1G,WAAW;AACX;;sFAEsF;IAKzE,gCAAgC,SAAhC,gCAAgC;IAG3C,YACY,IAAgB,EAClB,gBAAkC,EAClC,iBAA6C,EAC7C,kBAA+C;QAH7C,SAAI,GAAJ,IAAI,CAAY;QAClB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,sBAAiB,GAAjB,iBAAiB,CAA4B;QAC7C,uBAAkB,GAAlB,kBAAkB,CAA6B;QANxC,QAAG,GAAG,qCAAqC,CAAC;IAOzD,CAAC;IAEL,UAAU;QACR,gEAAgE;QAChE,uEAAuE;QAEvE,4DAA4D;IAC9D,CAAC;IAED,QAAQ,CAAC,MAAW;QAElB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,oCAAoC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC7F,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,aAAa,CAAC,MAAO;QACnB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,yCAAyC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAClG,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,iBAAiB,CAAC,MAAW;QAC3B,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,8CAA8C,EAAE;YAC9D,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,UAAU;SACpB,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,mBAAmB,CAAC,MAAW;QAC7B,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,gDAAgD,EAAE;YAChE,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,UAAU;SACpB,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,wCAAwC,EAAE;YACxE,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,WAAW,CAAC,MAAM;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,sCAAsC,EAAE,MAAM,EAAE;YAChF,OAAO,EAAE,UAAU;SACpB,CAAC;IACJ,CAAC;CACF;;YA3EQ,+DAAU;YAIV,4FAAgB;YAChB,gHAA0B;YAC1B,uHAA2B;;AAUvB,gCAAgC;IAH5C,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAKkB,+DAAU;QACA,4FAAgB;QACf,gHAA0B;QACzB,uHAA2B;GAP9C,gCAAgC,CA2D5C;AA3D4C;;;;;;;;;;;;;;;;;;AClBF;IAK9B,WAAW,SAAX,WAAW;;QACtB,WAAM,GAAkB;YACtB,OAAO;YACP,SAAS;YACT,OAAO;YACP,OAAO;YACP,MAAM;YACN,OAAO;YACP,OAAO;YACP,QAAQ;YACR,YAAY;YACZ,SAAS;YACT,WAAW;YACX,WAAW;SACZ,CAAC;QAEF,UAAK,GAAkB;YACrB,SAAS;YACT,OAAO;YACP,QAAQ;YACR,WAAW;YACX,QAAQ;YACR,SAAS;YACT,QAAQ;SACT,CAAC;IAoNJ,CAAC;IAlNC,OAAO,CAAC,KAAW,EAAE,KAAW;QAC9B,OAAO,CACL,KAAK,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,WAAW,EAAE;YAC3C,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,CAAC,QAAQ,EAAE;YACrC,KAAK,CAAC,OAAO,EAAE,KAAK,KAAK,CAAC,OAAO,EAAE,CACpC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,IAAU;QACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACjC,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACrC,IAAI,KAAU,EAAE,OAAY,CAAC;QAE7B,IAAI,QAAQ,GAAG,EAAE,EAAE;YACjB,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;SACxB;aAAM;YACL,KAAK,GAAG,QAAQ,CAAC;SAClB;QAED,IAAI,UAAU,GAAG,EAAE,EAAE;YACnB,OAAO,GAAG,IAAI,UAAU,EAAE,CAAC;SAC5B;aAAM;YACL,OAAO,GAAG,UAAU,CAAC;SACtB;QAED,OAAO,GAAG,KAAK,IAAI,OAAO,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW,CAAC,KAAW,EAAE,KAAY,EAAE,WAAoB,IAAI;QAC7D,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;QAC5B,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QAC/B,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACjC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,QAAQ,EAAE;YACZ,IAAI,KAAK,EAAE;gBACT,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAExC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,IAAI,WAAW,IAAI,UAAU,KAAK,EAAE,CAAC;aAC5G;YAED,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,IAAI,UAAU,IAAI,EAAE,CAAC;SAC5F;aAAM;YACL,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,IAAI,EAAE,CAAC;SAC9E;IACH,CAAC;IAED,YAAY,CAAC,IAAU;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACtC,CAAC;IAED,eAAe;QACb,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,eAAe;QACb,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,sEAAsE;IACtE,cAAc;QACZ,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;QAE1C,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1G,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEjC,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,qEAAqE;IACrE,YAAY;QACV,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;QAExC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;QACpE,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QAEpC,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,eAAe,CAAC,IAAU;QACxB,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,CAAC,GAAQ,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,GAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,GAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,GAAQ,IAAI,CAAC,UAAU,EAAE,CAAC;QAE/B,IAAI,CAAC,GAAG,EAAE;YAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,GAAG,EAAE;YAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,GAAG,EAAE;YAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,GAAG,EAAE;YAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QAExB,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IACpC,CAAC;IAED,sBAAsB,CAAC,IAAU;QAC/B,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC1D,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACpD,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACtD,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAEtD,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IACzC,CAAC;IAED,gBAAgB,CAAC,IAAY;QAC3B,IAAI,IAAI,KAAK,IAAI,EAAE;YACjB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEhC,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;SAC1C;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,gBAAgB,CAAC,IAAU;QACzB,IAAI,CAAC,GAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,GAAQ,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,GAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;QAEhC,IAAI,CAAC,GAAG,EAAE;YAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,GAAG,EAAE;YAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QAExB,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IAC1B,CAAC;IAED,mBAAmB,CAAC,UAAe,EAAE,QAAgB;QACnD,IAAI,IAAU,CAAC;QAEf,IAAI,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;YAChC,MAAM,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC9C,MAAM,SAAS,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChD,MAAM,SAAS,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEhD,IAAI,QAAQ,IAAI,OAAO,EAAE;gBACvB,IAAI,GAAG,IAAI,IAAI,CACb,SAAS,CAAC,CAAC,CAAC,EACZ,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAC1B,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EACzB,SAAS,CAAC,CAAC,CAAC,EACZ,SAAS,CAAC,CAAC,CAAC,EACZ,SAAS,CAAC,CAAC,CAAC,CACb,CAAC;aACH;iBAAM,IAAI,QAAQ,IAAI,KAAK,EAAE;gBAC5B,IAAI,GAAG,IAAI,IAAI,CACb,SAAS,CAAC,CAAC,CAAC,EACZ,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAC1B,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EACzB,SAAS,CAAC,CAAC,CAAC,EACZ,SAAS,CAAC,CAAC,CAAC,EACZ,SAAS,CAAC,CAAC,CAAC,CACb,CAAC;aACH;SACF;aAAM;YACL,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAExC,IAAI,QAAQ,IAAI,OAAO,EAAE;gBACvB,IAAI,GAAG,IAAI,IAAI,CACb,SAAS,CAAC,CAAC,CAAC,EACZ,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAC1B,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAC1B,CAAC;aACH;iBAAM,IAAI,QAAQ,IAAI,KAAK,EAAE;gBAC5B,IAAI,GAAG,IAAI,IAAI,CACb,SAAS,CAAC,CAAC,CAAC,EACZ,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAC1B,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAC1B,CAAC;aACH;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,iBAAiB,CAAC,UAAe,EAAE,QAAgB;QACjD,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxC,IAAI,IAAY,CAAC;QAEjB,IAAI,QAAQ,IAAI,OAAO,EAAE;YACvB,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;SAC1D;aAAM,IAAI,QAAQ,IAAI,KAAK,EAAE;YAC5B,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;SAC1D;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,aAAa,CAAC,IAAU,EAAE,IAAY;QACpC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC;CACF;AA5OY,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CA4OvB;AA5OuB;;;;;;;;;;;;;;;;;;;;;;;;ACLmB;AACL;AACwB;AAC9B;AAIhC,WAAW;AAC6C;AACoB;AACO;IAKtE,gCAAgC,SAAhC,gCAAgC;IAG3C,YACY,IAAgB,EAClB,gBAAkC,EAClC,iBAA6C,EAC7C,kBAA+C;QAH7C,SAAI,GAAJ,IAAI,CAAY;QAClB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,sBAAiB,GAAjB,iBAAiB,CAA4B;QAC7C,uBAAkB,GAAlB,kBAAkB,CAA6B;QANxC,QAAG,GAAG,uDAAuD,CAAC;IAO3E,CAAC;IAEL,UAAU;QACR,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QAC1D,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAEjE,OAAO,qDAAQ,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,QAAQ,CAAC,MAAW;QAElB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,QAAQ,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACjE,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAGD,iBAAiB,CAAC,MAAW;QAC3B,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,kBAAkB,EAAE;YAClC,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,UAAU;SACpB,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,mBAAmB,CAAC,MAAW;QAC7B,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,oBAAoB,EAAE;YACpC,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,UAAU;SACpB,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,YAAY,EAAE;YAC5C,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;CACF;;YA7DQ,+DAAU;YAMV,mEAAgB;YAChB,uFAA0B;YAC1B,8FAA2B;;AAKvB,gCAAgC;IAH5C,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAKkB,+DAAU;QACA,mEAAgB;QACf,uFAA0B;QACzB,8FAA2B;GAP9C,gCAAgC,CAgD5C;AAhD4C;;;;;;;;;;;;;ACf7C;AAAe,+/PAAg8P,2DAA2D,whBAAwhB,qBAAqB,yhJAAyhJ,gBAAgB,SAAS,gBAAgB,yPAAyP,gBAAgB,yPAAyP,+CAA+C,4PAA4P,0CAA0C,iPAAiP,sBAAsB,IAAI,iBAAiB,0PAA0P,mBAAmB,uPAAuP,gBAAgB,2PAA2P,kBAAkB,4PAA4P,0CAA0C,6PAA6P,qBAAqB,4rBAA4rB,yPAAyP,ugBAAugB,sCAAsC,KAAK,qFAAqF,MAAM,cAAc,oTAAoT,mCAAmC,mCAAmC,kCAAkC,mfAAmf,kWAAkW,mBAAmB,IAAI,mBAAmB,4KAA4K,mBAAmB,mQAAmQ,gBAAgB,4QAA4Q,iBAAiB,gjBAAgjB,sBAAsB,o1CAAo1C,mBAAmB,+JAA+J,UAAU,+oCAA+oC,gBAAgB,IAAI,gBAAgB,yEAAyE,gBAAgB,qDAAqD,kBAAkB,qDAAqD,gBAAgB,qDAAqD,gBAAgB,+BAA+B,gBAAgB,qDAAqD,wCAAwC,+BAA+B,gBAAgB,yeAAye,E;;;;;;;;;;;;;;;;;;;ACA30uB;AACmB;AAEjB;IAUhC,gBAAgB,SAAhB,gBAAgB;IAG3B,YAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFrB,QAAG,GAAG,qCAAqC,CAAC;IAEnB,CAAC;IAE3C,WAAW,CAAC,MAAY;QACtB,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,WAAW,EAAE;YAC3B,MAAM,EAAE,UAAU;SACnB,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,YAAY,CAAC,MAAW;QACtB,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,YAAY,EAAE;YAC5B,MAAM,EAAE,UAAU;SACnB,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,MAAY;QACrB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC;aAC1B,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IACD,WAAW,CAAC,EAAO;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,WAAW,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,cAAc,CAAC,EAAO;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,cAAc,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,qBAAqB;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IACD,aAAa,CAAC,MAAW;QACvB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,GAAG,IAAI,CAAC,GAAG,aAAa,EAAE;YAC1B,MAAM,EAAE,MAAM;SACf,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IACD,kBAAkB,CAAC,MAAW;QAC5B,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,GAAG,IAAI,CAAC,GAAG,mBAAmB,EAAE;YAChC,MAAM,EAAE,MAAM;SACf,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAID,mBAAmB,CAAC,MAAW;QAC7B,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,GAAG,IAAI,CAAC,GAAG,0BAA0B,EAAG;YACxC,MAAM,EAAE,MAAM;SACf,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IACD,2BAA2B,CAAC,MAAW;QACrC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,GAAG,IAAI,CAAC,GAAG,mCAAmC,EAAE;YAChD,MAAM,EAAE,MAAM;SACf,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,gBAAgB,CAAC,MAAW;QAC1B,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,GAAG,IAAI,CAAC,GAAG,4BAA4B,EAAE;YACzC,MAAM,EAAE,MAAM;SACf,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IACD,SAAS,CAAC,MAAW;QACnB,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,EAAE;YACzB,MAAM,EAAE,UAAU;SACnB,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,MAAW;QACpB,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU,EAAE;YAC1B,MAAM,EAAE,UAAU;SACnB,CAAC;aACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,YAAY,CAAC,SAAc,EAAE;QAC3B,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,YAAY,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aACpD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IACD,uBAAuB;QACrB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,0BAA0B,CAAC;aAC1C,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,UAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,sBAAsB,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,wBAAwB,CAAC;aACtD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,uBAAuB,CAAC;aACrD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IACD,oBAAoB;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,6BAA6B,CAAC,CAAC;IACjE,CAAC;CACF;;YA9KQ,+DAAU;;AAYN,gBAAgB;IAH5B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAI4B,+DAAU;GAH3B,gBAAgB,CAkK5B;AAlK4B;;;;;;;;;;;;;ACb7B;AAAe,uHAAwD,kBAAkB,mBAAmB,GAAG,6CAA6C,ujBAAujB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1qB;AACM;AACmB;AAElE,gBAAgB;AACsC;AACJ;AACU;AACZ;AACc;AAE9D,YAAY;AAC0C;AAEtD,oBAAoB;AACmC;AAEvD,UAAU;AACoE;AAE9E,UAAU;AACkF;AACxB;AACQ;AACG;AAE/E,aAAa;AACqE;IAsBrE,+BAA+B,SAA/B,+BAA+B;CAAG;AAAlC,+BAA+B;IApB3C,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,+FAAuC,CAAC;QACvD,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,mEAAa,CAAC,OAAO,EAAE;YACvB,+DAAW,CAAC,OAAO,EAAE;YACrB,yEAAgB,CAAC,OAAO,EAAE;YAC1B,6DAAU,CAAC,OAAO,EAAE;YACpB,2EAAkB,CAAC,OAAO,EAAE;YAC5B,mEAAc;YACd,qEAAkB;YAClB,yGAAsC;YACtC,kFAAY;YACZ,0FAAe;YACf,6FAAgB;SACjB;QACD,SAAS,EAAE,CAAC,4FAAc,CAAC;KAC5B,CAAC;GACW,+BAA+B,CAAG;AAAH;;;;;;;;;;;;;ACjD5C;AAAe,y7NAA03N,2DAA2D,whBAAwhB,qBAAqB,48IAA48I,gBAAgB,SAAS,gBAAgB,2LAA2L,gBAAgB,2LAA2L,0CAA0C,8LAA8L,0CAA0C,+MAA+M,iBAAiB,IAAI,iBAAiB,4LAA4L,sBAAsB,yLAAyL,gBAAgB,6LAA6L,qBAAqB,8LAA8L,0CAA0C,+LAA+L,qBAAqB,yJAAyJ,sCAAsC,KAAK,qFAAqF,MAAM,cAAc,oTAAoT,mCAAmC,mCAAmC,kCAAkC,sfAAsf,kWAAkW,mBAAmB,IAAI,mBAAmB,4KAA4K,mBAAmB,qPAAqP,gBAAgB,6QAA6Q,iBAAiB,gjBAAgjB,sBAAsB,82CAA82C,mBAAmB,+JAA+J,UAAU,yoCAAyoC,gBAAgB,IAAI,gBAAgB,yEAAyE,gBAAgB,qDAAqD,kBAAkB,qDAAqD,gBAAgB,qDAAqD,gBAAgB,+BAA+B,gBAAgB,qDAAqD,wCAAwC,+BAA+B,gBAAgB,4eAA4e,E;;;;;;;;;;;;;;;;;;;ACA94oB;AACc;AAEvD,aAAa;AACqE;AAElF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,8FAAuC,EAAE;CACjE,CAAC;IAMW,sCAAsC,SAAtC,sCAAsC;CAAG;AAAzC,sCAAsC;IAJlD,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,sCAAsC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;ACdV;AACc;AAEvD,aAAa;AACqE;AAElF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,8FAAuC,EAAE;CACjE,CAAC;IAMW,sCAAsC,SAAtC,sCAAsC;CAAG;AAAzC,sCAAsC;IAJlD,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,sCAAsC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;ACdW;AACf;AAE/C,aAAa;AACiD;IAOjD,gBAAgB,8BAAhB,gBAAgB;IAC3B,MAAM,CAAC,OAAO;QACZ,OAAO;YACH,QAAQ,EAAE,kBAAgB;SAC7B,CAAC;IACN,CAAC;CACA;AANY,gBAAgB;IAL5B,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,0EAAmB,CAAC;QACnC,OAAO,EAAE,CAAC,4DAAY,CAAC;QACvB,OAAO,EAAE,CAAC,0EAAmB,CAAC;KAC/B,CAAC;GACW,gBAAgB,CAM5B;AAN4B;;;;;;;;;;;;;;;;;;;;;ACXc;AACO;AACL;AACb;IAOnB,2BAA2B,SAA3B,2BAA2B;IAGtC,YAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFrB,QAAG,GAAG,kDAAkD,CAAC;IAEjC,CAAC;IAE1C,gBAAgB;QACd,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,IAAI,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAExD,OAAO,qDAAQ,CAAC;YACd,QAAQ;YACR,MAAM;YACN,aAAa;YACb,mBAAmB;SACpB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa,IAAI,EAAE,CAAC;aACnC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC;IAGD,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,iBAAiB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,sBAAsB;QACpB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,wBAAwB,CAAC;aACxC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,IAAS;QACvB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,eAAe,EAAE,IAAI,CAAC;aACtC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;CACF;;YAtDQ,+DAAU;;AASN,2BAA2B;IAHvC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAI4B,+DAAU;GAH3B,2BAA2B,CA6CvC;AA7CuC","file":"controle-entregas-controle-entregas-module-es2015.js","sourcesContent":["import { AfterViewInit, Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[isEllipsed]'\r\n})\r\nexport class IsEllipsedDirective implements AfterViewInit {\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      const element = this.elementRef.nativeElement;\r\n      if (element.offsetWidth < element.scrollWidth) {\r\n        element.title = element.innerHTML;\r\n      }\r\n    }, 500);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialControleEntregasRoutingModule } from './controle-entregas-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { DirectivesModule } from 'src/app/shared/directives/directives.module';\r\n\r\n// Components\r\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\r\n\r\n@NgModule({\r\n  declarations: [ComercialControleEntregasListaComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TooltipModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialControleEntregasRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    DirectivesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class ComercialControleEntregasModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialVendedoresService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/vendedor`;\r\n  private readonly API_CADASTROS = `http://23.254.204.187/api/comercial/cadastros`;\r\n\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getDetalhesCadastro() {\r\n    return this.http\r\n      .get(`${this.API}/detalhes-cadastro`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedores() {\r\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedoresSucursal(id: number) {\r\n    return this.http\r\n      .get(`${this.API}/sucursal-vendedor/${id}`)\r\n  }\r\n\r\n  getGestiones() {\r\n    return this.http.get(`${this.API_CADASTROS}/titulos-agenda/lista?codSituacao=1`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/carteira-clientes`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCarteiraClientesCotizacion(params?): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/carteira-clientes-cotizacion`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getValidaClienteCarteira(\r\n    codCliente: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVinculoOperadores() {\r\n    return this.http\r\n      .get(`${this.API}/vinculo-operadores`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getDetalleVendedor(params) {\r\n  return this.http\r\n      .get(`${this.API}/detalles_vendedor`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getRubros(){\r\n\r\n    return this.http\r\n      .get(`${this.API}/rubros`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","export default \"::ng-deep comercial-controle-entregas #scrollDetalhes {\\n  height: 340px;\\n  overflow: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY29udHJvbGUtZW50cmVnYXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUk7RUFDRSxhQUFBO0VBQ0EsY0FBQTtBQUROIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY29udHJvbGUtZW50cmVnYXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAge1xyXG4gIGNvbWVyY2lhbC1jb250cm9sZS1lbnRyZWdhcyB7XHJcbiAgICAjc2Nyb2xsRGV0YWxoZXMge1xyXG4gICAgICBoZWlnaHQ6IDM0MHB4O1xyXG4gICAgICBvdmVyZmxvdzogYXV0bztcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19 */\";","import { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialControleEntregasService } from '../controle-entregas.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { AdminPerfisService } from 'src/app/modules/admin/perfis/services/perfis.service';\r\n\r\ninterface ITipoEmpresa {\r\n  id: number;\r\n  nome: string;\r\n  sigla: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'comercial-controle-entregas-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialControleEntregasListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n  modalRef: BsModalRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = false;\r\n  loaderImage = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home',\r\n    },\r\n    {\r\n      descricao: 'Controle de entregas',\r\n    },\r\n  ];\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    isResponsive: true,\r\n    subtitleBorder: true,\r\n    isFixed: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n  $serviceSubscription: Subscription;\r\n\r\n  imageLoading = false;\r\n\r\n  showAdvancedFilter = true;\r\n  form: FormGroup;\r\n  vendedores: any = [];\r\n\r\n  pedidos: any = [];\r\n  pedidosLoaded = false;\r\n  pedidosEmpty = true;\r\n\r\n  pedido: any = {};\r\n  entrega = [];\r\n\r\n  detalhes: any = [];\r\n  empresa: number;\r\n\r\n  detalhesRomaneio: any = [];\r\n  detalhesRomaneioEmpty: boolean = false;\r\n  detalhesRomaneioLoading: boolean = false;\r\n\r\n  currentPage = 1;\r\n  maxSize: number = 10;\r\n  totalItems: number;\r\n  itemsPerPage: number = 300;\r\n  pedidosPagination: any = [];\r\n\r\n  orderBy = 'dataPrev';\r\n  orderType = 'DESC';\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Entregue',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Não entregue',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  situacoes: any = [];\r\n\r\n  filiais: Array<any> = [];\r\n\r\n  columns = {\r\n    nomeEmpresa: {\r\n      name: 'Empresa',\r\n      active: true,\r\n    },\r\n    romaneio: {\r\n      name: 'Romaneio',\r\n      active: true,\r\n    },\r\n    dataPrev: {\r\n      name: 'Data Prevista de Entrega',\r\n      active: true,\r\n    },\r\n    dataEntrega: {\r\n      name: 'Data de Entrega',\r\n      active: false,\r\n    },\r\n    nomeCliente: {\r\n      name: 'Cliente',\r\n      active: true,\r\n    },\r\n    sequencia: {\r\n      name: 'Sequência',\r\n      active: false,\r\n    },\r\n    pedido: {\r\n      name: 'Pedido',\r\n      active: true,\r\n    },\r\n    notaFiscal: {\r\n      name: 'Nota Fiscal',\r\n      active: true,\r\n    },\r\n    dataEmissao: {\r\n      name: 'Data de emissão',\r\n      active: false,\r\n    },\r\n    nomeSituacao: {\r\n      name: 'Situação',\r\n      active: true,\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private router: Router,\r\n    private location: Location,\r\n    private activatedRoute: ActivatedRoute,\r\n    private pnotifyService: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private atividadesService: AtividadesService,\r\n    private controleEntregasService: ComercialControleEntregasService,\r\n    private dateService: DateService,\r\n    private titleService: TitleService,\r\n    private modalService: BsModalService,\r\n    private routerService: RouterService,\r\n    private perfilService: AdminPerfisService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setFormFilter();\r\n    this.registrarAcesso();\r\n    this.getFiliais();\r\n    this.getFiltros();\r\n    this.getSituacoes();\r\n    this.titleService.setTitle('Controle de entregas');\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getFiltros() {\r\n    this.controleEntregasService\r\n      .getFiltros()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response[0].responseCode === 200) {\r\n            this.vendedores = response[0].result;\r\n\r\n            this.vendedores.unshift({\r\n              id: 0,\r\n              nome: 'EXIBIR TODOS',\r\n            });\r\n          }\r\n\r\n          this.onActivatedRoute();\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      );\r\n  }\r\n\r\n  async getFiliais() {\r\n    this.filiais = [\r\n      {\r\n        CD_FILI: 46,\r\n        NM_FILI: 'Corte & Dobra - Cajamar',\r\n      },\r\n      {\r\n        CD_FILI: 72,\r\n        NM_FILI: 'Corte & Dobra - Praia Grande',\r\n      },\r\n      {\r\n        CD_FILI: 3,\r\n        NM_FILI: 'Corte & Dobra - Rio das Pedras',\r\n      },\r\n      {\r\n        CD_FILI: 41,\r\n        NM_FILI: 'Distribuição Duque de Caxias',\r\n      },\r\n      {\r\n        CD_FILI: 6,\r\n        NM_FILI: 'Distribuição Osasco',\r\n      },\r\n      {\r\n        CD_FILI: 18,\r\n        NM_FILI: 'Distribuição Tietê',\r\n      },\r\n      {\r\n        CD_FILI: 79,\r\n        NM_FILI: 'Distribuição Taipas',\r\n      },\r\n      {\r\n        CD_FILI: 77,\r\n        NM_FILI: 'Distribuição Camanducaia',\r\n      },\r\n      {\r\n        CD_FILI: 83,\r\n        NM_FILI: 'Distribuição Guarulhos',\r\n      },\r\n      {\r\n        CD_FILI: 9661,\r\n        NM_FILI: 'Dba Aços Especiais',\r\n      },\r\n      {\r\n        CD_FILI: 9639,\r\n        NM_FILI: 'Dba Jacareí',\r\n      },\r\n      {\r\n        CD_FILI: 9636,\r\n        NM_FILI: 'Dba Praia Grande',\r\n      },\r\n      {\r\n        CD_FILI: 9645,\r\n        NM_FILI: 'Dba Piracicaba',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.activatedRoute.queryParams.subscribe((response) => {\r\n      let _response = this.routerService.getBase64UrlParams(response);\r\n\r\n      if (Object.keys(_response).length > 0) {\r\n        this.form.patchValue(_response);\r\n        this.getPedidos(this.getParams());\r\n      } else {\r\n        this.loaderNavbar = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    const vendedorSelecionado = this.vendedores.filter(\r\n      (vendedor) => vendedor?.id == _params['CD_VEND']\r\n    );\r\n\r\n    _params['NM_VEND'] = '';\r\n\r\n    if (vendedorSelecionado.length == 1) {\r\n      _params['NM_VEND'] = vendedorSelecionado[0]['nome'];\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  setFormFilter() {\r\n    this.form = this.formBuilder.group({\r\n      DT_INIC: [this.dateService.getFirstDayMonth(), [Validators.required]],\r\n      DT_FINA: [this.dateService.getLastDayMonth(), [Validators.required]],\r\n      NM_CLIE: [null],\r\n      NOTA_FISC: [null],\r\n      CD_PEDI: [null],\r\n      SG_PEDI: [null],\r\n      CD_ROMA: [null],\r\n      CD_VEND: [null],\r\n      NM_VEND: [null],\r\n      DS_CLIE: [null],\r\n      CD_FILI: [null],\r\n      ENTR_SG_STAT: [null],\r\n      TT_REGI_PAGI: [300],\r\n      ORDE_BY: ['dataPrev'],\r\n      ORDE_TYPE: ['DESC'],\r\n      PAGI: [1],\r\n      TIME: new Date().getDate(),\r\n    });\r\n\r\n    this.getMatriculaVendedorLogado();\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.get('ORDE_BY').setValue(this.orderBy);\r\n    this.form.get('ORDE_TYPE').setValue(this.orderType);\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getPedidos(params) {\r\n    this.$serviceSubscription?.unsubscribe();\r\n\r\n    this.loaderNavbar = true;\r\n    this.pedidosLoaded = false;\r\n\r\n    this.controleEntregasService\r\n      .getLista(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.pedidosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.status !== 200) {\r\n            this.pedidos = [];\r\n            this.pedidosEmpty = true;\r\n            return;\r\n          }\r\n\r\n          this.pedidos = response.body['data'];\r\n          this.totalItems = response.body['total'];\r\n          this.pedidosEmpty = false;\r\n        },\r\n        error: (error) => {\r\n          this.pedidos = [];\r\n          this.pedidosEmpty = true;\r\n          const message = error?.error?.message;\r\n          message\r\n            ? this.pnotifyService.error(message)\r\n            : this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  getDetalhesEntrega(params, template) {\r\n    this.loaderNavbar = true;\r\n    this.imageLoading = true;\r\n\r\n    this.controleEntregasService\r\n      .getDetalhesPedido(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status !== 200) {\r\n            return;\r\n          }\r\n\r\n          this.entrega = response.body['data'];\r\n\r\n          if (!this.entrega['ENTR_COMP_FOTO']) {\r\n            setTimeout(() => {\r\n              this.imageLoading = false;\r\n            }, 200);\r\n          }\r\n\r\n          this.modalRef = this.modalService.show(template, {\r\n            animated: false,\r\n            ignoreBackdropClick: true,\r\n            class: 'modal-xxl',\r\n          });\r\n        },\r\n        (error) => {\r\n          const message = error?.error?.message;\r\n          message\r\n            ? this.pnotifyService.error(message)\r\n            : this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getDetalhesRomaneio(params) {\r\n    this.detalhesRomaneioLoading = true;\r\n    this.controleEntregasService\r\n      .getDetalhesRomaneio(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.detalhesRomaneioLoading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status !== 200) {\r\n            this.detalhesRomaneioEmpty = true;\r\n            return;\r\n          }\r\n          this.detalhesRomaneioEmpty = false;\r\n          this.detalhesRomaneio = response.body['data'];\r\n        },\r\n        (error) => {\r\n          this.detalhesRomaneioEmpty = false;\r\n          const message = error?.error?.message;\r\n          message\r\n            ? this.pnotifyService.error(message)\r\n            : this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('PAGI').setValue(1);\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  viewDetails(item: any, template: TemplateRef<any>) {\r\n    this.pedido = item;\r\n\r\n    const params = {\r\n      CD_ROMA: item?.CD_ROMA,\r\n      CD_PEDI: item?.CD_PEDI,\r\n      CD_FILI: item?.CD_FILI,\r\n      ID_LOGI_FUSI_PEDI: item?.ID,\r\n    };\r\n\r\n    this.getDetalhesEntrega(params, template);\r\n    this.getDetalhesRomaneio(params);\r\n  }\r\n\r\n  classStatusBorder(item): string {\r\n    if (item?.ENTR_SG_STAT == 'ENTREGA_REALIZADA') {\r\n      return 'border-success';\r\n    }\r\n\r\n    return 'border-danger';\r\n  }\r\n\r\n  getSelectedStyle(item) {\r\n    if (this.pedido?.CD_PEDI == item?.CD_PEDI) {\r\n      return { 'font-weight': 600, color: 'blue' };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  onResetForm() {\r\n    this.form.reset();\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n  /* Paginação */\r\n\r\n  getSituacoes() {\r\n    this.controleEntregasService.getSituacoes().subscribe(\r\n      (response) => {\r\n        if (response.status === 200) {\r\n          this.situacoes = response.body['data'];\r\n        } else {\r\n          this.pnotifyService.notice('Nenhuma situação encontrada.');\r\n        }\r\n      },\r\n      (error) => {\r\n        this.pnotifyService.error('Erro ao carregar situações.');\r\n      }\r\n    );\r\n  }\r\n\r\n  keepOriginalOrder = (a, b) => a.key;\r\n\r\n  getMatriculaVendedorLogado() {\r\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.form.get('CD_VEND').setValue(currentUser?.info?.idVendedor);\r\n  }\r\n\r\n  onImageLoad() {\r\n    setTimeout(() => {\r\n      this.imageLoading = false;\r\n    }, 200);\r\n  }\r\n}\r\n","import { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialControleEntregasService } from '../controle-entregas.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { AdminPerfisService } from 'src/app/modules/admin/perfis/services/perfis.service';\r\nimport { LogisticaEntregaFusionService } from '../../services/fusion.service';\r\nimport { LogisticaEntregaDesmembramentoService } from '../../desmembramento/services/desmembramento.service';\r\nimport { LogisticaFiliaisService } from '../../../cadastros/filiais/services/filiais.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\ninterface ITipoEmpresa {\r\n  id: number;\r\n  nome: string;\r\n  sigla: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'comercial-controle-entregas-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialControleEntregasListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n  modalRef: BsModalRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = false;\r\n  loadingFiliais = false;\r\n  loaderImage = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    isResponsive: true,\r\n    subtitleBorder: true,\r\n    isFixed: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n  $serviceSubscription: Subscription;\r\n\r\n  imageLoading = false;\r\n\r\n  showAdvancedFilter = true;\r\n  form: FormGroup;\r\n  vendedores: any = [];\r\n\r\n  pedidos: any = [];\r\n  pedidosLoaded = false;\r\n  pedidosEmpty = true;\r\n\r\n  pedido: any = {};\r\n  entrega = [];\r\n\r\n  detalhes: any = [];\r\n  empresa: number;\r\n\r\n  detalhesRomaneio: any = [];\r\n  detalhesRomaneioEmpty: boolean = false;\r\n  detalhesRomaneioLoading: boolean = false;\r\n\r\n  currentPage = 1;\r\n  maxSize: number = 10;\r\n  totalItems: number;\r\n  itemsPerPage: number = 300;\r\n  pedidosPagination: any = [];\r\n\r\n  orderBy = 'dataPrev';\r\n  orderType = 'DESC';\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Entregado',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'No entregado',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  situacoes: any = [];\r\n\r\n  filiais: Array<any> = [];\r\n\r\n  columns = {\r\n    nomeEmpresa: {\r\n      name: 'Empresa',\r\n      active: true,\r\n    },\r\n    romaneio: {\r\n      name: 'Lista',\r\n      active: true,\r\n    },\r\n    dataPrev: {\r\n      name: 'Fecha estimada de entrega',\r\n      active: true,\r\n    },\r\n    dataEntrega: {\r\n      name: 'Fecha de entrega',\r\n      active: false,\r\n    },\r\n    nomeCliente: {\r\n      name: 'Cliente',\r\n      active: true,\r\n    },\r\n    sequencia: {\r\n      name: 'Secuencia',\r\n      active: false,\r\n    },\r\n    pedido: {\r\n      name: 'Pedido',\r\n      active: true,\r\n    },\r\n    notaFiscal: {\r\n      name: 'Nota Fiscal',\r\n      active: true,\r\n    },\r\n    dataEmissao: {\r\n      name: 'Fecha de emisión',\r\n      active: false,\r\n    },\r\n    nomeSituacao: {\r\n      name: 'Situación',\r\n      active: true,\r\n    },\r\n  };\r\n\r\n  tipoOperacao = [];\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private router: Router,\r\n    private location: Location,\r\n    private activatedRoute: ActivatedRoute,\r\n    private pnotifyService: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private atividadesService: AtividadesService,\r\n    private service: ComercialControleEntregasService,\r\n    private dateService: DateService,\r\n    private titleService: TitleService,\r\n    private modalService: BsModalService,\r\n    private routerService: RouterService,\r\n    private pnotify: PNotifyService,\r\n    private filiaisService: LogisticaFiliaisService,\r\n    private desmembramentoService: LogisticaEntregaDesmembramentoService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setFormFilter();\r\n    this.registrarAcesso();\r\n    this.getFiliais();\r\n    //this.getFiltros();\r\n    this.getSituacoes();\r\n    this.titleService.setTitle('Control de entrega');\r\n    this.getVendedores();\r\n    this.onActivatedRoute();\r\n    this.setBreadCrumb();\r\n    this.getTipoOperacao();\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const submoduloId = this.activatedRoute.snapshot.params?.idSubModulo;\r\n\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Logistica',\r\n      },\r\n      {\r\n        descricao: 'GESTIÓN DE ENTREGAS',\r\n        routerLink: `/logistica/entrega/${submoduloId}`,\r\n      },\r\n      {\r\n        descricao: 'Control de entrega',\r\n      },\r\n    ];\r\n  }\r\n\r\n  getFiltros() {\r\n    /* this.service\r\n      .getFiltros()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response[0].responseCode === 200) {\r\n            this.vendedores = response[0].result;\r\n\r\n            this.vendedores.unshift({\r\n              id: 0,\r\n              nome: 'EXIBIR TODOS',\r\n            });\r\n          }\r\n\r\n          this.onActivatedRoute();\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      ); */\r\n  }\r\n\r\n  getVendedores() {\r\n    this.service.getVendedores().subscribe((response) => {\r\n      if (response.status !== 200) {\r\n        return;\r\n      }\r\n\r\n      this.vendedores = response.body['data'];\r\n    });\r\n  }\r\n\r\n  getFiliais() {\r\n      this.loadingFiliais = true;\r\n      this.filiaisService.getFiliais({ status: '1' })\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loadingFiliais = false;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: response => {\r\n            this.filiais = response.body['data'];\r\n          },\r\n          error: () => {\r\n            this.pnotify.error();\r\n          }\r\n        })\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.activatedRoute.queryParams.subscribe((response) => {\r\n      let _response = this.routerService.getBase64UrlParams(response);\r\n\r\n      if (Object.keys(_response).length == 0) {\r\n        this.loaderNavbar = false;\r\n        return;\r\n      }\r\n\r\n      _response['TP_OPER'] = _response?.TP_OPER\r\n        ? _response?.TP_OPER?.split(',')\r\n        : [];\r\n\r\n      this.form.patchValue(_response);\r\n      this.getPedidos(this.getParams());\r\n\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else if(Array.isArray(_obj[prop]))\r\n          _params[prop] = _obj[prop].toString()\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    /* const vendedorSelecionado = this.vendedores.filter((vendedor) => vendedor?.id == _params[\"CD_VEND\"] )\r\n\r\n    _params['NM_VEND'] = '';\r\n\r\n    if(vendedorSelecionado.length == 1){\r\n      _params['NM_VEND'] = vendedorSelecionado[0]['nome'];\r\n    } */\r\n\r\n    return _params;\r\n  }\r\n\r\n  setFormFilter() {\r\n    this.form = this.formBuilder.group({\r\n      DT_INIC: [this.dateService.getFirstDayMonth(), [Validators.required]],\r\n      DT_FINA: [this.dateService.getLastDayMonth(), [Validators.required]],\r\n      NM_CLIE: [null],\r\n      NOTA_FISC: [null],\r\n      CD_PEDI: [null],\r\n      SG_PEDI: [null],\r\n      CD_ROMA: [null],\r\n      CD_VEND: [null],\r\n      NM_VEND: [null],\r\n      TP_OPER: [['DEMEMBRAMENTO', 'FACTURA']],\r\n      DS_CLIE: [null],\r\n      CD_FILI: [null],\r\n      ENTR_SG_STAT: [null],\r\n      TT_REGI_PAGI: [300],\r\n      ORDE_BY: ['dataPrev'],\r\n      ORDE_TYPE: ['DESC'],\r\n      PAGI: [1],\r\n      TIME: new Date().getDate(),\r\n    });\r\n\r\n    this.getMatriculaVendedorLogado();\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.get('ORDE_BY').setValue(this.orderBy);\r\n    this.form.get('ORDE_TYPE').setValue(this.orderType);\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getPedidos(params) {\r\n    this.$serviceSubscription?.unsubscribe();\r\n\r\n    this.loaderNavbar = true;\r\n    this.pedidosLoaded = false;\r\n\r\n    this.$serviceSubscription = this.service\r\n      .getLista(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.pedidosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status !== 200) {\r\n            this.pedidos = [];\r\n            this.pedidosEmpty = true;\r\n            return;\r\n          }\r\n\r\n          this.pedidos = response.body['data'];\r\n          this.totalItems = response.body['total'];\r\n          this.pedidosEmpty = false;\r\n        },\r\n        (error) => {\r\n          this.pedidos = [];\r\n          this.pedidosEmpty = true;\r\n          const message = error?.error?.message;\r\n          message\r\n            ? this.pnotifyService.error(message)\r\n            : this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getDetalhesEntrega(params, template) {\r\n    this.loaderNavbar = true;\r\n    this.imageLoading = true;\r\n\r\n    this.service\r\n      .getDetalhesPedido(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status !== 200) {\r\n            return;\r\n          }\r\n\r\n          this.entrega = response.body['data'];\r\n\r\n          if (!this.entrega['ENTR_COMP_FOTO']) {\r\n            setTimeout(() => {\r\n              this.imageLoading = false;\r\n            }, 200);\r\n          }\r\n\r\n          this.modalRef = this.modalService.show(template, {\r\n            animated: false,\r\n            ignoreBackdropClick: true,\r\n            class: 'modal-xxl',\r\n          });\r\n        },\r\n        (error) => {\r\n          const message = error?.error?.message;\r\n          message\r\n            ? this.pnotifyService.error(message)\r\n            : this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getDetalhesRomaneio(params) {\r\n    this.detalhesRomaneioLoading = true;\r\n    this.service\r\n      .getDetalhesRomaneio(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.detalhesRomaneioLoading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status !== 200) {\r\n            this.detalhesRomaneioEmpty = true;\r\n            return;\r\n          }\r\n          this.detalhesRomaneioEmpty = false;\r\n          this.detalhesRomaneio = response.body['data'];\r\n        },\r\n        (error) => {\r\n          this.detalhesRomaneioEmpty = false;\r\n          const message = error?.error?.message;\r\n          message\r\n            ? this.pnotifyService.error(message)\r\n            : this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('PAGI').setValue(1);\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  viewDetails(item: any, template: TemplateRef<any>) {\r\n    this.pedido = item;\r\n\r\n    const params = {\r\n      CD_ROMA: item?.CD_ROMA,\r\n      CD_PEDI: item?.CD_PEDI,\r\n      CD_FILI: item?.CD_FILI,\r\n      ID_LOGI_FUSI_PEDI: item?.ID_LOGI_FUSI_PEDI,\r\n    };\r\n\r\n    this.getDetalhesEntrega(params, template);\r\n    this.getDetalhesRomaneio(params);\r\n  }\r\n\r\n  classStatusBorder(item): string {\r\n    if (item?.ENTR_SG_STAT == 'ENTREGA_REALIZADA') {\r\n      return 'border-success';\r\n    }\r\n\r\n    return 'border-danger';\r\n  }\r\n\r\n  getSelectedStyle(item) {\r\n    if (this.pedido?.CD_PEDI == item?.CD_PEDI) {\r\n      return { 'font-weight': 600, color: 'blue' };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  onResetForm() {\r\n    this.form.reset();\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n  /* Paginação */\r\n\r\n  getSituacoes() {\r\n    this.service.getSituacoes().subscribe(\r\n      (response) => {\r\n        if (response.status === 200) {\r\n          this.situacoes = response.body['data'];\r\n        } else {\r\n          this.pnotifyService.notice('No se encontró ninguna situación.');\r\n        }\r\n      },\r\n      (error) => {\r\n        this.pnotifyService.error('Error al cargar situaciones.');\r\n      }\r\n    );\r\n  }\r\n\r\n  keepOriginalOrder = (a, b) => a.key;\r\n\r\n  getMatriculaVendedorLogado() {\r\n    /* const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.form.get('CD_VEND').setValue(currentUser?.info?.idVendedor); */\r\n  }\r\n\r\n  onImageLoad() {\r\n    setTimeout(() => {\r\n      this.imageLoading = false;\r\n    }, 200);\r\n  }\r\n\r\n  getTipoOperacao(params?) {\r\n\r\n    this.desmembramentoService\r\n      .getTipoOperacao(params)\r\n      .subscribe(\r\n        (response) => {\r\n          if(response.status !== 200){\r\n            return\r\n          }\r\n\r\n          this.tipoOperacao = response.body['data'];\r\n        },\r\n        (error) => {\r\n\r\n        }\r\n      )\r\n  }\r\n\r\n  removerDataConsulta(item: any){\r\n\r\n    const params = {'idEvento': item?.ID_EVEN};\r\n    item.loading = true;\r\n\r\n    this.service\r\n      .pacthEvento(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          item.loading = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: HttpResponse<any>) => {\r\n          if(response.status != 200){\r\n            this.pnotify.error();\r\n            return;\r\n          }\r\n          this.pnotify.success();\r\n        },\r\n        error: (error: any) => {\r\n          const message = error?.error?.message ?? '';\r\n          this.pnotify.error(message);\r\n        }\r\n      })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { ComercialVendedoresService } from 'src/app/modules/comercial/services/vendedores.service';\r\nimport { ComercialTidSoftwareService } from 'src/app/modules/comercial/tid-software/tid-software.service';\r\n\r\n// Services\r\n/* import { ComercialService } from '../comercial.service';\r\nimport { ComercialVendedoresService } from '../services/vendedores.service';\r\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service'; */\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialControleEntregasService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) { }\r\n\r\n  getFiltros() {\r\n    /* const vendedores = this.vendedoresService.getVendedores(); */\r\n    /* const empresas = this.tidSoftwareService.getEmpresas('entregas'); */\r\n\r\n    /* return forkJoin([vendedores, empresas]).pipe(take(1)); */\r\n  }\r\n\r\n  getLista(params: any) {\r\n\r\n    return this.http\r\n      .get(`${this.API}/comercial/controle-entregas/lista`, { params: params, observe: \"response\" })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getVendedores(params?){\r\n    return this.http\r\n      .get(`${this.API}/logistica/controle-entregas/vendedores`, { params: params, observe: \"response\" })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhesPedido(params: any) {\r\n    return this.http\r\n      .get(`${this.API}/comercial/controle-entregas/detalhes-pedido`, {\r\n        params: params,\r\n        observe: \"response\"\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhesRomaneio(params: any) {\r\n    return this.http\r\n      .get(`${this.API}/comercial/controle-entregas/detalhes-romaneio`, {\r\n        params: params,\r\n        observe: \"response\"\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getSituacoes(){\r\n    return this.http.get(`${this.API}/comercial/controle-entregas/situacoes`, {\r\n      observe: \"response\"\r\n    }).pipe(take(1));\r\n  }\r\n\r\n  pacthEvento(params){\r\n    return this.http.patch(`${this.API}/logistica/controle-entregas/eventos`, params, {\r\n      observe: 'response'\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../comercial.service';\r\nimport { ComercialVendedoresService } from '../services/vendedores.service';\r\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialControleEntregasService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/controle-entregas`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) { }\r\n\r\n  getFiltros() {\r\n    const vendedores = this.vendedoresService.getVendedores();\r\n    const empresas = this.tidSoftwareService.getEmpresas('entregas');\r\n\r\n    return forkJoin([vendedores, empresas]).pipe(take(1));\r\n  }\r\n\r\n  getLista(params: any) {\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: params, observe: \"response\" })\r\n      .pipe(take(1));\r\n  }\r\n\r\n\r\n  getDetalhesPedido(params: any) {\r\n    return this.http\r\n      .get(`${this.API}/detalhes-pedido`, {\r\n        params: params,\r\n        observe: \"response\"\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhesRomaneio(params: any) {\r\n    return this.http\r\n      .get(`${this.API}/detalhes-romaneio`, {\r\n        params: params,\r\n        observe: \"response\"\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getSituacoes(){\r\n    return this.http.get(`${this.API}/situacoes`, {\r\n      observe: \"response\"\r\n    }).pipe(take(1));\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Controle de entregas\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onResetForm()\\\">\\r\\n    Limpiar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <advanced-filter #scrollToFilter>\\r\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"dataInicial\\\">Comienzo</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataInicial\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_INIC\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_INIC') + ' ' + onFieldRequired('DT_INIC')\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"dataFinal\\\">Final</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataFinal\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_FINA\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_FINA') + ' ' + onFieldRequired('DT_FINA')\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"cliente\\\">Cliente</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"cliente\\\"\\r\\n            formControlName=\\\"DS_CLIE\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <!-- <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"operacao\\\">Operación</label>\\r\\n          <select\\r\\n            name=\\\"operacao\\\"\\r\\n            id=\\\"operacao\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            formControlName=\\\"TP_OPER\\\"\\r\\n          >\\r\\n            <option value=\\\"ENTREGA_CLIENTE\\\">Entrega Cliente</option>\\r\\n            <option value=\\\"TRANSFERENCIA\\\">Transferência</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"notaFiscal\\\">Factura</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"notaFiscal\\\"\\r\\n            formControlName=\\\"NOTA_FISC\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"pedido\\\">Orden de venta</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"pedido\\\"\\r\\n            formControlName=\\\"CD_PEDI\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <!-- <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"sigla\\\">Sigla</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"sigla\\\"\\r\\n            formControlName=\\\"SG_PEDI\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"romaneio\\\">Ruta</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"romaneio\\\"\\r\\n            formControlName=\\\"CD_ROMA\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\r\\n          <label for=\\\"situacao\\\">Situación\\r\\n            <i class=\\\"far fa-question-circle ml-1\\\" [tooltip]=\\\"tooltipAutoScrollTemplate\\\"></i>\\r\\n          </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"situacoes\\\"\\r\\n            formControlName=\\\"ENTR_SG_STAT\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"situacao\\\"\\r\\n            bindLabel=\\\"ENTR_DS_STAT\\\"\\r\\n            bindValue=\\\"ENTR_SG_STAT\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n          <ng-template #tooltipAutoScrollTemplate>\\r\\n            <p class=\\\"mb-0\\\"><b>ESPERANDO COMPOSICIÓN: Esperando composición de carga para la región del cliente.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>VEHÍCULO EN ESPERA: Carga formada, pendiente de definición del vehículo.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ESPERANDO SALIDA: Vehículo definido, esperando carga y salida para entrega.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>A LA IZQUIERDA PARA ENTREGA: Se inició el viaje.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>RETIRO: Retiros de Hecho.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ENTREGA RETARDADA: Vuelva a reprogramación.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ENTREGA DEVUELTA: Devolución por cancelación.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ENTREGA REALIZADA: Entrega completada.</b></p>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\r\\n          <label for=\\\"vendedores\\\">Vendedor</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"vendedores\\\"\\r\\n            formControlName=\\\"NM_VEND\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"vendedores\\\"\\r\\n            bindLabel=\\\"NM_VEND\\\"\\r\\n            bindValue=\\\"NM_VEND\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3 mb-2\\\">\\r\\n          <label for=\\\"empresa\\\">Empresa</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [loading]=\\\"loadingFiliais\\\"\\r\\n            [items]=\\\"filiais\\\"\\r\\n            formControlName=\\\"CD_FILI\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"empresa\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"idFilial\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3 pl-0\\\">\\r\\n          <label for=\\\"tipoOperacao\\\">Tipo de operación</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tipoOperacao\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipoOperacao\\\"\\r\\n            bindLabel=\\\"TP_OPER\\\"\\r\\n            bindValue=\\\"TP_OPER\\\"\\r\\n            id=\\\"tipoOperacao\\\"\\r\\n            formControlName=\\\"TP_OPER\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            placeholder=\\\"SELECCIONE...\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\r\\n          <label for=\\\"registros\\\">Registros</label>\\r\\n          <select\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"registros\\\"\\r\\n            formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            >\\r\\n            <option>25</option>\\r\\n            <option>50</option>\\r\\n            <option>100</option>\\r\\n            <option>200</option>\\r\\n            <option>300</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12\\\" *ngIf=\\\"!pedidosEmpty\\\">\\r\\n      <ul\\r\\n        class=\\\"d-flex justify-content-between p-0\\\"\\r\\n      >\\r\\n        <li\\r\\n          *ngFor=\\\"let column of columns | keyvalue : keepOriginalOrder; let index = index\\\"\\r\\n          style=\\\"list-style: none;\\\"\\r\\n        >\\r\\n          <div class=\\\"custom-control custom-checkbox\\\">\\r\\n            <input\\r\\n              type=\\\"checkbox\\\"\\r\\n              class=\\\"custom-control-input\\\"\\r\\n              [id]=\\\"'column'+index\\\"\\r\\n              [name]=\\\"'column'+index\\\"\\r\\n              [checked]=\\\"column.value.active\\\"\\r\\n              [(ngModel)]=\\\"column.value.active\\\"\\r\\n              >\\r\\n            <label\\r\\n              class=\\\"custom-control-label\\\"\\r\\n              [for]=\\\"'column'+index\\\"\\r\\n            >\\r\\n              {{ column.value.name }}\\r\\n            </label>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"11%\\\"\\r\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Empresa\\\"\\r\\n                [active]=\\\"orderBy == 'nomeEmpresa'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeEmpresa')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.romaneio.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Ruta\\\"\\r\\n                [active]=\\\"orderBy == 'romaneio'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('romaneio')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"10%\\\"\\r\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Fecha Entr Estimada\\\"\\r\\n                [active]=\\\"orderBy == 'dataPrev'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('dataPrev')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"10%\\\"\\r\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Fecha de Entrega\\\"\\r\\n                [active]=\\\"orderBy == 'dataEntrega'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('dataEntrega')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-truncate hover\\\"\\r\\n              width=\\\"28%\\\"\\r\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Cliente\\\"\\r\\n                [active]=\\\"orderBy == 'nomeCliente'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeCliente')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate\\\"\\r\\n              width=\\\"5%\\\"\\r\\n              *ngIf=\\\"columns.sequencia.active\\\"\\r\\n            >Seq.</th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.pedido.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Orden de vienda\\\"\\r\\n                [active]=\\\"orderBy == 'pedido'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('pedido')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Factura\\\"\\r\\n                [active]=\\\"orderBy == 'notaFiscal'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('notaFiscal')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Fecha de Emisión\\\"\\r\\n                [active]=\\\"orderBy == 'dataEmissao'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('dataEmissao')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate\\\"\\r\\n              width=\\\"20%\\\"\\r\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\r\\n            >\\r\\n              Situación\\r\\n            </th>\\r\\n            <th width=\\\"3%\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of pedidos\\\">\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              ({{ item.CD_FILI }})&nbsp;{{ item.NM_FILI }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.romaneio.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.CD_ROMA }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.ROMA_DT_PREV_SAID | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.ENTR_DT_ENTR | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              ({{ item?.CD_CLIE_ORIG }}) {{ item?.NM_CLIE }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.sequencia.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item?.SEQU_ENTR }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.pedido.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.CD_PEDI }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.NOTA_FISC }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.DT_NOTA_FISC | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.ENTR_DS_STAT }}\\r\\n            </td>\\r\\n            <td>\\r\\n              <span\\r\\n                [tooltip]=\\\"!item.ENTR_DT_ENTR ? 'No entregado' : (\\r\\n                  !item.ENTR_DT_CONS ? 'No integrado' : ''\\r\\n                )\\\"\\r\\n                container=\\\"body\\\"\\r\\n                placement=\\\"left\\\"\\r\\n              >\\r\\n                <button\\r\\n                  class=\\\"btn-icon-sm\\\"\\r\\n                  *ngIf=\\\"!item.loading\\\"\\r\\n                  (click)=\\\"removerDataConsulta(item)\\\"\\r\\n                  [disabled]=\\\"!item.ENTR_DT_ENTR || !item.ENTR_DT_CONS\\\"\\r\\n                >\\r\\n                  <i\\r\\n                    class=\\\"fas fa-paper-plane\\\"\\r\\n                    [ngClass]=\\\"{\\r\\n                      'text-seconday': !item.ENTR_DT_ENTR,\\r\\n                      'text-warning': !item.ENTR_DT_CONS && item.ENTR_DT_ENTR,\\r\\n                      'text-success': item.ENTR_DT_CONS && item.ENTR_DT_ENTR\\r\\n                    }\\\"\\r\\n                  ></i>\\r\\n                </button>\\r\\n                <div\\r\\n                  class=\\\"spinner-border spinner-border-sm\\\"\\r\\n                  role=\\\"status\\\"\\r\\n                  *ngIf=\\\"item.loading\\\"\\r\\n                >\\r\\n                  <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div *ngIf=\\\"!pedidosEmpty\\\">\\r\\n        Demostración {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result message=\\\"No se encontró información\\\" class=\\\"mx-auto mt-5\\\" *ngIf=\\\"pedidosLoaded && pedidosEmpty\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\\r\\n<ng-template #modalDetalhes>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Detalles</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <tabset>\\r\\n      <tab heading=\\\"Entrega\\\" class=\\\"border-right border-left border-bottom\\\">\\r\\n        <div class=\\\"p-3\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label>Cliente</label>\\r\\n              <div>({{ pedido?.CD_CLIE }}) {{ pedido?.NM_FANT }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Conductor</label>\\r\\n              <div *ngIf=\\\"pedido?.NM_MOTO\\\">{{ pedido?.NM_MOTO }}</div>\\r\\n              <div *ngIf=\\\"!pedido?.NM_MOTO\\\">NO INFORMADO</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Placa de matrícula del vehículo</label>\\r\\n              <div *ngIf=\\\"pedido?.PLAC\\\">{{ pedido?.PLAC }}</div>\\r\\n              <div *ngIf=\\\"!pedido?.PLAC\\\">NO INFORMADO</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div id=\\\"scrollDetalhes\\\" class=\\\"mt-2 d-flex\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <div *ngFor=\\\"let detalhe of entrega; let last = last; let first = first\\\" [ngClass]=\\\"fist ? 'mt-4' : ''\\\">\\r\\n                <div class=\\\"d-flex w-100\\\" [tooltip]=\\\"detalhe?.desricao\\\" placement=\\\"left\\\">\\r\\n                  <div class=\\\"rounded-circle text-white icon-40\\\" [ngClass]=\\\"detalhe?.check == 0 ? 'bg-secondary' : 'bg-primary'\\\">\\r\\n                    <i [class]=\\\"detalhe?.icone\\\"></i>\\r\\n                  </div>\\r\\n                  <strong class=\\\"my-auto ml-3 text-truncate\\\" [ngClass]=\\\"detalhe?.check == 1 ? 'text-primary' : ''\\\" style=\\\"width: calc(100% - 40px)\\\">\\r\\n                    {{ detalhe?.descricao }}\\r\\n                  </strong>\\r\\n                </div>\\r\\n                <div class=\\\"my-2\\\" *ngIf=\\\"!last\\\">\\r\\n                  <div class=\\\"ml-1\\\">\\r\\n                    <div class=\\\"border-left border-secondary ml-3 p-2\\\">\\r\\n                      <div *ngIf=\\\"detalhe?.check === 1\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-8 p-0 form-group\\\">\\r\\n              <label>Fotografía</label>\\r\\n              <div *ngIf=\\\"imageLoading\\\">Cargando...</div>\\r\\n              <div *ngIf=\\\"pedido?.ENTR_COMP_FOTO\\\">\\r\\n                <img [hidden]=\\\"imageLoading\\\" [src]=\\\"pedido?.ENTR_COMP_FOTO\\\" class=\\\"border rounded shadow-sm w-100\\\" (load)=\\\"onImageLoad()\\\">\\r\\n              </div>\\r\\n              <empty-result message=\\\"No se encontró ninguna imagen\\\" *ngIf=\\\"!pedido?.ENTR_COMP_FOTO && !imageLoading\\\"></empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Ruta\\\" class=\\\"border-right border-left border-bottom\\\">\\r\\n        <div class=\\\"px-3 pt-3\\\" *ngIf=\\\"!detalhesRomaneioLoading && !detalhesRomaneioEmpty\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Ruta</label>\\r\\n              <div>{{ pedido?.CD_ROMA }}</div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Região da entrega</label>\\r\\n              <div>{{ pedido }}</div>\\r\\n            </div> -->\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <subtitles\\r\\n                [data]=\\\"subtitles\\\"\\r\\n                [show]=\\\"!noResult\\\">\\r\\n              </subtitles>\\r\\n            </div>\\r\\n          </div>\\r\\n          <custom-table [config]=\\\"tableConfig\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th>Cliente</th>\\r\\n                <th class=\\\"text-center\\\">Seq.</th>\\r\\n                <th class=\\\"text-center\\\">Factura</th>\\r\\n                <th class=\\\"text-center\\\">Orden de vienda</th>\\r\\n                <th class=\\\"text-center\\\">Código</th>\\r\\n                <th>Producto</th>\\r\\n                <th class=\\\"text-center\\\">Peso</th>\\r\\n                <th>Dirección</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let item of detalhesRomaneio\\\" [ngStyle]=\\\"getSelectedStyle(item)\\\">\\r\\n                <td\\r\\n                  class=\\\"hover\\\"\\r\\n                  [ngClass]=\\\"classStatusBorder(item)\\\">\\r\\n                  ({{ item.CD_CLIE }}) {{ item.NM_FANT }}\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">{{ item.NR_SQNC }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.NOTA_FISC }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.CD_PEDI }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.CD_PROD }}</td>\\r\\n                <td>{{ item.NM_PROD }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.TT_PROD_PESO  | number: '0.3-3' }}</td>\\r\\n                <td>{{ item.DS_ENDE }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n        </div>\\r\\n        <empty-result message=\\\"No se encontró información\\\" *ngIf=\\\"detalhesRomaneioEmpty\\\"></empty-result>\\r\\n        <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\" *ngIf=\\\"!detalhesRomaneioLoading && detalhesRomaneioEmpty\\\">\\r\\n          <span class=\\\"sr-only\\\">Loading...</span>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`,  {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getUpSellService(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_suplementarios`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos() {\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","export default \"::ng-deep comercial-controle-entregas #scrollDetalhes {\\n  height: 340px;\\n  overflow: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmVnYS9jb250cm9sZS1lbnRyZWdhcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFSTtFQUNFLGFBQUE7RUFDQSxjQUFBO0FBRE4iLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2lzdGljYS9lbnRyZWdhL2NvbnRyb2xlLWVudHJlZ2FzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIHtcclxuICBjb21lcmNpYWwtY29udHJvbGUtZW50cmVnYXMge1xyXG4gICAgI3Njcm9sbERldGFsaGVzIHtcclxuICAgICAgaGVpZ2h0OiAzNDBweDtcclxuICAgICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialControleEntregasRoutingModule } from './controle-entregas-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { DirectivesModule } from 'src/app/shared/directives/directives.module';\r\n\r\n// Components\r\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\r\n\r\n@NgModule({\r\n  declarations: [ComercialControleEntregasListaComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TooltipModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialControleEntregasRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    DirectivesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class ComercialControleEntregasModule {}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Controle de entregas\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onResetForm()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <advanced-filter #scrollToFilter>\\r\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"dataInicial\\\">Data inicial</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataInicial\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_INIC\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_INIC') + ' ' + onFieldRequired('DT_INIC')\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"dataFinal\\\">Data final</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataFinal\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_FINA\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_FINA') + ' ' + onFieldRequired('DT_FINA')\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col\\\">\\r\\n          <label for=\\\"cliente\\\">Cliente</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"cliente\\\"\\r\\n            formControlName=\\\"DS_CLIE\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"notaFiscal\\\">Nota fiscal</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"notaFiscal\\\"\\r\\n            formControlName=\\\"NOTA_FISC\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"pedido\\\">Pedido</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"pedido\\\"\\r\\n            formControlName=\\\"CD_PEDI\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"sigla\\\">Sigla</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"sigla\\\"\\r\\n            formControlName=\\\"SG_PEDI\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"romaneio\\\">Romaneio</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"romaneio\\\"\\r\\n            formControlName=\\\"CD_ROMA\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\r\\n          <label for=\\\"situacao\\\">Situação\\r\\n            <i class=\\\"far fa-question-circle ml-1\\\" [tooltip]=\\\"tooltipAutoScrollTemplate\\\"></i>\\r\\n          </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"situacoes\\\"\\r\\n            formControlName=\\\"ENTR_SG_STAT\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"situacao\\\"\\r\\n            bindLabel=\\\"ENTR_DS_STAT\\\"\\r\\n            bindValue=\\\"ENTR_SG_STAT\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n          <ng-template #tooltipAutoScrollTemplate>\\r\\n            <p class=\\\"mb-0\\\"><b>AGUARDANDO COMPOSIÇÃO: Aguardando composição de carga para região do cliente.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>AGUARDANDO VEíCULO: Carga formada, aguardando definição do veículo.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>AGUARDANDO SAÍDA: Veículo definido, aguardando carregamento e saída para entrega.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>SAIU PARA ENTREGA: Viagem Iniciada.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>RETIRADA: Retira Realizada.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ENTREGA ADIADA: Retorno para reprogramação.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ENTREGA DEVOLVIDA: Retorno para cancelamento.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ENTREGA REALIZADA: Entrega realizada.</b></p>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\r\\n          <label for=\\\"vendedores\\\">Vendedor</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"vendedores\\\"\\r\\n            formControlName=\\\"CD_VEND\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"vendedores\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"id\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col mb-2\\\">\\r\\n          <label for=\\\"empresa\\\">Empresa</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"filiais\\\"\\r\\n            formControlName=\\\"CD_FILI\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"empresa\\\"\\r\\n            bindLabel=\\\"NM_FILI\\\"\\r\\n            bindValue=\\\"CD_FILI\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2 mb-2\\\">\\r\\n          <label for=\\\"registros\\\">Registros</label>\\r\\n          <select\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"registros\\\"\\r\\n            formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            >\\r\\n            <option>25</option>\\r\\n            <option>50</option>\\r\\n            <option>100</option>\\r\\n            <option>200</option>\\r\\n            <option>300</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12\\\" *ngIf=\\\"!pedidosEmpty\\\">\\r\\n      <ul\\r\\n        class=\\\"d-flex justify-content-between p-0\\\"\\r\\n      >\\r\\n        <li\\r\\n          *ngFor=\\\"let column of columns | keyvalue : keepOriginalOrder; let index = index\\\"\\r\\n          style=\\\"list-style: none;\\\"\\r\\n        >\\r\\n          <div class=\\\"custom-control custom-checkbox\\\">\\r\\n            <input\\r\\n              type=\\\"checkbox\\\"\\r\\n              class=\\\"custom-control-input\\\"\\r\\n              [id]=\\\"'column'+index\\\"\\r\\n              [name]=\\\"'column'+index\\\"\\r\\n              [checked]=\\\"column.value.active\\\"\\r\\n              [(ngModel)]=\\\"column.value.active\\\"\\r\\n              >\\r\\n            <label\\r\\n              class=\\\"custom-control-label\\\"\\r\\n              [for]=\\\"'column'+index\\\"\\r\\n            >\\r\\n              {{ column.value.name }}\\r\\n            </label>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"11%\\\"\\r\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Empresa\\\"\\r\\n                [active]=\\\"orderBy == 'nomeEmpresa'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeEmpresa')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.romaneio.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Romaneio\\\"\\r\\n                [active]=\\\"orderBy == 'romaneio'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('romaneio')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"10%\\\"\\r\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Data Prev Entrega\\\"\\r\\n                [active]=\\\"orderBy == 'dataPrev'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('dataPrev')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"10%\\\"\\r\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Data de Entrega\\\"\\r\\n                [active]=\\\"orderBy == 'dataEntrega'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('dataEntrega')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-truncate hover\\\"\\r\\n              width=\\\"28%\\\"\\r\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Cliente\\\"\\r\\n                [active]=\\\"orderBy == 'nomeCliente'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeCliente')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate\\\"\\r\\n              width=\\\"5%\\\"\\r\\n              *ngIf=\\\"columns.sequencia.active\\\"\\r\\n            >Seq.</th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.pedido.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Pedido\\\"\\r\\n                [active]=\\\"orderBy == 'pedido'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('pedido')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Nota fiscal\\\"\\r\\n                [active]=\\\"orderBy == 'notaFiscal'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('notaFiscal')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Data de Emissão\\\"\\r\\n                [active]=\\\"orderBy == 'dataEmissao'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('dataEmissao')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate\\\"\\r\\n              width=\\\"23%\\\"\\r\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\r\\n            >\\r\\n              Situação</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of pedidos\\\" (click)=\\\"viewDetails(item, modalDetalhes)\\\">\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\r\\n            >\\r\\n              ({{ item.CD_FILI }})&nbsp;{{ item.NM_FILI }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.romaneio.active\\\"\\r\\n            >\\r\\n              {{ item.CD_ROMA }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\r\\n            >\\r\\n              {{ item.DT_SAID_PREV | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\r\\n            >\\r\\n              {{ item.ENTR_DT_ENTR | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\r\\n              isEllipsed\\r\\n            >\\r\\n              ({{ item?.CD_CLIE }}) {{ item?.NM_CLIE }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.sequencia.active\\\"\\r\\n            >\\r\\n              {{ item?.ENTR_NR_SQNC }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.pedido.active\\\"\\r\\n            >\\r\\n              {{ item.CD_PEDI }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\r\\n            >\\r\\n              {{ item.NR_NOTA_FISC }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\r\\n            >\\r\\n              {{ item.DT_NOTA_FISC | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\r\\n            >\\r\\n              {{ item.ENTR_DS_STAT }}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div *ngIf=\\\"!pedidosEmpty\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"mx-auto mt-5\\\" *ngIf=\\\"pedidosLoaded && pedidosEmpty\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\\r\\n<ng-template #modalDetalhes>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Detalhes</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <tabset>\\r\\n      <tab heading=\\\"Entrega\\\" class=\\\"border-right border-left border-bottom\\\">\\r\\n        <div class=\\\"p-3\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label>Cliente</label>\\r\\n              <div>({{ pedido?.CD_CLIE }}) {{ pedido?.NM_FANT }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Motorista</label>\\r\\n              <div *ngIf=\\\"pedido?.NM_MOTO\\\">{{ pedido?.NM_MOTO }}</div>\\r\\n              <div *ngIf=\\\"!pedido?.NM_MOTO\\\">NÃO INFORMADO</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Placa do veículo</label>\\r\\n              <div *ngIf=\\\"pedido?.PLAC\\\">{{ pedido?.PLAC }}</div>\\r\\n              <div *ngIf=\\\"!pedido?.PLAC\\\">NÃO INFORMADO</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div id=\\\"scrollDetalhes\\\" class=\\\"mt-2 d-flex\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <div *ngFor=\\\"let detalhe of entrega; let last = last; let first = first\\\" [ngClass]=\\\"fist ? 'mt-4' : ''\\\">\\r\\n                <div class=\\\"d-flex w-100\\\" [tooltip]=\\\"detalhe?.desricao\\\" placement=\\\"left\\\">\\r\\n                  <div class=\\\"rounded-circle text-white icon-40\\\" [ngClass]=\\\"detalhe?.check == 0 ? 'bg-secondary' : 'bg-primary'\\\">\\r\\n                    <i [class]=\\\"detalhe?.icone\\\"></i>\\r\\n                  </div>\\r\\n                  <strong class=\\\"my-auto ml-3 text-truncate\\\" [ngClass]=\\\"detalhe?.check == 1 ? 'text-primary' : ''\\\" style=\\\"width: calc(100% - 40px)\\\">\\r\\n                    {{ detalhe?.descricao }}\\r\\n                  </strong>\\r\\n                </div>\\r\\n                <div class=\\\"my-2\\\" *ngIf=\\\"!last\\\">\\r\\n                  <div class=\\\"ml-1\\\">\\r\\n                    <div class=\\\"border-left border-secondary ml-3 p-2\\\">\\r\\n                      <div *ngIf=\\\"detalhe?.check === 1\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-8 p-0 form-group\\\">\\r\\n              <label>FOTO DO CANHOTO</label>\\r\\n              <div *ngIf=\\\"imageLoading\\\">Carregando foto do canhoto...</div>\\r\\n              <div *ngIf=\\\"pedido?.ENTR_COMP_FOTO\\\">\\r\\n                <img [hidden]=\\\"imageLoading\\\" [src]=\\\"pedido?.ENTR_COMP_FOTO\\\" class=\\\"border rounded shadow-sm w-100\\\" (load)=\\\"onImageLoad()\\\">\\r\\n              </div>\\r\\n              <empty-result message=\\\"Nehuma imagem encontrada\\\" *ngIf=\\\"!pedido?.ENTR_COMP_FOTO && !imageLoading\\\"></empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Romaneio\\\" class=\\\"border-right border-left border-bottom\\\">\\r\\n        <div class=\\\"px-3 pt-3\\\" *ngIf=\\\"!detalhesRomaneioLoading && !detalhesRomaneioEmpty\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Romaneio</label>\\r\\n              <div>{{ pedido?.CD_ROMA }}</div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Região da entrega</label>\\r\\n              <div>{{ pedido }}</div>\\r\\n            </div> -->\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <subtitles\\r\\n                [data]=\\\"subtitles\\\"\\r\\n                [show]=\\\"!noResult\\\">\\r\\n              </subtitles>\\r\\n            </div>\\r\\n          </div>\\r\\n          <custom-table [config]=\\\"tableConfig\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th>Cliente</th>\\r\\n                <th class=\\\"text-center\\\">Seq.</th>\\r\\n                <th class=\\\"text-center\\\">Nota fiscal</th>\\r\\n                <th class=\\\"text-center\\\">Pedido</th>\\r\\n                <th class=\\\"text-center\\\">Código</th>\\r\\n                <th>Material</th>\\r\\n                <th class=\\\"text-center\\\">Peso</th>\\r\\n                <th>Endereço</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let item of detalhesRomaneio\\\" [ngStyle]=\\\"getSelectedStyle(item)\\\">\\r\\n                <td\\r\\n                  class=\\\"hover\\\"\\r\\n                  [ngClass]=\\\"classStatusBorder(item)\\\">\\r\\n                  ({{ item.CD_CLIE }}) {{ item.NM_FANT }}\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">{{ item.NR_SQNC }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.NOTA_FISC }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.CD_PEDI }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.CD_PROD }}</td>\\r\\n                <td>{{ item.NM_PROD }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.TT_PROD_PESO  | number: '0.3-3' }}</td>\\r\\n                <td>{{ item.DS_ENDE }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n        </div>\\r\\n        <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"detalhesRomaneioEmpty\\\"></empty-result>\\r\\n        <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\" *ngIf=\\\"!detalhesRomaneioLoading && detalhesRomaneioEmpty\\\">\\r\\n          <span class=\\\"sr-only\\\">Loading...</span>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Components\r\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ComercialControleEntregasListaComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialControleEntregasRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Components\r\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ComercialControleEntregasListaComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialControleEntregasRoutingModule {}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// Directives\r\nimport { IsEllipsedDirective } from './is-ellipsed.directive';\r\n\r\n@NgModule({\r\n  declarations: [IsEllipsedDirective],\r\n  imports: [CommonModule],\r\n  exports: [IsEllipsedDirective]\r\n})\r\nexport class DirectivesModule {\r\n  static forRoot(): ModuleWithProviders<DirectivesModule> {\r\n    return {\r\n        ngModule: DirectivesModule\r\n    };\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}