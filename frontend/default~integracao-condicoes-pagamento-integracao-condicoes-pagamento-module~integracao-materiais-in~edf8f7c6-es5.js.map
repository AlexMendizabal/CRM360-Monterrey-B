{"version":3,"sources":["webpack:///src/app/modules/comercial/integracoes/dagda/templates/material-principal/material-principal.component.scss","webpack:///src/app/modules/comercial/integracoes/dagda/templates/material-principal/material-principal.component.ts","webpack:///src/app/modules/comercial/integracoes/dagda/templates/templates.module.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/integracoes/dagda/services/associacao-materiais.service.ts","webpack:///src/app/modules/comercial/integracoes/dagda/templates/material-principal/material-principal.component.html","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialIntegracaoDagdaMateriaisTemplatesMaterialPrincipalComponent","formBuilder","pnotifyService","comercialService","service","linhas","classes","loaderNavbar","materialPrincipal","tableConfigMateriais","fixedHeader","bodyHeight","filteredClasses","materiais","searching","firstSearch","materiaisLista","materiaisListaLoaded","materiaisListaEmpty","codMaterialSelecionado","getPNotify","setFormBuilder","events","limparMaterialSelecionado","currentValue","setMaterialSelecionado","form","group","codLinha","required","codClasse","codMaterial","valid","emit","params","value","tipoMaterial","Object","assign","getMateriaisTid","pipe","subscribe","next","response","hasOwnProperty","success","data","length","error","mensagem","material","codigoMaterial","controls","reset","setValue","enable","setValidators","updateValueAndValidity","disable","filter","idLinha","getMateriais","materiaisLoader","unshift","codigoDescricaoMaterial","selector","template","ComercialIntegracoesDagdaMateriaisTemplatesModule","declarations","imports","exports","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","providedIn","ComercialIntegracoesServicosIntegracaoMateriaisComponent","http","tidSoftwareService","BASE_URL","API","param","get","observe","post","getLinhas","getClasses","httpParams","append","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"default~integracao-condicoes-pagamento-integracao-condicoes-pagamento-module~integracao-materiais-in~edf8f7c6-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2RhZ2RhL3RlbXBsYXRlcy9tYXRlcmlhbC1wcmluY2lwYWwvbWF0ZXJpYWwtcHJpbmNpcGFsLmNvbXBvbmVudC5zY3NzIn0= */\";","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\n\r\n// Interfaces\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { ComercialIntegracoesServicosIntegracaoMateriaisComponent } from '../../services/associacao-materiais.service';\r\n\r\n@Component({\r\n  selector: 'comercial-integracao_dagda-materiais-templates-material-principal',\r\n  templateUrl: './material-principal.component.html',\r\n  styleUrls: ['./material-principal.component.scss'],\r\n})\r\nexport class ComercialIntegracaoDagdaMateriaisTemplatesMaterialPrincipalComponent\r\n  implements OnInit, OnChanges\r\n{\r\n  @Input('linhas') linhas: any[] = [];\r\n  @Input('classes') classes: any[] = [];\r\n\r\n  @Input('limparMaterialSelecionado') limparMaterialSelecionado: boolean;\r\n\r\n  @Output('loaderNavbar') loaderNavbar: EventEmitter<boolean> =\r\n    new EventEmitter();\r\n  @Output('materialPrincipal') materialPrincipal: EventEmitter<object> =\r\n    new EventEmitter();\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  form: FormGroup;\r\n\r\n  filteredClasses: Array<any> = [];\r\n  materiais: Array<any> = [];\r\n  materiaisLoader: boolean;\r\n\r\n  searching = false;\r\n  firstSearch = false;\r\n\r\n  materiaisLista: Array<any> = [];\r\n  materiaisListaLoaded = false;\r\n  materiaisListaEmpty = false;\r\n\r\n  codMaterialSelecionado: number = null;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private comercialService: ComercialService,\r\n    private service: ComercialIntegracoesServicosIntegracaoMateriaisComponent\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  ngOnChanges(events: SimpleChanges): void {\r\n    if (\r\n      events.limparMaterialSelecionado &&\r\n      events.limparMaterialSelecionado.currentValue === true\r\n    ) {\r\n      this.setMaterialSelecionado(null);\r\n    }\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      codLinha: [null, [Validators.required]],\r\n      codClasse: [null, [Validators.required]],\r\n      codMaterial: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.loaderNavbar.emit(true);\r\n      this.searching = true;\r\n      this.materiaisLista = [];\r\n      this.materiaisListaLoaded = false;\r\n      this.materiaisListaEmpty = false;\r\n\r\n      let params = {\r\n        codClasse: this.form.value.codClasse,\r\n        tipoMaterial: 'Distribuidora',\r\n      };\r\n\r\n      if (this.form.value.codMaterial !== 0) {\r\n        Object.assign(params, {\r\n          codMaterial: this.form.value.codMaterial,\r\n          tipoMaterial: 'Distribuidora',\r\n        });\r\n      }\r\n\r\n      this.service\r\n        .getMateriaisTid(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.firstSearch = true;\r\n            this.searching = false;\r\n            this.loaderNavbar.emit(false);\r\n            this.materiaisListaLoaded = true;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.materiaisLista = response.data;\r\n\r\n              if (this.materiaisLista.length > 9) {\r\n                this.tableConfigMateriais.fixedHeader = true;\r\n              } else {\r\n                this.tableConfigMateriais.fixedHeader = false;\r\n              }\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n              this.materiaisListaEmpty = true;\r\n            } else {\r\n              this.pnotifyService.error();\r\n              this.materiaisListaEmpty = true;\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n        });\r\n    }\r\n  }\r\n\r\n  onCheckMaterial(material: any): void {\r\n    this.setMaterialSelecionado(material.codigoMaterial);\r\n    this.materialPrincipal.emit(material);\r\n  }\r\n\r\n  setMaterialSelecionado(codMaterial: number): void {\r\n    this.codMaterialSelecionado = codMaterial;\r\n  }\r\n\r\n  onChangeLinha(codLinha: number) {\r\n    this.form.controls.codClasse.reset();\r\n    this.form.controls.codClasse.setValue(null);\r\n    this.form.controls.codClasse.enable();\r\n    this.form.controls.codClasse.setValidators([Validators.required]);\r\n    this.form.controls.codClasse.updateValueAndValidity();\r\n\r\n    this.form.controls.codMaterial.reset();\r\n    this.form.controls.codMaterial.disable();\r\n    this.form.controls.codMaterial.setValue(null);\r\n    this.form.controls.codMaterial.updateValueAndValidity();\r\n\r\n    this.filteredClasses = this.classes.filter(\r\n      (value: any) => value.idLinha == codLinha\r\n    );\r\n  }\r\n\r\n  onChangeClasse(codClasse: number) {\r\n    this.form.controls.codMaterial.reset();\r\n    this.form.controls.codMaterial.enable();\r\n    this.form.controls.codMaterial.setValue(null);\r\n    this.form.controls.codMaterial.updateValueAndValidity();\r\n\r\n    this.getMateriais(codClasse);\r\n  }\r\n\r\n  getMateriais(codClasse: number): void {\r\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\r\n      this.materiaisLoader = true;\r\n      this.materiais = [];\r\n\r\n      this.service\r\n        .getMateriaisTid({\r\n          codClasse: codClasse,\r\n          tipoMaterial: 'Distribuidora',\r\n        })\r\n        .pipe(\r\n          finalize(() => {\r\n            this.materiaisLoader = false;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: JsonResponse) => {\r\n            if (response.success === true) {\r\n              this.materiais = response.data;\r\n\r\n              this.materiais.unshift({\r\n                codigoMaterial: 0,\r\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\r\n              });\r\n\r\n              this.form.controls.codMaterial.setValue(0);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// Modules\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialIntegracaoDagdaMateriaisTemplatesMaterialPrincipalComponent } from './material-principal/material-principal.component';\r\n\r\n// Components\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialIntegracaoDagdaMateriaisTemplatesMaterialPrincipalComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    TemplatesModule,\r\n  ],\r\n  exports: [\r\n    ComercialIntegracaoDagdaMateriaisTemplatesMaterialPrincipalComponent,\r\n  ],\r\n})\r\nexport class ComercialIntegracoesDagdaMateriaisTemplatesModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ComercialService } from '../../../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialIntegracoesServicosIntegracaoMateriaisComponent {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo`;\r\n  private readonly API = `http://23.254.204.187/api/comercial/`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) {}\r\n\r\n  getAssociacao(param: any) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/comercial/integracoes/dagda/associacao`,\r\n      {\r\n        params: param,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getDetalhes(param: any) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/comercial/integracoes/dagda/detalhes`,\r\n      {\r\n        params: param,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.BASE_URL}/common/v2/linhas`, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getClasses(param) {\r\n    return this.http.get(`${this.BASE_URL}/common/v2/classes`, {\r\n      params: param,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getMateriais(param) {\r\n    return this.http.get(`${this.BASE_URL}/common/v2/materiais`, {\r\n      params: param,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  onSubmit(param) {\r\n    if (param.codigoMaterial) {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/comercial/integracoes/dagda/associacao`,\r\n        param,\r\n        { observe: 'response' }\r\n      );\r\n    } else {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/comercial/integracoes/dagda/associacao-altera-integracao`,\r\n        param,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n  }\r\n\r\n  deleteAssociacao(param: any) {\r\n    return this.http.post(\r\n      `${this.BASE_URL}/comercial/integracoes/dagda/delete-associacao`,\r\n      param,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  getMateriaisDagda(param?) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/comercial/integracoes/dagda/materiais-dagda`,\r\n      {\r\n        params: param,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getFilterValues(): Observable<Object | JsonResponse> {\r\n    const linhas = this.tidSoftwareService.getLinhas();\r\n    const classes = this.comercialService.getClasses(null);\r\n\r\n    return forkJoin([linhas, classes]);\r\n  }\r\n\r\n  getMateriaisTid(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","export default \"<div class=\\\"row mb-2\\\">\\r\\n  <div class=\\\"col mt-auto\\\">\\r\\n    <div class=\\\"mtc-title mb-0\\\">Pesquisar material principal</div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"d-flex justify-content-end\\\">\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n        (click)=\\\"onFilter()\\\"\\r\\n        [disabled]=\\\"searching === true\\\">\\r\\n        <i class=\\\"fas fa-search\\\"></i>\\r\\n        <span>Pesquisar</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<advanced-filter>\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label for=\\\"codLinha\\\">Linha</label>\\r\\n        <ng-select\\r\\n          [searchable]=\\\"true\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          [items]=\\\"linhas\\\"\\r\\n          formControlName=\\\"codLinha\\\"\\r\\n          [virtualScroll]=\\\"true\\\"\\r\\n          labelForId=\\\"codLinha\\\"\\r\\n          bindLabel=\\\"descricao\\\"\\r\\n          bindValue=\\\"id\\\"\\r\\n          (change)=\\\"onChangeLinha($event.id)\\\">\\r\\n        </ng-select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label for=\\\"codClasse\\\">Classe</label>\\r\\n        <ng-select\\r\\n          [searchable]=\\\"true\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          [items]=\\\"filteredClasses\\\"\\r\\n          formControlName=\\\"codClasse\\\"\\r\\n          [virtualScroll]=\\\"true\\\"\\r\\n          labelForId=\\\"codClasse\\\"\\r\\n          bindLabel=\\\"nomeClasse\\\"\\r\\n          bindValue=\\\"idClasse\\\"\\r\\n          (change)=\\\"onChangeClasse($event.idClasse)\\\">\\r\\n        </ng-select>\\r\\n      </div>\\r\\n    </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-12\\\">\\r\\n        <label for=\\\"codMaterial\\\">Material</label>\\r\\n        <ng-select\\r\\n          [searchable]=\\\"true\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          [items]=\\\"materiais\\\"\\r\\n          formControlName=\\\"codMaterial\\\"\\r\\n          [virtualScroll]=\\\"true\\\"\\r\\n          labelForId=\\\"codMaterial\\\"\\r\\n          bindLabel=\\\"codigoDescricaoMaterial\\\"\\r\\n          bindValue=\\\"codigoMaterial\\\"\\r\\n          [loading]=\\\"materiaisLoader\\\"\\r\\n          loadingText=\\\"Carregando...\\\">\\r\\n        </ng-select>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</advanced-filter>\\r\\n<div *ngIf=\\\"materiaisLista.length > 0\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"mtc-title\\\">Selecione o material principal</div>\\r\\n      <custom-table [config]=\\\"tableConfigMateriais\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 5%\\\"></th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let material of materiaisLista\\\" [class.table-active]=\\\"material.codigoMaterial == codMaterialSelecionado\\\">\\r\\n            <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n              <btn-icon\\r\\n                [icon]=\\\"material.codigoMaterial == codMaterialSelecionado ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                size=\\\"small\\\"\\r\\n                (click)=\\\"onCheckMaterial(material)\\\">\\r\\n              </btn-icon>\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              style=\\\"width: 95%\\\"\\r\\n              (click)=\\\"onCheckMaterial(material)\\\">\\r\\n              {{ material.codigoDescricaoMaterial | uppercase }}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <message\\r\\n      icon=\\\"fas fa-cog fa-spin\\\"\\r\\n      text=\\\"Estamos pesquisando os materiais para você...\\\">\\r\\n    </message>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"searching === false\\\">\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"materiaisListaEmpty && materiaisListaLoaded\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <message\\r\\n        icon=\\\"fas fa-box-open\\\"\\r\\n        text=\\\"Nenhuma informação encontrada\\\">\\r\\n      </message>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <message\\r\\n        icon=\\\"fas fa-search\\\"\\r\\n        text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\r\\n      </message>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}