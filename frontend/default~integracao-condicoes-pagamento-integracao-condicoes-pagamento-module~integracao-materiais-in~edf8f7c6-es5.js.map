{"version":3,"sources":["webpack:///src/app/modules/comercial/integracoes/dagda/templates/material-principal/material-principal.component.scss","webpack:///src/app/modules/comercial/integracoes/dagda/templates/material-principal/material-principal.component.ts","webpack:///src/app/modules/comercial/integracoes/dagda/templates/templates.module.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/integracoes/dagda/services/associacao-materiais.service.ts","webpack:///src/app/modules/comercial/integracoes/dagda/templates/material-principal/material-principal.component.html","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialIntegracaoDagdaMateriaisTemplatesMaterialPrincipalComponent","formBuilder","pnotifyService","comercialService","service","linhas","classes","loaderNavbar","materialPrincipal","tableConfigMateriais","fixedHeader","bodyHeight","filteredClasses","materiais","searching","firstSearch","materiaisLista","materiaisListaLoaded","materiaisListaEmpty","codMaterialSelecionado","getPNotify","setFormBuilder","events","limparMaterialSelecionado","currentValue","setMaterialSelecionado","form","group","codLinha","required","codClasse","codMaterial","valid","emit","params","value","tipoMaterial","Object","assign","getMateriaisTid","pipe","subscribe","next","response","hasOwnProperty","success","data","length","error","mensagem","material","codigoMaterial","controls","reset","setValue","enable","setValidators","updateValueAndValidity","disable","filter","idLinha","getMateriais","materiaisLoader","unshift","codigoDescricaoMaterial","selector","template","ComercialIntegracoesDagdaMateriaisTemplatesModule","declarations","imports","exports","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","providedIn","ComercialIntegracoesServicosIntegracaoMateriaisComponent","http","tidSoftwareService","BASE_URL","API","param","get","observe","post","getLinhas","getClasses","httpParams","append","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"default~integracao-condicoes-pagamento-integracao-condicoes-pagamento-module~integracao-materiais-in~edf8f7c6-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2RhZ2RhL3RlbXBsYXRlcy9tYXRlcmlhbC1wcmluY2lwYWwvbWF0ZXJpYWwtcHJpbmNpcGFsLmNvbXBvbmVudC5zY3NzIn0= */\";","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\n\n// Interfaces\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { ComercialIntegracoesServicosIntegracaoMateriaisComponent } from '../../services/associacao-materiais.service';\n\n@Component({\n  selector: 'comercial-integracao_dagda-materiais-templates-material-principal',\n  templateUrl: './material-principal.component.html',\n  styleUrls: ['./material-principal.component.scss'],\n})\nexport class ComercialIntegracaoDagdaMateriaisTemplatesMaterialPrincipalComponent\n  implements OnInit, OnChanges\n{\n  @Input('linhas') linhas: any[] = [];\n  @Input('classes') classes: any[] = [];\n\n  @Input('limparMaterialSelecionado') limparMaterialSelecionado: boolean;\n\n  @Output('loaderNavbar') loaderNavbar: EventEmitter<boolean> =\n    new EventEmitter();\n  @Output('materialPrincipal') materialPrincipal: EventEmitter<object> =\n    new EventEmitter();\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  form: FormGroup;\n\n  filteredClasses: Array<any> = [];\n  materiais: Array<any> = [];\n  materiaisLoader: boolean;\n\n  searching = false;\n  firstSearch = false;\n\n  materiaisLista: Array<any> = [];\n  materiaisListaLoaded = false;\n  materiaisListaEmpty = false;\n\n  codMaterialSelecionado: number = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private comercialService: ComercialService,\n    private service: ComercialIntegracoesServicosIntegracaoMateriaisComponent\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.setFormBuilder();\n  }\n\n  ngOnChanges(events: SimpleChanges): void {\n    if (\n      events.limparMaterialSelecionado &&\n      events.limparMaterialSelecionado.currentValue === true\n    ) {\n      this.setMaterialSelecionado(null);\n    }\n  }\n\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      codLinha: [null, [Validators.required]],\n      codClasse: [null, [Validators.required]],\n      codMaterial: [null, [Validators.required]],\n    });\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.loaderNavbar.emit(true);\n      this.searching = true;\n      this.materiaisLista = [];\n      this.materiaisListaLoaded = false;\n      this.materiaisListaEmpty = false;\n\n      let params = {\n        codClasse: this.form.value.codClasse,\n        tipoMaterial: 'Distribuidora',\n      };\n\n      if (this.form.value.codMaterial !== 0) {\n        Object.assign(params, {\n          codMaterial: this.form.value.codMaterial,\n          tipoMaterial: 'Distribuidora',\n        });\n      }\n\n      this.service\n        .getMateriaisTid(params)\n        .pipe(\n          finalize(() => {\n            this.firstSearch = true;\n            this.searching = false;\n            this.loaderNavbar.emit(false);\n            this.materiaisListaLoaded = true;\n          })\n        )\n        .subscribe({\n          next: (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.materiaisLista = response.data;\n\n              if (this.materiaisLista.length > 9) {\n                this.tableConfigMateriais.fixedHeader = true;\n              } else {\n                this.tableConfigMateriais.fixedHeader = false;\n              }\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n              this.materiaisListaEmpty = true;\n            } else {\n              this.pnotifyService.error();\n              this.materiaisListaEmpty = true;\n            }\n          },\n          error: (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n        });\n    }\n  }\n\n  onCheckMaterial(material: any): void {\n    this.setMaterialSelecionado(material.codigoMaterial);\n    this.materialPrincipal.emit(material);\n  }\n\n  setMaterialSelecionado(codMaterial: number): void {\n    this.codMaterialSelecionado = codMaterial;\n  }\n\n  onChangeLinha(codLinha: number) {\n    this.form.controls.codClasse.reset();\n    this.form.controls.codClasse.setValue(null);\n    this.form.controls.codClasse.enable();\n    this.form.controls.codClasse.setValidators([Validators.required]);\n    this.form.controls.codClasse.updateValueAndValidity();\n\n    this.form.controls.codMaterial.reset();\n    this.form.controls.codMaterial.disable();\n    this.form.controls.codMaterial.setValue(null);\n    this.form.controls.codMaterial.updateValueAndValidity();\n\n    this.filteredClasses = this.classes.filter(\n      (value: any) => value.idLinha == codLinha\n    );\n  }\n\n  onChangeClasse(codClasse: number) {\n    this.form.controls.codMaterial.reset();\n    this.form.controls.codMaterial.enable();\n    this.form.controls.codMaterial.setValue(null);\n    this.form.controls.codMaterial.updateValueAndValidity();\n\n    this.getMateriais(codClasse);\n  }\n\n  getMateriais(codClasse: number): void {\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\n      this.materiaisLoader = true;\n      this.materiais = [];\n\n      this.service\n        .getMateriaisTid({\n          codClasse: codClasse,\n          tipoMaterial: 'Distribuidora',\n        })\n        .pipe(\n          finalize(() => {\n            this.materiaisLoader = false;\n          })\n        )\n        .subscribe({\n          next: (response: JsonResponse) => {\n            if (response.success === true) {\n              this.materiais = response.data;\n\n              this.materiais.unshift({\n                codigoMaterial: 0,\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\n              });\n\n              this.form.controls.codMaterial.setValue(0);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          error: (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n        });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// Modules\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialIntegracaoDagdaMateriaisTemplatesMaterialPrincipalComponent } from './material-principal/material-principal.component';\n\n// Components\n\n@NgModule({\n  declarations: [\n    ComercialIntegracaoDagdaMateriaisTemplatesMaterialPrincipalComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    TemplatesModule,\n  ],\n  exports: [\n    ComercialIntegracaoDagdaMateriaisTemplatesMaterialPrincipalComponent,\n  ],\n})\nexport class ComercialIntegracoesDagdaMateriaisTemplatesModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { Observable, forkJoin } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialIntegracoesServicosIntegracaoMateriaisComponent {\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(\n    private http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getAssociacao(param: any) {\n    return this.http.get(\n      `${this.BASE_URL}/comercial/integracoes/dagda/associacao`,\n      {\n        params: param,\n        observe: 'response',\n      }\n    );\n  }\n\n  getDetalhes(param: any) {\n    return this.http.get(\n      `${this.BASE_URL}/comercial/integracoes/dagda/detalhes`,\n      {\n        params: param,\n        observe: 'response',\n      }\n    );\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.BASE_URL}/common/v2/linhas`, {\n      observe: 'response',\n    });\n  }\n\n  getClasses(param) {\n    return this.http.get(`${this.BASE_URL}/common/v2/classes`, {\n      params: param,\n      observe: 'response',\n    });\n  }\n\n  getMateriais(param) {\n    return this.http.get(`${this.BASE_URL}/common/v2/materiais`, {\n      params: param,\n      observe: 'response',\n    });\n  }\n\n  onSubmit(param) {\n    if (param.codigoMaterial) {\n      return this.http.post(\n        `${this.BASE_URL}/comercial/integracoes/dagda/associacao`,\n        param,\n        { observe: 'response' }\n      );\n    } else {\n      return this.http.post(\n        `${this.BASE_URL}/comercial/integracoes/dagda/associacao-altera-integracao`,\n        param,\n        { observe: 'response' }\n      );\n    }\n  }\n\n  deleteAssociacao(param: any) {\n    return this.http.post(\n      `${this.BASE_URL}/comercial/integracoes/dagda/delete-associacao`,\n      param,\n      { observe: 'response' }\n    );\n  }\n\n  getMateriaisDagda(param?) {\n    return this.http.get(\n      `${this.BASE_URL}/comercial/integracoes/dagda/materiais-dagda`,\n      {\n        params: param,\n        observe: 'response',\n      }\n    );\n  }\n\n  getFilterValues(): Observable<Object | JsonResponse> {\n    const linhas = this.tidSoftwareService.getLinhas();\n    const classes = this.comercialService.getClasses(null);\n\n    return forkJoin([linhas, classes]);\n  }\n\n  getMateriaisTid(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n}\n","export default \"<div class=\\\"row mb-2\\\">\\n  <div class=\\\"col mt-auto\\\">\\n    <div class=\\\"mtc-title mb-0\\\">Pesquisar material principal</div>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"d-flex justify-content-end\\\">\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-sm btn-outline-secondary\\\"\\n        (click)=\\\"onFilter()\\\"\\n        [disabled]=\\\"searching === true\\\">\\n        <i class=\\\"fas fa-search\\\"></i>\\n        <span>Pesquisar</span>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n<advanced-filter>\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label for=\\\"codLinha\\\">Linha</label>\\n        <ng-select\\n          [searchable]=\\\"true\\\"\\n          [clearable]=\\\"false\\\"\\n          [items]=\\\"linhas\\\"\\n          formControlName=\\\"codLinha\\\"\\n          [virtualScroll]=\\\"true\\\"\\n          labelForId=\\\"codLinha\\\"\\n          bindLabel=\\\"descricao\\\"\\n          bindValue=\\\"id\\\"\\n          (change)=\\\"onChangeLinha($event.id)\\\">\\n        </ng-select>\\n      </div>\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label for=\\\"codClasse\\\">Classe</label>\\n        <ng-select\\n          [searchable]=\\\"true\\\"\\n          [clearable]=\\\"false\\\"\\n          [items]=\\\"filteredClasses\\\"\\n          formControlName=\\\"codClasse\\\"\\n          [virtualScroll]=\\\"true\\\"\\n          labelForId=\\\"codClasse\\\"\\n          bindLabel=\\\"nomeClasse\\\"\\n          bindValue=\\\"idClasse\\\"\\n          (change)=\\\"onChangeClasse($event.idClasse)\\\">\\n        </ng-select>\\n      </div>\\n    </div>\\n      <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-lg-12\\\">\\n        <label for=\\\"codMaterial\\\">Material</label>\\n        <ng-select\\n          [searchable]=\\\"true\\\"\\n          [clearable]=\\\"false\\\"\\n          [items]=\\\"materiais\\\"\\n          formControlName=\\\"codMaterial\\\"\\n          [virtualScroll]=\\\"true\\\"\\n          labelForId=\\\"codMaterial\\\"\\n          bindLabel=\\\"codigoDescricaoMaterial\\\"\\n          bindValue=\\\"codigoMaterial\\\"\\n          [loading]=\\\"materiaisLoader\\\"\\n          loadingText=\\\"Carregando...\\\">\\n        </ng-select>\\n      </div>\\n    </div>\\n  </form>\\n</advanced-filter>\\n<div *ngIf=\\\"materiaisLista.length > 0\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"mtc-title\\\">Selecione o material principal</div>\\n      <custom-table [config]=\\\"tableConfigMateriais\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 5%\\\"></th>\\n            <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let material of materiaisLista\\\" [class.table-active]=\\\"material.codigoMaterial == codMaterialSelecionado\\\">\\n            <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n              <btn-icon\\n                [icon]=\\\"material.codigoMaterial == codMaterialSelecionado ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                size=\\\"small\\\"\\n                (click)=\\\"onCheckMaterial(material)\\\">\\n              </btn-icon>\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              style=\\\"width: 95%\\\"\\n              (click)=\\\"onCheckMaterial(material)\\\">\\n              {{ material.codigoDescricaoMaterial | uppercase }}\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\n  <div class=\\\"col\\\">\\n    <message\\n      icon=\\\"fas fa-cog fa-spin\\\"\\n      text=\\\"Estamos pesquisando os materiais para você...\\\">\\n    </message>\\n  </div>\\n</div>\\n<div *ngIf=\\\"searching === false\\\">\\n  <div class=\\\"row\\\" *ngIf=\\\"materiaisListaEmpty && materiaisListaLoaded\\\">\\n    <div class=\\\"col\\\">\\n      <message\\n        icon=\\\"fas fa-box-open\\\"\\n        text=\\\"Nenhuma informação encontrada\\\">\\n      </message>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\n    <div class=\\\"col\\\">\\n      <message\\n        icon=\\\"fas fa-search\\\"\\n        text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\n      </message>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}