{"version":3,"sources":["./src/app/modules/comercial/cadastros/materiais/combos/lista/lista.component.ts","./src/app/modules/comercial/cadastros/materiais/combos/lista/lista.component.html","./src/app/modules/comercial/cadastros/materiais/combos/formulario/formulario.component.scss","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/cadastros/materiais/combos/lista/lista.component.scss","./src/app/modules/comercial/cadastros/materiais/combos/combos.module.ts","./src/app/guards/form-deactivate.guard.ts","./src/app/modules/comercial/cadastros/materiais/combos/formulario/formulario.component.ts","./src/app/modules/comercial/cadastros/materiais/combos/combos-routing.module.ts","./src/app/modules/comercial/cadastros/materiais/combos/formulario/formulario.component.html","./src/app/modules/comercial/cadastros/materiais/combos/formulario/formulario-resolver.guard.ts","./src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":[],"mappings":"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","file":"materiais-combos-combos-module-es2015.js","sourcesContent":["import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription, Observable, EMPTY } from 'rxjs';\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { ComercialCadastrosMateriaisComboService } from '../combos.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { ICombo, IMateriaisCombo } from '../models/combo';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-combos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisComboListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'codMaterial';\r\n  orderType = 'ASC';\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n  filteredClasses: Array<any> = [];\r\n  materiais: Array<any> = [];\r\n  materiaisLoader: boolean;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: ICombo[] = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  comboSelecionado: ICombo;\r\n  materiaisAssociados: IMateriaisCombo[] = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private detailPanelService: DetailPanelService,\r\n    private comercialService: ComercialService,\r\n    private materiaisComboService: ComercialCadastrosMateriaisComboService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFilterValues();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Combos de materiais');\r\n    this.onDetailPanelEmitter();\r\n    this.setComboSelecionado();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Combos de materiais',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.materiaisComboService\r\n      .getFilterValues()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n\r\n          this.checkValuesLinhaClasse();\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n\r\n          this.linhas.unshift({\r\n            id: 0,\r\n            descricao: 'EXIBIR TODOS',\r\n          });\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n\r\n        if (response[1].responseCode === 200) {\r\n          this.classes = response[1].result;\r\n\r\n          this.filteredClasses.unshift({\r\n            idClasse: 0,\r\n            nomeClasse: 'EXIBIR TODOS',\r\n          });\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  onChangeLinha(codLinha: number, reset: boolean) {\r\n    if (reset) {\r\n      if (this.form.value.codLinha !== 0) {\r\n        this.form.controls.codClasse.enable();\r\n        this.form.controls.codClasse.setValue(0);\r\n      } else {\r\n        this.form.controls.codClasse.disable();\r\n        this.form.controls.codClasse.setValue(null);\r\n      }\r\n\r\n      this.form.controls.codClasse.updateValueAndValidity();\r\n\r\n      this.materiais = [];\r\n      this.form.controls.codMaterial.reset();\r\n      this.form.controls.codMaterial.disable();\r\n      this.form.controls.codMaterial.setValue(null);\r\n      this.form.controls.codMaterial.updateValueAndValidity();\r\n    }\r\n\r\n    this.filteredClasses = this.classes.filter(\r\n      (value: any) => value.idLinha == codLinha\r\n    );\r\n\r\n    this.filteredClasses.unshift({\r\n      idClasse: 0,\r\n      nomeClasse: 'EXIBIR TODOS',\r\n    });\r\n  }\r\n\r\n  onChangeClasse(codClasse: number, reset: boolean, src: string) {\r\n    if (reset) {\r\n      this.form.controls.codMaterial.reset();\r\n      this.form.controls.codMaterial.enable();\r\n      this.form.controls.codMaterial.setValue(0);\r\n      this.form.controls.codMaterial.updateValueAndValidity();\r\n    }\r\n\r\n    this.getMateriais(codClasse, src);\r\n  }\r\n\r\n  getMateriais(codClasse: number, src: string): void {\r\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\r\n      if (src === 'application') {\r\n        this.loaderNavbar = true;\r\n      }\r\n      this.materiaisLoader = true;\r\n      this.materiais = [];\r\n\r\n      const params = {\r\n        codClasse: codClasse,\r\n        tipoMaterial: 'Distribuidora',\r\n        comercializa: 0,\r\n      };\r\n\r\n      this.comercialService\r\n        .getMateriais(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            if (src === 'application') {\r\n              this.loaderNavbar = false;\r\n            }\r\n            this.materiaisLoader = false;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.materiais = response.data;\r\n\r\n              this.materiais.unshift({\r\n                codigoMaterial: 0,\r\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\r\n              });\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      codLinha: [formValue.codLinha],\r\n      codClasse: [formValue.codClasse],\r\n      codMaterial: [formValue.codMaterial],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      codLinha: 0,\r\n      codClasse: 0,\r\n      codMaterial: 0,\r\n      codSituacao: '',\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  checkValuesLinhaClasse(): void {\r\n    if (this.form.value.codLinha !== 0) {\r\n      this.onChangeLinha(this.form.value.codLinha, false);\r\n    }\r\n\r\n    if (this.form.value.codClasse !== 0) {\r\n      this.onChangeClasse(this.form.value.codClasse, false, 'verify');\r\n    } else {\r\n      this.form.controls.codClasse.disable();\r\n      this.form.controls.codMaterial.disable();\r\n\r\n      this.form.controls.codClasse.updateValueAndValidity();\r\n      this.form.controls.codMaterial.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  setComboSelecionado(): void {\r\n    this.comboSelecionado = {\r\n      codCombo: null,\r\n      codLinha: null,\r\n      codClasse: null,\r\n      codMaterial: null,\r\n      codSituacao: null,\r\n      nomeMaterial: null,\r\n      quantidade: null,\r\n      nomeUsuario: null,\r\n    };\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.codLinha) {\r\n      params.codLinha = this.form.value.codLinha;\r\n    }\r\n\r\n    if (this.form.value.codClasse) {\r\n      params.codClasse = this.form.value.codClasse;\r\n    }\r\n\r\n    if (this.form.value.codMaterial) {\r\n      params.codMaterial = this.form.value.codMaterial;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.pagina = this.form.value.pagina;\r\n    params.registros = this.form.value.registros;\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.materiaisComboService\r\n      .getListaCombos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.totalItems = this.dados[0]['total'];\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(combo: ICombo): string {\r\n    let borderClass: string;\r\n\r\n    if (combo.codSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    } else if (combo.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent) {\r\n    if (this.form.value.pagina != event.page) {\r\n      this.detailPanelService.hide();\r\n      this.setComboSelecionado();\r\n      this.form.value.pagina = event.page;\r\n      this.onFilter();\r\n\r\n      this.scrollToFilter.nativeElement.scrollIntoView({\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }\r\n\r\n  onDetails(combo: ICombo): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Materiais associados (${combo.nomeMaterial})`;\r\n    this.setComboSelecionado();\r\n    this.comboSelecionado = combo;\r\n    this.materiaisAssociados = [];\r\n\r\n    this.materiaisComboService\r\n      .getAssociacoesMateriais(combo.codCombo)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.materiaisAssociados = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onEdit(combo: ICombo): void {\r\n    this.router.navigate(['../editar', combo.codCombo], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, combo: ICombo): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateCombo(index, combo) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(combo);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dados[index].codSituacao = 0;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateCombo(index: number, combo: ICombo): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 1;\r\n\r\n    return this.materiaisComboService.activateCombo(combo.codCombo);\r\n  }\r\n\r\n  onInactivate(index: number, combo: ICombo): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateCombo(index, combo) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(combo);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dados[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateCombo(index: number, combo: ICombo): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 0;\r\n\r\n    return this.materiaisComboService.inactivateCombo(combo.codCombo);\r\n  }\r\n\r\n  refreshMainData(combo: ICombo): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (combo.codCombo === this.dados[i].codCombo) {\r\n        this.dados[i].codSituacao = combo.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Combos de materiais\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codLinha\\\">Linha</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"linhas\\\"\\r\\n                formControlName=\\\"codLinha\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codLinha\\\"\\r\\n                bindLabel=\\\"descricao\\\"\\r\\n                bindValue=\\\"id\\\"\\r\\n                (change)=\\\"onChangeLinha($event.id, true)\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codClasse\\\">Classe</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"filteredClasses\\\"\\r\\n                formControlName=\\\"codClasse\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codClasse\\\"\\r\\n                bindLabel=\\\"nomeClasse\\\"\\r\\n                bindValue=\\\"idClasse\\\"\\r\\n                (change)=\\\"onChangeClasse($event.idClasse, true, 'application')\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"codMaterial\\\">Material</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"materiais\\\"\\r\\n                formControlName=\\\"codMaterial\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codMaterial\\\"\\r\\n                bindLabel=\\\"codigoDescricaoMaterial\\\"\\r\\n                bindValue=\\\"codigoMaterial\\\"\\r\\n                [loading]=\\\"materiaisLoader\\\"\\r\\n                loadingText=\\\"Carregando...\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"0\\\">Inativos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Código\\\"\\r\\n                [active]=\\\"orderBy == 'codMaterial'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codMaterial')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Nome material\\\"\\r\\n                [active]=\\\"orderBy == 'nomeMaterial'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeMaterial')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Quantidade</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr\\r\\n            *ngFor=\\\"let material of dados; let i = index;\\\"\\r\\n            [class.table-active]=\\\"material.codMaterial == comboSelecionado.codMaterial && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(material)\\\"\\r\\n              (click)=\\\"onDetails(material)\\\">\\r\\n              {{ material.codMaterial }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(material)\\\">\\r\\n              {{ material.nomeMaterial | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              (click)=\\\"onDetails(material)\\\">\\r\\n              {{ material.quantidade | number:'1.3-3' }} TON\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(material)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"material.nomeUsuario === null\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"material.nomeUsuario !== null\\\">\\r\\n                {{ material.nomeUsuario | uppercase }}\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <span *ngIf=\\\"material.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, material)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"material.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, material)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(material)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiaisAssociados.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n              <th scope=\\\"col\\\">Material</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Qtde.</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let material of materiaisAssociados\\\">\\r\\n              <td class=\\\"text-center\\\">{{ material.codMaterial }}</td>\\r\\n              <td>{{ material.nomeMaterial | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ material.quantidade | number:'1.3-3' }} {{ material.unidade | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY29tYm9zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY29tYm9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosMateriaisComboRoutingModule } from './combos-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialCadastrosMateriaisTemplatesModule } from '../templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisComboListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisComboFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisComboService } from './combos.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosMateriaisComboListaComponent,\r\n    ComercialCadastrosMateriaisComboFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialCadastrosMateriaisComboRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ComercialCadastrosMateriaisTemplatesModule,\r\n  ],\r\n  providers: [PNotifyService, ComercialCadastrosMateriaisComboService],\r\n})\r\nexport class ComercialCadastrosMateriaisComboModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ng-brazil\r\nimport { MASKS } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisComboService } from '../combos.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { ICombo, IMateriaisCombo } from '../models/combo';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-combos-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisComboFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = MASKS;\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  action: string;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm = false;\r\n\r\n  showMateriais = true;\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n\r\n  limparMaterialPrincipal: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private materiaisComboService: ComercialCadastrosMateriaisComboService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private comercialService: ComercialService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFilterValues();\r\n    this.setFormBuilder();\r\n    this.titleService.setTitle('Cadastro de combo de materiais');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar combo de materiais';\r\n        this.action = 'update';\r\n      } else {\r\n        this.appTitle = 'Novo combo de materiais';\r\n        this.action = 'create';\r\n      }\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Combos de materiais',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/combos/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.materiaisComboService\r\n      .getFilterValues()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n\r\n        if (response[1].responseCode === 200) {\r\n          this.classes = response[1].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\r\n\r\n    if (resolver.success === true) {\r\n      const detalhes: ICombo = resolver.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codCombo: [detalhes.codCombo],\r\n        codLinha: [detalhes.codLinha],\r\n        codClasse: [detalhes.codClasse],\r\n        codMaterial: [{ value: detalhes.codMaterial, disabled: true }],\r\n        nomeMaterial: [{ value: detalhes.nomeMaterial, disabled: true }],\r\n        quantidade: [detalhes.quantidade, [Validators.required]],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\r\n        assocMateriais: this.formBuilder.array([]),\r\n      });\r\n\r\n      this.setMateriais(detalhes.materiais);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  setMateriais(materiais: IMateriaisCombo[]): void {\r\n    if (materiais.length > 0) {\r\n      for (let i = 0; i < materiais.length; i++) {\r\n        this.onAddMaterial(materiais[i], false, 'application');\r\n      }\r\n    }\r\n  }\r\n\r\n  get assocMateriais(): FormArray {\r\n    return this.form.get('assocMateriais') as FormArray;\r\n  }\r\n\r\n  /**\r\n   * @source = 'application' || 'user'\r\n   */\r\n  onAddMaterial(\r\n    material: IMateriaisCombo,\r\n    manipulateForm: boolean,\r\n    source: string\r\n  ): void {\r\n    if (this.checkMaterialExists(material) === false) {\r\n      this.assocMateriais.push(\r\n        this.formBuilder.group({\r\n          codAssociacao: [material.codAssociacao],\r\n          codMaterial: [material.codMaterial],\r\n          nomeMaterial: [material.nomeMaterial],\r\n          quantidade: [source === 'user' ? 0 : material.quantidade],\r\n          source: [source],\r\n        })\r\n      );\r\n\r\n      if (this.form.value.assocMateriais.length > 9) {\r\n        if (this.tableConfigAssocMateriais.fixedHeader === false) {\r\n          this.showMateriais = false;\r\n          this.tableConfigAssocMateriais.fixedHeader = true;\r\n\r\n          setTimeout(() => {\r\n            this.showMateriais = true;\r\n          }, 1);\r\n        }\r\n      }\r\n\r\n      if (manipulateForm) {\r\n        this.form.markAsTouched();\r\n        this.form.markAsDirty();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkMaterialExists(material: IMateriaisCombo): boolean {\r\n    return this.form.value.assocMateriais.some((el: any) => {\r\n      return el.codMaterial === material.codMaterial;\r\n    });\r\n  }\r\n\r\n  onLimparMaterialPrincipal(): void {\r\n    this.limparMaterialPrincipal = true;\r\n    this.onInput();\r\n\r\n    this.form.controls.codMaterial.setValue(null);\r\n    this.form.controls.nomeMaterial.setValue(null);\r\n\r\n    setTimeout(() => {\r\n      this.limparMaterialPrincipal = false;\r\n    }, 100);\r\n  }\r\n\r\n  onDeleteMaterial(index: number): void {\r\n    if (this.submittingForm === false) {\r\n      this.confirmDelete().subscribe((response: boolean) =>\r\n        response ? this.deleteMaterial(index) : null\r\n      );\r\n    }\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  deleteMaterial(index: number) {\r\n    if (this.form.value.assocMateriais[index].source === 'user') {\r\n      this.assocMateriais.removeAt(index);\r\n    } else if (this.form.value.assocMateriais[index].source === 'application') {\r\n      this.loaderNavbar = true;\r\n\r\n      this.activatedRoute.params.subscribe((params: any) => {\r\n        this.materiaisComboService\r\n          .deleteAssociacao(\r\n            params.id,\r\n            this.form.value.assocMateriais[index].codAssociacao\r\n          )\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: JsonResponse) => {\r\n              if (response.success) {\r\n                this.assocMateriais.removeAt(index);\r\n                this.pnotifyService.success('Material desassociado com sucesso.');\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              if (\r\n                error.error.hasOwnProperty('mensagem') &&\r\n                (error.mensagem !== null || error.mensagem !== '')\r\n              ) {\r\n                this.pnotifyService.error(error.error.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            }\r\n          });\r\n      });\r\n    }\r\n\r\n    this.form.markAsTouched();\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.action === 'update' && this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.checkFormValidation() && this.form.valid) {\r\n        if (this.form.value.assocMateriais.length > 0) {\r\n          this.loaderNavbar = true;\r\n          this.submittingForm = true;\r\n\r\n          this.materiaisComboService\r\n            .save(this.form.getRawValue(), this.action)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.loaderNavbar = false;\r\n                this.submittingForm = false;\r\n                console.log(this.form);\r\n              })\r\n            )\r\n            .subscribe({\r\n              next: (response: any) => {\r\n                if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === true\r\n                ) {\r\n                  this.form.reset();\r\n                  this.formChanged = false;\r\n                  this.pnotifyService.success(response.mensagem);\r\n\r\n                  this.activatedRoute.params.subscribe((params: any) => {\r\n                    let navigateTo: string;\r\n\r\n                    if (params.hasOwnProperty('id')) {\r\n                      navigateTo = '../../lista';\r\n                    } else {\r\n                      navigateTo = '../lista';\r\n                    }\r\n\r\n                    this.router.navigate([navigateTo], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  });\r\n                } else if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === false\r\n                ) {\r\n                  this.pnotifyService.error(response.mensagem);\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              },\r\n              error: (error: any) => {\r\n                this.pnotifyService.error();\r\n              }\r\n            });\r\n        } else {\r\n          this.pnotifyService.notice('Associe pelo menos um material.');\r\n        }\r\n      } else {\r\n        this.pnotifyService.notice('Selecione um material.');\r\n      }\r\n    }\r\n  }\r\n\r\n  checkFormValidation(): boolean {\r\n    let isValid = true;\r\n\r\n    if (this.form.getRawValue().codMaterial === null) {\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onLoaderNavbar(event: boolean): void {\r\n    this.loaderNavbar = event;\r\n  }\r\n\r\n  materialPrincipal(material: any): void {\r\n    this.onInput();\r\n\r\n    this.form.controls.codLinha.setValue(material.codLinha);\r\n    this.form.controls.codClasse.setValue(material.codClasse);\r\n    this.form.controls.codMaterial.setValue(material.codigoMaterial);\r\n    this.form.controls.nomeMaterial.setValue(material.descricao);\r\n  }\r\n\r\n  materialAssociado(material: any): void {\r\n    this.onAddMaterial(material, true, 'user');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosMateriaisComboFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisComboListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisComboFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialCadastrosMateriaisComboListaComponent },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosMateriaisComboFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisComboFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosMateriaisComboFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisComboFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosMateriaisComboRoutingModule {}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div [hidden]=\\\"form.getRawValue().codMaterial != null\\\">\\r\\n        <comercial-cadastros-materiais-templates-material-principal\\r\\n          [linhas]=\\\"linhas\\\"\\r\\n          [classes]=\\\"classes\\\"\\r\\n          [limparMaterialSelecionado]=\\\"limparMaterialPrincipal\\\"\\r\\n          (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\r\\n          (materialPrincipal)=\\\"materialPrincipal($event)\\\">\\r\\n        </comercial-cadastros-materiais-templates-material-principal>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div [hidden]=\\\"form.getRawValue().codMaterial === null\\\">\\r\\n          <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col mt-auto\\\">\\r\\n              <div class=\\\"mtc-title mb-0\\\">Principal material do combo</div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\" *ngIf=\\\"form.getRawValue().codMaterial != null\\\">\\r\\n              <div class=\\\"d-flex justify-content-end\\\">\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                  (click)=\\\"onLimparMaterialPrincipal()\\\">\\r\\n                  <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  <span>Limpar</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codMaterial\\\">Cód. material</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"codMaterial\\\"\\r\\n                formControlName=\\\"codMaterial\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codMaterial')\\\" message=\\\"Código é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-10\\\">\\r\\n              <label for=\\\"nomeMaterial\\\">Nome material</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"nomeMaterial\\\"\\r\\n                formControlName=\\\"nomeMaterial\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"quantidade\\\">Qtde.</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"quantidade\\\"\\r\\n                formControlName=\\\"quantidade\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n                currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\"\\r\\n                [ngClass]=\\\"onFieldError('quantidade') + ' ' + onFieldRequired(form.controls.quantidade)\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('quantidade')\\\" message=\\\"Quantidade é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\"\\r\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n              </select>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <hr>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div formArrayName=\\\"assocMateriais\\\">\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length > 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"mtc-title\\\">Materiais associados ao combo</div>\\r\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 75%\\\">Material</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 20%\\\">Qtde.</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let material of assocMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <td style=\\\"width: 75%\\\">\\r\\n                      {{ form.value.assocMateriais[i].codMaterial }} - {{ form.value.assocMateriais[i].nomeMaterial | uppercase }}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        id=\\\"quantidade\\\"\\r\\n                        class=\\\"form-control text-center\\\"\\r\\n                        formControlName=\\\"quantidade\\\"\\r\\n                        currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\">\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                      <btn-icon\\r\\n                        icon=\\\"fas fa-trash\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        (click)=\\\"onDeleteMaterial(i)\\\">\\r\\n                      </btn-icon>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length === 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <message\\r\\n                icon=\\\"fas fa-exchange-alt\\\"\\r\\n                text=\\\"Nenhuma associação encontrada\\\">\\r\\n              </message>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <comercial-cadastros-materiais-templates-associacoes\\r\\n        [linhas]=\\\"linhas\\\"\\r\\n        [classes]=\\\"classes\\\"\\r\\n        [linhaSelecionada]=\\\"form.value.codLinha\\\"\\r\\n        [classeSelecionada]=\\\"form.value.codClasse\\\"\\r\\n        (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\r\\n        (materialAssociado)=\\\"materialAssociado($event)\\\">\\r\\n      </comercial-cadastros-materiais-templates-associacoes>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisComboService } from '../combos.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisComboFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private materiaisCombosService: ComercialCadastrosMateriaisComboService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.materiaisCombosService.getDetalhes(route.params.id);\r\n    }\r\n\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      mensagem: null,\r\n      data: {\r\n        codCombo: null,\r\n        codLinha: null,\r\n        codClasse: null,\r\n        codMaterial: null,\r\n        codSituacao: 1,\r\n        nomeMaterial: null,\r\n        quantidade: 0,\r\n        materiais: [],\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}