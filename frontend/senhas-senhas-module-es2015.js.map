{"version":3,"sources":["./src/app/modules/logistica/senhas/services/senhas.service.ts","./src/app/modules/logistica/senhas/cadastro/cadastro.component.html","./src/app/modules/logistica/senhas/cadastro/cadastro.component.scss","./src/app/modules/logistica/senhas/lista/lista.component.scss","./src/app/modules/logistica/senhas/cadastro/cadastro.component.ts","./src/app/modules/logistica/senhas/senhas.module.ts","./src/app/modules/logistica/senhas/lista/lista.component.html","./src/app/modules/logistica/senhas/lista/lista.component.ts","./src/app/modules/logistica/senhas/senhas-routing.module.ts"],"names":[],"mappings":"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","file":"senhas-senhas-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaSenhasService {\n\n  private readonly API = environment.API;\n  \n  constructor(\n    private http: HttpClient\n  ) {\n\n  }\n\n  getSenhas(params?){\n    return this.http.get(`${this.API}/logistica/senhas`, {\n      params: params,\n      observe: \"response\"\n    })\n  }\n\n  postSenha(params){\n    return this.http.post(`${this.API}/logistica/senhas`, params, {\n      observe: \"response\"\n    })\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\n    (click) = \\\"postSenha(form.value)\\\"\\n    >Salvar</button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" class=\\\"d-flex flex-column align-items-center\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <div class=\\\"form-group col-md-3\\\">\\n      <label for=\\\"usuario\\\">Usuário</label>\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"usuario\\\"\\n        formControlName=\\\"usuario\\\"\\n        placeholder=\\\"Digite...\\\"\\n        [ngClass]=\\\"onFieldRequired('DS_USUA')\\\"\\n        formControlName=\\\"DS_USUA\\\"\\n      />\\n      <invalid-form-control [show]=\\\"onFieldInvalid('DS_USUA')\\\" message=\\\"Usuário é obrigatório.\\\"></invalid-form-control>\\n    </div>\\n    <div class=\\\"form-group col-md-3\\\">\\n      <label for=\\\"senha\\\">Senha</label>\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"senha\\\"\\n        formControlName=\\\"senha\\\"\\n        placeholder=\\\"Digite...\\\"\\n        [ngClass]=\\\"onFieldRequired('DS_SENH')\\\"\\n        formControlName=\\\"DS_SENH\\\"\\n      />\\n      <invalid-form-control [show]=\\\"onFieldInvalid('DS_SENH')\\\" message=\\\"Senha é obrigatória.\\\"></invalid-form-control>\\n    </div>\\n    <div class=\\\"form-group col-md-3\\\">\\n      <label for=\\\"aplicacao\\\">Aplicação</label>\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"aplicacao\\\"\\n        formControlName=\\\"aplicacao\\\"\\n        placeholder=\\\"Digite...\\\"\\n        [ngClass]=\\\"onFieldRequired('DS_APLC')\\\"\\n        formControlName=\\\"DS_APLC\\\"\\n      />\\n      <invalid-form-control [show]=\\\"onFieldInvalid('DS_SENH')\\\" message=\\\"Senha é obrigatória.\\\"></invalid-form-control>\\n    </div>\\n    <div class=\\\"form-group col-md-3\\\">\\n      <label for=\\\"status\\\">Status</label>\\n      <select name=\\\"status\\\" class=\\\"form-control\\\" id=\\\"status\\\" formControlName=\\\"IN_STAT\\\">\\n        <option value=\\\"1\\\">Ativo</option>\\n        <option value=\\\"0\\\">Inativo</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group col-md-3\\\">\\n      <label for=\\\"observacao\\\">Observação</label>\\n      <textarea\\n        id=\\\"observacao\\\"\\n        rows=\\\"10\\\"\\n        formControlName=\\\"observacao\\\"\\n        placeholder=\\\"Digite...\\\"\\n        class=\\\"form-control\\\"\\n        formControlName=\\\"DS_OBSE\\\"\\n        >\\n      </textarea>\\n    </div>\\n  </form>\\n</app-body>\";","export default \"input {\\n  text-transform: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2Evc2VuaGFzL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsK0JBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3Nlbmhhcy9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0e1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZSAhaW1wb3J0YW50O1xufSJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3Nlbmhhcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute,  } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { LogisticaSenhasService } from '../services/senhas.service';\n\n@Component({\n  selector: 'logistica-senhas-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss']\n})\nexport class LogisticaSenhasCadastroComponent implements OnInit {\n\n  form: FormGroup;\n\n  appTitle: string = \"Cadastro\";\n  breadCrumbTree: any = [];\n\n  /*loading*/\n  loading = true;\n  loadingNavBar = false;\n  /*loading*/\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private pnotify: PNotifyService,\n    private senhasService: LogisticaSenhasService\n    ) { }\n\n  ngOnInit(): void {\n    this.buildForm();\n    this.registraAcesso()\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n  }\n  \n  onActivatedRoute() {\n    const params = this.activatedRoute.snapshot.params;\n    \n    if(!params.hasOwnProperty(\"id\")){\n      this.loading = false;\n      return\n    }\n\n    this.loading = true;\n\n    this.getSenhas({\"ID_LOGI_SENH\": params.id});\n\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID_LOGI_SENH: [null],\n      DS_SENH: [null],\n      DS_USUA: [null],\n      DS_APLC: [null],\n      IN_STAT: [1],\n      DS_OBSE: [null]\n    })\n  }\n\n  registraAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb() {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Logistica'\n      },\n      {\n        descricao: 'Lista de senhas',\n        routerLink: './../'\n      },\n      {\n        descricao: this.appTitle\n      }\n    ];\n  }\n\n  getSenhas(params){\n    if (!this.loading)\n      this.loadingNavBar = true;\n\n    this.senhasService\n      .getSenhas(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            const senha = response.body['data'][0];\n            this.form.patchValue(senha);\n          } else {\n            this.pnotify.notice('Nenhum resultado para sua consulta.')\n          }\n        },\n        error => {\n          try{\n            this.pnotify.error(error.error.message);\n          }catch{\n            this.pnotify.error();\n          }\n        }\n      )\n  }\n\n  postSenha(params){\n\n    this.loadingNavBar = true;\n\n    this.senhasService\n      .postSenha(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.pnotify.success(response.body[\"message\"])\n            this.location.back();\n          } else {\n            this.pnotify.notice('Nenhum resultado para sua consulta.')\n          }\n        },\n        error => {\n          try{\n            this.pnotify.error(error.error.message);\n          }catch{\n            this.pnotify.error();\n          }\n        }\n      )\n  }\n\n    // Validação de formulário\n    onFieldError(field: string) {\n      if (this.onFieldInvalid(field)) {\n        return 'is-invalid';\n      }\n      return '';\n    }\n  \n    onFieldInvalid(field: any) {\n      field = this.form.get(field);\n      return field.status == 'INVALID' && field.touched;\n    }\n  \n    onFieldRequired(field: string) {\n      let required = false;\n      let formControl = new FormControl();\n  \n      if (this.form.controls[field].validator) {\n        let validationResult = this.form.controls[field].validator(formControl);\n        required =\n          validationResult !== null && validationResult.required === true;\n      }\n  \n      if (required) {\n        return 'is-required';\n      }\n    }\n    // Validação de formulário\n\n}\n","import { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LogisticaSenhasListaComponent } from './lista/lista.component';\nimport { LogisticaSenhasCadastroComponent } from './cadastro/cadastro.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { BsDatepickerModule, ModalModule, PaginationModule, TabsModule, TimepickerModule, TooltipModule } from 'ngx-bootstrap';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { NgBrazil } from 'ng-brazil';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { LogisticaSenhasModuleRouting } from './senhas-routing.module';\n\n@NgModule({\n  declarations: [LogisticaSenhasListaComponent, LogisticaSenhasCadastroComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    LogisticaSenhasModuleRouting,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n  ]\n})\nexport class SenhasModule { }\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"this.appTitle\\\">\\n  <button (click)=\\\"onReset()\\\">\\n    Limpar\\n  </button>\\n  <button \\n  [disabled]=\\\"form.status == 'INVALID'\\\"\\n  (click)=\\\"onSearch()\\\">\\n    Filtrar\\n  </button>\\n  <button [routerLink]=\\\"['./novo']\\\" >\\n    Novo\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <advanced-filter>\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\n      <div class=\\\"form-row\\\">\\n        <!-- <div class=\\\"form-group col\\\">\\n          <label for=\\\"dtInicial\\\">Data inicial</label>\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\n              </span>\\n            </div>\\n            <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dtInicial\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            placeholder=\\\"Digite...\\\"\\n            formControlName=\\\"DT_INIC\\\"\\n          />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"dtFinal\\\">Data Final</label>\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\n              </span>\\n            </div>\\n            <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dtFinal\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            placeholder=\\\"Digite...\\\"\\n            formControlName=\\\"DT_FINA\\\"\\n          />\\n          </div>\\n        </div> -->\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"usuario\\\">Usuário</label>\\n          <input\\n            id=\\\"usuario\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\" \\n            placeholder=\\\"DIGITE...\\\" \\n            formControlName=\\\"DS_USUA\\\"\\n            (keyup.enter)=\\\"onSearch()\\\">\\n        </div>\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"senha\\\">Senha</label>\\n          <input\\n            id=\\\"senha\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\" \\n            placeholder=\\\"DIGITE...\\\" \\n            formControlName=\\\"DS_SENH\\\"\\n            (keyup.enter)=\\\"onSearch()\\\">\\n        </div>\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"aplicacao\\\">Aplicação</label>\\n          <input\\n            id=\\\"aplicacao\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\" \\n            placeholder=\\\"DIGITE...\\\" \\n            formControlName=\\\"DS_APLC\\\"\\n            (keyup.enter)=\\\"onSearch()\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"itensPorPagina\\\">Registros</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            (change)=\\\"setItensPerPage($event); onSearch()\\\"\\n            formControlName=\\\"TT_REGI_PAGI\\\"\\n            >\\n            <option value=\\\"10\\\">10</option>\\n            <option value=\\\"25\\\">25</option>\\n            <option value=\\\"50\\\">50</option>\\n            <option value=\\\"100\\\">100</option>\\n            <option value=\\\"250\\\">250</option>\\n            <option value=\\\"500\\\">500</option>\\n          </select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div  class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div>\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th class=\\\"text-center\\\">Código</th>\\n            <th class=\\\"text-center\\\">Data de cadastro</th>\\n            <th class=\\\"text-center\\\">Usuário</th>\\n            <th class=\\\"text-center\\\">Senha</th>\\n            <th class=\\\"text-center\\\">Aplicação</th>\\n            <th class=\\\"text-left\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>  \\n          <tr *ngFor=\\\"let item of senhas; let i = index\\\">\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"item.IN_STAT == 1 ? 'border-success' : 'border-danger'\\\">{{ item.ID_LOGI_SENH | number: '6.0-0'}}</td>\\n            <td class=\\\"text-center\\\">{{ item.DT_INCL | date: 'dd/MM/yyyy HH:mm'}}</td>\\n            <td class=\\\"text-center\\\">{{ item.DS_USUA}}</td>\\n            <td class=\\\"text-center text-truncate\\\">{{ item.DS_SENH }}</td>\\n            <td class=\\\"text-center text-truncate\\\">{{ item.DS_APLC }}</td>\\n            <td class=\\\"text-right\\\">\\n              <a class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./' + item.ID_LOGI_SENH]\\\" routerLinkActive=\\\"router-link-active\\\" >\\n                <i class=\\\"far fa-edit\\\"></i>\\n              </a>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n    <div>\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n      <pagination\\n        [maxSize]=\\\"10\\\"\\n        [totalItems]=\\\"totalItems\\\"\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        [(ngModel)]=\\\"currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\"\\n        nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 250px\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\nimport { BsDatepickerConfig, BsLocaleService, PageChangedEvent } from 'ngx-bootstrap';\n\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\n// models\nimport { ILogisticaSenha } from '../models/senha';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from './../../../../shared/templates/custom-table/models/config';\n\n// services\nimport { LogisticaSenhasService } from '../services/senhas.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RouterService } from './../../../../shared/services/core/router.service';\nimport { PNotifyService } from './../../../../shared/services/core/pnotify.service';\nimport { AtividadesService } from './../../../../shared/services/requests/atividades.service';\nimport { DateService } from './../../../../shared/services/core/date.service';\n\n@Component({\n  selector: 'logistica-senhas-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class LogisticaSenhasListaComponent implements OnInit {\n\n  form: FormGroup;\n\n  appTitle: string = \"Lista de senhas\";\n  breadCrumbTree: any = [];\n\n  bsConfig: Partial<BsDatepickerConfig>;\n  \n  /* Pagination */\n  itemsPerPage: number = 100;\n  currentPage: number = 1;\n  totalItems: any = 0;\n  begin: number = 0;\n  end: number = this.itemsPerPage;\n  /* Pagination */\n\n  senhas: ILogisticaSenha[] = [];\n\n  /*loading*/\n  loading = true;\n  loadingNavBar = false;\n  noResult = true;\n  /*loading*/\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  $activatedRouteSubscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private route: Router,\n    private routerService: RouterService,\n    private localeService: BsLocaleService,\n    private dateService: DateService,\n    private atividadesService: AtividadesService,\n    private pnotify: PNotifyService,\n    private senhasService: LogisticaSenhasService\n  ) { \n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit(): void {\n    this.buildForm();\n    this.registraAcesso()\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams\n      .subscribe(\n        (response) => {\n\n          let _response = this.routerService.getBase64UrlParams(response);\n\n          if (Object.keys(_response).length > 0)\n            this.form.patchValue(_response);\n\n          if (_response.hasOwnProperty('TT_REGI_PAGI'))\n            this.itemsPerPage = _response['TT_REGI_PAGI']\n\n          this.getSenhas(this.getParams())\n        }\n      )\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID_LOGI_SENH: [null],\n      DS_SENH: [null],\n      DS_USUA: [null],\n      DS_APLC: [null],\n      DT_INIC: [new Date()],\n      DT_FINA: [new Date()],\n      TT_REGI_PAGI: [100],\n      PAGI: [1],\n      TIME: [(new Date()).getTime()]\n    })\n  }\n\n  registraAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb() {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Logistica'\n      },\n      {\n        descricao: this.appTitle\n      }\n    ];\n  }\n\n  getSenhas(params){\n    if (!this.loading)\n      this.loadingNavBar = true;\n\n    this.senhasService\n      .getSenhas(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.senhas = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.senhas = [];\n            this.noResult = true;\n            this.pnotify.notice('Nenhum resultado para sua consulta.')\n          }\n        },\n        error => {\n          this.senhas = [];\n          this.noResult = true;\n          this.pnotify.error();\n        }\n      )\n  }\n\n  setItensPerPage(ev): number {\n    this.itemsPerPage = ev;\n    return this.itemsPerPage;\n  }\n\n  /* Paginação */\n  onPageChanged(event: PageChangedEvent): void {\n    this.form.get(\"PAGI\").setValue(event.page);\n    this.onSearch();\n  }\n  /* Paginação */\n\n  getParams() {\n\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop])\n        else\n          _params[prop] = _obj[prop]\n      }\n    }\n\n    return _params;\n\n  }\n\n  onSearch() {\n    this.form.get(\"TIME\").setValue((new Date()).getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\n    })\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n  // Validação de formulário\n\n  onReset(){\n    this.form.reset();\n  }\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from \"@angular/core\";\n\nimport { LogisticaSenhasListaComponent } from './lista/lista.component';\nimport { LogisticaSenhasCadastroComponent } from './cadastro/cadastro.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaSenhasListaComponent\n  },\n  {\n    path: 'novo',\n    component: LogisticaSenhasCadastroComponent\n  },\n  {\n    path: ':id',\n    component: LogisticaSenhasCadastroComponent\n  }\n]\n\n@NgModule({\n  imports:[RouterModule.forChild(routes)],\n  exports:[RouterModule]\n})\nexport class LogisticaSenhasModuleRouting{};"],"sourceRoot":"webpack:///"}